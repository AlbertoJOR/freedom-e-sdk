
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/debug/AHashCleanHW.elf:     file format elf32-littleriscv
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/debug/AHashCleanHW.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00008a8c memsz 0x00008a8c flags rwx
    LOAD off    0x00009e98 vaddr 0x80002e98 paddr 0x80002e98 align 2**12
         filesz 0x00000000 memsz 0x00000e64 flags rw-
    LOAD off    0x0000a000 vaddr 0x80000000 paddr 0x20408a90 align 2**12
         filesz 0x00002e98 memsz 0x00002e98 flags rw-
    LOAD off    0x0000ce98 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x0000ce98 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             00000196  20400000  20400000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text             00008080  20400200  20400200  00001200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata           00000808  20408280  20408280  00009280  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array       00000004  20408a88  20408a88  00009a88  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .data             00002e98  80000000  20408a90  0000a000  2**3  CONTENTS, ALLOC, LOAD, DATA
  5 .bss              00000264  80002e98  80002e98  00009e98  2**3  ALLOC
  6 .stack            00000400  800030fc  800030fc  00009e98  2**0  ALLOC
  7 .heap             00000800  800034fc  800034fc  00009e98  2**0  ALLOC
  8 .debug_info       000186c8  00000000  00000000  0000ce98  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev     00003b74  00000000  00000000  00025560  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges    00000a90  00000000  00000000  000290d8  2**3  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges     000012d0  00000000  00000000  00029b68  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_line       0000f49b  00000000  00000000  0002ae38  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_str        0000411e  00000000  00000000  0003a2d3  2**0  CONTENTS, READONLY, DEBUGGING
 14 .comment          00000028  00000000  00000000  0003e3f1  2**0  CONTENTS, READONLY
 15 .riscv.attributes 0000002b  00000000  00000000  0003e419  2**0  CONTENTS, READONLY
 16 .debug_frame      000028ec  00000000  00000000  0003e444  2**2  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc        00006236  00000000  00000000  00040d30  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
20400200 l    d  .text	00000000 .text
20408280 l    d  .rodata	00000000 .rodata
20408a88 l    d  .init_array	00000000 .init_array
80000000 l    d  .data	00000000 .data
80002e98 l    d  .bss	00000000 .bss
800030fc l    d  .stack	00000000 .stack
800034fc l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 libriscv__mmachine__freedom-e310-arty-xmem_a-entry.o
20400060 l       .init	00000000 early_trap_vector
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400136 l       .init	00000000 _skip_init
20408738 l       .rodata	00000000 argv
2040873c l       .rodata	00000000 envp
20408740 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 AHashCleanHW.c
20400200 l     F .text	00000404 ROUND
20400604 l     F .text	0000008e P12
80000000 l     O .data	0000001c bytes.1673
80002e9c l     O .bss	00000020 hash.1674
8000001c l     O .data	00002710 plain_text.1670
80002ebc l     O .bss	000000c8 performance.1671
80002f84 l     O .bss	00000020 hash2.1675
80002fa4 l     O .bss	000000c8 performance2.1672
00000000 l    df *ABS*	00000000 printf.c
20400a96 l     F .text	00000020 _out_null
20400ab6 l     F .text	00000032 _out_char
20400ae8 l     F .text	0000004e _strnlen_s
20400b36 l     F .text	00000038 _is_digit
20400b6e l     F .text	0000005e _atoi
20400bcc l     F .text	00000108 _out_rev
20400cd4 l     F .text	0000025e _ntoa_format
20400f32 l     F .text	00000104 _ntoa_long
20401036 l     F .text	0000012e _ntoa_long_long
20401164 l     F .text	000005d0 _ftoa
20401734 l     F .text	0000066c _etoa
20408570 l     O .rodata	00000050 pow10.2193
20401da0 l     F .text	00000b7c _vsnprintf
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 fixunsdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
8000306c l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 tty.c
20404c14 l     F .text	00000022 metal_tty_init
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20404cbe l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20404ce8 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20404d10 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20404d4c l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20404eac l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
204053de l     F .text	00000024 __metal_driver_cpu_hartid
20405402 l     F .text	0000002a __metal_driver_cpu_timebase
2040542c l     F .text	0000002a __metal_driver_cpu_interrupt_controller
00000000 l    df *ABS*	00000000 riscv_plic0.c
20406ce0 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20406d0a l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
20406d32 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20406d5a l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20406d82 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_gpio0.c
204072c6 l     F .text	00000026 __metal_driver_sifive_gpio0_base
204072ec l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20407316 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20407b7a l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20407ba4 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20407bd2 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20407bfa l     F .text	0000002e __metal_driver_sifive_uart0_clock
20407c28 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20407c52 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_output_selector
20407c7c l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20407e68 l     F .text	000000d8 pre_rate_change_callback_func
20407f40 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 libriscv__mmachine__freedom-e310-arty-xmem_a-vector.o
20408180 l       .text	00000000 IRQ_0
20408184 l       .text	00000000 IRQ_1
20408188 l       .text	00000000 IRQ_2
2040818c l       .text	00000000 IRQ_3
20408190 l       .text	00000000 IRQ_4
20408194 l       .text	00000000 IRQ_5
20408198 l       .text	00000000 IRQ_6
2040819c l       .text	00000000 IRQ_7
204081a0 l       .text	00000000 IRQ_8
204081a4 l       .text	00000000 IRQ_9
204081a8 l       .text	00000000 IRQ_10
204081ac l       .text	00000000 IRQ_11
204081b0 l       .text	00000000 IRQ_12
204081b4 l       .text	00000000 IRQ_13
204081b8 l       .text	00000000 IRQ_14
204081bc l       .text	00000000 IRQ_15
204081c0 l       .text	00000000 IRQ_LC0
204081c4 l       .text	00000000 IRQ_LC1
204081c8 l       .text	00000000 IRQ_LC2
204081cc l       .text	00000000 IRQ_LC3
204081d0 l       .text	00000000 IRQ_LC4
204081d4 l       .text	00000000 IRQ_LC5
204081d8 l       .text	00000000 IRQ_LC6
204081dc l       .text	00000000 IRQ_LC7
204081e0 l       .text	00000000 IRQ_LC8
204081e4 l       .text	00000000 IRQ_LC9
204081e8 l       .text	00000000 IRQ_LC10
204081ec l       .text	00000000 IRQ_LC11
204081f0 l       .text	00000000 IRQ_LC12
204081f4 l       .text	00000000 IRQ_LC13
204081f8 l       .text	00000000 IRQ_LC14
204081fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20408200 l     F .text	0000002e __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
8000272c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
20408a8c l       .init_array	00000000 __fini_array_end
20408a8c l       .init_array	00000000 __fini_array_start
20408a8c l       .init_array	00000000 __init_array_end
20408a88 l       .init_array	00000000 __preinit_array_end
20408a88 l       .init_array	00000000 __init_array_start
20408a88 l       .init_array	00000000 __preinit_array_start
20408a68 g     O .rodata	00000020 __metal_driver_vtable_sifive_uart0
20405c52  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20400a70 g     F .text	00000026 _putchar
20407dca g     F .text	0000009e __metal_driver_sifive_uart0_set_baud_rate
20405088 g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
20403b8a g     F .text	0000006a .hidden __eqdf2
20405bbc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20400888 g     F .text	0000001e rdcycle
20406442 g     F .text	00000038 __metal_valid_interrupt_id
20406866 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80003670 g       .data	00000000 __global_pointer$
20408042 g     F .text	00000054 _metal_clock_append_to_callbacks
20406dd2 g     F .text	00000038 __metal_plic0_complete_interrupt
204066c2 g     F .text	0000014e __metal_driver_riscv_cpu_controller_interrupt_register
2040811c g     F .text	0000002e metal_cpu_get
80002e50 g     O .data	00000020 __metal_dt_serial_10013000
20407754 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
2040874c g     O .rodata	0000004c __metal_driver_vtable_riscv_clint0
800030fc g       .bss	00000000 metal_segment_bss_target_end
20404d7c g     F .text	0000009a __metal_clint0_mtime_get
20406c74 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000000 g       *ABS*	00000000 __metal_chicken_bit
20407508 g     F .text	00000044 __metal_driver_sifive_gpio0_disable_input
20403bf4 g     F .text	000000a4 .hidden __gtdf2
2040499c g     F .text	0000000c __errno
08000000 g       .init_array	00000000 metal_segment_itim_target_start
20407ce6 g     F .text	00000032 __metal_driver_sifive_uart0_txready
20400070 g     F .init	0000000e __metal_synchronize_harts
80002e98 g       .bss	00000000 metal_segment_bss_target_start
20404e16 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
204079a4 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800030f8 g     O .bss	00000004 errno
00000400 g       *ABS*	00000000 __stack_size
20408096 g     F .text	00000030 metal_clock_register_pre_rate_change_callback
20405f40  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204089a0 g     O .rodata	0000004c __metal_driver_vtable_riscv_plic0
20408960 g     O .rodata	00000040 __metal_driver_vtable_cpu
20404c90 g     F .text	0000002e metal_uart_set_baud_rate
20407f70 g     F .text	000000d2 __metal_driver_sifive_uart0_init
204068fa g     F .text	00000072 __metal_driver_cpu_mcycle_get
800034fc g       .heap	00000000 metal_segment_heap_target_start
80002e84 g     O .data	00000004 __metal_dt_cpu_0
2040482e g     F .text	0000006a .hidden __floatsidf
20405eaa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20403c98 g     F .text	000000a4 .hidden __ltdf2
20406198  w    F .text	00000096 metal_lc13_interrupt_vector_handler
204055c4 g     F .text	00000018 __metal_default_exception_handler
204053aa g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20406e6e g     F .text	00000062 __metal_plic0_set_priority
20406882 g     F .text	0000005c __metal_driver_riscv_cpu_controller_set_vector_mode
204047d2 g     F .text	0000005c .hidden __fixunsdfsi
20405456 g     F .text	00000030 __metal_driver_cpu_get
20408914 g     O .rodata	0000004c __metal_driver_vtable_riscv_cpu_intc
204054b8 g     F .text	00000018 __metal_interrupt_global_disable
20405e14  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20405fd6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
2040727e g     F .text	00000048 __metal_driver_riscv_plic0_disable
20406536 g     F .text	0000004e __metal_exception_register
20406a8e g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
204075e6 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
204056b4 g     F .text	00000068 __metal_default_sw_handler
20403062 g     F .text	000005f2 .hidden __adddf3
204080c6 g     F .text	00000030 metal_clock_register_post_rate_change_callback
20407ca6 g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
20402d10 g     F .text	00000352 .hidden __umoddi3
204076ac g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
80002e8c g     O .data	00000008 __metal_driver_vtable_fixed_clock
80002e74 g     O .data	00000004 _global_impure_ptr
2040571c  w    F .text	00000092 metal_timer_interrupt_vector_handler
20404a0c g     F .text	0000006a __libc_init_array
20407626 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2040606c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
204029b2 g     F .text	0000035e .hidden __udivdi3
20404898 g     F .text	00000050 .hidden __floatunsidf
20406810 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
204075a0 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20400174 g     F .init	00000002 _init
2040551a g     F .text	0000001a __metal_interrupt_timer_disable
2040779e g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20406b4c g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20408a2c g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
204076ec g     F .text	00000068 __metal_driver_sifive_gpio0_enable_io
204049d4 g     F .text	00000038 __libc_fini_array
20407b2c g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20406ad6 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
2040476e g     F .text	00000064 .hidden __fixdfsi
80000000 g       .data	00000000 metal_segment_data_target_start
2040556c g     F .text	0000002c __metal_interrupt_local_enable
20405376 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20404bc2 g     F .text	0000002c metal_tty_putc
20406f90 g     F .text	00000018 __metal_plic0_default_handler
20402972 g     F .text	00000012 write
8000278c g     O .data	0000000c __metal_dt_clock_0
20403c98 g     F .text	000000a4 .hidden __ledf2
00000800 g       *ABS*	00000000 __heap_size
20405550 g     F .text	0000001c __metal_interrupt_external_disable
20407cc4 g     F .text	00000022 __metal_driver_sifive_uart0_get_interrupt_id
204068de g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20406584 g     F .text	0000013e __metal_driver_riscv_cpu_controller_interrupt_init
204048e8 g     F .text	0000003c .hidden __clzsi2
20406c2e g     F .text	00000046 __metal_driver_cpu_exception_register
204054d0 g     F .text	00000018 __metal_interrupt_software_enable
20405a90  w    F .text	00000096 metal_lc1_interrupt_vector_handler
80002e98 g     O .bss	00000004 _global_atexit
2040635a g     F .text	00000050 __metal_controller_interrupt_vector_mode
20404afa g     F .text	000000c8 __call_exitprocs
800034fc g       .stack	00000000 _sp
2040007e g     F .init	00000000 _start
20406c0e g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20406ca2 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20405534 g     F .text	0000001c __metal_interrupt_external_enable
20404a76 g     F .text	00000084 __register_exitproc
20407d18 g     F .text	0000003e __metal_driver_sifive_uart0_putc
20407036 g     F .text	0000013e __metal_driver_riscv_plic0_init
20407236 g     F .text	00000048 __metal_driver_riscv_plic0_enable
20407574 g     F .text	0000002c __metal_driver_sifive_gpio0_output
20405d7e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20405486 g     F .text	0000001a __metal_myhart_id
20407b4c g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
204008a6 g     F .text	00000048 HASH
20405622  w    F .text	00000092 metal_software_interrupt_vector_handler
2040683a g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20407daa g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20400692 g     F .text	000001f6 crypto_hash
20404f6a g     F .text	000000da __metal_driver_riscv_clint0_register
80002e7c g     O .data	00000008 __metal_dt_clint_2000000
20403654 g     F .text	00000536 .hidden __divdf3
20403d3c g     F .text	0000043c .hidden __muldf3
204074ca g     F .text	0000003e __metal_driver_sifive_gpio0_enable_input
20400176  w    F .init	00000000 secondary_main
204055f4  w    F .text	0000002e metal_interrupt_vector_handler
20406e42 g     F .text	0000002c __metal_plic0_get_threshold
2040647a g     F .text	000000bc __metal_local_interrupt_enable
20405240 g     F .text	00000136 __metal_driver_riscv_clint0_command_request
20405ce8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
204008ee g     F .text	00000182 main
80002e98 g       .data	00000000 metal_segment_data_target_end
20406aea g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20406bae g     F .text	00000060 __metal_driver_cpu_get_msip
20408164 g     F .text	0000000e metal_shutdown
08000000 g       .init_array	00000000 metal_segment_itim_target_end
20406cc0 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20406da4 g     F .text	0000002e __metal_plic0_claim_interrupt
20406102  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040506c g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
2040696c g     F .text	00000046 __metal_driver_cpu_timebase_get
20400000 g       .init	00000000 _enter
2040814a g     F .text	0000001a metal_cpu_get_current_hartid
20408180 g       .text	00000000 __metal_vector_table
20408a90 g       *ABS*	00000000 metal_segment_itim_source_start
80002e78  w    O .data	00000004 __metal_cpu_table
20403b8a g     F .text	0000006a .hidden __nedf2
80002798 g     O .data	000003b8 __metal_dt_cpu_0_interrupt_controller
20400174 g     F .init	00000002 _fini
20408638 g     O .rodata	00000100 .hidden __clz_tab
204054a0 g     F .text	00000018 __metal_interrupt_global_enable
20404992 g     F .text	0000000a atexit
20404bee g     F .text	00000026 metal_tty_putc_raw
20402984 g     F .text	0000002e _write_r
20405500 g     F .text	0000001a __metal_interrupt_timer_enable
20407d56 g     F .text	00000054 __metal_driver_sifive_uart0_getc
2040518e g     F .text	000000b2 __metal_driver_riscv_clint0_disable
80002e70 g     O .data	00000004 _impure_ptr
20406a18 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
2040822e g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
204050dc g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20408a90 g       *ABS*	00000000 metal_segment_data_source_start
80003cfc g       .heap	00000000 metal_segment_heap_target_end
204063aa g     F .text	00000098 __metal_controller_interrupt_vector
80002b50 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20407666 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
2040291c g     F .text	00000056 printf_
204057ae g     F .text	00000066 __metal_default_timer_handler
20404924 g     F .text	0000006e _write
20406fa8 g     F .text	0000008e __metal_plic0_handler
20405b26  w    F .text	00000096 metal_lc2_interrupt_vector_handler
204062c4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
204080f6 g     F .text	00000026 metal_cpu_interrupt_controller
204049a8 g     F .text	0000002c exit
2040824c g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
80002e88 g     O .data	00000004 __metal_dt_gpio_10012000
204055dc g     F .text	00000018 __metal_default_interrupt_handler
20404c62 g     F .text	0000002e metal_uart_putc
2040754c g     F .text	00000028 __metal_driver_sifive_gpio0_input
20405880 g     F .text	00000154 __metal_exception_handler
204059fa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
2040826e g     F .text	00000012 _exit
204069b2 g     F .text	00000066 __metal_driver_cpu_mtime_get
20405044 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20403bf4 g     F .text	000000a4 .hidden __gedf2
2040622e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20404ee2 g     F .text	00000088 __metal_driver_riscv_clint0_init
20404178 g     F .text	000005f6 .hidden __subdf3
20406aa8 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20406f04 g     F .text	0000008c __metal_plic0_enable
2040006e  w      .init	00000000 __register_frame_info
20406abc g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20405598 g     F .text	0000002c __metal_interrupt_local_disable
204054e8 g     F .text	00000018 __metal_interrupt_software_disable
20406ed0 g     F .text	00000034 __metal_plic0_get_priority
20404c36 g     F .text	0000002c metal_uart_init
20406e0a g     F .text	00000038 __metal_plic0_set_threshold
00000000 g       *ABS*	00000000 __metal_boot_hart
20407174 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc03197          	auipc	gp,0x5fc03
20400004:	67018193          	addi	gp,gp,1648 # 80003670 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:29
.option pop

    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400008:	00000297          	auipc	t0,0x0
2040000c:	05828293          	addi	t0,t0,88 # 20400060 <early_trap_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:30
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:32
    /* enable chicken bit if core is bullet series*/
    la t0, __metal_chicken_bit
20400014:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:33
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:34
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:43
     * C, so here we set up a C environment.  First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
20400020:	dfc00117          	auipc	sp,0xdfc00
20400024:	fe010113          	addi	sp,sp,-32 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:52
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    .weak __metal_before_start
    la ra, __metal_before_start
20400028:	dfc00097          	auipc	ra,0xdfc00
2040002c:	fd808093          	addi	ra,ra,-40 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:53
    beqz ra, 1f
20400030:	00008363          	beqz	ra,20400036 <_enter+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:54
    jalr ra
20400034:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:60
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400036:	f1402573          	csrr	a0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:61
    li a1, 0
2040003a:	4581                	li	a1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:62
    li a2, 0
2040003c:	4601                	li	a2,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:63
    call _start
2040003e:	2081                	jal	2040007e <_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:68

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400040:	dfc00097          	auipc	ra,0xdfc00
20400044:	fc008093          	addi	ra,ra,-64 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:69
    beqz ra, 1f
20400048:	00008363          	beqz	ra,2040004e <_enter+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:70
    jalr ra
2040004c:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:75
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2040004e:	00000297          	auipc	t0,0x0
20400052:	00c28293          	addi	t0,t0,12 # 2040005a <_enter+0x5a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:76
     csrw mtvec, t0
20400056:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:78
1:
     lw t1, 0(x0)
2040005a:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:79
     j 1b
2040005e:	bff5                	j	2040005a <_enter+0x5a>

20400060 <early_trap_vector>:
early_trap_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:89
 * you end up here then there's a bug in the early boot code somewhere. */
.section .text.metal.init.trapvec
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400060:	342022f3          	csrr	t0,mcause
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:90
    csrr t1, mepc
20400064:	34102373          	csrr	t1,mepc
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:91
    csrr t2, mtval
20400068:	343023f3          	csrr	t2,mtval
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:92
    j early_trap_vector
2040006c:	bfd5                	j	20400060 <early_trap_vector>

2040006e <__register_frame_info>:
__register_frame_info():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:105
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2040006e:	8082                	ret

20400070 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init")))
void __metal_synchronize_harts() {
20400070:	1141                	addi	sp,sp,-16
20400072:	c622                	sw	s0,12(sp)
20400074:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:61
        /* Wait for hart 0 to clear the MSIP bit */
        while (METAL_MSIP(msip_base, hart) == 1) ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400076:	0001                	nop
20400078:	4432                	lw	s0,12(sp)
2040007a:	0141                	addi	sp,sp,16
2040007c:	8082                	ret

2040007e <_start>:
_start():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
2040007e:	8406                	mv	s0,ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400080:	5fc03197          	auipc	gp,0x5fc03
20400084:	5f018193          	addi	gp,gp,1520 # 80003670 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:51

  /* The METAL is designed for a bare-metal environment and therefor is expected
   * to define its own stack pointer.  We also align the stack pointer here
   * because the only RISC-V ABI that's currently defined mandates 16-byte
   * stack alignment. */
  la sp, _sp
20400088:	e8c18113          	addi	sp,gp,-372 # 800034fc <_sp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:54

  /* Increment by hartid number of stack sizes */
  li t0, 0
2040008c:	4281                	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:55
  la t1, __stack_size
2040008e:	40000313          	li	t1,1024
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:57
1:
  beq t0, a0, 1f
20400092:	00a28563          	beq	t0,a0,2040009c <_start+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:58
  add sp, sp, t1
20400096:	911a                	add	sp,sp,t1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:59
  addi t0, t0, 1
20400098:	0285                	addi	t0,t0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:60
  j 1b
2040009a:	bfe5                	j	20400092 <_start+0x14>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:62
1:
  andi sp, sp, -16
2040009c:	ff017113          	andi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:65

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
204000a0:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:66
  bne a0, t0, _skip_init
204000a4:	08551963          	bne	a0,t0,20400136 <_skip_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:75
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
204000a8:	00009297          	auipc	t0,0x9
204000ac:	9e828293          	addi	t0,t0,-1560 # 20408a90 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:76
  la t1, metal_segment_data_target_start
204000b0:	5fc00317          	auipc	t1,0x5fc00
204000b4:	f5030313          	addi	t1,t1,-176 # 80000000 <metal_segment_data_target_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:77
  la t2, metal_segment_data_target_end
204000b8:	82818393          	addi	t2,gp,-2008 # 80002e98 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:79

  beq t0, t1, 2f
204000bc:	00628c63          	beq	t0,t1,204000d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:80
  bge t1, t2, 2f
204000c0:	00735a63          	bge	t1,t2,204000d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:84

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204000c4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  addi t0, t0, 4
204000c8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  sw   a0, 0(t1)
204000ca:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:87
  addi t1, t1, 4
204000ce:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:88
  blt  t1, t2, 1b
204000d0:	fe734ae3          	blt	t1,t2,204000c4 <_start+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:99
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
204000d4:	00009297          	auipc	t0,0x9
204000d8:	9bc28293          	addi	t0,t0,-1604 # 20408a90 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:100
  la t1, metal_segment_itim_target_start
204000dc:	e7c00317          	auipc	t1,0xe7c00
204000e0:	f2430313          	addi	t1,t1,-220 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:101
  la t2, metal_segment_itim_target_end
204000e4:	e7c00397          	auipc	t2,0xe7c00
204000e8:	f1c38393          	addi	t2,t2,-228 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:103

  beq t0, t1, 2f
204000ec:	00628c63          	beq	t0,t1,20400104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:104
  bge t1, t2, 2f
204000f0:	00735a63          	bge	t1,t2,20400104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:108

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204000f4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:109
  addi t0, t0, 4
204000f8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:110
  sw   a0, 0(t1)
204000fa:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:111
  addi t1, t1, 4
204000fe:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:112
  blt  t1, t2, 1b
20400100:	fe734ae3          	blt	t1,t2,204000f4 <_start+0x76>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:124
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
20400104:	0000100f          	fence.i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:127

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20400108:	5fc03317          	auipc	t1,0x5fc03
2040010c:	d9030313          	addi	t1,t1,-624 # 80002e98 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:128
  la t2, metal_segment_bss_target_end
20400110:	a8c18393          	addi	t2,gp,-1396 # 800030fc <metal_segment_bss_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:130

  bge t1, t2, 2f
20400114:	00735763          	bge	t1,t2,20400122 <_start+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:134

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20400118:	00032023          	sw	zero,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:135
  addi t1, t1, 4
2040011c:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:136
  blt  t1, t2, 1b
2040011e:	fe734de3          	blt	t1,t2,20400118 <_start+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:147
2:

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400122:	c211                	beqz	a2,20400126 <_start+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:148
  jalr a2
20400124:	9602                	jalr	a2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:152
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400126:	00005517          	auipc	a0,0x5
2040012a:	8ae50513          	addi	a0,a0,-1874 # 204049d4 <__libc_fini_array>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:153
  call atexit
2040012e:	065040ef          	jal	ra,20404992 <atexit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:154
  call __libc_init_array
20400132:	0db040ef          	jal	ra,20404a0c <__libc_init_array>

20400136 <_skip_init>:
_skip_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:160

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400136:	3f2d                	jal	20400070 <__metal_synchronize_harts>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:163

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  csrr a5, misa
20400138:	301027f3          	csrr	a5,misa
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:164
  li   a4, 0x10028
2040013c:	00010737          	lui	a4,0x10
20400140:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:165
  and  a5, a5, a4
20400144:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:166
  beqz a5, 1f
20400146:	cb89                	beqz	a5,20400158 <_skip_init+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  csrr a5, mstatus
20400148:	300027f3          	csrr	a5,mstatus
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:168
  lui  a4, 0x2
2040014c:	6709                	lui	a4,0x2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:169
  or   a5, a5, a4
2040014e:	8fd9                	or	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:170
  csrw mstatus, a5
20400150:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:171
  csrwi fcsr, 0
20400154:	00305073          	csrwi	fcsr,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:177
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20400158:	4505                	li	a0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  la a1, argv  /* argv = {"libgloss", NULL} */
2040015a:	00008597          	auipc	a1,0x8
2040015e:	5de58593          	addi	a1,a1,1502 # 20408738 <argv>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  la a2, envp  /* envp = {NULL} */
20400162:	00008617          	auipc	a2,0x8
20400166:	5da60613          	addi	a2,a2,1498 # 2040873c <envp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:180
  call secondary_main
2040016a:	2031                	jal	20400176 <secondary_main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:186

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2040016c:	03d040ef          	jal	ra,204049a8 <exit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:191

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
20400170:	80a2                	mv	ra,s0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:192
  ret
20400172:	8082                	ret

20400174 <_fini>:
_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:204
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
20400174:	8082                	ret

20400176 <secondary_main>:
secondary_main():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:215
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
20400176:	1141                	addi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:217
#if __riscv_xlen == 32
  sw ra, 4(sp)
20400178:	c206                	sw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:221
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
2040017a:	f14022f3          	csrr	t0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  la t1, __metal_boot_hart
2040017e:	00000313          	li	t1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  beq t0, t1, 2f
20400182:	00628563          	beq	t0,t1,2040018c <secondary_main+0x16>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:225
1:
  wfi
20400186:	10500073          	wfi
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  j 1b
2040018a:	bff5                	j	20400186 <secondary_main+0x10>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:228
2:
  call main
2040018c:	762000ef          	jal	ra,204008ee <main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:230
#if __riscv_xlen == 32
  lw ra, 4(sp)
20400190:	4092                	lw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:234
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
20400192:	0141                	addi	sp,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  ret
20400194:	8082                	ret

Disassembly of section .text:

20400200 <ROUND>:
ROUND():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:47
    }
    return res;

}

static inline void ROUND(ascon_state_t *s, u32 C) {
20400200:	711d                	addi	sp,sp,-96
20400202:	cea2                	sw	s0,92(sp)
20400204:	1080                	addi	s0,sp,96
20400206:	faa42623          	sw	a0,-84(s0)
2040020a:	fab42423          	sw	a1,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:50
    ascon_state_t t;
    // addition of round constant
    s->xl[2] ^=C;
2040020e:	fac42783          	lw	a5,-84(s0)
20400212:	4fd8                	lw	a4,28(a5)
20400214:	fa842783          	lw	a5,-88(s0)
20400218:	8f3d                	xor	a4,a4,a5
2040021a:	fac42783          	lw	a5,-84(s0)
2040021e:	cfd8                	sw	a4,28(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:54
    // printstate(" round constant", s);
    // substitution layer

    s->xh[0] ^= s->xh[4];
20400220:	fac42783          	lw	a5,-84(s0)
20400224:	4398                	lw	a4,0(a5)
20400226:	fac42783          	lw	a5,-84(s0)
2040022a:	4b9c                	lw	a5,16(a5)
2040022c:	8f3d                	xor	a4,a4,a5
2040022e:	fac42783          	lw	a5,-84(s0)
20400232:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:55
    s->xl[0] ^= s->xl[4];
20400234:	fac42783          	lw	a5,-84(s0)
20400238:	4bd8                	lw	a4,20(a5)
2040023a:	fac42783          	lw	a5,-84(s0)
2040023e:	53dc                	lw	a5,36(a5)
20400240:	8f3d                	xor	a4,a4,a5
20400242:	fac42783          	lw	a5,-84(s0)
20400246:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:57

    s->xh[4] ^= s->xh[3];
20400248:	fac42783          	lw	a5,-84(s0)
2040024c:	4b98                	lw	a4,16(a5)
2040024e:	fac42783          	lw	a5,-84(s0)
20400252:	47dc                	lw	a5,12(a5)
20400254:	8f3d                	xor	a4,a4,a5
20400256:	fac42783          	lw	a5,-84(s0)
2040025a:	cb98                	sw	a4,16(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:58
    s->xl[4] ^= s->xl[3];
2040025c:	fac42783          	lw	a5,-84(s0)
20400260:	53d8                	lw	a4,36(a5)
20400262:	fac42783          	lw	a5,-84(s0)
20400266:	539c                	lw	a5,32(a5)
20400268:	8f3d                	xor	a4,a4,a5
2040026a:	fac42783          	lw	a5,-84(s0)
2040026e:	d3d8                	sw	a4,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:60

    s->xh[2] ^= s->xh[1];
20400270:	fac42783          	lw	a5,-84(s0)
20400274:	4798                	lw	a4,8(a5)
20400276:	fac42783          	lw	a5,-84(s0)
2040027a:	43dc                	lw	a5,4(a5)
2040027c:	8f3d                	xor	a4,a4,a5
2040027e:	fac42783          	lw	a5,-84(s0)
20400282:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:61
    s->xl[2] ^= s->xl[1];
20400284:	fac42783          	lw	a5,-84(s0)
20400288:	4fd8                	lw	a4,28(a5)
2040028a:	fac42783          	lw	a5,-84(s0)
2040028e:	4f9c                	lw	a5,24(a5)
20400290:	8f3d                	xor	a4,a4,a5
20400292:	fac42783          	lw	a5,-84(s0)
20400296:	cfd8                	sw	a4,28(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:63
    // start of keccak s-box
    t.xh[0] = s->xh[0] ^ (~s->xh[1] & s->xh[2]);
20400298:	fac42783          	lw	a5,-84(s0)
2040029c:	4398                	lw	a4,0(a5)
2040029e:	fac42783          	lw	a5,-84(s0)
204002a2:	43dc                	lw	a5,4(a5)
204002a4:	fff7c693          	not	a3,a5
204002a8:	fac42783          	lw	a5,-84(s0)
204002ac:	479c                	lw	a5,8(a5)
204002ae:	8ff5                	and	a5,a5,a3
204002b0:	8fb9                	xor	a5,a5,a4
204002b2:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:64
    t.xl[0] = s->xl[0] ^ (~s->xl[1] & s->xl[2]);
204002b6:	fac42783          	lw	a5,-84(s0)
204002ba:	4bd8                	lw	a4,20(a5)
204002bc:	fac42783          	lw	a5,-84(s0)
204002c0:	4f9c                	lw	a5,24(a5)
204002c2:	fff7c693          	not	a3,a5
204002c6:	fac42783          	lw	a5,-84(s0)
204002ca:	4fdc                	lw	a5,28(a5)
204002cc:	8ff5                	and	a5,a5,a3
204002ce:	8fb9                	xor	a5,a5,a4
204002d0:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:66

    t.xh[1] = s->xh[1] ^ (~s->xh[2] & s->xh[3]);
204002d4:	fac42783          	lw	a5,-84(s0)
204002d8:	43d8                	lw	a4,4(a5)
204002da:	fac42783          	lw	a5,-84(s0)
204002de:	479c                	lw	a5,8(a5)
204002e0:	fff7c693          	not	a3,a5
204002e4:	fac42783          	lw	a5,-84(s0)
204002e8:	47dc                	lw	a5,12(a5)
204002ea:	8ff5                	and	a5,a5,a3
204002ec:	8fb9                	xor	a5,a5,a4
204002ee:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:67
    t.xl[1] = s->xl[1] ^ (~s->xl[2] & s->xl[3]);
204002f2:	fac42783          	lw	a5,-84(s0)
204002f6:	4f98                	lw	a4,24(a5)
204002f8:	fac42783          	lw	a5,-84(s0)
204002fc:	4fdc                	lw	a5,28(a5)
204002fe:	fff7c693          	not	a3,a5
20400302:	fac42783          	lw	a5,-84(s0)
20400306:	539c                	lw	a5,32(a5)
20400308:	8ff5                	and	a5,a5,a3
2040030a:	8fb9                	xor	a5,a5,a4
2040030c:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:69

    t.xh[2] = s->xh[2] ^ (~s->xh[3] & s->xh[4]);
20400310:	fac42783          	lw	a5,-84(s0)
20400314:	4798                	lw	a4,8(a5)
20400316:	fac42783          	lw	a5,-84(s0)
2040031a:	47dc                	lw	a5,12(a5)
2040031c:	fff7c693          	not	a3,a5
20400320:	fac42783          	lw	a5,-84(s0)
20400324:	4b9c                	lw	a5,16(a5)
20400326:	8ff5                	and	a5,a5,a3
20400328:	8fb9                	xor	a5,a5,a4
2040032a:	fcf42823          	sw	a5,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:70
    t.xl[2] = s->xl[2] ^ (~s->xl[3] & s->xl[4]);
2040032e:	fac42783          	lw	a5,-84(s0)
20400332:	4fd8                	lw	a4,28(a5)
20400334:	fac42783          	lw	a5,-84(s0)
20400338:	539c                	lw	a5,32(a5)
2040033a:	fff7c693          	not	a3,a5
2040033e:	fac42783          	lw	a5,-84(s0)
20400342:	53dc                	lw	a5,36(a5)
20400344:	8ff5                	and	a5,a5,a3
20400346:	8fb9                	xor	a5,a5,a4
20400348:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:72

    t.xh[3] = s->xh[3] ^ (~s->xh[4] & s->xh[0]);
2040034c:	fac42783          	lw	a5,-84(s0)
20400350:	47d8                	lw	a4,12(a5)
20400352:	fac42783          	lw	a5,-84(s0)
20400356:	4b9c                	lw	a5,16(a5)
20400358:	fff7c693          	not	a3,a5
2040035c:	fac42783          	lw	a5,-84(s0)
20400360:	439c                	lw	a5,0(a5)
20400362:	8ff5                	and	a5,a5,a3
20400364:	8fb9                	xor	a5,a5,a4
20400366:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:73
    t.xl[3] = s->xl[3] ^ (~s->xl[4] & s->xl[0]);
2040036a:	fac42783          	lw	a5,-84(s0)
2040036e:	5398                	lw	a4,32(a5)
20400370:	fac42783          	lw	a5,-84(s0)
20400374:	53dc                	lw	a5,36(a5)
20400376:	fff7c693          	not	a3,a5
2040037a:	fac42783          	lw	a5,-84(s0)
2040037e:	4bdc                	lw	a5,20(a5)
20400380:	8ff5                	and	a5,a5,a3
20400382:	8fb9                	xor	a5,a5,a4
20400384:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:75

    t.xh[4] = s->xh[4] ^ (~s->xh[0] & s->xh[1]);
20400388:	fac42783          	lw	a5,-84(s0)
2040038c:	4b98                	lw	a4,16(a5)
2040038e:	fac42783          	lw	a5,-84(s0)
20400392:	439c                	lw	a5,0(a5)
20400394:	fff7c693          	not	a3,a5
20400398:	fac42783          	lw	a5,-84(s0)
2040039c:	43dc                	lw	a5,4(a5)
2040039e:	8ff5                	and	a5,a5,a3
204003a0:	8fb9                	xor	a5,a5,a4
204003a2:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:76
    t.xl[4] = s->xl[4] ^ (~s->xl[0] & s->xl[1]);
204003a6:	fac42783          	lw	a5,-84(s0)
204003aa:	53d8                	lw	a4,36(a5)
204003ac:	fac42783          	lw	a5,-84(s0)
204003b0:	4bdc                	lw	a5,20(a5)
204003b2:	fff7c693          	not	a3,a5
204003b6:	fac42783          	lw	a5,-84(s0)
204003ba:	4f9c                	lw	a5,24(a5)
204003bc:	8ff5                	and	a5,a5,a3
204003be:	8fb9                	xor	a5,a5,a4
204003c0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:78
    // end of keccak s-box
    t.xh[1] ^= t.xh[0];
204003c4:	fcc42703          	lw	a4,-52(s0)
204003c8:	fc842783          	lw	a5,-56(s0)
204003cc:	8fb9                	xor	a5,a5,a4
204003ce:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:79
    t.xh[0] ^= t.xh[4];
204003d2:	fc842703          	lw	a4,-56(s0)
204003d6:	fd842783          	lw	a5,-40(s0)
204003da:	8fb9                	xor	a5,a5,a4
204003dc:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:80
    t.xh[3] ^= t.xh[2];
204003e0:	fd442703          	lw	a4,-44(s0)
204003e4:	fd042783          	lw	a5,-48(s0)
204003e8:	8fb9                	xor	a5,a5,a4
204003ea:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:81
    t.xh[2] = ~t.xh[2];
204003ee:	fd042783          	lw	a5,-48(s0)
204003f2:	fff7c793          	not	a5,a5
204003f6:	fcf42823          	sw	a5,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:82
    t.xl[1] ^= t.xl[0];
204003fa:	fe042703          	lw	a4,-32(s0)
204003fe:	fdc42783          	lw	a5,-36(s0)
20400402:	8fb9                	xor	a5,a5,a4
20400404:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:83
    t.xl[0] ^= t.xl[4];
20400408:	fdc42703          	lw	a4,-36(s0)
2040040c:	fec42783          	lw	a5,-20(s0)
20400410:	8fb9                	xor	a5,a5,a4
20400412:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:84
    t.xl[3] ^= t.xl[2];
20400416:	fe842703          	lw	a4,-24(s0)
2040041a:	fe442783          	lw	a5,-28(s0)
2040041e:	8fb9                	xor	a5,a5,a4
20400420:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:85
    t.xl[2] = ~t.xl[2];
20400424:	fe442783          	lw	a5,-28(s0)
20400428:	fff7c793          	not	a5,a5
2040042c:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:91
    // printstate(" substitution layer", &t);
    u64  ror1;
    u64  ror2;
    //linear diffusion layer

    s->xh[0] = t.xh[0] ^ RORH(19,t.xh[0],t.xl[0]) ^ RORH(28,t.xh[0], t.xl[0]);
20400430:	fc842703          	lw	a4,-56(s0)
20400434:	fdc42783          	lw	a5,-36(s0)
20400438:	00d79693          	slli	a3,a5,0xd
2040043c:	fc842783          	lw	a5,-56(s0)
20400440:	83cd                	srli	a5,a5,0x13
20400442:	8fd5                	or	a5,a5,a3
20400444:	8f3d                	xor	a4,a4,a5
20400446:	fdc42783          	lw	a5,-36(s0)
2040044a:	00479693          	slli	a3,a5,0x4
2040044e:	fc842783          	lw	a5,-56(s0)
20400452:	83f1                	srli	a5,a5,0x1c
20400454:	8fd5                	or	a5,a5,a3
20400456:	8f3d                	xor	a4,a4,a5
20400458:	fac42783          	lw	a5,-84(s0)
2040045c:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:92
    s->xl[0] = t.xl[0] ^ RORL(19,t.xh[0],t.xl[0]) ^ RORL(28,t.xh[0], t.xl[0]);
2040045e:	fdc42703          	lw	a4,-36(s0)
20400462:	fc842783          	lw	a5,-56(s0)
20400466:	00d79693          	slli	a3,a5,0xd
2040046a:	fdc42783          	lw	a5,-36(s0)
2040046e:	83cd                	srli	a5,a5,0x13
20400470:	8fd5                	or	a5,a5,a3
20400472:	8f3d                	xor	a4,a4,a5
20400474:	fc842783          	lw	a5,-56(s0)
20400478:	00479693          	slli	a3,a5,0x4
2040047c:	fdc42783          	lw	a5,-36(s0)
20400480:	83f1                	srli	a5,a5,0x1c
20400482:	8fd5                	or	a5,a5,a3
20400484:	8f3d                	xor	a4,a4,a5
20400486:	fac42783          	lw	a5,-84(s0)
2040048a:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:94

    s->xh[1] = t.xh[1] ^ RORH(61,t.xh[1],t.xl[1]) ^ RORH(39,t.xh[1], t.xl[1]);
2040048c:	fcc42703          	lw	a4,-52(s0)
20400490:	fcc42783          	lw	a5,-52(s0)
20400494:	00379693          	slli	a3,a5,0x3
20400498:	fe042783          	lw	a5,-32(s0)
2040049c:	83f5                	srli	a5,a5,0x1d
2040049e:	8fd5                	or	a5,a5,a3
204004a0:	8f3d                	xor	a4,a4,a5
204004a2:	fcc42783          	lw	a5,-52(s0)
204004a6:	01979693          	slli	a3,a5,0x19
204004aa:	fe042783          	lw	a5,-32(s0)
204004ae:	839d                	srli	a5,a5,0x7
204004b0:	8fd5                	or	a5,a5,a3
204004b2:	8f3d                	xor	a4,a4,a5
204004b4:	fac42783          	lw	a5,-84(s0)
204004b8:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:95
    s->xl[1] = t.xl[1] ^ RORL(61,t.xh[1],t.xl[1]) ^ RORL(39,t.xh[1], t.xl[1]);
204004ba:	fe042703          	lw	a4,-32(s0)
204004be:	fe042783          	lw	a5,-32(s0)
204004c2:	00379693          	slli	a3,a5,0x3
204004c6:	fcc42783          	lw	a5,-52(s0)
204004ca:	83f5                	srli	a5,a5,0x1d
204004cc:	8fd5                	or	a5,a5,a3
204004ce:	8f3d                	xor	a4,a4,a5
204004d0:	fe042783          	lw	a5,-32(s0)
204004d4:	01979693          	slli	a3,a5,0x19
204004d8:	fcc42783          	lw	a5,-52(s0)
204004dc:	839d                	srli	a5,a5,0x7
204004de:	8fd5                	or	a5,a5,a3
204004e0:	8f3d                	xor	a4,a4,a5
204004e2:	fac42783          	lw	a5,-84(s0)
204004e6:	cf98                	sw	a4,24(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:97

    s->xh[2] = t.xh[2] ^ RORH(1,t.xh[2],t.xl[2]) ^ RORH(6,t.xh[2], t.xl[2]);
204004e8:	fd042703          	lw	a4,-48(s0)
204004ec:	fe442783          	lw	a5,-28(s0)
204004f0:	01f79693          	slli	a3,a5,0x1f
204004f4:	fd042783          	lw	a5,-48(s0)
204004f8:	8385                	srli	a5,a5,0x1
204004fa:	8fd5                	or	a5,a5,a3
204004fc:	8f3d                	xor	a4,a4,a5
204004fe:	fe442783          	lw	a5,-28(s0)
20400502:	01a79693          	slli	a3,a5,0x1a
20400506:	fd042783          	lw	a5,-48(s0)
2040050a:	8399                	srli	a5,a5,0x6
2040050c:	8fd5                	or	a5,a5,a3
2040050e:	8f3d                	xor	a4,a4,a5
20400510:	fac42783          	lw	a5,-84(s0)
20400514:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:98
    s->xl[2] = t.xl[2] ^ RORL(1,t.xh[2],t.xl[2]) ^ RORL(6,t.xh[2], t.xl[2]);
20400516:	fe442703          	lw	a4,-28(s0)
2040051a:	fd042783          	lw	a5,-48(s0)
2040051e:	01f79693          	slli	a3,a5,0x1f
20400522:	fe442783          	lw	a5,-28(s0)
20400526:	8385                	srli	a5,a5,0x1
20400528:	8fd5                	or	a5,a5,a3
2040052a:	8f3d                	xor	a4,a4,a5
2040052c:	fd042783          	lw	a5,-48(s0)
20400530:	01a79693          	slli	a3,a5,0x1a
20400534:	fe442783          	lw	a5,-28(s0)
20400538:	8399                	srli	a5,a5,0x6
2040053a:	8fd5                	or	a5,a5,a3
2040053c:	8f3d                	xor	a4,a4,a5
2040053e:	fac42783          	lw	a5,-84(s0)
20400542:	cfd8                	sw	a4,28(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:100

    s->xh[3] = t.xh[3] ^ RORH(10,t.xh[3],t.xl[3]) ^ RORH(17,t.xh[3], t.xl[3]);
20400544:	fd442703          	lw	a4,-44(s0)
20400548:	fe842783          	lw	a5,-24(s0)
2040054c:	01679693          	slli	a3,a5,0x16
20400550:	fd442783          	lw	a5,-44(s0)
20400554:	83a9                	srli	a5,a5,0xa
20400556:	8fd5                	or	a5,a5,a3
20400558:	8f3d                	xor	a4,a4,a5
2040055a:	fe842783          	lw	a5,-24(s0)
2040055e:	00f79693          	slli	a3,a5,0xf
20400562:	fd442783          	lw	a5,-44(s0)
20400566:	83c5                	srli	a5,a5,0x11
20400568:	8fd5                	or	a5,a5,a3
2040056a:	8f3d                	xor	a4,a4,a5
2040056c:	fac42783          	lw	a5,-84(s0)
20400570:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:101
    s->xl[3] = t.xl[3] ^ RORL(10,t.xh[3],t.xl[3]) ^ RORL(17,t.xh[3], t.xl[3]);
20400572:	fe842703          	lw	a4,-24(s0)
20400576:	fd442783          	lw	a5,-44(s0)
2040057a:	01679693          	slli	a3,a5,0x16
2040057e:	fe842783          	lw	a5,-24(s0)
20400582:	83a9                	srli	a5,a5,0xa
20400584:	8fd5                	or	a5,a5,a3
20400586:	8f3d                	xor	a4,a4,a5
20400588:	fd442783          	lw	a5,-44(s0)
2040058c:	00f79693          	slli	a3,a5,0xf
20400590:	fe842783          	lw	a5,-24(s0)
20400594:	83c5                	srli	a5,a5,0x11
20400596:	8fd5                	or	a5,a5,a3
20400598:	8f3d                	xor	a4,a4,a5
2040059a:	fac42783          	lw	a5,-84(s0)
2040059e:	d398                	sw	a4,32(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:103

    s->xh[4] = t.xh[4] ^ RORH(7,t.xh[4],t.xl[4]) ^ RORH(41,t.xh[4], t.xl[4]);
204005a0:	fd842703          	lw	a4,-40(s0)
204005a4:	fec42783          	lw	a5,-20(s0)
204005a8:	01979693          	slli	a3,a5,0x19
204005ac:	fd842783          	lw	a5,-40(s0)
204005b0:	839d                	srli	a5,a5,0x7
204005b2:	8fd5                	or	a5,a5,a3
204005b4:	8f3d                	xor	a4,a4,a5
204005b6:	fd842783          	lw	a5,-40(s0)
204005ba:	01779693          	slli	a3,a5,0x17
204005be:	fec42783          	lw	a5,-20(s0)
204005c2:	83a5                	srli	a5,a5,0x9
204005c4:	8fd5                	or	a5,a5,a3
204005c6:	8f3d                	xor	a4,a4,a5
204005c8:	fac42783          	lw	a5,-84(s0)
204005cc:	cb98                	sw	a4,16(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:104
    s->xl[4] = t.xl[4] ^ RORL(7,t.xh[4],t.xl[4]) ^ RORL(41,t.xh[4], t.xl[4]);
204005ce:	fec42703          	lw	a4,-20(s0)
204005d2:	fd842783          	lw	a5,-40(s0)
204005d6:	01979693          	slli	a3,a5,0x19
204005da:	fec42783          	lw	a5,-20(s0)
204005de:	839d                	srli	a5,a5,0x7
204005e0:	8fd5                	or	a5,a5,a3
204005e2:	8f3d                	xor	a4,a4,a5
204005e4:	fec42783          	lw	a5,-20(s0)
204005e8:	01779693          	slli	a3,a5,0x17
204005ec:	fd842783          	lw	a5,-40(s0)
204005f0:	83a5                	srli	a5,a5,0x9
204005f2:	8fd5                	or	a5,a5,a3
204005f4:	8f3d                	xor	a4,a4,a5
204005f6:	fac42783          	lw	a5,-84(s0)
204005fa:	d3d8                	sw	a4,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:107

    //printstate(" round output", s);
}
204005fc:	0001                	nop
204005fe:	4476                	lw	s0,92(sp)
20400600:	6125                	addi	sp,sp,96
20400602:	8082                	ret

20400604 <P12>:
P12():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:110


static inline void P12(ascon_state_t* s) {
20400604:	1101                	addi	sp,sp,-32
20400606:	ce06                	sw	ra,28(sp)
20400608:	cc22                	sw	s0,24(sp)
2040060a:	1000                	addi	s0,sp,32
2040060c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:111
  ROUND(s, 0xf0);
20400610:	0f000593          	li	a1,240
20400614:	fec42503          	lw	a0,-20(s0)
20400618:	36e5                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:112
  ROUND(s, 0xe1);
2040061a:	0e100593          	li	a1,225
2040061e:	fec42503          	lw	a0,-20(s0)
20400622:	3ef9                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:113
  ROUND(s, 0xd2);
20400624:	0d200593          	li	a1,210
20400628:	fec42503          	lw	a0,-20(s0)
2040062c:	3ed1                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:114
  ROUND(s, 0xc3);
2040062e:	0c300593          	li	a1,195
20400632:	fec42503          	lw	a0,-20(s0)
20400636:	36e9                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:115
  ROUND(s, 0xb4);
20400638:	0b400593          	li	a1,180
2040063c:	fec42503          	lw	a0,-20(s0)
20400640:	36c1                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:116
  ROUND(s, 0xa5);
20400642:	0a500593          	li	a1,165
20400646:	fec42503          	lw	a0,-20(s0)
2040064a:	3e5d                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:117
  ROUND(s, 0x96);
2040064c:	09600593          	li	a1,150
20400650:	fec42503          	lw	a0,-20(s0)
20400654:	3675                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:118
  ROUND(s, 0x87);
20400656:	08700593          	li	a1,135
2040065a:	fec42503          	lw	a0,-20(s0)
2040065e:	364d                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:119
  ROUND(s, 0x78);
20400660:	07800593          	li	a1,120
20400664:	fec42503          	lw	a0,-20(s0)
20400668:	3e61                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:120
  ROUND(s, 0x69);
2040066a:	06900593          	li	a1,105
2040066e:	fec42503          	lw	a0,-20(s0)
20400672:	3679                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:121
  ROUND(s, 0x5a);
20400674:	05a00593          	li	a1,90
20400678:	fec42503          	lw	a0,-20(s0)
2040067c:	3651                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:122
  ROUND(s, 0x4b);
2040067e:	04b00593          	li	a1,75
20400682:	fec42503          	lw	a0,-20(s0)
20400686:	3ead                	jal	20400200 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/round.h:123
}
20400688:	0001                	nop
2040068a:	40f2                	lw	ra,28(sp)
2040068c:	4462                	lw	s0,24(sp)
2040068e:	6105                	addi	sp,sp,32
20400690:	8082                	ret

20400692 <crypto_hash>:
crypto_hash():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:11
#define FREEDOM_E_SDK_AEAD_H

#include "round.h"
#include "state.h"

int crypto_hash(u32 *m, u32 mlen, u32 *h, int debug) {
20400692:	715d                	addi	sp,sp,-80
20400694:	c686                	sw	ra,76(sp)
20400696:	c4a2                	sw	s0,72(sp)
20400698:	0880                	addi	s0,sp,80
2040069a:	faa42e23          	sw	a0,-68(s0)
2040069e:	fab42c23          	sw	a1,-72(s0)
204006a2:	fac42a23          	sw	a2,-76(s0)
204006a6:	fad42823          	sw	a3,-80(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:15

    /* initialize */
    ascon_state_t s;
    s.xh[0] = 0x00400c00;
204006aa:	004017b7          	lui	a5,0x401
204006ae:	c0078793          	addi	a5,a5,-1024 # 400c00 <__heap_size+0x400400>
204006b2:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:16
    s.xl[0] = 0x00000100;
204006b6:	10000793          	li	a5,256
204006ba:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:17
    s.xh[1] = 0;
204006be:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:18
    s.xl[1] = 0;
204006c2:	fc042e23          	sw	zero,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:19
    s.xh[2] = 0;
204006c6:	fc042623          	sw	zero,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:20
    s.xl[2] = 0;
204006ca:	fe042023          	sw	zero,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:21
    s.xh[3] = 0;
204006ce:	fc042823          	sw	zero,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:22
    s.xl[3] = 0;
204006d2:	fe042223          	sw	zero,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:23
    s.xh[4] = 0;
204006d6:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:24
    s.xl[4] = 0;
204006da:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:25
    P12(&s);
204006de:	fc440793          	addi	a5,s0,-60
204006e2:	853e                	mv	a0,a5
204006e4:	3705                	jal	20400604 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:28


    if (mlen) {
204006e6:	fb842783          	lw	a5,-72(s0)
204006ea:	14078063          	beqz	a5,2040082a <crypto_hash+0x198>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:29
        while (mlen >= 8) {
204006ee:	a0a1                	j	20400736 <crypto_hash+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:30
            s.xh[0] ^= *m;
204006f0:	fc442703          	lw	a4,-60(s0)
204006f4:	fbc42783          	lw	a5,-68(s0)
204006f8:	439c                	lw	a5,0(a5)
204006fa:	8fb9                	xor	a5,a5,a4
204006fc:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:31
            m++;
20400700:	fbc42783          	lw	a5,-68(s0)
20400704:	0791                	addi	a5,a5,4
20400706:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:32
            s.xl[0] ^= *m;
2040070a:	fd842703          	lw	a4,-40(s0)
2040070e:	fbc42783          	lw	a5,-68(s0)
20400712:	439c                	lw	a5,0(a5)
20400714:	8fb9                	xor	a5,a5,a4
20400716:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:33
            m++;
2040071a:	fbc42783          	lw	a5,-68(s0)
2040071e:	0791                	addi	a5,a5,4
20400720:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:34
            P12(&s);
20400724:	fc440793          	addi	a5,s0,-60
20400728:	853e                	mv	a0,a5
2040072a:	3de9                	jal	20400604 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:35
            mlen -= 8;
2040072c:	fb842783          	lw	a5,-72(s0)
20400730:	17e1                	addi	a5,a5,-8
20400732:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:29
        while (mlen >= 8) {
20400736:	fb842703          	lw	a4,-72(s0)
2040073a:	479d                	li	a5,7
2040073c:	fae7eae3          	bltu	a5,a4,204006f0 <crypto_hash+0x5e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:37
        }
        s.xh[0] ^= TRUNH(mlen, *m);
20400740:	fc442703          	lw	a4,-60(s0)
20400744:	fb842683          	lw	a3,-72(s0)
20400748:	4791                	li	a5,4
2040074a:	00d7f663          	bgeu	a5,a3,20400756 <crypto_hash+0xc4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:37 (discriminator 1)
2040074e:	fbc42783          	lw	a5,-68(s0)
20400752:	439c                	lw	a5,0(a5)
20400754:	a025                	j	2040077c <crypto_hash+0xea>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:37 (discriminator 2)
20400756:	fb842783          	lw	a5,-72(s0)
2040075a:	c385                	beqz	a5,2040077a <crypto_hash+0xe8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:37 (discriminator 4)
2040075c:	fbc42783          	lw	a5,-68(s0)
20400760:	4394                	lw	a3,0(a5)
20400762:	fb842603          	lw	a2,-72(s0)
20400766:	4781                	li	a5,0
20400768:	8f91                	sub	a5,a5,a2
2040076a:	078e                	slli	a5,a5,0x3
2040076c:	02078793          	addi	a5,a5,32
20400770:	567d                	li	a2,-1
20400772:	00f617b3          	sll	a5,a2,a5
20400776:	8ff5                	and	a5,a5,a3
20400778:	a011                	j	2040077c <crypto_hash+0xea>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:37 (discriminator 5)
2040077a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:37 (discriminator 8)
2040077c:	8fb9                	xor	a5,a5,a4
2040077e:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:38 (discriminator 8)
        m++;
20400782:	fbc42783          	lw	a5,-68(s0)
20400786:	0791                	addi	a5,a5,4
20400788:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:39 (discriminator 8)
        s.xl[0] ^= TRUNL(mlen, *m);
2040078c:	fd842703          	lw	a4,-40(s0)
20400790:	fb842683          	lw	a3,-72(s0)
20400794:	4791                	li	a5,4
20400796:	02d7f163          	bgeu	a5,a3,204007b8 <crypto_hash+0x126>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:39 (discriminator 1)
2040079a:	fbc42783          	lw	a5,-68(s0)
2040079e:	4394                	lw	a3,0(a5)
204007a0:	fb842603          	lw	a2,-72(s0)
204007a4:	4781                	li	a5,0
204007a6:	8f91                	sub	a5,a5,a2
204007a8:	078e                	slli	a5,a5,0x3
204007aa:	04078793          	addi	a5,a5,64
204007ae:	567d                	li	a2,-1
204007b0:	00f617b3          	sll	a5,a2,a5
204007b4:	8ff5                	and	a5,a5,a3
204007b6:	a011                	j	204007ba <crypto_hash+0x128>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:39 (discriminator 2)
204007b8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:39 (discriminator 4)
204007ba:	8fb9                	xor	a5,a5,a4
204007bc:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:41 (discriminator 4)

        s.xh[0] ^= PADH(mlen);
204007c0:	fc442703          	lw	a4,-60(s0)
204007c4:	fb842683          	lw	a3,-72(s0)
204007c8:	478d                	li	a5,3
204007ca:	00d7ea63          	bltu	a5,a3,204007de <crypto_hash+0x14c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:41 (discriminator 1)
204007ce:	fb842783          	lw	a5,-72(s0)
204007d2:	078e                	slli	a5,a5,0x3
204007d4:	800006b7          	lui	a3,0x80000
204007d8:	00f6d7b3          	srl	a5,a3,a5
204007dc:	a011                	j	204007e0 <crypto_hash+0x14e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:41 (discriminator 2)
204007de:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:41 (discriminator 4)
204007e0:	8fb9                	xor	a5,a5,a4
204007e2:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:42 (discriminator 4)
        s.xl[0] ^= PADL(mlen);
204007e6:	fd842703          	lw	a4,-40(s0)
204007ea:	fb842683          	lw	a3,-72(s0)
204007ee:	478d                	li	a5,3
204007f0:	02d7f563          	bgeu	a5,a3,2040081a <crypto_hash+0x188>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:42 (discriminator 1)
204007f4:	fb842683          	lw	a3,-72(s0)
204007f8:	47a1                	li	a5,8
204007fa:	00f68e63          	beq	a3,a5,20400816 <crypto_hash+0x184>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:42 (discriminator 3)
204007fe:	fb842683          	lw	a3,-72(s0)
20400802:	200007b7          	lui	a5,0x20000
20400806:	17f1                	addi	a5,a5,-4
20400808:	97b6                	add	a5,a5,a3
2040080a:	078e                	slli	a5,a5,0x3
2040080c:	800006b7          	lui	a3,0x80000
20400810:	00f6d7b3          	srl	a5,a3,a5
20400814:	a021                	j	2040081c <crypto_hash+0x18a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:42 (discriminator 4)
20400816:	4781                	li	a5,0
20400818:	a011                	j	2040081c <crypto_hash+0x18a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:42 (discriminator 2)
2040081a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:42 (discriminator 8)
2040081c:	8fb9                	xor	a5,a5,a4
2040081e:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:43 (discriminator 8)
        P12(&s);
20400822:	fc440793          	addi	a5,s0,-60
20400826:	853e                	mv	a0,a5
20400828:	3bf1                	jal	20400604 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:45
    }
    for(int i = 0 ; i < 4 ; i++){
2040082a:	fe042623          	sw	zero,-20(s0)
2040082e:	a091                	j	20400872 <crypto_hash+0x1e0>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:46
        h[i*2] = s.xh[0] ;
20400830:	fec42783          	lw	a5,-20(s0)
20400834:	078e                	slli	a5,a5,0x3
20400836:	fb442703          	lw	a4,-76(s0)
2040083a:	97ba                	add	a5,a5,a4
2040083c:	fc442703          	lw	a4,-60(s0)
20400840:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:47
        h[i*2+1] = s.xl[0] ;
20400842:	fec42783          	lw	a5,-20(s0)
20400846:	078e                	slli	a5,a5,0x3
20400848:	0791                	addi	a5,a5,4
2040084a:	fb442703          	lw	a4,-76(s0)
2040084e:	97ba                	add	a5,a5,a4
20400850:	fd842703          	lw	a4,-40(s0)
20400854:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:48
        if(i < 3){
20400856:	fec42703          	lw	a4,-20(s0)
2040085a:	4789                	li	a5,2
2040085c:	00e7c663          	blt	a5,a4,20400868 <crypto_hash+0x1d6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:49
            P12(&s);
20400860:	fc440793          	addi	a5,s0,-60
20400864:	853e                	mv	a0,a5
20400866:	3b79                	jal	20400604 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:45 (discriminator 2)
    for(int i = 0 ; i < 4 ; i++){
20400868:	fec42783          	lw	a5,-20(s0)
2040086c:	0785                	addi	a5,a5,1
2040086e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:45 (discriminator 1)
20400872:	fec42703          	lw	a4,-20(s0)
20400876:	478d                	li	a5,3
20400878:	fae7dce3          	bge	a5,a4,20400830 <crypto_hash+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:52
        }
    }
    return 0;
2040087c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/aead.h:53
}
2040087e:	853e                	mv	a0,a5
20400880:	40b6                	lw	ra,76(sp)
20400882:	4426                	lw	s0,72(sp)
20400884:	6161                	addi	sp,sp,80
20400886:	8082                	ret

20400888 <rdcycle>:
rdcycle():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/csr.h:50
#define rdtime() read_csr(time)
// #define rdcycle() read_csr(cycle)
#define rdinstret() read_csr(instret)


unsigned rdcycle() {
20400888:	1101                	addi	sp,sp,-32
2040088a:	ce22                	sw	s0,28(sp)
2040088c:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/csr.h:51
  unsigned mcycle = 0;
2040088e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/csr.h:53

  asm volatile ("csrr %0,mcycle"   : "=r" (mcycle)  );
20400892:	b00027f3          	csrr	a5,mcycle
20400896:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/csr.h:55

  return mcycle;
2040089a:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/csr.h:56
}
2040089e:	853e                	mv	a0,a5
204008a0:	4472                	lw	s0,28(sp)
204008a2:	6105                	addi	sp,sp,32
204008a4:	8082                	ret

204008a6 <HASH>:
HASH():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AEAD_HW.h:53
}



u32 HASH(u32 *m_addr, u32 m_len,
         u32 *h_addr) {
204008a6:	7179                	addi	sp,sp,-48
204008a8:	d622                	sw	s0,44(sp)
204008aa:	1800                	addi	s0,sp,48
204008ac:	fca42e23          	sw	a0,-36(s0)
204008b0:	fcb42c23          	sw	a1,-40(s0)
204008b4:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AEAD_HW.h:55
    u32 rd;
    asm volatile("fence");
204008b8:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AEAD_HW.h:56
    ROCC_INSTRUCTION_DSS(0, rd, m_addr, m_len, Hash_Set_M);
204008bc:	fdc42783          	lw	a5,-36(s0)
204008c0:	85be                	mv	a1,a5
204008c2:	fd842603          	lw	a2,-40(s0)
204008c6:	62c5f50b          	0x62c5f50b
204008ca:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AEAD_HW.h:58

    asm volatile("fence");
204008ce:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AEAD_HW.h:59
    ROCC_INSTRUCTION_DS(0, rd, h_addr, Hash_Init);
204008d2:	fd442783          	lw	a5,-44(s0)
204008d6:	85be                	mv	a1,a5
204008d8:	6405e50b          	0x6405e50b
204008dc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AEAD_HW.h:60
    asm volatile("fence":: : "memory");
204008e0:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AEAD_HW.h:61
    return 0;
204008e4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AEAD_HW.h:62
}
204008e6:	853e                	mv	a0,a5
204008e8:	5432                	lw	s0,44(sp)
204008ea:	6145                	addi	sp,sp,48
204008ec:	8082                	ret

204008ee <main>:
main():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:8
#include "printf.h"
#include "csr.h"
#include "AEAD_HW.h"
#include "../RoCCcommon/csr.h"
#define REP 50
int main(void) {
204008ee:	1101                	addi	sp,sp,-32
204008f0:	ce06                	sw	ra,28(sp)
204008f2:	cc22                	sw	s0,24(sp)
204008f4:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:17
    static u32 performance2[REP] = {0};
    static u32 bytes[7] = {8, 96, 400, 1000, 5000, 10000, 15000};
    static u32 hash[8] = {0};
    static u32 hash2[8] = {0};
    unsigned start, end;
    int i = 0;
204008f6:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:18
    printf("Hash\n");
204008fa:	204087b7          	lui	a5,0x20408
204008fe:	28c78513          	addi	a0,a5,652 # 2040828c <_exit+0x1e>
20400902:	01a020ef          	jal	ra,2040291c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:19
    write_csr(mstatus, MSTATUS_XS);
20400906:	67e1                	lui	a5,0x18
20400908:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:20
    for (int j = 0; j < 6; j++) {
2040090c:	fe042423          	sw	zero,-24(s0)
20400910:	aa3d                	j	20400a4e <main+0x160>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:21
        for (i = 0; i < REP; i++) {
20400912:	fe042623          	sw	zero,-20(s0)
20400916:	a8b1                	j	20400972 <main+0x84>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:22 (discriminator 3)
            start = rdcycle();
20400918:	3f85                	jal	20400888 <rdcycle>
2040091a:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:23 (discriminator 3)
            crypto_hash(plain_text, bytes[j], hash, 0);
2040091e:	800007b7          	lui	a5,0x80000
20400922:	00078713          	mv	a4,a5
20400926:	fe842783          	lw	a5,-24(s0)
2040092a:	078a                	slli	a5,a5,0x2
2040092c:	97ba                	add	a5,a5,a4
2040092e:	4398                	lw	a4,0(a5)
20400930:	4681                	li	a3,0
20400932:	800037b7          	lui	a5,0x80003
20400936:	e9c78613          	addi	a2,a5,-356 # 80002e9c <metal_segment_heap_target_end+0xfffff1a0>
2040093a:	85ba                	mv	a1,a4
2040093c:	800007b7          	lui	a5,0x80000
20400940:	01c78513          	addi	a0,a5,28 # 8000001c <metal_segment_heap_target_end+0xffffc320>
20400944:	33b9                	jal	20400692 <crypto_hash>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:24 (discriminator 3)
            end = rdcycle();
20400946:	3789                	jal	20400888 <rdcycle>
20400948:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:25 (discriminator 3)
            performance[i] = end - start;
2040094c:	fe042703          	lw	a4,-32(s0)
20400950:	fe442783          	lw	a5,-28(s0)
20400954:	8f1d                	sub	a4,a4,a5
20400956:	800037b7          	lui	a5,0x80003
2040095a:	ebc78693          	addi	a3,a5,-324 # 80002ebc <metal_segment_heap_target_end+0xfffff1c0>
2040095e:	fec42783          	lw	a5,-20(s0)
20400962:	078a                	slli	a5,a5,0x2
20400964:	97b6                	add	a5,a5,a3
20400966:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:21 (discriminator 3)
        for (i = 0; i < REP; i++) {
20400968:	fec42783          	lw	a5,-20(s0)
2040096c:	0785                	addi	a5,a5,1
2040096e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:21 (discriminator 1)
20400972:	fec42703          	lw	a4,-20(s0)
20400976:	03100793          	li	a5,49
2040097a:	f8e7dfe3          	bge	a5,a4,20400918 <main+0x2a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:27
        }
        for (i = 0; i < REP; i++) {
2040097e:	fe042623          	sw	zero,-20(s0)
20400982:	a899                	j	204009d8 <main+0xea>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:28 (discriminator 3)
            start = rdcycle();
20400984:	3711                	jal	20400888 <rdcycle>
20400986:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:29 (discriminator 3)
            HASH(plain_text, bytes[j], hash2);
2040098a:	800007b7          	lui	a5,0x80000
2040098e:	00078713          	mv	a4,a5
20400992:	fe842783          	lw	a5,-24(s0)
20400996:	078a                	slli	a5,a5,0x2
20400998:	97ba                	add	a5,a5,a4
2040099a:	4398                	lw	a4,0(a5)
2040099c:	91418613          	addi	a2,gp,-1772 # 80002f84 <hash2.1675>
204009a0:	85ba                	mv	a1,a4
204009a2:	800007b7          	lui	a5,0x80000
204009a6:	01c78513          	addi	a0,a5,28 # 8000001c <metal_segment_heap_target_end+0xffffc320>
204009aa:	3df5                	jal	204008a6 <HASH>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:30 (discriminator 3)
            end = rdcycle();
204009ac:	3df1                	jal	20400888 <rdcycle>
204009ae:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:31 (discriminator 3)
            performance2[i] = end - start;
204009b2:	fe042703          	lw	a4,-32(s0)
204009b6:	fe442783          	lw	a5,-28(s0)
204009ba:	8f1d                	sub	a4,a4,a5
204009bc:	800037b7          	lui	a5,0x80003
204009c0:	fa478693          	addi	a3,a5,-92 # 80002fa4 <metal_segment_heap_target_end+0xfffff2a8>
204009c4:	fec42783          	lw	a5,-20(s0)
204009c8:	078a                	slli	a5,a5,0x2
204009ca:	97b6                	add	a5,a5,a3
204009cc:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:27 (discriminator 3)
        for (i = 0; i < REP; i++) {
204009ce:	fec42783          	lw	a5,-20(s0)
204009d2:	0785                	addi	a5,a5,1
204009d4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:27 (discriminator 1)
204009d8:	fec42703          	lw	a4,-20(s0)
204009dc:	03100793          	li	a5,49
204009e0:	fae7d2e3          	bge	a5,a4,20400984 <main+0x96>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:33
        }
        printf_("performance Hash bytes %d \n", bytes[j]);
204009e4:	800007b7          	lui	a5,0x80000
204009e8:	00078713          	mv	a4,a5
204009ec:	fe842783          	lw	a5,-24(s0)
204009f0:	078a                	slli	a5,a5,0x2
204009f2:	97ba                	add	a5,a5,a4
204009f4:	439c                	lw	a5,0(a5)
204009f6:	85be                	mv	a1,a5
204009f8:	204087b7          	lui	a5,0x20408
204009fc:	29478513          	addi	a0,a5,660 # 20408294 <_exit+0x26>
20400a00:	71d010ef          	jal	ra,2040291c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:34
        for (i = 0; i < REP; i++) {
20400a04:	fe042623          	sw	zero,-20(s0)
20400a08:	a805                	j	20400a38 <main+0x14a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:35 (discriminator 3)
            printf_("%d:   SWcycles : %u   HWcycles : %u\n", i, performance[i]);
20400a0a:	800037b7          	lui	a5,0x80003
20400a0e:	ebc78713          	addi	a4,a5,-324 # 80002ebc <metal_segment_heap_target_end+0xfffff1c0>
20400a12:	fec42783          	lw	a5,-20(s0)
20400a16:	078a                	slli	a5,a5,0x2
20400a18:	97ba                	add	a5,a5,a4
20400a1a:	439c                	lw	a5,0(a5)
20400a1c:	863e                	mv	a2,a5
20400a1e:	fec42583          	lw	a1,-20(s0)
20400a22:	204087b7          	lui	a5,0x20408
20400a26:	2b078513          	addi	a0,a5,688 # 204082b0 <_exit+0x42>
20400a2a:	6f3010ef          	jal	ra,2040291c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:34 (discriminator 3)
        for (i = 0; i < REP; i++) {
20400a2e:	fec42783          	lw	a5,-20(s0)
20400a32:	0785                	addi	a5,a5,1
20400a34:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:34 (discriminator 1)
20400a38:	fec42703          	lw	a4,-20(s0)
20400a3c:	03100793          	li	a5,49
20400a40:	fce7d5e3          	bge	a5,a4,20400a0a <main+0x11c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:20 (discriminator 2)
    for (int j = 0; j < 6; j++) {
20400a44:	fe842783          	lw	a5,-24(s0)
20400a48:	0785                	addi	a5,a5,1
20400a4a:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:20 (discriminator 1)
20400a4e:	fe842703          	lw	a4,-24(s0)
20400a52:	4795                	li	a5,5
20400a54:	eae7dfe3          	bge	a5,a4,20400912 <main+0x24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:48
                // return 0;
            }

        }*/
    }
    printf_("equal \n");
20400a58:	204087b7          	lui	a5,0x20408
20400a5c:	2d878513          	addi	a0,a5,728 # 204082d8 <_exit+0x6a>
20400a60:	6bd010ef          	jal	ra,2040291c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:51


    return 0;
20400a64:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/AHashCleanHW.c:54


20400a66:	853e                	mv	a0,a5
20400a68:	40f2                	lw	ra,28(sp)
20400a6a:	4462                	lw	s0,24(sp)
20400a6c:	6105                	addi	sp,sp,32
20400a6e:	8082                	ret

20400a70 <_putchar>:
_putchar():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:120
// import float.h for DBL_MAX
#if defined(PRINTF_SUPPORT_FLOAT)
#include <float.h>
#endif

void _putchar(char character){
20400a70:	1101                	addi	sp,sp,-32
20400a72:	ce06                	sw	ra,28(sp)
20400a74:	cc22                	sw	s0,24(sp)
20400a76:	1000                	addi	s0,sp,32
20400a78:	87aa                	mv	a5,a0
20400a7a:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:121
    write(1, &character, 1);
20400a7e:	fef40793          	addi	a5,s0,-17
20400a82:	4605                	li	a2,1
20400a84:	85be                	mv	a1,a5
20400a86:	4505                	li	a0,1
20400a88:	6eb010ef          	jal	ra,20402972 <write>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:122
}
20400a8c:	0001                	nop
20400a8e:	40f2                	lw	ra,28(sp)
20400a90:	4462                	lw	s0,24(sp)
20400a92:	6105                	addi	sp,sp,32
20400a94:	8082                	ret

20400a96 <_out_null>:
_out_null():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:146
}


// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
20400a96:	1101                	addi	sp,sp,-32
20400a98:	ce22                	sw	s0,28(sp)
20400a9a:	1000                	addi	s0,sp,32
20400a9c:	87aa                	mv	a5,a0
20400a9e:	feb42423          	sw	a1,-24(s0)
20400aa2:	fec42223          	sw	a2,-28(s0)
20400aa6:	fed42023          	sw	a3,-32(s0)
20400aaa:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:148
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
20400aae:	0001                	nop
20400ab0:	4472                	lw	s0,28(sp)
20400ab2:	6105                	addi	sp,sp,32
20400ab4:	8082                	ret

20400ab6 <_out_char>:
_out_char():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:153


// internal _putchar wrapper
static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
{
20400ab6:	1101                	addi	sp,sp,-32
20400ab8:	ce06                	sw	ra,28(sp)
20400aba:	cc22                	sw	s0,24(sp)
20400abc:	1000                	addi	s0,sp,32
20400abe:	87aa                	mv	a5,a0
20400ac0:	feb42423          	sw	a1,-24(s0)
20400ac4:	fec42223          	sw	a2,-28(s0)
20400ac8:	fed42023          	sw	a3,-32(s0)
20400acc:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:155
  (void)buffer; (void)idx; (void)maxlen;
  if (character) {
20400ad0:	fef44783          	lbu	a5,-17(s0)
20400ad4:	c789                	beqz	a5,20400ade <_out_char+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:156
    _putchar(character);
20400ad6:	fef44783          	lbu	a5,-17(s0)
20400ada:	853e                	mv	a0,a5
20400adc:	3f51                	jal	20400a70 <_putchar>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:158
  }
}
20400ade:	0001                	nop
20400ae0:	40f2                	lw	ra,28(sp)
20400ae2:	4462                	lw	s0,24(sp)
20400ae4:	6105                	addi	sp,sp,32
20400ae6:	8082                	ret

20400ae8 <_strnlen_s>:
_strnlen_s():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:175


// internal secure strlen
// \return The length of the string (excluding the terminating 0) limited by 'maxsize'
static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
{
20400ae8:	7179                	addi	sp,sp,-48
20400aea:	d622                	sw	s0,44(sp)
20400aec:	1800                	addi	s0,sp,48
20400aee:	fca42e23          	sw	a0,-36(s0)
20400af2:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:177
  const char* s;
  for (s = str; *s && maxsize--; ++s);
20400af6:	fdc42783          	lw	a5,-36(s0)
20400afa:	fef42623          	sw	a5,-20(s0)
20400afe:	a031                	j	20400b0a <_strnlen_s+0x22>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:177 (discriminator 4)
20400b00:	fec42783          	lw	a5,-20(s0)
20400b04:	0785                	addi	a5,a5,1
20400b06:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:177 (discriminator 1)
20400b0a:	fec42783          	lw	a5,-20(s0)
20400b0e:	0007c783          	lbu	a5,0(a5)
20400b12:	cb81                	beqz	a5,20400b22 <_strnlen_s+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:177 (discriminator 3)
20400b14:	fd842783          	lw	a5,-40(s0)
20400b18:	fff78713          	addi	a4,a5,-1
20400b1c:	fce42c23          	sw	a4,-40(s0)
20400b20:	f3e5                	bnez	a5,20400b00 <_strnlen_s+0x18>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:178
  return (unsigned int)(s - str);
20400b22:	fec42703          	lw	a4,-20(s0)
20400b26:	fdc42783          	lw	a5,-36(s0)
20400b2a:	40f707b3          	sub	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:179
}
20400b2e:	853e                	mv	a0,a5
20400b30:	5432                	lw	s0,44(sp)
20400b32:	6145                	addi	sp,sp,48
20400b34:	8082                	ret

20400b36 <_is_digit>:
_is_digit():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:185


// internal test if char is a digit (0-9)
// \return true if char is a digit
static inline bool _is_digit(char ch)
{
20400b36:	1101                	addi	sp,sp,-32
20400b38:	ce22                	sw	s0,28(sp)
20400b3a:	1000                	addi	s0,sp,32
20400b3c:	87aa                	mv	a5,a0
20400b3e:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:186
  return (ch >= '0') && (ch <= '9');
20400b42:	fef44703          	lbu	a4,-17(s0)
20400b46:	02f00793          	li	a5,47
20400b4a:	00e7fa63          	bgeu	a5,a4,20400b5e <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:186 (discriminator 1)
20400b4e:	fef44703          	lbu	a4,-17(s0)
20400b52:	03900793          	li	a5,57
20400b56:	00e7e463          	bltu	a5,a4,20400b5e <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:186 (discriminator 3)
20400b5a:	4785                	li	a5,1
20400b5c:	a011                	j	20400b60 <_is_digit+0x2a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:186 (discriminator 4)
20400b5e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:186 (discriminator 6)
20400b60:	8b85                	andi	a5,a5,1
20400b62:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:187 (discriminator 6)
}
20400b66:	853e                	mv	a0,a5
20400b68:	4472                	lw	s0,28(sp)
20400b6a:	6105                	addi	sp,sp,32
20400b6c:	8082                	ret

20400b6e <_atoi>:
_atoi():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:192


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
20400b6e:	7179                	addi	sp,sp,-48
20400b70:	d606                	sw	ra,44(sp)
20400b72:	d422                	sw	s0,40(sp)
20400b74:	1800                	addi	s0,sp,48
20400b76:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:193
  unsigned int i = 0U;
20400b7a:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:194
  while (_is_digit(**str)) {
20400b7e:	a03d                	j	20400bac <_atoi+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:195
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
20400b80:	fec42703          	lw	a4,-20(s0)
20400b84:	87ba                	mv	a5,a4
20400b86:	078a                	slli	a5,a5,0x2
20400b88:	97ba                	add	a5,a5,a4
20400b8a:	0786                	slli	a5,a5,0x1
20400b8c:	863e                	mv	a2,a5
20400b8e:	fdc42783          	lw	a5,-36(s0)
20400b92:	439c                	lw	a5,0(a5)
20400b94:	00178693          	addi	a3,a5,1
20400b98:	fdc42703          	lw	a4,-36(s0)
20400b9c:	c314                	sw	a3,0(a4)
20400b9e:	0007c783          	lbu	a5,0(a5)
20400ba2:	97b2                	add	a5,a5,a2
20400ba4:	fd078793          	addi	a5,a5,-48
20400ba8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:194
  while (_is_digit(**str)) {
20400bac:	fdc42783          	lw	a5,-36(s0)
20400bb0:	439c                	lw	a5,0(a5)
20400bb2:	0007c783          	lbu	a5,0(a5)
20400bb6:	853e                	mv	a0,a5
20400bb8:	3fbd                	jal	20400b36 <_is_digit>
20400bba:	87aa                	mv	a5,a0
20400bbc:	f3f1                	bnez	a5,20400b80 <_atoi+0x12>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:197
  }
  return i;
20400bbe:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:198
}
20400bc2:	853e                	mv	a0,a5
20400bc4:	50b2                	lw	ra,44(sp)
20400bc6:	5422                	lw	s0,40(sp)
20400bc8:	6145                	addi	sp,sp,48
20400bca:	8082                	ret

20400bcc <_out_rev>:
_out_rev():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:203


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
20400bcc:	7139                	addi	sp,sp,-64
20400bce:	de06                	sw	ra,60(sp)
20400bd0:	dc22                	sw	s0,56(sp)
20400bd2:	0080                	addi	s0,sp,64
20400bd4:	fca42e23          	sw	a0,-36(s0)
20400bd8:	fcb42c23          	sw	a1,-40(s0)
20400bdc:	fcc42a23          	sw	a2,-44(s0)
20400be0:	fcd42823          	sw	a3,-48(s0)
20400be4:	fce42623          	sw	a4,-52(s0)
20400be8:	fcf42423          	sw	a5,-56(s0)
20400bec:	fd042223          	sw	a6,-60(s0)
20400bf0:	fd142023          	sw	a7,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:204
  const size_t start_idx = idx;
20400bf4:	fd442783          	lw	a5,-44(s0)
20400bf8:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:207

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
20400bfc:	fc042783          	lw	a5,-64(s0)
20400c00:	8b89                	andi	a5,a5,2
20400c02:	e3c1                	bnez	a5,20400c82 <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:207 (discriminator 1)
20400c04:	fc042783          	lw	a5,-64(s0)
20400c08:	8b85                	andi	a5,a5,1
20400c0a:	efa5                	bnez	a5,20400c82 <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:208
    for (size_t i = len; i < width; i++) {
20400c0c:	fc842783          	lw	a5,-56(s0)
20400c10:	fef42623          	sw	a5,-20(s0)
20400c14:	a035                	j	20400c40 <_out_rev+0x74>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:209 (discriminator 3)
      out(' ', buffer, idx++, maxlen);
20400c16:	fd442783          	lw	a5,-44(s0)
20400c1a:	00178713          	addi	a4,a5,1
20400c1e:	fce42a23          	sw	a4,-44(s0)
20400c22:	fdc42703          	lw	a4,-36(s0)
20400c26:	fd042683          	lw	a3,-48(s0)
20400c2a:	863e                	mv	a2,a5
20400c2c:	fd842583          	lw	a1,-40(s0)
20400c30:	02000513          	li	a0,32
20400c34:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:208 (discriminator 3)
    for (size_t i = len; i < width; i++) {
20400c36:	fec42783          	lw	a5,-20(s0)
20400c3a:	0785                	addi	a5,a5,1
20400c3c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:208 (discriminator 1)
20400c40:	fec42703          	lw	a4,-20(s0)
20400c44:	fc442783          	lw	a5,-60(s0)
20400c48:	fcf767e3          	bltu	a4,a5,20400c16 <_out_rev+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:214
    }
  }

  // reverse string
  while (len) {
20400c4c:	a81d                	j	20400c82 <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:215
    out(buf[--len], buffer, idx++, maxlen);
20400c4e:	fc842783          	lw	a5,-56(s0)
20400c52:	17fd                	addi	a5,a5,-1
20400c54:	fcf42423          	sw	a5,-56(s0)
20400c58:	fcc42703          	lw	a4,-52(s0)
20400c5c:	fc842783          	lw	a5,-56(s0)
20400c60:	97ba                	add	a5,a5,a4
20400c62:	0007c503          	lbu	a0,0(a5)
20400c66:	fd442783          	lw	a5,-44(s0)
20400c6a:	00178713          	addi	a4,a5,1
20400c6e:	fce42a23          	sw	a4,-44(s0)
20400c72:	fdc42703          	lw	a4,-36(s0)
20400c76:	fd042683          	lw	a3,-48(s0)
20400c7a:	863e                	mv	a2,a5
20400c7c:	fd842583          	lw	a1,-40(s0)
20400c80:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:214
  while (len) {
20400c82:	fc842783          	lw	a5,-56(s0)
20400c86:	f7e1                	bnez	a5,20400c4e <_out_rev+0x82>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:219
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
20400c88:	fc042783          	lw	a5,-64(s0)
20400c8c:	8b89                	andi	a5,a5,2
20400c8e:	cf85                	beqz	a5,20400cc6 <_out_rev+0xfa>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:220
    while (idx - start_idx < width) {
20400c90:	a00d                	j	20400cb2 <_out_rev+0xe6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:221
      out(' ', buffer, idx++, maxlen);
20400c92:	fd442783          	lw	a5,-44(s0)
20400c96:	00178713          	addi	a4,a5,1
20400c9a:	fce42a23          	sw	a4,-44(s0)
20400c9e:	fdc42703          	lw	a4,-36(s0)
20400ca2:	fd042683          	lw	a3,-48(s0)
20400ca6:	863e                	mv	a2,a5
20400ca8:	fd842583          	lw	a1,-40(s0)
20400cac:	02000513          	li	a0,32
20400cb0:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:220
    while (idx - start_idx < width) {
20400cb2:	fd442703          	lw	a4,-44(s0)
20400cb6:	fe842783          	lw	a5,-24(s0)
20400cba:	40f707b3          	sub	a5,a4,a5
20400cbe:	fc442703          	lw	a4,-60(s0)
20400cc2:	fce7e8e3          	bltu	a5,a4,20400c92 <_out_rev+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:225
    }
  }

  return idx;
20400cc6:	fd442783          	lw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:226
}
20400cca:	853e                	mv	a0,a5
20400ccc:	50f2                	lw	ra,60(sp)
20400cce:	5462                	lw	s0,56(sp)
20400cd0:	6121                	addi	sp,sp,64
20400cd2:	8082                	ret

20400cd4 <_ntoa_format>:
_ntoa_format():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:231


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
20400cd4:	7179                	addi	sp,sp,-48
20400cd6:	d606                	sw	ra,44(sp)
20400cd8:	d422                	sw	s0,40(sp)
20400cda:	1800                	addi	s0,sp,48
20400cdc:	fea42623          	sw	a0,-20(s0)
20400ce0:	feb42423          	sw	a1,-24(s0)
20400ce4:	fec42223          	sw	a2,-28(s0)
20400ce8:	fed42023          	sw	a3,-32(s0)
20400cec:	fce42e23          	sw	a4,-36(s0)
20400cf0:	fcf42c23          	sw	a5,-40(s0)
20400cf4:	87c2                	mv	a5,a6
20400cf6:	fd142823          	sw	a7,-48(s0)
20400cfa:	fcf40ba3          	sb	a5,-41(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:233
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
20400cfe:	441c                	lw	a5,8(s0)
20400d00:	8b89                	andi	a5,a5,2
20400d02:	e3d1                	bnez	a5,20400d86 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:234
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
20400d04:	405c                	lw	a5,4(s0)
20400d06:	cb9d                	beqz	a5,20400d3c <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:234 (discriminator 1)
20400d08:	441c                	lw	a5,8(s0)
20400d0a:	8b85                	andi	a5,a5,1
20400d0c:	cb85                	beqz	a5,20400d3c <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:234 (discriminator 2)
20400d0e:	fd744783          	lbu	a5,-41(s0)
20400d12:	e781                	bnez	a5,20400d1a <_ntoa_format+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:234 (discriminator 3)
20400d14:	441c                	lw	a5,8(s0)
20400d16:	8bb1                	andi	a5,a5,12
20400d18:	c395                	beqz	a5,20400d3c <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:235
      width--;
20400d1a:	405c                	lw	a5,4(s0)
20400d1c:	17fd                	addi	a5,a5,-1
20400d1e:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:237
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20400d20:	a831                	j	20400d3c <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:238
      buf[len++] = '0';
20400d22:	fd842783          	lw	a5,-40(s0)
20400d26:	00178713          	addi	a4,a5,1
20400d2a:	fce42c23          	sw	a4,-40(s0)
20400d2e:	fdc42703          	lw	a4,-36(s0)
20400d32:	97ba                	add	a5,a5,a4
20400d34:	03000713          	li	a4,48
20400d38:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:237
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20400d3c:	fd842703          	lw	a4,-40(s0)
20400d40:	401c                	lw	a5,0(s0)
20400d42:	02f77563          	bgeu	a4,a5,20400d6c <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:237 (discriminator 1)
20400d46:	fd842703          	lw	a4,-40(s0)
20400d4a:	47fd                	li	a5,31
20400d4c:	fce7fbe3          	bgeu	a5,a4,20400d22 <_ntoa_format+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:240
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20400d50:	a831                	j	20400d6c <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:241
      buf[len++] = '0';
20400d52:	fd842783          	lw	a5,-40(s0)
20400d56:	00178713          	addi	a4,a5,1
20400d5a:	fce42c23          	sw	a4,-40(s0)
20400d5e:	fdc42703          	lw	a4,-36(s0)
20400d62:	97ba                	add	a5,a5,a4
20400d64:	03000713          	li	a4,48
20400d68:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:240
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20400d6c:	441c                	lw	a5,8(s0)
20400d6e:	8b85                	andi	a5,a5,1
20400d70:	cb99                	beqz	a5,20400d86 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:240 (discriminator 1)
20400d72:	fd842703          	lw	a4,-40(s0)
20400d76:	405c                	lw	a5,4(s0)
20400d78:	00f77763          	bgeu	a4,a5,20400d86 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:240 (discriminator 2)
20400d7c:	fd842703          	lw	a4,-40(s0)
20400d80:	47fd                	li	a5,31
20400d82:	fce7f8e3          	bgeu	a5,a4,20400d52 <_ntoa_format+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:246
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
20400d86:	441c                	lw	a5,8(s0)
20400d88:	8bc1                	andi	a5,a5,16
20400d8a:	10078663          	beqz	a5,20400e96 <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:247
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
20400d8e:	441c                	lw	a5,8(s0)
20400d90:	4007f793          	andi	a5,a5,1024
20400d94:	e3a1                	bnez	a5,20400dd4 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:247 (discriminator 1)
20400d96:	fd842783          	lw	a5,-40(s0)
20400d9a:	cf8d                	beqz	a5,20400dd4 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:247 (discriminator 2)
20400d9c:	fd842703          	lw	a4,-40(s0)
20400da0:	401c                	lw	a5,0(s0)
20400da2:	00f70763          	beq	a4,a5,20400db0 <_ntoa_format+0xdc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:247 (discriminator 3)
20400da6:	fd842703          	lw	a4,-40(s0)
20400daa:	405c                	lw	a5,4(s0)
20400dac:	02f71463          	bne	a4,a5,20400dd4 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:248
      len--;
20400db0:	fd842783          	lw	a5,-40(s0)
20400db4:	17fd                	addi	a5,a5,-1
20400db6:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:249
      if (len && (base == 16U)) {
20400dba:	fd842783          	lw	a5,-40(s0)
20400dbe:	cb99                	beqz	a5,20400dd4 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:249 (discriminator 1)
20400dc0:	fd042703          	lw	a4,-48(s0)
20400dc4:	47c1                	li	a5,16
20400dc6:	00f71763          	bne	a4,a5,20400dd4 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:250
        len--;
20400dca:	fd842783          	lw	a5,-40(s0)
20400dce:	17fd                	addi	a5,a5,-1
20400dd0:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:253
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20400dd4:	fd042703          	lw	a4,-48(s0)
20400dd8:	47c1                	li	a5,16
20400dda:	02f71963          	bne	a4,a5,20400e0c <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:253 (discriminator 1)
20400dde:	441c                	lw	a5,8(s0)
20400de0:	0207f793          	andi	a5,a5,32
20400de4:	e785                	bnez	a5,20400e0c <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:253 (discriminator 2)
20400de6:	fd842703          	lw	a4,-40(s0)
20400dea:	47fd                	li	a5,31
20400dec:	02e7e063          	bltu	a5,a4,20400e0c <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:254
      buf[len++] = 'x';
20400df0:	fd842783          	lw	a5,-40(s0)
20400df4:	00178713          	addi	a4,a5,1
20400df8:	fce42c23          	sw	a4,-40(s0)
20400dfc:	fdc42703          	lw	a4,-36(s0)
20400e00:	97ba                	add	a5,a5,a4
20400e02:	07800713          	li	a4,120
20400e06:	00e78023          	sb	a4,0(a5)
20400e0a:	a0a5                	j	20400e72 <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:256
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20400e0c:	fd042703          	lw	a4,-48(s0)
20400e10:	47c1                	li	a5,16
20400e12:	02f71963          	bne	a4,a5,20400e44 <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:256 (discriminator 1)
20400e16:	441c                	lw	a5,8(s0)
20400e18:	0207f793          	andi	a5,a5,32
20400e1c:	c785                	beqz	a5,20400e44 <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:256 (discriminator 2)
20400e1e:	fd842703          	lw	a4,-40(s0)
20400e22:	47fd                	li	a5,31
20400e24:	02e7e063          	bltu	a5,a4,20400e44 <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:257
      buf[len++] = 'X';
20400e28:	fd842783          	lw	a5,-40(s0)
20400e2c:	00178713          	addi	a4,a5,1
20400e30:	fce42c23          	sw	a4,-40(s0)
20400e34:	fdc42703          	lw	a4,-36(s0)
20400e38:	97ba                	add	a5,a5,a4
20400e3a:	05800713          	li	a4,88
20400e3e:	00e78023          	sb	a4,0(a5)
20400e42:	a805                	j	20400e72 <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:259
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20400e44:	fd042703          	lw	a4,-48(s0)
20400e48:	4789                	li	a5,2
20400e4a:	02f71463          	bne	a4,a5,20400e72 <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:259 (discriminator 1)
20400e4e:	fd842703          	lw	a4,-40(s0)
20400e52:	47fd                	li	a5,31
20400e54:	00e7ef63          	bltu	a5,a4,20400e72 <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:260
      buf[len++] = 'b';
20400e58:	fd842783          	lw	a5,-40(s0)
20400e5c:	00178713          	addi	a4,a5,1
20400e60:	fce42c23          	sw	a4,-40(s0)
20400e64:	fdc42703          	lw	a4,-36(s0)
20400e68:	97ba                	add	a5,a5,a4
20400e6a:	06200713          	li	a4,98
20400e6e:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:262
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
20400e72:	fd842703          	lw	a4,-40(s0)
20400e76:	47fd                	li	a5,31
20400e78:	00e7ef63          	bltu	a5,a4,20400e96 <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:263
      buf[len++] = '0';
20400e7c:	fd842783          	lw	a5,-40(s0)
20400e80:	00178713          	addi	a4,a5,1
20400e84:	fce42c23          	sw	a4,-40(s0)
20400e88:	fdc42703          	lw	a4,-36(s0)
20400e8c:	97ba                	add	a5,a5,a4
20400e8e:	03000713          	li	a4,48
20400e92:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:267
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
20400e96:	fd842703          	lw	a4,-40(s0)
20400e9a:	47fd                	li	a5,31
20400e9c:	06e7e463          	bltu	a5,a4,20400f04 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:268
    if (negative) {
20400ea0:	fd744783          	lbu	a5,-41(s0)
20400ea4:	cf99                	beqz	a5,20400ec2 <_ntoa_format+0x1ee>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:269
      buf[len++] = '-';
20400ea6:	fd842783          	lw	a5,-40(s0)
20400eaa:	00178713          	addi	a4,a5,1
20400eae:	fce42c23          	sw	a4,-40(s0)
20400eb2:	fdc42703          	lw	a4,-36(s0)
20400eb6:	97ba                	add	a5,a5,a4
20400eb8:	02d00713          	li	a4,45
20400ebc:	00e78023          	sb	a4,0(a5)
20400ec0:	a091                	j	20400f04 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:271
    }
    else if (flags & FLAGS_PLUS) {
20400ec2:	441c                	lw	a5,8(s0)
20400ec4:	8b91                	andi	a5,a5,4
20400ec6:	cf99                	beqz	a5,20400ee4 <_ntoa_format+0x210>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:272
      buf[len++] = '+';  // ignore the space if the '+' exists
20400ec8:	fd842783          	lw	a5,-40(s0)
20400ecc:	00178713          	addi	a4,a5,1
20400ed0:	fce42c23          	sw	a4,-40(s0)
20400ed4:	fdc42703          	lw	a4,-36(s0)
20400ed8:	97ba                	add	a5,a5,a4
20400eda:	02b00713          	li	a4,43
20400ede:	00e78023          	sb	a4,0(a5)
20400ee2:	a00d                	j	20400f04 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:274
    }
    else if (flags & FLAGS_SPACE) {
20400ee4:	441c                	lw	a5,8(s0)
20400ee6:	8ba1                	andi	a5,a5,8
20400ee8:	cf91                	beqz	a5,20400f04 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:275
      buf[len++] = ' ';
20400eea:	fd842783          	lw	a5,-40(s0)
20400eee:	00178713          	addi	a4,a5,1
20400ef2:	fce42c23          	sw	a4,-40(s0)
20400ef6:	fdc42703          	lw	a4,-36(s0)
20400efa:	97ba                	add	a5,a5,a4
20400efc:	02000713          	li	a4,32
20400f00:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:279
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
20400f04:	00842883          	lw	a7,8(s0)
20400f08:	00442803          	lw	a6,4(s0)
20400f0c:	fd842783          	lw	a5,-40(s0)
20400f10:	fdc42703          	lw	a4,-36(s0)
20400f14:	fe042683          	lw	a3,-32(s0)
20400f18:	fe442603          	lw	a2,-28(s0)
20400f1c:	fe842583          	lw	a1,-24(s0)
20400f20:	fec42503          	lw	a0,-20(s0)
20400f24:	3165                	jal	20400bcc <_out_rev>
20400f26:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:280
}
20400f28:	853e                	mv	a0,a5
20400f2a:	50b2                	lw	ra,44(sp)
20400f2c:	5422                	lw	s0,40(sp)
20400f2e:	6145                	addi	sp,sp,48
20400f30:	8082                	ret

20400f32 <_ntoa_long>:
_ntoa_long():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:285


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
20400f32:	7159                	addi	sp,sp,-112
20400f34:	d686                	sw	ra,108(sp)
20400f36:	d4a2                	sw	s0,104(sp)
20400f38:	1880                	addi	s0,sp,112
20400f3a:	faa42e23          	sw	a0,-68(s0)
20400f3e:	fab42c23          	sw	a1,-72(s0)
20400f42:	fac42a23          	sw	a2,-76(s0)
20400f46:	fad42823          	sw	a3,-80(s0)
20400f4a:	fae42623          	sw	a4,-84(s0)
20400f4e:	fb042223          	sw	a6,-92(s0)
20400f52:	fb142023          	sw	a7,-96(s0)
20400f56:	faf405a3          	sb	a5,-85(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:287
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
20400f5a:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:290

  // no hash for 0 values
  if (!value) {
20400f5e:	fac42783          	lw	a5,-84(s0)
20400f62:	e781                	bnez	a5,20400f6a <_ntoa_long+0x38>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:291
    flags &= ~FLAGS_HASH;
20400f64:	405c                	lw	a5,4(s0)
20400f66:	9bbd                	andi	a5,a5,-17
20400f68:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:295
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
20400f6a:	405c                	lw	a5,4(s0)
20400f6c:	4007f793          	andi	a5,a5,1024
20400f70:	c781                	beqz	a5,20400f78 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:295 (discriminator 1)
20400f72:	fac42783          	lw	a5,-84(s0)
20400f76:	c3c9                	beqz	a5,20400ff8 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:297
    do {
      const char digit = (char)(value % base);
20400f78:	fac42703          	lw	a4,-84(s0)
20400f7c:	fa442783          	lw	a5,-92(s0)
20400f80:	02f777b3          	remu	a5,a4,a5
20400f84:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:298
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
20400f88:	feb44703          	lbu	a4,-21(s0)
20400f8c:	47a5                	li	a5,9
20400f8e:	00e7e963          	bltu	a5,a4,20400fa0 <_ntoa_long+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:298 (discriminator 1)
20400f92:	feb44783          	lbu	a5,-21(s0)
20400f96:	03078793          	addi	a5,a5,48
20400f9a:	0ff7f793          	andi	a5,a5,255
20400f9e:	a015                	j	20400fc2 <_ntoa_long+0x90>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:298 (discriminator 2)
20400fa0:	405c                	lw	a5,4(s0)
20400fa2:	0207f793          	andi	a5,a5,32
20400fa6:	c781                	beqz	a5,20400fae <_ntoa_long+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:298 (discriminator 4)
20400fa8:	04100793          	li	a5,65
20400fac:	a019                	j	20400fb2 <_ntoa_long+0x80>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:298 (discriminator 5)
20400fae:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:298 (discriminator 7)
20400fb2:	feb44703          	lbu	a4,-21(s0)
20400fb6:	97ba                	add	a5,a5,a4
20400fb8:	0ff7f793          	andi	a5,a5,255
20400fbc:	17d9                	addi	a5,a5,-10
20400fbe:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:298 (discriminator 8)
20400fc2:	fec42703          	lw	a4,-20(s0)
20400fc6:	00170693          	addi	a3,a4,1 # 2001 <__heap_size+0x1801>
20400fca:	fed42623          	sw	a3,-20(s0)
20400fce:	ff040693          	addi	a3,s0,-16
20400fd2:	9736                	add	a4,a4,a3
20400fd4:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:299 (discriminator 8)
      value /= base;
20400fd8:	fac42703          	lw	a4,-84(s0)
20400fdc:	fa442783          	lw	a5,-92(s0)
20400fe0:	02f757b3          	divu	a5,a4,a5
20400fe4:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:300 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
20400fe8:	fac42783          	lw	a5,-84(s0)
20400fec:	c791                	beqz	a5,20400ff8 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:300 (discriminator 1)
20400fee:	fec42703          	lw	a4,-20(s0)
20400ff2:	47fd                	li	a5,31
20400ff4:	f8e7f2e3          	bgeu	a5,a4,20400f78 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:303
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20400ff8:	fab44683          	lbu	a3,-85(s0)
20400ffc:	fc840713          	addi	a4,s0,-56
20401000:	405c                	lw	a5,4(s0)
20401002:	c43e                	sw	a5,8(sp)
20401004:	401c                	lw	a5,0(s0)
20401006:	c23e                	sw	a5,4(sp)
20401008:	fa042783          	lw	a5,-96(s0)
2040100c:	c03e                	sw	a5,0(sp)
2040100e:	fa442883          	lw	a7,-92(s0)
20401012:	8836                	mv	a6,a3
20401014:	fec42783          	lw	a5,-20(s0)
20401018:	fb042683          	lw	a3,-80(s0)
2040101c:	fb442603          	lw	a2,-76(s0)
20401020:	fb842583          	lw	a1,-72(s0)
20401024:	fbc42503          	lw	a0,-68(s0)
20401028:	3175                	jal	20400cd4 <_ntoa_format>
2040102a:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:304
}
2040102c:	853e                	mv	a0,a5
2040102e:	50b6                	lw	ra,108(sp)
20401030:	5426                	lw	s0,104(sp)
20401032:	6165                	addi	sp,sp,112
20401034:	8082                	ret

20401036 <_ntoa_long_long>:
_ntoa_long_long():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:310


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
20401036:	7119                	addi	sp,sp,-128
20401038:	d686                	sw	ra,108(sp)
2040103a:	d4a2                	sw	s0,104(sp)
2040103c:	1880                	addi	s0,sp,112
2040103e:	faa42e23          	sw	a0,-68(s0)
20401042:	fab42c23          	sw	a1,-72(s0)
20401046:	fac42a23          	sw	a2,-76(s0)
2040104a:	fad42823          	sw	a3,-80(s0)
2040104e:	fae42423          	sw	a4,-88(s0)
20401052:	faf42623          	sw	a5,-84(s0)
20401056:	87c2                	mv	a5,a6
20401058:	01142623          	sw	a7,12(s0)
2040105c:	faf403a3          	sb	a5,-89(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:312
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
20401060:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:315

  // no hash for 0 values
  if (!value) {
20401064:	fa842783          	lw	a5,-88(s0)
20401068:	fac42703          	lw	a4,-84(s0)
2040106c:	8fd9                	or	a5,a5,a4
2040106e:	e781                	bnez	a5,20401076 <_ntoa_long_long+0x40>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:316
    flags &= ~FLAGS_HASH;
20401070:	4c5c                	lw	a5,28(s0)
20401072:	9bbd                	andi	a5,a5,-17
20401074:	cc5c                	sw	a5,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:320
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
20401076:	4c5c                	lw	a5,28(s0)
20401078:	4007f793          	andi	a5,a5,1024
2040107c:	c799                	beqz	a5,2040108a <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:320 (discriminator 1)
2040107e:	fa842783          	lw	a5,-88(s0)
20401082:	fac42703          	lw	a4,-84(s0)
20401086:	8fd9                	or	a5,a5,a4
20401088:	c3c5                	beqz	a5,20401128 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:322
    do {
      const char digit = (char)(value % base);
2040108a:	fa842783          	lw	a5,-88(s0)
2040108e:	fac42803          	lw	a6,-84(s0)
20401092:	4450                	lw	a2,12(s0)
20401094:	4814                	lw	a3,16(s0)
20401096:	853e                	mv	a0,a5
20401098:	85c2                	mv	a1,a6
2040109a:	477010ef          	jal	ra,20402d10 <__umoddi3>
2040109e:	87aa                	mv	a5,a0
204010a0:	882e                	mv	a6,a1
204010a2:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:323
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
204010a6:	feb44703          	lbu	a4,-21(s0)
204010aa:	47a5                	li	a5,9
204010ac:	00e7e963          	bltu	a5,a4,204010be <_ntoa_long_long+0x88>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:323 (discriminator 1)
204010b0:	feb44783          	lbu	a5,-21(s0)
204010b4:	03078793          	addi	a5,a5,48
204010b8:	0ff7f793          	andi	a5,a5,255
204010bc:	a015                	j	204010e0 <_ntoa_long_long+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:323 (discriminator 2)
204010be:	4c5c                	lw	a5,28(s0)
204010c0:	0207f793          	andi	a5,a5,32
204010c4:	c781                	beqz	a5,204010cc <_ntoa_long_long+0x96>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:323 (discriminator 4)
204010c6:	04100793          	li	a5,65
204010ca:	a019                	j	204010d0 <_ntoa_long_long+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:323 (discriminator 5)
204010cc:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:323 (discriminator 7)
204010d0:	feb44703          	lbu	a4,-21(s0)
204010d4:	97ba                	add	a5,a5,a4
204010d6:	0ff7f793          	andi	a5,a5,255
204010da:	17d9                	addi	a5,a5,-10
204010dc:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:323 (discriminator 8)
204010e0:	fec42703          	lw	a4,-20(s0)
204010e4:	00170693          	addi	a3,a4,1
204010e8:	fed42623          	sw	a3,-20(s0)
204010ec:	ff040693          	addi	a3,s0,-16
204010f0:	9736                	add	a4,a4,a3
204010f2:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:324 (discriminator 8)
      value /= base;
204010f6:	4450                	lw	a2,12(s0)
204010f8:	4814                	lw	a3,16(s0)
204010fa:	fa842503          	lw	a0,-88(s0)
204010fe:	fac42583          	lw	a1,-84(s0)
20401102:	0b1010ef          	jal	ra,204029b2 <__udivdi3>
20401106:	87aa                	mv	a5,a0
20401108:	882e                	mv	a6,a1
2040110a:	faf42423          	sw	a5,-88(s0)
2040110e:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:325 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
20401112:	fa842783          	lw	a5,-88(s0)
20401116:	fac42703          	lw	a4,-84(s0)
2040111a:	8fd9                	or	a5,a5,a4
2040111c:	c791                	beqz	a5,20401128 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:325 (discriminator 1)
2040111e:	fec42703          	lw	a4,-20(s0)
20401122:	47fd                	li	a5,31
20401124:	f6e7f3e3          	bgeu	a5,a4,2040108a <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:328
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20401128:	4450                	lw	a2,12(s0)
2040112a:	fa744683          	lbu	a3,-89(s0)
2040112e:	fc840713          	addi	a4,s0,-56
20401132:	4c5c                	lw	a5,28(s0)
20401134:	c43e                	sw	a5,8(sp)
20401136:	4c1c                	lw	a5,24(s0)
20401138:	c23e                	sw	a5,4(sp)
2040113a:	485c                	lw	a5,20(s0)
2040113c:	c03e                	sw	a5,0(sp)
2040113e:	88b2                	mv	a7,a2
20401140:	8836                	mv	a6,a3
20401142:	fec42783          	lw	a5,-20(s0)
20401146:	fb042683          	lw	a3,-80(s0)
2040114a:	fb442603          	lw	a2,-76(s0)
2040114e:	fb842583          	lw	a1,-72(s0)
20401152:	fbc42503          	lw	a0,-68(s0)
20401156:	3ebd                	jal	20400cd4 <_ntoa_format>
20401158:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:329
}
2040115a:	853e                	mv	a0,a5
2040115c:	50b6                	lw	ra,108(sp)
2040115e:	5426                	lw	s0,104(sp)
20401160:	6109                	addi	sp,sp,128
20401162:	8082                	ret

20401164 <_ftoa>:
_ftoa():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:343
#endif


// internal ftoa for fixed decimal floating point
static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
20401164:	7175                	addi	sp,sp,-144
20401166:	c706                	sw	ra,140(sp)
20401168:	c522                	sw	s0,136(sp)
2040116a:	c326                	sw	s1,132(sp)
2040116c:	0900                	addi	s0,sp,144
2040116e:	f8a42e23          	sw	a0,-100(s0)
20401172:	f8b42c23          	sw	a1,-104(s0)
20401176:	f8c42a23          	sw	a2,-108(s0)
2040117a:	f8d42823          	sw	a3,-112(s0)
2040117e:	f8e42423          	sw	a4,-120(s0)
20401182:	f8f42623          	sw	a5,-116(s0)
20401186:	f9042223          	sw	a6,-124(s0)
2040118a:	f9142023          	sw	a7,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:345
  char buf[PRINTF_FTOA_BUFFER_SIZE];
  size_t len  = 0U;
2040118e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:346
  double diff = 0.0;
20401192:	fc042823          	sw	zero,-48(s0)
20401196:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:352

  // powers of 10
  static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };

  // test for special values
  if (value != value)
2040119a:	f8842603          	lw	a2,-120(s0)
2040119e:	f8c42683          	lw	a3,-116(s0)
204011a2:	f8842503          	lw	a0,-120(s0)
204011a6:	f8c42583          	lw	a1,-116(s0)
204011aa:	1e1020ef          	jal	ra,20403b8a <__eqdf2>
204011ae:	87aa                	mv	a5,a0
204011b0:	c78d                	beqz	a5,204011da <_ftoa+0x76>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:353
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
204011b2:	00042883          	lw	a7,0(s0)
204011b6:	f8042803          	lw	a6,-128(s0)
204011ba:	478d                	li	a5,3
204011bc:	20408737          	lui	a4,0x20408
204011c0:	2e070713          	addi	a4,a4,736 # 204082e0 <_exit+0x72>
204011c4:	f9042683          	lw	a3,-112(s0)
204011c8:	f9442603          	lw	a2,-108(s0)
204011cc:	f9842583          	lw	a1,-104(s0)
204011d0:	f9c42503          	lw	a0,-100(s0)
204011d4:	3ae5                	jal	20400bcc <_out_rev>
204011d6:	87aa                	mv	a5,a0
204011d8:	ab81                	j	20401728 <_ftoa+0x5c4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:354
  if (value < -DBL_MAX)
204011da:	204087b7          	lui	a5,0x20408
204011de:	2f87a603          	lw	a2,760(a5) # 204082f8 <_exit+0x8a>
204011e2:	2fc7a683          	lw	a3,764(a5)
204011e6:	f8842503          	lw	a0,-120(s0)
204011ea:	f8c42583          	lw	a1,-116(s0)
204011ee:	2ab020ef          	jal	ra,20403c98 <__ledf2>
204011f2:	87aa                	mv	a5,a0
204011f4:	0207d663          	bgez	a5,20401220 <_ftoa+0xbc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:355
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
204011f8:	00042883          	lw	a7,0(s0)
204011fc:	f8042803          	lw	a6,-128(s0)
20401200:	4791                	li	a5,4
20401202:	20408737          	lui	a4,0x20408
20401206:	2e470713          	addi	a4,a4,740 # 204082e4 <_exit+0x76>
2040120a:	f9042683          	lw	a3,-112(s0)
2040120e:	f9442603          	lw	a2,-108(s0)
20401212:	f9842583          	lw	a1,-104(s0)
20401216:	f9c42503          	lw	a0,-100(s0)
2040121a:	3a4d                	jal	20400bcc <_out_rev>
2040121c:	87aa                	mv	a5,a0
2040121e:	a329                	j	20401728 <_ftoa+0x5c4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:356
  if (value > DBL_MAX)
20401220:	204087b7          	lui	a5,0x20408
20401224:	3007a603          	lw	a2,768(a5) # 20408300 <_exit+0x92>
20401228:	3047a683          	lw	a3,772(a5)
2040122c:	f8842503          	lw	a0,-120(s0)
20401230:	f8c42583          	lw	a1,-116(s0)
20401234:	1c1020ef          	jal	ra,20403bf4 <__gedf2>
20401238:	87aa                	mv	a5,a0
2040123a:	04f05363          	blez	a5,20401280 <_ftoa+0x11c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:357
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
2040123e:	401c                	lw	a5,0(s0)
20401240:	8b91                	andi	a5,a5,4
20401242:	c791                	beqz	a5,2040124e <_ftoa+0xea>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:357 (discriminator 1)
20401244:	204087b7          	lui	a5,0x20408
20401248:	2ec78713          	addi	a4,a5,748 # 204082ec <_exit+0x7e>
2040124c:	a029                	j	20401256 <_ftoa+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:357 (discriminator 2)
2040124e:	204087b7          	lui	a5,0x20408
20401252:	2f478713          	addi	a4,a5,756 # 204082f4 <_exit+0x86>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:357 (discriminator 4)
20401256:	401c                	lw	a5,0(s0)
20401258:	8b91                	andi	a5,a5,4
2040125a:	c399                	beqz	a5,20401260 <_ftoa+0xfc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:357 (discriminator 5)
2040125c:	4791                	li	a5,4
2040125e:	a011                	j	20401262 <_ftoa+0xfe>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:357 (discriminator 6)
20401260:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:357 (discriminator 8)
20401262:	00042883          	lw	a7,0(s0)
20401266:	f8042803          	lw	a6,-128(s0)
2040126a:	f9042683          	lw	a3,-112(s0)
2040126e:	f9442603          	lw	a2,-108(s0)
20401272:	f9842583          	lw	a1,-104(s0)
20401276:	f9c42503          	lw	a0,-100(s0)
2040127a:	3a89                	jal	20400bcc <_out_rev>
2040127c:	87aa                	mv	a5,a0
2040127e:	a16d                	j	20401728 <_ftoa+0x5c4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:361

  // test for very large values
  // standard printf behavior is to print EVERY whole number digit -- which could be 100s of characters overflowing your buffers == bad
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
20401280:	204087b7          	lui	a5,0x20408
20401284:	3087a603          	lw	a2,776(a5) # 20408308 <_exit+0x9a>
20401288:	30c7a683          	lw	a3,780(a5)
2040128c:	f8842503          	lw	a0,-120(s0)
20401290:	f8c42583          	lw	a1,-116(s0)
20401294:	161020ef          	jal	ra,20403bf4 <__gedf2>
20401298:	87aa                	mv	a5,a0
2040129a:	02f04163          	bgtz	a5,204012bc <_ftoa+0x158>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:361 (discriminator 1)
2040129e:	204087b7          	lui	a5,0x20408
204012a2:	3107a603          	lw	a2,784(a5) # 20408310 <_exit+0xa2>
204012a6:	3147a683          	lw	a3,788(a5)
204012aa:	f8842503          	lw	a0,-120(s0)
204012ae:	f8c42583          	lw	a1,-116(s0)
204012b2:	1e7020ef          	jal	ra,20403c98 <__ledf2>
204012b6:	87aa                	mv	a5,a0
204012b8:	0207d763          	bgez	a5,204012e6 <_ftoa+0x182>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:363
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
204012bc:	401c                	lw	a5,0(s0)
204012be:	c03e                	sw	a5,0(sp)
204012c0:	f8042883          	lw	a7,-128(s0)
204012c4:	f8442803          	lw	a6,-124(s0)
204012c8:	f8842703          	lw	a4,-120(s0)
204012cc:	f8c42783          	lw	a5,-116(s0)
204012d0:	f9042683          	lw	a3,-112(s0)
204012d4:	f9442603          	lw	a2,-108(s0)
204012d8:	f9842583          	lw	a1,-104(s0)
204012dc:	f9c42503          	lw	a0,-100(s0)
204012e0:	2991                	jal	20401734 <_etoa>
204012e2:	87aa                	mv	a5,a0
204012e4:	a191                	j	20401728 <_ftoa+0x5c4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:370
    return 0U;
#endif
  }

  // test for negative
  bool negative = false;
204012e6:	fe0405a3          	sb	zero,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:371
  if (value < 0) {
204012ea:	4601                	li	a2,0
204012ec:	4681                	li	a3,0
204012ee:	f8842503          	lw	a0,-120(s0)
204012f2:	f8c42583          	lw	a1,-116(s0)
204012f6:	1a3020ef          	jal	ra,20403c98 <__ledf2>
204012fa:	87aa                	mv	a5,a0
204012fc:	0207d363          	bgez	a5,20401322 <_ftoa+0x1be>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:372
    negative = true;
20401300:	4785                	li	a5,1
20401302:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:373
    value = 0 - value;
20401306:	f8842603          	lw	a2,-120(s0)
2040130a:	f8c42683          	lw	a3,-116(s0)
2040130e:	4501                	li	a0,0
20401310:	4581                	li	a1,0
20401312:	667020ef          	jal	ra,20404178 <__subdf3>
20401316:	87aa                	mv	a5,a0
20401318:	882e                	mv	a6,a1
2040131a:	f8f42423          	sw	a5,-120(s0)
2040131e:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:377
  }

  // set default precision, if not set explicitly
  if (!(flags & FLAGS_PRECISION)) {
20401322:	401c                	lw	a5,0(s0)
20401324:	4007f793          	andi	a5,a5,1024
20401328:	e79d                	bnez	a5,20401356 <_ftoa+0x1f2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:378
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
2040132a:	4799                	li	a5,6
2040132c:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:381
  }
  // limit precision to 9, cause a prec >= 10 can lead to overflow errors
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20401330:	a01d                	j	20401356 <_ftoa+0x1f2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:382
    buf[len++] = '0';
20401332:	fec42783          	lw	a5,-20(s0)
20401336:	00178713          	addi	a4,a5,1
2040133a:	fee42623          	sw	a4,-20(s0)
2040133e:	ff040713          	addi	a4,s0,-16
20401342:	97ba                	add	a5,a5,a4
20401344:	03000713          	li	a4,48
20401348:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:383
    prec--;
2040134c:	f8442783          	lw	a5,-124(s0)
20401350:	17fd                	addi	a5,a5,-1
20401352:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:381
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20401356:	fec42703          	lw	a4,-20(s0)
2040135a:	47fd                	li	a5,31
2040135c:	00e7e763          	bltu	a5,a4,2040136a <_ftoa+0x206>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:381 (discriminator 1)
20401360:	f8442703          	lw	a4,-124(s0)
20401364:	47a5                	li	a5,9
20401366:	fce7e6e3          	bltu	a5,a4,20401332 <_ftoa+0x1ce>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:386
  }

  int whole = (int)value;
2040136a:	f8842503          	lw	a0,-120(s0)
2040136e:	f8c42583          	lw	a1,-116(s0)
20401372:	3fc030ef          	jal	ra,2040476e <__fixdfsi>
20401376:	87aa                	mv	a5,a0
20401378:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:387
  double tmp = (value - whole) * pow10[prec];
2040137c:	fe442503          	lw	a0,-28(s0)
20401380:	4ae030ef          	jal	ra,2040482e <__floatsidf>
20401384:	87aa                	mv	a5,a0
20401386:	882e                	mv	a6,a1
20401388:	863e                	mv	a2,a5
2040138a:	86c2                	mv	a3,a6
2040138c:	f8842503          	lw	a0,-120(s0)
20401390:	f8c42583          	lw	a1,-116(s0)
20401394:	5e5020ef          	jal	ra,20404178 <__subdf3>
20401398:	87aa                	mv	a5,a0
2040139a:	882e                	mv	a6,a1
2040139c:	853e                	mv	a0,a5
2040139e:	85c2                	mv	a1,a6
204013a0:	204087b7          	lui	a5,0x20408
204013a4:	57078713          	addi	a4,a5,1392 # 20408570 <pow10.2193>
204013a8:	f8442783          	lw	a5,-124(s0)
204013ac:	078e                	slli	a5,a5,0x3
204013ae:	97ba                	add	a5,a5,a4
204013b0:	0047a803          	lw	a6,4(a5)
204013b4:	439c                	lw	a5,0(a5)
204013b6:	863e                	mv	a2,a5
204013b8:	86c2                	mv	a3,a6
204013ba:	183020ef          	jal	ra,20403d3c <__muldf3>
204013be:	87aa                	mv	a5,a0
204013c0:	882e                	mv	a6,a1
204013c2:	fcf42423          	sw	a5,-56(s0)
204013c6:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:388
  unsigned long frac = (unsigned long)tmp;
204013ca:	fc842503          	lw	a0,-56(s0)
204013ce:	fcc42583          	lw	a1,-52(s0)
204013d2:	400030ef          	jal	ra,204047d2 <__fixunsdfsi>
204013d6:	87aa                	mv	a5,a0
204013d8:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:389
  diff = tmp - frac;
204013dc:	fe042503          	lw	a0,-32(s0)
204013e0:	4b8030ef          	jal	ra,20404898 <__floatunsidf>
204013e4:	87aa                	mv	a5,a0
204013e6:	882e                	mv	a6,a1
204013e8:	863e                	mv	a2,a5
204013ea:	86c2                	mv	a3,a6
204013ec:	fc842503          	lw	a0,-56(s0)
204013f0:	fcc42583          	lw	a1,-52(s0)
204013f4:	585020ef          	jal	ra,20404178 <__subdf3>
204013f8:	87aa                	mv	a5,a0
204013fa:	882e                	mv	a6,a1
204013fc:	fcf42823          	sw	a5,-48(s0)
20401400:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:391

  if (diff > 0.5) {
20401404:	204087b7          	lui	a5,0x20408
20401408:	3187a603          	lw	a2,792(a5) # 20408318 <_exit+0xaa>
2040140c:	31c7a683          	lw	a3,796(a5)
20401410:	fd042503          	lw	a0,-48(s0)
20401414:	fd442583          	lw	a1,-44(s0)
20401418:	7dc020ef          	jal	ra,20403bf4 <__gedf2>
2040141c:	87aa                	mv	a5,a0
2040141e:	04f05563          	blez	a5,20401468 <_ftoa+0x304>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:392
    ++frac;
20401422:	fe042783          	lw	a5,-32(s0)
20401426:	0785                	addi	a5,a5,1
20401428:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:394
    // handle rollover, e.g. case 0.99 with prec 1 is 1.0
    if (frac >= pow10[prec]) {
2040142c:	fe042503          	lw	a0,-32(s0)
20401430:	468030ef          	jal	ra,20404898 <__floatunsidf>
20401434:	204087b7          	lui	a5,0x20408
20401438:	57078713          	addi	a4,a5,1392 # 20408570 <pow10.2193>
2040143c:	f8442783          	lw	a5,-124(s0)
20401440:	078e                	slli	a5,a5,0x3
20401442:	97ba                	add	a5,a5,a4
20401444:	0047a803          	lw	a6,4(a5)
20401448:	439c                	lw	a5,0(a5)
2040144a:	863e                	mv	a2,a5
2040144c:	86c2                	mv	a3,a6
2040144e:	7a6020ef          	jal	ra,20403bf4 <__gedf2>
20401452:	87aa                	mv	a5,a0
20401454:	0407c563          	bltz	a5,2040149e <_ftoa+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:395
      frac = 0;
20401458:	fe042023          	sw	zero,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:396
      ++whole;
2040145c:	fe442783          	lw	a5,-28(s0)
20401460:	0785                	addi	a5,a5,1
20401462:	fef42223          	sw	a5,-28(s0)
20401466:	a825                	j	2040149e <_ftoa+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:399
    }
  }
  else if (diff < 0.5) {
20401468:	204087b7          	lui	a5,0x20408
2040146c:	3187a603          	lw	a2,792(a5) # 20408318 <_exit+0xaa>
20401470:	31c7a683          	lw	a3,796(a5)
20401474:	fd042503          	lw	a0,-48(s0)
20401478:	fd442583          	lw	a1,-44(s0)
2040147c:	01d020ef          	jal	ra,20403c98 <__ledf2>
20401480:	87aa                	mv	a5,a0
20401482:	0007ce63          	bltz	a5,2040149e <_ftoa+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:401
  }
  else if ((frac == 0U) || (frac & 1U)) {
20401486:	fe042783          	lw	a5,-32(s0)
2040148a:	c789                	beqz	a5,20401494 <_ftoa+0x330>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:401 (discriminator 1)
2040148c:	fe042783          	lw	a5,-32(s0)
20401490:	8b85                	andi	a5,a5,1
20401492:	c791                	beqz	a5,2040149e <_ftoa+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:403
    // if halfway, round up if odd OR if last digit is 0
    ++frac;
20401494:	fe042783          	lw	a5,-32(s0)
20401498:	0785                	addi	a5,a5,1
2040149a:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:406
  }

  if (prec == 0U) {
2040149e:	f8442783          	lw	a5,-124(s0)
204014a2:	e7d9                	bnez	a5,20401530 <_ftoa+0x3cc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:407
    diff = value - (double)whole;
204014a4:	fe442503          	lw	a0,-28(s0)
204014a8:	386030ef          	jal	ra,2040482e <__floatsidf>
204014ac:	87aa                	mv	a5,a0
204014ae:	882e                	mv	a6,a1
204014b0:	863e                	mv	a2,a5
204014b2:	86c2                	mv	a3,a6
204014b4:	f8842503          	lw	a0,-120(s0)
204014b8:	f8c42583          	lw	a1,-116(s0)
204014bc:	4bd020ef          	jal	ra,20404178 <__subdf3>
204014c0:	87aa                	mv	a5,a0
204014c2:	882e                	mv	a6,a1
204014c4:	fcf42823          	sw	a5,-48(s0)
204014c8:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:408
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
204014cc:	4485                	li	s1,1
204014ce:	204087b7          	lui	a5,0x20408
204014d2:	3187a603          	lw	a2,792(a5) # 20408318 <_exit+0xaa>
204014d6:	31c7a683          	lw	a3,796(a5)
204014da:	fd042503          	lw	a0,-48(s0)
204014de:	fd442583          	lw	a1,-44(s0)
204014e2:	7b6020ef          	jal	ra,20403c98 <__ledf2>
204014e6:	87aa                	mv	a5,a0
204014e8:	0007c363          	bltz	a5,204014ee <_ftoa+0x38a>
204014ec:	4481                	li	s1,0
204014ee:	0ff4f793          	andi	a5,s1,255
204014f2:	0017c793          	xori	a5,a5,1
204014f6:	0ff7f793          	andi	a5,a5,255
204014fa:	e385                	bnez	a5,2040151a <_ftoa+0x3b6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:408 (discriminator 2)
204014fc:	204087b7          	lui	a5,0x20408
20401500:	3187a603          	lw	a2,792(a5) # 20408318 <_exit+0xaa>
20401504:	31c7a683          	lw	a3,796(a5)
20401508:	fd042503          	lw	a0,-48(s0)
2040150c:	fd442583          	lw	a1,-44(s0)
20401510:	6e4020ef          	jal	ra,20403bf4 <__gedf2>
20401514:	87aa                	mv	a5,a0
20401516:	0cf05a63          	blez	a5,204015ea <_ftoa+0x486>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:408 (discriminator 3)
2040151a:	fe442783          	lw	a5,-28(s0)
2040151e:	8b85                	andi	a5,a5,1
20401520:	10078663          	beqz	a5,2040162c <_ftoa+0x4c8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:411
      // exactly 0.5 and ODD, then round up
      // 1.5 -> 2, but 2.5 -> 2
      ++whole;
20401524:	fe442783          	lw	a5,-28(s0)
20401528:	0785                	addi	a5,a5,1
2040152a:	fef42223          	sw	a5,-28(s0)
2040152e:	a8fd                	j	2040162c <_ftoa+0x4c8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:415
    }
  }
  else {
    unsigned int count = prec;
20401530:	f8442783          	lw	a5,-124(s0)
20401534:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:417
    // now do fractional part, as an unsigned number
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401538:	a0b1                	j	20401584 <_ftoa+0x420>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:418
      --count;
2040153a:	fdc42783          	lw	a5,-36(s0)
2040153e:	17fd                	addi	a5,a5,-1
20401540:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:419
      buf[len++] = (char)(48U + (frac % 10U));
20401544:	fe042703          	lw	a4,-32(s0)
20401548:	47a9                	li	a5,10
2040154a:	02f777b3          	remu	a5,a4,a5
2040154e:	0ff7f713          	andi	a4,a5,255
20401552:	fec42783          	lw	a5,-20(s0)
20401556:	00178693          	addi	a3,a5,1
2040155a:	fed42623          	sw	a3,-20(s0)
2040155e:	03070713          	addi	a4,a4,48
20401562:	0ff77713          	andi	a4,a4,255
20401566:	ff040693          	addi	a3,s0,-16
2040156a:	97b6                	add	a5,a5,a3
2040156c:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:420
      if (!(frac /= 10U)) {
20401570:	fe042703          	lw	a4,-32(s0)
20401574:	47a9                	li	a5,10
20401576:	02f757b3          	divu	a5,a4,a5
2040157a:	fef42023          	sw	a5,-32(s0)
2040157e:	fe042783          	lw	a5,-32(s0)
20401582:	c799                	beqz	a5,20401590 <_ftoa+0x42c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:417
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401584:	fec42703          	lw	a4,-20(s0)
20401588:	47fd                	li	a5,31
2040158a:	fae7f8e3          	bgeu	a5,a4,2040153a <_ftoa+0x3d6>
2040158e:	a005                	j	204015ae <_ftoa+0x44a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:421
        break;
20401590:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:425
      }
    }
    // add extra 0s
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20401592:	a831                	j	204015ae <_ftoa+0x44a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:426
      buf[len++] = '0';
20401594:	fec42783          	lw	a5,-20(s0)
20401598:	00178713          	addi	a4,a5,1
2040159c:	fee42623          	sw	a4,-20(s0)
204015a0:	ff040713          	addi	a4,s0,-16
204015a4:	97ba                	add	a5,a5,a4
204015a6:	03000713          	li	a4,48
204015aa:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:425
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
204015ae:	fec42703          	lw	a4,-20(s0)
204015b2:	47fd                	li	a5,31
204015b4:	00e7e963          	bltu	a5,a4,204015c6 <_ftoa+0x462>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:425 (discriminator 1)
204015b8:	fdc42783          	lw	a5,-36(s0)
204015bc:	fff78713          	addi	a4,a5,-1
204015c0:	fce42e23          	sw	a4,-36(s0)
204015c4:	fbe1                	bnez	a5,20401594 <_ftoa+0x430>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:428
    }
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
204015c6:	fec42703          	lw	a4,-20(s0)
204015ca:	47fd                	li	a5,31
204015cc:	06e7e063          	bltu	a5,a4,2040162c <_ftoa+0x4c8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:430
      // add decimal
      buf[len++] = '.';
204015d0:	fec42783          	lw	a5,-20(s0)
204015d4:	00178713          	addi	a4,a5,1
204015d8:	fee42623          	sw	a4,-20(s0)
204015dc:	ff040713          	addi	a4,s0,-16
204015e0:	97ba                	add	a5,a5,a4
204015e2:	02e00713          	li	a4,46
204015e6:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:435 (discriminator 1)
    }
  }

  // do whole part, number is reversed
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
204015ea:	a089                	j	2040162c <_ftoa+0x4c8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:436
    buf[len++] = (char)(48 + (whole % 10));
204015ec:	fe442703          	lw	a4,-28(s0)
204015f0:	47a9                	li	a5,10
204015f2:	02f767b3          	rem	a5,a4,a5
204015f6:	0ff7f713          	andi	a4,a5,255
204015fa:	fec42783          	lw	a5,-20(s0)
204015fe:	00178693          	addi	a3,a5,1
20401602:	fed42623          	sw	a3,-20(s0)
20401606:	03070713          	addi	a4,a4,48
2040160a:	0ff77713          	andi	a4,a4,255
2040160e:	ff040693          	addi	a3,s0,-16
20401612:	97b6                	add	a5,a5,a3
20401614:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:437
    if (!(whole /= 10)) {
20401618:	fe442703          	lw	a4,-28(s0)
2040161c:	47a9                	li	a5,10
2040161e:	02f747b3          	div	a5,a4,a5
20401622:	fef42223          	sw	a5,-28(s0)
20401626:	fe442783          	lw	a5,-28(s0)
2040162a:	c799                	beqz	a5,20401638 <_ftoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:435
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
2040162c:	fec42703          	lw	a4,-20(s0)
20401630:	47fd                	li	a5,31
20401632:	fae7fde3          	bgeu	a5,a4,204015ec <_ftoa+0x488>
20401636:	a011                	j	2040163a <_ftoa+0x4d6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:438
      break;
20401638:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:443
    }
  }

  // pad leading zeros
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
2040163a:	401c                	lw	a5,0(s0)
2040163c:	8b89                	andi	a5,a5,2
2040163e:	ebb9                	bnez	a5,20401694 <_ftoa+0x530>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:443 (discriminator 1)
20401640:	401c                	lw	a5,0(s0)
20401642:	8b85                	andi	a5,a5,1
20401644:	cba1                	beqz	a5,20401694 <_ftoa+0x530>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:444
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
20401646:	f8042783          	lw	a5,-128(s0)
2040164a:	cb95                	beqz	a5,2040167e <_ftoa+0x51a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:444 (discriminator 1)
2040164c:	feb44783          	lbu	a5,-21(s0)
20401650:	e781                	bnez	a5,20401658 <_ftoa+0x4f4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:444 (discriminator 2)
20401652:	401c                	lw	a5,0(s0)
20401654:	8bb1                	andi	a5,a5,12
20401656:	c785                	beqz	a5,2040167e <_ftoa+0x51a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:445
      width--;
20401658:	f8042783          	lw	a5,-128(s0)
2040165c:	17fd                	addi	a5,a5,-1
2040165e:	f8f42023          	sw	a5,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:447
    }
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20401662:	a831                	j	2040167e <_ftoa+0x51a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:448
      buf[len++] = '0';
20401664:	fec42783          	lw	a5,-20(s0)
20401668:	00178713          	addi	a4,a5,1
2040166c:	fee42623          	sw	a4,-20(s0)
20401670:	ff040713          	addi	a4,s0,-16
20401674:	97ba                	add	a5,a5,a4
20401676:	03000713          	li	a4,48
2040167a:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:447
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
2040167e:	fec42703          	lw	a4,-20(s0)
20401682:	f8042783          	lw	a5,-128(s0)
20401686:	00f77763          	bgeu	a4,a5,20401694 <_ftoa+0x530>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:447 (discriminator 1)
2040168a:	fec42703          	lw	a4,-20(s0)
2040168e:	47fd                	li	a5,31
20401690:	fce7fae3          	bgeu	a5,a4,20401664 <_ftoa+0x500>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:452
    }
  }

  if (len < PRINTF_FTOA_BUFFER_SIZE) {
20401694:	fec42703          	lw	a4,-20(s0)
20401698:	47fd                	li	a5,31
2040169a:	06e7e463          	bltu	a5,a4,20401702 <_ftoa+0x59e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:453
    if (negative) {
2040169e:	feb44783          	lbu	a5,-21(s0)
204016a2:	cf99                	beqz	a5,204016c0 <_ftoa+0x55c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:454
      buf[len++] = '-';
204016a4:	fec42783          	lw	a5,-20(s0)
204016a8:	00178713          	addi	a4,a5,1
204016ac:	fee42623          	sw	a4,-20(s0)
204016b0:	ff040713          	addi	a4,s0,-16
204016b4:	97ba                	add	a5,a5,a4
204016b6:	02d00713          	li	a4,45
204016ba:	fae78c23          	sb	a4,-72(a5)
204016be:	a091                	j	20401702 <_ftoa+0x59e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:456
    }
    else if (flags & FLAGS_PLUS) {
204016c0:	401c                	lw	a5,0(s0)
204016c2:	8b91                	andi	a5,a5,4
204016c4:	cf99                	beqz	a5,204016e2 <_ftoa+0x57e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:457
      buf[len++] = '+';  // ignore the space if the '+' exists
204016c6:	fec42783          	lw	a5,-20(s0)
204016ca:	00178713          	addi	a4,a5,1
204016ce:	fee42623          	sw	a4,-20(s0)
204016d2:	ff040713          	addi	a4,s0,-16
204016d6:	97ba                	add	a5,a5,a4
204016d8:	02b00713          	li	a4,43
204016dc:	fae78c23          	sb	a4,-72(a5)
204016e0:	a00d                	j	20401702 <_ftoa+0x59e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:459
    }
    else if (flags & FLAGS_SPACE) {
204016e2:	401c                	lw	a5,0(s0)
204016e4:	8ba1                	andi	a5,a5,8
204016e6:	cf91                	beqz	a5,20401702 <_ftoa+0x59e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:460
      buf[len++] = ' ';
204016e8:	fec42783          	lw	a5,-20(s0)
204016ec:	00178713          	addi	a4,a5,1
204016f0:	fee42623          	sw	a4,-20(s0)
204016f4:	ff040713          	addi	a4,s0,-16
204016f8:	97ba                	add	a5,a5,a4
204016fa:	02000713          	li	a4,32
204016fe:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:464
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
20401702:	fa840713          	addi	a4,s0,-88
20401706:	00042883          	lw	a7,0(s0)
2040170a:	f8042803          	lw	a6,-128(s0)
2040170e:	fec42783          	lw	a5,-20(s0)
20401712:	f9042683          	lw	a3,-112(s0)
20401716:	f9442603          	lw	a2,-108(s0)
2040171a:	f9842583          	lw	a1,-104(s0)
2040171e:	f9c42503          	lw	a0,-100(s0)
20401722:	caaff0ef          	jal	ra,20400bcc <_out_rev>
20401726:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:465 (discriminator 3)
}
20401728:	853e                	mv	a0,a5
2040172a:	40ba                	lw	ra,140(sp)
2040172c:	442a                	lw	s0,136(sp)
2040172e:	449a                	lw	s1,132(sp)
20401730:	6149                	addi	sp,sp,144
20401732:	8082                	ret

20401734 <_etoa>:
_etoa():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:471


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
20401734:	7131                	addi	sp,sp,-192
20401736:	df06                	sw	ra,188(sp)
20401738:	dd22                	sw	s0,184(sp)
2040173a:	db26                	sw	s1,180(sp)
2040173c:	d94a                	sw	s2,176(sp)
2040173e:	d74e                	sw	s3,172(sp)
20401740:	d552                	sw	s4,168(sp)
20401742:	d356                	sw	s5,164(sp)
20401744:	d15a                	sw	s6,160(sp)
20401746:	cf5e                	sw	s7,156(sp)
20401748:	cd62                	sw	s8,152(sp)
2040174a:	cb66                	sw	s9,148(sp)
2040174c:	c96a                	sw	s10,144(sp)
2040174e:	c76e                	sw	s11,140(sp)
20401750:	0180                	addi	s0,sp,192
20401752:	f6a42e23          	sw	a0,-132(s0)
20401756:	f6b42c23          	sw	a1,-136(s0)
2040175a:	f6c42a23          	sw	a2,-140(s0)
2040175e:	f6d42823          	sw	a3,-144(s0)
20401762:	f6e42423          	sw	a4,-152(s0)
20401766:	f6f42623          	sw	a5,-148(s0)
2040176a:	f7042223          	sw	a6,-156(s0)
2040176e:	f7142023          	sw	a7,-160(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:473
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
20401772:	f6842603          	lw	a2,-152(s0)
20401776:	f6c42683          	lw	a3,-148(s0)
2040177a:	f6842503          	lw	a0,-152(s0)
2040177e:	f6c42583          	lw	a1,-148(s0)
20401782:	408020ef          	jal	ra,20403b8a <__eqdf2>
20401786:	87aa                	mv	a5,a0
20401788:	ef9d                	bnez	a5,204017c6 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:473 (discriminator 1)
2040178a:	204087b7          	lui	a5,0x20408
2040178e:	3007a603          	lw	a2,768(a5) # 20408300 <_exit+0x92>
20401792:	3047a683          	lw	a3,772(a5)
20401796:	f6842503          	lw	a0,-152(s0)
2040179a:	f6c42583          	lw	a1,-148(s0)
2040179e:	456020ef          	jal	ra,20403bf4 <__gedf2>
204017a2:	87aa                	mv	a5,a0
204017a4:	02f04163          	bgtz	a5,204017c6 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:473 (discriminator 2)
204017a8:	204087b7          	lui	a5,0x20408
204017ac:	2f87a603          	lw	a2,760(a5) # 204082f8 <_exit+0x8a>
204017b0:	2fc7a683          	lw	a3,764(a5)
204017b4:	f6842503          	lw	a0,-152(s0)
204017b8:	f6c42583          	lw	a1,-148(s0)
204017bc:	4dc020ef          	jal	ra,20403c98 <__ledf2>
204017c0:	87aa                	mv	a5,a0
204017c2:	0207d763          	bgez	a5,204017f0 <_etoa+0xbc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:474
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
204017c6:	401c                	lw	a5,0(s0)
204017c8:	c03e                	sw	a5,0(sp)
204017ca:	f6042883          	lw	a7,-160(s0)
204017ce:	f6442803          	lw	a6,-156(s0)
204017d2:	f6842703          	lw	a4,-152(s0)
204017d6:	f6c42783          	lw	a5,-148(s0)
204017da:	f7042683          	lw	a3,-144(s0)
204017de:	f7442603          	lw	a2,-140(s0)
204017e2:	f7842583          	lw	a1,-136(s0)
204017e6:	f7c42503          	lw	a0,-132(s0)
204017ea:	3aad                	jal	20401164 <_ftoa>
204017ec:	87aa                	mv	a5,a0
204017ee:	ab49                	j	20401d80 <_etoa+0x64c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:478
  }

  // determine the sign
  const bool negative = value < 0;
204017f0:	4485                	li	s1,1
204017f2:	4601                	li	a2,0
204017f4:	4681                	li	a3,0
204017f6:	f6842503          	lw	a0,-152(s0)
204017fa:	f6c42583          	lw	a1,-148(s0)
204017fe:	49a020ef          	jal	ra,20403c98 <__ledf2>
20401802:	87aa                	mv	a5,a0
20401804:	0007c363          	bltz	a5,2040180a <_etoa+0xd6>
20401808:	4481                	li	s1,0
2040180a:	fa9409a3          	sb	s1,-77(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:479
  if (negative) {
2040180e:	fb344783          	lbu	a5,-77(s0)
20401812:	cf81                	beqz	a5,2040182a <_etoa+0xf6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:480
    value = -value;
20401814:	f6842783          	lw	a5,-152(s0)
20401818:	f6f42423          	sw	a5,-152(s0)
2040181c:	f6c42703          	lw	a4,-148(s0)
20401820:	800007b7          	lui	a5,0x80000
20401824:	8fb9                	xor	a5,a5,a4
20401826:	f6f42623          	sw	a5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:484
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
2040182a:	401c                	lw	a5,0(s0)
2040182c:	4007f793          	andi	a5,a5,1024
20401830:	e781                	bnez	a5,20401838 <_etoa+0x104>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:485
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
20401832:	4799                	li	a5,6
20401834:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:495
  union {
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
20401838:	f6842783          	lw	a5,-152(s0)
2040183c:	f6c42803          	lw	a6,-148(s0)
20401840:	f8f42423          	sw	a5,-120(s0)
20401844:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:496
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
20401848:	f8842783          	lw	a5,-120(s0)
2040184c:	f8c42803          	lw	a6,-116(s0)
20401850:	01485793          	srli	a5,a6,0x14
20401854:	f4f42c23          	sw	a5,-168(s0)
20401858:	f4042e23          	sw	zero,-164(s0)
2040185c:	f5842783          	lw	a5,-168(s0)
20401860:	7ff7f793          	andi	a5,a5,2047
20401864:	c0178793          	addi	a5,a5,-1023 # 7ffffc01 <metal_segment_heap_target_end+0xffffbf05>
20401868:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:497
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
2040186c:	f8842783          	lw	a5,-120(s0)
20401870:	f8c42803          	lw	a6,-116(s0)
20401874:	fff7f913          	andi	s2,a5,-1
20401878:	00100737          	lui	a4,0x100
2040187c:	177d                	addi	a4,a4,-1
2040187e:	00e879b3          	and	s3,a6,a4
20401882:	00096b13          	ori	s6,s2,0
20401886:	3ff007b7          	lui	a5,0x3ff00
2040188a:	00f9ebb3          	or	s7,s3,a5
2040188e:	f9642423          	sw	s6,-120(s0)
20401892:	f9742623          	sw	s7,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:499
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
20401896:	fac42503          	lw	a0,-84(s0)
2040189a:	795020ef          	jal	ra,2040482e <__floatsidf>
2040189e:	204087b7          	lui	a5,0x20408
204018a2:	3207a603          	lw	a2,800(a5) # 20408320 <_exit+0xb2>
204018a6:	3247a683          	lw	a3,804(a5)
204018aa:	492020ef          	jal	ra,20403d3c <__muldf3>
204018ae:	87aa                	mv	a5,a0
204018b0:	882e                	mv	a6,a1
204018b2:	853e                	mv	a0,a5
204018b4:	85c2                	mv	a1,a6
204018b6:	204087b7          	lui	a5,0x20408
204018ba:	3287a603          	lw	a2,808(a5) # 20408328 <_exit+0xba>
204018be:	32c7a683          	lw	a3,812(a5)
204018c2:	7a0010ef          	jal	ra,20403062 <__adddf3>
204018c6:	87aa                	mv	a5,a0
204018c8:	882e                	mv	a6,a1
204018ca:	893e                	mv	s2,a5
204018cc:	89c2                	mv	s3,a6
204018ce:	f8842783          	lw	a5,-120(s0)
204018d2:	f8c42803          	lw	a6,-116(s0)
204018d6:	20408737          	lui	a4,0x20408
204018da:	33072603          	lw	a2,816(a4) # 20408330 <_exit+0xc2>
204018de:	33472683          	lw	a3,820(a4)
204018e2:	853e                	mv	a0,a5
204018e4:	85c2                	mv	a1,a6
204018e6:	093020ef          	jal	ra,20404178 <__subdf3>
204018ea:	87aa                	mv	a5,a0
204018ec:	882e                	mv	a6,a1
204018ee:	853e                	mv	a0,a5
204018f0:	85c2                	mv	a1,a6
204018f2:	204087b7          	lui	a5,0x20408
204018f6:	3387a603          	lw	a2,824(a5) # 20408338 <_exit+0xca>
204018fa:	33c7a683          	lw	a3,828(a5)
204018fe:	43e020ef          	jal	ra,20403d3c <__muldf3>
20401902:	87aa                	mv	a5,a0
20401904:	882e                	mv	a6,a1
20401906:	863e                	mv	a2,a5
20401908:	86c2                	mv	a3,a6
2040190a:	854a                	mv	a0,s2
2040190c:	85ce                	mv	a1,s3
2040190e:	754010ef          	jal	ra,20403062 <__adddf3>
20401912:	87aa                	mv	a5,a0
20401914:	882e                	mv	a6,a1
20401916:	853e                	mv	a0,a5
20401918:	85c2                	mv	a1,a6
2040191a:	655020ef          	jal	ra,2040476e <__fixdfsi>
2040191e:	87aa                	mv	a5,a0
20401920:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:501
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
20401924:	fbc42503          	lw	a0,-68(s0)
20401928:	707020ef          	jal	ra,2040482e <__floatsidf>
2040192c:	204087b7          	lui	a5,0x20408
20401930:	3407a603          	lw	a2,832(a5) # 20408340 <_exit+0xd2>
20401934:	3447a683          	lw	a3,836(a5)
20401938:	404020ef          	jal	ra,20403d3c <__muldf3>
2040193c:	87aa                	mv	a5,a0
2040193e:	882e                	mv	a6,a1
20401940:	853e                	mv	a0,a5
20401942:	85c2                	mv	a1,a6
20401944:	204087b7          	lui	a5,0x20408
20401948:	3187a603          	lw	a2,792(a5) # 20408318 <_exit+0xaa>
2040194c:	31c7a683          	lw	a3,796(a5)
20401950:	712010ef          	jal	ra,20403062 <__adddf3>
20401954:	87aa                	mv	a5,a0
20401956:	882e                	mv	a6,a1
20401958:	853e                	mv	a0,a5
2040195a:	85c2                	mv	a1,a6
2040195c:	613020ef          	jal	ra,2040476e <__fixdfsi>
20401960:	87aa                	mv	a5,a0
20401962:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:502
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
20401966:	fbc42503          	lw	a0,-68(s0)
2040196a:	6c5020ef          	jal	ra,2040482e <__floatsidf>
2040196e:	204087b7          	lui	a5,0x20408
20401972:	3487a603          	lw	a2,840(a5) # 20408348 <_exit+0xda>
20401976:	34c7a683          	lw	a3,844(a5)
2040197a:	3c2020ef          	jal	ra,20403d3c <__muldf3>
2040197e:	87aa                	mv	a5,a0
20401980:	882e                	mv	a6,a1
20401982:	893e                	mv	s2,a5
20401984:	89c2                	mv	s3,a6
20401986:	fac42503          	lw	a0,-84(s0)
2040198a:	6a5020ef          	jal	ra,2040482e <__floatsidf>
2040198e:	204087b7          	lui	a5,0x20408
20401992:	3507a603          	lw	a2,848(a5) # 20408350 <_exit+0xe2>
20401996:	3547a683          	lw	a3,852(a5)
2040199a:	3a2020ef          	jal	ra,20403d3c <__muldf3>
2040199e:	87aa                	mv	a5,a0
204019a0:	882e                	mv	a6,a1
204019a2:	863e                	mv	a2,a5
204019a4:	86c2                	mv	a3,a6
204019a6:	854a                	mv	a0,s2
204019a8:	85ce                	mv	a1,s3
204019aa:	7ce020ef          	jal	ra,20404178 <__subdf3>
204019ae:	87aa                	mv	a5,a0
204019b0:	882e                	mv	a6,a1
204019b2:	faf42023          	sw	a5,-96(s0)
204019b6:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:503
  const double z2 = z * z;
204019ba:	fa042603          	lw	a2,-96(s0)
204019be:	fa442683          	lw	a3,-92(s0)
204019c2:	fa042503          	lw	a0,-96(s0)
204019c6:	fa442583          	lw	a1,-92(s0)
204019ca:	372020ef          	jal	ra,20403d3c <__muldf3>
204019ce:	87aa                	mv	a5,a0
204019d0:	882e                	mv	a6,a1
204019d2:	f8f42c23          	sw	a5,-104(s0)
204019d6:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:504
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
204019da:	fac42783          	lw	a5,-84(s0)
204019de:	3ff78793          	addi	a5,a5,1023
204019e2:	8d3e                	mv	s10,a5
204019e4:	87fd                	srai	a5,a5,0x1f
204019e6:	8dbe                	mv	s11,a5
204019e8:	014d1c93          	slli	s9,s10,0x14
204019ec:	4c01                	li	s8,0
204019ee:	f9842423          	sw	s8,-120(s0)
204019f2:	f9942623          	sw	s9,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:506
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
204019f6:	f8842903          	lw	s2,-120(s0)
204019fa:	f8c42983          	lw	s3,-116(s0)
204019fe:	fa042783          	lw	a5,-96(s0)
20401a02:	fa442803          	lw	a6,-92(s0)
20401a06:	863e                	mv	a2,a5
20401a08:	86c2                	mv	a3,a6
20401a0a:	853e                	mv	a0,a5
20401a0c:	85c2                	mv	a1,a6
20401a0e:	654010ef          	jal	ra,20403062 <__adddf3>
20401a12:	87aa                	mv	a5,a0
20401a14:	882e                	mv	a6,a1
20401a16:	8b3e                	mv	s6,a5
20401a18:	8bc2                	mv	s7,a6
20401a1a:	204087b7          	lui	a5,0x20408
20401a1e:	fa042603          	lw	a2,-96(s0)
20401a22:	fa442683          	lw	a3,-92(s0)
20401a26:	3587a503          	lw	a0,856(a5) # 20408358 <_exit+0xea>
20401a2a:	35c7a583          	lw	a1,860(a5)
20401a2e:	74a020ef          	jal	ra,20404178 <__subdf3>
20401a32:	87aa                	mv	a5,a0
20401a34:	882e                	mv	a6,a1
20401a36:	8c3e                	mv	s8,a5
20401a38:	8cc2                	mv	s9,a6
20401a3a:	204087b7          	lui	a5,0x20408
20401a3e:	3607a603          	lw	a2,864(a5) # 20408360 <_exit+0xf2>
20401a42:	3647a683          	lw	a3,868(a5)
20401a46:	f9842503          	lw	a0,-104(s0)
20401a4a:	f9c42583          	lw	a1,-100(s0)
20401a4e:	407010ef          	jal	ra,20403654 <__divdf3>
20401a52:	87aa                	mv	a5,a0
20401a54:	882e                	mv	a6,a1
20401a56:	853e                	mv	a0,a5
20401a58:	85c2                	mv	a1,a6
20401a5a:	204087b7          	lui	a5,0x20408
20401a5e:	3687a603          	lw	a2,872(a5) # 20408368 <_exit+0xfa>
20401a62:	36c7a683          	lw	a3,876(a5)
20401a66:	5fc010ef          	jal	ra,20403062 <__adddf3>
20401a6a:	87aa                	mv	a5,a0
20401a6c:	882e                	mv	a6,a1
20401a6e:	863e                	mv	a2,a5
20401a70:	86c2                	mv	a3,a6
20401a72:	f9842503          	lw	a0,-104(s0)
20401a76:	f9c42583          	lw	a1,-100(s0)
20401a7a:	3db010ef          	jal	ra,20403654 <__divdf3>
20401a7e:	87aa                	mv	a5,a0
20401a80:	882e                	mv	a6,a1
20401a82:	853e                	mv	a0,a5
20401a84:	85c2                	mv	a1,a6
20401a86:	204087b7          	lui	a5,0x20408
20401a8a:	3707a603          	lw	a2,880(a5) # 20408370 <_exit+0x102>
20401a8e:	3747a683          	lw	a3,884(a5)
20401a92:	5d0010ef          	jal	ra,20403062 <__adddf3>
20401a96:	87aa                	mv	a5,a0
20401a98:	882e                	mv	a6,a1
20401a9a:	863e                	mv	a2,a5
20401a9c:	86c2                	mv	a3,a6
20401a9e:	f9842503          	lw	a0,-104(s0)
20401aa2:	f9c42583          	lw	a1,-100(s0)
20401aa6:	3af010ef          	jal	ra,20403654 <__divdf3>
20401aaa:	87aa                	mv	a5,a0
20401aac:	882e                	mv	a6,a1
20401aae:	863e                	mv	a2,a5
20401ab0:	86c2                	mv	a3,a6
20401ab2:	8562                	mv	a0,s8
20401ab4:	85e6                	mv	a1,s9
20401ab6:	5ac010ef          	jal	ra,20403062 <__adddf3>
20401aba:	87aa                	mv	a5,a0
20401abc:	882e                	mv	a6,a1
20401abe:	863e                	mv	a2,a5
20401ac0:	86c2                	mv	a3,a6
20401ac2:	855a                	mv	a0,s6
20401ac4:	85de                	mv	a1,s7
20401ac6:	38f010ef          	jal	ra,20403654 <__divdf3>
20401aca:	87aa                	mv	a5,a0
20401acc:	882e                	mv	a6,a1
20401ace:	853e                	mv	a0,a5
20401ad0:	85c2                	mv	a1,a6
20401ad2:	204087b7          	lui	a5,0x20408
20401ad6:	3787a603          	lw	a2,888(a5) # 20408378 <_exit+0x10a>
20401ada:	37c7a683          	lw	a3,892(a5)
20401ade:	584010ef          	jal	ra,20403062 <__adddf3>
20401ae2:	87aa                	mv	a5,a0
20401ae4:	882e                	mv	a6,a1
20401ae6:	863e                	mv	a2,a5
20401ae8:	86c2                	mv	a3,a6
20401aea:	854a                	mv	a0,s2
20401aec:	85ce                	mv	a1,s3
20401aee:	24e020ef          	jal	ra,20403d3c <__muldf3>
20401af2:	87aa                	mv	a5,a0
20401af4:	882e                	mv	a6,a1
20401af6:	f8f42423          	sw	a5,-120(s0)
20401afa:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:508
  // correct for rounding errors
  if (value < conv.F) {
20401afe:	f8842783          	lw	a5,-120(s0)
20401b02:	f8c42803          	lw	a6,-116(s0)
20401b06:	863e                	mv	a2,a5
20401b08:	86c2                	mv	a3,a6
20401b0a:	f6842503          	lw	a0,-152(s0)
20401b0e:	f6c42583          	lw	a1,-148(s0)
20401b12:	186020ef          	jal	ra,20403c98 <__ledf2>
20401b16:	87aa                	mv	a5,a0
20401b18:	0207db63          	bgez	a5,20401b4e <_etoa+0x41a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:509
    expval--;
20401b1c:	fbc42783          	lw	a5,-68(s0)
20401b20:	17fd                	addi	a5,a5,-1
20401b22:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:510
    conv.F /= 10;
20401b26:	f8842783          	lw	a5,-120(s0)
20401b2a:	f8c42803          	lw	a6,-116(s0)
20401b2e:	20408737          	lui	a4,0x20408
20401b32:	36872603          	lw	a2,872(a4) # 20408368 <_exit+0xfa>
20401b36:	36c72683          	lw	a3,876(a4)
20401b3a:	853e                	mv	a0,a5
20401b3c:	85c2                	mv	a1,a6
20401b3e:	317010ef          	jal	ra,20403654 <__divdf3>
20401b42:	87aa                	mv	a5,a0
20401b44:	882e                	mv	a6,a1
20401b46:	f8f42423          	sw	a5,-120(s0)
20401b4a:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:514
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
20401b4e:	fbc42703          	lw	a4,-68(s0)
20401b52:	06300793          	li	a5,99
20401b56:	00e7ca63          	blt	a5,a4,20401b6a <_etoa+0x436>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:514 (discriminator 1)
20401b5a:	fbc42703          	lw	a4,-68(s0)
20401b5e:	f9d00793          	li	a5,-99
20401b62:	00f74463          	blt	a4,a5,20401b6a <_etoa+0x436>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:514 (discriminator 3)
20401b66:	4791                	li	a5,4
20401b68:	a011                	j	20401b6c <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:514 (discriminator 4)
20401b6a:	4795                	li	a5,5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:514 (discriminator 6)
20401b6c:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:517 (discriminator 6)

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
20401b70:	4018                	lw	a4,0(s0)
20401b72:	6785                	lui	a5,0x1
20401b74:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20401b78:	8ff9                	and	a5,a5,a4
20401b7a:	c7d1                	beqz	a5,20401c06 <_etoa+0x4d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:519
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
20401b7c:	204087b7          	lui	a5,0x20408
20401b80:	3807a603          	lw	a2,896(a5) # 20408380 <_exit+0x112>
20401b84:	3847a683          	lw	a3,900(a5)
20401b88:	f6842503          	lw	a0,-152(s0)
20401b8c:	f6c42583          	lw	a1,-148(s0)
20401b90:	064020ef          	jal	ra,20403bf4 <__gedf2>
20401b94:	87aa                	mv	a5,a0
20401b96:	0407cc63          	bltz	a5,20401bee <_etoa+0x4ba>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:519 (discriminator 1)
20401b9a:	204087b7          	lui	a5,0x20408
20401b9e:	3887a603          	lw	a2,904(a5) # 20408388 <_exit+0x11a>
20401ba2:	38c7a683          	lw	a3,908(a5)
20401ba6:	f6842503          	lw	a0,-152(s0)
20401baa:	f6c42583          	lw	a1,-148(s0)
20401bae:	0ea020ef          	jal	ra,20403c98 <__ledf2>
20401bb2:	87aa                	mv	a5,a0
20401bb4:	0207dd63          	bgez	a5,20401bee <_etoa+0x4ba>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:520
      if ((int)prec > expval) {
20401bb8:	f6442783          	lw	a5,-156(s0)
20401bbc:	fbc42703          	lw	a4,-68(s0)
20401bc0:	00f75c63          	bge	a4,a5,20401bd8 <_etoa+0x4a4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:521
        prec = (unsigned)((int)prec - expval - 1);
20401bc4:	f6442703          	lw	a4,-156(s0)
20401bc8:	fbc42783          	lw	a5,-68(s0)
20401bcc:	40f707b3          	sub	a5,a4,a5
20401bd0:	17fd                	addi	a5,a5,-1
20401bd2:	f6f42223          	sw	a5,-156(s0)
20401bd6:	a019                	j	20401bdc <_etoa+0x4a8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:524
      }
      else {
        prec = 0;
20401bd8:	f6042223          	sw	zero,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:526
      }
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
20401bdc:	401c                	lw	a5,0(s0)
20401bde:	4007e793          	ori	a5,a5,1024
20401be2:	c01c                	sw	a5,0(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:528
      // no characters in exponent
      minwidth = 0U;
20401be4:	fa042c23          	sw	zero,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:529
      expval   = 0;
20401be8:	fa042e23          	sw	zero,-68(s0)
20401bec:	a829                	j	20401c06 <_etoa+0x4d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:533
    }
    else {
      // we use one sigfig for the whole part
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
20401bee:	f6442783          	lw	a5,-156(s0)
20401bf2:	cb91                	beqz	a5,20401c06 <_etoa+0x4d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:533 (discriminator 1)
20401bf4:	401c                	lw	a5,0(s0)
20401bf6:	4007f793          	andi	a5,a5,1024
20401bfa:	c791                	beqz	a5,20401c06 <_etoa+0x4d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:534
        --prec;
20401bfc:	f6442783          	lw	a5,-156(s0)
20401c00:	17fd                	addi	a5,a5,-1
20401c02:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:540
      }
    }
  }

  // will everything fit?
  unsigned int fwidth = width;
20401c06:	f6042783          	lw	a5,-160(s0)
20401c0a:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:541
  if (width > minwidth) {
20401c0e:	f6042703          	lw	a4,-160(s0)
20401c12:	fb842783          	lw	a5,-72(s0)
20401c16:	00e7fb63          	bgeu	a5,a4,20401c2c <_etoa+0x4f8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:543
    // we didn't fall-back so subtract the characters required for the exponent
    fwidth -= minwidth;
20401c1a:	fb442703          	lw	a4,-76(s0)
20401c1e:	fb842783          	lw	a5,-72(s0)
20401c22:	40f707b3          	sub	a5,a4,a5
20401c26:	faf42a23          	sw	a5,-76(s0)
20401c2a:	a019                	j	20401c30 <_etoa+0x4fc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:546
  } else {
    // not enough characters, so go back to default sizing
    fwidth = 0U;
20401c2c:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:548
  }
  if ((flags & FLAGS_LEFT) && minwidth) {
20401c30:	401c                	lw	a5,0(s0)
20401c32:	8b89                	andi	a5,a5,2
20401c34:	c791                	beqz	a5,20401c40 <_etoa+0x50c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:548 (discriminator 1)
20401c36:	fb842783          	lw	a5,-72(s0)
20401c3a:	c399                	beqz	a5,20401c40 <_etoa+0x50c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:550
    // if we're padding on the right, DON'T pad the floating part
    fwidth = 0U;
20401c3c:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:554
  }

  // rescale the float value
  if (expval) {
20401c40:	fbc42783          	lw	a5,-68(s0)
20401c44:	c39d                	beqz	a5,20401c6a <_etoa+0x536>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:555
    value /= conv.F;
20401c46:	f8842783          	lw	a5,-120(s0)
20401c4a:	f8c42803          	lw	a6,-116(s0)
20401c4e:	863e                	mv	a2,a5
20401c50:	86c2                	mv	a3,a6
20401c52:	f6842503          	lw	a0,-152(s0)
20401c56:	f6c42583          	lw	a1,-148(s0)
20401c5a:	1fb010ef          	jal	ra,20403654 <__divdf3>
20401c5e:	87aa                	mv	a5,a0
20401c60:	882e                	mv	a6,a1
20401c62:	f6f42423          	sw	a5,-152(s0)
20401c66:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:559
  }

  // output the floating part
  const size_t start_idx = idx;
20401c6a:	f7442783          	lw	a5,-140(s0)
20401c6e:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:560
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
20401c72:	fb344783          	lbu	a5,-77(s0)
20401c76:	cb91                	beqz	a5,20401c8a <_etoa+0x556>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:560 (discriminator 1)
20401c78:	f6842a03          	lw	s4,-152(s0)
20401c7c:	f6c42703          	lw	a4,-148(s0)
20401c80:	800007b7          	lui	a5,0x80000
20401c84:	00f74ab3          	xor	s5,a4,a5
20401c88:	a029                	j	20401c92 <_etoa+0x55e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:560 (discriminator 2)
20401c8a:	f6842a03          	lw	s4,-152(s0)
20401c8e:	f6c42a83          	lw	s5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:560 (discriminator 4)
20401c92:	4018                	lw	a4,0(s0)
20401c94:	77fd                	lui	a5,0xfffff
20401c96:	7ff78793          	addi	a5,a5,2047 # fffff7ff <metal_segment_heap_target_end+0x7fffbb03>
20401c9a:	8ff9                	and	a5,a5,a4
20401c9c:	c03e                	sw	a5,0(sp)
20401c9e:	fb442883          	lw	a7,-76(s0)
20401ca2:	f6442803          	lw	a6,-156(s0)
20401ca6:	8752                	mv	a4,s4
20401ca8:	87d6                	mv	a5,s5
20401caa:	f7042683          	lw	a3,-144(s0)
20401cae:	f7442603          	lw	a2,-140(s0)
20401cb2:	f7842583          	lw	a1,-136(s0)
20401cb6:	f7c42503          	lw	a0,-132(s0)
20401cba:	caaff0ef          	jal	ra,20401164 <_ftoa>
20401cbe:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:563 (discriminator 4)

  // output the exponent part
  if (minwidth) {
20401cc2:	fb842783          	lw	a5,-72(s0)
20401cc6:	cbdd                	beqz	a5,20401d7c <_etoa+0x648>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:565
    // output the exponential symbol
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
20401cc8:	401c                	lw	a5,0(s0)
20401cca:	0207f793          	andi	a5,a5,32
20401cce:	c781                	beqz	a5,20401cd6 <_etoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:565 (discriminator 1)
20401cd0:	04500793          	li	a5,69
20401cd4:	a019                	j	20401cda <_etoa+0x5a6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:565 (discriminator 2)
20401cd6:	06500793          	li	a5,101
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:565 (discriminator 4)
20401cda:	f7442703          	lw	a4,-140(s0)
20401cde:	00170693          	addi	a3,a4,1
20401ce2:	f6d42a23          	sw	a3,-140(s0)
20401ce6:	f7c42803          	lw	a6,-132(s0)
20401cea:	f7042683          	lw	a3,-144(s0)
20401cee:	863a                	mv	a2,a4
20401cf0:	f7842583          	lw	a1,-136(s0)
20401cf4:	853e                	mv	a0,a5
20401cf6:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:567 (discriminator 4)
    // output the exponent value
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
20401cf8:	fbc42783          	lw	a5,-68(s0)
20401cfc:	41f7d713          	srai	a4,a5,0x1f
20401d00:	fbc42783          	lw	a5,-68(s0)
20401d04:	8fb9                	xor	a5,a5,a4
20401d06:	8f99                	sub	a5,a5,a4
20401d08:	863e                	mv	a2,a5
20401d0a:	fbc42783          	lw	a5,-68(s0)
20401d0e:	83fd                	srli	a5,a5,0x1f
20401d10:	0ff7f693          	andi	a3,a5,255
20401d14:	fb842783          	lw	a5,-72(s0)
20401d18:	17fd                	addi	a5,a5,-1
20401d1a:	4715                	li	a4,5
20401d1c:	c23a                	sw	a4,4(sp)
20401d1e:	c03e                	sw	a5,0(sp)
20401d20:	4881                	li	a7,0
20401d22:	4829                	li	a6,10
20401d24:	87b6                	mv	a5,a3
20401d26:	8732                	mv	a4,a2
20401d28:	f7042683          	lw	a3,-144(s0)
20401d2c:	f7442603          	lw	a2,-140(s0)
20401d30:	f7842583          	lw	a1,-136(s0)
20401d34:	f7c42503          	lw	a0,-132(s0)
20401d38:	9faff0ef          	jal	ra,20400f32 <_ntoa_long>
20401d3c:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:569 (discriminator 4)
    // might need to right-pad spaces
    if (flags & FLAGS_LEFT) {
20401d40:	401c                	lw	a5,0(s0)
20401d42:	8b89                	andi	a5,a5,2
20401d44:	cf85                	beqz	a5,20401d7c <_etoa+0x648>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:570
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
20401d46:	a00d                	j	20401d68 <_etoa+0x634>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:570 (discriminator 2)
20401d48:	f7442783          	lw	a5,-140(s0)
20401d4c:	00178713          	addi	a4,a5,1
20401d50:	f6e42a23          	sw	a4,-140(s0)
20401d54:	f7c42703          	lw	a4,-132(s0)
20401d58:	f7042683          	lw	a3,-144(s0)
20401d5c:	863e                	mv	a2,a5
20401d5e:	f7842583          	lw	a1,-136(s0)
20401d62:	02000513          	li	a0,32
20401d66:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:570 (discriminator 1)
20401d68:	f7442703          	lw	a4,-140(s0)
20401d6c:	f9442783          	lw	a5,-108(s0)
20401d70:	40f707b3          	sub	a5,a4,a5
20401d74:	f6042703          	lw	a4,-160(s0)
20401d78:	fce7e8e3          	bltu	a5,a4,20401d48 <_etoa+0x614>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:573
    }
  }
  return idx;
20401d7c:	f7442783          	lw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:574 (discriminator 1)
}
20401d80:	853e                	mv	a0,a5
20401d82:	50fa                	lw	ra,188(sp)
20401d84:	546a                	lw	s0,184(sp)
20401d86:	54da                	lw	s1,180(sp)
20401d88:	594a                	lw	s2,176(sp)
20401d8a:	59ba                	lw	s3,172(sp)
20401d8c:	5a2a                	lw	s4,168(sp)
20401d8e:	5a9a                	lw	s5,164(sp)
20401d90:	5b0a                	lw	s6,160(sp)
20401d92:	4bfa                	lw	s7,156(sp)
20401d94:	4c6a                	lw	s8,152(sp)
20401d96:	4cda                	lw	s9,148(sp)
20401d98:	4d4a                	lw	s10,144(sp)
20401d9a:	4dba                	lw	s11,140(sp)
20401d9c:	6129                	addi	sp,sp,192
20401d9e:	8082                	ret

20401da0 <_vsnprintf>:
_vsnprintf():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:581
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
20401da0:	7171                	addi	sp,sp,-176
20401da2:	d706                	sw	ra,172(sp)
20401da4:	d522                	sw	s0,168(sp)
20401da6:	d34a                	sw	s2,164(sp)
20401da8:	d14e                	sw	s3,160(sp)
20401daa:	cf52                	sw	s4,156(sp)
20401dac:	cd56                	sw	s5,152(sp)
20401dae:	cb5a                	sw	s6,148(sp)
20401db0:	c95e                	sw	s7,144(sp)
20401db2:	c762                	sw	s8,140(sp)
20401db4:	c566                	sw	s9,136(sp)
20401db6:	c36a                	sw	s10,132(sp)
20401db8:	c16e                	sw	s11,128(sp)
20401dba:	1900                	addi	s0,sp,176
20401dbc:	f6a42e23          	sw	a0,-132(s0)
20401dc0:	f6b42c23          	sw	a1,-136(s0)
20401dc4:	f6c42a23          	sw	a2,-140(s0)
20401dc8:	f6d42823          	sw	a3,-144(s0)
20401dcc:	f6e42623          	sw	a4,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:583
  unsigned int flags, width, precision, n;
  size_t idx = 0U;
20401dd0:	fa042e23          	sw	zero,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:585

  if (!buffer) {
20401dd4:	f7842783          	lw	a5,-136(s0)
20401dd8:	2e0796e3          	bnez	a5,204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:587
    // use null output function
    out = _out_null;
20401ddc:	204017b7          	lui	a5,0x20401
20401de0:	a9678793          	addi	a5,a5,-1386 # 20400a96 <_out_null>
20401de4:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:590
  }

  while (*format)
20401de8:	2dd0006f          	j	204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:593
  {
    // format specifier?  %[flags][width][.precision][length]
    if (*format != '%') {
20401dec:	f7042783          	lw	a5,-144(s0)
20401df0:	0007c703          	lbu	a4,0(a5)
20401df4:	02500793          	li	a5,37
20401df8:	02f70b63          	beq	a4,a5,20401e2e <_vsnprintf+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:595
      // no
      out(*format, buffer, idx++, maxlen);
20401dfc:	f7042783          	lw	a5,-144(s0)
20401e00:	0007c503          	lbu	a0,0(a5)
20401e04:	fbc42783          	lw	a5,-68(s0)
20401e08:	00178713          	addi	a4,a5,1
20401e0c:	fae42e23          	sw	a4,-68(s0)
20401e10:	f7c42703          	lw	a4,-132(s0)
20401e14:	f7442683          	lw	a3,-140(s0)
20401e18:	863e                	mv	a2,a5
20401e1a:	f7842583          	lw	a1,-136(s0)
20401e1e:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:596
      format++;
20401e20:	f7042783          	lw	a5,-144(s0)
20401e24:	0785                	addi	a5,a5,1
20401e26:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:597
      continue;
20401e2a:	29b0006f          	j	204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:601
    }
    else {
      // yes, evaluate it
      format++;
20401e2e:	f7042783          	lw	a5,-144(s0)
20401e32:	0785                	addi	a5,a5,1
20401e34:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:605
    }

    // evaluate flags
    flags = 0U;
20401e38:	fc042623          	sw	zero,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:607
    do {
      switch (*format) {
20401e3c:	f7042783          	lw	a5,-144(s0)
20401e40:	0007c783          	lbu	a5,0(a5)
20401e44:	1781                	addi	a5,a5,-32
20401e46:	4741                	li	a4,16
20401e48:	0af76663          	bltu	a4,a5,20401ef4 <_vsnprintf+0x154>
20401e4c:	00279713          	slli	a4,a5,0x2
20401e50:	204087b7          	lui	a5,0x20408
20401e54:	39078793          	addi	a5,a5,912 # 20408390 <_exit+0x122>
20401e58:	97ba                	add	a5,a5,a4
20401e5a:	439c                	lw	a5,0(a5)
20401e5c:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:608
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
20401e5e:	fcc42783          	lw	a5,-52(s0)
20401e62:	0017e793          	ori	a5,a5,1
20401e66:	fcf42623          	sw	a5,-52(s0)
20401e6a:	f7042783          	lw	a5,-144(s0)
20401e6e:	0785                	addi	a5,a5,1
20401e70:	f6f42823          	sw	a5,-144(s0)
20401e74:	4785                	li	a5,1
20401e76:	fcf42023          	sw	a5,-64(s0)
20401e7a:	a041                	j	20401efa <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:609
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
20401e7c:	fcc42783          	lw	a5,-52(s0)
20401e80:	0027e793          	ori	a5,a5,2
20401e84:	fcf42623          	sw	a5,-52(s0)
20401e88:	f7042783          	lw	a5,-144(s0)
20401e8c:	0785                	addi	a5,a5,1
20401e8e:	f6f42823          	sw	a5,-144(s0)
20401e92:	4785                	li	a5,1
20401e94:	fcf42023          	sw	a5,-64(s0)
20401e98:	a08d                	j	20401efa <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:610
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
20401e9a:	fcc42783          	lw	a5,-52(s0)
20401e9e:	0047e793          	ori	a5,a5,4
20401ea2:	fcf42623          	sw	a5,-52(s0)
20401ea6:	f7042783          	lw	a5,-144(s0)
20401eaa:	0785                	addi	a5,a5,1
20401eac:	f6f42823          	sw	a5,-144(s0)
20401eb0:	4785                	li	a5,1
20401eb2:	fcf42023          	sw	a5,-64(s0)
20401eb6:	a091                	j	20401efa <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:611
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
20401eb8:	fcc42783          	lw	a5,-52(s0)
20401ebc:	0087e793          	ori	a5,a5,8
20401ec0:	fcf42623          	sw	a5,-52(s0)
20401ec4:	f7042783          	lw	a5,-144(s0)
20401ec8:	0785                	addi	a5,a5,1
20401eca:	f6f42823          	sw	a5,-144(s0)
20401ece:	4785                	li	a5,1
20401ed0:	fcf42023          	sw	a5,-64(s0)
20401ed4:	a01d                	j	20401efa <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:612
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
20401ed6:	fcc42783          	lw	a5,-52(s0)
20401eda:	0107e793          	ori	a5,a5,16
20401ede:	fcf42623          	sw	a5,-52(s0)
20401ee2:	f7042783          	lw	a5,-144(s0)
20401ee6:	0785                	addi	a5,a5,1
20401ee8:	f6f42823          	sw	a5,-144(s0)
20401eec:	4785                	li	a5,1
20401eee:	fcf42023          	sw	a5,-64(s0)
20401ef2:	a021                	j	20401efa <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:613
        default :                                   n = 0U; break;
20401ef4:	fc042023          	sw	zero,-64(s0)
20401ef8:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:615
      }
    } while (n);
20401efa:	fc042783          	lw	a5,-64(s0)
20401efe:	ff9d                	bnez	a5,20401e3c <_vsnprintf+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:618

    // evaluate width field
    width = 0U;
20401f00:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:619
    if (_is_digit(*format)) {
20401f04:	f7042783          	lw	a5,-144(s0)
20401f08:	0007c783          	lbu	a5,0(a5)
20401f0c:	853e                	mv	a0,a5
20401f0e:	c29fe0ef          	jal	ra,20400b36 <_is_digit>
20401f12:	87aa                	mv	a5,a0
20401f14:	cb89                	beqz	a5,20401f26 <_vsnprintf+0x186>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:620
      width = _atoi(&format);
20401f16:	f7040793          	addi	a5,s0,-144
20401f1a:	853e                	mv	a0,a5
20401f1c:	c53fe0ef          	jal	ra,20400b6e <_atoi>
20401f20:	fca42423          	sw	a0,-56(s0)
20401f24:	a8a1                	j	20401f7c <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:622
    }
    else if (*format == '*') {
20401f26:	f7042783          	lw	a5,-144(s0)
20401f2a:	0007c703          	lbu	a4,0(a5)
20401f2e:	02a00793          	li	a5,42
20401f32:	04f71563          	bne	a4,a5,20401f7c <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:623
      const int w = va_arg(va, int);
20401f36:	f6c42783          	lw	a5,-148(s0)
20401f3a:	00478713          	addi	a4,a5,4
20401f3e:	f6e42623          	sw	a4,-148(s0)
20401f42:	439c                	lw	a5,0(a5)
20401f44:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:624
      if (w < 0) {
20401f48:	fa842783          	lw	a5,-88(s0)
20401f4c:	0007df63          	bgez	a5,20401f6a <_vsnprintf+0x1ca>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:625
        flags |= FLAGS_LEFT;    // reverse padding
20401f50:	fcc42783          	lw	a5,-52(s0)
20401f54:	0027e793          	ori	a5,a5,2
20401f58:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:626
        width = (unsigned int)-w;
20401f5c:	fa842783          	lw	a5,-88(s0)
20401f60:	40f007b3          	neg	a5,a5
20401f64:	fcf42423          	sw	a5,-56(s0)
20401f68:	a029                	j	20401f72 <_vsnprintf+0x1d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:629
      }
      else {
        width = (unsigned int)w;
20401f6a:	fa842783          	lw	a5,-88(s0)
20401f6e:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:631
      }
      format++;
20401f72:	f7042783          	lw	a5,-144(s0)
20401f76:	0785                	addi	a5,a5,1
20401f78:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:635
    }

    // evaluate precision field
    precision = 0U;
20401f7c:	fc042223          	sw	zero,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:636
    if (*format == '.') {
20401f80:	f7042783          	lw	a5,-144(s0)
20401f84:	0007c703          	lbu	a4,0(a5)
20401f88:	02e00793          	li	a5,46
20401f8c:	06f71b63          	bne	a4,a5,20402002 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:637
      flags |= FLAGS_PRECISION;
20401f90:	fcc42783          	lw	a5,-52(s0)
20401f94:	4007e793          	ori	a5,a5,1024
20401f98:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:638
      format++;
20401f9c:	f7042783          	lw	a5,-144(s0)
20401fa0:	0785                	addi	a5,a5,1
20401fa2:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:639
      if (_is_digit(*format)) {
20401fa6:	f7042783          	lw	a5,-144(s0)
20401faa:	0007c783          	lbu	a5,0(a5)
20401fae:	853e                	mv	a0,a5
20401fb0:	b87fe0ef          	jal	ra,20400b36 <_is_digit>
20401fb4:	87aa                	mv	a5,a0
20401fb6:	cb89                	beqz	a5,20401fc8 <_vsnprintf+0x228>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:640
        precision = _atoi(&format);
20401fb8:	f7040793          	addi	a5,s0,-144
20401fbc:	853e                	mv	a0,a5
20401fbe:	bb1fe0ef          	jal	ra,20400b6e <_atoi>
20401fc2:	fca42223          	sw	a0,-60(s0)
20401fc6:	a835                	j	20402002 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:642
      }
      else if (*format == '*') {
20401fc8:	f7042783          	lw	a5,-144(s0)
20401fcc:	0007c703          	lbu	a4,0(a5)
20401fd0:	02a00793          	li	a5,42
20401fd4:	02f71763          	bne	a4,a5,20402002 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:643
        const int prec = (int)va_arg(va, int);
20401fd8:	f6c42783          	lw	a5,-148(s0)
20401fdc:	00478713          	addi	a4,a5,4
20401fe0:	f6e42623          	sw	a4,-148(s0)
20401fe4:	439c                	lw	a5,0(a5)
20401fe6:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:644
        precision = prec > 0 ? (unsigned int)prec : 0U;
20401fea:	fa442783          	lw	a5,-92(s0)
20401fee:	0007d363          	bgez	a5,20401ff4 <_vsnprintf+0x254>
20401ff2:	4781                	li	a5,0
20401ff4:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:645
        format++;
20401ff8:	f7042783          	lw	a5,-144(s0)
20401ffc:	0785                	addi	a5,a5,1
20401ffe:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:650
      }
    }

    // evaluate length field
    switch (*format) {
20402002:	f7042783          	lw	a5,-144(s0)
20402006:	0007c783          	lbu	a5,0(a5)
2040200a:	f9878793          	addi	a5,a5,-104
2040200e:	4749                	li	a4,18
20402010:	0cf76d63          	bltu	a4,a5,204020ea <_vsnprintf+0x34a>
20402014:	00279713          	slli	a4,a5,0x2
20402018:	204087b7          	lui	a5,0x20408
2040201c:	3d478793          	addi	a5,a5,980 # 204083d4 <_exit+0x166>
20402020:	97ba                	add	a5,a5,a4
20402022:	439c                	lw	a5,0(a5)
20402024:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:652
      case 'l' :
        flags |= FLAGS_LONG;
20402026:	fcc42783          	lw	a5,-52(s0)
2040202a:	1007e793          	ori	a5,a5,256
2040202e:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:653
        format++;
20402032:	f7042783          	lw	a5,-144(s0)
20402036:	0785                	addi	a5,a5,1
20402038:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:654
        if (*format == 'l') {
2040203c:	f7042783          	lw	a5,-144(s0)
20402040:	0007c703          	lbu	a4,0(a5)
20402044:	06c00793          	li	a5,108
20402048:	0af71363          	bne	a4,a5,204020ee <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:655
          flags |= FLAGS_LONG_LONG;
2040204c:	fcc42783          	lw	a5,-52(s0)
20402050:	2007e793          	ori	a5,a5,512
20402054:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:656
          format++;
20402058:	f7042783          	lw	a5,-144(s0)
2040205c:	0785                	addi	a5,a5,1
2040205e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:658
        }
        break;
20402062:	a071                	j	204020ee <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:660
      case 'h' :
        flags |= FLAGS_SHORT;
20402064:	fcc42783          	lw	a5,-52(s0)
20402068:	0807e793          	ori	a5,a5,128
2040206c:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:661
        format++;
20402070:	f7042783          	lw	a5,-144(s0)
20402074:	0785                	addi	a5,a5,1
20402076:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:662
        if (*format == 'h') {
2040207a:	f7042783          	lw	a5,-144(s0)
2040207e:	0007c703          	lbu	a4,0(a5)
20402082:	06800793          	li	a5,104
20402086:	06f71663          	bne	a4,a5,204020f2 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:663
          flags |= FLAGS_CHAR;
2040208a:	fcc42783          	lw	a5,-52(s0)
2040208e:	0407e793          	ori	a5,a5,64
20402092:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:664
          format++;
20402096:	f7042783          	lw	a5,-144(s0)
2040209a:	0785                	addi	a5,a5,1
2040209c:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:666
        }
        break;
204020a0:	a889                	j	204020f2 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:669
#if defined(PRINTF_SUPPORT_PTRDIFF_T)
      case 't' :
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
204020a2:	fcc42783          	lw	a5,-52(s0)
204020a6:	1007e793          	ori	a5,a5,256
204020aa:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:670
        format++;
204020ae:	f7042783          	lw	a5,-144(s0)
204020b2:	0785                	addi	a5,a5,1
204020b4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:671
        break;
204020b8:	a835                	j	204020f4 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:674
#endif
      case 'j' :
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
204020ba:	fcc42783          	lw	a5,-52(s0)
204020be:	2007e793          	ori	a5,a5,512
204020c2:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:675
        format++;
204020c6:	f7042783          	lw	a5,-144(s0)
204020ca:	0785                	addi	a5,a5,1
204020cc:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:676
        break;
204020d0:	a015                	j	204020f4 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:678
      case 'z' :
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
204020d2:	fcc42783          	lw	a5,-52(s0)
204020d6:	1007e793          	ori	a5,a5,256
204020da:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:679
        format++;
204020de:	f7042783          	lw	a5,-144(s0)
204020e2:	0785                	addi	a5,a5,1
204020e4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:680
        break;
204020e8:	a031                	j	204020f4 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:682
      default :
        break;
204020ea:	0001                	nop
204020ec:	a021                	j	204020f4 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:658
        break;
204020ee:	0001                	nop
204020f0:	a011                	j	204020f4 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:666
        break;
204020f2:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:686
    }

    // evaluate specifier
    switch (*format) {
204020f4:	f7042783          	lw	a5,-144(s0)
204020f8:	0007c783          	lbu	a5,0(a5)
204020fc:	fdb78793          	addi	a5,a5,-37
20402100:	05300713          	li	a4,83
20402104:	78f76863          	bltu	a4,a5,20402894 <_vsnprintf+0xaf4>
20402108:	00279713          	slli	a4,a5,0x2
2040210c:	204087b7          	lui	a5,0x20408
20402110:	42078793          	addi	a5,a5,1056 # 20408420 <_exit+0x1b2>
20402114:	97ba                	add	a5,a5,a4
20402116:	439c                	lw	a5,0(a5)
20402118:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:696
      case 'X' :
      case 'o' :
      case 'b' : {
        // set the base
        unsigned int base;
        if (*format == 'x' || *format == 'X') {
2040211a:	f7042783          	lw	a5,-144(s0)
2040211e:	0007c703          	lbu	a4,0(a5)
20402122:	07800793          	li	a5,120
20402126:	00f70a63          	beq	a4,a5,2040213a <_vsnprintf+0x39a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:696 (discriminator 1)
2040212a:	f7042783          	lw	a5,-144(s0)
2040212e:	0007c703          	lbu	a4,0(a5)
20402132:	05800793          	li	a5,88
20402136:	00f71663          	bne	a4,a5,20402142 <_vsnprintf+0x3a2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:697
          base = 16U;
2040213a:	47c1                	li	a5,16
2040213c:	faf42c23          	sw	a5,-72(s0)
20402140:	a089                	j	20402182 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:699
        }
        else if (*format == 'o') {
20402142:	f7042783          	lw	a5,-144(s0)
20402146:	0007c703          	lbu	a4,0(a5)
2040214a:	06f00793          	li	a5,111
2040214e:	00f71663          	bne	a4,a5,2040215a <_vsnprintf+0x3ba>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:700
          base =  8U;
20402152:	47a1                	li	a5,8
20402154:	faf42c23          	sw	a5,-72(s0)
20402158:	a02d                	j	20402182 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:702
        }
        else if (*format == 'b') {
2040215a:	f7042783          	lw	a5,-144(s0)
2040215e:	0007c703          	lbu	a4,0(a5)
20402162:	06200793          	li	a5,98
20402166:	00f71663          	bne	a4,a5,20402172 <_vsnprintf+0x3d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:703
          base =  2U;
2040216a:	4789                	li	a5,2
2040216c:	faf42c23          	sw	a5,-72(s0)
20402170:	a809                	j	20402182 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:706
        }
        else {
          base = 10U;
20402172:	47a9                	li	a5,10
20402174:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:707
          flags &= ~FLAGS_HASH;   // no hash for dec format
20402178:	fcc42783          	lw	a5,-52(s0)
2040217c:	9bbd                	andi	a5,a5,-17
2040217e:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:710
        }
        // uppercase
        if (*format == 'X') {
20402182:	f7042783          	lw	a5,-144(s0)
20402186:	0007c703          	lbu	a4,0(a5)
2040218a:	05800793          	li	a5,88
2040218e:	00f71863          	bne	a4,a5,2040219e <_vsnprintf+0x3fe>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:711
          flags |= FLAGS_UPPERCASE;
20402192:	fcc42783          	lw	a5,-52(s0)
20402196:	0207e793          	ori	a5,a5,32
2040219a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:715
        }

        // no plus or space flag for u, x, X, o, b
        if ((*format != 'i') && (*format != 'd')) {
2040219e:	f7042783          	lw	a5,-144(s0)
204021a2:	0007c703          	lbu	a4,0(a5)
204021a6:	06900793          	li	a5,105
204021aa:	00f70f63          	beq	a4,a5,204021c8 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:715 (discriminator 1)
204021ae:	f7042783          	lw	a5,-144(s0)
204021b2:	0007c703          	lbu	a4,0(a5)
204021b6:	06400793          	li	a5,100
204021ba:	00f70763          	beq	a4,a5,204021c8 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:716
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
204021be:	fcc42783          	lw	a5,-52(s0)
204021c2:	9bcd                	andi	a5,a5,-13
204021c4:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:720
        }

        // ignore '0' flag when precision is given
        if (flags & FLAGS_PRECISION) {
204021c8:	fcc42783          	lw	a5,-52(s0)
204021cc:	4007f793          	andi	a5,a5,1024
204021d0:	c791                	beqz	a5,204021dc <_vsnprintf+0x43c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:721
          flags &= ~FLAGS_ZEROPAD;
204021d2:	fcc42783          	lw	a5,-52(s0)
204021d6:	9bf9                	andi	a5,a5,-2
204021d8:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:725
        }

        // convert the integer
        if ((*format == 'i') || (*format == 'd')) {
204021dc:	f7042783          	lw	a5,-144(s0)
204021e0:	0007c703          	lbu	a4,0(a5)
204021e4:	06900793          	li	a5,105
204021e8:	00f70a63          	beq	a4,a5,204021fc <_vsnprintf+0x45c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:725 (discriminator 1)
204021ec:	f7042783          	lw	a5,-144(s0)
204021f0:	0007c703          	lbu	a4,0(a5)
204021f4:	06400793          	li	a5,100
204021f8:	1af71b63          	bne	a4,a5,204023ae <_vsnprintf+0x60e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:727
          // signed
          if (flags & FLAGS_LONG_LONG) {
204021fc:	fcc42783          	lw	a5,-52(s0)
20402200:	2007f793          	andi	a5,a5,512
20402204:	c3d5                	beqz	a5,204022a8 <_vsnprintf+0x508>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:729
#if defined(PRINTF_SUPPORT_LONG_LONG)
            const long long value = va_arg(va, long long);
20402206:	f6c42783          	lw	a5,-148(s0)
2040220a:	079d                	addi	a5,a5,7
2040220c:	9be1                	andi	a5,a5,-8
2040220e:	00878713          	addi	a4,a5,8
20402212:	f6e42623          	sw	a4,-148(s0)
20402216:	0047a803          	lw	a6,4(a5)
2040221a:	439c                	lw	a5,0(a5)
2040221c:	f8f42c23          	sw	a5,-104(s0)
20402220:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:730
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402224:	f9c42783          	lw	a5,-100(s0)
20402228:	41f7d913          	srai	s2,a5,0x1f
2040222c:	f9c42783          	lw	a5,-100(s0)
20402230:	41f7d993          	srai	s3,a5,0x1f
20402234:	f9842783          	lw	a5,-104(s0)
20402238:	0127ca33          	xor	s4,a5,s2
2040223c:	f9c42783          	lw	a5,-100(s0)
20402240:	0137cab3          	xor	s5,a5,s3
20402244:	412a07b3          	sub	a5,s4,s2
20402248:	873e                	mv	a4,a5
2040224a:	00ea3733          	sltu	a4,s4,a4
2040224e:	413a8833          	sub	a6,s5,s3
20402252:	40e80733          	sub	a4,a6,a4
20402256:	883a                	mv	a6,a4
20402258:	8a3e                	mv	s4,a5
2040225a:	8ac2                	mv	s5,a6
2040225c:	8652                	mv	a2,s4
2040225e:	86d6                	mv	a3,s5
20402260:	f9c42783          	lw	a5,-100(s0)
20402264:	83fd                	srli	a5,a5,0x1f
20402266:	0ff7f713          	andi	a4,a5,255
2040226a:	fb842783          	lw	a5,-72(s0)
2040226e:	8b3e                	mv	s6,a5
20402270:	4b81                	li	s7,0
20402272:	fcc42783          	lw	a5,-52(s0)
20402276:	c63e                	sw	a5,12(sp)
20402278:	fc842783          	lw	a5,-56(s0)
2040227c:	c43e                	sw	a5,8(sp)
2040227e:	fc442783          	lw	a5,-60(s0)
20402282:	c23e                	sw	a5,4(sp)
20402284:	c05e                	sw	s7,0(sp)
20402286:	88da                	mv	a7,s6
20402288:	883a                	mv	a6,a4
2040228a:	8732                	mv	a4,a2
2040228c:	87b6                	mv	a5,a3
2040228e:	f7442683          	lw	a3,-140(s0)
20402292:	fbc42603          	lw	a2,-68(s0)
20402296:	f7842583          	lw	a1,-136(s0)
2040229a:	f7c42503          	lw	a0,-132(s0)
2040229e:	d99fe0ef          	jal	ra,20401036 <_ntoa_long_long>
204022a2:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
204022a6:	a425                	j	204024ce <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:733
#endif
          }
          else if (flags & FLAGS_LONG) {
204022a8:	fcc42783          	lw	a5,-52(s0)
204022ac:	1007f793          	andi	a5,a5,256
204022b0:	c3ad                	beqz	a5,20402312 <_vsnprintf+0x572>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:734
            const long value = va_arg(va, long);
204022b2:	f6c42783          	lw	a5,-148(s0)
204022b6:	00478713          	addi	a4,a5,4
204022ba:	f6e42623          	sw	a4,-148(s0)
204022be:	439c                	lw	a5,0(a5)
204022c0:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:735
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
204022c4:	f9442783          	lw	a5,-108(s0)
204022c8:	41f7d713          	srai	a4,a5,0x1f
204022cc:	f9442783          	lw	a5,-108(s0)
204022d0:	8fb9                	xor	a5,a5,a4
204022d2:	8f99                	sub	a5,a5,a4
204022d4:	86be                	mv	a3,a5
204022d6:	f9442783          	lw	a5,-108(s0)
204022da:	83fd                	srli	a5,a5,0x1f
204022dc:	0ff7f713          	andi	a4,a5,255
204022e0:	fcc42783          	lw	a5,-52(s0)
204022e4:	c23e                	sw	a5,4(sp)
204022e6:	fc842783          	lw	a5,-56(s0)
204022ea:	c03e                	sw	a5,0(sp)
204022ec:	fc442883          	lw	a7,-60(s0)
204022f0:	fb842803          	lw	a6,-72(s0)
204022f4:	87ba                	mv	a5,a4
204022f6:	8736                	mv	a4,a3
204022f8:	f7442683          	lw	a3,-140(s0)
204022fc:	fbc42603          	lw	a2,-68(s0)
20402300:	f7842583          	lw	a1,-136(s0)
20402304:	f7c42503          	lw	a0,-132(s0)
20402308:	c2bfe0ef          	jal	ra,20400f32 <_ntoa_long>
2040230c:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20402310:	aa7d                	j	204024ce <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:738
          }
          else {
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
20402312:	fcc42783          	lw	a5,-52(s0)
20402316:	0407f793          	andi	a5,a5,64
2040231a:	cb99                	beqz	a5,20402330 <_vsnprintf+0x590>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:738 (discriminator 1)
2040231c:	f6c42783          	lw	a5,-148(s0)
20402320:	00478713          	addi	a4,a5,4
20402324:	f6e42623          	sw	a4,-148(s0)
20402328:	439c                	lw	a5,0(a5)
2040232a:	0ff7f793          	andi	a5,a5,255
2040232e:	a03d                	j	2040235c <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:738 (discriminator 2)
20402330:	fcc42783          	lw	a5,-52(s0)
20402334:	0807f793          	andi	a5,a5,128
20402338:	cb99                	beqz	a5,2040234e <_vsnprintf+0x5ae>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:738 (discriminator 4)
2040233a:	f6c42783          	lw	a5,-148(s0)
2040233e:	00478713          	addi	a4,a5,4
20402342:	f6e42623          	sw	a4,-148(s0)
20402346:	439c                	lw	a5,0(a5)
20402348:	07c2                	slli	a5,a5,0x10
2040234a:	87c1                	srai	a5,a5,0x10
2040234c:	a801                	j	2040235c <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:738 (discriminator 5)
2040234e:	f6c42783          	lw	a5,-148(s0)
20402352:	00478713          	addi	a4,a5,4
20402356:	f6e42623          	sw	a4,-148(s0)
2040235a:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:738 (discriminator 8)
2040235c:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:739 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402360:	f9042783          	lw	a5,-112(s0)
20402364:	41f7d713          	srai	a4,a5,0x1f
20402368:	f9042783          	lw	a5,-112(s0)
2040236c:	8fb9                	xor	a5,a5,a4
2040236e:	8f99                	sub	a5,a5,a4
20402370:	86be                	mv	a3,a5
20402372:	f9042783          	lw	a5,-112(s0)
20402376:	83fd                	srli	a5,a5,0x1f
20402378:	0ff7f713          	andi	a4,a5,255
2040237c:	fcc42783          	lw	a5,-52(s0)
20402380:	c23e                	sw	a5,4(sp)
20402382:	fc842783          	lw	a5,-56(s0)
20402386:	c03e                	sw	a5,0(sp)
20402388:	fc442883          	lw	a7,-60(s0)
2040238c:	fb842803          	lw	a6,-72(s0)
20402390:	87ba                	mv	a5,a4
20402392:	8736                	mv	a4,a3
20402394:	f7442683          	lw	a3,-140(s0)
20402398:	fbc42603          	lw	a2,-68(s0)
2040239c:	f7842583          	lw	a1,-136(s0)
204023a0:	f7c42503          	lw	a0,-132(s0)
204023a4:	b8ffe0ef          	jal	ra,20400f32 <_ntoa_long>
204023a8:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:727 (discriminator 8)
          if (flags & FLAGS_LONG_LONG) {
204023ac:	a20d                	j	204024ce <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:744
          }
        }
        else {
          // unsigned
          if (flags & FLAGS_LONG_LONG) {
204023ae:	fcc42783          	lw	a5,-52(s0)
204023b2:	2007f793          	andi	a5,a5,512
204023b6:	cba1                	beqz	a5,20402406 <_vsnprintf+0x666>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:746
#if defined(PRINTF_SUPPORT_LONG_LONG)
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
204023b8:	f6c42783          	lw	a5,-148(s0)
204023bc:	079d                	addi	a5,a5,7
204023be:	9be1                	andi	a5,a5,-8
204023c0:	00878713          	addi	a4,a5,8
204023c4:	f6e42623          	sw	a4,-148(s0)
204023c8:	4398                	lw	a4,0(a5)
204023ca:	43dc                	lw	a5,4(a5)
204023cc:	fb842683          	lw	a3,-72(s0)
204023d0:	8c36                	mv	s8,a3
204023d2:	4c81                	li	s9,0
204023d4:	fcc42683          	lw	a3,-52(s0)
204023d8:	c636                	sw	a3,12(sp)
204023da:	fc842683          	lw	a3,-56(s0)
204023de:	c436                	sw	a3,8(sp)
204023e0:	fc442683          	lw	a3,-60(s0)
204023e4:	c236                	sw	a3,4(sp)
204023e6:	c066                	sw	s9,0(sp)
204023e8:	88e2                	mv	a7,s8
204023ea:	4801                	li	a6,0
204023ec:	f7442683          	lw	a3,-140(s0)
204023f0:	fbc42603          	lw	a2,-68(s0)
204023f4:	f7842583          	lw	a1,-136(s0)
204023f8:	f7c42503          	lw	a0,-132(s0)
204023fc:	c3bfe0ef          	jal	ra,20401036 <_ntoa_long_long>
20402400:	faa42e23          	sw	a0,-68(s0)
20402404:	a0e9                	j	204024ce <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:749
#endif
          }
          else if (flags & FLAGS_LONG) {
20402406:	fcc42783          	lw	a5,-52(s0)
2040240a:	1007f793          	andi	a5,a5,256
2040240e:	c3a1                	beqz	a5,2040244e <_vsnprintf+0x6ae>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:750
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
20402410:	f6c42783          	lw	a5,-148(s0)
20402414:	00478713          	addi	a4,a5,4
20402418:	f6e42623          	sw	a4,-148(s0)
2040241c:	4398                	lw	a4,0(a5)
2040241e:	fcc42783          	lw	a5,-52(s0)
20402422:	c23e                	sw	a5,4(sp)
20402424:	fc842783          	lw	a5,-56(s0)
20402428:	c03e                	sw	a5,0(sp)
2040242a:	fc442883          	lw	a7,-60(s0)
2040242e:	fb842803          	lw	a6,-72(s0)
20402432:	4781                	li	a5,0
20402434:	f7442683          	lw	a3,-140(s0)
20402438:	fbc42603          	lw	a2,-68(s0)
2040243c:	f7842583          	lw	a1,-136(s0)
20402440:	f7c42503          	lw	a0,-132(s0)
20402444:	aeffe0ef          	jal	ra,20400f32 <_ntoa_long>
20402448:	faa42e23          	sw	a0,-68(s0)
2040244c:	a049                	j	204024ce <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:753
          }
          else {
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
2040244e:	fcc42783          	lw	a5,-52(s0)
20402452:	0407f793          	andi	a5,a5,64
20402456:	cb99                	beqz	a5,2040246c <_vsnprintf+0x6cc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:753 (discriminator 1)
20402458:	f6c42783          	lw	a5,-148(s0)
2040245c:	00478713          	addi	a4,a5,4
20402460:	f6e42623          	sw	a4,-148(s0)
20402464:	439c                	lw	a5,0(a5)
20402466:	0ff7f793          	andi	a5,a5,255
2040246a:	a03d                	j	20402498 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:753 (discriminator 2)
2040246c:	fcc42783          	lw	a5,-52(s0)
20402470:	0807f793          	andi	a5,a5,128
20402474:	cb99                	beqz	a5,2040248a <_vsnprintf+0x6ea>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:753 (discriminator 4)
20402476:	f6c42783          	lw	a5,-148(s0)
2040247a:	00478713          	addi	a4,a5,4
2040247e:	f6e42623          	sw	a4,-148(s0)
20402482:	439c                	lw	a5,0(a5)
20402484:	07c2                	slli	a5,a5,0x10
20402486:	83c1                	srli	a5,a5,0x10
20402488:	a801                	j	20402498 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:753 (discriminator 5)
2040248a:	f6c42783          	lw	a5,-148(s0)
2040248e:	00478713          	addi	a4,a5,4
20402492:	f6e42623          	sw	a4,-148(s0)
20402496:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:753 (discriminator 8)
20402498:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:754 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
2040249c:	fcc42783          	lw	a5,-52(s0)
204024a0:	c23e                	sw	a5,4(sp)
204024a2:	fc842783          	lw	a5,-56(s0)
204024a6:	c03e                	sw	a5,0(sp)
204024a8:	fc442883          	lw	a7,-60(s0)
204024ac:	fb842803          	lw	a6,-72(s0)
204024b0:	4781                	li	a5,0
204024b2:	fa042703          	lw	a4,-96(s0)
204024b6:	f7442683          	lw	a3,-140(s0)
204024ba:	fbc42603          	lw	a2,-68(s0)
204024be:	f7842583          	lw	a1,-136(s0)
204024c2:	f7c42503          	lw	a0,-132(s0)
204024c6:	a6dfe0ef          	jal	ra,20400f32 <_ntoa_long>
204024ca:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:757
          }
        }
        format++;
204024ce:	f7042783          	lw	a5,-144(s0)
204024d2:	0785                	addi	a5,a5,1
204024d4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:758
        break;
204024d8:	a6f5                	j	204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:763
      }
#if defined(PRINTF_SUPPORT_FLOAT)
      case 'f' :
      case 'F' :
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
204024da:	f7042783          	lw	a5,-144(s0)
204024de:	0007c703          	lbu	a4,0(a5)
204024e2:	04600793          	li	a5,70
204024e6:	00f71863          	bne	a4,a5,204024f6 <_vsnprintf+0x756>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:763 (discriminator 1)
204024ea:	fcc42783          	lw	a5,-52(s0)
204024ee:	0207e793          	ori	a5,a5,32
204024f2:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:764
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
204024f6:	f6c42783          	lw	a5,-148(s0)
204024fa:	079d                	addi	a5,a5,7
204024fc:	9be1                	andi	a5,a5,-8
204024fe:	00878713          	addi	a4,a5,8
20402502:	f6e42623          	sw	a4,-148(s0)
20402506:	4398                	lw	a4,0(a5)
20402508:	43dc                	lw	a5,4(a5)
2040250a:	fcc42683          	lw	a3,-52(s0)
2040250e:	c036                	sw	a3,0(sp)
20402510:	fc842883          	lw	a7,-56(s0)
20402514:	fc442803          	lw	a6,-60(s0)
20402518:	f7442683          	lw	a3,-140(s0)
2040251c:	fbc42603          	lw	a2,-68(s0)
20402520:	f7842583          	lw	a1,-136(s0)
20402524:	f7c42503          	lw	a0,-132(s0)
20402528:	c3dfe0ef          	jal	ra,20401164 <_ftoa>
2040252c:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:765
        format++;
20402530:	f7042783          	lw	a5,-144(s0)
20402534:	0785                	addi	a5,a5,1
20402536:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:766
        break;
2040253a:	a669                	j	204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:772
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
      case 'e':
      case 'E':
      case 'g':
      case 'G':
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
2040253c:	f7042783          	lw	a5,-144(s0)
20402540:	0007c703          	lbu	a4,0(a5)
20402544:	06700793          	li	a5,103
20402548:	00f70a63          	beq	a4,a5,2040255c <_vsnprintf+0x7bc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:772 (discriminator 2)
2040254c:	f7042783          	lw	a5,-144(s0)
20402550:	0007c703          	lbu	a4,0(a5)
20402554:	04700793          	li	a5,71
20402558:	00f71a63          	bne	a4,a5,2040256c <_vsnprintf+0x7cc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:772 (discriminator 3)
2040255c:	fcc42703          	lw	a4,-52(s0)
20402560:	6785                	lui	a5,0x1
20402562:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402566:	8fd9                	or	a5,a5,a4
20402568:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:773
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
2040256c:	f7042783          	lw	a5,-144(s0)
20402570:	0007c703          	lbu	a4,0(a5)
20402574:	04500793          	li	a5,69
20402578:	00f70a63          	beq	a4,a5,2040258c <_vsnprintf+0x7ec>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:773 (discriminator 2)
2040257c:	f7042783          	lw	a5,-144(s0)
20402580:	0007c703          	lbu	a4,0(a5)
20402584:	04700793          	li	a5,71
20402588:	00f71863          	bne	a4,a5,20402598 <_vsnprintf+0x7f8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:773 (discriminator 3)
2040258c:	fcc42783          	lw	a5,-52(s0)
20402590:	0207e793          	ori	a5,a5,32
20402594:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:774
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20402598:	f6c42783          	lw	a5,-148(s0)
2040259c:	079d                	addi	a5,a5,7
2040259e:	9be1                	andi	a5,a5,-8
204025a0:	00878713          	addi	a4,a5,8
204025a4:	f6e42623          	sw	a4,-148(s0)
204025a8:	4398                	lw	a4,0(a5)
204025aa:	43dc                	lw	a5,4(a5)
204025ac:	fcc42683          	lw	a3,-52(s0)
204025b0:	c036                	sw	a3,0(sp)
204025b2:	fc842883          	lw	a7,-56(s0)
204025b6:	fc442803          	lw	a6,-60(s0)
204025ba:	f7442683          	lw	a3,-140(s0)
204025be:	fbc42603          	lw	a2,-68(s0)
204025c2:	f7842583          	lw	a1,-136(s0)
204025c6:	f7c42503          	lw	a0,-132(s0)
204025ca:	96aff0ef          	jal	ra,20401734 <_etoa>
204025ce:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:775
        format++;
204025d2:	f7042783          	lw	a5,-144(s0)
204025d6:	0785                	addi	a5,a5,1
204025d8:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:776
        break;
204025dc:	a4e5                	j	204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:780
#endif  // PRINTF_SUPPORT_EXPONENTIAL
#endif  // PRINTF_SUPPORT_FLOAT
      case 'c' : {
        unsigned int l = 1U;
204025de:	4785                	li	a5,1
204025e0:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:782
        // pre padding
        if (!(flags & FLAGS_LEFT)) {
204025e4:	fcc42783          	lw	a5,-52(s0)
204025e8:	8b89                	andi	a5,a5,2
204025ea:	ef85                	bnez	a5,20402622 <_vsnprintf+0x882>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:783
          while (l++ < width) {
204025ec:	a00d                	j	2040260e <_vsnprintf+0x86e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:784
            out(' ', buffer, idx++, maxlen);
204025ee:	fbc42783          	lw	a5,-68(s0)
204025f2:	00178713          	addi	a4,a5,1
204025f6:	fae42e23          	sw	a4,-68(s0)
204025fa:	f7c42703          	lw	a4,-132(s0)
204025fe:	f7442683          	lw	a3,-140(s0)
20402602:	863e                	mv	a2,a5
20402604:	f7842583          	lw	a1,-136(s0)
20402608:	02000513          	li	a0,32
2040260c:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:783
          while (l++ < width) {
2040260e:	fb442783          	lw	a5,-76(s0)
20402612:	00178713          	addi	a4,a5,1
20402616:	fae42a23          	sw	a4,-76(s0)
2040261a:	fc842703          	lw	a4,-56(s0)
2040261e:	fce7e8e3          	bltu	a5,a4,204025ee <_vsnprintf+0x84e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:788
          }
        }
        // char output
        out((char)va_arg(va, int), buffer, idx++, maxlen);
20402622:	f6c42783          	lw	a5,-148(s0)
20402626:	00478713          	addi	a4,a5,4
2040262a:	f6e42623          	sw	a4,-148(s0)
2040262e:	439c                	lw	a5,0(a5)
20402630:	0ff7f513          	andi	a0,a5,255
20402634:	fbc42783          	lw	a5,-68(s0)
20402638:	00178713          	addi	a4,a5,1
2040263c:	fae42e23          	sw	a4,-68(s0)
20402640:	f7c42703          	lw	a4,-132(s0)
20402644:	f7442683          	lw	a3,-140(s0)
20402648:	863e                	mv	a2,a5
2040264a:	f7842583          	lw	a1,-136(s0)
2040264e:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:790
        // post padding
        if (flags & FLAGS_LEFT) {
20402650:	fcc42783          	lw	a5,-52(s0)
20402654:	8b89                	andi	a5,a5,2
20402656:	cf85                	beqz	a5,2040268e <_vsnprintf+0x8ee>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:791
          while (l++ < width) {
20402658:	a00d                	j	2040267a <_vsnprintf+0x8da>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:792
            out(' ', buffer, idx++, maxlen);
2040265a:	fbc42783          	lw	a5,-68(s0)
2040265e:	00178713          	addi	a4,a5,1
20402662:	fae42e23          	sw	a4,-68(s0)
20402666:	f7c42703          	lw	a4,-132(s0)
2040266a:	f7442683          	lw	a3,-140(s0)
2040266e:	863e                	mv	a2,a5
20402670:	f7842583          	lw	a1,-136(s0)
20402674:	02000513          	li	a0,32
20402678:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:791
          while (l++ < width) {
2040267a:	fb442783          	lw	a5,-76(s0)
2040267e:	00178713          	addi	a4,a5,1
20402682:	fae42a23          	sw	a4,-76(s0)
20402686:	fc842703          	lw	a4,-56(s0)
2040268a:	fce7e8e3          	bltu	a5,a4,2040265a <_vsnprintf+0x8ba>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:795
          }
        }
        format++;
2040268e:	f7042783          	lw	a5,-144(s0)
20402692:	0785                	addi	a5,a5,1
20402694:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:796
        break;
20402698:	a435                	j	204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:800
      }

      case 's' : {
        const char* p = va_arg(va, char*);
2040269a:	f6c42783          	lw	a5,-148(s0)
2040269e:	00478713          	addi	a4,a5,4
204026a2:	f6e42623          	sw	a4,-148(s0)
204026a6:	439c                	lw	a5,0(a5)
204026a8:	faf42823          	sw	a5,-80(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:801
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
204026ac:	fc442783          	lw	a5,-60(s0)
204026b0:	c781                	beqz	a5,204026b8 <_vsnprintf+0x918>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:801 (discriminator 1)
204026b2:	fc442783          	lw	a5,-60(s0)
204026b6:	a011                	j	204026ba <_vsnprintf+0x91a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:801 (discriminator 2)
204026b8:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:801 (discriminator 4)
204026ba:	85be                	mv	a1,a5
204026bc:	fb042503          	lw	a0,-80(s0)
204026c0:	c28fe0ef          	jal	ra,20400ae8 <_strnlen_s>
204026c4:	faa42623          	sw	a0,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:803 (discriminator 4)
        // pre padding
        if (flags & FLAGS_PRECISION) {
204026c8:	fcc42783          	lw	a5,-52(s0)
204026cc:	4007f793          	andi	a5,a5,1024
204026d0:	cb91                	beqz	a5,204026e4 <_vsnprintf+0x944>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:804
          l = (l < precision ? l : precision);
204026d2:	fac42703          	lw	a4,-84(s0)
204026d6:	fc442783          	lw	a5,-60(s0)
204026da:	00f77363          	bgeu	a4,a5,204026e0 <_vsnprintf+0x940>
204026de:	87ba                	mv	a5,a4
204026e0:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:806
        }
        if (!(flags & FLAGS_LEFT)) {
204026e4:	fcc42783          	lw	a5,-52(s0)
204026e8:	8b89                	andi	a5,a5,2
204026ea:	e3bd                	bnez	a5,20402750 <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:807
          while (l++ < width) {
204026ec:	a00d                	j	2040270e <_vsnprintf+0x96e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:808
            out(' ', buffer, idx++, maxlen);
204026ee:	fbc42783          	lw	a5,-68(s0)
204026f2:	00178713          	addi	a4,a5,1
204026f6:	fae42e23          	sw	a4,-68(s0)
204026fa:	f7c42703          	lw	a4,-132(s0)
204026fe:	f7442683          	lw	a3,-140(s0)
20402702:	863e                	mv	a2,a5
20402704:	f7842583          	lw	a1,-136(s0)
20402708:	02000513          	li	a0,32
2040270c:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:807
          while (l++ < width) {
2040270e:	fac42783          	lw	a5,-84(s0)
20402712:	00178713          	addi	a4,a5,1
20402716:	fae42623          	sw	a4,-84(s0)
2040271a:	fc842703          	lw	a4,-56(s0)
2040271e:	fce7e8e3          	bltu	a5,a4,204026ee <_vsnprintf+0x94e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:812
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20402722:	a03d                	j	20402750 <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:813
          out(*(p++), buffer, idx++, maxlen);
20402724:	fb042783          	lw	a5,-80(s0)
20402728:	00178713          	addi	a4,a5,1
2040272c:	fae42823          	sw	a4,-80(s0)
20402730:	0007c503          	lbu	a0,0(a5)
20402734:	fbc42783          	lw	a5,-68(s0)
20402738:	00178713          	addi	a4,a5,1
2040273c:	fae42e23          	sw	a4,-68(s0)
20402740:	f7c42703          	lw	a4,-132(s0)
20402744:	f7442683          	lw	a3,-140(s0)
20402748:	863e                	mv	a2,a5
2040274a:	f7842583          	lw	a1,-136(s0)
2040274e:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:812
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20402750:	fb042783          	lw	a5,-80(s0)
20402754:	0007c783          	lbu	a5,0(a5)
20402758:	cf89                	beqz	a5,20402772 <_vsnprintf+0x9d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:812 (discriminator 1)
2040275a:	fcc42783          	lw	a5,-52(s0)
2040275e:	4007f793          	andi	a5,a5,1024
20402762:	d3e9                	beqz	a5,20402724 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:812 (discriminator 2)
20402764:	fc442783          	lw	a5,-60(s0)
20402768:	fff78713          	addi	a4,a5,-1
2040276c:	fce42223          	sw	a4,-60(s0)
20402770:	fbd5                	bnez	a5,20402724 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:816
        }
        // post padding
        if (flags & FLAGS_LEFT) {
20402772:	fcc42783          	lw	a5,-52(s0)
20402776:	8b89                	andi	a5,a5,2
20402778:	cf85                	beqz	a5,204027b0 <_vsnprintf+0xa10>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:817
          while (l++ < width) {
2040277a:	a00d                	j	2040279c <_vsnprintf+0x9fc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:818
            out(' ', buffer, idx++, maxlen);
2040277c:	fbc42783          	lw	a5,-68(s0)
20402780:	00178713          	addi	a4,a5,1
20402784:	fae42e23          	sw	a4,-68(s0)
20402788:	f7c42703          	lw	a4,-132(s0)
2040278c:	f7442683          	lw	a3,-140(s0)
20402790:	863e                	mv	a2,a5
20402792:	f7842583          	lw	a1,-136(s0)
20402796:	02000513          	li	a0,32
2040279a:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:817
          while (l++ < width) {
2040279c:	fac42783          	lw	a5,-84(s0)
204027a0:	00178713          	addi	a4,a5,1
204027a4:	fae42623          	sw	a4,-84(s0)
204027a8:	fc842703          	lw	a4,-56(s0)
204027ac:	fce7e8e3          	bltu	a5,a4,2040277c <_vsnprintf+0x9dc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:821
          }
        }
        format++;
204027b0:	f7042783          	lw	a5,-144(s0)
204027b4:	0785                	addi	a5,a5,1
204027b6:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:822
        break;
204027ba:	a229                	j	204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:826
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
204027bc:	47a1                	li	a5,8
204027be:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:827
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
204027c2:	fcc42783          	lw	a5,-52(s0)
204027c6:	0217e793          	ori	a5,a5,33
204027ca:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:829
#if defined(PRINTF_SUPPORT_LONG_LONG)
        const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
204027ce:	f80407a3          	sb	zero,-113(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:830
        if (is_ll) {
204027d2:	f8f44783          	lbu	a5,-113(s0)
204027d6:	c7a9                	beqz	a5,20402820 <_vsnprintf+0xa80>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:831
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
204027d8:	f6c42783          	lw	a5,-148(s0)
204027dc:	00478713          	addi	a4,a5,4
204027e0:	f6e42623          	sw	a4,-148(s0)
204027e4:	439c                	lw	a5,0(a5)
204027e6:	8d3e                	mv	s10,a5
204027e8:	4d81                	li	s11,0
204027ea:	fcc42783          	lw	a5,-52(s0)
204027ee:	c63e                	sw	a5,12(sp)
204027f0:	fc842783          	lw	a5,-56(s0)
204027f4:	c43e                	sw	a5,8(sp)
204027f6:	fc442783          	lw	a5,-60(s0)
204027fa:	c23e                	sw	a5,4(sp)
204027fc:	c002                	sw	zero,0(sp)
204027fe:	48c1                	li	a7,16
20402800:	4801                	li	a6,0
20402802:	876a                	mv	a4,s10
20402804:	87ee                	mv	a5,s11
20402806:	f7442683          	lw	a3,-140(s0)
2040280a:	fbc42603          	lw	a2,-68(s0)
2040280e:	f7842583          	lw	a1,-136(s0)
20402812:	f7c42503          	lw	a0,-132(s0)
20402816:	821fe0ef          	jal	ra,20401036 <_ntoa_long_long>
2040281a:	faa42e23          	sw	a0,-68(s0)
2040281e:	a83d                	j	2040285c <_vsnprintf+0xabc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:835
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
20402820:	f6c42783          	lw	a5,-148(s0)
20402824:	00478713          	addi	a4,a5,4
20402828:	f6e42623          	sw	a4,-148(s0)
2040282c:	439c                	lw	a5,0(a5)
2040282e:	873e                	mv	a4,a5
20402830:	fcc42783          	lw	a5,-52(s0)
20402834:	c23e                	sw	a5,4(sp)
20402836:	fc842783          	lw	a5,-56(s0)
2040283a:	c03e                	sw	a5,0(sp)
2040283c:	fc442883          	lw	a7,-60(s0)
20402840:	4841                	li	a6,16
20402842:	4781                	li	a5,0
20402844:	f7442683          	lw	a3,-140(s0)
20402848:	fbc42603          	lw	a2,-68(s0)
2040284c:	f7842583          	lw	a1,-136(s0)
20402850:	f7c42503          	lw	a0,-132(s0)
20402854:	edefe0ef          	jal	ra,20400f32 <_ntoa_long>
20402858:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:839
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
2040285c:	f7042783          	lw	a5,-144(s0)
20402860:	0785                	addi	a5,a5,1
20402862:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:840
        break;
20402866:	a8b9                	j	204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:844
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
20402868:	fbc42783          	lw	a5,-68(s0)
2040286c:	00178713          	addi	a4,a5,1
20402870:	fae42e23          	sw	a4,-68(s0)
20402874:	f7c42703          	lw	a4,-132(s0)
20402878:	f7442683          	lw	a3,-140(s0)
2040287c:	863e                	mv	a2,a5
2040287e:	f7842583          	lw	a1,-136(s0)
20402882:	02500513          	li	a0,37
20402886:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:845
        format++;
20402888:	f7042783          	lw	a5,-144(s0)
2040288c:	0785                	addi	a5,a5,1
2040288e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:846
        break;
20402892:	a80d                	j	204028c4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:849

      default :
        out(*format, buffer, idx++, maxlen);
20402894:	f7042783          	lw	a5,-144(s0)
20402898:	0007c503          	lbu	a0,0(a5)
2040289c:	fbc42783          	lw	a5,-68(s0)
204028a0:	00178713          	addi	a4,a5,1
204028a4:	fae42e23          	sw	a4,-68(s0)
204028a8:	f7c42703          	lw	a4,-132(s0)
204028ac:	f7442683          	lw	a3,-140(s0)
204028b0:	863e                	mv	a2,a5
204028b2:	f7842583          	lw	a1,-136(s0)
204028b6:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:850
        format++;
204028b8:	f7042783          	lw	a5,-144(s0)
204028bc:	0785                	addi	a5,a5,1
204028be:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:851
        break;
204028c2:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:590
  while (*format)
204028c4:	f7042783          	lw	a5,-144(s0)
204028c8:	0007c783          	lbu	a5,0(a5)
204028cc:	d2079063          	bnez	a5,20401dec <_vsnprintf+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:856
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
204028d0:	fbc42703          	lw	a4,-68(s0)
204028d4:	f7442783          	lw	a5,-140(s0)
204028d8:	00f76663          	bltu	a4,a5,204028e4 <_vsnprintf+0xb44>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:856 (discriminator 1)
204028dc:	f7442783          	lw	a5,-140(s0)
204028e0:	17fd                	addi	a5,a5,-1
204028e2:	a019                	j	204028e8 <_vsnprintf+0xb48>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:856 (discriminator 2)
204028e4:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:856 (discriminator 4)
204028e8:	f7c42703          	lw	a4,-132(s0)
204028ec:	f7442683          	lw	a3,-140(s0)
204028f0:	863e                	mv	a2,a5
204028f2:	f7842583          	lw	a1,-136(s0)
204028f6:	4501                	li	a0,0
204028f8:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:859 (discriminator 4)

  // return written chars without terminating \0
  return (int)idx;
204028fa:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:860 (discriminator 4)
}
204028fe:	853e                	mv	a0,a5
20402900:	50ba                	lw	ra,172(sp)
20402902:	542a                	lw	s0,168(sp)
20402904:	591a                	lw	s2,164(sp)
20402906:	598a                	lw	s3,160(sp)
20402908:	4a7a                	lw	s4,156(sp)
2040290a:	4aea                	lw	s5,152(sp)
2040290c:	4b5a                	lw	s6,148(sp)
2040290e:	4bca                	lw	s7,144(sp)
20402910:	4c3a                	lw	s8,140(sp)
20402912:	4caa                	lw	s9,136(sp)
20402914:	4d1a                	lw	s10,132(sp)
20402916:	4d8a                	lw	s11,128(sp)
20402918:	614d                	addi	sp,sp,176
2040291a:	8082                	ret

2040291c <printf_>:
printf_():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:866


///////////////////////////////////////////////////////////////////////////////

int printf_(const char* format, ...)
{
2040291c:	715d                	addi	sp,sp,-80
2040291e:	d606                	sw	ra,44(sp)
20402920:	d422                	sw	s0,40(sp)
20402922:	1800                	addi	s0,sp,48
20402924:	fca42e23          	sw	a0,-36(s0)
20402928:	c04c                	sw	a1,4(s0)
2040292a:	c410                	sw	a2,8(s0)
2040292c:	c454                	sw	a3,12(s0)
2040292e:	c818                	sw	a4,16(s0)
20402930:	c85c                	sw	a5,20(s0)
20402932:	01042c23          	sw	a6,24(s0)
20402936:	01142e23          	sw	a7,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:868
  va_list va;
  va_start(va, format);
2040293a:	02040793          	addi	a5,s0,32
2040293e:	1791                	addi	a5,a5,-28
20402940:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:870
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
20402944:	fe842703          	lw	a4,-24(s0)
20402948:	fe440793          	addi	a5,s0,-28
2040294c:	fdc42683          	lw	a3,-36(s0)
20402950:	567d                	li	a2,-1
20402952:	85be                	mv	a1,a5
20402954:	204017b7          	lui	a5,0x20401
20402958:	ab678513          	addi	a0,a5,-1354 # 20400ab6 <_out_char>
2040295c:	c44ff0ef          	jal	ra,20401da0 <_vsnprintf>
20402960:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:872
  va_end(va);
  return ret;
20402964:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashCleanHW/printf.c:873
}
20402968:	853e                	mv	a0,a5
2040296a:	50b2                	lw	ra,44(sp)
2040296c:	5422                	lw	s0,40(sp)
2040296e:	6161                	addi	sp,sp,80
20402970:	8082                	ret

20402972 <write>:
write():
20402972:	5fc00797          	auipc	a5,0x5fc00
20402976:	4fe78793          	addi	a5,a5,1278 # 80002e70 <_impure_ptr>
2040297a:	86b2                	mv	a3,a2
2040297c:	862e                	mv	a2,a1
2040297e:	85aa                	mv	a1,a0
20402980:	4388                	lw	a0,0(a5)
20402982:	a009                	j	20402984 <_write_r>

20402984 <_write_r>:
_write_r():
20402984:	1141                	addi	sp,sp,-16
20402986:	c422                	sw	s0,8(sp)
20402988:	842a                	mv	s0,a0
2040298a:	852e                	mv	a0,a1
2040298c:	85b2                	mv	a1,a2
2040298e:	8636                	mv	a2,a3
20402990:	a801a423          	sw	zero,-1400(gp) # 800030f8 <errno>
20402994:	c606                	sw	ra,12(sp)
20402996:	78f010ef          	jal	ra,20404924 <_write>
2040299a:	57fd                	li	a5,-1
2040299c:	00f51763          	bne	a0,a5,204029aa <_write_r+0x26>
204029a0:	a8818793          	addi	a5,gp,-1400 # 800030f8 <errno>
204029a4:	439c                	lw	a5,0(a5)
204029a6:	c391                	beqz	a5,204029aa <_write_r+0x26>
204029a8:	c01c                	sw	a5,0(s0)
204029aa:	40b2                	lw	ra,12(sp)
204029ac:	4422                	lw	s0,8(sp)
204029ae:	0141                	addi	sp,sp,16
204029b0:	8082                	ret

204029b2 <__udivdi3>:
__udivdi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
204029b2:	87ae                	mv	a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
204029b4:	8832                	mv	a6,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
204029b6:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
204029b8:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
204029ba:	20069663          	bnez	a3,20402bc6 <__udivdi3+0x214>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
204029be:	00006897          	auipc	a7,0x6
204029c2:	c7a88893          	addi	a7,a7,-902 # 20408638 <__clz_tab>
204029c6:	0ac5fe63          	bgeu	a1,a2,20402a82 <__udivdi3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
204029ca:	6741                	lui	a4,0x10
204029cc:	0ae67463          	bgeu	a2,a4,20402a74 <__udivdi3+0xc2>
204029d0:	0ff00713          	li	a4,255
204029d4:	00c73733          	sltu	a4,a4,a2
204029d8:	070e                	slli	a4,a4,0x3
204029da:	00e656b3          	srl	a3,a2,a4
204029de:	98b6                	add	a7,a7,a3
204029e0:	0008c683          	lbu	a3,0(a7)
204029e4:	9736                	add	a4,a4,a3
204029e6:	02000693          	li	a3,32
204029ea:	8e99                	sub	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
204029ec:	ca99                	beqz	a3,20402a02 <__udivdi3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
204029ee:	00d797b3          	sll	a5,a5,a3
204029f2:	00e55733          	srl	a4,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
204029f6:	00d61833          	sll	a6,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
204029fa:	00f765b3          	or	a1,a4,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
204029fe:	00d51333          	sll	t1,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20402a02:	01085513          	srli	a0,a6,0x10
20402a06:	02a5f733          	remu	a4,a1,a0
20402a0a:	01081613          	slli	a2,a6,0x10
20402a0e:	8241                	srli	a2,a2,0x10
20402a10:	01035693          	srli	a3,t1,0x10
20402a14:	02a5d5b3          	divu	a1,a1,a0
20402a18:	0742                	slli	a4,a4,0x10
20402a1a:	8ed9                	or	a3,a3,a4
20402a1c:	02b607b3          	mul	a5,a2,a1
20402a20:	872e                	mv	a4,a1
20402a22:	00f6fc63          	bgeu	a3,a5,20402a3a <__udivdi3+0x88>
20402a26:	96c2                	add	a3,a3,a6
20402a28:	fff58713          	addi	a4,a1,-1
20402a2c:	0106e763          	bltu	a3,a6,20402a3a <__udivdi3+0x88>
20402a30:	00f6f563          	bgeu	a3,a5,20402a3a <__udivdi3+0x88>
20402a34:	ffe58713          	addi	a4,a1,-2
20402a38:	96c2                	add	a3,a3,a6
20402a3a:	8e9d                	sub	a3,a3,a5
20402a3c:	02a6f7b3          	remu	a5,a3,a0
20402a40:	0342                	slli	t1,t1,0x10
20402a42:	01035313          	srli	t1,t1,0x10
20402a46:	02a6d6b3          	divu	a3,a3,a0
20402a4a:	07c2                	slli	a5,a5,0x10
20402a4c:	0067e333          	or	t1,a5,t1
20402a50:	02d605b3          	mul	a1,a2,a3
20402a54:	8536                	mv	a0,a3
20402a56:	00b37b63          	bgeu	t1,a1,20402a6c <__udivdi3+0xba>
20402a5a:	9342                	add	t1,t1,a6
20402a5c:	fff68513          	addi	a0,a3,-1 # 7fffffff <metal_segment_heap_target_end+0xffffc303>
20402a60:	01036663          	bltu	t1,a6,20402a6c <__udivdi3+0xba>
20402a64:	00b37463          	bgeu	t1,a1,20402a6c <__udivdi3+0xba>
20402a68:	ffe68513          	addi	a0,a3,-2
20402a6c:	0742                	slli	a4,a4,0x10
20402a6e:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20402a70:	4581                	li	a1,0
20402a72:	a84d                	j	20402b24 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20402a74:	010006b7          	lui	a3,0x1000
20402a78:	4741                	li	a4,16
20402a7a:	f6d660e3          	bltu	a2,a3,204029da <__udivdi3+0x28>
20402a7e:	4761                	li	a4,24
20402a80:	bfa9                	j	204029da <__udivdi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20402a82:	e601                	bnez	a2,20402a8a <__udivdi3+0xd8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20402a84:	4685                	li	a3,1
20402a86:	02c6d833          	divu	a6,a3,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20402a8a:	66c1                	lui	a3,0x10
20402a8c:	08d87e63          	bgeu	a6,a3,20402b28 <__udivdi3+0x176>
20402a90:	0ff00693          	li	a3,255
20402a94:	0106f363          	bgeu	a3,a6,20402a9a <__udivdi3+0xe8>
20402a98:	4721                	li	a4,8
20402a9a:	00e856b3          	srl	a3,a6,a4
20402a9e:	98b6                	add	a7,a7,a3
20402aa0:	0008c683          	lbu	a3,0(a7)
20402aa4:	96ba                	add	a3,a3,a4
20402aa6:	02000713          	li	a4,32
20402aaa:	8f15                	sub	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20402aac:	e749                	bnez	a4,20402b36 <__udivdi3+0x184>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20402aae:	410787b3          	sub	a5,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
20402ab2:	4585                	li	a1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20402ab4:	01085613          	srli	a2,a6,0x10
20402ab8:	01081893          	slli	a7,a6,0x10
20402abc:	0108d893          	srli	a7,a7,0x10
20402ac0:	01035693          	srli	a3,t1,0x10
20402ac4:	02c7f733          	remu	a4,a5,a2
20402ac8:	02c7d7b3          	divu	a5,a5,a2
20402acc:	0742                	slli	a4,a4,0x10
20402ace:	8ed9                	or	a3,a3,a4
20402ad0:	02f88533          	mul	a0,a7,a5
20402ad4:	873e                	mv	a4,a5
20402ad6:	00a6fc63          	bgeu	a3,a0,20402aee <__udivdi3+0x13c>
20402ada:	96c2                	add	a3,a3,a6
20402adc:	fff78713          	addi	a4,a5,-1
20402ae0:	0106e763          	bltu	a3,a6,20402aee <__udivdi3+0x13c>
20402ae4:	00a6f563          	bgeu	a3,a0,20402aee <__udivdi3+0x13c>
20402ae8:	ffe78713          	addi	a4,a5,-2
20402aec:	96c2                	add	a3,a3,a6
20402aee:	8e89                	sub	a3,a3,a0
20402af0:	02c6f7b3          	remu	a5,a3,a2
20402af4:	0342                	slli	t1,t1,0x10
20402af6:	01035313          	srli	t1,t1,0x10
20402afa:	02c6d6b3          	divu	a3,a3,a2
20402afe:	07c2                	slli	a5,a5,0x10
20402b00:	0067e333          	or	t1,a5,t1
20402b04:	02d888b3          	mul	a7,a7,a3
20402b08:	8536                	mv	a0,a3
20402b0a:	01137b63          	bgeu	t1,a7,20402b20 <__udivdi3+0x16e>
20402b0e:	9342                	add	t1,t1,a6
20402b10:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
20402b14:	01036663          	bltu	t1,a6,20402b20 <__udivdi3+0x16e>
20402b18:	01137463          	bgeu	t1,a7,20402b20 <__udivdi3+0x16e>
20402b1c:	ffe68513          	addi	a0,a3,-2
20402b20:	0742                	slli	a4,a4,0x10
20402b22:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20402b24:	853a                	mv	a0,a4
20402b26:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20402b28:	010006b7          	lui	a3,0x1000
20402b2c:	4741                	li	a4,16
20402b2e:	f6d866e3          	bltu	a6,a3,20402a9a <__udivdi3+0xe8>
20402b32:	4761                	li	a4,24
20402b34:	b79d                	j	20402a9a <__udivdi3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20402b36:	00e81833          	sll	a6,a6,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20402b3a:	00d7d5b3          	srl	a1,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20402b3e:	00e51333          	sll	t1,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20402b42:	00d556b3          	srl	a3,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20402b46:	01085513          	srli	a0,a6,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20402b4a:	00e797b3          	sll	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20402b4e:	02a5f733          	remu	a4,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20402b52:	00f6e8b3          	or	a7,a3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20402b56:	01081793          	slli	a5,a6,0x10
20402b5a:	83c1                	srli	a5,a5,0x10
20402b5c:	0108d613          	srli	a2,a7,0x10
20402b60:	02a5d5b3          	divu	a1,a1,a0
20402b64:	0742                	slli	a4,a4,0x10
20402b66:	8f51                	or	a4,a4,a2
20402b68:	02b786b3          	mul	a3,a5,a1
20402b6c:	862e                	mv	a2,a1
20402b6e:	00d77c63          	bgeu	a4,a3,20402b86 <__udivdi3+0x1d4>
20402b72:	9742                	add	a4,a4,a6
20402b74:	fff58613          	addi	a2,a1,-1
20402b78:	01076763          	bltu	a4,a6,20402b86 <__udivdi3+0x1d4>
20402b7c:	00d77563          	bgeu	a4,a3,20402b86 <__udivdi3+0x1d4>
20402b80:	ffe58613          	addi	a2,a1,-2
20402b84:	9742                	add	a4,a4,a6
20402b86:	40d706b3          	sub	a3,a4,a3
20402b8a:	02a6f733          	remu	a4,a3,a0
20402b8e:	08c2                	slli	a7,a7,0x10
20402b90:	0108d893          	srli	a7,a7,0x10
20402b94:	02a6d6b3          	divu	a3,a3,a0
20402b98:	0742                	slli	a4,a4,0x10
20402b9a:	02d785b3          	mul	a1,a5,a3
20402b9e:	011767b3          	or	a5,a4,a7
20402ba2:	8736                	mv	a4,a3
20402ba4:	00b7fc63          	bgeu	a5,a1,20402bbc <__udivdi3+0x20a>
20402ba8:	97c2                	add	a5,a5,a6
20402baa:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
20402bae:	0107e763          	bltu	a5,a6,20402bbc <__udivdi3+0x20a>
20402bb2:	00b7f563          	bgeu	a5,a1,20402bbc <__udivdi3+0x20a>
20402bb6:	ffe68713          	addi	a4,a3,-2
20402bba:	97c2                	add	a5,a5,a6
20402bbc:	8f8d                	sub	a5,a5,a1
20402bbe:	01061593          	slli	a1,a2,0x10
20402bc2:	8dd9                	or	a1,a1,a4
20402bc4:	bdc5                	j	20402ab4 <__udivdi3+0x102>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20402bc6:	14d5e263          	bltu	a1,a3,20402d0a <__udivdi3+0x358>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20402bca:	6741                	lui	a4,0x10
20402bcc:	02e6fe63          	bgeu	a3,a4,20402c08 <__udivdi3+0x256>
20402bd0:	0ff00813          	li	a6,255
20402bd4:	00d83733          	sltu	a4,a6,a3
20402bd8:	070e                	slli	a4,a4,0x3
20402bda:	00e6d833          	srl	a6,a3,a4
20402bde:	00006597          	auipc	a1,0x6
20402be2:	a5a58593          	addi	a1,a1,-1446 # 20408638 <__clz_tab>
20402be6:	95c2                	add	a1,a1,a6
20402be8:	0005c803          	lbu	a6,0(a1)
20402bec:	02000593          	li	a1,32
20402bf0:	983a                	add	a6,a6,a4
20402bf2:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20402bf6:	e185                	bnez	a1,20402c16 <__udivdi3+0x264>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20402bf8:	4705                	li	a4,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20402bfa:	f2f6e5e3          	bltu	a3,a5,20402b24 <__udivdi3+0x172>
20402bfe:	00c53533          	sltu	a0,a0,a2
20402c02:	00154713          	xori	a4,a0,1
20402c06:	bf39                	j	20402b24 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20402c08:	010005b7          	lui	a1,0x1000
20402c0c:	4741                	li	a4,16
20402c0e:	fcb6e6e3          	bltu	a3,a1,20402bda <__udivdi3+0x228>
20402c12:	4761                	li	a4,24
20402c14:	b7d9                	j	20402bda <__udivdi3+0x228>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20402c16:	01065733          	srl	a4,a2,a6
20402c1a:	00b696b3          	sll	a3,a3,a1
20402c1e:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402c20:	0106de93          	srli	t4,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20402c24:	0107d733          	srl	a4,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402c28:	03d778b3          	remu	a7,a4,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20402c2c:	00b797b3          	sll	a5,a5,a1
20402c30:	01055833          	srl	a6,a0,a6
20402c34:	00f86333          	or	t1,a6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402c38:	01069793          	slli	a5,a3,0x10
20402c3c:	83c1                	srli	a5,a5,0x10
20402c3e:	01035813          	srli	a6,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20402c42:	00b61633          	sll	a2,a2,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402c46:	03d75733          	divu	a4,a4,t4
20402c4a:	08c2                	slli	a7,a7,0x10
20402c4c:	0108e833          	or	a6,a7,a6
20402c50:	02e78f33          	mul	t5,a5,a4
20402c54:	8e3a                	mv	t3,a4
20402c56:	01e87c63          	bgeu	a6,t5,20402c6e <__udivdi3+0x2bc>
20402c5a:	9836                	add	a6,a6,a3
20402c5c:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
20402c60:	00d86763          	bltu	a6,a3,20402c6e <__udivdi3+0x2bc>
20402c64:	01e87563          	bgeu	a6,t5,20402c6e <__udivdi3+0x2bc>
20402c68:	ffe70e13          	addi	t3,a4,-2
20402c6c:	9836                	add	a6,a6,a3
20402c6e:	41e80833          	sub	a6,a6,t5
20402c72:	03d878b3          	remu	a7,a6,t4
20402c76:	03d85833          	divu	a6,a6,t4
20402c7a:	08c2                	slli	a7,a7,0x10
20402c7c:	03078eb3          	mul	t4,a5,a6
20402c80:	01031793          	slli	a5,t1,0x10
20402c84:	83c1                	srli	a5,a5,0x10
20402c86:	00f8e7b3          	or	a5,a7,a5
20402c8a:	8742                	mv	a4,a6
20402c8c:	01d7fc63          	bgeu	a5,t4,20402ca4 <__udivdi3+0x2f2>
20402c90:	97b6                	add	a5,a5,a3
20402c92:	fff80713          	addi	a4,a6,-1
20402c96:	00d7e763          	bltu	a5,a3,20402ca4 <__udivdi3+0x2f2>
20402c9a:	01d7f563          	bgeu	a5,t4,20402ca4 <__udivdi3+0x2f2>
20402c9e:	ffe80713          	addi	a4,a6,-2
20402ca2:	97b6                	add	a5,a5,a3
20402ca4:	0e42                	slli	t3,t3,0x10
20402ca6:	41d787b3          	sub	a5,a5,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20402caa:	6ec1                	lui	t4,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402cac:	00ee6733          	or	a4,t3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20402cb0:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
20402cb4:	01077333          	and	t1,a4,a6
20402cb8:	01075893          	srli	a7,a4,0x10
20402cbc:	01067833          	and	a6,a2,a6
20402cc0:	8241                	srli	a2,a2,0x10
20402cc2:	03030e33          	mul	t3,t1,a6
20402cc6:	03088833          	mul	a6,a7,a6
20402cca:	010e5693          	srli	a3,t3,0x10
20402cce:	02c30333          	mul	t1,t1,a2
20402cd2:	9342                	add	t1,t1,a6
20402cd4:	969a                	add	a3,a3,t1
20402cd6:	02c888b3          	mul	a7,a7,a2
20402cda:	0106f363          	bgeu	a3,a6,20402ce0 <__udivdi3+0x32e>
20402cde:	98f6                	add	a7,a7,t4
20402ce0:	0106d613          	srli	a2,a3,0x10
20402ce4:	98b2                	add	a7,a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20402ce6:	0317e063          	bltu	a5,a7,20402d06 <__udivdi3+0x354>
20402cea:	d91793e3          	bne	a5,a7,20402a70 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20402cee:	67c1                	lui	a5,0x10
20402cf0:	17fd                	addi	a5,a5,-1
20402cf2:	8efd                	and	a3,a3,a5
20402cf4:	06c2                	slli	a3,a3,0x10
20402cf6:	00fe7e33          	and	t3,t3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20402cfa:	00b51533          	sll	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20402cfe:	96f2                	add	a3,a3,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20402d00:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20402d02:	e2d571e3          	bgeu	a0,a3,20402b24 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
20402d06:	177d                	addi	a4,a4,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20402d08:	b3a5                	j	20402a70 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
20402d0a:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
20402d0c:	4701                	li	a4,0
20402d0e:	bd19                	j	20402b24 <__udivdi3+0x172>

20402d10 <__umoddi3>:
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20402d10:	88b2                	mv	a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20402d12:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20402d14:	87aa                	mv	a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
20402d16:	882e                	mv	a6,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20402d18:	1c069863          	bnez	a3,20402ee8 <__umoddi3+0x1d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
20402d1c:	00006697          	auipc	a3,0x6
20402d20:	91c68693          	addi	a3,a3,-1764 # 20408638 <__clz_tab>
20402d24:	0ac5f863          	bgeu	a1,a2,20402dd4 <__umoddi3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20402d28:	6341                	lui	t1,0x10
20402d2a:	08667e63          	bgeu	a2,t1,20402dc6 <__umoddi3+0xb6>
20402d2e:	0ff00313          	li	t1,255
20402d32:	00c37363          	bgeu	t1,a2,20402d38 <__umoddi3+0x28>
20402d36:	4721                	li	a4,8
20402d38:	00e65333          	srl	t1,a2,a4
20402d3c:	969a                	add	a3,a3,t1
20402d3e:	0006ce03          	lbu	t3,0(a3)
20402d42:	02000313          	li	t1,32
20402d46:	9e3a                	add	t3,t3,a4
20402d48:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20402d4c:	00030c63          	beqz	t1,20402d64 <__umoddi3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20402d50:	006595b3          	sll	a1,a1,t1
20402d54:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20402d58:	006618b3          	sll	a7,a2,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20402d5c:	00be6833          	or	a6,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20402d60:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20402d64:	0108d613          	srli	a2,a7,0x10
20402d68:	02c87733          	remu	a4,a6,a2
20402d6c:	01089513          	slli	a0,a7,0x10
20402d70:	8141                	srli	a0,a0,0x10
20402d72:	0107d693          	srli	a3,a5,0x10
20402d76:	02c85833          	divu	a6,a6,a2
20402d7a:	0742                	slli	a4,a4,0x10
20402d7c:	8ed9                	or	a3,a3,a4
20402d7e:	03050833          	mul	a6,a0,a6
20402d82:	0106f863          	bgeu	a3,a6,20402d92 <__umoddi3+0x82>
20402d86:	96c6                	add	a3,a3,a7
20402d88:	0116e563          	bltu	a3,a7,20402d92 <__umoddi3+0x82>
20402d8c:	0106f363          	bgeu	a3,a6,20402d92 <__umoddi3+0x82>
20402d90:	96c6                	add	a3,a3,a7
20402d92:	410686b3          	sub	a3,a3,a6
20402d96:	02c6f733          	remu	a4,a3,a2
20402d9a:	07c2                	slli	a5,a5,0x10
20402d9c:	83c1                	srli	a5,a5,0x10
20402d9e:	02c6d6b3          	divu	a3,a3,a2
20402da2:	02d506b3          	mul	a3,a0,a3
20402da6:	01071513          	slli	a0,a4,0x10
20402daa:	8fc9                	or	a5,a5,a0
20402dac:	00d7f863          	bgeu	a5,a3,20402dbc <__umoddi3+0xac>
20402db0:	97c6                	add	a5,a5,a7
20402db2:	0117e563          	bltu	a5,a7,20402dbc <__umoddi3+0xac>
20402db6:	00d7f363          	bgeu	a5,a3,20402dbc <__umoddi3+0xac>
20402dba:	97c6                	add	a5,a5,a7
20402dbc:	8f95                	sub	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
20402dbe:	0067d533          	srl	a0,a5,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
20402dc2:	4581                	li	a1,0
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
20402dc4:	8082                	ret
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20402dc6:	01000337          	lui	t1,0x1000
20402dca:	4741                	li	a4,16
20402dcc:	f66666e3          	bltu	a2,t1,20402d38 <__umoddi3+0x28>
20402dd0:	4761                	li	a4,24
20402dd2:	b79d                	j	20402d38 <__umoddi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20402dd4:	e601                	bnez	a2,20402ddc <__umoddi3+0xcc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20402dd6:	4605                	li	a2,1
20402dd8:	031658b3          	divu	a7,a2,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20402ddc:	6641                	lui	a2,0x10
20402dde:	08c8f363          	bgeu	a7,a2,20402e64 <__umoddi3+0x154>
20402de2:	0ff00613          	li	a2,255
20402de6:	01167363          	bgeu	a2,a7,20402dec <__umoddi3+0xdc>
20402dea:	4721                	li	a4,8
20402dec:	00e8d633          	srl	a2,a7,a4
20402df0:	96b2                	add	a3,a3,a2
20402df2:	0006ce03          	lbu	t3,0(a3)
20402df6:	02000313          	li	t1,32
20402dfa:	9e3a                	add	t3,t3,a4
20402dfc:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20402e00:	06031963          	bnez	t1,20402e72 <__umoddi3+0x162>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20402e04:	411585b3          	sub	a1,a1,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20402e08:	0108d713          	srli	a4,a7,0x10
20402e0c:	01089513          	slli	a0,a7,0x10
20402e10:	8141                	srli	a0,a0,0x10
20402e12:	0107d613          	srli	a2,a5,0x10
20402e16:	02e5f6b3          	remu	a3,a1,a4
20402e1a:	02e5d5b3          	divu	a1,a1,a4
20402e1e:	06c2                	slli	a3,a3,0x10
20402e20:	8ed1                	or	a3,a3,a2
20402e22:	02b505b3          	mul	a1,a0,a1
20402e26:	00b6f863          	bgeu	a3,a1,20402e36 <__umoddi3+0x126>
20402e2a:	96c6                	add	a3,a3,a7
20402e2c:	0116e563          	bltu	a3,a7,20402e36 <__umoddi3+0x126>
20402e30:	00b6f363          	bgeu	a3,a1,20402e36 <__umoddi3+0x126>
20402e34:	96c6                	add	a3,a3,a7
20402e36:	40b685b3          	sub	a1,a3,a1
20402e3a:	02e5f6b3          	remu	a3,a1,a4
20402e3e:	07c2                	slli	a5,a5,0x10
20402e40:	83c1                	srli	a5,a5,0x10
20402e42:	02e5d5b3          	divu	a1,a1,a4
20402e46:	02b505b3          	mul	a1,a0,a1
20402e4a:	01069513          	slli	a0,a3,0x10
20402e4e:	8fc9                	or	a5,a5,a0
20402e50:	00b7f863          	bgeu	a5,a1,20402e60 <__umoddi3+0x150>
20402e54:	97c6                	add	a5,a5,a7
20402e56:	0117e563          	bltu	a5,a7,20402e60 <__umoddi3+0x150>
20402e5a:	00b7f363          	bgeu	a5,a1,20402e60 <__umoddi3+0x150>
20402e5e:	97c6                	add	a5,a5,a7
20402e60:	8f8d                	sub	a5,a5,a1
20402e62:	bfb1                	j	20402dbe <__umoddi3+0xae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20402e64:	01000637          	lui	a2,0x1000
20402e68:	4741                	li	a4,16
20402e6a:	f8c8e1e3          	bltu	a7,a2,20402dec <__umoddi3+0xdc>
20402e6e:	4761                	li	a4,24
20402e70:	bfb5                	j	20402dec <__umoddi3+0xdc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20402e72:	006898b3          	sll	a7,a7,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20402e76:	01c5d733          	srl	a4,a1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20402e7a:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20402e7e:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20402e82:	0108d513          	srli	a0,a7,0x10
20402e86:	02a776b3          	remu	a3,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20402e8a:	006595b3          	sll	a1,a1,t1
20402e8e:	00be6e33          	or	t3,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20402e92:	01089593          	slli	a1,a7,0x10
20402e96:	81c1                	srli	a1,a1,0x10
20402e98:	010e5613          	srli	a2,t3,0x10
20402e9c:	02a75733          	divu	a4,a4,a0
20402ea0:	06c2                	slli	a3,a3,0x10
20402ea2:	8ed1                	or	a3,a3,a2
20402ea4:	02e58733          	mul	a4,a1,a4
20402ea8:	00e6f863          	bgeu	a3,a4,20402eb8 <__umoddi3+0x1a8>
20402eac:	96c6                	add	a3,a3,a7
20402eae:	0116e563          	bltu	a3,a7,20402eb8 <__umoddi3+0x1a8>
20402eb2:	00e6f363          	bgeu	a3,a4,20402eb8 <__umoddi3+0x1a8>
20402eb6:	96c6                	add	a3,a3,a7
20402eb8:	40e68633          	sub	a2,a3,a4
20402ebc:	02a676b3          	remu	a3,a2,a0
20402ec0:	0e42                	slli	t3,t3,0x10
20402ec2:	010e5e13          	srli	t3,t3,0x10
20402ec6:	02a65633          	divu	a2,a2,a0
20402eca:	06c2                	slli	a3,a3,0x10
20402ecc:	02c58633          	mul	a2,a1,a2
20402ed0:	01c6e5b3          	or	a1,a3,t3
20402ed4:	00c5f863          	bgeu	a1,a2,20402ee4 <__umoddi3+0x1d4>
20402ed8:	95c6                	add	a1,a1,a7
20402eda:	0115e563          	bltu	a1,a7,20402ee4 <__umoddi3+0x1d4>
20402ede:	00c5f363          	bgeu	a1,a2,20402ee4 <__umoddi3+0x1d4>
20402ee2:	95c6                	add	a1,a1,a7
20402ee4:	8d91                	sub	a1,a1,a2
20402ee6:	b70d                	j	20402e08 <__umoddi3+0xf8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20402ee8:	ecd5eee3          	bltu	a1,a3,20402dc4 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20402eec:	6741                	lui	a4,0x10
20402eee:	04e6f563          	bgeu	a3,a4,20402f38 <__umoddi3+0x228>
20402ef2:	0ff00e93          	li	t4,255
20402ef6:	00deb733          	sltu	a4,t4,a3
20402efa:	070e                	slli	a4,a4,0x3
20402efc:	00e6d333          	srl	t1,a3,a4
20402f00:	00005897          	auipc	a7,0x5
20402f04:	73888893          	addi	a7,a7,1848 # 20408638 <__clz_tab>
20402f08:	989a                	add	a7,a7,t1
20402f0a:	0008ce83          	lbu	t4,0(a7)
20402f0e:	02000e13          	li	t3,32
20402f12:	9eba                	add	t4,t4,a4
20402f14:	41de0e33          	sub	t3,t3,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20402f18:	020e1763          	bnez	t3,20402f46 <__umoddi3+0x236>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20402f1c:	00b6e463          	bltu	a3,a1,20402f24 <__umoddi3+0x214>
20402f20:	00c56963          	bltu	a0,a2,20402f32 <__umoddi3+0x222>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
20402f24:	40c507b3          	sub	a5,a0,a2
20402f28:	8d95                	sub	a1,a1,a3
20402f2a:	00f53533          	sltu	a0,a0,a5
20402f2e:	40a58833          	sub	a6,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
20402f32:	853e                	mv	a0,a5
20402f34:	85c2                	mv	a1,a6
20402f36:	b579                	j	20402dc4 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20402f38:	010008b7          	lui	a7,0x1000
20402f3c:	4741                	li	a4,16
20402f3e:	fb16efe3          	bltu	a3,a7,20402efc <__umoddi3+0x1ec>
20402f42:	4761                	li	a4,24
20402f44:	bf65                	j	20402efc <__umoddi3+0x1ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20402f46:	01d65733          	srl	a4,a2,t4
20402f4a:	01c696b3          	sll	a3,a3,t3
20402f4e:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402f50:	0106d813          	srli	a6,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20402f54:	01d5d733          	srl	a4,a1,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402f58:	03077333          	remu	t1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20402f5c:	01c595b3          	sll	a1,a1,t3
20402f60:	01d557b3          	srl	a5,a0,t4
20402f64:	8fcd                	or	a5,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402f66:	01069593          	slli	a1,a3,0x10
20402f6a:	81c1                	srli	a1,a1,0x10
20402f6c:	0107d893          	srli	a7,a5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20402f70:	01c61633          	sll	a2,a2,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20402f74:	01c51533          	sll	a0,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402f78:	03075733          	divu	a4,a4,a6
20402f7c:	0342                	slli	t1,t1,0x10
20402f7e:	011368b3          	or	a7,t1,a7
20402f82:	02e58f33          	mul	t5,a1,a4
20402f86:	833a                	mv	t1,a4
20402f88:	01e8fc63          	bgeu	a7,t5,20402fa0 <__umoddi3+0x290>
20402f8c:	98b6                	add	a7,a7,a3
20402f8e:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
20402f92:	00d8e763          	bltu	a7,a3,20402fa0 <__umoddi3+0x290>
20402f96:	01e8f563          	bgeu	a7,t5,20402fa0 <__umoddi3+0x290>
20402f9a:	ffe70313          	addi	t1,a4,-2
20402f9e:	98b6                	add	a7,a7,a3
20402fa0:	41e888b3          	sub	a7,a7,t5
20402fa4:	0308ff33          	remu	t5,a7,a6
20402fa8:	0308d8b3          	divu	a7,a7,a6
20402fac:	0f42                	slli	t5,t5,0x10
20402fae:	03158833          	mul	a6,a1,a7
20402fb2:	01079593          	slli	a1,a5,0x10
20402fb6:	81c1                	srli	a1,a1,0x10
20402fb8:	00bf65b3          	or	a1,t5,a1
20402fbc:	87c6                	mv	a5,a7
20402fbe:	0105fc63          	bgeu	a1,a6,20402fd6 <__umoddi3+0x2c6>
20402fc2:	95b6                	add	a1,a1,a3
20402fc4:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
20402fc8:	00d5e763          	bltu	a1,a3,20402fd6 <__umoddi3+0x2c6>
20402fcc:	0105f563          	bgeu	a1,a6,20402fd6 <__umoddi3+0x2c6>
20402fd0:	ffe88793          	addi	a5,a7,-2
20402fd4:	95b6                	add	a1,a1,a3
20402fd6:	0342                	slli	t1,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20402fd8:	6f41                	lui	t5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402fda:	00f36333          	or	t1,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20402fde:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
20402fe2:	00f378b3          	and	a7,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20402fe6:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20402fea:	01035313          	srli	t1,t1,0x10
20402fee:	01065813          	srli	a6,a2,0x10
20402ff2:	8ff1                	and	a5,a5,a2
20402ff4:	02f88733          	mul	a4,a7,a5
20402ff8:	02f307b3          	mul	a5,t1,a5
20402ffc:	030888b3          	mul	a7,a7,a6
20403000:	03030333          	mul	t1,t1,a6
20403004:	98be                	add	a7,a7,a5
20403006:	01075813          	srli	a6,a4,0x10
2040300a:	9846                	add	a6,a6,a7
2040300c:	00f87363          	bgeu	a6,a5,20403012 <__umoddi3+0x302>
20403010:	937a                	add	t1,t1,t5
20403012:	01085793          	srli	a5,a6,0x10
20403016:	933e                	add	t1,t1,a5
20403018:	67c1                	lui	a5,0x10
2040301a:	17fd                	addi	a5,a5,-1
2040301c:	00f87833          	and	a6,a6,a5
20403020:	0842                	slli	a6,a6,0x10
20403022:	8f7d                	and	a4,a4,a5
20403024:	9742                	add	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20403026:	0065e663          	bltu	a1,t1,20403032 <__umoddi3+0x322>
2040302a:	00659c63          	bne	a1,t1,20403042 <__umoddi3+0x332>
2040302e:	00e57a63          	bgeu	a0,a4,20403042 <__umoddi3+0x332>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20403032:	40c70633          	sub	a2,a4,a2
20403036:	00c73733          	sltu	a4,a4,a2
2040303a:	9736                	add	a4,a4,a3
2040303c:	40e30333          	sub	t1,t1,a4
20403040:	8732                	mv	a4,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
20403042:	40e50733          	sub	a4,a0,a4
20403046:	00e53533          	sltu	a0,a0,a4
2040304a:	406585b3          	sub	a1,a1,t1
2040304e:	8d89                	sub	a1,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
20403050:	01d597b3          	sll	a5,a1,t4
20403054:	01c75733          	srl	a4,a4,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
20403058:	00e7e533          	or	a0,a5,a4
2040305c:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
20403060:	b395                	j	20402dc4 <__umoddi3+0xb4>

20403062 <__adddf3>:
__adddf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403062:	00100837          	lui	a6,0x100
20403066:	187d                	addi	a6,a6,-1
20403068:	00b878b3          	and	a7,a6,a1
2040306c:	088e                	slli	a7,a7,0x3
2040306e:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403072:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403074:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403078:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2040307c:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403080:	0146d893          	srli	a7,a3,0x14
20403084:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403086:	ca26                	sw	s1,20(sp)
20403088:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2040308a:	7ff77493          	andi	s1,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2040308e:	7ff8f893          	andi	a7,a7,2047
20403092:	01d65713          	srli	a4,a2,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403096:	ce06                	sw	ra,28(sp)
20403098:	cc22                	sw	s0,24(sp)
2040309a:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2040309c:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204030a0:	82fd                	srli	a3,a3,0x1f
204030a2:	01076733          	or	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
204030a6:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204030a8:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204030aa:	41148833          	sub	a6,s1,a7
204030ae:	22d91663          	bne	s2,a3,204032da <__adddf3+0x278>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 7)
204030b2:	0f005163          	blez	a6,20403194 <__adddf3+0x132>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 9)
204030b6:	02089863          	bnez	a7,204030e6 <__adddf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 11)
204030ba:	00c766b3          	or	a3,a4,a2
204030be:	56068763          	beqz	a3,2040362c <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 14)
204030c2:	fff80593          	addi	a1,a6,-1 # fffff <__heap_size+0xff7ff>
204030c6:	e989                	bnez	a1,204030d8 <__adddf3+0x76>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 23)
204030c8:	962a                	add	a2,a2,a0
204030ca:	00a63533          	sltu	a0,a2,a0
204030ce:	97ba                	add	a5,a5,a4
204030d0:	97aa                	add	a5,a5,a0
204030d2:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 80)
204030d4:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
204030d6:	a8b1                	j	20403132 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 24)
204030d8:	7ff00693          	li	a3,2047
204030dc:	00d81d63          	bne	a6,a3,204030f6 <__adddf3+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204030e0:	7ff00493          	li	s1,2047
204030e4:	aa79                	j	20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 12)
204030e6:	7ff00693          	li	a3,2047
204030ea:	18d48c63          	beq	s1,a3,20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 38)
204030ee:	008006b7          	lui	a3,0x800
204030f2:	8f55                	or	a4,a4,a3
204030f4:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 47)
204030f6:	03800693          	li	a3,56
204030fa:	08b6c963          	blt	a3,a1,2040318c <__adddf3+0x12a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 48)
204030fe:	46fd                	li	a3,31
20403100:	06b6c063          	blt	a3,a1,20403160 <__adddf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 50)
20403104:	02000813          	li	a6,32
20403108:	40b80833          	sub	a6,a6,a1
2040310c:	010716b3          	sll	a3,a4,a6
20403110:	00b658b3          	srl	a7,a2,a1
20403114:	01061633          	sll	a2,a2,a6
20403118:	0116e6b3          	or	a3,a3,a7
2040311c:	00c03633          	snez	a2,a2
20403120:	8e55                	or	a2,a2,a3
20403122:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 64)
20403126:	962a                	add	a2,a2,a0
20403128:	973e                	add	a4,a4,a5
2040312a:	00a637b3          	sltu	a5,a2,a0
2040312e:	97ba                	add	a5,a5,a4
20403130:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 122)
20403132:	00879713          	slli	a4,a5,0x8
20403136:	14075663          	bgez	a4,20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 182)
2040313a:	0485                	addi	s1,s1,1
2040313c:	7ff00713          	li	a4,2047
20403140:	48e48563          	beq	s1,a4,204035ca <__adddf3+0x568>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403144:	ff8006b7          	lui	a3,0xff800
20403148:	16fd                	addi	a3,a3,-1
2040314a:	8efd                	and	a3,a3,a5
2040314c:	00155593          	srli	a1,a0,0x1
20403150:	8905                	andi	a0,a0,1
20403152:	01f69793          	slli	a5,a3,0x1f
20403156:	8d4d                	or	a0,a0,a1
20403158:	8d5d                	or	a0,a0,a5
2040315a:	0016d793          	srli	a5,a3,0x1
2040315e:	a215                	j	20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 51)
20403160:	fe058693          	addi	a3,a1,-32 # ffffe0 <__heap_size+0xfff7e0>
20403164:	02000893          	li	a7,32
20403168:	00d756b3          	srl	a3,a4,a3
2040316c:	4801                	li	a6,0
2040316e:	01158863          	beq	a1,a7,2040317e <__adddf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 58)
20403172:	04000813          	li	a6,64
20403176:	40b805b3          	sub	a1,a6,a1
2040317a:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 61)
2040317e:	00c86633          	or	a2,a6,a2
20403182:	00c03633          	snez	a2,a2
20403186:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 49)
20403188:	4701                	li	a4,0
2040318a:	bf71                	j	20403126 <__adddf3+0xc4>
2040318c:	8e59                	or	a2,a2,a4
2040318e:	00c03633          	snez	a2,a2
20403192:	bfdd                	j	20403188 <__adddf3+0x126>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 10)
20403194:	0a080b63          	beqz	a6,2040324a <__adddf3+0x1e8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 66)
20403198:	409885b3          	sub	a1,a7,s1
2040319c:	e48d                	bnez	s1,204031c6 <__adddf3+0x164>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 68)
2040319e:	00a7e6b3          	or	a3,a5,a0
204031a2:	40068b63          	beqz	a3,204035b8 <__adddf3+0x556>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 71)
204031a6:	fff58693          	addi	a3,a1,-1
204031aa:	e699                	bnez	a3,204031b8 <__adddf3+0x156>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
204031ac:	9532                	add	a0,a0,a2
204031ae:	97ba                	add	a5,a5,a4
204031b0:	00c53633          	sltu	a2,a0,a2
204031b4:	97b2                	add	a5,a5,a2
204031b6:	bf39                	j	204030d4 <__adddf3+0x72>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 81)
204031b8:	7ff00813          	li	a6,2047
204031bc:	01059d63          	bne	a1,a6,204031d6 <__adddf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204031c0:	87ba                	mv	a5,a4
204031c2:	8532                	mv	a0,a2
204031c4:	bf31                	j	204030e0 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 69)
204031c6:	7ff00693          	li	a3,2047
204031ca:	fed88be3          	beq	a7,a3,204031c0 <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 95)
204031ce:	008006b7          	lui	a3,0x800
204031d2:	8fd5                	or	a5,a5,a3
204031d4:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 104)
204031d6:	03800593          	li	a1,56
204031da:	06d5c463          	blt	a1,a3,20403242 <__adddf3+0x1e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 105)
204031de:	45fd                	li	a1,31
204031e0:	02d5cb63          	blt	a1,a3,20403216 <__adddf3+0x1b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 107)
204031e4:	02000813          	li	a6,32
204031e8:	40d80833          	sub	a6,a6,a3
204031ec:	00d55333          	srl	t1,a0,a3
204031f0:	010795b3          	sll	a1,a5,a6
204031f4:	01051533          	sll	a0,a0,a6
204031f8:	0065e5b3          	or	a1,a1,t1
204031fc:	00a03533          	snez	a0,a0
20403200:	8d4d                	or	a0,a0,a1
20403202:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 121)
20403206:	9532                	add	a0,a0,a2
20403208:	00e687b3          	add	a5,a3,a4
2040320c:	00c53633          	sltu	a2,a0,a2
20403210:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 121)
20403212:	84c6                	mv	s1,a7
20403214:	bf39                	j	20403132 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 108)
20403216:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
2040321a:	02000313          	li	t1,32
2040321e:	00b7d5b3          	srl	a1,a5,a1
20403222:	4801                	li	a6,0
20403224:	00668863          	beq	a3,t1,20403234 <__adddf3+0x1d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 115)
20403228:	04000813          	li	a6,64
2040322c:	40d806b3          	sub	a3,a6,a3
20403230:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 118)
20403234:	00a86533          	or	a0,a6,a0
20403238:	00a03533          	snez	a0,a0
2040323c:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 106)
2040323e:	4681                	li	a3,0
20403240:	b7d9                	j	20403206 <__adddf3+0x1a4>
20403242:	8d5d                	or	a0,a0,a5
20403244:	00a03533          	snez	a0,a0
20403248:	bfdd                	j	2040323e <__adddf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 67)
2040324a:	00148693          	addi	a3,s1,1
2040324e:	7fe6f593          	andi	a1,a3,2046
20403252:	e1bd                	bnez	a1,204032b8 <__adddf3+0x256>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 123)
20403254:	00a7e6b3          	or	a3,a5,a0
20403258:	e4a9                	bnez	s1,204032a2 <__adddf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 125)
2040325a:	36068363          	beqz	a3,204035c0 <__adddf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 128)
2040325e:	00c766b3          	or	a3,a4,a2
20403262:	c285                	beqz	a3,20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 134)
20403264:	962a                	add	a2,a2,a0
20403266:	97ba                	add	a5,a5,a4
20403268:	00a63533          	sltu	a0,a2,a0
2040326c:	97aa                	add	a5,a5,a0
2040326e:	00879713          	slli	a4,a5,0x8
20403272:	8532                	mv	a0,a2
20403274:	00075763          	bgez	a4,20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 136)
20403278:	ff800737          	lui	a4,0xff800
2040327c:	177d                	addi	a4,a4,-1
2040327e:	8ff9                	and	a5,a5,a4
20403280:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 417)
20403282:	00757713          	andi	a4,a0,7
20403286:	34070463          	beqz	a4,204035ce <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 37)
2040328a:	00f57713          	andi	a4,a0,15
2040328e:	4691                	li	a3,4
20403290:	32d70f63          	beq	a4,a3,204035ce <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 44)
20403294:	00450693          	addi	a3,a0,4
20403298:	00a6b533          	sltu	a0,a3,a0
2040329c:	97aa                	add	a5,a5,a0
2040329e:	8536                	mv	a0,a3
204032a0:	a63d                	j	204035ce <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 153)
204032a2:	de99                	beqz	a3,204031c0 <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 155)
204032a4:	8e59                	or	a2,a2,a4
204032a6:	e2060de3          	beqz	a2,204030e0 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204032aa:	4901                	li	s2,0
204032ac:	004007b7          	lui	a5,0x400
204032b0:	4501                	li	a0,0
204032b2:	7ff00493          	li	s1,2047
204032b6:	ae21                	j	204035ce <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 124)
204032b8:	7ff00593          	li	a1,2047
204032bc:	30b68563          	beq	a3,a1,204035c6 <__adddf3+0x564>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204032c0:	962a                	add	a2,a2,a0
204032c2:	973e                	add	a4,a4,a5
204032c4:	00a637b3          	sltu	a5,a2,a0
204032c8:	973e                	add	a4,a4,a5
204032ca:	01f71513          	slli	a0,a4,0x1f
204032ce:	8205                	srli	a2,a2,0x1
204032d0:	8d51                	or	a0,a0,a2
204032d2:	00175793          	srli	a5,a4,0x1
204032d6:	84b6                	mv	s1,a3
204032d8:	b76d                	j	20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 8)
204032da:	0d005663          	blez	a6,204033a6 <__adddf3+0x344>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 200)
204032de:	08089163          	bnez	a7,20403360 <__adddf3+0x2fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 202)
204032e2:	00c766b3          	or	a3,a4,a2
204032e6:	34068363          	beqz	a3,2040362c <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 205)
204032ea:	fff80593          	addi	a1,a6,-1
204032ee:	e991                	bnez	a1,20403302 <__adddf3+0x2a0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 214)
204032f0:	40c50633          	sub	a2,a0,a2
204032f4:	00c53533          	sltu	a0,a0,a2
204032f8:	8f99                	sub	a5,a5,a4
204032fa:	8f89                	sub	a5,a5,a0
204032fc:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 271)
204032fe:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20403300:	a0b1                	j	2040334c <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 215)
20403302:	7ff00693          	li	a3,2047
20403306:	dcd80de3          	beq	a6,a3,204030e0 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 238)
2040330a:	03800693          	li	a3,56
2040330e:	08b6c863          	blt	a3,a1,2040339e <__adddf3+0x33c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 239)
20403312:	46fd                	li	a3,31
20403314:	04b6cf63          	blt	a3,a1,20403372 <__adddf3+0x310>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 241)
20403318:	02000813          	li	a6,32
2040331c:	40b80833          	sub	a6,a6,a1
20403320:	010716b3          	sll	a3,a4,a6
20403324:	00b658b3          	srl	a7,a2,a1
20403328:	01061633          	sll	a2,a2,a6
2040332c:	0116e6b3          	or	a3,a3,a7
20403330:	00c03633          	snez	a2,a2
20403334:	8e55                	or	a2,a2,a3
20403336:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 255)
2040333a:	40c50633          	sub	a2,a0,a2
2040333e:	40e78733          	sub	a4,a5,a4
20403342:	00c537b3          	sltu	a5,a0,a2
20403346:	40f707b3          	sub	a5,a4,a5
2040334a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 313)
2040334c:	00879713          	slli	a4,a5,0x8
20403350:	f20759e3          	bgez	a4,20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 373)
20403354:	00800437          	lui	s0,0x800
20403358:	147d                	addi	s0,s0,-1
2040335a:	8c7d                	and	s0,s0,a5
2040335c:	89aa                	mv	s3,a0
2040335e:	a275                	j	2040350a <__adddf3+0x4a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 203)
20403360:	7ff00693          	li	a3,2047
20403364:	f0d48fe3          	beq	s1,a3,20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 229)
20403368:	008006b7          	lui	a3,0x800
2040336c:	8f55                	or	a4,a4,a3
2040336e:	85c2                	mv	a1,a6
20403370:	bf69                	j	2040330a <__adddf3+0x2a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 242)
20403372:	fe058693          	addi	a3,a1,-32
20403376:	02000893          	li	a7,32
2040337a:	00d756b3          	srl	a3,a4,a3
2040337e:	4801                	li	a6,0
20403380:	01158863          	beq	a1,a7,20403390 <__adddf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 249)
20403384:	04000813          	li	a6,64
20403388:	40b805b3          	sub	a1,a6,a1
2040338c:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 252)
20403390:	00c86633          	or	a2,a6,a2
20403394:	00c03633          	snez	a2,a2
20403398:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 240)
2040339a:	4701                	li	a4,0
2040339c:	bf79                	j	2040333a <__adddf3+0x2d8>
2040339e:	8e59                	or	a2,a2,a4
204033a0:	00c03633          	snez	a2,a2
204033a4:	bfdd                	j	2040339a <__adddf3+0x338>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 201)
204033a6:	0c080463          	beqz	a6,2040346e <__adddf3+0x40c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 257)
204033aa:	40988833          	sub	a6,a7,s1
204033ae:	e895                	bnez	s1,204033e2 <__adddf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 259)
204033b0:	00a7e5b3          	or	a1,a5,a0
204033b4:	26058e63          	beqz	a1,20403630 <__adddf3+0x5ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 262)
204033b8:	fff80593          	addi	a1,a6,-1
204033bc:	e991                	bnez	a1,204033d0 <__adddf3+0x36e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
204033be:	40a60533          	sub	a0,a2,a0
204033c2:	40f707b3          	sub	a5,a4,a5
204033c6:	00a63633          	sltu	a2,a2,a0
204033ca:	8f91                	sub	a5,a5,a2
204033cc:	8936                	mv	s2,a3
204033ce:	bf05                	j	204032fe <__adddf3+0x29c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 272)
204033d0:	7ff00313          	li	t1,2047
204033d4:	00681f63          	bne	a6,t1,204033f2 <__adddf3+0x390>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204033d8:	87ba                	mv	a5,a4
204033da:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204033dc:	7ff00493          	li	s1,2047
204033e0:	a07d                	j	2040348e <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 260)
204033e2:	7ff00593          	li	a1,2047
204033e6:	feb889e3          	beq	a7,a1,204033d8 <__adddf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 286)
204033ea:	008005b7          	lui	a1,0x800
204033ee:	8fcd                	or	a5,a5,a1
204033f0:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 295)
204033f2:	03800813          	li	a6,56
204033f6:	06b84863          	blt	a6,a1,20403466 <__adddf3+0x404>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 296)
204033fa:	487d                	li	a6,31
204033fc:	02b84e63          	blt	a6,a1,20403438 <__adddf3+0x3d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 298)
20403400:	02000313          	li	t1,32
20403404:	40b30333          	sub	t1,t1,a1
20403408:	00b55e33          	srl	t3,a0,a1
2040340c:	00679833          	sll	a6,a5,t1
20403410:	00651533          	sll	a0,a0,t1
20403414:	01c86833          	or	a6,a6,t3
20403418:	00a03533          	snez	a0,a0
2040341c:	00a86533          	or	a0,a6,a0
20403420:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 312)
20403424:	40a60533          	sub	a0,a2,a0
20403428:	40b707b3          	sub	a5,a4,a1
2040342c:	00a63633          	sltu	a2,a2,a0
20403430:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 312)
20403432:	84c6                	mv	s1,a7
20403434:	8936                	mv	s2,a3
20403436:	bf19                	j	2040334c <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 299)
20403438:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
2040343c:	02000e13          	li	t3,32
20403440:	0107d833          	srl	a6,a5,a6
20403444:	4301                	li	t1,0
20403446:	01c58863          	beq	a1,t3,20403456 <__adddf3+0x3f4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 306)
2040344a:	04000313          	li	t1,64
2040344e:	40b305b3          	sub	a1,t1,a1
20403452:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 309)
20403456:	00a36533          	or	a0,t1,a0
2040345a:	00a03533          	snez	a0,a0
2040345e:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 297)
20403462:	4581                	li	a1,0
20403464:	b7c1                	j	20403424 <__adddf3+0x3c2>
20403466:	8d5d                	or	a0,a0,a5
20403468:	00a03533          	snez	a0,a0
2040346c:	bfdd                	j	20403462 <__adddf3+0x400>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 258)
2040346e:	00148593          	addi	a1,s1,1
20403472:	7fe5f593          	andi	a1,a1,2046
20403476:	e5b5                	bnez	a1,204034e2 <__adddf3+0x480>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 314)
20403478:	00a7e833          	or	a6,a5,a0
2040347c:	00c765b3          	or	a1,a4,a2
20403480:	e4b1                	bnez	s1,204034cc <__adddf3+0x46a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 316)
20403482:	00081863          	bnez	a6,20403492 <__adddf3+0x430>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 318)
20403486:	1a058963          	beqz	a1,20403638 <__adddf3+0x5d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2040348a:	87ba                	mv	a5,a4
2040348c:	8532                	mv	a0,a2
2040348e:	8936                	mv	s2,a3
20403490:	bbcd                	j	20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 319)
20403492:	de0588e3          	beqz	a1,20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 326)
20403496:	40c50833          	sub	a6,a0,a2
2040349a:	40e785b3          	sub	a1,a5,a4
2040349e:	010538b3          	sltu	a7,a0,a6
204034a2:	411585b3          	sub	a1,a1,a7
204034a6:	00859413          	slli	s0,a1,0x8
204034aa:	00045a63          	bgez	s0,204034be <__adddf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 328)
204034ae:	40a60533          	sub	a0,a2,a0
204034b2:	40f707b3          	sub	a5,a4,a5
204034b6:	00a63633          	sltu	a2,a2,a0
204034ba:	8f91                	sub	a5,a5,a2
204034bc:	bfc9                	j	2040348e <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 329)
204034be:	00b86533          	or	a0,a6,a1
204034c2:	16050f63          	beqz	a0,20403640 <__adddf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204034c6:	87ae                	mv	a5,a1
204034c8:	8542                	mv	a0,a6
204034ca:	bb65                	j	20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 348)
204034cc:	00081863          	bnez	a6,204034dc <__adddf3+0x47a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 349)
204034d0:	16058a63          	beqz	a1,20403644 <__adddf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204034d4:	87ba                	mv	a5,a4
204034d6:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204034d8:	8936                	mv	s2,a3
204034da:	b119                	j	204030e0 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 350)
204034dc:	c00582e3          	beqz	a1,204030e0 <__adddf3+0x7e>
204034e0:	b3e9                	j	204032aa <__adddf3+0x248>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 315)
204034e2:	40c509b3          	sub	s3,a0,a2
204034e6:	013535b3          	sltu	a1,a0,s3
204034ea:	40e78433          	sub	s0,a5,a4
204034ee:	8c0d                	sub	s0,s0,a1
204034f0:	00841593          	slli	a1,s0,0x8
204034f4:	0605d763          	bgez	a1,20403562 <__adddf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 366)
204034f8:	40a609b3          	sub	s3,a2,a0
204034fc:	40f707b3          	sub	a5,a4,a5
20403500:	01363633          	sltu	a2,a2,s3
20403504:	40c78433          	sub	s0,a5,a2
20403508:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 375)
2040350a:	c035                	beqz	s0,2040356e <__adddf3+0x50c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 378)
2040350c:	8522                	mv	a0,s0
2040350e:	3da010ef          	jal	ra,204048e8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 389)
20403512:	ff850713          	addi	a4,a0,-8
20403516:	47fd                	li	a5,31
20403518:	06e7c163          	blt	a5,a4,2040357a <__adddf3+0x518>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 390)
2040351c:	02000793          	li	a5,32
20403520:	8f99                	sub	a5,a5,a4
20403522:	00e41433          	sll	s0,s0,a4
20403526:	00f9d7b3          	srl	a5,s3,a5
2040352a:	8c5d                	or	s0,s0,a5
2040352c:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 399)
20403530:	06974e63          	blt	a4,s1,204035ac <__adddf3+0x54a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 400)
20403534:	8f05                	sub	a4,a4,s1
20403536:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7fc305>
2040353a:	46fd                	li	a3,31
2040353c:	04f6c563          	blt	a3,a5,20403586 <__adddf3+0x524>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 402)
20403540:	02000713          	li	a4,32
20403544:	8f1d                	sub	a4,a4,a5
20403546:	00f55633          	srl	a2,a0,a5
2040354a:	00e416b3          	sll	a3,s0,a4
2040354e:	00e51533          	sll	a0,a0,a4
20403552:	8ed1                	or	a3,a3,a2
20403554:	00a03533          	snez	a0,a0
20403558:	8d55                	or	a0,a0,a3
2040355a:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
2040355e:	4481                	li	s1,0
20403560:	b30d                	j	20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 367)
20403562:	0089e533          	or	a0,s3,s0
20403566:	f155                	bnez	a0,2040350a <__adddf3+0x4a8>
20403568:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
2040356a:	4481                	li	s1,0
2040356c:	a8c1                	j	2040363c <__adddf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 382)
2040356e:	854e                	mv	a0,s3
20403570:	378010ef          	jal	ra,204048e8 <__clzsi2>
20403574:	02050513          	addi	a0,a0,32
20403578:	bf69                	j	20403512 <__adddf3+0x4b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 391)
2040357a:	fd850413          	addi	s0,a0,-40
2040357e:	00899433          	sll	s0,s3,s0
20403582:	4501                	li	a0,0
20403584:	b775                	j	20403530 <__adddf3+0x4ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 403)
20403586:	1705                	addi	a4,a4,-31
20403588:	02000613          	li	a2,32
2040358c:	00e45733          	srl	a4,s0,a4
20403590:	4681                	li	a3,0
20403592:	00c78763          	beq	a5,a2,204035a0 <__adddf3+0x53e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 411)
20403596:	04000693          	li	a3,64
2040359a:	8e9d                	sub	a3,a3,a5
2040359c:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
204035a0:	8d55                	or	a0,a0,a3
204035a2:	00a03533          	snez	a0,a0
204035a6:	8d59                	or	a0,a0,a4
204035a8:	4781                	li	a5,0
204035aa:	bf55                	j	2040355e <__adddf3+0x4fc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 401)
204035ac:	ff8007b7          	lui	a5,0xff800
204035b0:	17fd                	addi	a5,a5,-1
204035b2:	8c99                	sub	s1,s1,a4
204035b4:	8fe1                	and	a5,a5,s0
204035b6:	b1f1                	j	20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204035b8:	87ba                	mv	a5,a4
204035ba:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204035bc:	84ae                	mv	s1,a1
204035be:	b1d1                	j	20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204035c0:	87ba                	mv	a5,a4
204035c2:	8532                	mv	a0,a2
204035c4:	b97d                	j	20403282 <__adddf3+0x220>
204035c6:	7ff00493          	li	s1,2047
204035ca:	4781                	li	a5,0
204035cc:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 47)
204035ce:	00879713          	slli	a4,a5,0x8
204035d2:	00075b63          	bgez	a4,204035e8 <__adddf3+0x586>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 63)
204035d6:	0485                	addi	s1,s1,1
204035d8:	7ff00713          	li	a4,2047
204035dc:	06e48963          	beq	s1,a4,2040364e <__adddf3+0x5ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
204035e0:	ff800737          	lui	a4,0xff800
204035e4:	177d                	addi	a4,a4,-1
204035e6:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 79)
204035e8:	01d79713          	slli	a4,a5,0x1d
204035ec:	810d                	srli	a0,a0,0x3
204035ee:	8d59                	or	a0,a0,a4
204035f0:	7ff00713          	li	a4,2047
204035f4:	838d                	srli	a5,a5,0x3
204035f6:	00e49963          	bne	s1,a4,20403608 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 80)
204035fa:	8d5d                	or	a0,a0,a5
204035fc:	4781                	li	a5,0
204035fe:	c509                	beqz	a0,20403608 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20403600:	000807b7          	lui	a5,0x80
20403604:	4501                	li	a0,0
20403606:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20403608:	7ff4f713          	andi	a4,s1,2047
2040360c:	07b2                	slli	a5,a5,0xc
2040360e:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20403610:	40f2                	lw	ra,28(sp)
20403612:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20403614:	83b1                	srli	a5,a5,0xc
20403616:	01f91593          	slli	a1,s2,0x1f
2040361a:	8fd9                	or	a5,a5,a4
2040361c:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20403620:	44d2                	lw	s1,20(sp)
20403622:	4942                	lw	s2,16(sp)
20403624:	49b2                	lw	s3,12(sp)
20403626:	85ba                	mv	a1,a4
20403628:	6105                	addi	sp,sp,32
2040362a:	8082                	ret
2040362c:	84c2                	mv	s1,a6
2040362e:	b991                	j	20403282 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403630:	87ba                	mv	a5,a4
20403632:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403634:	84c2                	mv	s1,a6
20403636:	bda1                	j	2040348e <__adddf3+0x42c>
20403638:	4781                	li	a5,0
2040363a:	4501                	li	a0,0
2040363c:	4901                	li	s2,0
2040363e:	bf41                	j	204035ce <__adddf3+0x56c>
20403640:	4781                	li	a5,0
20403642:	bfed                	j	2040363c <__adddf3+0x5da>
20403644:	4501                	li	a0,0
20403646:	4901                	li	s2,0
20403648:	004007b7          	lui	a5,0x400
2040364c:	b19d                	j	204032b2 <__adddf3+0x250>
2040364e:	4781                	li	a5,0
20403650:	4501                	li	a0,0
20403652:	bf59                	j	204035e8 <__adddf3+0x586>

20403654 <__divdf3>:
__divdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403654:	7179                	addi	sp,sp,-48
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403656:	0145d813          	srli	a6,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
2040365a:	d226                	sw	s1,36(sp)
2040365c:	ce4e                	sw	s3,28(sp)
2040365e:	cc52                	sw	s4,24(sp)
20403660:	c85a                	sw	s6,16(sp)
20403662:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403664:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403668:	d606                	sw	ra,44(sp)
2040366a:	d422                	sw	s0,40(sp)
2040366c:	d04a                	sw	s2,32(sp)
2040366e:	ca56                	sw	s5,20(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403670:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403674:	8b2a                	mv	s6,a0
20403676:	8bb2                	mv	s7,a2
20403678:	8a36                	mv	s4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
2040367a:	80b1                	srli	s1,s1,0xc
2040367c:	01f5d993          	srli	s3,a1,0x1f
20403680:	08080463          	beqz	a6,20403708 <__divdf3+0xb4>
20403684:	7ff00793          	li	a5,2047
20403688:	0cf80a63          	beq	a6,a5,2040375c <__divdf3+0x108>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 1)
2040368c:	01d55a93          	srli	s5,a0,0x1d
20403690:	048e                	slli	s1,s1,0x3
20403692:	009ae4b3          	or	s1,s5,s1
20403696:	00800ab7          	lui	s5,0x800
2040369a:	0154eab3          	or	s5,s1,s5
2040369e:	00351413          	slli	s0,a0,0x3
204036a2:	c0180913          	addi	s2,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
204036a6:	4b01                	li	s6,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
204036a8:	014a5513          	srli	a0,s4,0x14
204036ac:	00ca1493          	slli	s1,s4,0xc
204036b0:	7ff57813          	andi	a6,a0,2047
204036b4:	80b1                	srli	s1,s1,0xc
204036b6:	01fa5a13          	srli	s4,s4,0x1f
204036ba:	0c080463          	beqz	a6,20403782 <__divdf3+0x12e>
204036be:	7ff00793          	li	a5,2047
204036c2:	10f80963          	beq	a6,a5,204037d4 <__divdf3+0x180>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 1)
204036c6:	00349513          	slli	a0,s1,0x3
204036ca:	01dbd793          	srli	a5,s7,0x1d
204036ce:	8d5d                	or	a0,a0,a5
204036d0:	008004b7          	lui	s1,0x800
204036d4:	8cc9                	or	s1,s1,a0
204036d6:	003b9f13          	slli	t5,s7,0x3
204036da:	c0180513          	addi	a0,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
204036de:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
204036e0:	002b1713          	slli	a4,s6,0x2
204036e4:	8f5d                	or	a4,a4,a5
204036e6:	177d                	addi	a4,a4,-1
204036e8:	46b9                	li	a3,14
204036ea:	0149c633          	xor	a2,s3,s4
204036ee:	40a90833          	sub	a6,s2,a0
204036f2:	10e6e363          	bltu	a3,a4,204037f8 <__divdf3+0x1a4>
204036f6:	00005697          	auipc	a3,0x5
204036fa:	eca68693          	addi	a3,a3,-310 # 204085c0 <pow10.2193+0x50>
204036fe:	070a                	slli	a4,a4,0x2
20403700:	9736                	add	a4,a4,a3
20403702:	4318                	lw	a4,0(a4)
20403704:	9736                	add	a4,a4,a3
20403706:	8702                	jr	a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 2)
20403708:	00a4eab3          	or	s5,s1,a0
2040370c:	060a8263          	beqz	s5,20403770 <__divdf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 12)
20403710:	c89d                	beqz	s1,20403746 <__divdf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 16)
20403712:	8526                	mv	a0,s1
20403714:	1d4010ef          	jal	ra,204048e8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 27)
20403718:	ff550793          	addi	a5,a0,-11
2040371c:	4771                	li	a4,28
2040371e:	02f74963          	blt	a4,a5,20403750 <__divdf3+0xfc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 28)
20403722:	4af5                	li	s5,29
20403724:	ff850413          	addi	s0,a0,-8
20403728:	40fa8ab3          	sub	s5,s5,a5
2040372c:	008494b3          	sll	s1,s1,s0
20403730:	015b5ab3          	srl	s5,s6,s5
20403734:	009aeab3          	or	s5,s5,s1
20403738:	008b1433          	sll	s0,s6,s0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
2040373c:	c0d00813          	li	a6,-1011
20403740:	40a80933          	sub	s2,a6,a0
20403744:	b78d                	j	204036a6 <__divdf3+0x52>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 20)
20403746:	1a2010ef          	jal	ra,204048e8 <__clzsi2>
2040374a:	02050513          	addi	a0,a0,32
2040374e:	b7e9                	j	20403718 <__divdf3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 29)
20403750:	fd850493          	addi	s1,a0,-40
20403754:	009b1ab3          	sll	s5,s6,s1
20403758:	4401                	li	s0,0
2040375a:	b7cd                	j	2040373c <__divdf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 3)
2040375c:	00a4eab3          	or	s5,s1,a0
20403760:	000a8c63          	beqz	s5,20403778 <__divdf3+0x124>
20403764:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403766:	8aa6                	mv	s5,s1
20403768:	7ff00913          	li	s2,2047
2040376c:	4b0d                	li	s6,3
2040376e:	bf2d                	j	204036a8 <__divdf3+0x54>
20403770:	4401                	li	s0,0
20403772:	4901                	li	s2,0
20403774:	4b05                	li	s6,1
20403776:	bf0d                	j	204036a8 <__divdf3+0x54>
20403778:	4401                	li	s0,0
2040377a:	7ff00913          	li	s2,2047
2040377e:	4b09                	li	s6,2
20403780:	b725                	j	204036a8 <__divdf3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 2)
20403782:	0174ef33          	or	t5,s1,s7
20403786:	060f0063          	beqz	t5,204037e6 <__divdf3+0x192>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 12)
2040378a:	c88d                	beqz	s1,204037bc <__divdf3+0x168>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 16)
2040378c:	8526                	mv	a0,s1
2040378e:	15a010ef          	jal	ra,204048e8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 27)
20403792:	ff550793          	addi	a5,a0,-11
20403796:	4771                	li	a4,28
20403798:	02f74863          	blt	a4,a5,204037c8 <__divdf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 28)
2040379c:	4775                	li	a4,29
2040379e:	ff850f13          	addi	t5,a0,-8
204037a2:	8f1d                	sub	a4,a4,a5
204037a4:	01e494b3          	sll	s1,s1,t5
204037a8:	00ebd733          	srl	a4,s7,a4
204037ac:	8cd9                	or	s1,s1,a4
204037ae:	01eb9f33          	sll	t5,s7,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
204037b2:	c0d00613          	li	a2,-1011
204037b6:	40a60533          	sub	a0,a2,a0
204037ba:	b715                	j	204036de <__divdf3+0x8a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 20)
204037bc:	855e                	mv	a0,s7
204037be:	12a010ef          	jal	ra,204048e8 <__clzsi2>
204037c2:	02050513          	addi	a0,a0,32
204037c6:	b7f1                	j	20403792 <__divdf3+0x13e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 29)
204037c8:	fd850493          	addi	s1,a0,-40
204037cc:	009b94b3          	sll	s1,s7,s1
204037d0:	4f01                	li	t5,0
204037d2:	b7c5                	j	204037b2 <__divdf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 3)
204037d4:	0174ef33          	or	t5,s1,s7
204037d8:	000f0b63          	beqz	t5,204037ee <__divdf3+0x19a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
204037dc:	8f5e                	mv	t5,s7
204037de:	7ff00513          	li	a0,2047
204037e2:	478d                	li	a5,3
204037e4:	bdf5                	j	204036e0 <__divdf3+0x8c>
204037e6:	4481                	li	s1,0
204037e8:	4501                	li	a0,0
204037ea:	4785                	li	a5,1
204037ec:	bdd5                	j	204036e0 <__divdf3+0x8c>
204037ee:	4481                	li	s1,0
204037f0:	7ff00513          	li	a0,2047
204037f4:	4789                	li	a5,2
204037f6:	b5ed                	j	204036e0 <__divdf3+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 2)
204037f8:	0154e663          	bltu	s1,s5,20403804 <__divdf3+0x1b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 11)
204037fc:	2a9a9363          	bne	s5,s1,20403aa2 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 12)
20403800:	2be46163          	bltu	s0,t5,20403aa2 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 14)
20403804:	01fa9693          	slli	a3,s5,0x1f
20403808:	00145713          	srli	a4,s0,0x1
2040380c:	01f41793          	slli	a5,s0,0x1f
20403810:	001ada93          	srli	s5,s5,0x1
20403814:	00e6e433          	or	s0,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 19)
20403818:	00849513          	slli	a0,s1,0x8
2040381c:	018f5493          	srli	s1,t5,0x18
20403820:	8d45                	or	a0,a0,s1
20403822:	01055e13          	srli	t3,a0,0x10
20403826:	03cad8b3          	divu	a7,s5,t3
2040382a:	01051313          	slli	t1,a0,0x10
2040382e:	01035313          	srli	t1,t1,0x10
20403832:	01045713          	srli	a4,s0,0x10
20403836:	008f1593          	slli	a1,t5,0x8
2040383a:	03caf4b3          	remu	s1,s5,t3
2040383e:	8fc6                	mv	t6,a7
20403840:	031306b3          	mul	a3,t1,a7
20403844:	01049a93          	slli	s5,s1,0x10
20403848:	01576733          	or	a4,a4,s5
2040384c:	00d77c63          	bgeu	a4,a3,20403864 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 22)
20403850:	972a                	add	a4,a4,a0
20403852:	fff88f93          	addi	t6,a7,-1
20403856:	00a76763          	bltu	a4,a0,20403864 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 24)
2040385a:	00d77563          	bgeu	a4,a3,20403864 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 26)
2040385e:	ffe88f93          	addi	t6,a7,-2
20403862:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 28)
20403864:	8f15                	sub	a4,a4,a3
20403866:	03c75eb3          	divu	t4,a4,t3
2040386a:	0442                	slli	s0,s0,0x10
2040386c:	8041                	srli	s0,s0,0x10
2040386e:	03c77733          	remu	a4,a4,t3
20403872:	86f6                	mv	a3,t4
20403874:	03d308b3          	mul	a7,t1,t4
20403878:	0742                	slli	a4,a4,0x10
2040387a:	8f41                	or	a4,a4,s0
2040387c:	01177c63          	bgeu	a4,a7,20403894 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 29)
20403880:	972a                	add	a4,a4,a0
20403882:	fffe8693          	addi	a3,t4,-1
20403886:	00a76763          	bltu	a4,a0,20403894 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 31)
2040388a:	01177563          	bgeu	a4,a7,20403894 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 33)
2040388e:	ffee8693          	addi	a3,t4,-2
20403892:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 35)
20403894:	0fc2                	slli	t6,t6,0x10
20403896:	00dfefb3          	or	t6,t6,a3
2040389a:	66c1                	lui	a3,0x10
2040389c:	41170433          	sub	s0,a4,a7
204038a0:	fff68893          	addi	a7,a3,-1 # ffff <__heap_size+0xf7ff>
204038a4:	010fdf13          	srli	t5,t6,0x10
204038a8:	011ff733          	and	a4,t6,a7
204038ac:	0105de93          	srli	t4,a1,0x10
204038b0:	0115f8b3          	and	a7,a1,a7
204038b4:	031703b3          	mul	t2,a4,a7
204038b8:	031f04b3          	mul	s1,t5,a7
204038bc:	02ee8733          	mul	a4,t4,a4
204038c0:	03df02b3          	mul	t0,t5,t4
204038c4:	00970f33          	add	t5,a4,s1
204038c8:	0103d713          	srli	a4,t2,0x10
204038cc:	977a                	add	a4,a4,t5
204038ce:	00977363          	bgeu	a4,s1,204038d4 <__divdf3+0x280>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 36)
204038d2:	92b6                	add	t0,t0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 38)
204038d4:	01075f13          	srli	t5,a4,0x10
204038d8:	9f16                	add	t5,t5,t0
204038da:	62c1                	lui	t0,0x10
204038dc:	12fd                	addi	t0,t0,-1
204038de:	005776b3          	and	a3,a4,t0
204038e2:	06c2                	slli	a3,a3,0x10
204038e4:	0053f3b3          	and	t2,t2,t0
204038e8:	969e                	add	a3,a3,t2
204038ea:	01e46763          	bltu	s0,t5,204038f8 <__divdf3+0x2a4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 40)
204038ee:	84fe                	mv	s1,t6
204038f0:	03e41e63          	bne	s0,t5,2040392c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 41)
204038f4:	02d7fc63          	bgeu	a5,a3,2040392c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 43)
204038f8:	97ae                	add	a5,a5,a1
204038fa:	00b7b733          	sltu	a4,a5,a1
204038fe:	972a                	add	a4,a4,a0
20403900:	943a                	add	s0,s0,a4
20403902:	ffff8493          	addi	s1,t6,-1
20403906:	00856663          	bltu	a0,s0,20403912 <__divdf3+0x2be>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 46)
2040390a:	02851163          	bne	a0,s0,2040392c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 47)
2040390e:	00b7ef63          	bltu	a5,a1,2040392c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 49)
20403912:	01e46663          	bltu	s0,t5,2040391e <__divdf3+0x2ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 52)
20403916:	008f1b63          	bne	t5,s0,2040392c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 53)
2040391a:	00d7f963          	bgeu	a5,a3,2040392c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 55)
2040391e:	97ae                	add	a5,a5,a1
20403920:	00b7b733          	sltu	a4,a5,a1
20403924:	972a                	add	a4,a4,a0
20403926:	ffef8493          	addi	s1,t6,-2
2040392a:	943a                	add	s0,s0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 57)
2040392c:	40d786b3          	sub	a3,a5,a3
20403930:	41e40433          	sub	s0,s0,t5
20403934:	00d7b7b3          	sltu	a5,a5,a3
20403938:	8c1d                	sub	s0,s0,a5
2040393a:	5f7d                	li	t5,-1
2040393c:	0e850563          	beq	a0,s0,20403a26 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 59)
20403940:	03c45f33          	divu	t5,s0,t3
20403944:	0106d713          	srli	a4,a3,0x10
20403948:	03c47433          	remu	s0,s0,t3
2040394c:	03e307b3          	mul	a5,t1,t5
20403950:	0442                	slli	s0,s0,0x10
20403952:	8c59                	or	s0,s0,a4
20403954:	877a                	mv	a4,t5
20403956:	00f47c63          	bgeu	s0,a5,2040396e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 61)
2040395a:	942a                	add	s0,s0,a0
2040395c:	ffff0713          	addi	a4,t5,-1
20403960:	00a46763          	bltu	s0,a0,2040396e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 63)
20403964:	00f47563          	bgeu	s0,a5,2040396e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 65)
20403968:	ffef0713          	addi	a4,t5,-2
2040396c:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 67)
2040396e:	8c1d                	sub	s0,s0,a5
20403970:	03c45f33          	divu	t5,s0,t3
20403974:	06c2                	slli	a3,a3,0x10
20403976:	82c1                	srli	a3,a3,0x10
20403978:	03c47433          	remu	s0,s0,t3
2040397c:	87fa                	mv	a5,t5
2040397e:	03e30333          	mul	t1,t1,t5
20403982:	0442                	slli	s0,s0,0x10
20403984:	8c55                	or	s0,s0,a3
20403986:	00647c63          	bgeu	s0,t1,2040399e <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 68)
2040398a:	942a                	add	s0,s0,a0
2040398c:	ffff0793          	addi	a5,t5,-1
20403990:	00a46763          	bltu	s0,a0,2040399e <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 70)
20403994:	00647563          	bgeu	s0,t1,2040399e <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 72)
20403998:	ffef0793          	addi	a5,t5,-2
2040399c:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 74)
2040399e:	0742                	slli	a4,a4,0x10
204039a0:	8f5d                	or	a4,a4,a5
204039a2:	01071793          	slli	a5,a4,0x10
204039a6:	83c1                	srli	a5,a5,0x10
204039a8:	40640433          	sub	s0,s0,t1
204039ac:	01075313          	srli	t1,a4,0x10
204039b0:	03178e33          	mul	t3,a5,a7
204039b4:	031308b3          	mul	a7,t1,a7
204039b8:	026e8333          	mul	t1,t4,t1
204039bc:	02fe8eb3          	mul	t4,t4,a5
204039c0:	010e5793          	srli	a5,t3,0x10
204039c4:	9ec6                	add	t4,t4,a7
204039c6:	97f6                	add	a5,a5,t4
204039c8:	0117f463          	bgeu	a5,a7,204039d0 <__divdf3+0x37c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 75)
204039cc:	66c1                	lui	a3,0x10
204039ce:	9336                	add	t1,t1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 77)
204039d0:	0107d893          	srli	a7,a5,0x10
204039d4:	989a                	add	a7,a7,t1
204039d6:	6341                	lui	t1,0x10
204039d8:	137d                	addi	t1,t1,-1
204039da:	0067f6b3          	and	a3,a5,t1
204039de:	06c2                	slli	a3,a3,0x10
204039e0:	006e7e33          	and	t3,t3,t1
204039e4:	96f2                	add	a3,a3,t3
204039e6:	01146663          	bltu	s0,a7,204039f2 <__divdf3+0x39e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 79)
204039ea:	19141e63          	bne	s0,a7,20403b86 <__divdf3+0x532>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 80)
204039ee:	8f3a                	mv	t5,a4
204039f0:	ca9d                	beqz	a3,20403a26 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 82)
204039f2:	942a                	add	s0,s0,a0
204039f4:	fff70f13          	addi	t5,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7fc303>
204039f8:	02a46163          	bltu	s0,a0,20403a1a <__divdf3+0x3c6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 88)
204039fc:	01146663          	bltu	s0,a7,20403a08 <__divdf3+0x3b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 91)
20403a00:	19141263          	bne	s0,a7,20403b84 <__divdf3+0x530>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 92)
20403a04:	00d5fd63          	bgeu	a1,a3,20403a1e <__divdf3+0x3ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 94)
20403a08:	00159793          	slli	a5,a1,0x1
20403a0c:	00b7b5b3          	sltu	a1,a5,a1
20403a10:	952e                	add	a0,a0,a1
20403a12:	ffe70f13          	addi	t5,a4,-2
20403a16:	942a                	add	s0,s0,a0
20403a18:	85be                	mv	a1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 96)
20403a1a:	01141463          	bne	s0,a7,20403a22 <__divdf3+0x3ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 98)
20403a1e:	00b68463          	beq	a3,a1,20403a26 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 99)
20403a22:	001f6f13          	ori	t5,t5,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 2)
20403a26:	3ff80713          	addi	a4,a6,1023
20403a2a:	0ae05763          	blez	a4,20403ad8 <__divdf3+0x484>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 6)
20403a2e:	007f7793          	andi	a5,t5,7
20403a32:	cf81                	beqz	a5,20403a4a <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 8)
20403a34:	00ff7793          	andi	a5,t5,15
20403a38:	4691                	li	a3,4
20403a3a:	00d78863          	beq	a5,a3,20403a4a <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 10)
20403a3e:	004f0693          	addi	a3,t5,4
20403a42:	01e6bf33          	sltu	t5,a3,t5
20403a46:	94fa                	add	s1,s1,t5
20403a48:	8f36                	mv	t5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 9)
20403a4a:	00749793          	slli	a5,s1,0x7
20403a4e:	0007d863          	bgez	a5,20403a5e <__divdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 24)
20403a52:	ff0007b7          	lui	a5,0xff000
20403a56:	17fd                	addi	a5,a5,-1
20403a58:	8cfd                	and	s1,s1,a5
20403a5a:	40080713          	addi	a4,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 26)
20403a5e:	7fe00793          	li	a5,2046
20403a62:	10e7c863          	blt	a5,a4,20403b72 <__divdf3+0x51e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20403a66:	003f5f13          	srli	t5,t5,0x3
20403a6a:	01d49793          	slli	a5,s1,0x1d
20403a6e:	01e7e7b3          	or	a5,a5,t5
20403a72:	0034d513          	srli	a0,s1,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20403a76:	0532                	slli	a0,a0,0xc
20403a78:	7ff77713          	andi	a4,a4,2047
20403a7c:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
20403a7e:	50b2                	lw	ra,44(sp)
20403a80:	5422                	lw	s0,40(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20403a82:	8131                	srli	a0,a0,0xc
20403a84:	8d59                	or	a0,a0,a4
20403a86:	067e                	slli	a2,a2,0x1f
20403a88:	00c56733          	or	a4,a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
20403a8c:	5492                	lw	s1,36(sp)
20403a8e:	5902                	lw	s2,32(sp)
20403a90:	49f2                	lw	s3,28(sp)
20403a92:	4a62                	lw	s4,24(sp)
20403a94:	4ad2                	lw	s5,20(sp)
20403a96:	4b42                	lw	s6,16(sp)
20403a98:	4bb2                	lw	s7,12(sp)
20403a9a:	853e                	mv	a0,a5
20403a9c:	85ba                	mv	a1,a4
20403a9e:	6145                	addi	sp,sp,48
20403aa0:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 15)
20403aa2:	187d                	addi	a6,a6,-1
20403aa4:	4781                	li	a5,0
20403aa6:	bb8d                	j	20403818 <__divdf3+0x1c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 8)
20403aa8:	864e                	mv	a2,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 8)
20403aaa:	84d6                	mv	s1,s5
20403aac:	8f22                	mv	t5,s0
20403aae:	87da                	mv	a5,s6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20403ab0:	4709                	li	a4,2
20403ab2:	0ce78063          	beq	a5,a4,20403b72 <__divdf3+0x51e>
20403ab6:	470d                	li	a4,3
20403ab8:	0ae78663          	beq	a5,a4,20403b64 <__divdf3+0x510>
20403abc:	4705                	li	a4,1
20403abe:	f6e794e3          	bne	a5,a4,20403a26 <__divdf3+0x3d2>
20403ac2:	4501                	li	a0,0
20403ac4:	4781                	li	a5,0
20403ac6:	a885                	j	20403b36 <__divdf3+0x4e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 5)
20403ac8:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 5)
20403aca:	b7dd                	j	20403ab0 <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20403acc:	000804b7          	lui	s1,0x80
20403ad0:	4f01                	li	t5,0
20403ad2:	4601                	li	a2,0
20403ad4:	478d                	li	a5,3
20403ad6:	bfe9                	j	20403ab0 <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 59)
20403ad8:	4505                	li	a0,1
20403ada:	8d19                	sub	a0,a0,a4
20403adc:	03800793          	li	a5,56
20403ae0:	fea7c1e3          	blt	a5,a0,20403ac2 <__divdf3+0x46e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 60)
20403ae4:	47fd                	li	a5,31
20403ae6:	04a7ca63          	blt	a5,a0,20403b3a <__divdf3+0x4e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 62)
20403aea:	41e80813          	addi	a6,a6,1054
20403aee:	010497b3          	sll	a5,s1,a6
20403af2:	00af5733          	srl	a4,t5,a0
20403af6:	010f1833          	sll	a6,t5,a6
20403afa:	8fd9                	or	a5,a5,a4
20403afc:	01003833          	snez	a6,a6
20403b00:	0107e7b3          	or	a5,a5,a6
20403b04:	00a4d533          	srl	a0,s1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 75)
20403b08:	0077f713          	andi	a4,a5,7
20403b0c:	cf01                	beqz	a4,20403b24 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 76)
20403b0e:	00f7f713          	andi	a4,a5,15
20403b12:	4691                	li	a3,4
20403b14:	00d70863          	beq	a4,a3,20403b24 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 78)
20403b18:	00478713          	addi	a4,a5,4 # ff000004 <metal_segment_heap_target_end+0x7effc308>
20403b1c:	00f737b3          	sltu	a5,a4,a5
20403b20:	953e                	add	a0,a0,a5
20403b22:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 77)
20403b24:	00851713          	slli	a4,a0,0x8
20403b28:	04074a63          	bltz	a4,20403b7c <__divdf3+0x528>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 93)
20403b2c:	01d51713          	slli	a4,a0,0x1d
20403b30:	838d                	srli	a5,a5,0x3
20403b32:	8fd9                	or	a5,a5,a4
20403b34:	810d                	srli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20403b36:	4701                	li	a4,0
20403b38:	bf3d                	j	20403a76 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 63)
20403b3a:	5785                	li	a5,-31
20403b3c:	8f99                	sub	a5,a5,a4
20403b3e:	02000693          	li	a3,32
20403b42:	00f4d7b3          	srl	a5,s1,a5
20403b46:	4701                	li	a4,0
20403b48:	00d50663          	beq	a0,a3,20403b54 <__divdf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 71)
20403b4c:	43e80813          	addi	a6,a6,1086
20403b50:	01049733          	sll	a4,s1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 74)
20403b54:	01e76f33          	or	t5,a4,t5
20403b58:	01e03f33          	snez	t5,t5
20403b5c:	01e7e7b3          	or	a5,a5,t5
20403b60:	4501                	li	a0,0
20403b62:	b75d                	j	20403b08 <__divdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20403b64:	00080537          	lui	a0,0x80
20403b68:	4781                	li	a5,0
20403b6a:	7ff00713          	li	a4,2047
20403b6e:	4601                	li	a2,0
20403b70:	b719                	j	20403a76 <__divdf3+0x422>
20403b72:	4501                	li	a0,0
20403b74:	4781                	li	a5,0
20403b76:	7ff00713          	li	a4,2047
20403b7a:	bdf5                	j	20403a76 <__divdf3+0x422>
20403b7c:	4501                	li	a0,0
20403b7e:	4781                	li	a5,0
20403b80:	4705                	li	a4,1
20403b82:	bdd5                	j	20403a76 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20403b84:	877a                	mv	a4,t5
20403b86:	8f3a                	mv	t5,a4
20403b88:	bd69                	j	20403a22 <__divdf3+0x3ce>

20403b8a <__eqdf2>:
__eqdf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
20403b8a:	0145d713          	srli	a4,a1,0x14
20403b8e:	001007b7          	lui	a5,0x100
20403b92:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
20403b94:	0146d813          	srli	a6,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:36
20403b98:	832a                	mv	t1,a0
20403b9a:	8eaa                	mv	t4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
20403b9c:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20403ba0:	7ff00513          	li	a0,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
20403ba4:	00b7f8b3          	and	a7,a5,a1
20403ba8:	8f32                	mv	t5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
20403baa:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
20403bac:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
20403bae:	7ff87813          	andi	a6,a6,2047
20403bb2:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20403bb4:	00a71a63          	bne	a4,a0,20403bc8 <__eqdf2+0x3e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 18)
20403bb8:	0068ee33          	or	t3,a7,t1
20403bbc:	4505                	li	a0,1
20403bbe:	000e1463          	bnez	t3,20403bc6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20403bc2:	00e80563          	beq	a6,a4,20403bcc <__eqdf2+0x42>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:49
20403bc6:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 21)
20403bc8:	00a81563          	bne	a6,a0,20403bd2 <__eqdf2+0x48>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 22)
20403bcc:	8e5d                	or	a2,a2,a5
20403bce:	4505                	li	a0,1
20403bd0:	fa7d                	bnez	a2,20403bc6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 73)
20403bd2:	4505                	li	a0,1
20403bd4:	ff0719e3          	bne	a4,a6,20403bc6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 75)
20403bd8:	fef897e3          	bne	a7,a5,20403bc6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 77)
20403bdc:	ffee95e3          	bne	t4,t5,20403bc6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 79)
20403be0:	00d58863          	beq	a1,a3,20403bf0 <__eqdf2+0x66>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 80)
20403be4:	f36d                	bnez	a4,20403bc6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 83)
20403be6:	0068e533          	or	a0,a7,t1
20403bea:	00a03533          	snez	a0,a0
20403bee:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20403bf0:	4501                	li	a0,0
20403bf2:	8082                	ret

20403bf4 <__gedf2>:
__gedf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20403bf4:	0145d813          	srli	a6,a1,0x14
20403bf8:	001007b7          	lui	a5,0x100
20403bfc:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
20403bfe:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20403c02:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20403c06:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20403c0a:	00b7f8b3          	and	a7,a5,a1
20403c0e:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
20403c10:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20403c12:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
20403c14:	8e32                	mv	t3,a2
20403c16:	7ff77713          	andi	a4,a4,2047
20403c1a:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20403c1c:	01d81863          	bne	a6,t4,20403c2c <__gedf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 18)
20403c20:	00a8eeb3          	or	t4,a7,a0
20403c24:	060e8563          	beqz	t4,20403c8e <__gedf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20403c28:	55f9                	li	a1,-2
20403c2a:	a80d                	j	20403c5c <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 21)
20403c2c:	01d71663          	bne	a4,t4,20403c38 <__gedf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 22)
20403c30:	00c7eeb3          	or	t4,a5,a2
20403c34:	fe0e9ae3          	bnez	t4,20403c28 <__gedf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 57)
20403c38:	04081d63          	bnez	a6,20403c92 <__gedf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 58)
20403c3c:	00a8e533          	or	a0,a7,a0
20403c40:	00153513          	seqz	a0,a0
20403c44:	e319                	bnez	a4,20403c4a <__gedf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 64)
20403c46:	8e5d                	or	a2,a2,a5
20403c48:	ce15                	beqz	a2,20403c84 <__gedf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20403c4a:	e511                	bnez	a0,20403c56 <__gedf2+0x62>
20403c4c:	00d58a63          	beq	a1,a3,20403c60 <__gedf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 108)
20403c50:	c985                	beqz	a1,20403c80 <__gedf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20403c52:	55fd                	li	a1,-1
20403c54:	a021                	j	20403c5c <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 74)
20403c56:	55fd                	li	a1,-1
20403c58:	c291                	beqz	a3,20403c5c <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20403c5a:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:49
20403c5c:	852e                	mv	a0,a1
20403c5e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 87)
20403c60:	ff0748e3          	blt	a4,a6,20403c50 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 93)
20403c64:	00e85463          	bge	a6,a4,20403c6c <__gedf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 118)
20403c68:	f9f5                	bnez	a1,20403c5c <__gedf2+0x68>
20403c6a:	b7e5                	j	20403c52 <__gedf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 99)
20403c6c:	ff17e2e3          	bltu	a5,a7,20403c50 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 105)
20403c70:	00f89c63          	bne	a7,a5,20403c88 <__gedf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 106)
20403c74:	fc6e6ee3          	bltu	t3,t1,20403c50 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 116)
20403c78:	ffc368e3          	bltu	t1,t3,20403c68 <__gedf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20403c7c:	4581                	li	a1,0
20403c7e:	bff9                	j	20403c5c <__gedf2+0x68>
20403c80:	4585                	li	a1,1
20403c82:	bfe9                	j	20403c5c <__gedf2+0x68>
20403c84:	fd65                	bnez	a0,20403c7c <__gedf2+0x88>
20403c86:	b7e9                	j	20403c50 <__gedf2+0x5c>
20403c88:	fef8e0e3          	bltu	a7,a5,20403c68 <__gedf2+0x74>
20403c8c:	bfc5                	j	20403c7c <__gedf2+0x88>
20403c8e:	fb0701e3          	beq	a4,a6,20403c30 <__gedf2+0x3c>
20403c92:	ff4d                	bnez	a4,20403c4c <__gedf2+0x58>
20403c94:	4501                	li	a0,0
20403c96:	bf45                	j	20403c46 <__gedf2+0x52>

20403c98 <__ledf2>:
__ledf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20403c98:	0145d813          	srli	a6,a1,0x14
20403c9c:	001007b7          	lui	a5,0x100
20403ca0:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20403ca2:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20403ca6:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20403caa:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20403cae:	00b7f8b3          	and	a7,a5,a1
20403cb2:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20403cb4:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20403cb6:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20403cb8:	8e32                	mv	t3,a2
20403cba:	7ff77713          	andi	a4,a4,2047
20403cbe:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20403cc0:	01d81863          	bne	a6,t4,20403cd0 <__ledf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 18)
20403cc4:	00a8eeb3          	or	t4,a7,a0
20403cc8:	060e8563          	beqz	t4,20403d32 <__ledf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20403ccc:	4589                	li	a1,2
20403cce:	a80d                	j	20403d00 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 21)
20403cd0:	01d71663          	bne	a4,t4,20403cdc <__ledf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 22)
20403cd4:	00c7eeb3          	or	t4,a5,a2
20403cd8:	fe0e9ae3          	bnez	t4,20403ccc <__ledf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 57)
20403cdc:	04081d63          	bnez	a6,20403d36 <__ledf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 58)
20403ce0:	00a8e533          	or	a0,a7,a0
20403ce4:	00153513          	seqz	a0,a0
20403ce8:	e319                	bnez	a4,20403cee <__ledf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 64)
20403cea:	8e5d                	or	a2,a2,a5
20403cec:	ce15                	beqz	a2,20403d28 <__ledf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20403cee:	e511                	bnez	a0,20403cfa <__ledf2+0x62>
20403cf0:	00d58a63          	beq	a1,a3,20403d04 <__ledf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 108)
20403cf4:	c985                	beqz	a1,20403d24 <__ledf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20403cf6:	55fd                	li	a1,-1
20403cf8:	a021                	j	20403d00 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 74)
20403cfa:	55fd                	li	a1,-1
20403cfc:	c291                	beqz	a3,20403d00 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20403cfe:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:49
20403d00:	852e                	mv	a0,a1
20403d02:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 87)
20403d04:	ff0748e3          	blt	a4,a6,20403cf4 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 93)
20403d08:	00e85463          	bge	a6,a4,20403d10 <__ledf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 118)
20403d0c:	f9f5                	bnez	a1,20403d00 <__ledf2+0x68>
20403d0e:	b7e5                	j	20403cf6 <__ledf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 99)
20403d10:	ff17e2e3          	bltu	a5,a7,20403cf4 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 105)
20403d14:	00f89c63          	bne	a7,a5,20403d2c <__ledf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 106)
20403d18:	fc6e6ee3          	bltu	t3,t1,20403cf4 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 116)
20403d1c:	ffc368e3          	bltu	t1,t3,20403d0c <__ledf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20403d20:	4581                	li	a1,0
20403d22:	bff9                	j	20403d00 <__ledf2+0x68>
20403d24:	4585                	li	a1,1
20403d26:	bfe9                	j	20403d00 <__ledf2+0x68>
20403d28:	fd65                	bnez	a0,20403d20 <__ledf2+0x88>
20403d2a:	b7e9                	j	20403cf4 <__ledf2+0x5c>
20403d2c:	fef8e0e3          	bltu	a7,a5,20403d0c <__ledf2+0x74>
20403d30:	bfc5                	j	20403d20 <__ledf2+0x88>
20403d32:	fb0701e3          	beq	a4,a6,20403cd4 <__ledf2+0x3c>
20403d36:	ff4d                	bnez	a4,20403cf0 <__ledf2+0x58>
20403d38:	4501                	li	a0,0
20403d3a:	bf45                	j	20403cea <__ledf2+0x52>

20403d3c <__muldf3>:
__muldf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20403d3c:	7179                	addi	sp,sp,-48
20403d3e:	ce4e                	sw	s3,28(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20403d40:	0145d993          	srli	s3,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20403d44:	d422                	sw	s0,40(sp)
20403d46:	d226                	sw	s1,36(sp)
20403d48:	cc52                	sw	s4,24(sp)
20403d4a:	ca56                	sw	s5,20(sp)
20403d4c:	c85a                	sw	s6,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20403d4e:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20403d52:	d606                	sw	ra,44(sp)
20403d54:	d04a                	sw	s2,32(sp)
20403d56:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20403d58:	7ff9f993          	andi	s3,s3,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20403d5c:	842a                	mv	s0,a0
20403d5e:	8b32                	mv	s6,a2
20403d60:	8ab6                	mv	s5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20403d62:	80b1                	srli	s1,s1,0xc
20403d64:	01f5da13          	srli	s4,a1,0x1f
20403d68:	08098163          	beqz	s3,20403dea <__muldf3+0xae>
20403d6c:	7ff00793          	li	a5,2047
20403d70:	0cf98563          	beq	s3,a5,20403e3a <__muldf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 1)
20403d74:	01d55793          	srli	a5,a0,0x1d
20403d78:	048e                	slli	s1,s1,0x3
20403d7a:	8cdd                	or	s1,s1,a5
20403d7c:	008007b7          	lui	a5,0x800
20403d80:	8cdd                	or	s1,s1,a5
20403d82:	00351913          	slli	s2,a0,0x3
20403d86:	c0198993          	addi	s3,s3,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
20403d8a:	4b81                	li	s7,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
20403d8c:	014ad513          	srli	a0,s5,0x14
20403d90:	00ca9413          	slli	s0,s5,0xc
20403d94:	7ff57513          	andi	a0,a0,2047
20403d98:	8031                	srli	s0,s0,0xc
20403d9a:	01fada93          	srli	s5,s5,0x1f
20403d9e:	c161                	beqz	a0,20403e5e <__muldf3+0x122>
20403da0:	7ff00793          	li	a5,2047
20403da4:	10f50563          	beq	a0,a5,20403eae <__muldf3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 1)
20403da8:	01db5793          	srli	a5,s6,0x1d
20403dac:	040e                	slli	s0,s0,0x3
20403dae:	8c5d                	or	s0,s0,a5
20403db0:	008007b7          	lui	a5,0x800
20403db4:	8c5d                	or	s0,s0,a5
20403db6:	c0150513          	addi	a0,a0,-1023 # 7fc01 <__heap_size+0x7f401>
20403dba:	003b1793          	slli	a5,s6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
20403dbe:	4701                	li	a4,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
20403dc0:	002b9693          	slli	a3,s7,0x2
20403dc4:	8ed9                	or	a3,a3,a4
20403dc6:	954e                	add	a0,a0,s3
20403dc8:	16fd                	addi	a3,a3,-1
20403dca:	45b9                	li	a1,14
20403dcc:	015a4633          	xor	a2,s4,s5
20403dd0:	00150813          	addi	a6,a0,1
20403dd4:	0ed5ee63          	bltu	a1,a3,20403ed0 <__muldf3+0x194>
20403dd8:	00005597          	auipc	a1,0x5
20403ddc:	82458593          	addi	a1,a1,-2012 # 204085fc <pow10.2193+0x8c>
20403de0:	068a                	slli	a3,a3,0x2
20403de2:	96ae                	add	a3,a3,a1
20403de4:	4294                	lw	a3,0(a3)
20403de6:	96ae                	add	a3,a3,a1
20403de8:	8682                	jr	a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 2)
20403dea:	00a4e933          	or	s2,s1,a0
20403dee:	04090f63          	beqz	s2,20403e4c <__muldf3+0x110>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 12)
20403df2:	c88d                	beqz	s1,20403e24 <__muldf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 16)
20403df4:	8526                	mv	a0,s1
20403df6:	2f3000ef          	jal	ra,204048e8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 27)
20403dfa:	ff550713          	addi	a4,a0,-11
20403dfe:	47f1                	li	a5,28
20403e00:	02e7c763          	blt	a5,a4,20403e2e <__muldf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 28)
20403e04:	47f5                	li	a5,29
20403e06:	ff850913          	addi	s2,a0,-8
20403e0a:	8f99                	sub	a5,a5,a4
20403e0c:	012494b3          	sll	s1,s1,s2
20403e10:	00f457b3          	srl	a5,s0,a5
20403e14:	8cdd                	or	s1,s1,a5
20403e16:	01241933          	sll	s2,s0,s2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
20403e1a:	c0d00993          	li	s3,-1011
20403e1e:	40a989b3          	sub	s3,s3,a0
20403e22:	b7a5                	j	20403d8a <__muldf3+0x4e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 20)
20403e24:	2c5000ef          	jal	ra,204048e8 <__clzsi2>
20403e28:	02050513          	addi	a0,a0,32
20403e2c:	b7f9                	j	20403dfa <__muldf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 29)
20403e2e:	fd850493          	addi	s1,a0,-40
20403e32:	009414b3          	sll	s1,s0,s1
20403e36:	4901                	li	s2,0
20403e38:	b7cd                	j	20403e1a <__muldf3+0xde>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 3)
20403e3a:	00a4e933          	or	s2,s1,a0
20403e3e:	00090b63          	beqz	s2,20403e54 <__muldf3+0x118>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20403e42:	892a                	mv	s2,a0
20403e44:	7ff00993          	li	s3,2047
20403e48:	4b8d                	li	s7,3
20403e4a:	b789                	j	20403d8c <__muldf3+0x50>
20403e4c:	4481                	li	s1,0
20403e4e:	4981                	li	s3,0
20403e50:	4b85                	li	s7,1
20403e52:	bf2d                	j	20403d8c <__muldf3+0x50>
20403e54:	4481                	li	s1,0
20403e56:	7ff00993          	li	s3,2047
20403e5a:	4b89                	li	s7,2
20403e5c:	bf05                	j	20403d8c <__muldf3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 2)
20403e5e:	016467b3          	or	a5,s0,s6
20403e62:	cfb1                	beqz	a5,20403ebe <__muldf3+0x182>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 12)
20403e64:	c80d                	beqz	s0,20403e96 <__muldf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 16)
20403e66:	8522                	mv	a0,s0
20403e68:	281000ef          	jal	ra,204048e8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 27)
20403e6c:	ff550693          	addi	a3,a0,-11
20403e70:	47f1                	li	a5,28
20403e72:	02d7c863          	blt	a5,a3,20403ea2 <__muldf3+0x166>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 28)
20403e76:	4775                	li	a4,29
20403e78:	ff850793          	addi	a5,a0,-8
20403e7c:	8f15                	sub	a4,a4,a3
20403e7e:	00f41433          	sll	s0,s0,a5
20403e82:	00eb5733          	srl	a4,s6,a4
20403e86:	8c59                	or	s0,s0,a4
20403e88:	00fb17b3          	sll	a5,s6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
20403e8c:	c0d00713          	li	a4,-1011
20403e90:	40a70533          	sub	a0,a4,a0
20403e94:	b72d                	j	20403dbe <__muldf3+0x82>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 20)
20403e96:	855a                	mv	a0,s6
20403e98:	251000ef          	jal	ra,204048e8 <__clzsi2>
20403e9c:	02050513          	addi	a0,a0,32
20403ea0:	b7f1                	j	20403e6c <__muldf3+0x130>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 29)
20403ea2:	fd850413          	addi	s0,a0,-40
20403ea6:	008b1433          	sll	s0,s6,s0
20403eaa:	4781                	li	a5,0
20403eac:	b7c5                	j	20403e8c <__muldf3+0x150>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 3)
20403eae:	016467b3          	or	a5,s0,s6
20403eb2:	cb91                	beqz	a5,20403ec6 <__muldf3+0x18a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
20403eb4:	87da                	mv	a5,s6
20403eb6:	7ff00513          	li	a0,2047
20403eba:	470d                	li	a4,3
20403ebc:	b711                	j	20403dc0 <__muldf3+0x84>
20403ebe:	4401                	li	s0,0
20403ec0:	4501                	li	a0,0
20403ec2:	4705                	li	a4,1
20403ec4:	bdf5                	j	20403dc0 <__muldf3+0x84>
20403ec6:	4401                	li	s0,0
20403ec8:	7ff00513          	li	a0,2047
20403ecc:	4709                	li	a4,2
20403ece:	bdcd                	j	20403dc0 <__muldf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 2)
20403ed0:	6f41                	lui	t5,0x10
20403ed2:	ffff0e93          	addi	t4,t5,-1 # ffff <__heap_size+0xf7ff>
20403ed6:	01095713          	srli	a4,s2,0x10
20403eda:	0107d893          	srli	a7,a5,0x10
20403ede:	01d97933          	and	s2,s2,t4
20403ee2:	01d7f7b3          	and	a5,a5,t4
20403ee6:	032885b3          	mul	a1,a7,s2
20403eea:	032786b3          	mul	a3,a5,s2
20403eee:	02f70fb3          	mul	t6,a4,a5
20403ef2:	01f58333          	add	t1,a1,t6
20403ef6:	0106d593          	srli	a1,a3,0x10
20403efa:	959a                	add	a1,a1,t1
20403efc:	03170e33          	mul	t3,a4,a7
20403f00:	01f5f363          	bgeu	a1,t6,20403f06 <__muldf3+0x1ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 9)
20403f04:	9e7a                	add	t3,t3,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 11)
20403f06:	0105d393          	srli	t2,a1,0x10
20403f0a:	01d5f5b3          	and	a1,a1,t4
20403f0e:	01d6f6b3          	and	a3,a3,t4
20403f12:	01045f13          	srli	t5,s0,0x10
20403f16:	01d472b3          	and	t0,s0,t4
20403f1a:	05c2                	slli	a1,a1,0x10
20403f1c:	95b6                	add	a1,a1,a3
20403f1e:	02570eb3          	mul	t4,a4,t0
20403f22:	032286b3          	mul	a3,t0,s2
20403f26:	032f0933          	mul	s2,t5,s2
20403f2a:	01d90333          	add	t1,s2,t4
20403f2e:	0106d913          	srli	s2,a3,0x10
20403f32:	991a                	add	s2,s2,t1
20403f34:	03e70733          	mul	a4,a4,t5
20403f38:	01d97463          	bgeu	s2,t4,20403f40 <__muldf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 12)
20403f3c:	6341                	lui	t1,0x10
20403f3e:	971a                	add	a4,a4,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 14)
20403f40:	01095e93          	srli	t4,s2,0x10
20403f44:	69c1                	lui	s3,0x10
20403f46:	9eba                	add	t4,t4,a4
20403f48:	fff98713          	addi	a4,s3,-1 # ffff <__heap_size+0xf7ff>
20403f4c:	00e97933          	and	s2,s2,a4
20403f50:	8ef9                	and	a3,a3,a4
20403f52:	0104d413          	srli	s0,s1,0x10
20403f56:	0942                	slli	s2,s2,0x10
20403f58:	8cf9                	and	s1,s1,a4
20403f5a:	9936                	add	s2,s2,a3
20403f5c:	02978733          	mul	a4,a5,s1
20403f60:	93ca                	add	t2,t2,s2
20403f62:	02f40333          	mul	t1,s0,a5
20403f66:	029886b3          	mul	a3,a7,s1
20403f6a:	028887b3          	mul	a5,a7,s0
20403f6e:	006688b3          	add	a7,a3,t1
20403f72:	01075693          	srli	a3,a4,0x10
20403f76:	96c6                	add	a3,a3,a7
20403f78:	0066f363          	bgeu	a3,t1,20403f7e <__muldf3+0x242>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 15)
20403f7c:	97ce                	add	a5,a5,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 17)
20403f7e:	0106d893          	srli	a7,a3,0x10
20403f82:	69c1                	lui	s3,0x10
20403f84:	00f88fb3          	add	t6,a7,a5
20403f88:	fff98793          	addi	a5,s3,-1 # ffff <__heap_size+0xf7ff>
20403f8c:	8efd                	and	a3,a3,a5
20403f8e:	8f7d                	and	a4,a4,a5
20403f90:	029288b3          	mul	a7,t0,s1
20403f94:	06c2                	slli	a3,a3,0x10
20403f96:	96ba                	add	a3,a3,a4
20403f98:	025407b3          	mul	a5,s0,t0
20403f9c:	029f04b3          	mul	s1,t5,s1
20403fa0:	028f0333          	mul	t1,t5,s0
20403fa4:	94be                	add	s1,s1,a5
20403fa6:	0108d413          	srli	s0,a7,0x10
20403faa:	94a2                	add	s1,s1,s0
20403fac:	00f4f363          	bgeu	s1,a5,20403fb2 <__muldf3+0x276>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 18)
20403fb0:	934e                	add	t1,t1,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 20)
20403fb2:	67c1                	lui	a5,0x10
20403fb4:	17fd                	addi	a5,a5,-1
20403fb6:	00f4f733          	and	a4,s1,a5
20403fba:	00f8f8b3          	and	a7,a7,a5
20403fbe:	0742                	slli	a4,a4,0x10
20403fc0:	9e1e                	add	t3,t3,t2
20403fc2:	9746                	add	a4,a4,a7
20403fc4:	012e3933          	sltu	s2,t3,s2
20403fc8:	9776                	add	a4,a4,t4
20403fca:	01270433          	add	s0,a4,s2
20403fce:	9e36                	add	t3,t3,a3
20403fd0:	00de36b3          	sltu	a3,t3,a3
20403fd4:	01f408b3          	add	a7,s0,t6
20403fd8:	00d88f33          	add	t5,a7,a3
20403fdc:	01d73733          	sltu	a4,a4,t4
20403fe0:	01243433          	sltu	s0,s0,s2
20403fe4:	8c59                	or	s0,s0,a4
20403fe6:	80c1                	srli	s1,s1,0x10
20403fe8:	01f8b8b3          	sltu	a7,a7,t6
20403fec:	00df36b3          	sltu	a3,t5,a3
20403ff0:	9426                	add	s0,s0,s1
20403ff2:	00d8e6b3          	or	a3,a7,a3
20403ff6:	9436                	add	s0,s0,a3
20403ff8:	941a                	add	s0,s0,t1
20403ffa:	017f5793          	srli	a5,t5,0x17
20403ffe:	0426                	slli	s0,s0,0x9
20404000:	8c5d                	or	s0,s0,a5
20404002:	009e1793          	slli	a5,t3,0x9
20404006:	8fcd                	or	a5,a5,a1
20404008:	00f037b3          	snez	a5,a5
2040400c:	017e5e13          	srli	t3,t3,0x17
20404010:	009f1713          	slli	a4,t5,0x9
20404014:	01c7e7b3          	or	a5,a5,t3
20404018:	8fd9                	or	a5,a5,a4
2040401a:	00741713          	slli	a4,s0,0x7
2040401e:	0a075863          	bgez	a4,204040ce <__muldf3+0x392>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 38)
20404022:	0017d713          	srli	a4,a5,0x1
20404026:	8b85                	andi	a5,a5,1
20404028:	8fd9                	or	a5,a5,a4
2040402a:	01f41713          	slli	a4,s0,0x1f
2040402e:	8fd9                	or	a5,a5,a4
20404030:	8005                	srli	s0,s0,0x1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 2)
20404032:	3ff80693          	addi	a3,a6,1023
20404036:	08d05e63          	blez	a3,204040d2 <__muldf3+0x396>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 6)
2040403a:	0077f713          	andi	a4,a5,7
2040403e:	cf01                	beqz	a4,20404056 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 8)
20404040:	00f7f713          	andi	a4,a5,15
20404044:	4591                	li	a1,4
20404046:	00b70863          	beq	a4,a1,20404056 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 10)
2040404a:	00478713          	addi	a4,a5,4 # 10004 <__heap_size+0xf804>
2040404e:	00f737b3          	sltu	a5,a4,a5
20404052:	943e                	add	s0,s0,a5
20404054:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 9)
20404056:	00741713          	slli	a4,s0,0x7
2040405a:	00075863          	bgez	a4,2040406a <__muldf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 24)
2040405e:	ff000737          	lui	a4,0xff000
20404062:	177d                	addi	a4,a4,-1
20404064:	8c79                	and	s0,s0,a4
20404066:	40080693          	addi	a3,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 26)
2040406a:	7fe00713          	li	a4,2046
2040406e:	0ed74c63          	blt	a4,a3,20404166 <__muldf3+0x42a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404072:	0037d713          	srli	a4,a5,0x3
20404076:	01d41793          	slli	a5,s0,0x1d
2040407a:	8fd9                	or	a5,a5,a4
2040407c:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 120)
2040407e:	0432                	slli	s0,s0,0xc
20404080:	7ff6f713          	andi	a4,a3,2047
20404084:	0752                	slli	a4,a4,0x14
20404086:	8031                	srli	s0,s0,0xc
20404088:	8c59                	or	s0,s0,a4
2040408a:	067e                	slli	a2,a2,0x1f
2040408c:	00c46733          	or	a4,s0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:51 (discriminator 120)
20404090:	50b2                	lw	ra,44(sp)
20404092:	5422                	lw	s0,40(sp)
20404094:	5492                	lw	s1,36(sp)
20404096:	5902                	lw	s2,32(sp)
20404098:	49f2                	lw	s3,28(sp)
2040409a:	4a62                	lw	s4,24(sp)
2040409c:	4ad2                	lw	s5,20(sp)
2040409e:	4b42                	lw	s6,16(sp)
204040a0:	4bb2                	lw	s7,12(sp)
204040a2:	853e                	mv	a0,a5
204040a4:	85ba                	mv	a1,a4
204040a6:	6145                	addi	sp,sp,48
204040a8:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 7)
204040aa:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 7)
204040ac:	8426                	mv	s0,s1
204040ae:	87ca                	mv	a5,s2
204040b0:	875e                	mv	a4,s7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
204040b2:	4689                	li	a3,2
204040b4:	0ad70963          	beq	a4,a3,20404166 <__muldf3+0x42a>
204040b8:	468d                	li	a3,3
204040ba:	08d70f63          	beq	a4,a3,20404158 <__muldf3+0x41c>
204040be:	4685                	li	a3,1
204040c0:	f6d719e3          	bne	a4,a3,20404032 <__muldf3+0x2f6>
204040c4:	4401                	li	s0,0
204040c6:	4781                	li	a5,0
204040c8:	a09d                	j	2040412e <__muldf3+0x3f2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 4)
204040ca:	8656                	mv	a2,s5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 4)
204040cc:	b7dd                	j	204040b2 <__muldf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
204040ce:	882a                	mv	a6,a0
204040d0:	b78d                	j	20404032 <__muldf3+0x2f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 59)
204040d2:	4585                	li	a1,1
204040d4:	8d95                	sub	a1,a1,a3
204040d6:	03800713          	li	a4,56
204040da:	feb745e3          	blt	a4,a1,204040c4 <__muldf3+0x388>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 60)
204040de:	477d                	li	a4,31
204040e0:	04b74963          	blt	a4,a1,20404132 <__muldf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 62)
204040e4:	41e80813          	addi	a6,a6,1054
204040e8:	01041733          	sll	a4,s0,a6
204040ec:	00b7d6b3          	srl	a3,a5,a1
204040f0:	010797b3          	sll	a5,a5,a6
204040f4:	8f55                	or	a4,a4,a3
204040f6:	00f037b3          	snez	a5,a5
204040fa:	8fd9                	or	a5,a5,a4
204040fc:	00b45433          	srl	s0,s0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 75)
20404100:	0077f713          	andi	a4,a5,7
20404104:	cf01                	beqz	a4,2040411c <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 76)
20404106:	00f7f713          	andi	a4,a5,15
2040410a:	4691                	li	a3,4
2040410c:	00d70863          	beq	a4,a3,2040411c <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 78)
20404110:	00478713          	addi	a4,a5,4
20404114:	00f737b3          	sltu	a5,a4,a5
20404118:	943e                	add	s0,s0,a5
2040411a:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 77)
2040411c:	00841713          	slli	a4,s0,0x8
20404120:	04074863          	bltz	a4,20404170 <__muldf3+0x434>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 93)
20404124:	01d41713          	slli	a4,s0,0x1d
20404128:	838d                	srli	a5,a5,0x3
2040412a:	8fd9                	or	a5,a5,a4
2040412c:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
2040412e:	4681                	li	a3,0
20404130:	b7b9                	j	2040407e <__muldf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 63)
20404132:	5705                	li	a4,-31
20404134:	8f15                	sub	a4,a4,a3
20404136:	02000513          	li	a0,32
2040413a:	00e45733          	srl	a4,s0,a4
2040413e:	4681                	li	a3,0
20404140:	00a58663          	beq	a1,a0,2040414c <__muldf3+0x410>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 71)
20404144:	43e80813          	addi	a6,a6,1086
20404148:	010416b3          	sll	a3,s0,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 74)
2040414c:	8fd5                	or	a5,a5,a3
2040414e:	00f037b3          	snez	a5,a5
20404152:	8fd9                	or	a5,a5,a4
20404154:	4401                	li	s0,0
20404156:	b76d                	j	20404100 <__muldf3+0x3c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404158:	00080437          	lui	s0,0x80
2040415c:	4781                	li	a5,0
2040415e:	7ff00693          	li	a3,2047
20404162:	4601                	li	a2,0
20404164:	bf29                	j	2040407e <__muldf3+0x342>
20404166:	4401                	li	s0,0
20404168:	4781                	li	a5,0
2040416a:	7ff00693          	li	a3,2047
2040416e:	bf01                	j	2040407e <__muldf3+0x342>
20404170:	4401                	li	s0,0
20404172:	4781                	li	a5,0
20404174:	4685                	li	a3,1
20404176:	b721                	j	2040407e <__muldf3+0x342>

20404178 <__subdf3>:
__subdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404178:	00100837          	lui	a6,0x100
2040417c:	187d                	addi	a6,a6,-1
2040417e:	00b878b3          	and	a7,a6,a1
20404182:	088e                	slli	a7,a7,0x3
20404184:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20404188:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
2040418a:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
2040418e:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404192:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404196:	0146d893          	srli	a7,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
2040419a:	ca26                	sw	s1,20(sp)
2040419c:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
2040419e:	7ff77493          	andi	s1,a4,2047
204041a2:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204041a6:	01d65713          	srli	a4,a2,0x1d
204041aa:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
204041ac:	ce06                	sw	ra,28(sp)
204041ae:	cc22                	sw	s0,24(sp)
204041b0:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204041b2:	7ff8f893          	andi	a7,a7,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204041b6:	7ff00593          	li	a1,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
204041ba:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204041bc:	82fd                	srli	a3,a3,0x1f
204041be:	01076733          	or	a4,a4,a6
204041c2:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204041c4:	00b89563          	bne	a7,a1,204041ce <__subdf3+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 2)
204041c8:	00c765b3          	or	a1,a4,a2
204041cc:	e199                	bnez	a1,204041d2 <__subdf3+0x5a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 3)
204041ce:	0016c693          	xori	a3,a3,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 11)
204041d2:	41148833          	sub	a6,s1,a7
204041d6:	23269363          	bne	a3,s2,204043fc <__subdf3+0x284>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 12)
204041da:	0f005c63          	blez	a6,204042d2 <__subdf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 14)
204041de:	04089563          	bnez	a7,20404228 <__subdf3+0xb0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 16)
204041e2:	00c766b3          	or	a3,a4,a2
204041e6:	c28d                	beqz	a3,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 19)
204041e8:	fff48813          	addi	a6,s1,-1 # 7ffff <__heap_size+0x7f7ff>
204041ec:	00081a63          	bnez	a6,20404200 <__subdf3+0x88>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 28)
204041f0:	962a                	add	a2,a2,a0
204041f2:	00a63533          	sltu	a0,a2,a0
204041f6:	97ba                	add	a5,a5,a4
204041f8:	97aa                	add	a5,a5,a0
204041fa:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 85)
204041fc:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
204041fe:	a895                	j	20404272 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 29)
20404200:	7ff00693          	li	a3,2047
20404204:	02d49963          	bne	s1,a3,20404236 <__subdf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 422)
20404208:	00757713          	andi	a4,a0,7
2040420c:	4e070063          	beqz	a4,204046ec <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 37)
20404210:	00f57713          	andi	a4,a0,15
20404214:	4691                	li	a3,4
20404216:	4cd70b63          	beq	a4,a3,204046ec <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 44)
2040421a:	00450693          	addi	a3,a0,4
2040421e:	00a6b533          	sltu	a0,a3,a0
20404222:	97aa                	add	a5,a5,a0
20404224:	8536                	mv	a0,a3
20404226:	a1d9                	j	204046ec <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 17)
20404228:	7ff00693          	li	a3,2047
2040422c:	fcd48ee3          	beq	s1,a3,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 43)
20404230:	008006b7          	lui	a3,0x800
20404234:	8f55                	or	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 52)
20404236:	03800693          	li	a3,56
2040423a:	0906c863          	blt	a3,a6,204042ca <__subdf3+0x152>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 53)
2040423e:	46fd                	li	a3,31
20404240:	0706c063          	blt	a3,a6,204042a0 <__subdf3+0x128>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 55)
20404244:	02000593          	li	a1,32
20404248:	410585b3          	sub	a1,a1,a6
2040424c:	00b716b3          	sll	a3,a4,a1
20404250:	010658b3          	srl	a7,a2,a6
20404254:	00b61633          	sll	a2,a2,a1
20404258:	0116e6b3          	or	a3,a3,a7
2040425c:	00c03633          	snez	a2,a2
20404260:	8e55                	or	a2,a2,a3
20404262:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 69)
20404266:	962a                	add	a2,a2,a0
20404268:	973e                	add	a4,a4,a5
2040426a:	00a637b3          	sltu	a5,a2,a0
2040426e:	97ba                	add	a5,a5,a4
20404270:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 127)
20404272:	00879713          	slli	a4,a5,0x8
20404276:	f80759e3          	bgez	a4,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 187)
2040427a:	0485                	addi	s1,s1,1
2040427c:	7ff00713          	li	a4,2047
20404280:	46e48463          	beq	s1,a4,204046e8 <__subdf3+0x570>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404284:	ff8006b7          	lui	a3,0xff800
20404288:	16fd                	addi	a3,a3,-1
2040428a:	8efd                	and	a3,a3,a5
2040428c:	00155593          	srli	a1,a0,0x1
20404290:	8905                	andi	a0,a0,1
20404292:	01f69793          	slli	a5,a3,0x1f
20404296:	8d4d                	or	a0,a0,a1
20404298:	8d5d                	or	a0,a0,a5
2040429a:	0016d793          	srli	a5,a3,0x1
2040429e:	b7ad                	j	20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 56)
204042a0:	fe080693          	addi	a3,a6,-32 # fffe0 <__heap_size+0xff7e0>
204042a4:	02000893          	li	a7,32
204042a8:	00d756b3          	srl	a3,a4,a3
204042ac:	4581                	li	a1,0
204042ae:	01180863          	beq	a6,a7,204042be <__subdf3+0x146>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 63)
204042b2:	04000593          	li	a1,64
204042b6:	41058833          	sub	a6,a1,a6
204042ba:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 66)
204042be:	8e4d                	or	a2,a2,a1
204042c0:	00c03633          	snez	a2,a2
204042c4:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 54)
204042c6:	4701                	li	a4,0
204042c8:	bf79                	j	20404266 <__subdf3+0xee>
204042ca:	8e59                	or	a2,a2,a4
204042cc:	00c03633          	snez	a2,a2
204042d0:	bfdd                	j	204042c6 <__subdf3+0x14e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 15)
204042d2:	0a080b63          	beqz	a6,20404388 <__subdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 71)
204042d6:	409885b3          	sub	a1,a7,s1
204042da:	e48d                	bnez	s1,20404304 <__subdf3+0x18c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 73)
204042dc:	00a7e6b3          	or	a3,a5,a0
204042e0:	3e068b63          	beqz	a3,204046d6 <__subdf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 76)
204042e4:	fff58693          	addi	a3,a1,-1
204042e8:	e699                	bnez	a3,204042f6 <__subdf3+0x17e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
204042ea:	9532                	add	a0,a0,a2
204042ec:	97ba                	add	a5,a5,a4
204042ee:	00c53633          	sltu	a2,a0,a2
204042f2:	97b2                	add	a5,a5,a2
204042f4:	b721                	j	204041fc <__subdf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 86)
204042f6:	7ff00813          	li	a6,2047
204042fa:	01059d63          	bne	a1,a6,20404314 <__subdf3+0x19c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204042fe:	87ba                	mv	a5,a4
20404300:	8532                	mv	a0,a2
20404302:	ace5                	j	204045fa <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 74)
20404304:	7ff00693          	li	a3,2047
20404308:	fed88be3          	beq	a7,a3,204042fe <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 100)
2040430c:	008006b7          	lui	a3,0x800
20404310:	8fd5                	or	a5,a5,a3
20404312:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 109)
20404314:	03800593          	li	a1,56
20404318:	06d5c463          	blt	a1,a3,20404380 <__subdf3+0x208>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 110)
2040431c:	45fd                	li	a1,31
2040431e:	02d5cb63          	blt	a1,a3,20404354 <__subdf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 112)
20404322:	02000813          	li	a6,32
20404326:	40d80833          	sub	a6,a6,a3
2040432a:	00d55333          	srl	t1,a0,a3
2040432e:	010795b3          	sll	a1,a5,a6
20404332:	01051533          	sll	a0,a0,a6
20404336:	0065e5b3          	or	a1,a1,t1
2040433a:	00a03533          	snez	a0,a0
2040433e:	8d4d                	or	a0,a0,a1
20404340:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 126)
20404344:	9532                	add	a0,a0,a2
20404346:	00e687b3          	add	a5,a3,a4
2040434a:	00c53633          	sltu	a2,a0,a2
2040434e:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 126)
20404350:	84c6                	mv	s1,a7
20404352:	b705                	j	20404272 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 113)
20404354:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20404358:	02000313          	li	t1,32
2040435c:	00b7d5b3          	srl	a1,a5,a1
20404360:	4801                	li	a6,0
20404362:	00668863          	beq	a3,t1,20404372 <__subdf3+0x1fa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 120)
20404366:	04000813          	li	a6,64
2040436a:	40d806b3          	sub	a3,a6,a3
2040436e:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 123)
20404372:	00a86533          	or	a0,a6,a0
20404376:	00a03533          	snez	a0,a0
2040437a:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 111)
2040437c:	4681                	li	a3,0
2040437e:	b7d9                	j	20404344 <__subdf3+0x1cc>
20404380:	8d5d                	or	a0,a0,a5
20404382:	00a03533          	snez	a0,a0
20404386:	bfdd                	j	2040437c <__subdf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 72)
20404388:	00148693          	addi	a3,s1,1
2040438c:	7fe6f593          	andi	a1,a3,2046
20404390:	e5a9                	bnez	a1,204043da <__subdf3+0x262>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 128)
20404392:	00a7e6b3          	or	a3,a5,a0
20404396:	e49d                	bnez	s1,204043c4 <__subdf3+0x24c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 130)
20404398:	34068363          	beqz	a3,204046de <__subdf3+0x566>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 133)
2040439c:	00c766b3          	or	a3,a4,a2
204043a0:	e60684e3          	beqz	a3,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 139)
204043a4:	962a                	add	a2,a2,a0
204043a6:	97ba                	add	a5,a5,a4
204043a8:	00a63533          	sltu	a0,a2,a0
204043ac:	97aa                	add	a5,a5,a0
204043ae:	00879713          	slli	a4,a5,0x8
204043b2:	8532                	mv	a0,a2
204043b4:	e4075ae3          	bgez	a4,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 141)
204043b8:	ff800737          	lui	a4,0xff800
204043bc:	177d                	addi	a4,a4,-1
204043be:	8ff9                	and	a5,a5,a4
204043c0:	4485                	li	s1,1
204043c2:	b599                	j	20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 158)
204043c4:	de8d                	beqz	a3,204042fe <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 160)
204043c6:	8e59                	or	a2,a2,a4
204043c8:	22060963          	beqz	a2,204045fa <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204043cc:	4901                	li	s2,0
204043ce:	004007b7          	lui	a5,0x400
204043d2:	4501                	li	a0,0
204043d4:	7ff00493          	li	s1,2047
204043d8:	ae11                	j	204046ec <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 129)
204043da:	7ff00593          	li	a1,2047
204043de:	30b68363          	beq	a3,a1,204046e4 <__subdf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204043e2:	962a                	add	a2,a2,a0
204043e4:	973e                	add	a4,a4,a5
204043e6:	00a637b3          	sltu	a5,a2,a0
204043ea:	973e                	add	a4,a4,a5
204043ec:	01f71513          	slli	a0,a4,0x1f
204043f0:	8205                	srli	a2,a2,0x1
204043f2:	8d51                	or	a0,a0,a2
204043f4:	00175793          	srli	a5,a4,0x1
204043f8:	84b6                	mv	s1,a3
204043fa:	b539                	j	20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 13)
204043fc:	0d005563          	blez	a6,204044c6 <__subdf3+0x34e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 205)
20404400:	08089263          	bnez	a7,20404484 <__subdf3+0x30c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 207)
20404404:	00c766b3          	or	a3,a4,a2
20404408:	e00680e3          	beqz	a3,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 210)
2040440c:	fff48813          	addi	a6,s1,-1
20404410:	00081b63          	bnez	a6,20404426 <__subdf3+0x2ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 219)
20404414:	40c50633          	sub	a2,a0,a2
20404418:	00c53533          	sltu	a0,a0,a2
2040441c:	8f99                	sub	a5,a5,a4
2040441e:	8f89                	sub	a5,a5,a0
20404420:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 276)
20404422:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20404424:	a0b1                	j	20404470 <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 220)
20404426:	7ff00693          	li	a3,2047
2040442a:	dcd48fe3          	beq	s1,a3,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 243)
2040442e:	03800693          	li	a3,56
20404432:	0906c663          	blt	a3,a6,204044be <__subdf3+0x346>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 244)
20404436:	46fd                	li	a3,31
20404438:	0506ce63          	blt	a3,a6,20404494 <__subdf3+0x31c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 246)
2040443c:	02000593          	li	a1,32
20404440:	410585b3          	sub	a1,a1,a6
20404444:	00b716b3          	sll	a3,a4,a1
20404448:	010658b3          	srl	a7,a2,a6
2040444c:	00b61633          	sll	a2,a2,a1
20404450:	0116e6b3          	or	a3,a3,a7
20404454:	00c03633          	snez	a2,a2
20404458:	8e55                	or	a2,a2,a3
2040445a:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 260)
2040445e:	40c50633          	sub	a2,a0,a2
20404462:	40e78733          	sub	a4,a5,a4
20404466:	00c537b3          	sltu	a5,a0,a2
2040446a:	40f707b3          	sub	a5,a4,a5
2040446e:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 318)
20404470:	00879713          	slli	a4,a5,0x8
20404474:	d8075ae3          	bgez	a4,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 378)
20404478:	00800437          	lui	s0,0x800
2040447c:	147d                	addi	s0,s0,-1
2040447e:	8c7d                	and	s0,s0,a5
20404480:	89aa                	mv	s3,a0
20404482:	a26d                	j	2040462c <__subdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 208)
20404484:	7ff00693          	li	a3,2047
20404488:	d8d480e3          	beq	s1,a3,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 234)
2040448c:	008006b7          	lui	a3,0x800
20404490:	8f55                	or	a4,a4,a3
20404492:	bf71                	j	2040442e <__subdf3+0x2b6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 247)
20404494:	fe080693          	addi	a3,a6,-32
20404498:	02000893          	li	a7,32
2040449c:	00d756b3          	srl	a3,a4,a3
204044a0:	4581                	li	a1,0
204044a2:	01180863          	beq	a6,a7,204044b2 <__subdf3+0x33a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 254)
204044a6:	04000593          	li	a1,64
204044aa:	41058833          	sub	a6,a1,a6
204044ae:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 257)
204044b2:	8e4d                	or	a2,a2,a1
204044b4:	00c03633          	snez	a2,a2
204044b8:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 245)
204044ba:	4701                	li	a4,0
204044bc:	b74d                	j	2040445e <__subdf3+0x2e6>
204044be:	8e59                	or	a2,a2,a4
204044c0:	00c03633          	snez	a2,a2
204044c4:	bfdd                	j	204044ba <__subdf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 206)
204044c6:	0c080463          	beqz	a6,2040458e <__subdf3+0x416>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 262)
204044ca:	40988833          	sub	a6,a7,s1
204044ce:	e895                	bnez	s1,20404502 <__subdf3+0x38a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 264)
204044d0:	00a7e5b3          	or	a1,a5,a0
204044d4:	26058b63          	beqz	a1,2040474a <__subdf3+0x5d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 267)
204044d8:	fff80593          	addi	a1,a6,-1
204044dc:	e991                	bnez	a1,204044f0 <__subdf3+0x378>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
204044de:	40a60533          	sub	a0,a2,a0
204044e2:	40f707b3          	sub	a5,a4,a5
204044e6:	00a63633          	sltu	a2,a2,a0
204044ea:	8f91                	sub	a5,a5,a2
204044ec:	8936                	mv	s2,a3
204044ee:	bf15                	j	20404422 <__subdf3+0x2aa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 277)
204044f0:	7ff00313          	li	t1,2047
204044f4:	00681f63          	bne	a6,t1,20404512 <__subdf3+0x39a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204044f8:	87ba                	mv	a5,a4
204044fa:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204044fc:	7ff00493          	li	s1,2047
20404500:	a07d                	j	204045ae <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 265)
20404502:	7ff00593          	li	a1,2047
20404506:	feb889e3          	beq	a7,a1,204044f8 <__subdf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 291)
2040450a:	008005b7          	lui	a1,0x800
2040450e:	8fcd                	or	a5,a5,a1
20404510:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 300)
20404512:	03800813          	li	a6,56
20404516:	06b84863          	blt	a6,a1,20404586 <__subdf3+0x40e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 301)
2040451a:	487d                	li	a6,31
2040451c:	02b84e63          	blt	a6,a1,20404558 <__subdf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 303)
20404520:	02000313          	li	t1,32
20404524:	40b30333          	sub	t1,t1,a1
20404528:	00b55e33          	srl	t3,a0,a1
2040452c:	00679833          	sll	a6,a5,t1
20404530:	00651533          	sll	a0,a0,t1
20404534:	01c86833          	or	a6,a6,t3
20404538:	00a03533          	snez	a0,a0
2040453c:	00a86533          	or	a0,a6,a0
20404540:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 317)
20404544:	40a60533          	sub	a0,a2,a0
20404548:	40b707b3          	sub	a5,a4,a1
2040454c:	00a63633          	sltu	a2,a2,a0
20404550:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 317)
20404552:	84c6                	mv	s1,a7
20404554:	8936                	mv	s2,a3
20404556:	bf29                	j	20404470 <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 304)
20404558:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
2040455c:	02000e13          	li	t3,32
20404560:	0107d833          	srl	a6,a5,a6
20404564:	4301                	li	t1,0
20404566:	01c58863          	beq	a1,t3,20404576 <__subdf3+0x3fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 311)
2040456a:	04000313          	li	t1,64
2040456e:	40b305b3          	sub	a1,t1,a1
20404572:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 314)
20404576:	00a36533          	or	a0,t1,a0
2040457a:	00a03533          	snez	a0,a0
2040457e:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 302)
20404582:	4581                	li	a1,0
20404584:	b7c1                	j	20404544 <__subdf3+0x3cc>
20404586:	8d5d                	or	a0,a0,a5
20404588:	00a03533          	snez	a0,a0
2040458c:	bfdd                	j	20404582 <__subdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 263)
2040458e:	00148593          	addi	a1,s1,1
20404592:	7fe5f593          	andi	a1,a1,2046
20404596:	e5bd                	bnez	a1,20404604 <__subdf3+0x48c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 319)
20404598:	00a7e833          	or	a6,a5,a0
2040459c:	00c765b3          	or	a1,a4,a2
204045a0:	e4b1                	bnez	s1,204045ec <__subdf3+0x474>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 321)
204045a2:	00081863          	bnez	a6,204045b2 <__subdf3+0x43a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 323)
204045a6:	1a058663          	beqz	a1,20404752 <__subdf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204045aa:	87ba                	mv	a5,a4
204045ac:	8532                	mv	a0,a2
204045ae:	8936                	mv	s2,a3
204045b0:	b9a1                	j	20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 324)
204045b2:	c4058be3          	beqz	a1,20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 331)
204045b6:	40c50833          	sub	a6,a0,a2
204045ba:	40e785b3          	sub	a1,a5,a4
204045be:	010538b3          	sltu	a7,a0,a6
204045c2:	411585b3          	sub	a1,a1,a7
204045c6:	00859413          	slli	s0,a1,0x8
204045ca:	00045a63          	bgez	s0,204045de <__subdf3+0x466>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 333)
204045ce:	40a60533          	sub	a0,a2,a0
204045d2:	40f707b3          	sub	a5,a4,a5
204045d6:	00a63633          	sltu	a2,a2,a0
204045da:	8f91                	sub	a5,a5,a2
204045dc:	bfc9                	j	204045ae <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 334)
204045de:	00b86533          	or	a0,a6,a1
204045e2:	16050c63          	beqz	a0,2040475a <__subdf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204045e6:	87ae                	mv	a5,a1
204045e8:	8542                	mv	a0,a6
204045ea:	b939                	j	20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 353)
204045ec:	00081a63          	bnez	a6,20404600 <__subdf3+0x488>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 354)
204045f0:	16058763          	beqz	a1,2040475e <__subdf3+0x5e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204045f4:	87ba                	mv	a5,a4
204045f6:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204045f8:	8936                	mv	s2,a3
204045fa:	7ff00493          	li	s1,2047
204045fe:	b129                	j	20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 355)
20404600:	dded                	beqz	a1,204045fa <__subdf3+0x482>
20404602:	b3e9                	j	204043cc <__subdf3+0x254>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 320)
20404604:	40c509b3          	sub	s3,a0,a2
20404608:	013535b3          	sltu	a1,a0,s3
2040460c:	40e78433          	sub	s0,a5,a4
20404610:	8c0d                	sub	s0,s0,a1
20404612:	00841593          	slli	a1,s0,0x8
20404616:	0605d663          	bgez	a1,20404682 <__subdf3+0x50a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 371)
2040461a:	40a609b3          	sub	s3,a2,a0
2040461e:	40f707b3          	sub	a5,a4,a5
20404622:	01363633          	sltu	a2,a2,s3
20404626:	40c78433          	sub	s0,a5,a2
2040462a:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 380)
2040462c:	c02d                	beqz	s0,2040468e <__subdf3+0x516>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 383)
2040462e:	8522                	mv	a0,s0
20404630:	2c65                	jal	204048e8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 394)
20404632:	ff850713          	addi	a4,a0,-8
20404636:	47fd                	li	a5,31
20404638:	06e7c063          	blt	a5,a4,20404698 <__subdf3+0x520>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 395)
2040463c:	02000793          	li	a5,32
20404640:	8f99                	sub	a5,a5,a4
20404642:	00e41433          	sll	s0,s0,a4
20404646:	00f9d7b3          	srl	a5,s3,a5
2040464a:	8c5d                	or	s0,s0,a5
2040464c:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 404)
20404650:	06974d63          	blt	a4,s1,204046ca <__subdf3+0x552>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 405)
20404654:	8f05                	sub	a4,a4,s1
20404656:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7fc305>
2040465a:	46fd                	li	a3,31
2040465c:	04f6c463          	blt	a3,a5,204046a4 <__subdf3+0x52c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 407)
20404660:	02000713          	li	a4,32
20404664:	8f1d                	sub	a4,a4,a5
20404666:	00f55633          	srl	a2,a0,a5
2040466a:	00e416b3          	sll	a3,s0,a4
2040466e:	00e51533          	sll	a0,a0,a4
20404672:	8ed1                	or	a3,a3,a2
20404674:	00a03533          	snez	a0,a0
20404678:	8d55                	or	a0,a0,a3
2040467a:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
2040467e:	4481                	li	s1,0
20404680:	b661                	j	20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 372)
20404682:	0089e533          	or	a0,s3,s0
20404686:	f15d                	bnez	a0,2040462c <__subdf3+0x4b4>
20404688:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
2040468a:	4481                	li	s1,0
2040468c:	a0e9                	j	20404756 <__subdf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 387)
2040468e:	854e                	mv	a0,s3
20404690:	2ca1                	jal	204048e8 <__clzsi2>
20404692:	02050513          	addi	a0,a0,32
20404696:	bf71                	j	20404632 <__subdf3+0x4ba>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 396)
20404698:	fd850413          	addi	s0,a0,-40
2040469c:	00899433          	sll	s0,s3,s0
204046a0:	4501                	li	a0,0
204046a2:	b77d                	j	20404650 <__subdf3+0x4d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 408)
204046a4:	1705                	addi	a4,a4,-31
204046a6:	02000613          	li	a2,32
204046aa:	00e45733          	srl	a4,s0,a4
204046ae:	4681                	li	a3,0
204046b0:	00c78763          	beq	a5,a2,204046be <__subdf3+0x546>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 416)
204046b4:	04000693          	li	a3,64
204046b8:	8e9d                	sub	a3,a3,a5
204046ba:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
204046be:	8d55                	or	a0,a0,a3
204046c0:	00a03533          	snez	a0,a0
204046c4:	8d59                	or	a0,a0,a4
204046c6:	4781                	li	a5,0
204046c8:	bf5d                	j	2040467e <__subdf3+0x506>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 406)
204046ca:	ff8007b7          	lui	a5,0xff800
204046ce:	17fd                	addi	a5,a5,-1
204046d0:	8c99                	sub	s1,s1,a4
204046d2:	8fe1                	and	a5,a5,s0
204046d4:	be15                	j	20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204046d6:	87ba                	mv	a5,a4
204046d8:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204046da:	84ae                	mv	s1,a1
204046dc:	b635                	j	20404208 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204046de:	87ba                	mv	a5,a4
204046e0:	8532                	mv	a0,a2
204046e2:	b61d                	j	20404208 <__subdf3+0x90>
204046e4:	7ff00493          	li	s1,2047
204046e8:	4781                	li	a5,0
204046ea:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 47)
204046ec:	00879713          	slli	a4,a5,0x8
204046f0:	00075b63          	bgez	a4,20404706 <__subdf3+0x58e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 63)
204046f4:	0485                	addi	s1,s1,1
204046f6:	7ff00713          	li	a4,2047
204046fa:	06e48763          	beq	s1,a4,20404768 <__subdf3+0x5f0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
204046fe:	ff800737          	lui	a4,0xff800
20404702:	177d                	addi	a4,a4,-1
20404704:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 79)
20404706:	01d79713          	slli	a4,a5,0x1d
2040470a:	810d                	srli	a0,a0,0x3
2040470c:	8d59                	or	a0,a0,a4
2040470e:	7ff00713          	li	a4,2047
20404712:	838d                	srli	a5,a5,0x3
20404714:	00e49963          	bne	s1,a4,20404726 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 80)
20404718:	8d5d                	or	a0,a0,a5
2040471a:	4781                	li	a5,0
2040471c:	c509                	beqz	a0,20404726 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
2040471e:	000807b7          	lui	a5,0x80
20404722:	4501                	li	a0,0
20404724:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20404726:	7ff4f713          	andi	a4,s1,2047
2040472a:	07b2                	slli	a5,a5,0xc
2040472c:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
2040472e:	40f2                	lw	ra,28(sp)
20404730:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20404732:	83b1                	srli	a5,a5,0xc
20404734:	01f91593          	slli	a1,s2,0x1f
20404738:	8fd9                	or	a5,a5,a4
2040473a:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
2040473e:	44d2                	lw	s1,20(sp)
20404740:	4942                	lw	s2,16(sp)
20404742:	49b2                	lw	s3,12(sp)
20404744:	85ba                	mv	a1,a4
20404746:	6105                	addi	sp,sp,32
20404748:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
2040474a:	87ba                	mv	a5,a4
2040474c:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
2040474e:	84c2                	mv	s1,a6
20404750:	bdb9                	j	204045ae <__subdf3+0x436>
20404752:	4781                	li	a5,0
20404754:	4501                	li	a0,0
20404756:	4901                	li	s2,0
20404758:	bf51                	j	204046ec <__subdf3+0x574>
2040475a:	4781                	li	a5,0
2040475c:	bfed                	j	20404756 <__subdf3+0x5de>
2040475e:	4501                	li	a0,0
20404760:	4901                	li	s2,0
20404762:	004007b7          	lui	a5,0x400
20404766:	b1bd                	j	204043d4 <__subdf3+0x25c>
20404768:	4781                	li	a5,0
2040476a:	4501                	li	a0,0
2040476c:	bf69                	j	20404706 <__subdf3+0x58e>

2040476e <__fixdfsi>:
__fixdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
2040476e:	0145d713          	srli	a4,a1,0x14
20404772:	001006b7          	lui	a3,0x100
20404776:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
2040477a:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
2040477e:	3fe00613          	li	a2,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
20404782:	8fed                	and	a5,a5,a1
20404784:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20404786:	04e65463          	bge	a2,a4,204047ce <__fixdfsi+0x60>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 10)
2040478a:	41d00613          	li	a2,1053
2040478e:	00e65863          	bge	a2,a4,2040479e <__fixdfsi+0x30>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 13)
20404792:	80000537          	lui	a0,0x80000
20404796:	fff54513          	not	a0,a0
2040479a:	952e                	add	a0,a0,a1
2040479c:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 12)
2040479e:	8fd5                	or	a5,a5,a3
204047a0:	43300693          	li	a3,1075
204047a4:	8e99                	sub	a3,a3,a4
204047a6:	467d                	li	a2,31
204047a8:	00d64d63          	blt	a2,a3,204047c2 <__fixdfsi+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 29)
204047ac:	bed70713          	addi	a4,a4,-1043 # ff7ffbed <metal_segment_heap_target_end+0x7f7fbef1>
204047b0:	00e797b3          	sll	a5,a5,a4
204047b4:	00d55533          	srl	a0,a0,a3
204047b8:	8d5d                	or	a0,a0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 42)
204047ba:	c999                	beqz	a1,204047d0 <__fixdfsi+0x62>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 44)
204047bc:	40a00533          	neg	a0,a0
204047c0:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 41)
204047c2:	41300513          	li	a0,1043
204047c6:	8d19                	sub	a0,a0,a4
204047c8:	00a7d533          	srl	a0,a5,a0
204047cc:	b7fd                	j	204047ba <__fixdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
204047ce:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:47
204047d0:	8082                	ret

204047d2 <__fixunsdfsi>:
__fixunsdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
204047d2:	0145d713          	srli	a4,a1,0x14
204047d6:	001006b7          	lui	a3,0x100
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:36
204047da:	862a                	mv	a2,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
204047dc:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
204047e0:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
204047e4:	3fe00513          	li	a0,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
204047e8:	8fed                	and	a5,a5,a1
204047ea:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
204047ec:	02e55f63          	bge	a0,a4,2040482a <__fixunsdfsi+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 10)
204047f0:	4501                	li	a0,0
204047f2:	e591                	bnez	a1,204047fe <__fixunsdfsi+0x2c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
204047f4:	41e00593          	li	a1,1054
204047f8:	557d                	li	a0,-1
204047fa:	00e5d363          	bge	a1,a4,20404800 <__fixunsdfsi+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:47
204047fe:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 18)
20404800:	8fd5                	or	a5,a5,a3
20404802:	43300693          	li	a3,1075
20404806:	8e99                	sub	a3,a3,a4
20404808:	45fd                	li	a1,31
2040480a:	00d5ca63          	blt	a1,a3,2040481e <__fixunsdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 33)
2040480e:	bed70713          	addi	a4,a4,-1043
20404812:	00e797b3          	sll	a5,a5,a4
20404816:	00d65533          	srl	a0,a2,a3
2040481a:	8d5d                	or	a0,a0,a5
2040481c:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 45)
2040481e:	41300513          	li	a0,1043
20404822:	8d19                	sub	a0,a0,a4
20404824:	00a7d533          	srl	a0,a5,a0
20404828:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
2040482a:	4501                	li	a0,0
2040482c:	8082                	ret

2040482e <__floatsidf>:
__floatsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:37
2040482e:	1141                	addi	sp,sp,-16
20404830:	c606                	sw	ra,12(sp)
20404832:	c422                	sw	s0,8(sp)
20404834:	c226                	sw	s1,4(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
20404836:	cd31                	beqz	a0,20404892 <__floatsidf+0x64>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 1)
20404838:	41f55793          	srai	a5,a0,0x1f
2040483c:	00a7c433          	xor	s0,a5,a0
20404840:	8c1d                	sub	s0,s0,a5
20404842:	01f55493          	srli	s1,a0,0x1f
20404846:	8522                	mv	a0,s0
20404848:	2045                	jal	204048e8 <__clzsi2>
2040484a:	41e00713          	li	a4,1054
2040484e:	47a9                	li	a5,10
20404850:	8f09                	sub	a4,a4,a0
20404852:	02a7ca63          	blt	a5,a0,20404886 <__floatsidf+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 23)
20404856:	47ad                	li	a5,11
20404858:	8f89                	sub	a5,a5,a0
2040485a:	0555                	addi	a0,a0,21
2040485c:	00f457b3          	srl	a5,s0,a5
20404860:	00a41433          	sll	s0,s0,a0
20404864:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:42
20404866:	07b2                	slli	a5,a5,0xc
20404868:	7ff77713          	andi	a4,a4,2047
2040486c:	0752                	slli	a4,a4,0x14
2040486e:	83b1                	srli	a5,a5,0xc
20404870:	057e                	slli	a0,a0,0x1f
20404872:	8fd9                	or	a5,a5,a4
20404874:	00a7e733          	or	a4,a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:45
20404878:	40b2                	lw	ra,12(sp)
2040487a:	8522                	mv	a0,s0
2040487c:	4422                	lw	s0,8(sp)
2040487e:	4492                	lw	s1,4(sp)
20404880:	85ba                	mv	a1,a4
20404882:	0141                	addi	sp,sp,16
20404884:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 24)
20404886:	1555                	addi	a0,a0,-11
20404888:	00a417b3          	sll	a5,s0,a0
2040488c:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
2040488e:	4401                	li	s0,0
20404890:	bfd9                	j	20404866 <__floatsidf+0x38>
20404892:	4701                	li	a4,0
20404894:	4781                	li	a5,0
20404896:	bfe5                	j	2040488e <__floatsidf+0x60>

20404898 <__floatunsidf>:
__floatunsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:37
20404898:	1141                	addi	sp,sp,-16
2040489a:	c422                	sw	s0,8(sp)
2040489c:	c606                	sw	ra,12(sp)
2040489e:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
204048a0:	c129                	beqz	a0,204048e2 <__floatunsidf+0x4a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 6)
204048a2:	2099                	jal	204048e8 <__clzsi2>
204048a4:	41e00713          	li	a4,1054
204048a8:	47a9                	li	a5,10
204048aa:	8f09                	sub	a4,a4,a0
204048ac:	02a7c663          	blt	a5,a0,204048d8 <__floatunsidf+0x40>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 23)
204048b0:	47ad                	li	a5,11
204048b2:	8f89                	sub	a5,a5,a0
204048b4:	0555                	addi	a0,a0,21
204048b6:	00f457b3          	srl	a5,s0,a5
204048ba:	00a41433          	sll	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
204048be:	8522                	mv	a0,s0
204048c0:	40b2                	lw	ra,12(sp)
204048c2:	4422                	lw	s0,8(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:42
204048c4:	07b2                	slli	a5,a5,0xc
204048c6:	7ff77713          	andi	a4,a4,2047
204048ca:	0752                	slli	a4,a4,0x14
204048cc:	83b1                	srli	a5,a5,0xc
204048ce:	00e7e6b3          	or	a3,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
204048d2:	85b6                	mv	a1,a3
204048d4:	0141                	addi	sp,sp,16
204048d6:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 24)
204048d8:	1555                	addi	a0,a0,-11
204048da:	00a417b3          	sll	a5,s0,a0
204048de:	4401                	li	s0,0
204048e0:	bff9                	j	204048be <__floatunsidf+0x26>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
204048e2:	4781                	li	a5,0
204048e4:	4701                	li	a4,0
204048e6:	bfe1                	j	204048be <__floatunsidf+0x26>

204048e8 <__clzsi2>:
__clzsi2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
204048e8:	67c1                	lui	a5,0x10
204048ea:	02f57663          	bgeu	a0,a5,20404916 <__clzsi2+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 3)
204048ee:	0ff00793          	li	a5,255
204048f2:	00a7b7b3          	sltu	a5,a5,a0
204048f6:	078e                	slli	a5,a5,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 14)
204048f8:	02000713          	li	a4,32
204048fc:	8f1d                	sub	a4,a4,a5
204048fe:	00f557b3          	srl	a5,a0,a5
20404902:	00004517          	auipc	a0,0x4
20404906:	d3650513          	addi	a0,a0,-714 # 20408638 <__clz_tab>
2040490a:	97aa                	add	a5,a5,a0
2040490c:	0007c503          	lbu	a0,0(a5) # 10000 <__heap_size+0xf800>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:713 (discriminator 14)
20404910:	40a70533          	sub	a0,a4,a0
20404914:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 4)
20404916:	01000737          	lui	a4,0x1000
2040491a:	47c1                	li	a5,16
2040491c:	fce56ee3          	bltu	a0,a4,204048f8 <__clzsi2+0x10>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
20404920:	47e1                	li	a5,24
20404922:	bfd9                	j	204048f8 <__clzsi2+0x10>

20404924 <_write>:
_write():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:9
#include <unistd.h>

/* Write to a file.  */
ssize_t
_write(int file, const void *ptr, size_t len)
{
20404924:	7179                	addi	sp,sp,-48
20404926:	d606                	sw	ra,44(sp)
20404928:	d422                	sw	s0,40(sp)
2040492a:	1800                	addi	s0,sp,48
2040492c:	fca42e23          	sw	a0,-36(s0) # 7fffdc <__heap_size+0x7ff7dc>
20404930:	fcb42c23          	sw	a1,-40(s0)
20404934:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:10
  if (file != STDOUT_FILENO) {
20404938:	fdc42703          	lw	a4,-36(s0)
2040493c:	4785                	li	a5,1
2040493e:	00f70963          	beq	a4,a5,20404950 <_write+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:11
    errno = ENOSYS;
20404942:	28a9                	jal	2040499c <__errno>
20404944:	872a                	mv	a4,a0
20404946:	05800793          	li	a5,88
2040494a:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:12
    return -1;
2040494c:	57fd                	li	a5,-1
2040494e:	a82d                	j	20404988 <_write+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:15
  }

  const char *bptr = ptr;
20404950:	fd842783          	lw	a5,-40(s0)
20404954:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16
  for (size_t i = 0; i < len; ++i)
20404958:	fe042623          	sw	zero,-20(s0)
2040495c:	a839                	j	2040497a <_write+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:17 (discriminator 3)
    metal_tty_putc(bptr[i]);
2040495e:	fe842703          	lw	a4,-24(s0)
20404962:	fec42783          	lw	a5,-20(s0)
20404966:	97ba                	add	a5,a5,a4
20404968:	0007c783          	lbu	a5,0(a5)
2040496c:	853e                	mv	a0,a5
2040496e:	2c91                	jal	20404bc2 <metal_tty_putc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 3)
  for (size_t i = 0; i < len; ++i)
20404970:	fec42783          	lw	a5,-20(s0)
20404974:	0785                	addi	a5,a5,1
20404976:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 1)
2040497a:	fec42703          	lw	a4,-20(s0)
2040497e:	fd442783          	lw	a5,-44(s0)
20404982:	fcf76ee3          	bltu	a4,a5,2040495e <_write+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:18
  return 0;
20404986:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:19
}
20404988:	853e                	mv	a0,a5
2040498a:	50b2                	lw	ra,44(sp)
2040498c:	5422                	lw	s0,40(sp)
2040498e:	6145                	addi	sp,sp,48
20404990:	8082                	ret

20404992 <atexit>:
atexit():
20404992:	85aa                	mv	a1,a0
20404994:	4681                	li	a3,0
20404996:	4601                	li	a2,0
20404998:	4501                	li	a0,0
2040499a:	a8f1                	j	20404a76 <__register_exitproc>

2040499c <__errno>:
__errno():
2040499c:	5fbfe797          	auipc	a5,0x5fbfe
204049a0:	4d478793          	addi	a5,a5,1236 # 80002e70 <_impure_ptr>
204049a4:	4388                	lw	a0,0(a5)
204049a6:	8082                	ret

204049a8 <exit>:
exit():
204049a8:	1141                	addi	sp,sp,-16
204049aa:	c422                	sw	s0,8(sp)
204049ac:	c606                	sw	ra,12(sp)
204049ae:	00000797          	auipc	a5,0x0
204049b2:	14c78793          	addi	a5,a5,332 # 20404afa <__call_exitprocs>
204049b6:	842a                	mv	s0,a0
204049b8:	c399                	beqz	a5,204049be <exit+0x16>
204049ba:	4581                	li	a1,0
204049bc:	2a3d                	jal	20404afa <__call_exitprocs>
204049be:	5fbfe797          	auipc	a5,0x5fbfe
204049c2:	4b678793          	addi	a5,a5,1206 # 80002e74 <_global_impure_ptr>
204049c6:	4388                	lw	a0,0(a5)
204049c8:	551c                	lw	a5,40(a0)
204049ca:	c391                	beqz	a5,204049ce <exit+0x26>
204049cc:	9782                	jalr	a5
204049ce:	8522                	mv	a0,s0
204049d0:	09f030ef          	jal	ra,2040826e <_exit>

204049d4 <__libc_fini_array>:
__libc_fini_array():
204049d4:	1141                	addi	sp,sp,-16
204049d6:	00004797          	auipc	a5,0x4
204049da:	0b678793          	addi	a5,a5,182 # 20408a8c <__fini_array_end>
204049de:	c422                	sw	s0,8(sp)
204049e0:	00004417          	auipc	s0,0x4
204049e4:	0ac40413          	addi	s0,s0,172 # 20408a8c <__fini_array_end>
204049e8:	8c1d                	sub	s0,s0,a5
204049ea:	c226                	sw	s1,4(sp)
204049ec:	c606                	sw	ra,12(sp)
204049ee:	8409                	srai	s0,s0,0x2
204049f0:	84be                	mv	s1,a5
204049f2:	e411                	bnez	s0,204049fe <__libc_fini_array+0x2a>
204049f4:	40b2                	lw	ra,12(sp)
204049f6:	4422                	lw	s0,8(sp)
204049f8:	4492                	lw	s1,4(sp)
204049fa:	0141                	addi	sp,sp,16
204049fc:	8082                	ret
204049fe:	147d                	addi	s0,s0,-1
20404a00:	00241793          	slli	a5,s0,0x2
20404a04:	97a6                	add	a5,a5,s1
20404a06:	439c                	lw	a5,0(a5)
20404a08:	9782                	jalr	a5
20404a0a:	b7e5                	j	204049f2 <__libc_fini_array+0x1e>

20404a0c <__libc_init_array>:
__libc_init_array():
20404a0c:	1141                	addi	sp,sp,-16
20404a0e:	00004797          	auipc	a5,0x4
20404a12:	07a78793          	addi	a5,a5,122 # 20408a88 <__init_array_start>
20404a16:	c422                	sw	s0,8(sp)
20404a18:	00004417          	auipc	s0,0x4
20404a1c:	07040413          	addi	s0,s0,112 # 20408a88 <__init_array_start>
20404a20:	8c1d                	sub	s0,s0,a5
20404a22:	c226                	sw	s1,4(sp)
20404a24:	c04a                	sw	s2,0(sp)
20404a26:	c606                	sw	ra,12(sp)
20404a28:	8409                	srai	s0,s0,0x2
20404a2a:	4481                	li	s1,0
20404a2c:	893e                	mv	s2,a5
20404a2e:	02849663          	bne	s1,s0,20404a5a <__libc_init_array+0x4e>
20404a32:	00004797          	auipc	a5,0x4
20404a36:	05678793          	addi	a5,a5,86 # 20408a88 <__init_array_start>
20404a3a:	00004417          	auipc	s0,0x4
20404a3e:	05240413          	addi	s0,s0,82 # 20408a8c <__fini_array_end>
20404a42:	8c1d                	sub	s0,s0,a5
20404a44:	8409                	srai	s0,s0,0x2
20404a46:	4481                	li	s1,0
20404a48:	893e                	mv	s2,a5
20404a4a:	00849f63          	bne	s1,s0,20404a68 <__libc_init_array+0x5c>
20404a4e:	40b2                	lw	ra,12(sp)
20404a50:	4422                	lw	s0,8(sp)
20404a52:	4492                	lw	s1,4(sp)
20404a54:	4902                	lw	s2,0(sp)
20404a56:	0141                	addi	sp,sp,16
20404a58:	8082                	ret
20404a5a:	00249793          	slli	a5,s1,0x2
20404a5e:	97ca                	add	a5,a5,s2
20404a60:	439c                	lw	a5,0(a5)
20404a62:	0485                	addi	s1,s1,1
20404a64:	9782                	jalr	a5
20404a66:	b7e1                	j	20404a2e <__libc_init_array+0x22>
20404a68:	00249793          	slli	a5,s1,0x2
20404a6c:	97ca                	add	a5,a5,s2
20404a6e:	439c                	lw	a5,0(a5)
20404a70:	0485                	addi	s1,s1,1
20404a72:	9782                	jalr	a5
20404a74:	bfd9                	j	20404a4a <__libc_init_array+0x3e>

20404a76 <__register_exitproc>:
__register_exitproc():
20404a76:	5fbfe797          	auipc	a5,0x5fbfe
20404a7a:	42278793          	addi	a5,a5,1058 # 80002e98 <metal_segment_data_target_end>
20404a7e:	439c                	lw	a5,0(a5)
20404a80:	8e2a                	mv	t3,a0
20404a82:	e38d                	bnez	a5,20404aa4 <__register_exitproc+0x2e>
20404a84:	9fc18713          	addi	a4,gp,-1540 # 8000306c <_global_atexit0>
20404a88:	5fbfe797          	auipc	a5,0x5fbfe
20404a8c:	40e7a823          	sw	a4,1040(a5) # 80002e98 <metal_segment_data_target_end>
20404a90:	dfbfb517          	auipc	a0,0xdfbfb
20404a94:	57050513          	addi	a0,a0,1392 # 0 <__metal_boot_hart>
20404a98:	87ba                	mv	a5,a4
20404a9a:	c509                	beqz	a0,20404aa4 <__register_exitproc+0x2e>
20404a9c:	411c                	lw	a5,0(a0)
20404a9e:	a8f1a223          	sw	a5,-1404(gp) # 800030f4 <_global_atexit0+0x88>
20404aa2:	87ba                	mv	a5,a4
20404aa4:	43d8                	lw	a4,4(a5)
20404aa6:	487d                	li	a6,31
20404aa8:	557d                	li	a0,-1
20404aaa:	04e84763          	blt	a6,a4,20404af8 <__register_exitproc+0x82>
20404aae:	020e0e63          	beqz	t3,20404aea <__register_exitproc+0x74>
20404ab2:	0887a803          	lw	a6,136(a5)
20404ab6:	04080163          	beqz	a6,20404af8 <__register_exitproc+0x82>
20404aba:	00271893          	slli	a7,a4,0x2
20404abe:	98c2                	add	a7,a7,a6
20404ac0:	00c8a023          	sw	a2,0(a7)
20404ac4:	10082303          	lw	t1,256(a6)
20404ac8:	4605                	li	a2,1
20404aca:	00e61633          	sll	a2,a2,a4
20404ace:	00c36333          	or	t1,t1,a2
20404ad2:	10682023          	sw	t1,256(a6)
20404ad6:	08d8a023          	sw	a3,128(a7)
20404ada:	4689                	li	a3,2
20404adc:	00de1763          	bne	t3,a3,20404aea <__register_exitproc+0x74>
20404ae0:	10482683          	lw	a3,260(a6)
20404ae4:	8e55                	or	a2,a2,a3
20404ae6:	10c82223          	sw	a2,260(a6)
20404aea:	00170693          	addi	a3,a4,1 # 1000001 <__heap_size+0xfff801>
20404aee:	070a                	slli	a4,a4,0x2
20404af0:	c3d4                	sw	a3,4(a5)
20404af2:	97ba                	add	a5,a5,a4
20404af4:	c78c                	sw	a1,8(a5)
20404af6:	4501                	li	a0,0
20404af8:	8082                	ret

20404afa <__call_exitprocs>:
__call_exitprocs():
20404afa:	7179                	addi	sp,sp,-48
20404afc:	cc52                	sw	s4,24(sp)
20404afe:	ca56                	sw	s5,20(sp)
20404b00:	c85a                	sw	s6,16(sp)
20404b02:	c65e                	sw	s7,12(sp)
20404b04:	d606                	sw	ra,44(sp)
20404b06:	d422                	sw	s0,40(sp)
20404b08:	d226                	sw	s1,36(sp)
20404b0a:	d04a                	sw	s2,32(sp)
20404b0c:	ce4e                	sw	s3,28(sp)
20404b0e:	c462                	sw	s8,8(sp)
20404b10:	8b2a                	mv	s6,a0
20404b12:	8a2e                	mv	s4,a1
20404b14:	5fbfea97          	auipc	s5,0x5fbfe
20404b18:	384a8a93          	addi	s5,s5,900 # 80002e98 <metal_segment_data_target_end>
20404b1c:	4b85                	li	s7,1
20404b1e:	000aa403          	lw	s0,0(s5)
20404b22:	c811                	beqz	s0,20404b36 <__call_exitprocs+0x3c>
20404b24:	4044                	lw	s1,4(s0)
20404b26:	08842983          	lw	s3,136(s0)
20404b2a:	fff48913          	addi	s2,s1,-1
20404b2e:	048a                	slli	s1,s1,0x2
20404b30:	94a2                	add	s1,s1,s0
20404b32:	00095e63          	bgez	s2,20404b4e <__call_exitprocs+0x54>
20404b36:	50b2                	lw	ra,44(sp)
20404b38:	5422                	lw	s0,40(sp)
20404b3a:	5492                	lw	s1,36(sp)
20404b3c:	5902                	lw	s2,32(sp)
20404b3e:	49f2                	lw	s3,28(sp)
20404b40:	4a62                	lw	s4,24(sp)
20404b42:	4ad2                	lw	s5,20(sp)
20404b44:	4b42                	lw	s6,16(sp)
20404b46:	4bb2                	lw	s7,12(sp)
20404b48:	4c22                	lw	s8,8(sp)
20404b4a:	6145                	addi	sp,sp,48
20404b4c:	8082                	ret
20404b4e:	000a0e63          	beqz	s4,20404b6a <__call_exitprocs+0x70>
20404b52:	00099563          	bnez	s3,20404b5c <__call_exitprocs+0x62>
20404b56:	197d                	addi	s2,s2,-1
20404b58:	14f1                	addi	s1,s1,-4
20404b5a:	bfe1                	j	20404b32 <__call_exitprocs+0x38>
20404b5c:	00291793          	slli	a5,s2,0x2
20404b60:	97ce                	add	a5,a5,s3
20404b62:	0807a783          	lw	a5,128(a5)
20404b66:	ff4798e3          	bne	a5,s4,20404b56 <__call_exitprocs+0x5c>
20404b6a:	4058                	lw	a4,4(s0)
20404b6c:	40dc                	lw	a5,4(s1)
20404b6e:	177d                	addi	a4,a4,-1
20404b70:	03271863          	bne	a4,s2,20404ba0 <__call_exitprocs+0xa6>
20404b74:	01242223          	sw	s2,4(s0)
20404b78:	dff9                	beqz	a5,20404b56 <__call_exitprocs+0x5c>
20404b7a:	00442c03          	lw	s8,4(s0)
20404b7e:	00098863          	beqz	s3,20404b8e <__call_exitprocs+0x94>
20404b82:	1009a683          	lw	a3,256(s3)
20404b86:	012b9733          	sll	a4,s7,s2
20404b8a:	8ef9                	and	a3,a3,a4
20404b8c:	ee89                	bnez	a3,20404ba6 <__call_exitprocs+0xac>
20404b8e:	9782                	jalr	a5
20404b90:	4058                	lw	a4,4(s0)
20404b92:	000aa783          	lw	a5,0(s5)
20404b96:	f98714e3          	bne	a4,s8,20404b1e <__call_exitprocs+0x24>
20404b9a:	faf40ee3          	beq	s0,a5,20404b56 <__call_exitprocs+0x5c>
20404b9e:	b741                	j	20404b1e <__call_exitprocs+0x24>
20404ba0:	0004a223          	sw	zero,4(s1)
20404ba4:	bfd1                	j	20404b78 <__call_exitprocs+0x7e>
20404ba6:	00291693          	slli	a3,s2,0x2
20404baa:	96ce                	add	a3,a3,s3
20404bac:	428c                	lw	a1,0(a3)
20404bae:	1049a683          	lw	a3,260(s3)
20404bb2:	8f75                	and	a4,a4,a3
20404bb4:	e701                	bnez	a4,20404bbc <__call_exitprocs+0xc2>
20404bb6:	855a                	mv	a0,s6
20404bb8:	9782                	jalr	a5
20404bba:	bfd9                	j	20404b90 <__call_exitprocs+0x96>
20404bbc:	852e                	mv	a0,a1
20404bbe:	9782                	jalr	a5
20404bc0:	bfc1                	j	20404b90 <__call_exitprocs+0x96>

20404bc2 <metal_tty_putc>:
metal_tty_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:12

#if defined(__METAL_DT_STDOUT_UART_HANDLE)
/* This implementation serves as a small shim that interfaces with the first
 * UART on a system. */
int metal_tty_putc(int c)
{
20404bc2:	1101                	addi	sp,sp,-32
20404bc4:	ce06                	sw	ra,28(sp)
20404bc6:	cc22                	sw	s0,24(sp)
20404bc8:	1000                	addi	s0,sp,32
20404bca:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:13
    if (c == '\n') {
20404bce:	fec42703          	lw	a4,-20(s0)
20404bd2:	47a9                	li	a5,10
20404bd4:	00f71463          	bne	a4,a5,20404bdc <metal_tty_putc+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:14
        metal_tty_putc_raw( '\r' );
20404bd8:	4535                	li	a0,13
20404bda:	2811                	jal	20404bee <metal_tty_putc_raw>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:16
    }
    return metal_tty_putc_raw( c );
20404bdc:	fec42503          	lw	a0,-20(s0)
20404be0:	2039                	jal	20404bee <metal_tty_putc_raw>
20404be2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:17
}
20404be4:	853e                	mv	a0,a5
20404be6:	40f2                	lw	ra,28(sp)
20404be8:	4462                	lw	s0,24(sp)
20404bea:	6105                	addi	sp,sp,32
20404bec:	8082                	ret

20404bee <metal_tty_putc_raw>:
metal_tty_putc_raw():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:20

int metal_tty_putc_raw(int c)
{
20404bee:	1101                	addi	sp,sp,-32
20404bf0:	ce06                	sw	ra,28(sp)
20404bf2:	cc22                	sw	s0,24(sp)
20404bf4:	1000                	addi	s0,sp,32
20404bf6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:21
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20404bfa:	fec42583          	lw	a1,-20(s0)
20404bfe:	800037b7          	lui	a5,0x80003
20404c02:	e5078513          	addi	a0,a5,-432 # 80002e50 <metal_segment_heap_target_end+0xfffff154>
20404c06:	28b1                	jal	20404c62 <metal_uart_putc>
20404c08:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:22
}
20404c0a:	853e                	mv	a0,a5
20404c0c:	40f2                	lw	ra,28(sp)
20404c0e:	4462                	lw	s0,24(sp)
20404c10:	6105                	addi	sp,sp,32
20404c12:	8082                	ret

20404c14 <metal_tty_init>:
metal_tty_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:40
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

static void metal_tty_init(void) __attribute__((constructor));
static void metal_tty_init(void)
{
20404c14:	1141                	addi	sp,sp,-16
20404c16:	c606                	sw	ra,12(sp)
20404c18:	c422                	sw	s0,8(sp)
20404c1a:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:41
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20404c1c:	67f1                	lui	a5,0x1c
20404c1e:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20404c22:	800037b7          	lui	a5,0x80003
20404c26:	e5078513          	addi	a0,a5,-432 # 80002e50 <metal_segment_heap_target_end+0xfffff154>
20404c2a:	2031                	jal	20404c36 <metal_uart_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:42
}
20404c2c:	0001                	nop
20404c2e:	40b2                	lw	ra,12(sp)
20404c30:	4422                	lw	s0,8(sp)
20404c32:	0141                	addi	sp,sp,16
20404c34:	8082                	ret

20404c36 <metal_uart_init>:
metal_uart_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:44
 * other method on the UART can be invoked. It is invalid to initialize a UART more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) { uart->vtable->init(uart, baud_rate); }
20404c36:	1101                	addi	sp,sp,-32
20404c38:	ce06                	sw	ra,28(sp)
20404c3a:	cc22                	sw	s0,24(sp)
20404c3c:	1000                	addi	s0,sp,32
20404c3e:	fea42623          	sw	a0,-20(s0)
20404c42:	feb42423          	sw	a1,-24(s0)
20404c46:	fec42783          	lw	a5,-20(s0)
20404c4a:	439c                	lw	a5,0(a5)
20404c4c:	439c                	lw	a5,0(a5)
20404c4e:	fe842583          	lw	a1,-24(s0)
20404c52:	fec42503          	lw	a0,-20(s0)
20404c56:	9782                	jalr	a5
20404c58:	0001                	nop
20404c5a:	40f2                	lw	ra,28(sp)
20404c5c:	4462                	lw	s0,24(sp)
20404c5e:	6105                	addi	sp,sp,32
20404c60:	8082                	ret

20404c62 <metal_uart_putc>:
metal_uart_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:52
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) { return uart->vtable->putc(uart, c); }
20404c62:	1101                	addi	sp,sp,-32
20404c64:	ce06                	sw	ra,28(sp)
20404c66:	cc22                	sw	s0,24(sp)
20404c68:	1000                	addi	s0,sp,32
20404c6a:	fea42623          	sw	a0,-20(s0)
20404c6e:	feb42423          	sw	a1,-24(s0)
20404c72:	fec42783          	lw	a5,-20(s0)
20404c76:	439c                	lw	a5,0(a5)
20404c78:	43dc                	lw	a5,4(a5)
20404c7a:	fe842583          	lw	a1,-24(s0)
20404c7e:	fec42503          	lw	a0,-20(s0)
20404c82:	9782                	jalr	a5
20404c84:	87aa                	mv	a5,a0
20404c86:	853e                	mv	a0,a5
20404c88:	40f2                	lw	ra,28(sp)
20404c8a:	4462                	lw	s0,24(sp)
20404c8c:	6105                	addi	sp,sp,32
20404c8e:	8082                	ret

20404c90 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:85
 * @brief Set the baud rate of the UART peripheral
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart, int baud_rate) { return uart->vtable->set_baud_rate(uart, baud_rate); }
20404c90:	1101                	addi	sp,sp,-32
20404c92:	ce06                	sw	ra,28(sp)
20404c94:	cc22                	sw	s0,24(sp)
20404c96:	1000                	addi	s0,sp,32
20404c98:	fea42623          	sw	a0,-20(s0)
20404c9c:	feb42423          	sw	a1,-24(s0)
20404ca0:	fec42783          	lw	a5,-20(s0)
20404ca4:	439c                	lw	a5,0(a5)
20404ca6:	4bdc                	lw	a5,20(a5)
20404ca8:	fe842583          	lw	a1,-24(s0)
20404cac:	fec42503          	lw	a0,-20(s0)
20404cb0:	9782                	jalr	a5
20404cb2:	87aa                	mv	a5,a0
20404cb4:	853e                	mv	a0,a5
20404cb6:	40f2                	lw	ra,28(sp)
20404cb8:	4462                	lw	s0,24(sp)
20404cba:	6105                	addi	sp,sp,32
20404cbc:	8082                	ret

20404cbe <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:136
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20404cbe:	1101                	addi	sp,sp,-32
20404cc0:	ce22                	sw	s0,28(sp)
20404cc2:	1000                	addi	s0,sp,32
20404cc4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:137
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20404cc8:	fec42703          	lw	a4,-20(s0)
20404ccc:	800037b7          	lui	a5,0x80003
20404cd0:	e7c78793          	addi	a5,a5,-388 # 80002e7c <metal_segment_heap_target_end+0xfffff180>
20404cd4:	00f71563          	bne	a4,a5,20404cde <__metal_driver_sifive_clint0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:138
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20404cd8:	020007b7          	lui	a5,0x2000
20404cdc:	a011                	j	20404ce0 <__metal_driver_sifive_clint0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:141
	}
	else {
		return 0;
20404cde:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:143
	}
}
20404ce0:	853e                	mv	a0,a5
20404ce2:	4472                	lw	s0,28(sp)
20404ce4:	6105                	addi	sp,sp,32
20404ce6:	8082                	ret

20404ce8 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:156
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20404ce8:	1101                	addi	sp,sp,-32
20404cea:	ce22                	sw	s0,28(sp)
20404cec:	1000                	addi	s0,sp,32
20404cee:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:157
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20404cf2:	fec42703          	lw	a4,-20(s0)
20404cf6:	800037b7          	lui	a5,0x80003
20404cfa:	e7c78793          	addi	a5,a5,-388 # 80002e7c <metal_segment_heap_target_end+0xfffff180>
20404cfe:	00f71463          	bne	a4,a5,20404d06 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:158
		return METAL_MAX_CLINT_INTERRUPTS;
20404d02:	4789                	li	a5,2
20404d04:	a011                	j	20404d08 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:161
	}
	else {
		return 0;
20404d06:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:163
	}
}
20404d08:	853e                	mv	a0,a5
20404d0a:	4472                	lw	s0,28(sp)
20404d0c:	6105                	addi	sp,sp,32
20404d0e:	8082                	ret

20404d10 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:166

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20404d10:	1101                	addi	sp,sp,-32
20404d12:	ce22                	sw	s0,28(sp)
20404d14:	1000                	addi	s0,sp,32
20404d16:	fea42623          	sw	a0,-20(s0)
20404d1a:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:167
	if (idx == 0) {
20404d1e:	fe842783          	lw	a5,-24(s0)
20404d22:	e791                	bnez	a5,20404d2e <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:168
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20404d24:	800027b7          	lui	a5,0x80002
20404d28:	79878793          	addi	a5,a5,1944 # 80002798 <metal_segment_heap_target_end+0xffffea9c>
20404d2c:	a821                	j	20404d44 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:170
	}
	else if (idx == 1) {
20404d2e:	fe842703          	lw	a4,-24(s0)
20404d32:	4785                	li	a5,1
20404d34:	00f71763          	bne	a4,a5,20404d42 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:171
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20404d38:	800027b7          	lui	a5,0x80002
20404d3c:	79878793          	addi	a5,a5,1944 # 80002798 <metal_segment_heap_target_end+0xffffea9c>
20404d40:	a011                	j	20404d44 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:174
	}
	else {
		return NULL;
20404d42:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:176
	}
}
20404d44:	853e                	mv	a0,a5
20404d46:	4472                	lw	s0,28(sp)
20404d48:	6105                	addi	sp,sp,32
20404d4a:	8082                	ret

20404d4c <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:179

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20404d4c:	1101                	addi	sp,sp,-32
20404d4e:	ce22                	sw	s0,28(sp)
20404d50:	1000                	addi	s0,sp,32
20404d52:	fea42623          	sw	a0,-20(s0)
20404d56:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:180
	if (idx == 0) {
20404d5a:	fe842783          	lw	a5,-24(s0)
20404d5e:	e399                	bnez	a5,20404d64 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:181
		return 3;
20404d60:	478d                	li	a5,3
20404d62:	a809                	j	20404d74 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:183
	}
	else if (idx == 1) {
20404d64:	fe842703          	lw	a4,-24(s0)
20404d68:	4785                	li	a5,1
20404d6a:	00f71463          	bne	a4,a5,20404d72 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:184
		return 7;
20404d6e:	479d                	li	a5,7
20404d70:	a011                	j	20404d74 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:187
	}
	else {
		return 0;
20404d72:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:189
	}
}
20404d74:	853e                	mv	a0,a5
20404d76:	4472                	lw	s0,28(sp)
20404d78:	6105                	addi	sp,sp,32
20404d7a:	8082                	ret

20404d7c <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/cpu.h>
#include <metal/drivers/riscv_clint0.h>
#include <metal/machine.h>

unsigned long long __metal_clint0_mtime_get (struct __metal_driver_riscv_clint0 *clint)
{
20404d7c:	715d                	addi	sp,sp,-80
20404d7e:	c686                	sw	ra,76(sp)
20404d80:	c4a2                	sw	s0,72(sp)
20404d82:	c2ca                	sw	s2,68(sp)
20404d84:	c0ce                	sw	s3,64(sp)
20404d86:	de52                	sw	s4,60(sp)
20404d88:	dc56                	sw	s5,56(sp)
20404d8a:	da5a                	sw	s6,52(sp)
20404d8c:	d85e                	sw	s7,48(sp)
20404d8e:	d662                	sw	s8,44(sp)
20404d90:	d466                	sw	s9,40(sp)
20404d92:	0880                	addi	s0,sp,80
20404d94:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:16
    __metal_io_u32 lo, hi;
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
20404d98:	fbc42783          	lw	a5,-68(s0)
20404d9c:	853e                	mv	a0,a5
20404d9e:	3705                	jal	20404cbe <__metal_driver_sifive_clint0_control_base>
20404da0:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:20 (discriminator 1)

    /* Guard against rollover when reading */
    do {
	hi = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
20404da4:	fcc42703          	lw	a4,-52(s0)
20404da8:	67b1                	lui	a5,0xc
20404daa:	17f1                	addi	a5,a5,-4
20404dac:	97ba                	add	a5,a5,a4
20404dae:	439c                	lw	a5,0(a5)
20404db0:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)
	lo = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
20404db4:	fcc42703          	lw	a4,-52(s0)
20404db8:	67b1                	lui	a5,0xc
20404dba:	17e1                	addi	a5,a5,-8
20404dbc:	97ba                	add	a5,a5,a4
20404dbe:	439c                	lw	a5,0(a5)
20404dc0:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:22 (discriminator 1)
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4)) != hi);
20404dc4:	fcc42703          	lw	a4,-52(s0)
20404dc8:	67b1                	lui	a5,0xc
20404dca:	17f1                	addi	a5,a5,-4
20404dcc:	97ba                	add	a5,a5,a4
20404dce:	439c                	lw	a5,0(a5)
20404dd0:	fc842703          	lw	a4,-56(s0)
20404dd4:	fcf718e3          	bne	a4,a5,20404da4 <__metal_clint0_mtime_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:24

    return (((unsigned long long)hi) << 32) | lo;
20404dd8:	fc842783          	lw	a5,-56(s0)
20404ddc:	8c3e                	mv	s8,a5
20404dde:	4c81                	li	s9,0
20404de0:	000c1993          	slli	s3,s8,0x0
20404de4:	4901                	li	s2,0
20404de6:	fc442783          	lw	a5,-60(s0)
20404dea:	8a3e                	mv	s4,a5
20404dec:	4a81                	li	s5,0
20404dee:	01496b33          	or	s6,s2,s4
20404df2:	0159ebb3          	or	s7,s3,s5
20404df6:	87da                	mv	a5,s6
20404df8:	885e                	mv	a6,s7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25
}
20404dfa:	853e                	mv	a0,a5
20404dfc:	85c2                	mv	a1,a6
20404dfe:	40b6                	lw	ra,76(sp)
20404e00:	4426                	lw	s0,72(sp)
20404e02:	4916                	lw	s2,68(sp)
20404e04:	4986                	lw	s3,64(sp)
20404e06:	5a72                	lw	s4,60(sp)
20404e08:	5ae2                	lw	s5,56(sp)
20404e0a:	5b52                	lw	s6,52(sp)
20404e0c:	5bc2                	lw	s7,48(sp)
20404e0e:	5c32                	lw	s8,44(sp)
20404e10:	5ca2                	lw	s9,40(sp)
20404e12:	6161                	addi	sp,sp,80
20404e14:	8082                	ret

20404e16 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time)
{   
20404e16:	7179                	addi	sp,sp,-48
20404e18:	d606                	sw	ra,44(sp)
20404e1a:	d422                	sw	s0,40(sp)
20404e1c:	d24a                	sw	s2,36(sp)
20404e1e:	d04e                	sw	s3,32(sp)
20404e20:	1800                	addi	s0,sp,48
20404e22:	fca42e23          	sw	a0,-36(s0)
20404e26:	fcb42c23          	sw	a1,-40(s0)
20404e2a:	fcc42823          	sw	a2,-48(s0)
20404e2e:	fcd42a23          	sw	a3,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:31
    struct __metal_driver_riscv_clint0 *clint =
20404e32:	fdc42783          	lw	a5,-36(s0)
20404e36:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:33
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
20404e3a:	fec42783          	lw	a5,-20(s0)
20404e3e:	853e                	mv	a0,a5
20404e40:	3dbd                	jal	20404cbe <__metal_driver_sifive_clint0_control_base>
20404e42:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:40
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = 0xFFFFFFFF;
20404e46:	fd842783          	lw	a5,-40(s0)
20404e4a:	078e                	slli	a5,a5,0x3
20404e4c:	873e                	mv	a4,a5
20404e4e:	fe842783          	lw	a5,-24(s0)
20404e52:	973e                	add	a4,a4,a5
20404e54:	6791                	lui	a5,0x4
20404e56:	0791                	addi	a5,a5,4
20404e58:	97ba                	add	a5,a5,a4
20404e5a:	873e                	mv	a4,a5
20404e5c:	57fd                	li	a5,-1
20404e5e:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:41
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE)) = (__metal_io_u32)time;
20404e60:	fd842783          	lw	a5,-40(s0)
20404e64:	078e                	slli	a5,a5,0x3
20404e66:	873e                	mv	a4,a5
20404e68:	fe842783          	lw	a5,-24(s0)
20404e6c:	973e                	add	a4,a4,a5
20404e6e:	6791                	lui	a5,0x4
20404e70:	97ba                	add	a5,a5,a4
20404e72:	873e                	mv	a4,a5
20404e74:	fd042783          	lw	a5,-48(s0)
20404e78:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:42
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = (__metal_io_u32)(time >> 32);
20404e7a:	fd442783          	lw	a5,-44(s0)
20404e7e:	0007d913          	srli	s2,a5,0x0
20404e82:	4981                	li	s3,0
20404e84:	fd842783          	lw	a5,-40(s0)
20404e88:	078e                	slli	a5,a5,0x3
20404e8a:	873e                	mv	a4,a5
20404e8c:	fe842783          	lw	a5,-24(s0)
20404e90:	973e                	add	a4,a4,a5
20404e92:	6791                	lui	a5,0x4
20404e94:	0791                	addi	a5,a5,4
20404e96:	97ba                	add	a5,a5,a4
20404e98:	874a                	mv	a4,s2
20404e9a:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:43
    return 0;
20404e9c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:44
}
20404e9e:	853e                	mv	a0,a5
20404ea0:	50b2                	lw	ra,44(sp)
20404ea2:	5422                	lw	s0,40(sp)
20404ea4:	5912                	lw	s2,36(sp)
20404ea6:	5982                	lw	s3,32(sp)
20404ea8:	6145                	addi	sp,sp,48
20404eaa:	8082                	ret

20404eac <_get_cpu_intc>:
_get_cpu_intc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47

static struct metal_interrupt *_get_cpu_intc()
{
20404eac:	1101                	addi	sp,sp,-32
20404eae:	ce06                	sw	ra,28(sp)
20404eb0:	cc22                	sw	s0,24(sp)
20404eb2:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    int hartid = 0;
20404eb4:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
    __asm__ volatile("csrr %[hartid], mhartid"
20404eb8:	f14027f3          	csrr	a5,mhartid
20404ebc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:52
                     : [hartid] "=r" (hartid) :: "memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20404ec0:	fec42783          	lw	a5,-20(s0)
20404ec4:	853e                	mv	a0,a5
20404ec6:	256030ef          	jal	ra,2040811c <metal_cpu_get>
20404eca:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54

    return metal_cpu_interrupt_controller(cpu);
20404ece:	fe842503          	lw	a0,-24(s0)
20404ed2:	224030ef          	jal	ra,204080f6 <metal_cpu_interrupt_controller>
20404ed6:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
20404ed8:	853e                	mv	a0,a5
20404eda:	40f2                	lw	ra,28(sp)
20404edc:	4462                	lw	s0,24(sp)
20404ede:	6105                	addi	sp,sp,32
20404ee0:	8082                	ret

20404ee2 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58

void __metal_driver_riscv_clint0_init (struct metal_interrupt *controller)
{
20404ee2:	7139                	addi	sp,sp,-64
20404ee4:	de06                	sw	ra,60(sp)
20404ee6:	dc22                	sw	s0,56(sp)
20404ee8:	0080                	addi	s0,sp,64
20404eea:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20404eee:	fcc42503          	lw	a0,-52(s0)
20404ef2:	3bdd                	jal	20404ce8 <__metal_driver_sifive_clint0_num_interrupts>
20404ef4:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:60
    struct __metal_driver_riscv_clint0 *clint =
20404ef8:	fcc42783          	lw	a5,-52(s0)
20404efc:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:63
                              (struct __metal_driver_riscv_clint0 *)(controller);

    if ( !clint->init_done ) {
20404f00:	fe442783          	lw	a5,-28(s0)
20404f04:	43dc                	lw	a5,4(a5)
20404f06:	efa9                	bnez	a5,20404f60 <__metal_driver_riscv_clint0_init+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
	/* Register its interrupts with with parent controller, aka sw and timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20404f08:	fe042623          	sw	zero,-20(s0)
20404f0c:	a081                	j	20404f4c <__metal_driver_riscv_clint0_init+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:66 (discriminator 3)
	  struct metal_interrupt *intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20404f0e:	fec42583          	lw	a1,-20(s0)
20404f12:	fcc42503          	lw	a0,-52(s0)
20404f16:	3bed                	jal	20404d10 <__metal_driver_sifive_clint0_interrupt_parents>
20404f18:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67 (discriminator 3)
	  int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20404f1c:	fec42583          	lw	a1,-20(s0)
20404f20:	fcc42503          	lw	a0,-52(s0)
20404f24:	3525                	jal	20404d4c <__metal_driver_sifive_clint0_interrupt_lines>
20404f26:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:68 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20404f2a:	fe042783          	lw	a5,-32(s0)
20404f2e:	439c                	lw	a5,0(a5)
20404f30:	4fdc                	lw	a5,28(a5)
20404f32:	fcc42683          	lw	a3,-52(s0)
20404f36:	4601                	li	a2,0
20404f38:	fdc42583          	lw	a1,-36(s0)
20404f3c:	fe042503          	lw	a0,-32(s0)
20404f40:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20404f42:	fec42783          	lw	a5,-20(s0)
20404f46:	0785                	addi	a5,a5,1
20404f48:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 1)
20404f4c:	fec42703          	lw	a4,-20(s0)
20404f50:	fe842783          	lw	a5,-24(s0)
20404f54:	faf74de3          	blt	a4,a5,20404f0e <__metal_driver_riscv_clint0_init+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
	}
	clint->init_done = 1;
20404f58:	fe442783          	lw	a5,-28(s0)
20404f5c:	4705                	li	a4,1
20404f5e:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:72
    }	
}
20404f60:	0001                	nop
20404f62:	50f2                	lw	ra,60(sp)
20404f64:	5462                	lw	s0,56(sp)
20404f66:	6121                	addi	sp,sp,64
20404f68:	8082                	ret

20404f6a <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:77

int __metal_driver_riscv_clint0_register (struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv)
{
20404f6a:	7139                	addi	sp,sp,-64
20404f6c:	de06                	sw	ra,60(sp)
20404f6e:	dc22                	sw	s0,56(sp)
20404f70:	0080                	addi	s0,sp,64
20404f72:	fca42623          	sw	a0,-52(s0)
20404f76:	fcb42423          	sw	a1,-56(s0)
20404f7a:	fcc42223          	sw	a2,-60(s0)
20404f7e:	fcd42023          	sw	a3,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78
    int rc = -1;
20404f82:	57fd                	li	a5,-1
20404f84:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:79
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20404f88:	3d2010ef          	jal	ra,2040635a <__metal_controller_interrupt_vector_mode>
20404f8c:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80
    struct metal_interrupt *intc = NULL;
20404f90:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20404f94:	3f21                	jal	20404eac <_get_cpu_intc>
20404f96:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:82
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20404f9a:	fcc42503          	lw	a0,-52(s0)
20404f9e:	33a9                	jal	20404ce8 <__metal_driver_sifive_clint0_num_interrupts>
20404fa0:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84

    if ( (mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE) ) {
20404fa4:	fe042703          	lw	a4,-32(s0)
20404fa8:	4785                	li	a5,1
20404faa:	00f70863          	beq	a4,a5,20404fba <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84 (discriminator 1)
20404fae:	fe042783          	lw	a5,-32(s0)
20404fb2:	c781                	beqz	a5,20404fba <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
        return rc;
20404fb4:	fec42783          	lw	a5,-20(s0)
20404fb8:	a049                	j	2040503a <__metal_driver_riscv_clint0_register+0xd0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88
    }

    for(int i = 0; i < num_interrupts; i++) {
20404fba:	fe042223          	sw	zero,-28(s0)
20404fbe:	a091                	j	20405002 <__metal_driver_riscv_clint0_register+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89
	int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20404fc0:	fe442583          	lw	a1,-28(s0)
20404fc4:	fcc42503          	lw	a0,-52(s0)
20404fc8:	3351                	jal	20404d4c <__metal_driver_sifive_clint0_interrupt_lines>
20404fca:	fca42a23          	sw	a0,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20404fce:	fe442583          	lw	a1,-28(s0)
20404fd2:	fcc42503          	lw	a0,-52(s0)
20404fd6:	3b2d                	jal	20404d10 <__metal_driver_sifive_clint0_interrupt_parents>
20404fd8:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
        if (cpu_intc == intc && id == line) {
20404fdc:	fdc42703          	lw	a4,-36(s0)
20404fe0:	fe842783          	lw	a5,-24(s0)
20404fe4:	00f71863          	bne	a4,a5,20404ff4 <__metal_driver_riscv_clint0_register+0x8a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91 (discriminator 1)
20404fe8:	fc842703          	lw	a4,-56(s0)
20404fec:	fd442783          	lw	a5,-44(s0)
20404ff0:	02f70063          	beq	a4,a5,20405010 <__metal_driver_riscv_clint0_register+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:94 (discriminator 2)
            break;
        }
	intc = NULL;
20404ff4:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 2)
    for(int i = 0; i < num_interrupts; i++) {
20404ff8:	fe442783          	lw	a5,-28(s0)
20404ffc:	0785                	addi	a5,a5,1
20404ffe:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 1)
20405002:	fe442703          	lw	a4,-28(s0)
20405006:	fd842783          	lw	a5,-40(s0)
2040500a:	faf74be3          	blt	a4,a5,20404fc0 <__metal_driver_riscv_clint0_register+0x56>
2040500e:	a011                	j	20405012 <__metal_driver_riscv_clint0_register+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
            break;
20405010:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20405012:	fe842783          	lw	a5,-24(s0)
20405016:	c385                	beqz	a5,20405036 <__metal_driver_riscv_clint0_register+0xcc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:99
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20405018:	fe842783          	lw	a5,-24(s0)
2040501c:	439c                	lw	a5,0(a5)
2040501e:	4fdc                	lw	a5,28(a5)
20405020:	fc042683          	lw	a3,-64(s0)
20405024:	fc442603          	lw	a2,-60(s0)
20405028:	fc842583          	lw	a1,-56(s0)
2040502c:	fe842503          	lw	a0,-24(s0)
20405030:	9782                	jalr	a5
20405032:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }
    return rc;
20405036:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
}
2040503a:	853e                	mv	a0,a5
2040503c:	50f2                	lw	ra,60(sp)
2040503e:	5462                	lw	s0,56(sp)
20405040:	6121                	addi	sp,sp,64
20405042:	8082                	ret

20405044 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107

int __metal_driver_riscv_clint0_vector_register (struct metal_interrupt *controller,
                                                 int id, metal_interrupt_vector_handler_t isr,
                                                 void *priv)
{   
20405044:	7179                	addi	sp,sp,-48
20405046:	d622                	sw	s0,44(sp)
20405048:	1800                	addi	s0,sp,48
2040504a:	fca42e23          	sw	a0,-36(s0)
2040504e:	fcb42c23          	sw	a1,-40(s0)
20405052:	fcc42a23          	sw	a2,-44(s0)
20405056:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:109
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
2040505a:	57fd                	li	a5,-1
2040505c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:110
    return rc;
20405060:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
}
20405064:	853e                	mv	a0,a5
20405066:	5432                	lw	s0,44(sp)
20405068:	6145                	addi	sp,sp,48
2040506a:	8082                	ret

2040506c <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode (struct metal_interrupt *controller)
{
2040506c:	1101                	addi	sp,sp,-32
2040506e:	ce06                	sw	ra,28(sp)
20405070:	cc22                	sw	s0,24(sp)
20405072:	1000                	addi	s0,sp,32
20405074:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
    return __metal_controller_interrupt_vector_mode();
20405078:	2e2010ef          	jal	ra,2040635a <__metal_controller_interrupt_vector_mode>
2040507c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:116
}
2040507e:	853e                	mv	a0,a5
20405080:	40f2                	lw	ra,28(sp)
20405082:	4462                	lw	s0,24(sp)
20405084:	6105                	addi	sp,sp,32
20405086:	8082                	ret

20405088 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_set_vector_mode (struct metal_interrupt *controller, metal_vector_mode mode)
{
20405088:	7179                	addi	sp,sp,-48
2040508a:	d606                	sw	ra,44(sp)
2040508c:	d422                	sw	s0,40(sp)
2040508e:	1800                	addi	s0,sp,48
20405090:	fca42e23          	sw	a0,-36(s0)
20405094:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:120
    int rc = -1;
20405098:	57fd                	li	a5,-1
2040509a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    struct metal_interrupt *intc = _get_cpu_intc();
2040509e:	3539                	jal	20404eac <_get_cpu_intc>
204050a0:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123

    if (intc) {
204050a4:	fe842783          	lw	a5,-24(s0)
204050a8:	c395                	beqz	a5,204050cc <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:125
	/* Valid vector modes are VECTOR and DIRECT, anything else is invalid (-1) */
        switch (mode) {
204050aa:	fd842703          	lw	a4,-40(s0)
204050ae:	4785                	li	a5,1
204050b0:	00e7ef63          	bltu	a5,a4,204050ce <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
204050b4:	fe842783          	lw	a5,-24(s0)
204050b8:	439c                	lw	a5,0(a5)
204050ba:	43dc                	lw	a5,4(a5)
204050bc:	fd842583          	lw	a1,-40(s0)
204050c0:	fe842503          	lw	a0,-24(s0)
204050c4:	9782                	jalr	a5
204050c6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:129
            break;
204050ca:	a011                	j	204050ce <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131
        }
    }
204050cc:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    return rc;
204050ce:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
}
204050d2:	853e                	mv	a0,a5
204050d4:	50b2                	lw	ra,44(sp)
204050d6:	5422                	lw	s0,40(sp)
204050d8:	6145                	addi	sp,sp,48
204050da:	8082                	ret

204050dc <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:136

int __metal_driver_riscv_clint0_enable (struct metal_interrupt *controller, int id)
{
204050dc:	7139                	addi	sp,sp,-64
204050de:	de06                	sw	ra,60(sp)
204050e0:	dc22                	sw	s0,56(sp)
204050e2:	0080                	addi	s0,sp,64
204050e4:	fca42623          	sw	a0,-52(s0)
204050e8:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:137
    int rc = -1;
204050ec:	57fd                	li	a5,-1
204050ee:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:139

    if ( id ) {
204050f2:	fc842783          	lw	a5,-56(s0)
204050f6:	c7c9                	beqz	a5,20405180 <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:140
        struct metal_interrupt *intc = NULL;
204050f8:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204050fc:	3b45                	jal	20404eac <_get_cpu_intc>
204050fe:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20405102:	fcc42503          	lw	a0,-52(s0)
20405106:	36cd                	jal	20404ce8 <__metal_driver_sifive_clint0_num_interrupts>
20405108:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144

        for(int i = 0; i < num_interrupts; i++) {
2040510c:	fe042223          	sw	zero,-28(s0)
20405110:	a091                	j	20405154 <__metal_driver_riscv_clint0_enable+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:145
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20405112:	fe442583          	lw	a1,-28(s0)
20405116:	fcc42503          	lw	a0,-52(s0)
2040511a:	390d                	jal	20404d4c <__metal_driver_sifive_clint0_interrupt_lines>
2040511c:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20405120:	fe442583          	lw	a1,-28(s0)
20405124:	fcc42503          	lw	a0,-52(s0)
20405128:	36e5                	jal	20404d10 <__metal_driver_sifive_clint0_interrupt_parents>
2040512a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
            if(cpu_intc == intc && id == line) {
2040512e:	fe042703          	lw	a4,-32(s0)
20405132:	fe842783          	lw	a5,-24(s0)
20405136:	00f71863          	bne	a4,a5,20405146 <__metal_driver_riscv_clint0_enable+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147 (discriminator 1)
2040513a:	fc842703          	lw	a4,-56(s0)
2040513e:	fd842783          	lw	a5,-40(s0)
20405142:	02f70063          	beq	a4,a5,20405162 <__metal_driver_riscv_clint0_enable+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:150 (discriminator 2)
                break;
            }
	    intc = NULL;
20405146:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
2040514a:	fe442783          	lw	a5,-28(s0)
2040514e:	0785                	addi	a5,a5,1
20405150:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 1)
20405154:	fe442703          	lw	a4,-28(s0)
20405158:	fdc42783          	lw	a5,-36(s0)
2040515c:	faf74be3          	blt	a4,a5,20405112 <__metal_driver_riscv_clint0_enable+0x36>
20405160:	a011                	j	20405164 <__metal_driver_riscv_clint0_enable+0x88>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
                break;
20405162:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154
        }
        
        /* Enable its interrupts with parent controller */
        if (intc) {
20405164:	fe842783          	lw	a5,-24(s0)
20405168:	cf81                	beqz	a5,20405180 <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
            rc = intc->vtable->interrupt_enable(intc, id);
2040516a:	fe842783          	lw	a5,-24(s0)
2040516e:	439c                	lw	a5,0(a5)
20405170:	53dc                	lw	a5,36(a5)
20405172:	fc842583          	lw	a1,-56(s0)
20405176:	fe842503          	lw	a0,-24(s0)
2040517a:	9782                	jalr	a5
2040517c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:159
        }
    }

    return rc;
20405180:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160
}
20405184:	853e                	mv	a0,a5
20405186:	50f2                	lw	ra,60(sp)
20405188:	5462                	lw	s0,56(sp)
2040518a:	6121                	addi	sp,sp,64
2040518c:	8082                	ret

2040518e <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:163

int __metal_driver_riscv_clint0_disable (struct metal_interrupt *controller, int id)
{
2040518e:	7139                	addi	sp,sp,-64
20405190:	de06                	sw	ra,60(sp)
20405192:	dc22                	sw	s0,56(sp)
20405194:	0080                	addi	s0,sp,64
20405196:	fca42623          	sw	a0,-52(s0)
2040519a:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
    int rc = -1;
2040519e:	57fd                	li	a5,-1
204051a0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166

    if ( id ) {
204051a4:	fc842783          	lw	a5,-56(s0)
204051a8:	c7c9                	beqz	a5,20405232 <__metal_driver_riscv_clint0_disable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:167
        struct metal_interrupt *intc = NULL;
204051aa:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204051ae:	39fd                	jal	20404eac <_get_cpu_intc>
204051b0:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:169
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
204051b4:	fcc42503          	lw	a0,-52(s0)
204051b8:	3e05                	jal	20404ce8 <__metal_driver_sifive_clint0_num_interrupts>
204051ba:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171

        for(int i = 0; i < num_interrupts; i++) {
204051be:	fe042223          	sw	zero,-28(s0)
204051c2:	a091                	j	20405206 <__metal_driver_riscv_clint0_disable+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204051c4:	fe442583          	lw	a1,-28(s0)
204051c8:	fcc42503          	lw	a0,-52(s0)
204051cc:	3641                	jal	20404d4c <__metal_driver_sifive_clint0_interrupt_lines>
204051ce:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204051d2:	fe442583          	lw	a1,-28(s0)
204051d6:	fcc42503          	lw	a0,-52(s0)
204051da:	3e1d                	jal	20404d10 <__metal_driver_sifive_clint0_interrupt_parents>
204051dc:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174
            if(cpu_intc == intc && id == line) {
204051e0:	fe042703          	lw	a4,-32(s0)
204051e4:	fe842783          	lw	a5,-24(s0)
204051e8:	00f71863          	bne	a4,a5,204051f8 <__metal_driver_riscv_clint0_disable+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174 (discriminator 1)
204051ec:	fc842703          	lw	a4,-56(s0)
204051f0:	fd842783          	lw	a5,-40(s0)
204051f4:	02f70063          	beq	a4,a5,20405214 <__metal_driver_riscv_clint0_disable+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177 (discriminator 2)
                break;
            }
	    intc = NULL;
204051f8:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
204051fc:	fe442783          	lw	a5,-28(s0)
20405200:	0785                	addi	a5,a5,1
20405202:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 1)
20405206:	fe442703          	lw	a4,-28(s0)
2040520a:	fdc42783          	lw	a5,-36(s0)
2040520e:	faf74be3          	blt	a4,a5,204051c4 <__metal_driver_riscv_clint0_disable+0x36>
20405212:	a011                	j	20405216 <__metal_driver_riscv_clint0_disable+0x88>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:175
                break;
20405214:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181
        }
        
        /* Disable its interrupts with parent controller */
        if (intc) {
20405216:	fe842783          	lw	a5,-24(s0)
2040521a:	cf81                	beqz	a5,20405232 <__metal_driver_riscv_clint0_disable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
            rc = intc->vtable->interrupt_disable(intc, id);
2040521c:	fe842783          	lw	a5,-24(s0)
20405220:	439c                	lw	a5,0(a5)
20405222:	579c                	lw	a5,40(a5)
20405224:	fc842583          	lw	a1,-56(s0)
20405228:	fe842503          	lw	a0,-24(s0)
2040522c:	9782                	jalr	a5
2040522e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        }
    }

    return rc;
20405232:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:187
}
20405236:	853e                	mv	a0,a5
20405238:	50f2                	lw	ra,60(sp)
2040523a:	5462                	lw	s0,56(sp)
2040523c:	6121                	addi	sp,sp,64
2040523e:	8082                	ret

20405240 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:191

int __metal_driver_riscv_clint0_command_request (struct metal_interrupt *controller,
                                               int command, void *data)
{
20405240:	7179                	addi	sp,sp,-48
20405242:	d606                	sw	ra,44(sp)
20405244:	d422                	sw	s0,40(sp)
20405246:	1800                	addi	s0,sp,48
20405248:	fca42e23          	sw	a0,-36(s0)
2040524c:	fcb42c23          	sw	a1,-40(s0)
20405250:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:193
    int hartid;
    int rc = -1;
20405254:	57fd                	li	a5,-1
20405256:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
    struct __metal_driver_riscv_clint0 *clint =
2040525a:	fdc42783          	lw	a5,-36(s0)
2040525e:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(controller);
20405262:	fdc42503          	lw	a0,-36(s0)
20405266:	a59ff0ef          	jal	ra,20404cbe <__metal_driver_sifive_clint0_control_base>
2040526a:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198

    switch (command) {
2040526e:	fd842703          	lw	a4,-40(s0)
20405272:	4789                	li	a5,2
20405274:	04f70963          	beq	a4,a5,204052c6 <__metal_driver_riscv_clint0_command_request+0x86>
20405278:	fd842703          	lw	a4,-40(s0)
2040527c:	4789                	li	a5,2
2040527e:	00e7c863          	blt	a5,a4,2040528e <__metal_driver_riscv_clint0_command_request+0x4e>
20405282:	fd842703          	lw	a4,-40(s0)
20405286:	4785                	li	a5,1
20405288:	00f70e63          	beq	a4,a5,204052a4 <__metal_driver_riscv_clint0_command_request+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
						    (hartid * 4)));
        }
        break;
    default:
	break;
2040528c:	a8f1                	j	20405368 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198
    switch (command) {
2040528e:	fd842703          	lw	a4,-40(s0)
20405292:	478d                	li	a5,3
20405294:	04f70d63          	beq	a4,a5,204052ee <__metal_driver_riscv_clint0_command_request+0xae>
20405298:	fd842703          	lw	a4,-40(s0)
2040529c:	4791                	li	a5,4
2040529e:	08f70963          	beq	a4,a5,20405330 <__metal_driver_riscv_clint0_command_request+0xf0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
	break;
204052a2:	a0d9                	j	20405368 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:200
        if (data) {
204052a4:	fd442783          	lw	a5,-44(s0)
204052a8:	cbcd                	beqz	a5,2040535a <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:201
	    *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
204052aa:	fe842503          	lw	a0,-24(s0)
204052ae:	acfff0ef          	jal	ra,20404d7c <__metal_clint0_mtime_get>
204052b2:	87aa                	mv	a5,a0
204052b4:	882e                	mv	a6,a1
204052b6:	fd442703          	lw	a4,-44(s0)
204052ba:	c31c                	sw	a5,0(a4)
204052bc:	01072223          	sw	a6,4(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
            rc = 0;
204052c0:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
204052c4:	a859                	j	2040535a <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:206
	if (data) {
204052c6:	fd442783          	lw	a5,-44(s0)
204052ca:	cbd1                	beqz	a5,2040535e <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
	    hartid = *(int *)data;
204052cc:	fd442783          	lw	a5,-44(s0)
204052d0:	439c                	lw	a5,0(a5)
204052d2:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204052d6:	fe042783          	lw	a5,-32(s0)
204052da:	078a                	slli	a5,a5,0x2
204052dc:	873e                	mv	a4,a5
204052de:	fe442783          	lw	a5,-28(s0)
204052e2:	97ba                	add	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:209
					       (hartid * 4))) = METAL_DISABLE;
204052e4:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:210
            rc = 0;
204052e8:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
204052ec:	a88d                	j	2040535e <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
	if (data) {
204052ee:	fd442783          	lw	a5,-44(s0)
204052f2:	cba5                	beqz	a5,20405362 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:215
	    hartid = *(int *)data;
204052f4:	fd442783          	lw	a5,-44(s0)
204052f8:	439c                	lw	a5,0(a5)
204052fa:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:216
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204052fe:	fe042783          	lw	a5,-32(s0)
20405302:	078a                	slli	a5,a5,0x2
20405304:	873e                	mv	a4,a5
20405306:	fe442783          	lw	a5,-28(s0)
2040530a:	97ba                	add	a5,a5,a4
2040530c:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
					       (hartid * 4))) = METAL_ENABLE;
2040530e:	4785                	li	a5,1
20405310:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
	    __METAL_IO_FENCE(o,i);
20405312:	0480000f          	fence	o,i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405316:	fe042783          	lw	a5,-32(s0)
2040531a:	078a                	slli	a5,a5,0x2
2040531c:	873e                	mv	a4,a5
2040531e:	fe442783          	lw	a5,-28(s0)
20405322:	97ba                	add	a5,a5,a4
20405324:	439c                	lw	a5,0(a5)
20405326:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
            rc = 0;
2040532a:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
2040532e:	a815                	j	20405362 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:234
        rc = 0;
20405330:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
	if (data) {
20405334:	fd442783          	lw	a5,-44(s0)
20405338:	c79d                	beqz	a5,20405366 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
	    hartid = *(int *)data;
2040533a:	fd442783          	lw	a5,-44(s0)
2040533e:	439c                	lw	a5,0(a5)
20405340:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405344:	fe042783          	lw	a5,-32(s0)
20405348:	078a                	slli	a5,a5,0x2
2040534a:	873e                	mv	a4,a5
2040534c:	fe442783          	lw	a5,-28(s0)
20405350:	97ba                	add	a5,a5,a4
20405352:	439c                	lw	a5,0(a5)
20405354:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20405358:	a039                	j	20405366 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
2040535a:	0001                	nop
2040535c:	a031                	j	20405368 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
2040535e:	0001                	nop
20405360:	a021                	j	20405368 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20405362:	0001                	nop
20405364:	a011                	j	20405368 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20405366:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:245
    }

    return rc;
20405368:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:246
}
2040536c:	853e                	mv	a0,a5
2040536e:	50b2                	lw	ra,44(sp)
20405370:	5422                	lw	s0,40(sp)
20405372:	6145                	addi	sp,sp,48
20405374:	8082                	ret

20405376 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249

int __metal_driver_riscv_clint0_clear_interrupt (struct metal_interrupt *controller, int id)
{
20405376:	7179                	addi	sp,sp,-48
20405378:	d606                	sw	ra,44(sp)
2040537a:	d422                	sw	s0,40(sp)
2040537c:	1800                	addi	s0,sp,48
2040537e:	fca42e23          	sw	a0,-36(s0)
20405382:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:250
    int hartid = metal_cpu_get_current_hartid();
20405386:	5c5020ef          	jal	ra,2040814a <metal_cpu_get_current_hartid>
2040538a:	87aa                	mv	a5,a0
2040538c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
    return __metal_driver_riscv_clint0_command_request(controller,
20405390:	fec40793          	addi	a5,s0,-20
20405394:	863e                	mv	a2,a5
20405396:	4589                	li	a1,2
20405398:	fdc42503          	lw	a0,-36(s0)
2040539c:	3555                	jal	20405240 <__metal_driver_riscv_clint0_command_request>
2040539e:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
						METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
204053a0:	853e                	mv	a0,a5
204053a2:	50b2                	lw	ra,44(sp)
204053a4:	5422                	lw	s0,40(sp)
204053a6:	6145                	addi	sp,sp,48
204053a8:	8082                	ret

204053aa <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256

int __metal_driver_riscv_clint0_set_interrupt (struct metal_interrupt *controller, int id)
{
204053aa:	7179                	addi	sp,sp,-48
204053ac:	d606                	sw	ra,44(sp)
204053ae:	d422                	sw	s0,40(sp)
204053b0:	1800                	addi	s0,sp,48
204053b2:	fca42e23          	sw	a0,-36(s0)
204053b6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
    int hartid = metal_cpu_get_current_hartid();
204053ba:	591020ef          	jal	ra,2040814a <metal_cpu_get_current_hartid>
204053be:	87aa                	mv	a5,a0
204053c0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
    return __metal_driver_riscv_clint0_command_request(controller,
204053c4:	fec40793          	addi	a5,s0,-20
204053c8:	863e                	mv	a2,a5
204053ca:	458d                	li	a1,3
204053cc:	fdc42503          	lw	a0,-36(s0)
204053d0:	3d85                	jal	20405240 <__metal_driver_riscv_clint0_command_request>
204053d2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:260
						METAL_SOFTWARE_IPI_SET, &hartid);
}
204053d4:	853e                	mv	a0,a5
204053d6:	50b2                	lw	ra,44(sp)
204053d8:	5422                	lw	s0,40(sp)
204053da:	6145                	addi	sp,sp,48
204053dc:	8082                	ret

204053de <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:195



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
204053de:	1101                	addi	sp,sp,-32
204053e0:	ce22                	sw	s0,28(sp)
204053e2:	1000                	addi	s0,sp,32
204053e4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:196
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204053e8:	fec42703          	lw	a4,-20(s0)
204053ec:	81418793          	addi	a5,gp,-2028 # 80002e84 <__metal_dt_cpu_0>
204053f0:	00f71463          	bne	a4,a5,204053f8 <__metal_driver_cpu_hartid+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:197
		return 0;
204053f4:	4781                	li	a5,0
204053f6:	a011                	j	204053fa <__metal_driver_cpu_hartid+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:200
	}
	else {
		return -1;
204053f8:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:202
	}
}
204053fa:	853e                	mv	a0,a5
204053fc:	4472                	lw	s0,28(sp)
204053fe:	6105                	addi	sp,sp,32
20405400:	8082                	ret

20405402 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:205

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20405402:	1101                	addi	sp,sp,-32
20405404:	ce22                	sw	s0,28(sp)
20405406:	1000                	addi	s0,sp,32
20405408:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:206
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2040540c:	fec42703          	lw	a4,-20(s0)
20405410:	81418793          	addi	a5,gp,-2028 # 80002e84 <__metal_dt_cpu_0>
20405414:	00f71763          	bne	a4,a5,20405422 <__metal_driver_cpu_timebase+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:207
		return 1000000;
20405418:	000f47b7          	lui	a5,0xf4
2040541c:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20405420:	a011                	j	20405424 <__metal_driver_cpu_timebase+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:210
	}
	else {
		return 0;
20405422:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:212
	}
}
20405424:	853e                	mv	a0,a5
20405426:	4472                	lw	s0,28(sp)
20405428:	6105                	addi	sp,sp,32
2040542a:	8082                	ret

2040542c <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:215

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
2040542c:	1101                	addi	sp,sp,-32
2040542e:	ce22                	sw	s0,28(sp)
20405430:	1000                	addi	s0,sp,32
20405432:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:216
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405436:	fec42703          	lw	a4,-20(s0)
2040543a:	81418793          	addi	a5,gp,-2028 # 80002e84 <__metal_dt_cpu_0>
2040543e:	00f71763          	bne	a4,a5,2040544c <__metal_driver_cpu_interrupt_controller+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:217
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20405442:	800027b7          	lui	a5,0x80002
20405446:	79878793          	addi	a5,a5,1944 # 80002798 <metal_segment_heap_target_end+0xffffea9c>
2040544a:	a011                	j	2040544e <__metal_driver_cpu_interrupt_controller+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:220
	}
	else {
		return NULL;
2040544c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:222
	}
}
2040544e:	853e                	mv	a0,a5
20405450:	4472                	lw	s0,28(sp)
20405452:	6105                	addi	sp,sp,32
20405454:	8082                	ret

20405456 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:14
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu, unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid)
{
20405456:	1101                	addi	sp,sp,-32
20405458:	ce22                	sw	s0,28(sp)
2040545a:	1000                	addi	s0,sp,32
2040545c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:15
    if (hartid < __METAL_DT_MAX_HARTS) {
20405460:	fec42783          	lw	a5,-20(s0)
20405464:	00f04c63          	bgtz	a5,2040547c <__metal_driver_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:16
        return &(__metal_cpu_table[hartid]->cpu);
20405468:	800037b7          	lui	a5,0x80003
2040546c:	fec42703          	lw	a4,-20(s0)
20405470:	070a                	slli	a4,a4,0x2
20405472:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405476:	97ba                	add	a5,a5,a4
20405478:	439c                	lw	a5,0(a5)
2040547a:	a011                	j	2040547e <__metal_driver_cpu_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:18
    }
    return (struct metal_cpu *)NULL;
2040547c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:19
}
2040547e:	853e                	mv	a0,a5
20405480:	4472                	lw	s0,28(sp)
20405482:	6105                	addi	sp,sp,32
20405484:	8082                	ret

20405486 <__metal_myhart_id>:
__metal_myhart_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:22

uintptr_t __metal_myhart_id (void)
{
20405486:	1101                	addi	sp,sp,-32
20405488:	ce22                	sw	s0,28(sp)
2040548a:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:24
    uintptr_t myhart;
    __asm__ volatile ("csrr %0, mhartid" : "=r"(myhart));
2040548c:	f14027f3          	csrr	a5,mhartid
20405490:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
    return myhart;
20405494:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
}
20405498:	853e                	mv	a0,a5
2040549a:	4472                	lw	s0,28(sp)
2040549c:	6105                	addi	sp,sp,32
2040549e:	8082                	ret

204054a0 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
    for (ptr = base; ptr < (base + size); ptr++){
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable (void) {
204054a0:	1101                	addi	sp,sp,-32
204054a2:	ce22                	sw	s0,28(sp)
204054a4:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:38
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
204054a6:	47a1                	li	a5,8
204054a8:	3007a7f3          	csrrs	a5,mstatus,a5
204054ac:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:39
}
204054b0:	0001                	nop
204054b2:	4472                	lw	s0,28(sp)
204054b4:	6105                	addi	sp,sp,32
204054b6:	8082                	ret

204054b8 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:41

void __metal_interrupt_global_disable (void) {
204054b8:	1101                	addi	sp,sp,-32
204054ba:	ce22                	sw	s0,28(sp)
204054bc:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:43
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
204054be:	47a1                	li	a5,8
204054c0:	3007b7f3          	csrrc	a5,mstatus,a5
204054c4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:44
}
204054c8:	0001                	nop
204054ca:	4472                	lw	s0,28(sp)
204054cc:	6105                	addi	sp,sp,32
204054ce:	8082                	ret

204054d0 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:46

void __metal_interrupt_software_enable (void) {
204054d0:	1101                	addi	sp,sp,-32
204054d2:	ce22                	sw	s0,28(sp)
204054d4:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:48
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
204054d6:	47a1                	li	a5,8
204054d8:	3047a7f3          	csrrs	a5,mie,a5
204054dc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:49
}
204054e0:	0001                	nop
204054e2:	4472                	lw	s0,28(sp)
204054e4:	6105                	addi	sp,sp,32
204054e6:	8082                	ret

204054e8 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:51

void __metal_interrupt_software_disable (void) {
204054e8:	1101                	addi	sp,sp,-32
204054ea:	ce22                	sw	s0,28(sp)
204054ec:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:53
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
204054ee:	47a1                	li	a5,8
204054f0:	3047b7f3          	csrrc	a5,mie,a5
204054f4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
}
204054f8:	0001                	nop
204054fa:	4472                	lw	s0,28(sp)
204054fc:	6105                	addi	sp,sp,32
204054fe:	8082                	ret

20405500 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:56

void __metal_interrupt_timer_enable (void) {
20405500:	1101                	addi	sp,sp,-32
20405502:	ce22                	sw	s0,28(sp)
20405504:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:58
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20405506:	08000793          	li	a5,128
2040550a:	3047a7f3          	csrrs	a5,mie,a5
2040550e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59
}
20405512:	0001                	nop
20405514:	4472                	lw	s0,28(sp)
20405516:	6105                	addi	sp,sp,32
20405518:	8082                	ret

2040551a <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61

void __metal_interrupt_timer_disable (void) {
2040551a:	1101                	addi	sp,sp,-32
2040551c:	ce22                	sw	s0,28(sp)
2040551e:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:63
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20405520:	08000793          	li	a5,128
20405524:	3047b7f3          	csrrc	a5,mie,a5
20405528:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
}
2040552c:	0001                	nop
2040552e:	4472                	lw	s0,28(sp)
20405530:	6105                	addi	sp,sp,32
20405532:	8082                	ret

20405534 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_external_enable (void) {
20405534:	1101                	addi	sp,sp,-32
20405536:	ce22                	sw	s0,28(sp)
20405538:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
2040553a:	6785                	lui	a5,0x1
2040553c:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20405540:	3047a7f3          	csrrs	a5,mie,a5
20405544:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:69
}
20405548:	0001                	nop
2040554a:	4472                	lw	s0,28(sp)
2040554c:	6105                	addi	sp,sp,32
2040554e:	8082                	ret

20405550 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71

void __metal_interrupt_external_disable (void) {
20405550:	1101                	addi	sp,sp,-32
20405552:	ce22                	sw	s0,28(sp)
20405554:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73
    unsigned long m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20405556:	6785                	lui	a5,0x1
20405558:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
2040555c:	3047b7f3          	csrrc	a5,mie,a5
20405560:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:74
}
20405564:	0001                	nop
20405566:	4472                	lw	s0,28(sp)
20405568:	6105                	addi	sp,sp,32
2040556a:	8082                	ret

2040556c <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:76

void __metal_interrupt_local_enable (int id) {
2040556c:	7179                	addi	sp,sp,-48
2040556e:	d622                	sw	s0,44(sp)
20405570:	1800                	addi	s0,sp,48
20405572:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:77
    uintptr_t b = 1 << id;
20405576:	fdc42783          	lw	a5,-36(s0)
2040557a:	4705                	li	a4,1
2040557c:	00f717b3          	sll	a5,a4,a5
20405580:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:79
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20405584:	fec42783          	lw	a5,-20(s0)
20405588:	3047a7f3          	csrrs	a5,mie,a5
2040558c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80
}
20405590:	0001                	nop
20405592:	5432                	lw	s0,44(sp)
20405594:	6145                	addi	sp,sp,48
20405596:	8082                	ret

20405598 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82

void __metal_interrupt_local_disable (int id) {
20405598:	7179                	addi	sp,sp,-48
2040559a:	d622                	sw	s0,44(sp)
2040559c:	1800                	addi	s0,sp,48
2040559e:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:83
    uintptr_t b = 1 << id;
204055a2:	fdc42783          	lw	a5,-36(s0)
204055a6:	4705                	li	a4,1
204055a8:	00f717b3          	sll	a5,a4,a5
204055ac:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
204055b0:	fec42783          	lw	a5,-20(s0)
204055b4:	3047b7f3          	csrrc	a5,mie,a5
204055b8:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:86
}
204055bc:	0001                	nop
204055be:	5432                	lw	s0,44(sp)
204055c0:	6145                	addi	sp,sp,48
204055c2:	8082                	ret

204055c4 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:88

void __metal_default_exception_handler (struct metal_cpu *cpu, int ecode) {
204055c4:	1101                	addi	sp,sp,-32
204055c6:	ce06                	sw	ra,28(sp)
204055c8:	cc22                	sw	s0,24(sp)
204055ca:	1000                	addi	s0,sp,32
204055cc:	fea42623          	sw	a0,-20(s0)
204055d0:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    metal_shutdown(100);
204055d4:	06400513          	li	a0,100
204055d8:	38d020ef          	jal	ra,20408164 <metal_shutdown>

204055dc <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
}

void __metal_default_interrupt_handler (int id, void *priv) {
204055dc:	1101                	addi	sp,sp,-32
204055de:	ce06                	sw	ra,28(sp)
204055e0:	cc22                	sw	s0,24(sp)
204055e2:	1000                	addi	s0,sp,32
204055e4:	fea42623          	sw	a0,-20(s0)
204055e8:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:93
    metal_shutdown(200);
204055ec:	0c800513          	li	a0,200
204055f0:	375020ef          	jal	ra,20408164 <metal_shutdown>

204055f4 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:97
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler (void) {
204055f4:	715d                	addi	sp,sp,-80
204055f6:	c686                	sw	ra,76(sp)
204055f8:	c496                	sw	t0,72(sp)
204055fa:	c29a                	sw	t1,68(sp)
204055fc:	c09e                	sw	t2,64(sp)
204055fe:	de22                	sw	s0,60(sp)
20405600:	dc2a                	sw	a0,56(sp)
20405602:	da2e                	sw	a1,52(sp)
20405604:	d832                	sw	a2,48(sp)
20405606:	d636                	sw	a3,44(sp)
20405608:	d43a                	sw	a4,40(sp)
2040560a:	d23e                	sw	a5,36(sp)
2040560c:	d042                	sw	a6,32(sp)
2040560e:	ce46                	sw	a7,28(sp)
20405610:	cc72                	sw	t3,24(sp)
20405612:	ca76                	sw	t4,20(sp)
20405614:	c87a                	sw	t5,16(sp)
20405616:	c67e                	sw	t6,12(sp)
20405618:	0880                	addi	s0,sp,80
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:98
    metal_shutdown(300);
2040561a:	12c00513          	li	a0,300
2040561e:	347020ef          	jal	ra,20408164 <metal_shutdown>

20405622 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_software_interrupt_vector_handler (void) {
20405622:	711d                	addi	sp,sp,-96
20405624:	ce86                	sw	ra,92(sp)
20405626:	cc96                	sw	t0,88(sp)
20405628:	ca9a                	sw	t1,84(sp)
2040562a:	c89e                	sw	t2,80(sp)
2040562c:	c6a2                	sw	s0,76(sp)
2040562e:	c4aa                	sw	a0,72(sp)
20405630:	c2ae                	sw	a1,68(sp)
20405632:	c0b2                	sw	a2,64(sp)
20405634:	de36                	sw	a3,60(sp)
20405636:	dc3a                	sw	a4,56(sp)
20405638:	da3e                	sw	a5,52(sp)
2040563a:	d842                	sw	a6,48(sp)
2040563c:	d646                	sw	a7,44(sp)
2040563e:	d472                	sw	t3,40(sp)
20405640:	d276                	sw	t4,36(sp)
20405642:	d07a                	sw	t5,32(sp)
20405644:	ce7e                	sw	t6,28(sp)
20405646:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405648:	3d3d                	jal	20405486 <__metal_myhart_id>
2040564a:	872a                	mv	a4,a0
2040564c:	800037b7          	lui	a5,0x80003
20405650:	070a                	slli	a4,a4,0x2
20405652:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405656:	97ba                	add	a5,a5,a4
20405658:	439c                	lw	a5,0(a5)
2040565a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

    if ( cpu ) {
2040565e:	fac42783          	lw	a5,-84(s0)
20405662:	c785                	beqz	a5,2040568a <metal_software_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:109
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405664:	fac42503          	lw	a0,-84(s0)
20405668:	33d1                	jal	2040542c <__metal_driver_cpu_interrupt_controller>
2040566a:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].exint_data;
2040566e:	fa842783          	lw	a5,-88(s0)
20405672:	0e07a783          	lw	a5,224(a5)
20405676:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
        intc->metal_int_table[METAL_INTERRUPT_ID_SW].handler(METAL_INTERRUPT_ID_SW, priv);
2040567a:	fa842783          	lw	a5,-88(s0)
2040567e:	0d87a783          	lw	a5,216(a5)
20405682:	fa442583          	lw	a1,-92(s0)
20405686:	450d                	li	a0,3
20405688:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113
    }
}
2040568a:	0001                	nop
2040568c:	40f6                	lw	ra,92(sp)
2040568e:	42e6                	lw	t0,88(sp)
20405690:	4356                	lw	t1,84(sp)
20405692:	43c6                	lw	t2,80(sp)
20405694:	4436                	lw	s0,76(sp)
20405696:	4526                	lw	a0,72(sp)
20405698:	4596                	lw	a1,68(sp)
2040569a:	4606                	lw	a2,64(sp)
2040569c:	56f2                	lw	a3,60(sp)
2040569e:	5762                	lw	a4,56(sp)
204056a0:	57d2                	lw	a5,52(sp)
204056a2:	5842                	lw	a6,48(sp)
204056a4:	58b2                	lw	a7,44(sp)
204056a6:	5e22                	lw	t3,40(sp)
204056a8:	5e92                	lw	t4,36(sp)
204056aa:	5f02                	lw	t5,32(sp)
204056ac:	4ff2                	lw	t6,28(sp)
204056ae:	6125                	addi	sp,sp,96
204056b0:	30200073          	mret

204056b4 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:115

void __metal_default_sw_handler (int id, void *priv) {
204056b4:	7179                	addi	sp,sp,-48
204056b6:	d606                	sw	ra,44(sp)
204056b8:	d422                	sw	s0,40(sp)
204056ba:	1800                	addi	s0,sp,48
204056bc:	fca42e23          	sw	a0,-36(s0)
204056c0:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204056c4:	33c9                	jal	20405486 <__metal_myhart_id>
204056c6:	872a                	mv	a4,a0
204056c8:	800037b7          	lui	a5,0x80003
204056cc:	070a                	slli	a4,a4,0x2
204056ce:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
204056d2:	97ba                	add	a5,a5,a4
204056d4:	439c                	lw	a5,0(a5)
204056d6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:120

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
204056da:	342027f3          	csrr	a5,mcause
204056de:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:121
    if ( cpu ) {
204056e2:	fec42783          	lw	a5,-20(s0)
204056e6:	c795                	beqz	a5,20405712 <__metal_default_sw_handler+0x5e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204056e8:	fec42503          	lw	a0,-20(s0)
204056ec:	3381                	jal	2040542c <__metal_driver_cpu_interrupt_controller>
204056ee:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:124
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE]((struct metal_cpu *)cpu, id);
204056f2:	fe842783          	lw	a5,-24(s0)
204056f6:	3ff7f793          	andi	a5,a5,1023
204056fa:	fe442703          	lw	a4,-28(s0)
204056fe:	0e078793          	addi	a5,a5,224
20405702:	078a                	slli	a5,a5,0x2
20405704:	97ba                	add	a5,a5,a4
20405706:	479c                	lw	a5,8(a5)
20405708:	fdc42583          	lw	a1,-36(s0)
2040570c:	fec42503          	lw	a0,-20(s0)
20405710:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:126
    }
}
20405712:	0001                	nop
20405714:	50b2                	lw	ra,44(sp)
20405716:	5422                	lw	s0,40(sp)
20405718:	6145                	addi	sp,sp,48
2040571a:	8082                	ret

2040571c <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_timer_interrupt_vector_handler (void) {
2040571c:	711d                	addi	sp,sp,-96
2040571e:	ce86                	sw	ra,92(sp)
20405720:	cc96                	sw	t0,88(sp)
20405722:	ca9a                	sw	t1,84(sp)
20405724:	c89e                	sw	t2,80(sp)
20405726:	c6a2                	sw	s0,76(sp)
20405728:	c4aa                	sw	a0,72(sp)
2040572a:	c2ae                	sw	a1,68(sp)
2040572c:	c0b2                	sw	a2,64(sp)
2040572e:	de36                	sw	a3,60(sp)
20405730:	dc3a                	sw	a4,56(sp)
20405732:	da3e                	sw	a5,52(sp)
20405734:	d842                	sw	a6,48(sp)
20405736:	d646                	sw	a7,44(sp)
20405738:	d472                	sw	t3,40(sp)
2040573a:	d276                	sw	t4,36(sp)
2040573c:	d07a                	sw	t5,32(sp)
2040573e:	ce7e                	sw	t6,28(sp)
20405740:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405742:	3391                	jal	20405486 <__metal_myhart_id>
20405744:	872a                	mv	a4,a0
20405746:	800037b7          	lui	a5,0x80003
2040574a:	070a                	slli	a4,a4,0x2
2040574c:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405750:	97ba                	add	a5,a5,a4
20405752:	439c                	lw	a5,0(a5)
20405754:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:134

    if ( cpu ) {
20405758:	fac42783          	lw	a5,-84(s0)
2040575c:	c785                	beqz	a5,20405784 <metal_timer_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:136
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040575e:	fac42503          	lw	a0,-84(s0)
20405762:	31e9                	jal	2040542c <__metal_driver_cpu_interrupt_controller>
20405764:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].exint_data;
20405768:	fa842783          	lw	a5,-88(s0)
2040576c:	1407a783          	lw	a5,320(a5)
20405770:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
        intc->metal_int_table[METAL_INTERRUPT_ID_TMR].handler(METAL_INTERRUPT_ID_TMR, priv);
20405774:	fa842783          	lw	a5,-88(s0)
20405778:	1387a783          	lw	a5,312(a5)
2040577c:	fa442583          	lw	a1,-92(s0)
20405780:	451d                	li	a0,7
20405782:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
    }
}
20405784:	0001                	nop
20405786:	40f6                	lw	ra,92(sp)
20405788:	42e6                	lw	t0,88(sp)
2040578a:	4356                	lw	t1,84(sp)
2040578c:	43c6                	lw	t2,80(sp)
2040578e:	4436                	lw	s0,76(sp)
20405790:	4526                	lw	a0,72(sp)
20405792:	4596                	lw	a1,68(sp)
20405794:	4606                	lw	a2,64(sp)
20405796:	56f2                	lw	a3,60(sp)
20405798:	5762                	lw	a4,56(sp)
2040579a:	57d2                	lw	a5,52(sp)
2040579c:	5842                	lw	a6,48(sp)
2040579e:	58b2                	lw	a7,44(sp)
204057a0:	5e22                	lw	t3,40(sp)
204057a2:	5e92                	lw	t4,36(sp)
204057a4:	5f02                	lw	t5,32(sp)
204057a6:	4ff2                	lw	t6,28(sp)
204057a8:	6125                	addi	sp,sp,96
204057aa:	30200073          	mret

204057ae <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:142

void __metal_default_timer_handler (int id, void *priv) {
204057ae:	7179                	addi	sp,sp,-48
204057b0:	d606                	sw	ra,44(sp)
204057b2:	d422                	sw	s0,40(sp)
204057b4:	1800                	addi	s0,sp,48
204057b6:	fca42e23          	sw	a0,-36(s0)
204057ba:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:143
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
204057be:	31e1                	jal	20405486 <__metal_myhart_id>
204057c0:	87aa                	mv	a5,a0
204057c2:	853e                	mv	a0,a5
204057c4:	3949                	jal	20405456 <__metal_driver_cpu_get>
204057c6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
204057ca:	fec42503          	lw	a0,-20(s0)
204057ce:	1e4010ef          	jal	ra,204069b2 <__metal_driver_cpu_mtime_get>
204057d2:	fea42023          	sw	a0,-32(s0)
204057d6:	feb42223          	sw	a1,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:147

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
204057da:	fe042783          	lw	a5,-32(s0)
204057de:	fe442803          	lw	a6,-28(s0)
204057e2:	45a9                	li	a1,10
204057e4:	4601                	li	a2,0
204057e6:	00b786b3          	add	a3,a5,a1
204057ea:	8536                	mv	a0,a3
204057ec:	00f53533          	sltu	a0,a0,a5
204057f0:	00c80733          	add	a4,a6,a2
204057f4:	00e507b3          	add	a5,a0,a4
204057f8:	873e                	mv	a4,a5
204057fa:	87b6                	mv	a5,a3
204057fc:	883a                	mv	a6,a4
204057fe:	85be                	mv	a1,a5
20405800:	8642                	mv	a2,a6
20405802:	fec42503          	lw	a0,-20(s0)
20405806:	212010ef          	jal	ra,20406a18 <__metal_driver_cpu_mtimecmp_set>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148
}
2040580a:	0001                	nop
2040580c:	50b2                	lw	ra,44(sp)
2040580e:	5422                	lw	s0,40(sp)
20405810:	6145                	addi	sp,sp,48
20405812:	8082                	ret
	...

20405880 <__metal_exception_handler>:
__metal_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:165
        intc->metal_int_table[METAL_INTERRUPT_ID_EXT].handler(METAL_INTERRUPT_ID_EXT, priv);
    }
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler (void) {
20405880:	7119                	addi	sp,sp,-128
20405882:	de86                	sw	ra,124(sp)
20405884:	dc96                	sw	t0,120(sp)
20405886:	da9a                	sw	t1,116(sp)
20405888:	d89e                	sw	t2,112(sp)
2040588a:	d6a2                	sw	s0,108(sp)
2040588c:	d4aa                	sw	a0,104(sp)
2040588e:	d2ae                	sw	a1,100(sp)
20405890:	d0b2                	sw	a2,96(sp)
20405892:	ceb6                	sw	a3,92(sp)
20405894:	ccba                	sw	a4,88(sp)
20405896:	cabe                	sw	a5,84(sp)
20405898:	c8c2                	sw	a6,80(sp)
2040589a:	c6c6                	sw	a7,76(sp)
2040589c:	c4f2                	sw	t3,72(sp)
2040589e:	c2f6                	sw	t4,68(sp)
204058a0:	c0fa                	sw	t5,64(sp)
204058a2:	de7e                	sw	t6,60(sp)
204058a4:	0100                	addi	s0,sp,128
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:170
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204058a6:	be1ff0ef          	jal	ra,20405486 <__metal_myhart_id>
204058aa:	872a                	mv	a4,a0
204058ac:	800037b7          	lui	a5,0x80003
204058b0:	070a                	slli	a4,a4,0x2
204058b2:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
204058b6:	97ba                	add	a5,a5,a4
204058b8:	439c                	lw	a5,0(a5)
204058ba:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:172

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
204058be:	342027f3          	csrr	a5,mcause
204058c2:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:173
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
204058c6:	341027f3          	csrr	a5,mepc
204058ca:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    __asm__ volatile ("csrr %0, mtval" : "=r"(mtval));
204058ce:	343027f3          	csrr	a5,mtval
204058d2:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:175
    __asm__ volatile ("csrr %0, mtvec" : "=r"(mtvec));
204058d6:	305027f3          	csrr	a5,mtvec
204058da:	f8f42e23          	sw	a5,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177

    if ( cpu ) {
204058de:	fac42783          	lw	a5,-84(s0)
204058e2:	c7e9                	beqz	a5,204059ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204058e4:	fac42503          	lw	a0,-84(s0)
204058e8:	b45ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
204058ec:	f8a42c23          	sw	a0,-104(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:180
        id = mcause & METAL_MCAUSE_CAUSE;
204058f0:	fa842783          	lw	a5,-88(s0)
204058f4:	3ff7f793          	andi	a5,a5,1023
204058f8:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181
        if (mcause & METAL_MCAUSE_INTR) {
204058fc:	fa842783          	lw	a5,-88(s0)
20405900:	0807d863          	bgez	a5,20405990 <__metal_exception_handler+0x110>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20405904:	f9442703          	lw	a4,-108(s0)
20405908:	47ad                	li	a5,11
2040590a:	00e7d763          	bge	a5,a4,20405918 <__metal_exception_handler+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183 (discriminator 1)
               ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
2040590e:	f9c42783          	lw	a5,-100(s0)
20405912:	03f7f793          	andi	a5,a5,63
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20405916:	ef9d                	bnez	a5,20405954 <__metal_exception_handler+0xd4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
                priv = intc->metal_int_table[id].exint_data;
20405918:	f9842683          	lw	a3,-104(s0)
2040591c:	f9442703          	lw	a4,-108(s0)
20405920:	87ba                	mv	a5,a4
20405922:	0786                	slli	a5,a5,0x1
20405924:	97ba                	add	a5,a5,a4
20405926:	078e                	slli	a5,a5,0x3
20405928:	97b6                	add	a5,a5,a3
2040592a:	0987a783          	lw	a5,152(a5)
2040592e:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
                intc->metal_int_table[id].handler(id, priv);
20405932:	f9842683          	lw	a3,-104(s0)
20405936:	f9442703          	lw	a4,-108(s0)
2040593a:	87ba                	mv	a5,a4
2040593c:	0786                	slli	a5,a5,0x1
2040593e:	97ba                	add	a5,a5,a4
20405940:	078e                	slli	a5,a5,0x3
20405942:	97b6                	add	a5,a5,a3
20405944:	0907a783          	lw	a5,144(a5)
20405948:	f8c42583          	lw	a1,-116(s0)
2040594c:	f9442503          	lw	a0,-108(s0)
20405950:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
		return;
20405952:	a8a9                	j	204059ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20405954:	f9c42783          	lw	a5,-100(s0)
20405958:	03f7f713          	andi	a4,a5,63
2040595c:	4789                	li	a5,2
2040595e:	04f71763          	bne	a4,a5,204059ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192
    		uintptr_t mtvt;
    		metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile ("csrr %0, 0x307" : "=r"(mtvt));
20405962:	307027f3          	csrr	a5,mtvt
20405966:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
               	priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2040596a:	f9842783          	lw	a5,-104(s0)
2040596e:	0dc7a783          	lw	a5,220(a5)
20405972:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
               	mtvt_handler = (metal_interrupt_handler_t)*(uintptr_t *)mtvt;
20405976:	f9042783          	lw	a5,-112(s0)
2040597a:	439c                	lw	a5,0(a5)
2040597c:	f8f42423          	sw	a5,-120(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
               	mtvt_handler(id, priv);
20405980:	f8842783          	lw	a5,-120(s0)
20405984:	f8c42583          	lw	a1,-116(s0)
20405988:	f9442503          	lw	a0,-108(s0)
2040598c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:196
		return;
2040598e:	a839                	j	204059ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:199
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20405990:	f9842703          	lw	a4,-104(s0)
20405994:	f9442783          	lw	a5,-108(s0)
20405998:	0e078793          	addi	a5,a5,224
2040599c:	078a                	slli	a5,a5,0x2
2040599e:	97ba                	add	a5,a5,a4
204059a0:	479c                	lw	a5,8(a5)
204059a2:	f9442583          	lw	a1,-108(s0)
204059a6:	fac42503          	lw	a0,-84(s0)
204059aa:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
        }
    }
}
204059ac:	50f6                	lw	ra,124(sp)
204059ae:	52e6                	lw	t0,120(sp)
204059b0:	5356                	lw	t1,116(sp)
204059b2:	53c6                	lw	t2,112(sp)
204059b4:	5436                	lw	s0,108(sp)
204059b6:	5526                	lw	a0,104(sp)
204059b8:	5596                	lw	a1,100(sp)
204059ba:	5606                	lw	a2,96(sp)
204059bc:	46f6                	lw	a3,92(sp)
204059be:	4766                	lw	a4,88(sp)
204059c0:	47d6                	lw	a5,84(sp)
204059c2:	4846                	lw	a6,80(sp)
204059c4:	48b6                	lw	a7,76(sp)
204059c6:	4e26                	lw	t3,72(sp)
204059c8:	4e96                	lw	t4,68(sp)
204059ca:	4f06                	lw	t5,64(sp)
204059cc:	5ff2                	lw	t6,60(sp)
204059ce:	6109                	addi	sp,sp,128
204059d0:	30200073          	mret
	...

204059fa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler (void) {
204059fa:	711d                	addi	sp,sp,-96
204059fc:	ce86                	sw	ra,92(sp)
204059fe:	cc96                	sw	t0,88(sp)
20405a00:	ca9a                	sw	t1,84(sp)
20405a02:	c89e                	sw	t2,80(sp)
20405a04:	c6a2                	sw	s0,76(sp)
20405a06:	c4aa                	sw	a0,72(sp)
20405a08:	c2ae                	sw	a1,68(sp)
20405a0a:	c0b2                	sw	a2,64(sp)
20405a0c:	de36                	sw	a3,60(sp)
20405a0e:	dc3a                	sw	a4,56(sp)
20405a10:	da3e                	sw	a5,52(sp)
20405a12:	d842                	sw	a6,48(sp)
20405a14:	d646                	sw	a7,44(sp)
20405a16:	d472                	sw	t3,40(sp)
20405a18:	d276                	sw	t4,36(sp)
20405a1a:	d07a                	sw	t5,32(sp)
20405a1c:	ce7e                	sw	t6,28(sp)
20405a1e:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405a20:	a67ff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405a24:	872a                	mv	a4,a0
20405a26:	800037b7          	lui	a5,0x80003
20405a2a:	070a                	slli	a4,a4,0x2
20405a2c:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405a30:	97ba                	add	a5,a5,a4
20405a32:	439c                	lw	a5,0(a5)
20405a34:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:210

    if ( cpu ) {
20405a38:	fac42783          	lw	a5,-84(s0)
20405a3c:	c78d                	beqz	a5,20405a66 <metal_lc0_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:212
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405a3e:	fac42503          	lw	a0,-84(s0)
20405a42:	9ebff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405a46:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:213
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC0].exint_data;
20405a4a:	fa842783          	lw	a5,-88(s0)
20405a4e:	2187a783          	lw	a5,536(a5)
20405a52:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214
        intc->metal_int_table[METAL_INTERRUPT_ID_LC0].handler(METAL_INTERRUPT_ID_LC0, priv);
20405a56:	fa842783          	lw	a5,-88(s0)
20405a5a:	2107a783          	lw	a5,528(a5)
20405a5e:	fa442583          	lw	a1,-92(s0)
20405a62:	4541                	li	a0,16
20405a64:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
    }
}
20405a66:	0001                	nop
20405a68:	40f6                	lw	ra,92(sp)
20405a6a:	42e6                	lw	t0,88(sp)
20405a6c:	4356                	lw	t1,84(sp)
20405a6e:	43c6                	lw	t2,80(sp)
20405a70:	4436                	lw	s0,76(sp)
20405a72:	4526                	lw	a0,72(sp)
20405a74:	4596                	lw	a1,68(sp)
20405a76:	4606                	lw	a2,64(sp)
20405a78:	56f2                	lw	a3,60(sp)
20405a7a:	5762                	lw	a4,56(sp)
20405a7c:	57d2                	lw	a5,52(sp)
20405a7e:	5842                	lw	a6,48(sp)
20405a80:	58b2                	lw	a7,44(sp)
20405a82:	5e22                	lw	t3,40(sp)
20405a84:	5e92                	lw	t4,36(sp)
20405a86:	5f02                	lw	t5,32(sp)
20405a88:	4ff2                	lw	t6,28(sp)
20405a8a:	6125                	addi	sp,sp,96
20405a8c:	30200073          	mret

20405a90 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler (void) {
20405a90:	711d                	addi	sp,sp,-96
20405a92:	ce86                	sw	ra,92(sp)
20405a94:	cc96                	sw	t0,88(sp)
20405a96:	ca9a                	sw	t1,84(sp)
20405a98:	c89e                	sw	t2,80(sp)
20405a9a:	c6a2                	sw	s0,76(sp)
20405a9c:	c4aa                	sw	a0,72(sp)
20405a9e:	c2ae                	sw	a1,68(sp)
20405aa0:	c0b2                	sw	a2,64(sp)
20405aa2:	de36                	sw	a3,60(sp)
20405aa4:	dc3a                	sw	a4,56(sp)
20405aa6:	da3e                	sw	a5,52(sp)
20405aa8:	d842                	sw	a6,48(sp)
20405aaa:	d646                	sw	a7,44(sp)
20405aac:	d472                	sw	t3,40(sp)
20405aae:	d276                	sw	t4,36(sp)
20405ab0:	d07a                	sw	t5,32(sp)
20405ab2:	ce7e                	sw	t6,28(sp)
20405ab4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:222
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405ab6:	9d1ff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405aba:	872a                	mv	a4,a0
20405abc:	800037b7          	lui	a5,0x80003
20405ac0:	070a                	slli	a4,a4,0x2
20405ac2:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405ac6:	97ba                	add	a5,a5,a4
20405ac8:	439c                	lw	a5,0(a5)
20405aca:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

    if ( cpu ) {
20405ace:	fac42783          	lw	a5,-84(s0)
20405ad2:	c78d                	beqz	a5,20405afc <metal_lc1_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405ad4:	fac42503          	lw	a0,-84(s0)
20405ad8:	955ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405adc:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:227
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC1].exint_data;
20405ae0:	fa842783          	lw	a5,-88(s0)
20405ae4:	2307a783          	lw	a5,560(a5)
20405ae8:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:228
        intc->metal_int_table[METAL_INTERRUPT_ID_LC1].handler(METAL_INTERRUPT_ID_LC1, priv);
20405aec:	fa842783          	lw	a5,-88(s0)
20405af0:	2287a783          	lw	a5,552(a5)
20405af4:	fa442583          	lw	a1,-92(s0)
20405af8:	4545                	li	a0,17
20405afa:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    }
}
20405afc:	0001                	nop
20405afe:	40f6                	lw	ra,92(sp)
20405b00:	42e6                	lw	t0,88(sp)
20405b02:	4356                	lw	t1,84(sp)
20405b04:	43c6                	lw	t2,80(sp)
20405b06:	4436                	lw	s0,76(sp)
20405b08:	4526                	lw	a0,72(sp)
20405b0a:	4596                	lw	a1,68(sp)
20405b0c:	4606                	lw	a2,64(sp)
20405b0e:	56f2                	lw	a3,60(sp)
20405b10:	5762                	lw	a4,56(sp)
20405b12:	57d2                	lw	a5,52(sp)
20405b14:	5842                	lw	a6,48(sp)
20405b16:	58b2                	lw	a7,44(sp)
20405b18:	5e22                	lw	t3,40(sp)
20405b1a:	5e92                	lw	t4,36(sp)
20405b1c:	5f02                	lw	t5,32(sp)
20405b1e:	4ff2                	lw	t6,28(sp)
20405b20:	6125                	addi	sp,sp,96
20405b22:	30200073          	mret

20405b26 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:233

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler (void) {
20405b26:	711d                	addi	sp,sp,-96
20405b28:	ce86                	sw	ra,92(sp)
20405b2a:	cc96                	sw	t0,88(sp)
20405b2c:	ca9a                	sw	t1,84(sp)
20405b2e:	c89e                	sw	t2,80(sp)
20405b30:	c6a2                	sw	s0,76(sp)
20405b32:	c4aa                	sw	a0,72(sp)
20405b34:	c2ae                	sw	a1,68(sp)
20405b36:	c0b2                	sw	a2,64(sp)
20405b38:	de36                	sw	a3,60(sp)
20405b3a:	dc3a                	sw	a4,56(sp)
20405b3c:	da3e                	sw	a5,52(sp)
20405b3e:	d842                	sw	a6,48(sp)
20405b40:	d646                	sw	a7,44(sp)
20405b42:	d472                	sw	t3,40(sp)
20405b44:	d276                	sw	t4,36(sp)
20405b46:	d07a                	sw	t5,32(sp)
20405b48:	ce7e                	sw	t6,28(sp)
20405b4a:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405b4c:	93bff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405b50:	872a                	mv	a4,a0
20405b52:	800037b7          	lui	a5,0x80003
20405b56:	070a                	slli	a4,a4,0x2
20405b58:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405b5c:	97ba                	add	a5,a5,a4
20405b5e:	439c                	lw	a5,0(a5)
20405b60:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:238

    if ( cpu ) {
20405b64:	fac42783          	lw	a5,-84(s0)
20405b68:	c78d                	beqz	a5,20405b92 <metal_lc2_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405b6a:	fac42503          	lw	a0,-84(s0)
20405b6e:	8bfff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405b72:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC2].exint_data;
20405b76:	fa842783          	lw	a5,-88(s0)
20405b7a:	2487a783          	lw	a5,584(a5)
20405b7e:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:242
        intc->metal_int_table[METAL_INTERRUPT_ID_LC2].handler(METAL_INTERRUPT_ID_LC2, priv);
20405b82:	fa842783          	lw	a5,-88(s0)
20405b86:	2407a783          	lw	a5,576(a5)
20405b8a:	fa442583          	lw	a1,-92(s0)
20405b8e:	4549                	li	a0,18
20405b90:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244
    }
}
20405b92:	0001                	nop
20405b94:	40f6                	lw	ra,92(sp)
20405b96:	42e6                	lw	t0,88(sp)
20405b98:	4356                	lw	t1,84(sp)
20405b9a:	43c6                	lw	t2,80(sp)
20405b9c:	4436                	lw	s0,76(sp)
20405b9e:	4526                	lw	a0,72(sp)
20405ba0:	4596                	lw	a1,68(sp)
20405ba2:	4606                	lw	a2,64(sp)
20405ba4:	56f2                	lw	a3,60(sp)
20405ba6:	5762                	lw	a4,56(sp)
20405ba8:	57d2                	lw	a5,52(sp)
20405baa:	5842                	lw	a6,48(sp)
20405bac:	58b2                	lw	a7,44(sp)
20405bae:	5e22                	lw	t3,40(sp)
20405bb0:	5e92                	lw	t4,36(sp)
20405bb2:	5f02                	lw	t5,32(sp)
20405bb4:	4ff2                	lw	t6,28(sp)
20405bb6:	6125                	addi	sp,sp,96
20405bb8:	30200073          	mret

20405bbc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:247

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler (void) {
20405bbc:	711d                	addi	sp,sp,-96
20405bbe:	ce86                	sw	ra,92(sp)
20405bc0:	cc96                	sw	t0,88(sp)
20405bc2:	ca9a                	sw	t1,84(sp)
20405bc4:	c89e                	sw	t2,80(sp)
20405bc6:	c6a2                	sw	s0,76(sp)
20405bc8:	c4aa                	sw	a0,72(sp)
20405bca:	c2ae                	sw	a1,68(sp)
20405bcc:	c0b2                	sw	a2,64(sp)
20405bce:	de36                	sw	a3,60(sp)
20405bd0:	dc3a                	sw	a4,56(sp)
20405bd2:	da3e                	sw	a5,52(sp)
20405bd4:	d842                	sw	a6,48(sp)
20405bd6:	d646                	sw	a7,44(sp)
20405bd8:	d472                	sw	t3,40(sp)
20405bda:	d276                	sw	t4,36(sp)
20405bdc:	d07a                	sw	t5,32(sp)
20405bde:	ce7e                	sw	t6,28(sp)
20405be0:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405be2:	8a5ff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405be6:	872a                	mv	a4,a0
20405be8:	800037b7          	lui	a5,0x80003
20405bec:	070a                	slli	a4,a4,0x2
20405bee:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405bf2:	97ba                	add	a5,a5,a4
20405bf4:	439c                	lw	a5,0(a5)
20405bf6:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:252

    if ( cpu ) {
20405bfa:	fac42783          	lw	a5,-84(s0)
20405bfe:	c78d                	beqz	a5,20405c28 <metal_lc3_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405c00:	fac42503          	lw	a0,-84(s0)
20405c04:	829ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405c08:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC3].exint_data;
20405c0c:	fa842783          	lw	a5,-88(s0)
20405c10:	2607a783          	lw	a5,608(a5)
20405c14:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
        intc->metal_int_table[METAL_INTERRUPT_ID_LC3].handler(METAL_INTERRUPT_ID_LC3, priv);
20405c18:	fa842783          	lw	a5,-88(s0)
20405c1c:	2587a783          	lw	a5,600(a5)
20405c20:	fa442583          	lw	a1,-92(s0)
20405c24:	454d                	li	a0,19
20405c26:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:258
    }
}
20405c28:	0001                	nop
20405c2a:	40f6                	lw	ra,92(sp)
20405c2c:	42e6                	lw	t0,88(sp)
20405c2e:	4356                	lw	t1,84(sp)
20405c30:	43c6                	lw	t2,80(sp)
20405c32:	4436                	lw	s0,76(sp)
20405c34:	4526                	lw	a0,72(sp)
20405c36:	4596                	lw	a1,68(sp)
20405c38:	4606                	lw	a2,64(sp)
20405c3a:	56f2                	lw	a3,60(sp)
20405c3c:	5762                	lw	a4,56(sp)
20405c3e:	57d2                	lw	a5,52(sp)
20405c40:	5842                	lw	a6,48(sp)
20405c42:	58b2                	lw	a7,44(sp)
20405c44:	5e22                	lw	t3,40(sp)
20405c46:	5e92                	lw	t4,36(sp)
20405c48:	5f02                	lw	t5,32(sp)
20405c4a:	4ff2                	lw	t6,28(sp)
20405c4c:	6125                	addi	sp,sp,96
20405c4e:	30200073          	mret

20405c52 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler (void) {
20405c52:	711d                	addi	sp,sp,-96
20405c54:	ce86                	sw	ra,92(sp)
20405c56:	cc96                	sw	t0,88(sp)
20405c58:	ca9a                	sw	t1,84(sp)
20405c5a:	c89e                	sw	t2,80(sp)
20405c5c:	c6a2                	sw	s0,76(sp)
20405c5e:	c4aa                	sw	a0,72(sp)
20405c60:	c2ae                	sw	a1,68(sp)
20405c62:	c0b2                	sw	a2,64(sp)
20405c64:	de36                	sw	a3,60(sp)
20405c66:	dc3a                	sw	a4,56(sp)
20405c68:	da3e                	sw	a5,52(sp)
20405c6a:	d842                	sw	a6,48(sp)
20405c6c:	d646                	sw	a7,44(sp)
20405c6e:	d472                	sw	t3,40(sp)
20405c70:	d276                	sw	t4,36(sp)
20405c72:	d07a                	sw	t5,32(sp)
20405c74:	ce7e                	sw	t6,28(sp)
20405c76:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:264
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405c78:	80fff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405c7c:	872a                	mv	a4,a0
20405c7e:	800037b7          	lui	a5,0x80003
20405c82:	070a                	slli	a4,a4,0x2
20405c84:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405c88:	97ba                	add	a5,a5,a4
20405c8a:	439c                	lw	a5,0(a5)
20405c8c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266

    if ( cpu ) {
20405c90:	fac42783          	lw	a5,-84(s0)
20405c94:	c78d                	beqz	a5,20405cbe <metal_lc4_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:268
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405c96:	fac42503          	lw	a0,-84(s0)
20405c9a:	f92ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405c9e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:269
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC4].exint_data;
20405ca2:	fa842783          	lw	a5,-88(s0)
20405ca6:	2787a783          	lw	a5,632(a5)
20405caa:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:270
        intc->metal_int_table[METAL_INTERRUPT_ID_LC4].handler(METAL_INTERRUPT_ID_LC4, priv);
20405cae:	fa842783          	lw	a5,-88(s0)
20405cb2:	2707a783          	lw	a5,624(a5)
20405cb6:	fa442583          	lw	a1,-92(s0)
20405cba:	4551                	li	a0,20
20405cbc:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    }
}
20405cbe:	0001                	nop
20405cc0:	40f6                	lw	ra,92(sp)
20405cc2:	42e6                	lw	t0,88(sp)
20405cc4:	4356                	lw	t1,84(sp)
20405cc6:	43c6                	lw	t2,80(sp)
20405cc8:	4436                	lw	s0,76(sp)
20405cca:	4526                	lw	a0,72(sp)
20405ccc:	4596                	lw	a1,68(sp)
20405cce:	4606                	lw	a2,64(sp)
20405cd0:	56f2                	lw	a3,60(sp)
20405cd2:	5762                	lw	a4,56(sp)
20405cd4:	57d2                	lw	a5,52(sp)
20405cd6:	5842                	lw	a6,48(sp)
20405cd8:	58b2                	lw	a7,44(sp)
20405cda:	5e22                	lw	t3,40(sp)
20405cdc:	5e92                	lw	t4,36(sp)
20405cde:	5f02                	lw	t5,32(sp)
20405ce0:	4ff2                	lw	t6,28(sp)
20405ce2:	6125                	addi	sp,sp,96
20405ce4:	30200073          	mret

20405ce8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:275

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler (void) {
20405ce8:	711d                	addi	sp,sp,-96
20405cea:	ce86                	sw	ra,92(sp)
20405cec:	cc96                	sw	t0,88(sp)
20405cee:	ca9a                	sw	t1,84(sp)
20405cf0:	c89e                	sw	t2,80(sp)
20405cf2:	c6a2                	sw	s0,76(sp)
20405cf4:	c4aa                	sw	a0,72(sp)
20405cf6:	c2ae                	sw	a1,68(sp)
20405cf8:	c0b2                	sw	a2,64(sp)
20405cfa:	de36                	sw	a3,60(sp)
20405cfc:	dc3a                	sw	a4,56(sp)
20405cfe:	da3e                	sw	a5,52(sp)
20405d00:	d842                	sw	a6,48(sp)
20405d02:	d646                	sw	a7,44(sp)
20405d04:	d472                	sw	t3,40(sp)
20405d06:	d276                	sw	t4,36(sp)
20405d08:	d07a                	sw	t5,32(sp)
20405d0a:	ce7e                	sw	t6,28(sp)
20405d0c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405d0e:	f78ff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405d12:	872a                	mv	a4,a0
20405d14:	800037b7          	lui	a5,0x80003
20405d18:	070a                	slli	a4,a4,0x2
20405d1a:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405d1e:	97ba                	add	a5,a5,a4
20405d20:	439c                	lw	a5,0(a5)
20405d22:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:280

    if ( cpu ) {
20405d26:	fac42783          	lw	a5,-84(s0)
20405d2a:	c78d                	beqz	a5,20405d54 <metal_lc5_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:282
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405d2c:	fac42503          	lw	a0,-84(s0)
20405d30:	efcff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405d34:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC5].exint_data;
20405d38:	fa842783          	lw	a5,-88(s0)
20405d3c:	2907a783          	lw	a5,656(a5)
20405d40:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
        intc->metal_int_table[METAL_INTERRUPT_ID_LC5].handler(METAL_INTERRUPT_ID_LC5, priv);
20405d44:	fa842783          	lw	a5,-88(s0)
20405d48:	2887a783          	lw	a5,648(a5)
20405d4c:	fa442583          	lw	a1,-92(s0)
20405d50:	4555                	li	a0,21
20405d52:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:286
    }
}
20405d54:	0001                	nop
20405d56:	40f6                	lw	ra,92(sp)
20405d58:	42e6                	lw	t0,88(sp)
20405d5a:	4356                	lw	t1,84(sp)
20405d5c:	43c6                	lw	t2,80(sp)
20405d5e:	4436                	lw	s0,76(sp)
20405d60:	4526                	lw	a0,72(sp)
20405d62:	4596                	lw	a1,68(sp)
20405d64:	4606                	lw	a2,64(sp)
20405d66:	56f2                	lw	a3,60(sp)
20405d68:	5762                	lw	a4,56(sp)
20405d6a:	57d2                	lw	a5,52(sp)
20405d6c:	5842                	lw	a6,48(sp)
20405d6e:	58b2                	lw	a7,44(sp)
20405d70:	5e22                	lw	t3,40(sp)
20405d72:	5e92                	lw	t4,36(sp)
20405d74:	5f02                	lw	t5,32(sp)
20405d76:	4ff2                	lw	t6,28(sp)
20405d78:	6125                	addi	sp,sp,96
20405d7a:	30200073          	mret

20405d7e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler (void) {
20405d7e:	711d                	addi	sp,sp,-96
20405d80:	ce86                	sw	ra,92(sp)
20405d82:	cc96                	sw	t0,88(sp)
20405d84:	ca9a                	sw	t1,84(sp)
20405d86:	c89e                	sw	t2,80(sp)
20405d88:	c6a2                	sw	s0,76(sp)
20405d8a:	c4aa                	sw	a0,72(sp)
20405d8c:	c2ae                	sw	a1,68(sp)
20405d8e:	c0b2                	sw	a2,64(sp)
20405d90:	de36                	sw	a3,60(sp)
20405d92:	dc3a                	sw	a4,56(sp)
20405d94:	da3e                	sw	a5,52(sp)
20405d96:	d842                	sw	a6,48(sp)
20405d98:	d646                	sw	a7,44(sp)
20405d9a:	d472                	sw	t3,40(sp)
20405d9c:	d276                	sw	t4,36(sp)
20405d9e:	d07a                	sw	t5,32(sp)
20405da0:	ce7e                	sw	t6,28(sp)
20405da2:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:292
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405da4:	ee2ff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405da8:	872a                	mv	a4,a0
20405daa:	800037b7          	lui	a5,0x80003
20405dae:	070a                	slli	a4,a4,0x2
20405db0:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405db4:	97ba                	add	a5,a5,a4
20405db6:	439c                	lw	a5,0(a5)
20405db8:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:294

    if ( cpu ) {
20405dbc:	fac42783          	lw	a5,-84(s0)
20405dc0:	c78d                	beqz	a5,20405dea <metal_lc6_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405dc2:	fac42503          	lw	a0,-84(s0)
20405dc6:	e66ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405dca:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC6].exint_data;
20405dce:	fa842783          	lw	a5,-88(s0)
20405dd2:	2a87a783          	lw	a5,680(a5)
20405dd6:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:298
        intc->metal_int_table[METAL_INTERRUPT_ID_LC6].handler(METAL_INTERRUPT_ID_LC6, priv);
20405dda:	fa842783          	lw	a5,-88(s0)
20405dde:	2a07a783          	lw	a5,672(a5)
20405de2:	fa442583          	lw	a1,-92(s0)
20405de6:	4559                	li	a0,22
20405de8:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:300
    }
}
20405dea:	0001                	nop
20405dec:	40f6                	lw	ra,92(sp)
20405dee:	42e6                	lw	t0,88(sp)
20405df0:	4356                	lw	t1,84(sp)
20405df2:	43c6                	lw	t2,80(sp)
20405df4:	4436                	lw	s0,76(sp)
20405df6:	4526                	lw	a0,72(sp)
20405df8:	4596                	lw	a1,68(sp)
20405dfa:	4606                	lw	a2,64(sp)
20405dfc:	56f2                	lw	a3,60(sp)
20405dfe:	5762                	lw	a4,56(sp)
20405e00:	57d2                	lw	a5,52(sp)
20405e02:	5842                	lw	a6,48(sp)
20405e04:	58b2                	lw	a7,44(sp)
20405e06:	5e22                	lw	t3,40(sp)
20405e08:	5e92                	lw	t4,36(sp)
20405e0a:	5f02                	lw	t5,32(sp)
20405e0c:	4ff2                	lw	t6,28(sp)
20405e0e:	6125                	addi	sp,sp,96
20405e10:	30200073          	mret

20405e14 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler (void) {
20405e14:	711d                	addi	sp,sp,-96
20405e16:	ce86                	sw	ra,92(sp)
20405e18:	cc96                	sw	t0,88(sp)
20405e1a:	ca9a                	sw	t1,84(sp)
20405e1c:	c89e                	sw	t2,80(sp)
20405e1e:	c6a2                	sw	s0,76(sp)
20405e20:	c4aa                	sw	a0,72(sp)
20405e22:	c2ae                	sw	a1,68(sp)
20405e24:	c0b2                	sw	a2,64(sp)
20405e26:	de36                	sw	a3,60(sp)
20405e28:	dc3a                	sw	a4,56(sp)
20405e2a:	da3e                	sw	a5,52(sp)
20405e2c:	d842                	sw	a6,48(sp)
20405e2e:	d646                	sw	a7,44(sp)
20405e30:	d472                	sw	t3,40(sp)
20405e32:	d276                	sw	t4,36(sp)
20405e34:	d07a                	sw	t5,32(sp)
20405e36:	ce7e                	sw	t6,28(sp)
20405e38:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:306
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405e3a:	e4cff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405e3e:	872a                	mv	a4,a0
20405e40:	800037b7          	lui	a5,0x80003
20405e44:	070a                	slli	a4,a4,0x2
20405e46:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405e4a:	97ba                	add	a5,a5,a4
20405e4c:	439c                	lw	a5,0(a5)
20405e4e:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:308

    if ( cpu ) {
20405e52:	fac42783          	lw	a5,-84(s0)
20405e56:	c78d                	beqz	a5,20405e80 <metal_lc7_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:310
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405e58:	fac42503          	lw	a0,-84(s0)
20405e5c:	dd0ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405e60:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC7].exint_data;
20405e64:	fa842783          	lw	a5,-88(s0)
20405e68:	2c07a783          	lw	a5,704(a5)
20405e6c:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:312
        intc->metal_int_table[METAL_INTERRUPT_ID_LC7].handler(METAL_INTERRUPT_ID_LC7, priv);
20405e70:	fa842783          	lw	a5,-88(s0)
20405e74:	2b87a783          	lw	a5,696(a5)
20405e78:	fa442583          	lw	a1,-92(s0)
20405e7c:	455d                	li	a0,23
20405e7e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
    }
}
20405e80:	0001                	nop
20405e82:	40f6                	lw	ra,92(sp)
20405e84:	42e6                	lw	t0,88(sp)
20405e86:	4356                	lw	t1,84(sp)
20405e88:	43c6                	lw	t2,80(sp)
20405e8a:	4436                	lw	s0,76(sp)
20405e8c:	4526                	lw	a0,72(sp)
20405e8e:	4596                	lw	a1,68(sp)
20405e90:	4606                	lw	a2,64(sp)
20405e92:	56f2                	lw	a3,60(sp)
20405e94:	5762                	lw	a4,56(sp)
20405e96:	57d2                	lw	a5,52(sp)
20405e98:	5842                	lw	a6,48(sp)
20405e9a:	58b2                	lw	a7,44(sp)
20405e9c:	5e22                	lw	t3,40(sp)
20405e9e:	5e92                	lw	t4,36(sp)
20405ea0:	5f02                	lw	t5,32(sp)
20405ea2:	4ff2                	lw	t6,28(sp)
20405ea4:	6125                	addi	sp,sp,96
20405ea6:	30200073          	mret

20405eaa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler (void) {
20405eaa:	711d                	addi	sp,sp,-96
20405eac:	ce86                	sw	ra,92(sp)
20405eae:	cc96                	sw	t0,88(sp)
20405eb0:	ca9a                	sw	t1,84(sp)
20405eb2:	c89e                	sw	t2,80(sp)
20405eb4:	c6a2                	sw	s0,76(sp)
20405eb6:	c4aa                	sw	a0,72(sp)
20405eb8:	c2ae                	sw	a1,68(sp)
20405eba:	c0b2                	sw	a2,64(sp)
20405ebc:	de36                	sw	a3,60(sp)
20405ebe:	dc3a                	sw	a4,56(sp)
20405ec0:	da3e                	sw	a5,52(sp)
20405ec2:	d842                	sw	a6,48(sp)
20405ec4:	d646                	sw	a7,44(sp)
20405ec6:	d472                	sw	t3,40(sp)
20405ec8:	d276                	sw	t4,36(sp)
20405eca:	d07a                	sw	t5,32(sp)
20405ecc:	ce7e                	sw	t6,28(sp)
20405ece:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405ed0:	db6ff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405ed4:	872a                	mv	a4,a0
20405ed6:	800037b7          	lui	a5,0x80003
20405eda:	070a                	slli	a4,a4,0x2
20405edc:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405ee0:	97ba                	add	a5,a5,a4
20405ee2:	439c                	lw	a5,0(a5)
20405ee4:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322

    if ( cpu ) {
20405ee8:	fac42783          	lw	a5,-84(s0)
20405eec:	c78d                	beqz	a5,20405f16 <metal_lc8_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405eee:	fac42503          	lw	a0,-84(s0)
20405ef2:	d3aff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405ef6:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:325
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC8].exint_data;
20405efa:	fa842783          	lw	a5,-88(s0)
20405efe:	2d87a783          	lw	a5,728(a5)
20405f02:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:326
        intc->metal_int_table[METAL_INTERRUPT_ID_LC8].handler(METAL_INTERRUPT_ID_LC8, priv);
20405f06:	fa842783          	lw	a5,-88(s0)
20405f0a:	2d07a783          	lw	a5,720(a5)
20405f0e:	fa442583          	lw	a1,-92(s0)
20405f12:	4561                	li	a0,24
20405f14:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
    }
}
20405f16:	0001                	nop
20405f18:	40f6                	lw	ra,92(sp)
20405f1a:	42e6                	lw	t0,88(sp)
20405f1c:	4356                	lw	t1,84(sp)
20405f1e:	43c6                	lw	t2,80(sp)
20405f20:	4436                	lw	s0,76(sp)
20405f22:	4526                	lw	a0,72(sp)
20405f24:	4596                	lw	a1,68(sp)
20405f26:	4606                	lw	a2,64(sp)
20405f28:	56f2                	lw	a3,60(sp)
20405f2a:	5762                	lw	a4,56(sp)
20405f2c:	57d2                	lw	a5,52(sp)
20405f2e:	5842                	lw	a6,48(sp)
20405f30:	58b2                	lw	a7,44(sp)
20405f32:	5e22                	lw	t3,40(sp)
20405f34:	5e92                	lw	t4,36(sp)
20405f36:	5f02                	lw	t5,32(sp)
20405f38:	4ff2                	lw	t6,28(sp)
20405f3a:	6125                	addi	sp,sp,96
20405f3c:	30200073          	mret

20405f40 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler (void) {
20405f40:	711d                	addi	sp,sp,-96
20405f42:	ce86                	sw	ra,92(sp)
20405f44:	cc96                	sw	t0,88(sp)
20405f46:	ca9a                	sw	t1,84(sp)
20405f48:	c89e                	sw	t2,80(sp)
20405f4a:	c6a2                	sw	s0,76(sp)
20405f4c:	c4aa                	sw	a0,72(sp)
20405f4e:	c2ae                	sw	a1,68(sp)
20405f50:	c0b2                	sw	a2,64(sp)
20405f52:	de36                	sw	a3,60(sp)
20405f54:	dc3a                	sw	a4,56(sp)
20405f56:	da3e                	sw	a5,52(sp)
20405f58:	d842                	sw	a6,48(sp)
20405f5a:	d646                	sw	a7,44(sp)
20405f5c:	d472                	sw	t3,40(sp)
20405f5e:	d276                	sw	t4,36(sp)
20405f60:	d07a                	sw	t5,32(sp)
20405f62:	ce7e                	sw	t6,28(sp)
20405f64:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405f66:	d20ff0ef          	jal	ra,20405486 <__metal_myhart_id>
20405f6a:	872a                	mv	a4,a0
20405f6c:	800037b7          	lui	a5,0x80003
20405f70:	070a                	slli	a4,a4,0x2
20405f72:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20405f76:	97ba                	add	a5,a5,a4
20405f78:	439c                	lw	a5,0(a5)
20405f7a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336

    if ( cpu ) {
20405f7e:	fac42783          	lw	a5,-84(s0)
20405f82:	c78d                	beqz	a5,20405fac <metal_lc9_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405f84:	fac42503          	lw	a0,-84(s0)
20405f88:	ca4ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20405f8c:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:339
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC9].exint_data;
20405f90:	fa842783          	lw	a5,-88(s0)
20405f94:	2f07a783          	lw	a5,752(a5)
20405f98:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        intc->metal_int_table[METAL_INTERRUPT_ID_LC9].handler(METAL_INTERRUPT_ID_LC9, priv);
20405f9c:	fa842783          	lw	a5,-88(s0)
20405fa0:	2e87a783          	lw	a5,744(a5)
20405fa4:	fa442583          	lw	a1,-92(s0)
20405fa8:	4565                	li	a0,25
20405faa:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
    }
}
20405fac:	0001                	nop
20405fae:	40f6                	lw	ra,92(sp)
20405fb0:	42e6                	lw	t0,88(sp)
20405fb2:	4356                	lw	t1,84(sp)
20405fb4:	43c6                	lw	t2,80(sp)
20405fb6:	4436                	lw	s0,76(sp)
20405fb8:	4526                	lw	a0,72(sp)
20405fba:	4596                	lw	a1,68(sp)
20405fbc:	4606                	lw	a2,64(sp)
20405fbe:	56f2                	lw	a3,60(sp)
20405fc0:	5762                	lw	a4,56(sp)
20405fc2:	57d2                	lw	a5,52(sp)
20405fc4:	5842                	lw	a6,48(sp)
20405fc6:	58b2                	lw	a7,44(sp)
20405fc8:	5e22                	lw	t3,40(sp)
20405fca:	5e92                	lw	t4,36(sp)
20405fcc:	5f02                	lw	t5,32(sp)
20405fce:	4ff2                	lw	t6,28(sp)
20405fd0:	6125                	addi	sp,sp,96
20405fd2:	30200073          	mret

20405fd6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:345

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc10_interrupt_vector_handler (void) {
20405fd6:	711d                	addi	sp,sp,-96
20405fd8:	ce86                	sw	ra,92(sp)
20405fda:	cc96                	sw	t0,88(sp)
20405fdc:	ca9a                	sw	t1,84(sp)
20405fde:	c89e                	sw	t2,80(sp)
20405fe0:	c6a2                	sw	s0,76(sp)
20405fe2:	c4aa                	sw	a0,72(sp)
20405fe4:	c2ae                	sw	a1,68(sp)
20405fe6:	c0b2                	sw	a2,64(sp)
20405fe8:	de36                	sw	a3,60(sp)
20405fea:	dc3a                	sw	a4,56(sp)
20405fec:	da3e                	sw	a5,52(sp)
20405fee:	d842                	sw	a6,48(sp)
20405ff0:	d646                	sw	a7,44(sp)
20405ff2:	d472                	sw	t3,40(sp)
20405ff4:	d276                	sw	t4,36(sp)
20405ff6:	d07a                	sw	t5,32(sp)
20405ff8:	ce7e                	sw	t6,28(sp)
20405ffa:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:348
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405ffc:	c8aff0ef          	jal	ra,20405486 <__metal_myhart_id>
20406000:	872a                	mv	a4,a0
20406002:	800037b7          	lui	a5,0x80003
20406006:	070a                	slli	a4,a4,0x2
20406008:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
2040600c:	97ba                	add	a5,a5,a4
2040600e:	439c                	lw	a5,0(a5)
20406010:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:350

    if ( cpu ) {
20406014:	fac42783          	lw	a5,-84(s0)
20406018:	c78d                	beqz	a5,20406042 <metal_lc10_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:352
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040601a:	fac42503          	lw	a0,-84(s0)
2040601e:	c0eff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20406022:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:353
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC10].exint_data;
20406026:	fa842783          	lw	a5,-88(s0)
2040602a:	3087a783          	lw	a5,776(a5)
2040602e:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:354
        intc->metal_int_table[METAL_INTERRUPT_ID_LC10].handler(METAL_INTERRUPT_ID_LC10, priv);
20406032:	fa842783          	lw	a5,-88(s0)
20406036:	3007a783          	lw	a5,768(a5)
2040603a:	fa442583          	lw	a1,-92(s0)
2040603e:	4569                	li	a0,26
20406040:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:356
    }
}
20406042:	0001                	nop
20406044:	40f6                	lw	ra,92(sp)
20406046:	42e6                	lw	t0,88(sp)
20406048:	4356                	lw	t1,84(sp)
2040604a:	43c6                	lw	t2,80(sp)
2040604c:	4436                	lw	s0,76(sp)
2040604e:	4526                	lw	a0,72(sp)
20406050:	4596                	lw	a1,68(sp)
20406052:	4606                	lw	a2,64(sp)
20406054:	56f2                	lw	a3,60(sp)
20406056:	5762                	lw	a4,56(sp)
20406058:	57d2                	lw	a5,52(sp)
2040605a:	5842                	lw	a6,48(sp)
2040605c:	58b2                	lw	a7,44(sp)
2040605e:	5e22                	lw	t3,40(sp)
20406060:	5e92                	lw	t4,36(sp)
20406062:	5f02                	lw	t5,32(sp)
20406064:	4ff2                	lw	t6,28(sp)
20406066:	6125                	addi	sp,sp,96
20406068:	30200073          	mret

2040606c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:359

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc11_interrupt_vector_handler (void) {
2040606c:	711d                	addi	sp,sp,-96
2040606e:	ce86                	sw	ra,92(sp)
20406070:	cc96                	sw	t0,88(sp)
20406072:	ca9a                	sw	t1,84(sp)
20406074:	c89e                	sw	t2,80(sp)
20406076:	c6a2                	sw	s0,76(sp)
20406078:	c4aa                	sw	a0,72(sp)
2040607a:	c2ae                	sw	a1,68(sp)
2040607c:	c0b2                	sw	a2,64(sp)
2040607e:	de36                	sw	a3,60(sp)
20406080:	dc3a                	sw	a4,56(sp)
20406082:	da3e                	sw	a5,52(sp)
20406084:	d842                	sw	a6,48(sp)
20406086:	d646                	sw	a7,44(sp)
20406088:	d472                	sw	t3,40(sp)
2040608a:	d276                	sw	t4,36(sp)
2040608c:	d07a                	sw	t5,32(sp)
2040608e:	ce7e                	sw	t6,28(sp)
20406090:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:362
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406092:	bf4ff0ef          	jal	ra,20405486 <__metal_myhart_id>
20406096:	872a                	mv	a4,a0
20406098:	800037b7          	lui	a5,0x80003
2040609c:	070a                	slli	a4,a4,0x2
2040609e:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
204060a2:	97ba                	add	a5,a5,a4
204060a4:	439c                	lw	a5,0(a5)
204060a6:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:364

    if ( cpu ) {
204060aa:	fac42783          	lw	a5,-84(s0)
204060ae:	c78d                	beqz	a5,204060d8 <metal_lc11_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:366
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204060b0:	fac42503          	lw	a0,-84(s0)
204060b4:	b78ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
204060b8:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:367
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC11].exint_data;
204060bc:	fa842783          	lw	a5,-88(s0)
204060c0:	3207a783          	lw	a5,800(a5)
204060c4:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        intc->metal_int_table[METAL_INTERRUPT_ID_LC11].handler(METAL_INTERRUPT_ID_LC11, priv);
204060c8:	fa842783          	lw	a5,-88(s0)
204060cc:	3187a783          	lw	a5,792(a5)
204060d0:	fa442583          	lw	a1,-92(s0)
204060d4:	456d                	li	a0,27
204060d6:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    }
}
204060d8:	0001                	nop
204060da:	40f6                	lw	ra,92(sp)
204060dc:	42e6                	lw	t0,88(sp)
204060de:	4356                	lw	t1,84(sp)
204060e0:	43c6                	lw	t2,80(sp)
204060e2:	4436                	lw	s0,76(sp)
204060e4:	4526                	lw	a0,72(sp)
204060e6:	4596                	lw	a1,68(sp)
204060e8:	4606                	lw	a2,64(sp)
204060ea:	56f2                	lw	a3,60(sp)
204060ec:	5762                	lw	a4,56(sp)
204060ee:	57d2                	lw	a5,52(sp)
204060f0:	5842                	lw	a6,48(sp)
204060f2:	58b2                	lw	a7,44(sp)
204060f4:	5e22                	lw	t3,40(sp)
204060f6:	5e92                	lw	t4,36(sp)
204060f8:	5f02                	lw	t5,32(sp)
204060fa:	4ff2                	lw	t6,28(sp)
204060fc:	6125                	addi	sp,sp,96
204060fe:	30200073          	mret

20406102 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc12_interrupt_vector_handler (void) {
20406102:	711d                	addi	sp,sp,-96
20406104:	ce86                	sw	ra,92(sp)
20406106:	cc96                	sw	t0,88(sp)
20406108:	ca9a                	sw	t1,84(sp)
2040610a:	c89e                	sw	t2,80(sp)
2040610c:	c6a2                	sw	s0,76(sp)
2040610e:	c4aa                	sw	a0,72(sp)
20406110:	c2ae                	sw	a1,68(sp)
20406112:	c0b2                	sw	a2,64(sp)
20406114:	de36                	sw	a3,60(sp)
20406116:	dc3a                	sw	a4,56(sp)
20406118:	da3e                	sw	a5,52(sp)
2040611a:	d842                	sw	a6,48(sp)
2040611c:	d646                	sw	a7,44(sp)
2040611e:	d472                	sw	t3,40(sp)
20406120:	d276                	sw	t4,36(sp)
20406122:	d07a                	sw	t5,32(sp)
20406124:	ce7e                	sw	t6,28(sp)
20406126:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:376
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406128:	b5eff0ef          	jal	ra,20405486 <__metal_myhart_id>
2040612c:	872a                	mv	a4,a0
2040612e:	800037b7          	lui	a5,0x80003
20406132:	070a                	slli	a4,a4,0x2
20406134:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20406138:	97ba                	add	a5,a5,a4
2040613a:	439c                	lw	a5,0(a5)
2040613c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378

    if ( cpu ) {
20406140:	fac42783          	lw	a5,-84(s0)
20406144:	c78d                	beqz	a5,2040616e <metal_lc12_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406146:	fac42503          	lw	a0,-84(s0)
2040614a:	ae2ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
2040614e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC12].exint_data;
20406152:	fa842783          	lw	a5,-88(s0)
20406156:	3387a783          	lw	a5,824(a5)
2040615a:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:382
        intc->metal_int_table[METAL_INTERRUPT_ID_LC12].handler(METAL_INTERRUPT_ID_LC12, priv);
2040615e:	fa842783          	lw	a5,-88(s0)
20406162:	3307a783          	lw	a5,816(a5)
20406166:	fa442583          	lw	a1,-92(s0)
2040616a:	4571                	li	a0,28
2040616c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }
}
2040616e:	0001                	nop
20406170:	40f6                	lw	ra,92(sp)
20406172:	42e6                	lw	t0,88(sp)
20406174:	4356                	lw	t1,84(sp)
20406176:	43c6                	lw	t2,80(sp)
20406178:	4436                	lw	s0,76(sp)
2040617a:	4526                	lw	a0,72(sp)
2040617c:	4596                	lw	a1,68(sp)
2040617e:	4606                	lw	a2,64(sp)
20406180:	56f2                	lw	a3,60(sp)
20406182:	5762                	lw	a4,56(sp)
20406184:	57d2                	lw	a5,52(sp)
20406186:	5842                	lw	a6,48(sp)
20406188:	58b2                	lw	a7,44(sp)
2040618a:	5e22                	lw	t3,40(sp)
2040618c:	5e92                	lw	t4,36(sp)
2040618e:	5f02                	lw	t5,32(sp)
20406190:	4ff2                	lw	t6,28(sp)
20406192:	6125                	addi	sp,sp,96
20406194:	30200073          	mret

20406198 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc13_interrupt_vector_handler (void) {
20406198:	711d                	addi	sp,sp,-96
2040619a:	ce86                	sw	ra,92(sp)
2040619c:	cc96                	sw	t0,88(sp)
2040619e:	ca9a                	sw	t1,84(sp)
204061a0:	c89e                	sw	t2,80(sp)
204061a2:	c6a2                	sw	s0,76(sp)
204061a4:	c4aa                	sw	a0,72(sp)
204061a6:	c2ae                	sw	a1,68(sp)
204061a8:	c0b2                	sw	a2,64(sp)
204061aa:	de36                	sw	a3,60(sp)
204061ac:	dc3a                	sw	a4,56(sp)
204061ae:	da3e                	sw	a5,52(sp)
204061b0:	d842                	sw	a6,48(sp)
204061b2:	d646                	sw	a7,44(sp)
204061b4:	d472                	sw	t3,40(sp)
204061b6:	d276                	sw	t4,36(sp)
204061b8:	d07a                	sw	t5,32(sp)
204061ba:	ce7e                	sw	t6,28(sp)
204061bc:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:390
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204061be:	ac8ff0ef          	jal	ra,20405486 <__metal_myhart_id>
204061c2:	872a                	mv	a4,a0
204061c4:	800037b7          	lui	a5,0x80003
204061c8:	070a                	slli	a4,a4,0x2
204061ca:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
204061ce:	97ba                	add	a5,a5,a4
204061d0:	439c                	lw	a5,0(a5)
204061d2:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:392

    if ( cpu ) {
204061d6:	fac42783          	lw	a5,-84(s0)
204061da:	c78d                	beqz	a5,20406204 <metal_lc13_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204061dc:	fac42503          	lw	a0,-84(s0)
204061e0:	a4cff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
204061e4:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:395
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC13].exint_data;
204061e8:	fa842783          	lw	a5,-88(s0)
204061ec:	3507a783          	lw	a5,848(a5)
204061f0:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
        intc->metal_int_table[METAL_INTERRUPT_ID_LC13].handler(METAL_INTERRUPT_ID_LC13, priv);
204061f4:	fa842783          	lw	a5,-88(s0)
204061f8:	3487a783          	lw	a5,840(a5)
204061fc:	fa442583          	lw	a1,-92(s0)
20406200:	4575                	li	a0,29
20406202:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
    }
}
20406204:	0001                	nop
20406206:	40f6                	lw	ra,92(sp)
20406208:	42e6                	lw	t0,88(sp)
2040620a:	4356                	lw	t1,84(sp)
2040620c:	43c6                	lw	t2,80(sp)
2040620e:	4436                	lw	s0,76(sp)
20406210:	4526                	lw	a0,72(sp)
20406212:	4596                	lw	a1,68(sp)
20406214:	4606                	lw	a2,64(sp)
20406216:	56f2                	lw	a3,60(sp)
20406218:	5762                	lw	a4,56(sp)
2040621a:	57d2                	lw	a5,52(sp)
2040621c:	5842                	lw	a6,48(sp)
2040621e:	58b2                	lw	a7,44(sp)
20406220:	5e22                	lw	t3,40(sp)
20406222:	5e92                	lw	t4,36(sp)
20406224:	5f02                	lw	t5,32(sp)
20406226:	4ff2                	lw	t6,28(sp)
20406228:	6125                	addi	sp,sp,96
2040622a:	30200073          	mret

2040622e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc14_interrupt_vector_handler (void) {
2040622e:	711d                	addi	sp,sp,-96
20406230:	ce86                	sw	ra,92(sp)
20406232:	cc96                	sw	t0,88(sp)
20406234:	ca9a                	sw	t1,84(sp)
20406236:	c89e                	sw	t2,80(sp)
20406238:	c6a2                	sw	s0,76(sp)
2040623a:	c4aa                	sw	a0,72(sp)
2040623c:	c2ae                	sw	a1,68(sp)
2040623e:	c0b2                	sw	a2,64(sp)
20406240:	de36                	sw	a3,60(sp)
20406242:	dc3a                	sw	a4,56(sp)
20406244:	da3e                	sw	a5,52(sp)
20406246:	d842                	sw	a6,48(sp)
20406248:	d646                	sw	a7,44(sp)
2040624a:	d472                	sw	t3,40(sp)
2040624c:	d276                	sw	t4,36(sp)
2040624e:	d07a                	sw	t5,32(sp)
20406250:	ce7e                	sw	t6,28(sp)
20406252:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:404
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406254:	a32ff0ef          	jal	ra,20405486 <__metal_myhart_id>
20406258:	872a                	mv	a4,a0
2040625a:	800037b7          	lui	a5,0x80003
2040625e:	070a                	slli	a4,a4,0x2
20406260:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
20406264:	97ba                	add	a5,a5,a4
20406266:	439c                	lw	a5,0(a5)
20406268:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:406

    if ( cpu ) {
2040626c:	fac42783          	lw	a5,-84(s0)
20406270:	c78d                	beqz	a5,2040629a <metal_lc14_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406272:	fac42503          	lw	a0,-84(s0)
20406276:	9b6ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
2040627a:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:409
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC14].exint_data;
2040627e:	fa842783          	lw	a5,-88(s0)
20406282:	3687a783          	lw	a5,872(a5)
20406286:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
        intc->metal_int_table[METAL_INTERRUPT_ID_LC14].handler(METAL_INTERRUPT_ID_LC14, priv);
2040628a:	fa842783          	lw	a5,-88(s0)
2040628e:	3607a783          	lw	a5,864(a5)
20406292:	fa442583          	lw	a1,-92(s0)
20406296:	4579                	li	a0,30
20406298:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
    }
}
2040629a:	0001                	nop
2040629c:	40f6                	lw	ra,92(sp)
2040629e:	42e6                	lw	t0,88(sp)
204062a0:	4356                	lw	t1,84(sp)
204062a2:	43c6                	lw	t2,80(sp)
204062a4:	4436                	lw	s0,76(sp)
204062a6:	4526                	lw	a0,72(sp)
204062a8:	4596                	lw	a1,68(sp)
204062aa:	4606                	lw	a2,64(sp)
204062ac:	56f2                	lw	a3,60(sp)
204062ae:	5762                	lw	a4,56(sp)
204062b0:	57d2                	lw	a5,52(sp)
204062b2:	5842                	lw	a6,48(sp)
204062b4:	58b2                	lw	a7,44(sp)
204062b6:	5e22                	lw	t3,40(sp)
204062b8:	5e92                	lw	t4,36(sp)
204062ba:	5f02                	lw	t5,32(sp)
204062bc:	4ff2                	lw	t6,28(sp)
204062be:	6125                	addi	sp,sp,96
204062c0:	30200073          	mret

204062c4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:415

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc15_interrupt_vector_handler (void) {
204062c4:	711d                	addi	sp,sp,-96
204062c6:	ce86                	sw	ra,92(sp)
204062c8:	cc96                	sw	t0,88(sp)
204062ca:	ca9a                	sw	t1,84(sp)
204062cc:	c89e                	sw	t2,80(sp)
204062ce:	c6a2                	sw	s0,76(sp)
204062d0:	c4aa                	sw	a0,72(sp)
204062d2:	c2ae                	sw	a1,68(sp)
204062d4:	c0b2                	sw	a2,64(sp)
204062d6:	de36                	sw	a3,60(sp)
204062d8:	dc3a                	sw	a4,56(sp)
204062da:	da3e                	sw	a5,52(sp)
204062dc:	d842                	sw	a6,48(sp)
204062de:	d646                	sw	a7,44(sp)
204062e0:	d472                	sw	t3,40(sp)
204062e2:	d276                	sw	t4,36(sp)
204062e4:	d07a                	sw	t5,32(sp)
204062e6:	ce7e                	sw	t6,28(sp)
204062e8:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:418
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204062ea:	99cff0ef          	jal	ra,20405486 <__metal_myhart_id>
204062ee:	872a                	mv	a4,a0
204062f0:	800037b7          	lui	a5,0x80003
204062f4:	070a                	slli	a4,a4,0x2
204062f6:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
204062fa:	97ba                	add	a5,a5,a4
204062fc:	439c                	lw	a5,0(a5)
204062fe:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:420

    if ( cpu ) {
20406302:	fac42783          	lw	a5,-84(s0)
20406306:	c78d                	beqz	a5,20406330 <metal_lc15_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:422
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406308:	fac42503          	lw	a0,-84(s0)
2040630c:	920ff0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20406310:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:423
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC15].exint_data;
20406314:	fa842783          	lw	a5,-88(s0)
20406318:	3807a783          	lw	a5,896(a5)
2040631c:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:424
        intc->metal_int_table[METAL_INTERRUPT_ID_LC15].handler(METAL_INTERRUPT_ID_LC15, priv);
20406320:	fa842783          	lw	a5,-88(s0)
20406324:	3787a783          	lw	a5,888(a5)
20406328:	fa442583          	lw	a1,-92(s0)
2040632c:	457d                	li	a0,31
2040632e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:426
    }
}
20406330:	0001                	nop
20406332:	40f6                	lw	ra,92(sp)
20406334:	42e6                	lw	t0,88(sp)
20406336:	4356                	lw	t1,84(sp)
20406338:	43c6                	lw	t2,80(sp)
2040633a:	4436                	lw	s0,76(sp)
2040633c:	4526                	lw	a0,72(sp)
2040633e:	4596                	lw	a1,68(sp)
20406340:	4606                	lw	a2,64(sp)
20406342:	56f2                	lw	a3,60(sp)
20406344:	5762                	lw	a4,56(sp)
20406346:	57d2                	lw	a5,52(sp)
20406348:	5842                	lw	a6,48(sp)
2040634a:	58b2                	lw	a7,44(sp)
2040634c:	5e22                	lw	t3,40(sp)
2040634e:	5e92                	lw	t4,36(sp)
20406350:	5f02                	lw	t5,32(sp)
20406352:	4ff2                	lw	t6,28(sp)
20406354:	6125                	addi	sp,sp,96
20406356:	30200073          	mret

2040635a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429

metal_vector_mode __metal_controller_interrupt_vector_mode (void)
{
2040635a:	1101                	addi	sp,sp,-32
2040635c:	ce22                	sw	s0,28(sp)
2040635e:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
    uintptr_t val;

    asm volatile ("csrr %0, mtvec" : "=r"(val));
20406360:	305027f3          	csrr	a5,mtvec
20406364:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:433
    val &= METAL_MTVEC_MASK;
20406368:	fec42783          	lw	a5,-20(s0)
2040636c:	03f7f793          	andi	a5,a5,63
20406370:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:435

    switch (val) {
20406374:	fec42703          	lw	a4,-20(s0)
20406378:	4789                	li	a5,2
2040637a:	00f70d63          	beq	a4,a5,20406394 <__metal_controller_interrupt_vector_mode+0x3a>
2040637e:	fec42703          	lw	a4,-20(s0)
20406382:	478d                	li	a5,3
20406384:	00f70a63          	beq	a4,a5,20406398 <__metal_controller_interrupt_vector_mode+0x3e>
20406388:	fec42703          	lw	a4,-20(s0)
2040638c:	4785                	li	a5,1
2040638e:	00f70763          	beq	a4,a5,2040639c <__metal_controller_interrupt_vector_mode+0x42>
20406392:	a039                	j	204063a0 <__metal_controller_interrupt_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:437
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20406394:	478d                	li	a5,3
20406396:	a031                	j	204063a2 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20406398:	4791                	li	a5,4
2040639a:	a021                	j	204063a2 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:441
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
2040639c:	4785                	li	a5,1
2040639e:	a011                	j	204063a2 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    }
    return METAL_DIRECT_MODE;
204063a0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:444
}
204063a2:	853e                	mv	a0,a5
204063a4:	4472                	lw	s0,28(sp)
204063a6:	6105                	addi	sp,sp,32
204063a8:	8082                	ret

204063aa <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447

void __metal_controller_interrupt_vector (metal_vector_mode mode, void *vec_table)
{  
204063aa:	7179                	addi	sp,sp,-48
204063ac:	d622                	sw	s0,44(sp)
204063ae:	1800                	addi	s0,sp,48
204063b0:	fca42e23          	sw	a0,-36(s0)
204063b4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
    uintptr_t trap_entry, val;

    __asm__ volatile ("csrr %0, mtvec" : "=r"(val));
204063b8:	305027f3          	csrr	a5,mtvec
204063bc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:451
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
204063c0:	fec42783          	lw	a5,-20(s0)
204063c4:	fc07f793          	andi	a5,a5,-64
204063c8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:452
    trap_entry = (uintptr_t)vec_table;
204063cc:	fd842783          	lw	a5,-40(s0)
204063d0:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

    switch (mode) {
204063d4:	fdc42703          	lw	a4,-36(s0)
204063d8:	4791                	li	a5,4
204063da:	06e7e063          	bltu	a5,a4,2040643a <__metal_controller_interrupt_vector+0x90>
204063de:	fdc42783          	lw	a5,-36(s0)
204063e2:	00279713          	slli	a4,a5,0x2
204063e6:	204087b7          	lui	a5,0x20408
204063ea:	79878793          	addi	a5,a5,1944 # 20408798 <__metal_driver_vtable_riscv_clint0+0x4c>
204063ee:	97ba                	add	a5,a5,a4
204063f0:	439c                	lw	a5,0(a5)
204063f2:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
204063f4:	fe842783          	lw	a5,-24(s0)
204063f8:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:458
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC));
204063fc:	fec42783          	lw	a5,-20(s0)
20406400:	0027e793          	ori	a5,a5,2
20406404:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        break;
20406408:	a80d                	j	2040643a <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
2040640a:	fe842783          	lw	a5,-24(s0)
2040640e:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC_VECTORED));
20406412:	fec42783          	lw	a5,-20(s0)
20406416:	0037e793          	ori	a5,a5,3
2040641a:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:463
        break;
2040641e:	a831                	j	2040643a <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
    case METAL_VECTOR_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry | METAL_MTVEC_VECTORED));
20406420:	fe842783          	lw	a5,-24(s0)
20406424:	0017e793          	ori	a5,a5,1
20406428:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466
        break;
2040642c:	a039                	j	2040643a <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:468
    case METAL_DIRECT_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
2040642e:	fe842783          	lw	a5,-24(s0)
20406432:	9bf1                	andi	a5,a5,-4
20406434:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:469
        break;
20406438:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:471
    }
}
2040643a:	0001                	nop
2040643c:	5432                	lw	s0,44(sp)
2040643e:	6145                	addi	sp,sp,48
20406440:	8082                	ret

20406442 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:474

int __metal_valid_interrupt_id (int id)
{
20406442:	1101                	addi	sp,sp,-32
20406444:	ce22                	sw	s0,28(sp)
20406446:	1000                	addi	s0,sp,32
20406448:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
    switch (id) {
2040644c:	fec42783          	lw	a5,-20(s0)
20406450:	17f5                	addi	a5,a5,-3
20406452:	4771                	li	a4,28
20406454:	00f76d63          	bltu	a4,a5,2040646e <__metal_valid_interrupt_id+0x2c>
20406458:	00279713          	slli	a4,a5,0x2
2040645c:	204087b7          	lui	a5,0x20408
20406460:	7ac78793          	addi	a5,a5,1964 # 204087ac <__metal_driver_vtable_riscv_clint0+0x60>
20406464:	97ba                	add	a5,a5,a4
20406466:	439c                	lw	a5,0(a5)
20406468:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        return 1;
2040646a:	4785                	li	a5,1
2040646c:	a019                	j	20406472 <__metal_valid_interrupt_id+0x30>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:497
    default:
        break;
2040646e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:500
    }

    return 0;
20406470:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
}
20406472:	853e                	mv	a0,a5
20406474:	4472                	lw	s0,28(sp)
20406476:	6105                	addi	sp,sp,32
20406478:	8082                	ret

2040647a <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506

 
int __metal_local_interrupt_enable (struct metal_interrupt *controller,
				  metal_interrupt_id_e id, int enable)
{
2040647a:	7179                	addi	sp,sp,-48
2040647c:	d606                	sw	ra,44(sp)
2040647e:	d422                	sw	s0,40(sp)
20406480:	1800                	addi	s0,sp,48
20406482:	fca42e23          	sw	a0,-36(s0)
20406486:	fcb42c23          	sw	a1,-40(s0)
2040648a:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
    int rc = 0;
2040648e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:509
  
    if ( !controller) {
20406492:	fdc42783          	lw	a5,-36(s0)
20406496:	e399                	bnez	a5,2040649c <__metal_local_interrupt_enable+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        return -1;
20406498:	57fd                	li	a5,-1
2040649a:	a849                	j	2040652c <__metal_local_interrupt_enable+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
    }

    switch (id) {
2040649c:	fd842703          	lw	a4,-40(s0)
204064a0:	47fd                	li	a5,31
204064a2:	08e7e063          	bltu	a5,a4,20406522 <__metal_local_interrupt_enable+0xa8>
204064a6:	fd842783          	lw	a5,-40(s0)
204064aa:	00279713          	slli	a4,a5,0x2
204064ae:	204097b7          	lui	a5,0x20409
204064b2:	82078793          	addi	a5,a5,-2016 # 20408820 <__metal_driver_vtable_riscv_clint0+0xd4>
204064b6:	97ba                	add	a5,a5,a4
204064b8:	439c                	lw	a5,0(a5)
204064ba:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:515
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
204064bc:	fd442783          	lw	a5,-44(s0)
204064c0:	c781                	beqz	a5,204064c8 <__metal_local_interrupt_enable+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
            __metal_interrupt_global_enable();
204064c2:	fdffe0ef          	jal	ra,204054a0 <__metal_interrupt_global_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        } else {
            __metal_interrupt_global_disable();
        }
        break;
204064c6:	a08d                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            __metal_interrupt_global_disable();
204064c8:	ff1fe0ef          	jal	ra,204054b8 <__metal_interrupt_global_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        break;
204064cc:	a8b1                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
204064ce:	fd442783          	lw	a5,-44(s0)
204064d2:	c781                	beqz	a5,204064da <__metal_local_interrupt_enable+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:523
            __metal_interrupt_software_enable();
204064d4:	ffdfe0ef          	jal	ra,204054d0 <__metal_interrupt_software_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        } else {
            __metal_interrupt_software_disable();
        }
        break;
204064d8:	a881                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:525
            __metal_interrupt_software_disable();
204064da:	80eff0ef          	jal	ra,204054e8 <__metal_interrupt_software_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        break;
204064de:	a0a9                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:529
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
204064e0:	fd442783          	lw	a5,-44(s0)
204064e4:	c781                	beqz	a5,204064ec <__metal_local_interrupt_enable+0x72>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:530
	    __metal_interrupt_timer_enable();
204064e6:	81aff0ef          	jal	ra,20405500 <__metal_interrupt_timer_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	} else {
	    __metal_interrupt_timer_disable();
	}
	break;
204064ea:	a83d                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:532
	    __metal_interrupt_timer_disable();
204064ec:	82eff0ef          	jal	ra,2040551a <__metal_interrupt_timer_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	break;
204064f0:	a825                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:536
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
204064f2:	fd442783          	lw	a5,-44(s0)
204064f6:	c781                	beqz	a5,204064fe <__metal_local_interrupt_enable+0x84>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:537
            __metal_interrupt_external_enable();
204064f8:	83cff0ef          	jal	ra,20405534 <__metal_interrupt_external_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        } else {
            __metal_interrupt_external_disable();
        }
        break;
204064fc:	a035                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:539
            __metal_interrupt_external_disable();
204064fe:	852ff0ef          	jal	ra,20405550 <__metal_interrupt_external_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        break;
20406502:	a01d                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20406504:	fd442783          	lw	a5,-44(s0)
20406508:	c799                	beqz	a5,20406516 <__metal_local_interrupt_enable+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
            __metal_interrupt_local_enable(id);
2040650a:	fd842783          	lw	a5,-40(s0)
2040650e:	853e                	mv	a0,a5
20406510:	85cff0ef          	jal	ra,2040556c <__metal_interrupt_local_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20406514:	a811                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:561
            __metal_interrupt_local_disable(id);
20406516:	fd842783          	lw	a5,-40(s0)
2040651a:	853e                	mv	a0,a5
2040651c:	87cff0ef          	jal	ra,20405598 <__metal_interrupt_local_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        break;
20406520:	a021                	j	20406528 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:565
    default:
        rc = -1;
20406522:	57fd                	li	a5,-1
20406524:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:567
    }
    return rc;
20406528:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:568
}
2040652c:	853e                	mv	a0,a5
2040652e:	50b2                	lw	ra,44(sp)
20406530:	5422                	lw	s0,40(sp)
20406532:	6145                	addi	sp,sp,48
20406534:	8082                	ret

20406536 <__metal_exception_register>:
__metal_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:572

int __metal_exception_register (struct metal_interrupt *controller,
                              int ecode, metal_exception_handler_t isr)
{
20406536:	7179                	addi	sp,sp,-48
20406538:	d622                	sw	s0,44(sp)
2040653a:	1800                	addi	s0,sp,48
2040653c:	fca42e23          	sw	a0,-36(s0)
20406540:	fcb42c23          	sw	a1,-40(s0)
20406544:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:573
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406548:	fdc42783          	lw	a5,-36(s0)
2040654c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20406550:	fd842703          	lw	a4,-40(s0)
20406554:	47ad                	li	a5,11
20406556:	02e7c263          	blt	a5,a4,2040657a <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575 (discriminator 1)
2040655a:	fd442783          	lw	a5,-44(s0)
2040655e:	cf91                	beqz	a5,2040657a <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:576
        intc->metal_exception_table[ecode] = isr;
20406560:	fec42703          	lw	a4,-20(s0)
20406564:	fd842783          	lw	a5,-40(s0)
20406568:	0e078793          	addi	a5,a5,224
2040656c:	078a                	slli	a5,a5,0x2
2040656e:	97ba                	add	a5,a5,a4
20406570:	fd442703          	lw	a4,-44(s0)
20406574:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:577
        return 0;
20406576:	4781                	li	a5,0
20406578:	a011                	j	2040657c <__metal_exception_register+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:579
    }
    return -1;
2040657a:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:580
}
2040657c:	853e                	mv	a0,a5
2040657e:	5432                	lw	s0,44(sp)
20406580:	6145                	addi	sp,sp,48
20406582:	8082                	ret

20406584 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:583

void __metal_driver_riscv_cpu_controller_interrupt_init (struct metal_interrupt *controller)
{
20406584:	7139                	addi	sp,sp,-64
20406586:	de06                	sw	ra,60(sp)
20406588:	dc22                	sw	s0,56(sp)
2040658a:	0080                	addi	s0,sp,64
2040658c:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:584
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406590:	fcc42783          	lw	a5,-52(s0)
20406594:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:587
    uintptr_t val;

    if ( !intc->init_done ) {
20406598:	fe442783          	lw	a5,-28(s0)
2040659c:	43dc                	lw	a5,4(a5)
2040659e:	10079d63          	bnez	a5,204066b8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x134>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:589
        /* Disable and clear all interrupt sources */
        __asm__ volatile ("csrc mie, %0" :: "r"(-1));
204065a2:	57fd                	li	a5,-1
204065a4:	3047b073          	csrc	mie,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:590
        __asm__ volatile ("csrc mip, %0" :: "r"(-1));
204065a8:	57fd                	li	a5,-1
204065aa:	3447b073          	csrc	mip,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:594

        /* Read the misa CSR to determine if the delegation registers exist */
        uintptr_t misa;
        __asm__ volatile ("csrr %0, misa" : "=r" (misa));
204065ae:	301027f3          	csrr	a5,misa
204065b2:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

        /* The delegation CSRs exist if user mode interrupts (N extension) or
         * supervisor mode (S extension) are supported */
        if((misa & METAL_ISA_N_EXTENSIONS) || (misa & METAL_ISA_S_EXTENSIONS)) {
204065b6:	fe042703          	lw	a4,-32(s0)
204065ba:	6789                	lui	a5,0x2
204065bc:	8ff9                	and	a5,a5,a4
204065be:	e799                	bnez	a5,204065cc <__metal_driver_riscv_cpu_controller_interrupt_init+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598 (discriminator 1)
204065c0:	fe042703          	lw	a4,-32(s0)
204065c4:	000407b7          	lui	a5,0x40
204065c8:	8ff9                	and	a5,a5,a4
204065ca:	c799                	beqz	a5,204065d8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:600
            /* Disable interrupt and exception delegation */
            __asm__ volatile ("csrc mideleg, %0" :: "r"(-1));
204065cc:	57fd                	li	a5,-1
204065ce:	3037b073          	csrc	mideleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            __asm__ volatile ("csrc medeleg, %0" :: "r"(-1));
204065d2:	57fd                	li	a5,-1
204065d4:	3027b073          	csrc	medeleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:605
        }

        /* The satp CSR exists if supervisor mode (S extension) is supported */
        if(misa & METAL_ISA_S_EXTENSIONS) {
204065d8:	fe042703          	lw	a4,-32(s0)
204065dc:	000407b7          	lui	a5,0x40
204065e0:	8ff9                	and	a5,a5,a4
204065e2:	c781                	beqz	a5,204065ea <__metal_driver_riscv_cpu_controller_interrupt_init+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:607
            /* Clear the entire CSR to make sure that satp.MODE = 0 */
            __asm__ volatile ("csrc satp, %0" :: "r"(-1));
204065e4:	57fd                	li	a5,-1
204065e6:	1807b073          	csrc	satp,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611
        }

        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
204065ea:	fe042623          	sw	zero,-20(s0)
204065ee:	a0b9                	j	2040663c <__metal_driver_riscv_cpu_controller_interrupt_init+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
204065f0:	fe442683          	lw	a3,-28(s0)
204065f4:	fec42703          	lw	a4,-20(s0)
204065f8:	87ba                	mv	a5,a4
204065fa:	0786                	slli	a5,a5,0x1
204065fc:	97ba                	add	a5,a5,a4
204065fe:	078e                	slli	a5,a5,0x3
20406600:	97b6                	add	a5,a5,a3
20406602:	0807a823          	sw	zero,144(a5) # 40090 <__heap_size+0x3f890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:613 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20406606:	fe442683          	lw	a3,-28(s0)
2040660a:	fec42703          	lw	a4,-20(s0)
2040660e:	87ba                	mv	a5,a4
20406610:	0786                	slli	a5,a5,0x1
20406612:	97ba                	add	a5,a5,a4
20406614:	078e                	slli	a5,a5,0x3
20406616:	97b6                	add	a5,a5,a3
20406618:	0807aa23          	sw	zero,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:614 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
2040661c:	fe442683          	lw	a3,-28(s0)
20406620:	fec42703          	lw	a4,-20(s0)
20406624:	87ba                	mv	a5,a4
20406626:	0786                	slli	a5,a5,0x1
20406628:	97ba                	add	a5,a5,a4
2040662a:	078e                	slli	a5,a5,0x3
2040662c:	97b6                	add	a5,a5,a3
2040662e:	0807ac23          	sw	zero,152(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20406632:	fec42783          	lw	a5,-20(s0)
20406636:	0785                	addi	a5,a5,1
20406638:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 1)
2040663c:	fec42703          	lw	a4,-20(s0)
20406640:	47fd                	li	a5,31
20406642:	fae7d7e3          	bge	a5,a4,204065f0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
	}
	for (int i = 0; i < METAL_MAX_ME; i++) {
20406646:	fe042423          	sw	zero,-24(s0)
2040664a:	a01d                	j	20406670 <__metal_driver_riscv_cpu_controller_interrupt_init+0xec>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:617 (discriminator 3)
	    intc->metal_exception_table[i] = __metal_default_exception_handler;
2040664c:	fe442703          	lw	a4,-28(s0)
20406650:	fe842783          	lw	a5,-24(s0)
20406654:	0e078793          	addi	a5,a5,224
20406658:	078a                	slli	a5,a5,0x2
2040665a:	97ba                	add	a5,a5,a4
2040665c:	20405737          	lui	a4,0x20405
20406660:	5c470713          	addi	a4,a4,1476 # 204055c4 <__metal_default_exception_handler>
20406664:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 3)
	for (int i = 0; i < METAL_MAX_ME; i++) {
20406666:	fe842783          	lw	a5,-24(s0)
2040666a:	0785                	addi	a5,a5,1
2040666c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 1)
20406670:	fe842703          	lw	a4,-24(s0)
20406674:	47ad                	li	a5,11
20406676:	fce7dbe3          	bge	a5,a4,2040664c <__metal_driver_riscv_cpu_controller_interrupt_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:619
	}
        __metal_controller_interrupt_vector(METAL_DIRECT_MODE, (void *)(uintptr_t)&__metal_exception_handler);
2040667a:	204067b7          	lui	a5,0x20406
2040667e:	88078593          	addi	a1,a5,-1920 # 20405880 <__metal_exception_handler>
20406682:	4501                	li	a0,0
20406684:	331d                	jal	204063aa <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620
	__asm__ volatile ("csrr %0, misa" : "=r"(val));
20406686:	301027f3          	csrr	a5,misa
2040668a:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
	if (val & (METAL_ISA_D_EXTENSIONS | METAL_ISA_F_EXTENSIONS | METAL_ISA_Q_EXTENSIONS)) {
2040668e:	fdc42703          	lw	a4,-36(s0)
20406692:	67c1                	lui	a5,0x10
20406694:	02878793          	addi	a5,a5,40 # 10028 <__heap_size+0xf828>
20406698:	8ff9                	and	a5,a5,a4
2040669a:	cb99                	beqz	a5,204066b0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:623
	    /* Floating point architecture, so turn on FP register saving*/
	    __asm__ volatile ("csrr %0, mstatus" : "=r"(val));
2040669c:	300027f3          	csrr	a5,mstatus
204066a0:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:624
	    __asm__ volatile ("csrw mstatus, %0" :: "r"(val | METAL_MSTATUS_FS_INIT));
204066a4:	fdc42703          	lw	a4,-36(s0)
204066a8:	6789                	lui	a5,0x2
204066aa:	8fd9                	or	a5,a5,a4
204066ac:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:626
	}
	intc->init_done = 1;
204066b0:	fe442783          	lw	a5,-28(s0)
204066b4:	4705                	li	a4,1
204066b6:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628
    }
}
204066b8:	0001                	nop
204066ba:	50f2                	lw	ra,60(sp)
204066bc:	5462                	lw	s0,56(sp)
204066be:	6121                	addi	sp,sp,64
204066c0:	8082                	ret

204066c2 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:633

int __metal_driver_riscv_cpu_controller_interrupt_register(struct metal_interrupt *controller,
							 int id, metal_interrupt_handler_t isr,
							 void *priv)
{
204066c2:	7179                	addi	sp,sp,-48
204066c4:	d606                	sw	ra,44(sp)
204066c6:	d422                	sw	s0,40(sp)
204066c8:	1800                	addi	s0,sp,48
204066ca:	fca42e23          	sw	a0,-36(s0)
204066ce:	fcb42c23          	sw	a1,-40(s0)
204066d2:	fcc42a23          	sw	a2,-44(s0)
204066d6:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634
    int rc = 0;
204066da:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:635
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204066de:	fdc42783          	lw	a5,-36(s0)
204066e2:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:637
 
    if ( !__metal_valid_interrupt_id(id) ) {
204066e6:	fd842503          	lw	a0,-40(s0)
204066ea:	3ba1                	jal	20406442 <__metal_valid_interrupt_id>
204066ec:	87aa                	mv	a5,a0
204066ee:	e399                	bnez	a5,204066f4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:638
        return -11;
204066f0:	57d5                	li	a5,-11
204066f2:	aa11                	j	20406806 <__metal_driver_riscv_cpu_controller_interrupt_register+0x144>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:641
    }

    if (isr) {
204066f4:	fd442783          	lw	a5,-44(s0)
204066f8:	cf85                	beqz	a5,20406730 <__metal_driver_riscv_cpu_controller_interrupt_register+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642
        intc->metal_int_table[id].handler = isr;
204066fa:	fe842683          	lw	a3,-24(s0)
204066fe:	fd842703          	lw	a4,-40(s0)
20406702:	87ba                	mv	a5,a4
20406704:	0786                	slli	a5,a5,0x1
20406706:	97ba                	add	a5,a5,a4
20406708:	078e                	slli	a5,a5,0x3
2040670a:	97b6                	add	a5,a5,a3
2040670c:	fd442703          	lw	a4,-44(s0)
20406710:	08e7a823          	sw	a4,144(a5) # 2090 <__heap_size+0x1890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:643
        intc->metal_int_table[id].exint_data = priv;
20406714:	fe842683          	lw	a3,-24(s0)
20406718:	fd842703          	lw	a4,-40(s0)
2040671c:	87ba                	mv	a5,a4
2040671e:	0786                	slli	a5,a5,0x1
20406720:	97ba                	add	a5,a5,a4
20406722:	078e                	slli	a5,a5,0x3
20406724:	97b6                	add	a5,a5,a3
20406726:	fd042703          	lw	a4,-48(s0)
2040672a:	08e7ac23          	sw	a4,152(a5)
2040672e:	a8d1                	j	20406802 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
    } else {
	switch (id) {
20406730:	fd842783          	lw	a5,-40(s0)
20406734:	17f5                	addi	a5,a5,-3
20406736:	4771                	li	a4,28
20406738:	0cf76263          	bltu	a4,a5,204067fc <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
2040673c:	00279713          	slli	a4,a5,0x2
20406740:	204097b7          	lui	a5,0x20409
20406744:	8a078793          	addi	a5,a5,-1888 # 204088a0 <__metal_driver_vtable_riscv_clint0+0x154>
20406748:	97ba                	add	a5,a5,a4
2040674a:	439c                	lw	a5,0(a5)
2040674c:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:647
	case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
2040674e:	fe842683          	lw	a3,-24(s0)
20406752:	fd842703          	lw	a4,-40(s0)
20406756:	87ba                	mv	a5,a4
20406758:	0786                	slli	a5,a5,0x1
2040675a:	97ba                	add	a5,a5,a4
2040675c:	078e                	slli	a5,a5,0x3
2040675e:	97b6                	add	a5,a5,a3
20406760:	20405737          	lui	a4,0x20405
20406764:	6b470713          	addi	a4,a4,1716 # 204056b4 <__metal_default_sw_handler>
20406768:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
            intc->metal_int_table[id].sub_int = priv;
2040676c:	fe842683          	lw	a3,-24(s0)
20406770:	fd842703          	lw	a4,-40(s0)
20406774:	87ba                	mv	a5,a4
20406776:	0786                	slli	a5,a5,0x1
20406778:	97ba                	add	a5,a5,a4
2040677a:	078e                	slli	a5,a5,0x3
2040677c:	97b6                	add	a5,a5,a3
2040677e:	fd042703          	lw	a4,-48(s0)
20406782:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
	  break;
20406786:	a8b5                	j	20406802 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:651
	case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20406788:	fe842683          	lw	a3,-24(s0)
2040678c:	fd842703          	lw	a4,-40(s0)
20406790:	87ba                	mv	a5,a4
20406792:	0786                	slli	a5,a5,0x1
20406794:	97ba                	add	a5,a5,a4
20406796:	078e                	slli	a5,a5,0x3
20406798:	97b6                	add	a5,a5,a3
2040679a:	20405737          	lui	a4,0x20405
2040679e:	7ae70713          	addi	a4,a4,1966 # 204057ae <__metal_default_timer_handler>
204067a2:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652
            intc->metal_int_table[id].sub_int = priv;
204067a6:	fe842683          	lw	a3,-24(s0)
204067aa:	fd842703          	lw	a4,-40(s0)
204067ae:	87ba                	mv	a5,a4
204067b0:	0786                	slli	a5,a5,0x1
204067b2:	97ba                	add	a5,a5,a4
204067b4:	078e                	slli	a5,a5,0x3
204067b6:	97b6                	add	a5,a5,a3
204067b8:	fd042703          	lw	a4,-48(s0)
204067bc:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
	  break;
204067c0:	a089                	j	20406802 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
	case METAL_INTERRUPT_ID_LC11:
	case METAL_INTERRUPT_ID_LC12:
	case METAL_INTERRUPT_ID_LC13:
	case METAL_INTERRUPT_ID_LC14:
	case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler = __metal_default_interrupt_handler;
204067c2:	fe842683          	lw	a3,-24(s0)
204067c6:	fd842703          	lw	a4,-40(s0)
204067ca:	87ba                	mv	a5,a4
204067cc:	0786                	slli	a5,a5,0x1
204067ce:	97ba                	add	a5,a5,a4
204067d0:	078e                	slli	a5,a5,0x3
204067d2:	97b6                	add	a5,a5,a3
204067d4:	20405737          	lui	a4,0x20405
204067d8:	5dc70713          	addi	a4,a4,1500 # 204055dc <__metal_default_interrupt_handler>
204067dc:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:672
            intc->metal_int_table[id].sub_int = priv;
204067e0:	fe842683          	lw	a3,-24(s0)
204067e4:	fd842703          	lw	a4,-40(s0)
204067e8:	87ba                	mv	a5,a4
204067ea:	0786                	slli	a5,a5,0x1
204067ec:	97ba                	add	a5,a5,a4
204067ee:	078e                	slli	a5,a5,0x3
204067f0:	97b6                	add	a5,a5,a3
204067f2:	fd042703          	lw	a4,-48(s0)
204067f6:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:673
	  break;
204067fa:	a021                	j	20406802 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
	default:
	  rc = -12;
204067fc:	57d1                	li	a5,-12
204067fe:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
	}
    }
    return rc;
20406802:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
}
20406806:	853e                	mv	a0,a5
20406808:	50b2                	lw	ra,44(sp)
2040680a:	5422                	lw	s0,40(sp)
2040680c:	6145                	addi	sp,sp,48
2040680e:	8082                	ret

20406810 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:683

int __metal_driver_riscv_cpu_controller_interrupt_enable (struct metal_interrupt *controller,
                                                        int id)
{
20406810:	1101                	addi	sp,sp,-32
20406812:	ce06                	sw	ra,28(sp)
20406814:	cc22                	sw	s0,24(sp)
20406816:	1000                	addi	s0,sp,32
20406818:	fea42623          	sw	a0,-20(s0)
2040681c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20406820:	fe842783          	lw	a5,-24(s0)
20406824:	4605                	li	a2,1
20406826:	85be                	mv	a1,a5
20406828:	fec42503          	lw	a0,-20(s0)
2040682c:	31b9                	jal	2040647a <__metal_local_interrupt_enable>
2040682e:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
20406830:	853e                	mv	a0,a5
20406832:	40f2                	lw	ra,28(sp)
20406834:	4462                	lw	s0,24(sp)
20406836:	6105                	addi	sp,sp,32
20406838:	8082                	ret

2040683a <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:689

int __metal_driver_riscv_cpu_controller_interrupt_disable (struct metal_interrupt *controller,
                                                         int id)
{   
2040683a:	1101                	addi	sp,sp,-32
2040683c:	ce06                	sw	ra,28(sp)
2040683e:	cc22                	sw	s0,24(sp)
20406840:	1000                	addi	s0,sp,32
20406842:	fea42623          	sw	a0,-20(s0)
20406846:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
2040684a:	fe842783          	lw	a5,-24(s0)
2040684e:	4601                	li	a2,0
20406850:	85be                	mv	a1,a5
20406852:	fec42503          	lw	a0,-20(s0)
20406856:	c25ff0ef          	jal	ra,2040647a <__metal_local_interrupt_enable>
2040685a:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:691
}
2040685c:	853e                	mv	a0,a5
2040685e:	40f2                	lw	ra,28(sp)
20406860:	4462                	lw	s0,24(sp)
20406862:	6105                	addi	sp,sp,32
20406864:	8082                	ret

20406866 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:722
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode (struct metal_interrupt *controller)
{   
20406866:	1101                	addi	sp,sp,-32
20406868:	ce06                	sw	ra,28(sp)
2040686a:	cc22                	sw	s0,24(sp)
2040686c:	1000                	addi	s0,sp,32
2040686e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723
    return __metal_controller_interrupt_vector_mode();
20406872:	ae9ff0ef          	jal	ra,2040635a <__metal_controller_interrupt_vector_mode>
20406876:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
}
20406878:	853e                	mv	a0,a5
2040687a:	40f2                	lw	ra,28(sp)
2040687c:	4462                	lw	s0,24(sp)
2040687e:	6105                	addi	sp,sp,32
20406880:	8082                	ret

20406882 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728

int __metal_driver_riscv_cpu_controller_set_vector_mode (struct metal_interrupt *controller,
                                                         metal_vector_mode mode)
{   
20406882:	7179                	addi	sp,sp,-48
20406884:	d606                	sw	ra,44(sp)
20406886:	d422                	sw	s0,40(sp)
20406888:	1800                	addi	s0,sp,48
2040688a:	fca42e23          	sw	a0,-36(s0)
2040688e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:729
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406892:	fdc42783          	lw	a5,-36(s0)
20406896:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731

    if (mode == METAL_DIRECT_MODE) {
2040689a:	fd842783          	lw	a5,-40(s0)
2040689e:	eb99                	bnez	a5,204068b4 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        __metal_controller_interrupt_vector(mode, (void *)(uintptr_t)&__metal_exception_handler);
204068a0:	204067b7          	lui	a5,0x20406
204068a4:	88078593          	addi	a1,a5,-1920 # 20405880 <__metal_exception_handler>
204068a8:	fd842503          	lw	a0,-40(s0)
204068ac:	affff0ef          	jal	ra,204063aa <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            return 0;
204068b0:	4781                	li	a5,0
204068b2:	a00d                	j	204068d4 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:735
    }
    if (mode == METAL_VECTOR_MODE) {
204068b4:	fd842703          	lw	a4,-40(s0)
204068b8:	4785                	li	a5,1
204068ba:	00f71c63          	bne	a4,a5,204068d2 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:736
        __metal_controller_interrupt_vector(mode, (void *)__metal_vector_table);
204068be:	204087b7          	lui	a5,0x20408
204068c2:	18078593          	addi	a1,a5,384 # 20408180 <__metal_vector_table>
204068c6:	fd842503          	lw	a0,-40(s0)
204068ca:	ae1ff0ef          	jal	ra,204063aa <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
        return 0;
204068ce:	4781                	li	a5,0
204068d0:	a011                	j	204068d4 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:739
    }
    return -1;
204068d2:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740
}
204068d4:	853e                	mv	a0,a5
204068d6:	50b2                	lw	ra,44(sp)
204068d8:	5422                	lw	s0,40(sp)
204068da:	6145                	addi	sp,sp,48
204068dc:	8082                	ret

204068de <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:744

int __metal_driver_riscv_cpu_controller_command_request (struct metal_interrupt *controller,
						       int cmd, void *data)
{
204068de:	1101                	addi	sp,sp,-32
204068e0:	ce22                	sw	s0,28(sp)
204068e2:	1000                	addi	s0,sp,32
204068e4:	fea42623          	sw	a0,-20(s0)
204068e8:	feb42423          	sw	a1,-24(s0)
204068ec:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:746
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic */
    return 0;
204068f0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747
}
204068f2:	853e                	mv	a0,a5
204068f4:	4472                	lw	s0,28(sp)
204068f6:	6105                	addi	sp,sp,32
204068f8:	8082                	ret

204068fa <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:752

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu)
{
204068fa:	7139                	addi	sp,sp,-64
204068fc:	de22                	sw	s0,60(sp)
204068fe:	0080                	addi	s0,sp,64
20406900:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:753
    unsigned long long val = 0;
20406904:	4301                	li	t1,0
20406906:	4381                	li	t2,0
20406908:	fe642423          	sw	t1,-24(s0)
2040690c:	fe742623          	sw	t2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi));
20406910:	b8002573          	csrr	a0,mcycleh
20406914:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:759
    __asm__ volatile ("csrr %0, mcycle" : "=r"(lo));
20406918:	b0002573          	csrr	a0,mcycle
2040691c:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:760
    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi1));
20406920:	b8002573          	csrr	a0,mcycleh
20406924:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:761
    if (hi == hi1) {
20406928:	fe442883          	lw	a7,-28(s0)
2040692c:	fdc42503          	lw	a0,-36(s0)
20406930:	02a89563          	bne	a7,a0,2040695a <__metal_driver_cpu_mcycle_get+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
        val = ((unsigned long long)hi << 32) | lo;
20406934:	fe442503          	lw	a0,-28(s0)
20406938:	85aa                	mv	a1,a0
2040693a:	4601                	li	a2,0
2040693c:	00059813          	slli	a6,a1,0x0
20406940:	4781                	li	a5,0
20406942:	fe042603          	lw	a2,-32(s0)
20406946:	86b2                	mv	a3,a2
20406948:	4701                	li	a4,0
2040694a:	00d7e633          	or	a2,a5,a3
2040694e:	fec42423          	sw	a2,-24(s0)
20406952:	00e867b3          	or	a5,a6,a4
20406956:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:768
    }
#else
    __asm__ volatile ("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
2040695a:	fe842783          	lw	a5,-24(s0)
2040695e:	fec42803          	lw	a6,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:769
}
20406962:	853e                	mv	a0,a5
20406964:	85c2                	mv	a1,a6
20406966:	5472                	lw	s0,60(sp)
20406968:	6121                	addi	sp,sp,64
2040696a:	8082                	ret

2040696c <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu)
{
2040696c:	7179                	addi	sp,sp,-48
2040696e:	d606                	sw	ra,44(sp)
20406970:	d422                	sw	s0,40(sp)
20406972:	d24a                	sw	s2,36(sp)
20406974:	d04e                	sw	s3,32(sp)
20406976:	1800                	addi	s0,sp,48
20406978:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:774
  int timebase;
    if (!cpu) {
2040697c:	fdc42783          	lw	a5,-36(s0)
20406980:	e781                	bnez	a5,20406988 <__metal_driver_cpu_timebase_get+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775
        return 0;
20406982:	4901                	li	s2,0
20406984:	4981                	li	s3,0
20406986:	a821                	j	2040699e <__metal_driver_cpu_timebase_get+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:778
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20406988:	fdc42503          	lw	a0,-36(s0)
2040698c:	a77fe0ef          	jal	ra,20405402 <__metal_driver_cpu_timebase>
20406990:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:779
    return timebase;
20406994:	fec42783          	lw	a5,-20(s0)
20406998:	893e                	mv	s2,a5
2040699a:	87fd                	srai	a5,a5,0x1f
2040699c:	89be                	mv	s3,a5
2040699e:	87ca                	mv	a5,s2
204069a0:	884e                	mv	a6,s3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:780
}
204069a2:	853e                	mv	a0,a5
204069a4:	85c2                	mv	a1,a6
204069a6:	50b2                	lw	ra,44(sp)
204069a8:	5422                	lw	s0,40(sp)
204069aa:	5912                	lw	s2,36(sp)
204069ac:	5982                	lw	s3,32(sp)
204069ae:	6145                	addi	sp,sp,48
204069b0:	8082                	ret

204069b2 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:783

unsigned long long  __metal_driver_cpu_mtime_get (struct metal_cpu *cpu)
{
204069b2:	7179                	addi	sp,sp,-48
204069b4:	d606                	sw	ra,44(sp)
204069b6:	d422                	sw	s0,40(sp)
204069b8:	1800                	addi	s0,sp,48
204069ba:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:784
    unsigned long long time = 0;
204069be:	4781                	li	a5,0
204069c0:	4801                	li	a6,0
204069c2:	fef42023          	sw	a5,-32(s0)
204069c6:	ff042223          	sw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:787
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
204069ca:	fdc42503          	lw	a0,-36(s0)
204069ce:	a5ffe0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
204069d2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:789

    if (intc) {
204069d6:	fec42783          	lw	a5,-20(s0)
204069da:	c78d                	beqz	a5,20406a04 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:790
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
204069dc:	fec42783          	lw	a5,-20(s0)
204069e0:	13c7a783          	lw	a5,316(a5)
204069e4:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:791
        if (tmr_intc) {
204069e8:	fe842783          	lw	a5,-24(s0)
204069ec:	cf81                	beqz	a5,20406a04 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:792
            tmr_intc->vtable->command_request(tmr_intc,
204069ee:	fe842783          	lw	a5,-24(s0)
204069f2:	439c                	lw	a5,0(a5)
204069f4:	43f8                	lw	a4,68(a5)
204069f6:	fe040793          	addi	a5,s0,-32
204069fa:	863e                	mv	a2,a5
204069fc:	4585                	li	a1,1
204069fe:	fe842503          	lw	a0,-24(s0)
20406a02:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:796
                                              METAL_TIMER_MTIME_GET, &time);
        }
    }
    return time;
20406a04:	fe042783          	lw	a5,-32(s0)
20406a08:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:797
}
20406a0c:	853e                	mv	a0,a5
20406a0e:	85c2                	mv	a1,a6
20406a10:	50b2                	lw	ra,44(sp)
20406a12:	5422                	lw	s0,40(sp)
20406a14:	6145                	addi	sp,sp,48
20406a16:	8082                	ret

20406a18 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:800

int __metal_driver_cpu_mtimecmp_set (struct metal_cpu *cpu, unsigned long long time)
{
20406a18:	7179                	addi	sp,sp,-48
20406a1a:	d606                	sw	ra,44(sp)
20406a1c:	d422                	sw	s0,40(sp)
20406a1e:	d226                	sw	s1,36(sp)
20406a20:	1800                	addi	s0,sp,48
20406a22:	fca42e23          	sw	a0,-36(s0)
20406a26:	fcb42823          	sw	a1,-48(s0)
20406a2a:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    int rc = -1;
20406a2e:	57fd                	li	a5,-1
20406a30:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20406a34:	fdc42503          	lw	a0,-36(s0)
20406a38:	9f5fe0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20406a3c:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:806

    if (intc) {
20406a40:	fe842783          	lw	a5,-24(s0)
20406a44:	cf8d                	beqz	a5,20406a7e <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20406a46:	fe842783          	lw	a5,-24(s0)
20406a4a:	13c7a783          	lw	a5,316(a5)
20406a4e:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
        if (tmr_intc) {
20406a52:	fe442783          	lw	a5,-28(s0)
20406a56:	c785                	beqz	a5,20406a7e <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:809
            rc = tmr_intc->vtable->mtimecmp_set(tmr_intc,
20406a58:	fe442783          	lw	a5,-28(s0)
20406a5c:	439c                	lw	a5,0(a5)
20406a5e:	47a4                	lw	s1,72(a5)
20406a60:	fdc42503          	lw	a0,-36(s0)
20406a64:	97bfe0ef          	jal	ra,204053de <__metal_driver_cpu_hartid>
20406a68:	87aa                	mv	a5,a0
20406a6a:	fd042603          	lw	a2,-48(s0)
20406a6e:	fd442683          	lw	a3,-44(s0)
20406a72:	85be                	mv	a1,a5
20406a74:	fe442503          	lw	a0,-28(s0)
20406a78:	9482                	jalr	s1
20406a7a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:814
                                                __metal_driver_cpu_hartid(cpu),
                                                time);
        }
    }
    return rc;
20406a7e:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:815
}
20406a82:	853e                	mv	a0,a5
20406a84:	50b2                	lw	ra,44(sp)
20406a86:	5422                	lw	s0,40(sp)
20406a88:	5492                	lw	s1,36(sp)
20406a8a:	6145                	addi	sp,sp,48
20406a8c:	8082                	ret

20406a8e <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:819

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu)
{
20406a8e:	1101                	addi	sp,sp,-32
20406a90:	ce22                	sw	s0,28(sp)
20406a92:	1000                	addi	s0,sp,32
20406a94:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20406a98:	800037b7          	lui	a5,0x80003
20406a9c:	e7c78793          	addi	a5,a5,-388 # 80002e7c <metal_segment_heap_target_end+0xfffff180>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20406aa0:	853e                	mv	a0,a5
20406aa2:	4472                	lw	s0,28(sp)
20406aa4:	6105                	addi	sp,sp,32
20406aa6:	8082                	ret

20406aa8 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:833

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu)
{
20406aa8:	1101                	addi	sp,sp,-32
20406aaa:	ce22                	sw	s0,28(sp)
20406aac:	1000                	addi	s0,sp,32
20406aae:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834
    return METAL_INTERRUPT_ID_TMR;
20406ab2:	479d                	li	a5,7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
}
20406ab4:	853e                	mv	a0,a5
20406ab6:	4472                	lw	s0,28(sp)
20406ab8:	6105                	addi	sp,sp,32
20406aba:	8082                	ret

20406abc <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:839

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu)
{
20406abc:	1101                	addi	sp,sp,-32
20406abe:	ce22                	sw	s0,28(sp)
20406ac0:	1000                	addi	s0,sp,32
20406ac2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:841
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20406ac6:	800037b7          	lui	a5,0x80003
20406aca:	e7c78793          	addi	a5,a5,-388 # 80002e7c <metal_segment_heap_target_end+0xfffff180>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:850
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20406ace:	853e                	mv	a0,a5
20406ad0:	4472                	lw	s0,28(sp)
20406ad2:	6105                	addi	sp,sp,32
20406ad4:	8082                	ret

20406ad6 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:853

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu)
{
20406ad6:	1101                	addi	sp,sp,-32
20406ad8:	ce22                	sw	s0,28(sp)
20406ada:	1000                	addi	s0,sp,32
20406adc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:854
    return METAL_INTERRUPT_ID_SW;
20406ae0:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:855
}
20406ae2:	853e                	mv	a0,a5
20406ae4:	4472                	lw	s0,28(sp)
20406ae6:	6105                	addi	sp,sp,32
20406ae8:	8082                	ret

20406aea <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:858

int __metal_driver_cpu_set_sw_ipi (struct metal_cpu *cpu, int hartid)
{
20406aea:	7179                	addi	sp,sp,-48
20406aec:	d606                	sw	ra,44(sp)
20406aee:	d422                	sw	s0,40(sp)
20406af0:	1800                	addi	s0,sp,48
20406af2:	fca42e23          	sw	a0,-36(s0)
20406af6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:859
    int rc = -1;
20406afa:	57fd                	li	a5,-1
20406afc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:862
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc = 
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20406b00:	fdc42503          	lw	a0,-36(s0)
20406b04:	929fe0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20406b08:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:864

    if (intc) {
20406b0c:	fe842783          	lw	a5,-24(s0)
20406b10:	c79d                	beqz	a5,20406b3e <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:865
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20406b12:	fe842783          	lw	a5,-24(s0)
20406b16:	0dc7a783          	lw	a5,220(a5)
20406b1a:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:866
        if (sw_intc) {
20406b1e:	fe442783          	lw	a5,-28(s0)
20406b22:	cf91                	beqz	a5,20406b3e <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:867
            rc = sw_intc->vtable->command_request(sw_intc,
20406b24:	fe442783          	lw	a5,-28(s0)
20406b28:	439c                	lw	a5,0(a5)
20406b2a:	43f8                	lw	a4,68(a5)
20406b2c:	fd840793          	addi	a5,s0,-40
20406b30:	863e                	mv	a2,a5
20406b32:	458d                	li	a1,3
20406b34:	fe442503          	lw	a0,-28(s0)
20406b38:	9702                	jalr	a4
20406b3a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:871
                                                  METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20406b3e:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:872
}
20406b42:	853e                	mv	a0,a5
20406b44:	50b2                	lw	ra,44(sp)
20406b46:	5422                	lw	s0,40(sp)
20406b48:	6145                	addi	sp,sp,48
20406b4a:	8082                	ret

20406b4c <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:875

int __metal_driver_cpu_clear_sw_ipi (struct metal_cpu *cpu, int hartid)
{
20406b4c:	7179                	addi	sp,sp,-48
20406b4e:	d606                	sw	ra,44(sp)
20406b50:	d422                	sw	s0,40(sp)
20406b52:	1800                	addi	s0,sp,48
20406b54:	fca42e23          	sw	a0,-36(s0)
20406b58:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:876
    int rc = -1;
20406b5c:	57fd                	li	a5,-1
20406b5e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:879
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20406b62:	fdc42503          	lw	a0,-36(s0)
20406b66:	8c7fe0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20406b6a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:881

    if (intc) {
20406b6e:	fe842783          	lw	a5,-24(s0)
20406b72:	c79d                	beqz	a5,20406ba0 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:882
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20406b74:	fe842783          	lw	a5,-24(s0)
20406b78:	0dc7a783          	lw	a5,220(a5)
20406b7c:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:883
        if (sw_intc) {
20406b80:	fe442783          	lw	a5,-28(s0)
20406b84:	cf91                	beqz	a5,20406ba0 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:884
            rc = sw_intc->vtable->command_request(sw_intc,
20406b86:	fe442783          	lw	a5,-28(s0)
20406b8a:	439c                	lw	a5,0(a5)
20406b8c:	43f8                	lw	a4,68(a5)
20406b8e:	fd840793          	addi	a5,s0,-40
20406b92:	863e                	mv	a2,a5
20406b94:	4589                	li	a1,2
20406b96:	fe442503          	lw	a0,-28(s0)
20406b9a:	9702                	jalr	a4
20406b9c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:888
                                                  METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20406ba0:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:889
}
20406ba4:	853e                	mv	a0,a5
20406ba6:	50b2                	lw	ra,44(sp)
20406ba8:	5422                	lw	s0,40(sp)
20406baa:	6145                	addi	sp,sp,48
20406bac:	8082                	ret

20406bae <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:892

int __metal_driver_cpu_get_msip (struct metal_cpu *cpu, int hartid)
{
20406bae:	7179                	addi	sp,sp,-48
20406bb0:	d606                	sw	ra,44(sp)
20406bb2:	d422                	sw	s0,40(sp)
20406bb4:	1800                	addi	s0,sp,48
20406bb6:	fca42e23          	sw	a0,-36(s0)
20406bba:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:893
    int rc = 0;
20406bbe:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:896
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20406bc2:	fdc42503          	lw	a0,-36(s0)
20406bc6:	867fe0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20406bca:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:898

    if (intc) {
20406bce:	fe842783          	lw	a5,-24(s0)
20406bd2:	c79d                	beqz	a5,20406c00 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:899
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20406bd4:	fe842783          	lw	a5,-24(s0)
20406bd8:	0dc7a783          	lw	a5,220(a5)
20406bdc:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:900
        if (sw_intc) {
20406be0:	fe442783          	lw	a5,-28(s0)
20406be4:	cf91                	beqz	a5,20406c00 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:901
            rc = sw_intc->vtable->command_request(sw_intc,
20406be6:	fe442783          	lw	a5,-28(s0)
20406bea:	439c                	lw	a5,0(a5)
20406bec:	43f8                	lw	a4,68(a5)
20406bee:	fd840793          	addi	a5,s0,-40
20406bf2:	863e                	mv	a2,a5
20406bf4:	4591                	li	a1,4
20406bf6:	fe442503          	lw	a0,-28(s0)
20406bfa:	9702                	jalr	a4
20406bfc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:905
                                                  METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20406c00:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:906
}
20406c04:	853e                	mv	a0,a5
20406c06:	50b2                	lw	ra,44(sp)
20406c08:	5422                	lw	s0,40(sp)
20406c0a:	6145                	addi	sp,sp,48
20406c0c:	8082                	ret

20406c0e <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:910

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu)
{
20406c0e:	1101                	addi	sp,sp,-32
20406c10:	ce06                	sw	ra,28(sp)
20406c12:	cc22                	sw	s0,24(sp)
20406c14:	1000                	addi	s0,sp,32
20406c16:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:911
    return __metal_driver_cpu_interrupt_controller(cpu);
20406c1a:	fec42503          	lw	a0,-20(s0)
20406c1e:	80ffe0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20406c22:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:912
}
20406c24:	853e                	mv	a0,a5
20406c26:	40f2                	lw	ra,28(sp)
20406c28:	4462                	lw	s0,24(sp)
20406c2a:	6105                	addi	sp,sp,32
20406c2c:	8082                	ret

20406c2e <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:936
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
				        metal_exception_handler_t isr)
{
20406c2e:	7179                	addi	sp,sp,-48
20406c30:	d606                	sw	ra,44(sp)
20406c32:	d422                	sw	s0,40(sp)
20406c34:	1800                	addi	s0,sp,48
20406c36:	fca42e23          	sw	a0,-36(s0)
20406c3a:	fcb42c23          	sw	a1,-40(s0)
20406c3e:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:938
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20406c42:	fdc42503          	lw	a0,-36(s0)
20406c46:	fe6fe0ef          	jal	ra,2040542c <__metal_driver_cpu_interrupt_controller>
20406c4a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:940

    if (intc) {
20406c4e:	fec42783          	lw	a5,-20(s0)
20406c52:	cb99                	beqz	a5,20406c68 <__metal_driver_cpu_exception_register+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:941
        return __metal_exception_register((struct metal_interrupt *)intc, ecode, isr);
20406c54:	fd442603          	lw	a2,-44(s0)
20406c58:	fd842583          	lw	a1,-40(s0)
20406c5c:	fec42503          	lw	a0,-20(s0)
20406c60:	8d7ff0ef          	jal	ra,20406536 <__metal_exception_register>
20406c64:	87aa                	mv	a5,a0
20406c66:	a011                	j	20406c6a <__metal_driver_cpu_exception_register+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:943
    }
    return -1;
20406c68:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:944
}
20406c6a:	853e                	mv	a0,a5
20406c6c:	50b2                	lw	ra,44(sp)
20406c6e:	5422                	lw	s0,40(sp)
20406c70:	6145                	addi	sp,sp,48
20406c72:	8082                	ret

20406c74 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:947

int  __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu, uintptr_t epc)
{
20406c74:	1101                	addi	sp,sp,-32
20406c76:	ce22                	sw	s0,28(sp)
20406c78:	1000                	addi	s0,sp,32
20406c7a:	fea42623          	sw	a0,-20(s0)
20406c7e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:953
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short*)epc & METAL_INSN_LENGTH_MASK)
20406c82:	fe842783          	lw	a5,-24(s0)
20406c86:	0007d783          	lhu	a5,0(a5)
20406c8a:	0037f713          	andi	a4,a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954
            == METAL_INSN_NOT_COMPRESSED) ? 4 : 2;
20406c8e:	478d                	li	a5,3
20406c90:	00f71463          	bne	a4,a5,20406c98 <__metal_driver_cpu_get_instruction_length+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 1)
20406c94:	4791                	li	a5,4
20406c96:	a011                	j	20406c9a <__metal_driver_cpu_get_instruction_length+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 2)
20406c98:	4789                	li	a5,2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:955 (discriminator 5)
}
20406c9a:	853e                	mv	a0,a5
20406c9c:	4472                	lw	s0,28(sp)
20406c9e:	6105                	addi	sp,sp,32
20406ca0:	8082                	ret

20406ca2 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:958

uintptr_t  __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu)
{
20406ca2:	7179                	addi	sp,sp,-48
20406ca4:	d622                	sw	s0,44(sp)
20406ca6:	1800                	addi	s0,sp,48
20406ca8:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:960
    uintptr_t mepc;
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
20406cac:	341027f3          	csrr	a5,mepc
20406cb0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:961
    return mepc;
20406cb4:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:962
}
20406cb8:	853e                	mv	a0,a5
20406cba:	5432                	lw	s0,44(sp)
20406cbc:	6145                	addi	sp,sp,48
20406cbe:	8082                	ret

20406cc0 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:965

int  __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc)
{
20406cc0:	1101                	addi	sp,sp,-32
20406cc2:	ce22                	sw	s0,28(sp)
20406cc4:	1000                	addi	s0,sp,32
20406cc6:	fea42623          	sw	a0,-20(s0)
20406cca:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:966
    __asm__ volatile ("csrw mepc, %0" :: "r"(mepc));
20406cce:	fe842783          	lw	a5,-24(s0)
20406cd2:	34179073          	csrw	mepc,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:967
    return 0;
20406cd6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:968
}
20406cd8:	853e                	mv	a0,a5
20406cda:	4472                	lw	s0,28(sp)
20406cdc:	6105                	addi	sp,sp,32
20406cde:	8082                	ret

20406ce0 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:238



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20406ce0:	1101                	addi	sp,sp,-32
20406ce2:	ce22                	sw	s0,28(sp)
20406ce4:	1000                	addi	s0,sp,32
20406ce6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:239
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20406cea:	fec42703          	lw	a4,-20(s0)
20406cee:	800037b7          	lui	a5,0x80003
20406cf2:	b5078793          	addi	a5,a5,-1200 # 80002b50 <metal_segment_heap_target_end+0xffffee54>
20406cf6:	00f71563          	bne	a4,a5,20406d00 <__metal_driver_sifive_plic0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:240
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20406cfa:	0c0007b7          	lui	a5,0xc000
20406cfe:	a011                	j	20406d02 <__metal_driver_sifive_plic0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:243
	}
	else {
		return 0;
20406d00:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:245
	}
}
20406d02:	853e                	mv	a0,a5
20406d04:	4472                	lw	s0,28(sp)
20406d06:	6105                	addi	sp,sp,32
20406d08:	8082                	ret

20406d0a <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:258
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20406d0a:	1101                	addi	sp,sp,-32
20406d0c:	ce22                	sw	s0,28(sp)
20406d0e:	1000                	addi	s0,sp,32
20406d10:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:259
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20406d14:	fec42703          	lw	a4,-20(s0)
20406d18:	800037b7          	lui	a5,0x80003
20406d1c:	b5078793          	addi	a5,a5,-1200 # 80002b50 <metal_segment_heap_target_end+0xffffee54>
20406d20:	00f71463          	bne	a4,a5,20406d28 <__metal_driver_sifive_plic0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:260
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20406d24:	47ed                	li	a5,27
20406d26:	a011                	j	20406d2a <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:263
	}
	else {
		return 0;
20406d28:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:265
	}
}
20406d2a:	853e                	mv	a0,a5
20406d2c:	4472                	lw	s0,28(sp)
20406d2e:	6105                	addi	sp,sp,32
20406d30:	8082                	ret

20406d32 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:268

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20406d32:	1101                	addi	sp,sp,-32
20406d34:	ce22                	sw	s0,28(sp)
20406d36:	1000                	addi	s0,sp,32
20406d38:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:269
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20406d3c:	fec42703          	lw	a4,-20(s0)
20406d40:	800037b7          	lui	a5,0x80003
20406d44:	b5078793          	addi	a5,a5,-1200 # 80002b50 <metal_segment_heap_target_end+0xffffee54>
20406d48:	00f71463          	bne	a4,a5,20406d50 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:270
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20406d4c:	479d                	li	a5,7
20406d4e:	a011                	j	20406d52 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:273
	}
	else {
		return 0;
20406d50:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:275
	}
}
20406d52:	853e                	mv	a0,a5
20406d54:	4472                	lw	s0,28(sp)
20406d56:	6105                	addi	sp,sp,32
20406d58:	8082                	ret

20406d5a <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:278

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20406d5a:	1101                	addi	sp,sp,-32
20406d5c:	ce22                	sw	s0,28(sp)
20406d5e:	1000                	addi	s0,sp,32
20406d60:	fea42623          	sw	a0,-20(s0)
20406d64:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:279
	if (idx == 0) {
20406d68:	fe842783          	lw	a5,-24(s0)
20406d6c:	e791                	bnez	a5,20406d78 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:280
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20406d6e:	800027b7          	lui	a5,0x80002
20406d72:	79878793          	addi	a5,a5,1944 # 80002798 <metal_segment_heap_target_end+0xffffea9c>
20406d76:	a011                	j	20406d7a <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:283
	}
	else {
		return NULL;
20406d78:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:285
	}
}
20406d7a:	853e                	mv	a0,a5
20406d7c:	4472                	lw	s0,28(sp)
20406d7e:	6105                	addi	sp,sp,32
20406d80:	8082                	ret

20406d82 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:288

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20406d82:	1101                	addi	sp,sp,-32
20406d84:	ce22                	sw	s0,28(sp)
20406d86:	1000                	addi	s0,sp,32
20406d88:	fea42623          	sw	a0,-20(s0)
20406d8c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:289
	if (idx == 0) {
20406d90:	fe842783          	lw	a5,-24(s0)
20406d94:	e399                	bnez	a5,20406d9a <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:290
		return 11;
20406d96:	47ad                	li	a5,11
20406d98:	a011                	j	20406d9c <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:293
	}
	else {
		return 0;
20406d9a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:295
	}
}
20406d9c:	853e                	mv	a0,a5
20406d9e:	4472                	lw	s0,28(sp)
20406da0:	6105                	addi	sp,sp,32
20406da2:	8082                	ret

20406da4 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:14
#include <metal/shutdown.h>
#include <metal/drivers/riscv_plic0.h>
#include <metal/machine.h>

unsigned int __metal_plic0_claim_interrupt (struct __metal_driver_riscv_plic0 *plic)
{
20406da4:	7179                	addi	sp,sp,-48
20406da6:	d606                	sw	ra,44(sp)
20406da8:	d422                	sw	s0,40(sp)
20406daa:	1800                	addi	s0,sp,48
20406dac:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:15
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20406db0:	fdc42503          	lw	a0,-36(s0)
20406db4:	3735                	jal	20406ce0 <__metal_driver_sifive_plic0_control_base>
20406db6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:16
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20406dba:	fec42703          	lw	a4,-20(s0)
20406dbe:	002007b7          	lui	a5,0x200
20406dc2:	0791                	addi	a5,a5,4
20406dc4:	97ba                	add	a5,a5,a4
20406dc6:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
					      METAL_RISCV_PLIC0_CLAIM));
}
20406dc8:	853e                	mv	a0,a5
20406dca:	50b2                	lw	ra,44(sp)
20406dcc:	5422                	lw	s0,40(sp)
20406dce:	6145                	addi	sp,sp,48
20406dd0:	8082                	ret

20406dd2 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:22

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
				    unsigned int id)
{
20406dd2:	7179                	addi	sp,sp,-48
20406dd4:	d606                	sw	ra,44(sp)
20406dd6:	d422                	sw	s0,40(sp)
20406dd8:	1800                	addi	s0,sp,48
20406dda:	fca42e23          	sw	a0,-36(s0)
20406dde:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:23
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20406de2:	fdc42503          	lw	a0,-36(s0)
20406de6:	3ded                	jal	20406ce0 <__metal_driver_sifive_plic0_control_base>
20406de8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:24
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20406dec:	fec42703          	lw	a4,-20(s0)
20406df0:	002007b7          	lui	a5,0x200
20406df4:	0791                	addi	a5,a5,4
20406df6:	97ba                	add	a5,a5,a4
20406df8:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
				       METAL_RISCV_PLIC0_CLAIM)) = id;
20406dfa:	fd842783          	lw	a5,-40(s0)
20406dfe:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:26
}
20406e00:	0001                	nop
20406e02:	50b2                	lw	ra,44(sp)
20406e04:	5422                	lw	s0,40(sp)
20406e06:	6145                	addi	sp,sp,48
20406e08:	8082                	ret

20406e0a <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29

int __metal_plic0_set_threshold(struct metal_interrupt *controller, unsigned int threshold)
{
20406e0a:	7179                	addi	sp,sp,-48
20406e0c:	d606                	sw	ra,44(sp)
20406e0e:	d422                	sw	s0,40(sp)
20406e10:	1800                	addi	s0,sp,48
20406e12:	fca42e23          	sw	a0,-36(s0)
20406e16:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:30
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
20406e1a:	fdc42503          	lw	a0,-36(s0)
20406e1e:	35c9                	jal	20406ce0 <__metal_driver_sifive_plic0_control_base>
20406e20:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20406e24:	fec42703          	lw	a4,-20(s0)
20406e28:	002007b7          	lui	a5,0x200
20406e2c:	97ba                	add	a5,a5,a4
20406e2e:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:32
				       METAL_RISCV_PLIC0_THRESHOLD)) = threshold;
20406e30:	fd842783          	lw	a5,-40(s0)
20406e34:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:33
    return 0;
20406e36:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
}
20406e38:	853e                	mv	a0,a5
20406e3a:	50b2                	lw	ra,44(sp)
20406e3c:	5422                	lw	s0,40(sp)
20406e3e:	6145                	addi	sp,sp,48
20406e40:	8082                	ret

20406e42 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:37

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller)
{
20406e42:	7179                	addi	sp,sp,-48
20406e44:	d606                	sw	ra,44(sp)
20406e46:	d422                	sw	s0,40(sp)
20406e48:	1800                	addi	s0,sp,48
20406e4a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
20406e4e:	fdc42503          	lw	a0,-36(s0)
20406e52:	3579                	jal	20406ce0 <__metal_driver_sifive_plic0_control_base>
20406e54:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20406e58:	fec42703          	lw	a4,-20(s0)
20406e5c:	002007b7          	lui	a5,0x200
20406e60:	97ba                	add	a5,a5,a4
20406e62:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:42
				       METAL_RISCV_PLIC0_THRESHOLD));
}
20406e64:	853e                	mv	a0,a5
20406e66:	50b2                	lw	ra,44(sp)
20406e68:	5422                	lw	s0,40(sp)
20406e6a:	6145                	addi	sp,sp,48
20406e6c:	8082                	ret

20406e6e <__metal_plic0_set_priority>:
__metal_plic0_set_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45

int __metal_plic0_set_priority(struct metal_interrupt *controller, int id, unsigned int priority)
{
20406e6e:	7179                	addi	sp,sp,-48
20406e70:	d606                	sw	ra,44(sp)
20406e72:	d422                	sw	s0,40(sp)
20406e74:	1800                	addi	s0,sp,48
20406e76:	fca42e23          	sw	a0,-36(s0)
20406e7a:	fcb42c23          	sw	a1,-40(s0)
20406e7e:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)controller);
20406e82:	fdc42503          	lw	a0,-36(s0)
20406e86:	3da9                	jal	20406ce0 <__metal_driver_sifive_plic0_control_base>
20406e88:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:47
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority((struct metal_interrupt *)controller);
20406e8c:	fdc42503          	lw	a0,-36(s0)
20406e90:	354d                	jal	20406d32 <__metal_driver_sifive_plic0_max_priority>
20406e92:	87aa                	mv	a5,a0
20406e94:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48
    if ( (max_priority) && (priority < max_priority) ) {
20406e98:	fe842783          	lw	a5,-24(s0)
20406e9c:	c785                	beqz	a5,20406ec4 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48 (discriminator 1)
20406e9e:	fd442703          	lw	a4,-44(s0)
20406ea2:	fe842783          	lw	a5,-24(s0)
20406ea6:	00f77f63          	bgeu	a4,a5,20406ec4 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49
        __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20406eaa:	fd842783          	lw	a5,-40(s0)
20406eae:	078a                	slli	a5,a5,0x2
20406eb0:	873e                	mv	a4,a5
20406eb2:	fec42783          	lw	a5,-20(s0)
20406eb6:	97ba                	add	a5,a5,a4
20406eb8:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) = priority;
20406eba:	fd442783          	lw	a5,-44(s0)
20406ebe:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
        return 0;
20406ec0:	4781                	li	a5,0
20406ec2:	a011                	j	20406ec6 <__metal_plic0_set_priority+0x58>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:54
    }
    return -1;
20406ec4:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:55
}
20406ec6:	853e                	mv	a0,a5
20406ec8:	50b2                	lw	ra,44(sp)
20406eca:	5422                	lw	s0,40(sp)
20406ecc:	6145                	addi	sp,sp,48
20406ece:	8082                	ret

20406ed0 <__metal_plic0_get_priority>:
__metal_plic0_get_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:58

unsigned int __metal_plic0_get_priority(struct metal_interrupt *controller, int id)
{
20406ed0:	7179                	addi	sp,sp,-48
20406ed2:	d606                	sw	ra,44(sp)
20406ed4:	d422                	sw	s0,40(sp)
20406ed6:	1800                	addi	s0,sp,48
20406ed8:	fca42e23          	sw	a0,-36(s0)
20406edc:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
20406ee0:	fdc42503          	lw	a0,-36(s0)
20406ee4:	3bf5                	jal	20406ce0 <__metal_driver_sifive_plic0_control_base>
20406ee6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:61

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20406eea:	fd842783          	lw	a5,-40(s0)
20406eee:	078a                	slli	a5,a5,0x2
20406ef0:	873e                	mv	a4,a5
20406ef2:	fec42783          	lw	a5,-20(s0)
20406ef6:	97ba                	add	a5,a5,a4
20406ef8:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20406efa:	853e                	mv	a0,a5
20406efc:	50b2                	lw	ra,44(sp)
20406efe:	5422                	lw	s0,40(sp)
20406f00:	6145                	addi	sp,sp,48
20406f02:	8082                	ret

20406f04 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67

void __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic, int id, int enable)
{
20406f04:	7179                	addi	sp,sp,-48
20406f06:	d606                	sw	ra,44(sp)
20406f08:	d422                	sw	s0,40(sp)
20406f0a:	1800                	addi	s0,sp,48
20406f0c:	fca42e23          	sw	a0,-36(s0)
20406f10:	fcb42c23          	sw	a1,-40(s0)
20406f14:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20406f18:	fdc42503          	lw	a0,-36(s0)
20406f1c:	33d1                	jal	20406ce0 <__metal_driver_sifive_plic0_control_base>
20406f1e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71

    current = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20406f22:	fd842783          	lw	a5,-40(s0)
20406f26:	8795                	srai	a5,a5,0x5
20406f28:	078a                	slli	a5,a5,0x2
20406f2a:	873e                	mv	a4,a5
20406f2c:	fec42783          	lw	a5,-20(s0)
20406f30:	973e                	add	a4,a4,a5
20406f32:	6789                	lui	a5,0x2
20406f34:	97ba                	add	a5,a5,a4
20406f36:	439c                	lw	a5,0(a5)
20406f38:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
						(id >> METAL_PLIC_SOURCE_SHIFT) * 4));
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
					METAL_RISCV_PLIC0_ENABLE_BASE +
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20406f3c:	fd442783          	lw	a5,-44(s0)
20406f40:	cf81                	beqz	a5,20406f58 <__metal_plic0_enable+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:77 (discriminator 1)
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20406f42:	fd842783          	lw	a5,-40(s0)
20406f46:	8bfd                	andi	a5,a5,31
20406f48:	4705                	li	a4,1
20406f4a:	00f717b3          	sll	a5,a4,a5
20406f4e:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 1)
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20406f50:	fe842783          	lw	a5,-24(s0)
20406f54:	8fd9                	or	a5,a5,a4
20406f56:	a829                	j	20406f70 <__metal_plic0_enable+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 2)
20406f58:	fd842783          	lw	a5,-40(s0)
20406f5c:	8bfd                	andi	a5,a5,31
20406f5e:	4705                	li	a4,1
20406f60:	00f717b3          	sll	a5,a4,a5
20406f64:	fff7c793          	not	a5,a5
20406f68:	873e                	mv	a4,a5
20406f6a:	fe842783          	lw	a5,-24(s0)
20406f6e:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:74
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20406f70:	fd842703          	lw	a4,-40(s0)
20406f74:	8715                	srai	a4,a4,0x5
20406f76:	070a                	slli	a4,a4,0x2
20406f78:	86ba                	mv	a3,a4
20406f7a:	fec42703          	lw	a4,-20(s0)
20406f7e:	96ba                	add	a3,a3,a4
20406f80:	6709                	lui	a4,0x2
20406f82:	9736                	add	a4,a4,a3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20406f84:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:79
}
20406f86:	0001                	nop
20406f88:	50b2                	lw	ra,44(sp)
20406f8a:	5422                	lw	s0,40(sp)
20406f8c:	6145                	addi	sp,sp,48
20406f8e:	8082                	ret

20406f90 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:81

void __metal_plic0_default_handler (int id, void *priv) {
20406f90:	1101                	addi	sp,sp,-32
20406f92:	ce06                	sw	ra,28(sp)
20406f94:	cc22                	sw	s0,24(sp)
20406f96:	1000                	addi	s0,sp,32
20406f98:	fea42623          	sw	a0,-20(s0)
20406f9c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:82
    metal_shutdown(300);
20406fa0:	12c00513          	li	a0,300
20406fa4:	1c0010ef          	jal	ra,20408164 <metal_shutdown>

20406fa8 <__metal_plic0_handler>:
__metal_plic0_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86
}

void __metal_plic0_handler (int id, void *priv)
{
20406fa8:	7179                	addi	sp,sp,-48
20406faa:	d606                	sw	ra,44(sp)
20406fac:	d422                	sw	s0,40(sp)
20406fae:	1800                	addi	s0,sp,48
20406fb0:	fca42e23          	sw	a0,-36(s0)
20406fb4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:87
    struct __metal_driver_riscv_plic0 *plic = priv;
20406fb8:	fd842783          	lw	a5,-40(s0)
20406fbc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int idx = __metal_plic0_claim_interrupt(plic);
20406fc0:	fec42503          	lw	a0,-20(s0)
20406fc4:	33c5                	jal	20406da4 <__metal_plic0_claim_interrupt>
20406fc6:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:89
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts((struct metal_interrupt *)plic);
20406fca:	fec42503          	lw	a0,-20(s0)
20406fce:	3b35                	jal	20406d0a <__metal_driver_sifive_plic0_num_interrupts>
20406fd0:	87aa                	mv	a5,a0
20406fd2:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91

    if ( (idx < num_interrupts) && (plic->metal_exint_table[idx]) ) {
20406fd6:	fe842703          	lw	a4,-24(s0)
20406fda:	fe442783          	lw	a5,-28(s0)
20406fde:	04f77263          	bgeu	a4,a5,20407022 <__metal_plic0_handler+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91 (discriminator 1)
20406fe2:	fec42703          	lw	a4,-20(s0)
20406fe6:	fe842783          	lw	a5,-24(s0)
20406fea:	078a                	slli	a5,a5,0x2
20406fec:	97ba                	add	a5,a5,a4
20406fee:	479c                	lw	a5,8(a5)
20406ff0:	cb8d                	beqz	a5,20407022 <__metal_plic0_handler+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:92
	plic->metal_exint_table[idx](idx,
20406ff2:	fec42703          	lw	a4,-20(s0)
20406ff6:	fe842783          	lw	a5,-24(s0)
20406ffa:	078a                	slli	a5,a5,0x2
20406ffc:	97ba                	add	a5,a5,a4
20406ffe:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20407002:	fe842603          	lw	a2,-24(s0)
20407006:	fec42683          	lw	a3,-20(s0)
2040700a:	fe842703          	lw	a4,-24(s0)
2040700e:	87ba                	mv	a5,a4
20407010:	0786                	slli	a5,a5,0x1
20407012:	97ba                	add	a5,a5,a4
20407014:	078e                	slli	a5,a5,0x3
20407016:	97b6                	add	a5,a5,a3
20407018:	0887a783          	lw	a5,136(a5)
2040701c:	85be                	mv	a1,a5
2040701e:	8532                	mv	a0,a2
20407020:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:96
				  plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, idx);
20407022:	fe842583          	lw	a1,-24(s0)
20407026:	fec42503          	lw	a0,-20(s0)
2040702a:	3365                	jal	20406dd2 <__metal_plic0_complete_interrupt>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:97
}
2040702c:	0001                	nop
2040702e:	50b2                	lw	ra,44(sp)
20407030:	5422                	lw	s0,40(sp)
20407032:	6145                	addi	sp,sp,48
20407034:	8082                	ret

20407036 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100

void __metal_driver_riscv_plic0_init (struct metal_interrupt *controller)
{
20407036:	7139                	addi	sp,sp,-64
20407038:	de06                	sw	ra,60(sp)
2040703a:	dc22                	sw	s0,56(sp)
2040703c:	0080                	addi	s0,sp,64
2040703e:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:101
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407042:	fcc42783          	lw	a5,-52(s0)
20407046:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103

    if ( !plic->init_done ) {
2040704a:	fe442783          	lw	a5,-28(s0)
2040704e:	43dc                	lw	a5,4(a5)
20407050:	10079d63          	bnez	a5,2040716a <__metal_driver_riscv_plic0_init+0x134>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107
        int num_interrupts, line;
        struct metal_interrupt *intc;

	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20407054:	fe042623          	sw	zero,-20(s0)
20407058:	a209                	j	2040715a <__metal_driver_riscv_plic0_init+0x124>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
	    num_interrupts = __metal_driver_sifive_plic0_num_interrupts(controller);
2040705a:	fcc42503          	lw	a0,-52(s0)
2040705e:	cadff0ef          	jal	ra,20406d0a <__metal_driver_sifive_plic0_num_interrupts>
20407062:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:109
	    intc = __metal_driver_sifive_plic0_interrupt_parents(controller, parent);
20407066:	fec42583          	lw	a1,-20(s0)
2040706a:	fcc42503          	lw	a0,-52(s0)
2040706e:	31f5                	jal	20406d5a <__metal_driver_sifive_plic0_interrupt_parents>
20407070:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
	    line = __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20407074:	fec42583          	lw	a1,-20(s0)
20407078:	fcc42503          	lw	a0,-52(s0)
2040707c:	3319                	jal	20406d82 <__metal_driver_sifive_plic0_interrupt_lines>
2040707e:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:113

	    /* Initialize ist parent controller, aka cpu_intc. */
	    intc->vtable->interrupt_init(intc);
20407082:	fdc42783          	lw	a5,-36(s0)
20407086:	439c                	lw	a5,0(a5)
20407088:	439c                	lw	a5,0(a5)
2040708a:	fdc42503          	lw	a0,-36(s0)
2040708e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115

	    for (int i = 0; i < num_interrupts; i++) {
20407090:	fe042423          	sw	zero,-24(s0)
20407094:	a085                	j	204070f4 <__metal_driver_riscv_plic0_init+0xbe>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116 (discriminator 3)
		__metal_plic0_enable(plic, i, METAL_DISABLE);
20407096:	4601                	li	a2,0
20407098:	fe842583          	lw	a1,-24(s0)
2040709c:	fe442503          	lw	a0,-28(s0)
204070a0:	3595                	jal	20406f04 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:117 (discriminator 3)
		__metal_plic0_set_priority(controller, i, 0);
204070a2:	4601                	li	a2,0
204070a4:	fe842583          	lw	a1,-24(s0)
204070a8:	fcc42503          	lw	a0,-52(s0)
204070ac:	33c9                	jal	20406e6e <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:118 (discriminator 3)
		plic->metal_exint_table[i] = NULL;
204070ae:	fe442703          	lw	a4,-28(s0)
204070b2:	fe842783          	lw	a5,-24(s0)
204070b6:	078a                	slli	a5,a5,0x2
204070b8:	97ba                	add	a5,a5,a4
204070ba:	0007a423          	sw	zero,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:119 (discriminator 3)
		plic->metal_exdata_table[i].sub_int = NULL;
204070be:	fe442683          	lw	a3,-28(s0)
204070c2:	fe842703          	lw	a4,-24(s0)
204070c6:	87ba                	mv	a5,a4
204070c8:	0786                	slli	a5,a5,0x1
204070ca:	97ba                	add	a5,a5,a4
204070cc:	078e                	slli	a5,a5,0x3
204070ce:	97b6                	add	a5,a5,a3
204070d0:	0807a223          	sw	zero,132(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120 (discriminator 3)
		plic->metal_exdata_table[i].exint_data = NULL;
204070d4:	fe442683          	lw	a3,-28(s0)
204070d8:	fe842703          	lw	a4,-24(s0)
204070dc:	87ba                	mv	a5,a4
204070de:	0786                	slli	a5,a5,0x1
204070e0:	97ba                	add	a5,a5,a4
204070e2:	078e                	slli	a5,a5,0x3
204070e4:	97b6                	add	a5,a5,a3
204070e6:	0807a423          	sw	zero,136(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 3)
	    for (int i = 0; i < num_interrupts; i++) {
204070ea:	fe842783          	lw	a5,-24(s0)
204070ee:	0785                	addi	a5,a5,1
204070f0:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
204070f4:	fe842703          	lw	a4,-24(s0)
204070f8:	fe042783          	lw	a5,-32(s0)
204070fc:	f8f74de3          	blt	a4,a5,20407096 <__metal_driver_riscv_plic0_init+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123 (discriminator 2)
	    }

	    __metal_plic0_set_threshold(controller, 0);
20407100:	4581                	li	a1,0
20407102:	fcc42503          	lw	a0,-52(s0)
20407106:	3311                	jal	20406e0a <__metal_plic0_set_threshold>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126 (discriminator 2)

	    /* Register plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_register(intc, line, NULL, plic);
20407108:	fdc42783          	lw	a5,-36(s0)
2040710c:	439c                	lw	a5,0(a5)
2040710e:	4fdc                	lw	a5,28(a5)
20407110:	fe442683          	lw	a3,-28(s0)
20407114:	4601                	li	a2,0
20407116:	fd842583          	lw	a1,-40(s0)
2040711a:	fdc42503          	lw	a0,-36(s0)
2040711e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:128 (discriminator 2)
	    /* Register plic handler for dispatching its device interrupts */
	    intc->vtable->interrupt_register(intc, line, __metal_plic0_handler, plic);
20407120:	fdc42783          	lw	a5,-36(s0)
20407124:	439c                	lw	a5,0(a5)
20407126:	4fd8                	lw	a4,28(a5)
20407128:	fe442683          	lw	a3,-28(s0)
2040712c:	204077b7          	lui	a5,0x20407
20407130:	fa878613          	addi	a2,a5,-88 # 20406fa8 <__metal_plic0_handler>
20407134:	fd842583          	lw	a1,-40(s0)
20407138:	fdc42503          	lw	a0,-36(s0)
2040713c:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
	    /* Enable plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_enable(intc, line);
2040713e:	fdc42783          	lw	a5,-36(s0)
20407142:	439c                	lw	a5,0(a5)
20407144:	53dc                	lw	a5,36(a5)
20407146:	fd842583          	lw	a1,-40(s0)
2040714a:	fdc42503          	lw	a0,-36(s0)
2040714e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 2)
	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20407150:	fec42783          	lw	a5,-20(s0)
20407154:	0785                	addi	a5,a5,1
20407156:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 1)
2040715a:	fec42783          	lw	a5,-20(s0)
2040715e:	eef05ee3          	blez	a5,2040705a <__metal_driver_riscv_plic0_init+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
	}
        plic->init_done = 1;
20407162:	fe442783          	lw	a5,-28(s0)
20407166:	4705                	li	a4,1
20407168:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:134
    }
}
2040716a:	0001                	nop
2040716c:	50f2                	lw	ra,60(sp)
2040716e:	5462                	lw	s0,56(sp)
20407170:	6121                	addi	sp,sp,64
20407172:	8082                	ret

20407174 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

int __metal_driver_riscv_plic0_register (struct metal_interrupt *controller,
			               int id, metal_interrupt_handler_t isr,
			               void *priv)
{
20407174:	7179                	addi	sp,sp,-48
20407176:	d606                	sw	ra,44(sp)
20407178:	d422                	sw	s0,40(sp)
2040717a:	1800                	addi	s0,sp,48
2040717c:	fca42e23          	sw	a0,-36(s0)
20407180:	fcb42c23          	sw	a1,-40(s0)
20407184:	fcc42a23          	sw	a2,-44(s0)
20407188:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:140
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040718c:	fdc42783          	lw	a5,-36(s0)
20407190:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20407194:	fdc42503          	lw	a0,-36(s0)
20407198:	b73ff0ef          	jal	ra,20406d0a <__metal_driver_sifive_plic0_num_interrupts>
2040719c:	872a                	mv	a4,a0
2040719e:	fd842783          	lw	a5,-40(s0)
204071a2:	00e7c463          	blt	a5,a4,204071aa <__metal_driver_riscv_plic0_register+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
        return -1;
204071a6:	57fd                	li	a5,-1
204071a8:	a051                	j	2040722c <__metal_driver_riscv_plic0_register+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
    }
 
    if (isr) {
204071aa:	fd442783          	lw	a5,-44(s0)
204071ae:	cf9d                	beqz	a5,204071ec <__metal_driver_riscv_plic0_register+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
        __metal_plic0_set_priority(controller, id, 2);
204071b0:	4609                	li	a2,2
204071b2:	fd842583          	lw	a1,-40(s0)
204071b6:	fdc42503          	lw	a0,-36(s0)
204071ba:	cb5ff0ef          	jal	ra,20406e6e <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:148
	plic->metal_exint_table[id] = isr;
204071be:	fec42703          	lw	a4,-20(s0)
204071c2:	fd842783          	lw	a5,-40(s0)
204071c6:	078a                	slli	a5,a5,0x2
204071c8:	97ba                	add	a5,a5,a4
204071ca:	fd442703          	lw	a4,-44(s0)
204071ce:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:149
	plic->metal_exdata_table[id].exint_data = priv;
204071d0:	fec42683          	lw	a3,-20(s0)
204071d4:	fd842703          	lw	a4,-40(s0)
204071d8:	87ba                	mv	a5,a4
204071da:	0786                	slli	a5,a5,0x1
204071dc:	97ba                	add	a5,a5,a4
204071de:	078e                	slli	a5,a5,0x3
204071e0:	97b6                	add	a5,a5,a3
204071e2:	fd042703          	lw	a4,-48(s0)
204071e6:	08e7a423          	sw	a4,136(a5)
204071ea:	a081                	j	2040722a <__metal_driver_riscv_plic0_register+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151
    } else {
        __metal_plic0_set_priority(controller, id, 1);
204071ec:	4605                	li	a2,1
204071ee:	fd842583          	lw	a1,-40(s0)
204071f2:	fdc42503          	lw	a0,-36(s0)
204071f6:	c79ff0ef          	jal	ra,20406e6e <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:152
	plic->metal_exint_table[id] = __metal_plic0_default_handler;
204071fa:	fec42703          	lw	a4,-20(s0)
204071fe:	fd842783          	lw	a5,-40(s0)
20407202:	078a                	slli	a5,a5,0x2
20407204:	97ba                	add	a5,a5,a4
20407206:	20407737          	lui	a4,0x20407
2040720a:	f9070713          	addi	a4,a4,-112 # 20406f90 <__metal_plic0_default_handler>
2040720e:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:153
	plic->metal_exdata_table[id].sub_int = priv;
20407210:	fec42683          	lw	a3,-20(s0)
20407214:	fd842703          	lw	a4,-40(s0)
20407218:	87ba                	mv	a5,a4
2040721a:	0786                	slli	a5,a5,0x1
2040721c:	97ba                	add	a5,a5,a4
2040721e:	078e                	slli	a5,a5,0x3
20407220:	97b6                	add	a5,a5,a3
20407222:	fd042703          	lw	a4,-48(s0)
20407226:	08e7a223          	sw	a4,132(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156
    }

    return 0;
2040722a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:157
}
2040722c:	853e                	mv	a0,a5
2040722e:	50b2                	lw	ra,44(sp)
20407230:	5422                	lw	s0,40(sp)
20407232:	6145                	addi	sp,sp,48
20407234:	8082                	ret

20407236 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:160

int __metal_driver_riscv_plic0_enable (struct metal_interrupt *controller, int id)
{
20407236:	7179                	addi	sp,sp,-48
20407238:	d606                	sw	ra,44(sp)
2040723a:	d422                	sw	s0,40(sp)
2040723c:	1800                	addi	s0,sp,48
2040723e:	fca42e23          	sw	a0,-36(s0)
20407242:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407246:	fdc42783          	lw	a5,-36(s0)
2040724a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040724e:	fdc42503          	lw	a0,-36(s0)
20407252:	ab9ff0ef          	jal	ra,20406d0a <__metal_driver_sifive_plic0_num_interrupts>
20407256:	872a                	mv	a4,a0
20407258:	fd842783          	lw	a5,-40(s0)
2040725c:	00e7c463          	blt	a5,a4,20407264 <__metal_driver_riscv_plic0_enable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:164
        return -1;
20407260:	57fd                	li	a5,-1
20407262:	a809                	j	20407274 <__metal_driver_riscv_plic0_enable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167
    }

    __metal_plic0_enable(plic, id, METAL_ENABLE);
20407264:	4605                	li	a2,1
20407266:	fd842583          	lw	a1,-40(s0)
2040726a:	fec42503          	lw	a0,-20(s0)
2040726e:	c97ff0ef          	jal	ra,20406f04 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    return 0;
20407272:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:169
}
20407274:	853e                	mv	a0,a5
20407276:	50b2                	lw	ra,44(sp)
20407278:	5422                	lw	s0,40(sp)
2040727a:	6145                	addi	sp,sp,48
2040727c:	8082                	ret

2040727e <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:172

int __metal_driver_riscv_plic0_disable (struct metal_interrupt *controller, int id)
{
2040727e:	7179                	addi	sp,sp,-48
20407280:	d606                	sw	ra,44(sp)
20407282:	d422                	sw	s0,40(sp)
20407284:	1800                	addi	s0,sp,48
20407286:	fca42e23          	sw	a0,-36(s0)
2040728a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:173
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040728e:	fdc42783          	lw	a5,-36(s0)
20407292:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20407296:	fdc42503          	lw	a0,-36(s0)
2040729a:	a71ff0ef          	jal	ra,20406d0a <__metal_driver_sifive_plic0_num_interrupts>
2040729e:	872a                	mv	a4,a0
204072a0:	fd842783          	lw	a5,-40(s0)
204072a4:	00e7c463          	blt	a5,a4,204072ac <__metal_driver_riscv_plic0_disable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        return -1;
204072a8:	57fd                	li	a5,-1
204072aa:	a809                	j	204072bc <__metal_driver_riscv_plic0_disable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:178
    }
    __metal_plic0_enable(plic, id, METAL_DISABLE);
204072ac:	4601                	li	a2,0
204072ae:	fd842583          	lw	a1,-40(s0)
204072b2:	fec42503          	lw	a0,-20(s0)
204072b6:	c4fff0ef          	jal	ra,20406f04 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    return 0;
204072ba:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
}
204072bc:	853e                	mv	a0,a5
204072be:	50b2                	lw	ra,44(sp)
204072c0:	5422                	lw	s0,40(sp)
204072c2:	6145                	addi	sp,sp,48
204072c4:	8082                	ret

204072c6 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:388
/* --------------------- sifive_global_external_interrupts0 ------------ */


/* --------------------- sifive_gpio0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_gpio0_base(struct metal_gpio *gpio)
{
204072c6:	1101                	addi	sp,sp,-32
204072c8:	ce22                	sw	s0,28(sp)
204072ca:	1000                	addi	s0,sp,32
204072cc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:389
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204072d0:	fec42703          	lw	a4,-20(s0)
204072d4:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
204072d8:	00f71563          	bne	a4,a5,204072e2 <__metal_driver_sifive_gpio0_base+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:390
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
204072dc:	100127b7          	lui	a5,0x10012
204072e0:	a011                	j	204072e4 <__metal_driver_sifive_gpio0_base+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:393
	}
	else {
		return 0;
204072e2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:395
	}
}
204072e4:	853e                	mv	a0,a5
204072e6:	4472                	lw	s0,28(sp)
204072e8:	6105                	addi	sp,sp,32
204072ea:	8082                	ret

204072ec <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:418
		return 0;
	}
}

static __inline__ struct metal_interrupt * __metal_driver_sifive_gpio0_interrupt_parent(struct metal_gpio *gpio)
{
204072ec:	1101                	addi	sp,sp,-32
204072ee:	ce22                	sw	s0,28(sp)
204072f0:	1000                	addi	s0,sp,32
204072f2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:419
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204072f6:	fec42703          	lw	a4,-20(s0)
204072fa:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
204072fe:	00f71763          	bne	a4,a5,2040730c <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:420
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20407302:	800037b7          	lui	a5,0x80003
20407306:	b5078793          	addi	a5,a5,-1200 # 80002b50 <metal_segment_heap_target_end+0xffffee54>
2040730a:	a011                	j	2040730e <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:423
	}
	else {
		return 0;
2040730c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:425
	}
}
2040730e:	853e                	mv	a0,a5
20407310:	4472                	lw	s0,28(sp)
20407312:	6105                	addi	sp,sp,32
20407314:	8082                	ret

20407316 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:428

static __inline__ int __metal_driver_sifive_gpio0_interrupt_lines(struct metal_gpio *gpio, int idx)
{
20407316:	1101                	addi	sp,sp,-32
20407318:	ce22                	sw	s0,28(sp)
2040731a:	1000                	addi	s0,sp,32
2040731c:	fea42623          	sw	a0,-20(s0)
20407320:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:429
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20407324:	fec42703          	lw	a4,-20(s0)
20407328:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
2040732c:	00f71763          	bne	a4,a5,2040733a <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:429 (discriminator 1)
20407330:	fe842783          	lw	a5,-24(s0)
20407334:	e399                	bnez	a5,2040733a <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:430
		return 7;
20407336:	479d                	li	a5,7
20407338:	a269                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:432
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
2040733a:	fec42703          	lw	a4,-20(s0)
2040733e:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
20407342:	00f71963          	bne	a4,a5,20407354 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:432 (discriminator 1)
20407346:	fe842703          	lw	a4,-24(s0)
2040734a:	4785                	li	a5,1
2040734c:	00f71463          	bne	a4,a5,20407354 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:433
		return 8;
20407350:	47a1                	li	a5,8
20407352:	aa85                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:435
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20407354:	fec42703          	lw	a4,-20(s0)
20407358:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
2040735c:	00f71963          	bne	a4,a5,2040736e <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:435 (discriminator 1)
20407360:	fe842703          	lw	a4,-24(s0)
20407364:	4789                	li	a5,2
20407366:	00f71463          	bne	a4,a5,2040736e <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:436
		return 9;
2040736a:	47a5                	li	a5,9
2040736c:	aa99                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:438
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
2040736e:	fec42703          	lw	a4,-20(s0)
20407372:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
20407376:	00f71963          	bne	a4,a5,20407388 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:438 (discriminator 1)
2040737a:	fe842703          	lw	a4,-24(s0)
2040737e:	478d                	li	a5,3
20407380:	00f71463          	bne	a4,a5,20407388 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:439
		return 10;
20407384:	47a9                	li	a5,10
20407386:	aa35                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:441
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20407388:	fec42703          	lw	a4,-20(s0)
2040738c:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
20407390:	00f71963          	bne	a4,a5,204073a2 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:441 (discriminator 1)
20407394:	fe842703          	lw	a4,-24(s0)
20407398:	4791                	li	a5,4
2040739a:	00f71463          	bne	a4,a5,204073a2 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:442
		return 11;
2040739e:	47ad                	li	a5,11
204073a0:	a20d                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:444
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
204073a2:	fec42703          	lw	a4,-20(s0)
204073a6:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
204073aa:	00f71963          	bne	a4,a5,204073bc <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:444 (discriminator 1)
204073ae:	fe842703          	lw	a4,-24(s0)
204073b2:	4795                	li	a5,5
204073b4:	00f71463          	bne	a4,a5,204073bc <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:445
		return 12;
204073b8:	47b1                	li	a5,12
204073ba:	a221                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:447
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
204073bc:	fec42703          	lw	a4,-20(s0)
204073c0:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
204073c4:	00f71963          	bne	a4,a5,204073d6 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:447 (discriminator 1)
204073c8:	fe842703          	lw	a4,-24(s0)
204073cc:	4799                	li	a5,6
204073ce:	00f71463          	bne	a4,a5,204073d6 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:448
		return 13;
204073d2:	47b5                	li	a5,13
204073d4:	a0fd                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:450
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
204073d6:	fec42703          	lw	a4,-20(s0)
204073da:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
204073de:	00f71963          	bne	a4,a5,204073f0 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:450 (discriminator 1)
204073e2:	fe842703          	lw	a4,-24(s0)
204073e6:	479d                	li	a5,7
204073e8:	00f71463          	bne	a4,a5,204073f0 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:451
		return 14;
204073ec:	47b9                	li	a5,14
204073ee:	a8d1                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:453
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
204073f0:	fec42703          	lw	a4,-20(s0)
204073f4:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
204073f8:	00f71963          	bne	a4,a5,2040740a <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:453 (discriminator 1)
204073fc:	fe842703          	lw	a4,-24(s0)
20407400:	47a1                	li	a5,8
20407402:	00f71463          	bne	a4,a5,2040740a <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:454
		return 15;
20407406:	47bd                	li	a5,15
20407408:	a86d                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:456
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
2040740a:	fec42703          	lw	a4,-20(s0)
2040740e:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
20407412:	00f71963          	bne	a4,a5,20407424 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:456 (discriminator 1)
20407416:	fe842703          	lw	a4,-24(s0)
2040741a:	47a5                	li	a5,9
2040741c:	00f71463          	bne	a4,a5,20407424 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:457
		return 16;
20407420:	47c1                	li	a5,16
20407422:	a045                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:459
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20407424:	fec42703          	lw	a4,-20(s0)
20407428:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
2040742c:	00f71963          	bne	a4,a5,2040743e <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:459 (discriminator 1)
20407430:	fe842703          	lw	a4,-24(s0)
20407434:	47a9                	li	a5,10
20407436:	00f71463          	bne	a4,a5,2040743e <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:460
		return 17;
2040743a:	47c5                	li	a5,17
2040743c:	a059                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:462
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2040743e:	fec42703          	lw	a4,-20(s0)
20407442:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
20407446:	00f71963          	bne	a4,a5,20407458 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:462 (discriminator 1)
2040744a:	fe842703          	lw	a4,-24(s0)
2040744e:	47ad                	li	a5,11
20407450:	00f71463          	bne	a4,a5,20407458 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:463
		return 18;
20407454:	47c9                	li	a5,18
20407456:	a0b5                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:465
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20407458:	fec42703          	lw	a4,-20(s0)
2040745c:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
20407460:	00f71963          	bne	a4,a5,20407472 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:465 (discriminator 1)
20407464:	fe842703          	lw	a4,-24(s0)
20407468:	47b1                	li	a5,12
2040746a:	00f71463          	bne	a4,a5,20407472 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:466
		return 19;
2040746e:	47cd                	li	a5,19
20407470:	a889                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:468
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20407472:	fec42703          	lw	a4,-20(s0)
20407476:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
2040747a:	00f71963          	bne	a4,a5,2040748c <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:468 (discriminator 1)
2040747e:	fe842703          	lw	a4,-24(s0)
20407482:	47b5                	li	a5,13
20407484:	00f71463          	bne	a4,a5,2040748c <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:469
		return 20;
20407488:	47d1                	li	a5,20
2040748a:	a825                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:471
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
2040748c:	fec42703          	lw	a4,-20(s0)
20407490:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
20407494:	00f71963          	bne	a4,a5,204074a6 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:471 (discriminator 1)
20407498:	fe842703          	lw	a4,-24(s0)
2040749c:	47b9                	li	a5,14
2040749e:	00f71463          	bne	a4,a5,204074a6 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:472
		return 21;
204074a2:	47d5                	li	a5,21
204074a4:	a839                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:474
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
204074a6:	fec42703          	lw	a4,-20(s0)
204074aa:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
204074ae:	00f71963          	bne	a4,a5,204074c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:474 (discriminator 1)
204074b2:	fe842703          	lw	a4,-24(s0)
204074b6:	47bd                	li	a5,15
204074b8:	00f71463          	bne	a4,a5,204074c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:475
		return 22;
204074bc:	47d9                	li	a5,22
204074be:	a011                	j	204074c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:478
	}
	else {
		return 0;
204074c0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:480
	}
}
204074c2:	853e                	mv	a0,a5
204074c4:	4472                	lw	s0,28(sp)
204074c6:	6105                	addi	sp,sp,32
204074c8:	8082                	ret

204074ca <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio, long source)
{
204074ca:	7179                	addi	sp,sp,-48
204074cc:	d606                	sw	ra,44(sp)
204074ce:	d422                	sw	s0,40(sp)
204074d0:	1800                	addi	s0,sp,48
204074d2:	fca42e23          	sw	a0,-36(s0)
204074d6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204074da:	fdc42503          	lw	a0,-36(s0)
204074de:	33e5                	jal	204072c6 <__metal_driver_sifive_gpio0_base>
204074e0:	87aa                	mv	a5,a0
204074e2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  |= source;
204074e6:	fec42783          	lw	a5,-20(s0)
204074ea:	0791                	addi	a5,a5,4
204074ec:	4398                	lw	a4,0(a5)
204074ee:	fd842783          	lw	a5,-40(s0)
204074f2:	fec42683          	lw	a3,-20(s0)
204074f6:	0691                	addi	a3,a3,4
204074f8:	8fd9                	or	a5,a5,a4
204074fa:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:18

    return 0;
204074fc:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19
}
204074fe:	853e                	mv	a0,a5
20407500:	50b2                	lw	ra,44(sp)
20407502:	5422                	lw	s0,40(sp)
20407504:	6145                	addi	sp,sp,48
20407506:	8082                	ret

20407508 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:22

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio, long source)
{
20407508:	7179                	addi	sp,sp,-48
2040750a:	d606                	sw	ra,44(sp)
2040750c:	d422                	sw	s0,40(sp)
2040750e:	1800                	addi	s0,sp,48
20407510:	fca42e23          	sw	a0,-36(s0)
20407514:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407518:	fdc42503          	lw	a0,-36(s0)
2040751c:	336d                	jal	204072c6 <__metal_driver_sifive_gpio0_base>
2040751e:	87aa                	mv	a5,a0
20407520:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:25

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  &= ~source;
20407524:	fec42783          	lw	a5,-20(s0)
20407528:	0791                	addi	a5,a5,4
2040752a:	439c                	lw	a5,0(a5)
2040752c:	fd842703          	lw	a4,-40(s0)
20407530:	fff74713          	not	a4,a4
20407534:	86ba                	mv	a3,a4
20407536:	fec42703          	lw	a4,-20(s0)
2040753a:	0711                	addi	a4,a4,4
2040753c:	8ff5                	and	a5,a5,a3
2040753e:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    return 0;
20407540:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:28
}
20407542:	853e                	mv	a0,a5
20407544:	50b2                	lw	ra,44(sp)
20407546:	5422                	lw	s0,40(sp)
20407548:	6145                	addi	sp,sp,48
2040754a:	8082                	ret

2040754c <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:31

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio)
{
2040754c:	7179                	addi	sp,sp,-48
2040754e:	d606                	sw	ra,44(sp)
20407550:	d422                	sw	s0,40(sp)
20407552:	1800                	addi	s0,sp,48
20407554:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407558:	fdc42503          	lw	a0,-36(s0)
2040755c:	33ad                	jal	204072c6 <__metal_driver_sifive_gpio0_base>
2040755e:	87aa                	mv	a5,a0
20407560:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:34

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
20407564:	fec42783          	lw	a5,-20(s0)
20407568:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35
}
2040756a:	853e                	mv	a0,a5
2040756c:	50b2                	lw	ra,44(sp)
2040756e:	5422                	lw	s0,40(sp)
20407570:	6145                	addi	sp,sp,48
20407572:	8082                	ret

20407574 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:38

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio)
{
20407574:	7179                	addi	sp,sp,-48
20407576:	d606                	sw	ra,44(sp)
20407578:	d422                	sw	s0,40(sp)
2040757a:	1800                	addi	s0,sp,48
2040757c:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407580:	fdc42503          	lw	a0,-36(s0)
20407584:	d43ff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
20407588:	87aa                	mv	a5,a0
2040758a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:41

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
2040758e:	fec42783          	lw	a5,-20(s0)
20407592:	07b1                	addi	a5,a5,12
20407594:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42
}
20407596:	853e                	mv	a0,a5
20407598:	50b2                	lw	ra,44(sp)
2040759a:	5422                	lw	s0,40(sp)
2040759c:	6145                	addi	sp,sp,48
2040759e:	8082                	ret

204075a0 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:46


int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio, long source)
{
204075a0:	7179                	addi	sp,sp,-48
204075a2:	d606                	sw	ra,44(sp)
204075a4:	d422                	sw	s0,40(sp)
204075a6:	1800                	addi	s0,sp,48
204075a8:	fca42e23          	sw	a0,-36(s0)
204075ac:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204075b0:	fdc42503          	lw	a0,-36(s0)
204075b4:	d13ff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
204075b8:	87aa                	mv	a5,a0
204075ba:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:49

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  &= ~source;
204075be:	fec42783          	lw	a5,-20(s0)
204075c2:	07a1                	addi	a5,a5,8
204075c4:	439c                	lw	a5,0(a5)
204075c6:	fd842703          	lw	a4,-40(s0)
204075ca:	fff74713          	not	a4,a4
204075ce:	86ba                	mv	a3,a4
204075d0:	fec42703          	lw	a4,-20(s0)
204075d4:	0721                	addi	a4,a4,8
204075d6:	8ff5                	and	a5,a5,a3
204075d8:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    return 0;
204075da:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:52
}
204075dc:	853e                	mv	a0,a5
204075de:	50b2                	lw	ra,44(sp)
204075e0:	5422                	lw	s0,40(sp)
204075e2:	6145                	addi	sp,sp,48
204075e4:	8082                	ret

204075e6 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:55

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio, long source)
{
204075e6:	7179                	addi	sp,sp,-48
204075e8:	d606                	sw	ra,44(sp)
204075ea:	d422                	sw	s0,40(sp)
204075ec:	1800                	addi	s0,sp,48
204075ee:	fca42e23          	sw	a0,-36(s0)
204075f2:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:56
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204075f6:	fdc42503          	lw	a0,-36(s0)
204075fa:	ccdff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
204075fe:	87aa                	mv	a5,a0
20407600:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  |= source;
20407604:	fec42783          	lw	a5,-20(s0)
20407608:	07a1                	addi	a5,a5,8
2040760a:	4398                	lw	a4,0(a5)
2040760c:	fd842783          	lw	a5,-40(s0)
20407610:	fec42683          	lw	a3,-20(s0)
20407614:	06a1                	addi	a3,a3,8
20407616:	8fd9                	or	a5,a5,a4
20407618:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:60

    return 0;
2040761a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61
}
2040761c:	853e                	mv	a0,a5
2040761e:	50b2                	lw	ra,44(sp)
20407620:	5422                	lw	s0,40(sp)
20407622:	6145                	addi	sp,sp,48
20407624:	8082                	ret

20407626 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio, long value)
{
20407626:	7179                	addi	sp,sp,-48
20407628:	d606                	sw	ra,44(sp)
2040762a:	d422                	sw	s0,40(sp)
2040762c:	1800                	addi	s0,sp,48
2040762e:	fca42e23          	sw	a0,-36(s0)
20407632:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:65
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407636:	fdc42503          	lw	a0,-36(s0)
2040763a:	c8dff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
2040763e:	87aa                	mv	a5,a0
20407640:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |= value;
20407644:	fec42783          	lw	a5,-20(s0)
20407648:	07b1                	addi	a5,a5,12
2040764a:	4398                	lw	a4,0(a5)
2040764c:	fd842783          	lw	a5,-40(s0)
20407650:	fec42683          	lw	a3,-20(s0)
20407654:	06b1                	addi	a3,a3,12
20407656:	8fd9                	or	a5,a5,a4
20407658:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:69

    return 0;
2040765a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70
}
2040765c:	853e                	mv	a0,a5
2040765e:	50b2                	lw	ra,44(sp)
20407660:	5422                	lw	s0,40(sp)
20407662:	6145                	addi	sp,sp,48
20407664:	8082                	ret

20407666 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio, long value)
{
20407666:	7179                	addi	sp,sp,-48
20407668:	d606                	sw	ra,44(sp)
2040766a:	d422                	sw	s0,40(sp)
2040766c:	1800                	addi	s0,sp,48
2040766e:	fca42e23          	sw	a0,-36(s0)
20407672:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407676:	fdc42503          	lw	a0,-36(s0)
2040767a:	c4dff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
2040767e:	87aa                	mv	a5,a0
20407680:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:76

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &= ~value;
20407684:	fec42783          	lw	a5,-20(s0)
20407688:	07b1                	addi	a5,a5,12
2040768a:	439c                	lw	a5,0(a5)
2040768c:	fd842703          	lw	a4,-40(s0)
20407690:	fff74713          	not	a4,a4
20407694:	86ba                	mv	a3,a4
20407696:	fec42703          	lw	a4,-20(s0)
2040769a:	0731                	addi	a4,a4,12
2040769c:	8ff5                	and	a5,a5,a3
2040769e:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78

    return 0;
204076a0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:79
}
204076a2:	853e                	mv	a0,a5
204076a4:	50b2                	lw	ra,44(sp)
204076a6:	5422                	lw	s0,40(sp)
204076a8:	6145                	addi	sp,sp,48
204076aa:	8082                	ret

204076ac <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:82

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio, long value)
{
204076ac:	7179                	addi	sp,sp,-48
204076ae:	d606                	sw	ra,44(sp)
204076b0:	d422                	sw	s0,40(sp)
204076b2:	1800                	addi	s0,sp,48
204076b4:	fca42e23          	sw	a0,-36(s0)
204076b8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204076bc:	fdc42503          	lw	a0,-36(s0)
204076c0:	c07ff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
204076c4:	87aa                	mv	a5,a0
204076c6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
204076ca:	fec42783          	lw	a5,-20(s0)
204076ce:	07b1                	addi	a5,a5,12
204076d0:	4398                	lw	a4,0(a5)
204076d2:	fd842783          	lw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
204076d6:	fec42683          	lw	a3,-20(s0)
204076da:	06b1                	addi	a3,a3,12
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
204076dc:	8fb9                	xor	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
204076de:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88

    return 0;
204076e0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:89
}
204076e2:	853e                	mv	a0,a5
204076e4:	50b2                	lw	ra,44(sp)
204076e6:	5422                	lw	s0,40(sp)
204076e8:	6145                	addi	sp,sp,48
204076ea:	8082                	ret

204076ec <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source, long dest)
{
204076ec:	7179                	addi	sp,sp,-48
204076ee:	d606                	sw	ra,44(sp)
204076f0:	d422                	sw	s0,40(sp)
204076f2:	1800                	addi	s0,sp,48
204076f4:	fca42e23          	sw	a0,-36(s0)
204076f8:	fcb42c23          	sw	a1,-40(s0)
204076fc:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:93
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407700:	fdc42503          	lw	a0,-36(s0)
20407704:	bc3ff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
20407708:	87aa                	mv	a5,a0
2040770a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) &= ~source;
2040770e:	fec42783          	lw	a5,-20(s0)
20407712:	03c78793          	addi	a5,a5,60
20407716:	439c                	lw	a5,0(a5)
20407718:	fd842703          	lw	a4,-40(s0)
2040771c:	fff74713          	not	a4,a4
20407720:	86ba                	mv	a3,a4
20407722:	fec42703          	lw	a4,-20(s0)
20407726:	03c70713          	addi	a4,a4,60
2040772a:	8ff5                	and	a5,a5,a3
2040772c:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  |= dest;
2040772e:	fec42783          	lw	a5,-20(s0)
20407732:	03878793          	addi	a5,a5,56
20407736:	4398                	lw	a4,0(a5)
20407738:	fd442783          	lw	a5,-44(s0)
2040773c:	fec42683          	lw	a3,-20(s0)
20407740:	03868693          	addi	a3,a3,56
20407744:	8fd9                	or	a5,a5,a4
20407746:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:98

    return 0;
20407748:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99
}
2040774a:	853e                	mv	a0,a5
2040774c:	50b2                	lw	ra,44(sp)
2040774e:	5422                	lw	s0,40(sp)
20407750:	6145                	addi	sp,sp,48
20407752:	8082                	ret

20407754 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:102

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio, long source)
{
20407754:	7179                	addi	sp,sp,-48
20407756:	d606                	sw	ra,44(sp)
20407758:	d422                	sw	s0,40(sp)
2040775a:	1800                	addi	s0,sp,48
2040775c:	fca42e23          	sw	a0,-36(s0)
20407760:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407764:	fdc42503          	lw	a0,-36(s0)
20407768:	b5fff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
2040776c:	87aa                	mv	a5,a0
2040776e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:105

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  &= ~source;
20407772:	fec42783          	lw	a5,-20(s0)
20407776:	03878793          	addi	a5,a5,56
2040777a:	439c                	lw	a5,0(a5)
2040777c:	fd842703          	lw	a4,-40(s0)
20407780:	fff74713          	not	a4,a4
20407784:	86ba                	mv	a3,a4
20407786:	fec42703          	lw	a4,-20(s0)
2040778a:	03870713          	addi	a4,a4,56
2040778e:	8ff5                	and	a5,a5,a3
20407790:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107

    return 0;
20407792:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20407794:	853e                	mv	a0,a5
20407796:	50b2                	lw	ra,44(sp)
20407798:	5422                	lw	s0,40(sp)
2040779a:	6145                	addi	sp,sp,48
2040779c:	8082                	ret

2040779e <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio, long source, int intr_type)
{
2040779e:	7179                	addi	sp,sp,-48
204077a0:	d606                	sw	ra,44(sp)
204077a2:	d422                	sw	s0,40(sp)
204077a4:	1800                	addi	s0,sp,48
204077a6:	fca42e23          	sw	a0,-36(s0)
204077aa:	fcb42c23          	sw	a1,-40(s0)
204077ae:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204077b2:	fdc42503          	lw	a0,-36(s0)
204077b6:	b11ff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
204077ba:	87aa                	mv	a5,a0
204077bc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    switch (intr_type)
204077c0:	fd442703          	lw	a4,-44(s0)
204077c4:	479d                	li	a5,7
204077c6:	1ce7e963          	bltu	a5,a4,20407998 <__metal_driver_sifive_gpio0_config_int+0x1fa>
204077ca:	fd442783          	lw	a5,-44(s0)
204077ce:	00279713          	slli	a4,a5,0x2
204077d2:	204097b7          	lui	a5,0x20409
204077d6:	9ec78793          	addi	a5,a5,-1556 # 204089ec <__metal_driver_vtable_riscv_plic0+0x4c>
204077da:	97ba                	add	a5,a5,a4
204077dc:	439c                	lw	a5,0(a5)
204077de:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117
    {
        case METAL_GPIO_INT_DISABLE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  &= ~source;
204077e0:	fec42783          	lw	a5,-20(s0)
204077e4:	07e1                	addi	a5,a5,24
204077e6:	439c                	lw	a5,0(a5)
204077e8:	fd842703          	lw	a4,-40(s0)
204077ec:	fff74713          	not	a4,a4
204077f0:	86ba                	mv	a3,a4
204077f2:	fec42703          	lw	a4,-20(s0)
204077f6:	0761                	addi	a4,a4,24
204077f8:	8ff5                	and	a5,a5,a3
204077fa:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  &= ~source;
204077fc:	fec42783          	lw	a5,-20(s0)
20407800:	02078793          	addi	a5,a5,32
20407804:	439c                	lw	a5,0(a5)
20407806:	fd842703          	lw	a4,-40(s0)
2040780a:	fff74713          	not	a4,a4
2040780e:	86ba                	mv	a3,a4
20407810:	fec42703          	lw	a4,-20(s0)
20407814:	02070713          	addi	a4,a4,32
20407818:	8ff5                	and	a5,a5,a3
2040781a:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:119
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  &= ~source;
2040781c:	fec42783          	lw	a5,-20(s0)
20407820:	02878793          	addi	a5,a5,40
20407824:	439c                	lw	a5,0(a5)
20407826:	fd842703          	lw	a4,-40(s0)
2040782a:	fff74713          	not	a4,a4
2040782e:	86ba                	mv	a3,a4
20407830:	fec42703          	lw	a4,-20(s0)
20407834:	02870713          	addi	a4,a4,40
20407838:	8ff5                	and	a5,a5,a3
2040783a:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:120
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  &= ~source;
2040783c:	fec42783          	lw	a5,-20(s0)
20407840:	03078793          	addi	a5,a5,48
20407844:	439c                	lw	a5,0(a5)
20407846:	fd842703          	lw	a4,-40(s0)
2040784a:	fff74713          	not	a4,a4
2040784e:	86ba                	mv	a3,a4
20407850:	fec42703          	lw	a4,-20(s0)
20407854:	03070713          	addi	a4,a4,48
20407858:	8ff5                	and	a5,a5,a3
2040785a:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121
            break;
2040785c:	aa35                	j	20407998 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:123
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
2040785e:	fec42783          	lw	a5,-20(s0)
20407862:	07e1                	addi	a5,a5,24
20407864:	4398                	lw	a4,0(a5)
20407866:	fd842783          	lw	a5,-40(s0)
2040786a:	fec42683          	lw	a3,-20(s0)
2040786e:	06e1                	addi	a3,a3,24
20407870:	8fd9                	or	a5,a5,a4
20407872:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124
            break;
20407874:	a215                	j	20407998 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:126
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20407876:	fec42783          	lw	a5,-20(s0)
2040787a:	02078793          	addi	a5,a5,32
2040787e:	4398                	lw	a4,0(a5)
20407880:	fd842783          	lw	a5,-40(s0)
20407884:	fec42683          	lw	a3,-20(s0)
20407888:	02068693          	addi	a3,a3,32
2040788c:	8fd9                	or	a5,a5,a4
2040788e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
            break;
20407890:	a221                	j	20407998 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20407892:	fec42783          	lw	a5,-20(s0)
20407896:	07e1                	addi	a5,a5,24
20407898:	4398                	lw	a4,0(a5)
2040789a:	fd842783          	lw	a5,-40(s0)
2040789e:	fec42683          	lw	a3,-20(s0)
204078a2:	06e1                	addi	a3,a3,24
204078a4:	8fd9                	or	a5,a5,a4
204078a6:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:130
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
204078a8:	fec42783          	lw	a5,-20(s0)
204078ac:	02078793          	addi	a5,a5,32
204078b0:	4398                	lw	a4,0(a5)
204078b2:	fd842783          	lw	a5,-40(s0)
204078b6:	fec42683          	lw	a3,-20(s0)
204078ba:	02068693          	addi	a3,a3,32
204078be:	8fd9                	or	a5,a5,a4
204078c0:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
            break;
204078c2:	a8d9                	j	20407998 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
204078c4:	fec42783          	lw	a5,-20(s0)
204078c8:	02878793          	addi	a5,a5,40
204078cc:	4398                	lw	a4,0(a5)
204078ce:	fd842783          	lw	a5,-40(s0)
204078d2:	fec42683          	lw	a3,-20(s0)
204078d6:	02868693          	addi	a3,a3,40
204078da:	8fd9                	or	a5,a5,a4
204078dc:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
            break;
204078de:	a86d                	j	20407998 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:136
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
204078e0:	fec42783          	lw	a5,-20(s0)
204078e4:	03078793          	addi	a5,a5,48
204078e8:	4398                	lw	a4,0(a5)
204078ea:	fd842783          	lw	a5,-40(s0)
204078ee:	fec42683          	lw	a3,-20(s0)
204078f2:	03068693          	addi	a3,a3,48
204078f6:	8fd9                	or	a5,a5,a4
204078f8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
            break;
204078fa:	a879                	j	20407998 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:139
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
204078fc:	fec42783          	lw	a5,-20(s0)
20407900:	02878793          	addi	a5,a5,40
20407904:	4398                	lw	a4,0(a5)
20407906:	fd842783          	lw	a5,-40(s0)
2040790a:	fec42683          	lw	a3,-20(s0)
2040790e:	02868693          	addi	a3,a3,40
20407912:	8fd9                	or	a5,a5,a4
20407914:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:140
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20407916:	fec42783          	lw	a5,-20(s0)
2040791a:	03078793          	addi	a5,a5,48
2040791e:	4398                	lw	a4,0(a5)
20407920:	fd842783          	lw	a5,-40(s0)
20407924:	fec42683          	lw	a3,-20(s0)
20407928:	03068693          	addi	a3,a3,48
2040792c:	8fd9                	or	a5,a5,a4
2040792e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
            break;
20407930:	a0a5                	j	20407998 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:143
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20407932:	fec42783          	lw	a5,-20(s0)
20407936:	07e1                	addi	a5,a5,24
20407938:	4398                	lw	a4,0(a5)
2040793a:	fd842783          	lw	a5,-40(s0)
2040793e:	fec42683          	lw	a3,-20(s0)
20407942:	06e1                	addi	a3,a3,24
20407944:	8fd9                	or	a5,a5,a4
20407946:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:144
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20407948:	fec42783          	lw	a5,-20(s0)
2040794c:	02078793          	addi	a5,a5,32
20407950:	4398                	lw	a4,0(a5)
20407952:	fd842783          	lw	a5,-40(s0)
20407956:	fec42683          	lw	a3,-20(s0)
2040795a:	02068693          	addi	a3,a3,32
2040795e:	8fd9                	or	a5,a5,a4
20407960:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20407962:	fec42783          	lw	a5,-20(s0)
20407966:	02878793          	addi	a5,a5,40
2040796a:	4398                	lw	a4,0(a5)
2040796c:	fd842783          	lw	a5,-40(s0)
20407970:	fec42683          	lw	a3,-20(s0)
20407974:	02868693          	addi	a3,a3,40
20407978:	8fd9                	or	a5,a5,a4
2040797a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:146
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
2040797c:	fec42783          	lw	a5,-20(s0)
20407980:	03078793          	addi	a5,a5,48
20407984:	4398                	lw	a4,0(a5)
20407986:	fd842783          	lw	a5,-40(s0)
2040798a:	fec42683          	lw	a3,-20(s0)
2040798e:	03068693          	addi	a3,a3,48
20407992:	8fd9                	or	a5,a5,a4
20407994:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
            break;
20407996:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:149
    }
    return 0;
20407998:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:150
}
2040799a:	853e                	mv	a0,a5
2040799c:	50b2                	lw	ra,44(sp)
2040799e:	5422                	lw	s0,40(sp)
204079a0:	6145                	addi	sp,sp,48
204079a2:	8082                	ret

204079a4 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:153

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source, int intr_type)
{
204079a4:	7179                	addi	sp,sp,-48
204079a6:	d606                	sw	ra,44(sp)
204079a8:	d422                	sw	s0,40(sp)
204079aa:	1800                	addi	s0,sp,48
204079ac:	fca42e23          	sw	a0,-36(s0)
204079b0:	fcb42c23          	sw	a1,-40(s0)
204079b4:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:154
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204079b8:	fdc42503          	lw	a0,-36(s0)
204079bc:	90bff0ef          	jal	ra,204072c6 <__metal_driver_sifive_gpio0_base>
204079c0:	87aa                	mv	a5,a0
204079c2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156

    switch (intr_type)
204079c6:	fd442703          	lw	a4,-44(s0)
204079ca:	479d                	li	a5,7
204079cc:	14e7ea63          	bltu	a5,a4,20407b20 <__metal_driver_sifive_gpio0_clear_int+0x17c>
204079d0:	fd442783          	lw	a5,-44(s0)
204079d4:	00279713          	slli	a4,a5,0x2
204079d8:	204097b7          	lui	a5,0x20409
204079dc:	a0c78793          	addi	a5,a5,-1524 # 20408a0c <__metal_driver_vtable_riscv_plic0+0x6c>
204079e0:	97ba                	add	a5,a5,a4
204079e2:	439c                	lw	a5,0(a5)
204079e4:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    {
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
204079e6:	fec42783          	lw	a5,-20(s0)
204079ea:	07f1                	addi	a5,a5,28
204079ec:	4398                	lw	a4,0(a5)
204079ee:	fd842783          	lw	a5,-40(s0)
204079f2:	fec42683          	lw	a3,-20(s0)
204079f6:	06f1                	addi	a3,a3,28
204079f8:	8fd9                	or	a5,a5,a4
204079fa:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:160
            break;
204079fc:	a215                	j	20407b20 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
204079fe:	fec42783          	lw	a5,-20(s0)
20407a02:	02478793          	addi	a5,a5,36
20407a06:	4398                	lw	a4,0(a5)
20407a08:	fd842783          	lw	a5,-40(s0)
20407a0c:	fec42683          	lw	a3,-20(s0)
20407a10:	02468693          	addi	a3,a3,36
20407a14:	8fd9                	or	a5,a5,a4
20407a16:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:163
            break;
20407a18:	a221                	j	20407b20 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20407a1a:	fec42783          	lw	a5,-20(s0)
20407a1e:	07f1                	addi	a5,a5,28
20407a20:	4398                	lw	a4,0(a5)
20407a22:	fd842783          	lw	a5,-40(s0)
20407a26:	fec42683          	lw	a3,-20(s0)
20407a2a:	06f1                	addi	a3,a3,28
20407a2c:	8fd9                	or	a5,a5,a4
20407a2e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:166
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20407a30:	fec42783          	lw	a5,-20(s0)
20407a34:	02478793          	addi	a5,a5,36
20407a38:	4398                	lw	a4,0(a5)
20407a3a:	fd842783          	lw	a5,-40(s0)
20407a3e:	fec42683          	lw	a3,-20(s0)
20407a42:	02468693          	addi	a3,a3,36
20407a46:	8fd9                	or	a5,a5,a4
20407a48:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
            break;
20407a4a:	a8d9                	j	20407b20 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20407a4c:	fec42783          	lw	a5,-20(s0)
20407a50:	02c78793          	addi	a5,a5,44
20407a54:	4398                	lw	a4,0(a5)
20407a56:	fd842783          	lw	a5,-40(s0)
20407a5a:	fec42683          	lw	a3,-20(s0)
20407a5e:	02c68693          	addi	a3,a3,44
20407a62:	8fd9                	or	a5,a5,a4
20407a64:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:170
            break;
20407a66:	a86d                	j	20407b20 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20407a68:	fec42783          	lw	a5,-20(s0)
20407a6c:	03478793          	addi	a5,a5,52
20407a70:	4398                	lw	a4,0(a5)
20407a72:	fd842783          	lw	a5,-40(s0)
20407a76:	fec42683          	lw	a3,-20(s0)
20407a7a:	03468693          	addi	a3,a3,52
20407a7e:	8fd9                	or	a5,a5,a4
20407a80:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:173
            break;
20407a82:	a879                	j	20407b20 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20407a84:	fec42783          	lw	a5,-20(s0)
20407a88:	02c78793          	addi	a5,a5,44
20407a8c:	4398                	lw	a4,0(a5)
20407a8e:	fd842783          	lw	a5,-40(s0)
20407a92:	fec42683          	lw	a3,-20(s0)
20407a96:	02c68693          	addi	a3,a3,44
20407a9a:	8fd9                	or	a5,a5,a4
20407a9c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:176
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20407a9e:	fec42783          	lw	a5,-20(s0)
20407aa2:	03478793          	addi	a5,a5,52
20407aa6:	4398                	lw	a4,0(a5)
20407aa8:	fd842783          	lw	a5,-40(s0)
20407aac:	fec42683          	lw	a3,-20(s0)
20407ab0:	03468693          	addi	a3,a3,52
20407ab4:	8fd9                	or	a5,a5,a4
20407ab6:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:177
            break;
20407ab8:	a0a5                	j	20407b20 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20407aba:	fec42783          	lw	a5,-20(s0)
20407abe:	07f1                	addi	a5,a5,28
20407ac0:	4398                	lw	a4,0(a5)
20407ac2:	fd842783          	lw	a5,-40(s0)
20407ac6:	fec42683          	lw	a3,-20(s0)
20407aca:	06f1                	addi	a3,a3,28
20407acc:	8fd9                	or	a5,a5,a4
20407ace:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:180
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20407ad0:	fec42783          	lw	a5,-20(s0)
20407ad4:	02478793          	addi	a5,a5,36
20407ad8:	4398                	lw	a4,0(a5)
20407ada:	fd842783          	lw	a5,-40(s0)
20407ade:	fec42683          	lw	a3,-20(s0)
20407ae2:	02468693          	addi	a3,a3,36
20407ae6:	8fd9                	or	a5,a5,a4
20407ae8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20407aea:	fec42783          	lw	a5,-20(s0)
20407aee:	02c78793          	addi	a5,a5,44
20407af2:	4398                	lw	a4,0(a5)
20407af4:	fd842783          	lw	a5,-40(s0)
20407af8:	fec42683          	lw	a3,-20(s0)
20407afc:	02c68693          	addi	a3,a3,44
20407b00:	8fd9                	or	a5,a5,a4
20407b02:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:182
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20407b04:	fec42783          	lw	a5,-20(s0)
20407b08:	03478793          	addi	a5,a5,52
20407b0c:	4398                	lw	a4,0(a5)
20407b0e:	fd842783          	lw	a5,-40(s0)
20407b12:	fec42683          	lw	a3,-20(s0)
20407b16:	03468693          	addi	a3,a3,52
20407b1a:	8fd9                	or	a5,a5,a4
20407b1c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:183
            break;
20407b1e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
    }
    return 0;
20407b20:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:186
}
20407b22:	853e                	mv	a0,a5
20407b24:	50b2                	lw	ra,44(sp)
20407b26:	5422                	lw	s0,40(sp)
20407b28:	6145                	addi	sp,sp,48
20407b2a:	8082                	ret

20407b2c <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:190

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio)
{
20407b2c:	1101                	addi	sp,sp,-32
20407b2e:	ce06                	sw	ra,28(sp)
20407b30:	cc22                	sw	s0,24(sp)
20407b32:	1000                	addi	s0,sp,32
20407b34:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:191
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20407b38:	fec42503          	lw	a0,-20(s0)
20407b3c:	fb0ff0ef          	jal	ra,204072ec <__metal_driver_sifive_gpio0_interrupt_parent>
20407b40:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
}
20407b42:	853e                	mv	a0,a5
20407b44:	40f2                	lw	ra,28(sp)
20407b46:	4462                	lw	s0,24(sp)
20407b48:	6105                	addi	sp,sp,32
20407b4a:	8082                	ret

20407b4c <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin)
{
20407b4c:	7179                	addi	sp,sp,-48
20407b4e:	d606                	sw	ra,44(sp)
20407b50:	d422                	sw	s0,40(sp)
20407b52:	1800                	addi	s0,sp,48
20407b54:	fca42e23          	sw	a0,-36(s0)
20407b58:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:197
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20407b5c:	fd842583          	lw	a1,-40(s0)
20407b60:	fdc42503          	lw	a0,-36(s0)
20407b64:	fb2ff0ef          	jal	ra,20407316 <__metal_driver_sifive_gpio0_interrupt_lines>
20407b68:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    return irq;
20407b6c:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
}
20407b70:	853e                	mv	a0,a5
20407b72:	50b2                	lw	ra,44(sp)
20407b74:	5422                	lw	s0,40(sp)
20407b76:	6145                	addi	sp,sp,48
20407b78:	8082                	ret

20407b7a <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:564

/* --------------------- sifive_trace ------------ */

/* --------------------- sifive_uart0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_uart0_control_base(struct metal_uart *uart)
{
20407b7a:	1101                	addi	sp,sp,-32
20407b7c:	ce22                	sw	s0,28(sp)
20407b7e:	1000                	addi	s0,sp,32
20407b80:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:565
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407b84:	fec42703          	lw	a4,-20(s0)
20407b88:	800037b7          	lui	a5,0x80003
20407b8c:	e5078793          	addi	a5,a5,-432 # 80002e50 <metal_segment_heap_target_end+0xfffff154>
20407b90:	00f71563          	bne	a4,a5,20407b9a <__metal_driver_sifive_uart0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:566
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20407b94:	100137b7          	lui	a5,0x10013
20407b98:	a011                	j	20407b9c <__metal_driver_sifive_uart0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:569
	}
	else {
		return 0;
20407b9a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:571
	}
}
20407b9c:	853e                	mv	a0,a5
20407b9e:	4472                	lw	s0,28(sp)
20407ba0:	6105                	addi	sp,sp,32
20407ba2:	8082                	ret

20407ba4 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:594
		return 0;
	}
}

static __inline__ struct metal_interrupt * __metal_driver_sifive_uart0_interrupt_parent(struct metal_uart *uart)
{
20407ba4:	1101                	addi	sp,sp,-32
20407ba6:	ce22                	sw	s0,28(sp)
20407ba8:	1000                	addi	s0,sp,32
20407baa:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:595
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407bae:	fec42703          	lw	a4,-20(s0)
20407bb2:	800037b7          	lui	a5,0x80003
20407bb6:	e5078793          	addi	a5,a5,-432 # 80002e50 <metal_segment_heap_target_end+0xfffff154>
20407bba:	00f71763          	bne	a4,a5,20407bc8 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:596
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20407bbe:	800037b7          	lui	a5,0x80003
20407bc2:	b5078793          	addi	a5,a5,-1200 # 80002b50 <metal_segment_heap_target_end+0xffffee54>
20407bc6:	a011                	j	20407bca <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:599
	}
	else {
		return 0;
20407bc8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:601
	}
}
20407bca:	853e                	mv	a0,a5
20407bcc:	4472                	lw	s0,28(sp)
20407bce:	6105                	addi	sp,sp,32
20407bd0:	8082                	ret

20407bd2 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:604

static __inline__ int __metal_driver_sifive_uart0_interrupt_line(struct metal_uart *uart)
{
20407bd2:	1101                	addi	sp,sp,-32
20407bd4:	ce22                	sw	s0,28(sp)
20407bd6:	1000                	addi	s0,sp,32
20407bd8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:605
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407bdc:	fec42703          	lw	a4,-20(s0)
20407be0:	800037b7          	lui	a5,0x80003
20407be4:	e5078793          	addi	a5,a5,-432 # 80002e50 <metal_segment_heap_target_end+0xfffff154>
20407be8:	00f71463          	bne	a4,a5,20407bf0 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:606
		return 5;
20407bec:	4795                	li	a5,5
20407bee:	a011                	j	20407bf2 <__metal_driver_sifive_uart0_interrupt_line+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:609
	}
	else {
		return 0;
20407bf0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:611
	}
}
20407bf2:	853e                	mv	a0,a5
20407bf4:	4472                	lw	s0,28(sp)
20407bf6:	6105                	addi	sp,sp,32
20407bf8:	8082                	ret

20407bfa <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:614

static __inline__ struct metal_clock * __metal_driver_sifive_uart0_clock(struct metal_uart *uart)
{
20407bfa:	1101                	addi	sp,sp,-32
20407bfc:	ce22                	sw	s0,28(sp)
20407bfe:	1000                	addi	s0,sp,32
20407c00:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:615
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407c04:	fec42703          	lw	a4,-20(s0)
20407c08:	800037b7          	lui	a5,0x80003
20407c0c:	e5078793          	addi	a5,a5,-432 # 80002e50 <metal_segment_heap_target_end+0xfffff154>
20407c10:	00f71763          	bne	a4,a5,20407c1e <__metal_driver_sifive_uart0_clock+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:616
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20407c14:	800027b7          	lui	a5,0x80002
20407c18:	78c78793          	addi	a5,a5,1932 # 8000278c <metal_segment_heap_target_end+0xffffea90>
20407c1c:	a011                	j	20407c20 <__metal_driver_sifive_uart0_clock+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:619
	}
	else {
		return 0;
20407c1e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:621
	}
}
20407c20:	853e                	mv	a0,a5
20407c22:	4472                	lw	s0,28(sp)
20407c24:	6105                	addi	sp,sp,32
20407c26:	8082                	ret

20407c28 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:624

static __inline__ struct __metal_driver_sifive_gpio0 * __metal_driver_sifive_uart0_pinmux(struct metal_uart *uart)
{
20407c28:	1101                	addi	sp,sp,-32
20407c2a:	ce22                	sw	s0,28(sp)
20407c2c:	1000                	addi	s0,sp,32
20407c2e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:625
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407c32:	fec42703          	lw	a4,-20(s0)
20407c36:	800037b7          	lui	a5,0x80003
20407c3a:	e5078793          	addi	a5,a5,-432 # 80002e50 <metal_segment_heap_target_end+0xfffff154>
20407c3e:	00f71563          	bne	a4,a5,20407c48 <__metal_driver_sifive_uart0_pinmux+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:626
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20407c42:	81818793          	addi	a5,gp,-2024 # 80002e88 <__metal_dt_gpio_10012000>
20407c46:	a011                	j	20407c4a <__metal_driver_sifive_uart0_pinmux+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:629
	}
	else {
		return 0;
20407c48:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:631
	}
}
20407c4a:	853e                	mv	a0,a5
20407c4c:	4472                	lw	s0,28(sp)
20407c4e:	6105                	addi	sp,sp,32
20407c50:	8082                	ret

20407c52 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:634

static __inline__ unsigned long __metal_driver_sifive_uart0_pinmux_output_selector(struct metal_uart *uart)
{
20407c52:	1101                	addi	sp,sp,-32
20407c54:	ce22                	sw	s0,28(sp)
20407c56:	1000                	addi	s0,sp,32
20407c58:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:635
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407c5c:	fec42703          	lw	a4,-20(s0)
20407c60:	800037b7          	lui	a5,0x80003
20407c64:	e5078793          	addi	a5,a5,-432 # 80002e50 <metal_segment_heap_target_end+0xfffff154>
20407c68:	00f71563          	bne	a4,a5,20407c72 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:636
		return 196608;
20407c6c:	000307b7          	lui	a5,0x30
20407c70:	a011                	j	20407c74 <__metal_driver_sifive_uart0_pinmux_output_selector+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:639
	}
	else {
		return 0;
20407c72:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:641
	}
}
20407c74:	853e                	mv	a0,a5
20407c76:	4472                	lw	s0,28(sp)
20407c78:	6105                	addi	sp,sp,32
20407c7a:	8082                	ret

20407c7c <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:644

static __inline__ unsigned long __metal_driver_sifive_uart0_pinmux_source_selector(struct metal_uart *uart)
{
20407c7c:	1101                	addi	sp,sp,-32
20407c7e:	ce22                	sw	s0,28(sp)
20407c80:	1000                	addi	s0,sp,32
20407c82:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:645
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407c86:	fec42703          	lw	a4,-20(s0)
20407c8a:	800037b7          	lui	a5,0x80003
20407c8e:	e5078793          	addi	a5,a5,-432 # 80002e50 <metal_segment_heap_target_end+0xfffff154>
20407c92:	00f71563          	bne	a4,a5,20407c9c <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:646
		return 196608;
20407c96:	000307b7          	lui	a5,0x30
20407c9a:	a011                	j	20407c9e <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:649
	}
	else {
		return 0;
20407c9c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:651
	}
}
20407c9e:	853e                	mv	a0,a5
20407ca0:	4472                	lw	s0,28(sp)
20407ca2:	6105                	addi	sp,sp,32
20407ca4:	8082                	ret

20407ca6 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:32
#define UART_REGB(offset)  (__METAL_ACCESS_ONCE((__metal_io_u8  *)UART_REG(offset)))
#define UART_REGW(offset)  (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart)
{
20407ca6:	1101                	addi	sp,sp,-32
20407ca8:	ce06                	sw	ra,28(sp)
20407caa:	cc22                	sw	s0,24(sp)
20407cac:	1000                	addi	s0,sp,32
20407cae:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:33
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20407cb2:	fec42503          	lw	a0,-20(s0)
20407cb6:	35fd                	jal	20407ba4 <__metal_driver_sifive_uart0_interrupt_parent>
20407cb8:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:34
}
20407cba:	853e                	mv	a0,a5
20407cbc:	40f2                	lw	ra,28(sp)
20407cbe:	4462                	lw	s0,24(sp)
20407cc0:	6105                	addi	sp,sp,32
20407cc2:	8082                	ret

20407cc4 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:37

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart)
{
20407cc4:	1101                	addi	sp,sp,-32
20407cc6:	ce06                	sw	ra,28(sp)
20407cc8:	cc22                	sw	s0,24(sp)
20407cca:	1000                	addi	s0,sp,32
20407ccc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:38
    return (__metal_driver_sifive_uart0_interrupt_line(uart) + METAL_INTERRUPT_ID_GL0);
20407cd0:	fec42503          	lw	a0,-20(s0)
20407cd4:	3dfd                	jal	20407bd2 <__metal_driver_sifive_uart0_interrupt_line>
20407cd6:	87aa                	mv	a5,a0
20407cd8:	02078793          	addi	a5,a5,32 # 30020 <__heap_size+0x2f820>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:39
}
20407cdc:	853e                	mv	a0,a5
20407cde:	40f2                	lw	ra,28(sp)
20407ce0:	4462                	lw	s0,24(sp)
20407ce2:	6105                	addi	sp,sp,32
20407ce4:	8082                	ret

20407ce6 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:43


int __metal_driver_sifive_uart0_txready(struct metal_uart *uart)
{
20407ce6:	7179                	addi	sp,sp,-48
20407ce8:	d606                	sw	ra,44(sp)
20407cea:	d422                	sw	s0,40(sp)
20407cec:	1800                	addi	s0,sp,48
20407cee:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:44
  long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407cf2:	fdc42503          	lw	a0,-36(s0)
20407cf6:	3551                	jal	20407b7a <__metal_driver_sifive_uart0_control_base>
20407cf8:	87aa                	mv	a5,a0
20407cfa:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:46

  return !((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20407cfe:	fec42783          	lw	a5,-20(s0)
20407d02:	439c                	lw	a5,0(a5)
20407d04:	fff7c793          	not	a5,a5
20407d08:	83fd                	srli	a5,a5,0x1f
20407d0a:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:47
}
20407d0e:	853e                	mv	a0,a5
20407d10:	50b2                	lw	ra,44(sp)
20407d12:	5422                	lw	s0,40(sp)
20407d14:	6145                	addi	sp,sp,48
20407d16:	8082                	ret

20407d18 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:51


int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c)
{
20407d18:	7179                	addi	sp,sp,-48
20407d1a:	d606                	sw	ra,44(sp)
20407d1c:	d422                	sw	s0,40(sp)
20407d1e:	1800                	addi	s0,sp,48
20407d20:	fca42e23          	sw	a0,-36(s0)
20407d24:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:52
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407d28:	fdc42503          	lw	a0,-36(s0)
20407d2c:	35b9                	jal	20407b7a <__metal_driver_sifive_uart0_control_base>
20407d2e:	87aa                	mv	a5,a0
20407d30:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54

    while (!__metal_driver_sifive_uart0_txready(uart)) {
20407d34:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54 (discriminator 1)
20407d36:	fdc42503          	lw	a0,-36(s0)
20407d3a:	3775                	jal	20407ce6 <__metal_driver_sifive_uart0_txready>
20407d3c:	87aa                	mv	a5,a0
20407d3e:	dfe5                	beqz	a5,20407d36 <__metal_driver_sifive_uart0_putc+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:57
		/* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20407d40:	fec42783          	lw	a5,-20(s0)
20407d44:	fd842703          	lw	a4,-40(s0)
20407d48:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:58
    return 0;
20407d4a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:59
}
20407d4c:	853e                	mv	a0,a5
20407d4e:	50b2                	lw	ra,44(sp)
20407d50:	5422                	lw	s0,40(sp)
20407d52:	6145                	addi	sp,sp,48
20407d54:	8082                	ret

20407d56 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:63


int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c)
{
20407d56:	7179                	addi	sp,sp,-48
20407d58:	d606                	sw	ra,44(sp)
20407d5a:	d422                	sw	s0,40(sp)
20407d5c:	1800                	addi	s0,sp,48
20407d5e:	fca42e23          	sw	a0,-36(s0)
20407d62:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:65
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407d66:	fdc42503          	lw	a0,-36(s0)
20407d6a:	3d01                	jal	20407b7a <__metal_driver_sifive_uart0_control_base>
20407d6c:	87aa                	mv	a5,a0
20407d6e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:67
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);;
20407d72:	fec42783          	lw	a5,-20(s0)
20407d76:	0791                	addi	a5,a5,4
20407d78:	439c                	lw	a5,0(a5)
20407d7a:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:68
    if( ch & UART_RXEMPTY ){
20407d7e:	fe842783          	lw	a5,-24(s0)
20407d82:	0007d763          	bgez	a5,20407d90 <__metal_driver_sifive_uart0_getc+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:69
      *c = -1; /* aka: EOF in most of the world */
20407d86:	fd842783          	lw	a5,-40(s0)
20407d8a:	577d                	li	a4,-1
20407d8c:	c398                	sw	a4,0(a5)
20407d8e:	a801                	j	20407d9e <__metal_driver_sifive_uart0_getc+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:71
    } else {
      *c = ch & 0x0ff;
20407d90:	fe842783          	lw	a5,-24(s0)
20407d94:	0ff7f713          	andi	a4,a5,255
20407d98:	fd842783          	lw	a5,-40(s0)
20407d9c:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:73
    }
    return 0;
20407d9e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:74
}
20407da0:	853e                	mv	a0,a5
20407da2:	50b2                	lw	ra,44(sp)
20407da4:	5422                	lw	s0,40(sp)
20407da6:	6145                	addi	sp,sp,48
20407da8:	8082                	ret

20407daa <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:78


int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart)
{
20407daa:	7179                	addi	sp,sp,-48
20407dac:	d622                	sw	s0,44(sp)
20407dae:	1800                	addi	s0,sp,48
20407db0:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:79
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20407db4:	fdc42783          	lw	a5,-36(s0)
20407db8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:80
    return uart->baud_rate;
20407dbc:	fec42783          	lw	a5,-20(s0)
20407dc0:	43dc                	lw	a5,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:81
}
20407dc2:	853e                	mv	a0,a5
20407dc4:	5432                	lw	s0,44(sp)
20407dc6:	6145                	addi	sp,sp,48
20407dc8:	8082                	ret

20407dca <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:84

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart, int baud_rate)
{
20407dca:	7179                	addi	sp,sp,-48
20407dcc:	d606                	sw	ra,44(sp)
20407dce:	d422                	sw	s0,40(sp)
20407dd0:	1800                	addi	s0,sp,48
20407dd2:	fca42e23          	sw	a0,-36(s0)
20407dd6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:85
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20407dda:	fdc42783          	lw	a5,-36(s0)
20407dde:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:86
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20407de2:	fdc42503          	lw	a0,-36(s0)
20407de6:	d95ff0ef          	jal	ra,20407b7a <__metal_driver_sifive_uart0_control_base>
20407dea:	87aa                	mv	a5,a0
20407dec:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:87
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407df0:	fdc42503          	lw	a0,-36(s0)
20407df4:	3519                	jal	20407bfa <__metal_driver_sifive_uart0_clock>
20407df6:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:89

    uart->baud_rate = baud_rate;
20407dfa:	fd842703          	lw	a4,-40(s0)
20407dfe:	fec42783          	lw	a5,-20(s0)
20407e02:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:91

    if (clock != NULL) {
20407e04:	fe442783          	lw	a5,-28(s0)
20407e08:	cbb1                	beqz	a5,20407e5c <__metal_driver_sifive_uart0_set_baud_rate+0x92>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:92
        long clock_rate = clock->vtable->get_rate_hz(clock);
20407e0a:	fe442783          	lw	a5,-28(s0)
20407e0e:	439c                	lw	a5,0(a5)
20407e10:	439c                	lw	a5,0(a5)
20407e12:	fe442503          	lw	a0,-28(s0)
20407e16:	9782                	jalr	a5
20407e18:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:93
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20407e1c:	fe042703          	lw	a4,-32(s0)
20407e20:	fd842783          	lw	a5,-40(s0)
20407e24:	02f747b3          	div	a5,a4,a5
20407e28:	fff78713          	addi	a4,a5,-1
20407e2c:	fe842783          	lw	a5,-24(s0)
20407e30:	07e1                	addi	a5,a5,24
20407e32:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:94
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20407e34:	fe842783          	lw	a5,-24(s0)
20407e38:	07a1                	addi	a5,a5,8
20407e3a:	439c                	lw	a5,0(a5)
20407e3c:	fe842703          	lw	a4,-24(s0)
20407e40:	0721                	addi	a4,a4,8
20407e42:	0017e793          	ori	a5,a5,1
20407e46:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:95
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20407e48:	fe842783          	lw	a5,-24(s0)
20407e4c:	07b1                	addi	a5,a5,12
20407e4e:	439c                	lw	a5,0(a5)
20407e50:	fe842703          	lw	a4,-24(s0)
20407e54:	0731                	addi	a4,a4,12
20407e56:	0017e793          	ori	a5,a5,1
20407e5a:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:97
    }
    return 0;
20407e5c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:98
}
20407e5e:	853e                	mv	a0,a5
20407e60:	50b2                	lw	ra,44(sp)
20407e62:	5422                	lw	s0,40(sp)
20407e64:	6145                	addi	sp,sp,48
20407e66:	8082                	ret

20407e68 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:101

static void pre_rate_change_callback_func(void *priv)
{
20407e68:	7139                	addi	sp,sp,-64
20407e6a:	de06                	sw	ra,60(sp)
20407e6c:	dc22                	sw	s0,56(sp)
20407e6e:	0080                	addi	s0,sp,64
20407e70:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:102
    struct __metal_driver_sifive_uart0 *uart = priv;
20407e74:	fcc42783          	lw	a5,-52(s0)
20407e78:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:103
    long control_base = __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20407e7c:	fcc42503          	lw	a0,-52(s0)
20407e80:	cfbff0ef          	jal	ra,20407b7a <__metal_driver_sifive_uart0_control_base>
20407e84:	87aa                	mv	a5,a0
20407e86:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:104
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20407e8a:	fcc42503          	lw	a0,-52(s0)
20407e8e:	d6dff0ef          	jal	ra,20407bfa <__metal_driver_sifive_uart0_clock>
20407e92:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:109

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20407e96:	fe842783          	lw	a5,-24(s0)
20407e9a:	07a1                	addi	a5,a5,8
20407e9c:	4398                	lw	a4,0(a5)
20407e9e:	fe842783          	lw	a5,-24(s0)
20407ea2:	07a1                	addi	a5,a5,8
20407ea4:	86be                	mv	a3,a5
20407ea6:	fff907b7          	lui	a5,0xfff90
20407eaa:	17fd                	addi	a5,a5,-1
20407eac:	8ff9                	and	a5,a5,a4
20407eae:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20407eb0:	fe842783          	lw	a5,-24(s0)
20407eb4:	07a1                	addi	a5,a5,8
20407eb6:	4398                	lw	a4,0(a5)
20407eb8:	fe842783          	lw	a5,-24(s0)
20407ebc:	07a1                	addi	a5,a5,8
20407ebe:	86be                	mv	a3,a5
20407ec0:	67c1                	lui	a5,0x10
20407ec2:	8fd9                	or	a5,a5,a4
20407ec4:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112

    while((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0) ;
20407ec6:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112 (discriminator 1)
20407ec8:	fe842783          	lw	a5,-24(s0)
20407ecc:	07d1                	addi	a5,a5,20
20407ece:	439c                	lw	a5,0(a5)
20407ed0:	8b85                	andi	a5,a5,1
20407ed2:	dbfd                	beqz	a5,20407ec8 <pre_rate_change_callback_func+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118

    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol = (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20407ed4:	fe842783          	lw	a5,-24(s0)
20407ed8:	07a1                	addi	a5,a5,8
20407eda:	439c                	lw	a5,0(a5)
20407edc:	8b89                	andi	a5,a5,2
20407ede:	c399                	beqz	a5,20407ee4 <pre_rate_change_callback_func+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 1)
20407ee0:	47a5                	li	a5,9
20407ee2:	a011                	j	20407ee6 <pre_rate_change_callback_func+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 2)
20407ee4:	47a9                	li	a5,10
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 4)
20407ee6:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:119 (discriminator 4)
    long clk_freq = clock->vtable->get_rate_hz(clock);
20407eea:	fe442783          	lw	a5,-28(s0)
20407eee:	439c                	lw	a5,0(a5)
20407ef0:	439c                	lw	a5,0(a5)
20407ef2:	fe442503          	lw	a0,-28(s0)
20407ef6:	9782                	jalr	a5
20407ef8:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:120 (discriminator 4)
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20407efc:	fe042703          	lw	a4,-32(s0)
20407f00:	fdc42783          	lw	a5,-36(s0)
20407f04:	02f707b3          	mul	a5,a4,a5
20407f08:	873e                	mv	a4,a5
20407f0a:	fec42783          	lw	a5,-20(s0)
20407f0e:	43dc                	lw	a5,4(a5)
20407f10:	02f757b3          	divu	a5,a4,a5
20407f14:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 4)

    for(volatile long x = 0; x < cycles_to_wait; x++)
20407f18:	fc042a23          	sw	zero,-44(s0)
20407f1c:	a039                	j	20407f2a <pre_rate_change_callback_func+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:123 (discriminator 3)
        __asm__("nop");
20407f1e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 3)
    for(volatile long x = 0; x < cycles_to_wait; x++)
20407f20:	fd442783          	lw	a5,-44(s0)
20407f24:	0785                	addi	a5,a5,1
20407f26:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 1)
20407f2a:	fd442783          	lw	a5,-44(s0)
20407f2e:	fd842703          	lw	a4,-40(s0)
20407f32:	fee7c6e3          	blt	a5,a4,20407f1e <pre_rate_change_callback_func+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:124
}
20407f36:	0001                	nop
20407f38:	50f2                	lw	ra,60(sp)
20407f3a:	5462                	lw	s0,56(sp)
20407f3c:	6121                	addi	sp,sp,64
20407f3e:	8082                	ret

20407f40 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:127

static void post_rate_change_callback_func(void *priv)
{
20407f40:	7179                	addi	sp,sp,-48
20407f42:	d606                	sw	ra,44(sp)
20407f44:	d422                	sw	s0,40(sp)
20407f46:	1800                	addi	s0,sp,48
20407f48:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:128
    struct __metal_driver_sifive_uart0 *uart = priv;
20407f4c:	fdc42783          	lw	a5,-36(s0)
20407f50:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:129
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20407f54:	fec42703          	lw	a4,-20(s0)
20407f58:	fec42783          	lw	a5,-20(s0)
20407f5c:	43dc                	lw	a5,4(a5)
20407f5e:	85be                	mv	a1,a5
20407f60:	853a                	mv	a0,a4
20407f62:	d2ffc0ef          	jal	ra,20404c90 <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:130
}
20407f66:	0001                	nop
20407f68:	50b2                	lw	ra,44(sp)
20407f6a:	5422                	lw	s0,40(sp)
20407f6c:	6145                	addi	sp,sp,48
20407f6e:	8082                	ret

20407f70 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:133

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate)
{
20407f70:	7139                	addi	sp,sp,-64
20407f72:	de06                	sw	ra,60(sp)
20407f74:	dc22                	sw	s0,56(sp)
20407f76:	0080                	addi	s0,sp,64
20407f78:	fca42623          	sw	a0,-52(s0)
20407f7c:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:134
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20407f80:	fcc42783          	lw	a5,-52(s0)
20407f84:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:135
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407f88:	fcc42503          	lw	a0,-52(s0)
20407f8c:	c6fff0ef          	jal	ra,20407bfa <__metal_driver_sifive_uart0_clock>
20407f90:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:136
    struct __metal_driver_sifive_gpio0 *pinmux = __metal_driver_sifive_uart0_pinmux(guart);
20407f94:	fcc42503          	lw	a0,-52(s0)
20407f98:	c91ff0ef          	jal	ra,20407c28 <__metal_driver_sifive_uart0_pinmux>
20407f9c:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:138

    if(clock != NULL) {
20407fa0:	fe842783          	lw	a5,-24(s0)
20407fa4:	c7b9                	beqz	a5,20407ff2 <__metal_driver_sifive_uart0_init+0x82>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:139
        uart->pre_rate_change_callback.callback = &pre_rate_change_callback_func;
20407fa6:	fec42783          	lw	a5,-20(s0)
20407faa:	20408737          	lui	a4,0x20408
20407fae:	e6870713          	addi	a4,a4,-408 # 20407e68 <pre_rate_change_callback_func>
20407fb2:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:140
        uart->pre_rate_change_callback.priv = guart;
20407fb4:	fec42783          	lw	a5,-20(s0)
20407fb8:	fcc42703          	lw	a4,-52(s0)
20407fbc:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:141
        metal_clock_register_pre_rate_change_callback(clock, &(uart->pre_rate_change_callback));
20407fbe:	fec42783          	lw	a5,-20(s0)
20407fc2:	07a1                	addi	a5,a5,8
20407fc4:	85be                	mv	a1,a5
20407fc6:	fe842503          	lw	a0,-24(s0)
20407fca:	20f1                	jal	20408096 <metal_clock_register_pre_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:143

        uart->post_rate_change_callback.callback = &post_rate_change_callback_func;
20407fcc:	fec42783          	lw	a5,-20(s0)
20407fd0:	20408737          	lui	a4,0x20408
20407fd4:	f4070713          	addi	a4,a4,-192 # 20407f40 <post_rate_change_callback_func>
20407fd8:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:144
        uart->post_rate_change_callback.priv = guart;
20407fda:	fec42783          	lw	a5,-20(s0)
20407fde:	fcc42703          	lw	a4,-52(s0)
20407fe2:	cf98                	sw	a4,24(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:145
        metal_clock_register_post_rate_change_callback(clock, &(uart->post_rate_change_callback));
20407fe4:	fec42783          	lw	a5,-20(s0)
20407fe8:	07d1                	addi	a5,a5,20
20407fea:	85be                	mv	a1,a5
20407fec:	fe842503          	lw	a0,-24(s0)
20407ff0:	28d9                	jal	204080c6 <metal_clock_register_post_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:148
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20407ff2:	fec42783          	lw	a5,-20(s0)
20407ff6:	fc842583          	lw	a1,-56(s0)
20407ffa:	853e                	mv	a0,a5
20407ffc:	c95fc0ef          	jal	ra,20404c90 <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:150

    if (pinmux != NULL) {
20408000:	fe442783          	lw	a5,-28(s0)
20408004:	cb95                	beqz	a5,20408038 <__metal_driver_sifive_uart0_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:151
        long pinmux_output_selector = __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20408006:	fcc42503          	lw	a0,-52(s0)
2040800a:	c49ff0ef          	jal	ra,20407c52 <__metal_driver_sifive_uart0_pinmux_output_selector>
2040800e:	87aa                	mv	a5,a0
20408010:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:152
        long pinmux_source_selector = __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20408014:	fcc42503          	lw	a0,-52(s0)
20408018:	c65ff0ef          	jal	ra,20407c7c <__metal_driver_sifive_uart0_pinmux_source_selector>
2040801c:	87aa                	mv	a5,a0
2040801e:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:153
        pinmux->gpio.vtable->enable_io(
20408022:	fe442783          	lw	a5,-28(s0)
20408026:	439c                	lw	a5,0(a5)
20408028:	53dc                	lw	a5,36(a5)
2040802a:	fdc42603          	lw	a2,-36(s0)
2040802e:	fe042583          	lw	a1,-32(s0)
20408032:	fe442503          	lw	a0,-28(s0)
20408036:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:159
            (struct metal_gpio *) pinmux,
            pinmux_output_selector,
            pinmux_source_selector
        );
    }
}
20408038:	0001                	nop
2040803a:	50f2                	lw	ra,60(sp)
2040803c:	5462                	lw	s0,56(sp)
2040803e:	6121                	addi	sp,sp,64
20408040:	8082                	ret

20408042 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:59
}

/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *_metal_clock_append_to_callbacks(metal_clock_callback *list, metal_clock_callback *const cb) {
20408042:	7179                	addi	sp,sp,-48
20408044:	d622                	sw	s0,44(sp)
20408046:	1800                	addi	s0,sp,48
20408048:	fca42e23          	sw	a0,-36(s0)
2040804c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:60
    cb->_next = NULL;
20408050:	fd842783          	lw	a5,-40(s0)
20408054:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:62

    if (!list) {
20408058:	fdc42783          	lw	a5,-36(s0)
2040805c:	e781                	bnez	a5,20408064 <_metal_clock_append_to_callbacks+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:63
        return cb;
2040805e:	fd842783          	lw	a5,-40(s0)
20408062:	a035                	j	2040808e <_metal_clock_append_to_callbacks+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:66
    }

    metal_clock_callback *current = list;
20408064:	fdc42783          	lw	a5,-36(s0)
20408068:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68

    while ((current->_next) != NULL) {
2040806c:	a031                	j	20408078 <_metal_clock_append_to_callbacks+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:69
        current = current->_next;
2040806e:	fec42783          	lw	a5,-20(s0)
20408072:	479c                	lw	a5,8(a5)
20408074:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68
    while ((current->_next) != NULL) {
20408078:	fec42783          	lw	a5,-20(s0)
2040807c:	479c                	lw	a5,8(a5)
2040807e:	fbe5                	bnez	a5,2040806e <_metal_clock_append_to_callbacks+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:72
    }

    current->_next = cb;
20408080:	fec42783          	lw	a5,-20(s0)
20408084:	fd842703          	lw	a4,-40(s0)
20408088:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:74

    return list;
2040808a:	fdc42783          	lw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:75
}
2040808e:	853e                	mv	a0,a5
20408090:	5432                	lw	s0,44(sp)
20408092:	6145                	addi	sp,sp,48
20408094:	8082                	ret

20408096 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:139
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_pre_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
20408096:	1101                	addi	sp,sp,-32
20408098:	ce06                	sw	ra,28(sp)
2040809a:	cc22                	sw	s0,24(sp)
2040809c:	1000                	addi	s0,sp,32
2040809e:	fea42623          	sw	a0,-20(s0)
204080a2:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:140
    clk->_pre_rate_change_callback = _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
204080a6:	fec42783          	lw	a5,-20(s0)
204080aa:	43dc                	lw	a5,4(a5)
204080ac:	fe842583          	lw	a1,-24(s0)
204080b0:	853e                	mv	a0,a5
204080b2:	3f41                	jal	20408042 <_metal_clock_append_to_callbacks>
204080b4:	872a                	mv	a4,a0
204080b6:	fec42783          	lw	a5,-20(s0)
204080ba:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:141
}
204080bc:	0001                	nop
204080be:	40f2                	lw	ra,28(sp)
204080c0:	4462                	lw	s0,24(sp)
204080c2:	6105                	addi	sp,sp,32
204080c4:	8082                	ret

204080c6 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:150
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_post_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
204080c6:	1101                	addi	sp,sp,-32
204080c8:	ce06                	sw	ra,28(sp)
204080ca:	cc22                	sw	s0,24(sp)
204080cc:	1000                	addi	s0,sp,32
204080ce:	fea42623          	sw	a0,-20(s0)
204080d2:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:151
    clk->_post_rate_change_callback = _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
204080d6:	fec42783          	lw	a5,-20(s0)
204080da:	479c                	lw	a5,8(a5)
204080dc:	fe842583          	lw	a1,-24(s0)
204080e0:	853e                	mv	a0,a5
204080e2:	3785                	jal	20408042 <_metal_clock_append_to_callbacks>
204080e4:	872a                	mv	a4,a0
204080e6:	fec42783          	lw	a5,-20(s0)
204080ea:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:152
}
204080ec:	0001                	nop
204080ee:	40f2                	lw	ra,28(sp)
204080f0:	4462                	lw	s0,24(sp)
204080f2:	6105                	addi	sp,sp,32
204080f4:	8082                	ret

204080f6 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/cpu.h:208
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt* metal_cpu_interrupt_controller(struct metal_cpu *cpu)
{ return cpu->vtable->controller_interrupt(cpu); }
204080f6:	1101                	addi	sp,sp,-32
204080f8:	ce06                	sw	ra,28(sp)
204080fa:	cc22                	sw	s0,24(sp)
204080fc:	1000                	addi	s0,sp,32
204080fe:	fea42623          	sw	a0,-20(s0)
20408102:	fec42783          	lw	a5,-20(s0)
20408106:	439c                	lw	a5,0(a5)
20408108:	57dc                	lw	a5,44(a5)
2040810a:	fec42503          	lw	a0,-20(s0)
2040810e:	9782                	jalr	a5
20408110:	87aa                	mv	a5,a0
20408112:	853e                	mv	a0,a5
20408114:	40f2                	lw	ra,28(sp)
20408116:	4462                	lw	s0,24(sp)
20408118:	6105                	addi	sp,sp,32
2040811a:	8082                	ret

2040811c <metal_cpu_get>:
metal_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:8

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu* metal_cpu_get(unsigned int hartid)
{
2040811c:	1101                	addi	sp,sp,-32
2040811e:	ce22                	sw	s0,28(sp)
20408120:	1000                	addi	s0,sp,32
20408122:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:9
    if (hartid < __METAL_DT_MAX_HARTS) {
20408126:	fec42783          	lw	a5,-20(s0)
2040812a:	eb99                	bnez	a5,20408140 <metal_cpu_get+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:10
        return (struct metal_cpu *)__metal_cpu_table[hartid];
2040812c:	800037b7          	lui	a5,0x80003
20408130:	fec42703          	lw	a4,-20(s0)
20408134:	070a                	slli	a4,a4,0x2
20408136:	e7878793          	addi	a5,a5,-392 # 80002e78 <metal_segment_heap_target_end+0xfffff17c>
2040813a:	97ba                	add	a5,a5,a4
2040813c:	439c                	lw	a5,0(a5)
2040813e:	a011                	j	20408142 <metal_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:12
    }   
    return NULL;
20408140:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:13
}
20408142:	853e                	mv	a0,a5
20408144:	4472                	lw	s0,28(sp)
20408146:	6105                	addi	sp,sp,32
20408148:	8082                	ret

2040814a <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:16

int metal_cpu_get_current_hartid()
{
2040814a:	1101                	addi	sp,sp,-32
2040814c:	ce22                	sw	s0,28(sp)
2040814e:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:19
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r" (mhartid));
20408150:	f14027f3          	csrr	a5,mhartid
20408154:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:20
    return mhartid;
20408158:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:22
#endif
}
2040815c:	853e                	mv	a0,a5
2040815e:	4472                	lw	s0,28(sp)
20408160:	6105                	addi	sp,sp,32
20408162:	8082                	ret

20408164 <metal_shutdown>:
metal_shutdown():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message("There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code)
{
20408164:	1101                	addi	sp,sp,-32
20408166:	ce22                	sw	s0,28(sp)
20408168:	1000                	addi	s0,sp,32
2040816a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
      __asm__ volatile ("nop");
2040816e:	0001                	nop
20408170:	bffd                	j	2040816e <metal_shutdown+0xa>
	...

20408180 <__metal_vector_table>:
IRQ_0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20408180:	c74fd06f          	j	204055f4 <metal_interrupt_vector_handler>

20408184 <IRQ_1>:
IRQ_1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20408184:	c70fd06f          	j	204055f4 <metal_interrupt_vector_handler>

20408188 <IRQ_2>:
IRQ_2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20408188:	c6cfd06f          	j	204055f4 <metal_interrupt_vector_handler>

2040818c <IRQ_3>:
IRQ_3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040818c:	c96fd06f          	j	20405622 <metal_software_interrupt_vector_handler>

20408190 <IRQ_4>:
IRQ_4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20408190:	c64fd06f          	j	204055f4 <metal_interrupt_vector_handler>

20408194 <IRQ_5>:
IRQ_5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20408194:	c60fd06f          	j	204055f4 <metal_interrupt_vector_handler>

20408198 <IRQ_6>:
IRQ_6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20408198:	c5cfd06f          	j	204055f4 <metal_interrupt_vector_handler>

2040819c <IRQ_7>:
IRQ_7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040819c:	d80fd06f          	j	2040571c <metal_timer_interrupt_vector_handler>

204081a0 <IRQ_8>:
IRQ_8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
204081a0:	c54fd06f          	j	204055f4 <metal_interrupt_vector_handler>

204081a4 <IRQ_9>:
IRQ_9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
204081a4:	c50fd06f          	j	204055f4 <metal_interrupt_vector_handler>

204081a8 <IRQ_10>:
IRQ_10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
204081a8:	c4cfd06f          	j	204055f4 <metal_interrupt_vector_handler>

204081ac <IRQ_11>:
IRQ_11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
204081ac:	c48fd06f          	j	204055f4 <metal_interrupt_vector_handler>

204081b0 <IRQ_12>:
IRQ_12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
204081b0:	c44fd06f          	j	204055f4 <metal_interrupt_vector_handler>

204081b4 <IRQ_13>:
IRQ_13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
204081b4:	c40fd06f          	j	204055f4 <metal_interrupt_vector_handler>

204081b8 <IRQ_14>:
IRQ_14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
204081b8:	c3cfd06f          	j	204055f4 <metal_interrupt_vector_handler>

204081bc <IRQ_15>:
IRQ_15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
204081bc:	c38fd06f          	j	204055f4 <metal_interrupt_vector_handler>

204081c0 <IRQ_LC0>:
IRQ_LC0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
204081c0:	83bfd06f          	j	204059fa <metal_lc0_interrupt_vector_handler>

204081c4 <IRQ_LC1>:
IRQ_LC1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
204081c4:	8cdfd06f          	j	20405a90 <metal_lc1_interrupt_vector_handler>

204081c8 <IRQ_LC2>:
IRQ_LC2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
204081c8:	95ffd06f          	j	20405b26 <metal_lc2_interrupt_vector_handler>

204081cc <IRQ_LC3>:
IRQ_LC3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
204081cc:	9f1fd06f          	j	20405bbc <metal_lc3_interrupt_vector_handler>

204081d0 <IRQ_LC4>:
IRQ_LC4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
204081d0:	a83fd06f          	j	20405c52 <metal_lc4_interrupt_vector_handler>

204081d4 <IRQ_LC5>:
IRQ_LC5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
204081d4:	b15fd06f          	j	20405ce8 <metal_lc5_interrupt_vector_handler>

204081d8 <IRQ_LC6>:
IRQ_LC6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
204081d8:	ba7fd06f          	j	20405d7e <metal_lc6_interrupt_vector_handler>

204081dc <IRQ_LC7>:
IRQ_LC7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
204081dc:	c39fd06f          	j	20405e14 <metal_lc7_interrupt_vector_handler>

204081e0 <IRQ_LC8>:
IRQ_LC8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
204081e0:	ccbfd06f          	j	20405eaa <metal_lc8_interrupt_vector_handler>

204081e4 <IRQ_LC9>:
IRQ_LC9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
204081e4:	d5dfd06f          	j	20405f40 <metal_lc9_interrupt_vector_handler>

204081e8 <IRQ_LC10>:
IRQ_LC10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
204081e8:	deffd06f          	j	20405fd6 <metal_lc10_interrupt_vector_handler>

204081ec <IRQ_LC11>:
IRQ_LC11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
204081ec:	e81fd06f          	j	2040606c <metal_lc11_interrupt_vector_handler>

204081f0 <IRQ_LC12>:
IRQ_LC12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
204081f0:	f13fd06f          	j	20406102 <metal_lc12_interrupt_vector_handler>

204081f4 <IRQ_LC13>:
IRQ_LC13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
204081f4:	fa5fd06f          	j	20406198 <metal_lc13_interrupt_vector_handler>

204081f8 <IRQ_LC14>:
IRQ_LC14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
204081f8:	836fe06f          	j	2040622e <metal_lc14_interrupt_vector_handler>

204081fc <IRQ_LC15>:
IRQ_LC15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
204081fc:	8c8fe06f          	j	204062c4 <metal_lc15_interrupt_vector_handler>

20408200 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:120
{
20408200:	1101                	addi	sp,sp,-32
20408202:	ce22                	sw	s0,28(sp)
20408204:	1000                	addi	s0,sp,32
20408206:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:121
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040820a:	fec42703          	lw	a4,-20(s0)
2040820e:	800027b7          	lui	a5,0x80002
20408212:	78c78793          	addi	a5,a5,1932 # 8000278c <metal_segment_heap_target_end+0xffffea90>
20408216:	00f71763          	bne	a4,a5,20408224 <__metal_driver_fixed_clock_rate+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:122
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040821a:	03dfd7b7          	lui	a5,0x3dfd
2040821e:	24078793          	addi	a5,a5,576 # 3dfd240 <__heap_size+0x3dfca40>
20408222:	a011                	j	20408226 <__metal_driver_fixed_clock_rate+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:125
		return 0;
20408224:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:127
}
20408226:	853e                	mv	a0,a5
20408228:	4472                	lw	s0,28(sp)
2040822a:	6105                	addi	sp,sp,32
2040822c:	8082                	ret

2040822e <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
#include <metal/drivers/fixed-clock.h>
#include <stddef.h>
#include <metal/machine.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk)
{
2040822e:	1101                	addi	sp,sp,-32
20408230:	ce06                	sw	ra,28(sp)
20408232:	cc22                	sw	s0,24(sp)
20408234:	1000                	addi	s0,sp,32
20408236:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
    return __metal_driver_fixed_clock_rate(gclk);
2040823a:	fec42503          	lw	a0,-20(s0)
2040823e:	37c9                	jal	20408200 <__metal_driver_fixed_clock_rate>
20408240:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:15
}
20408242:	853e                	mv	a0,a5
20408244:	40f2                	lw	ra,28(sp)
20408246:	4462                	lw	s0,24(sp)
20408248:	6105                	addi	sp,sp,32
2040824a:	8082                	ret

2040824c <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk, long target_hz)
{
2040824c:	1101                	addi	sp,sp,-32
2040824e:	ce06                	sw	ra,28(sp)
20408250:	cc22                	sw	s0,24(sp)
20408252:	1000                	addi	s0,sp,32
20408254:	fea42623          	sw	a0,-20(s0)
20408258:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2040825c:	fec42503          	lw	a0,-20(s0)
20408260:	37f9                	jal	2040822e <__metal_driver_fixed_clock_get_rate_hz>
20408262:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:20
}
20408264:	853e                	mv	a0,a5
20408266:	40f2                	lw	ra,28(sp)
20408268:	4462                	lw	s0,24(sp)
2040826a:	6105                	addi	sp,sp,32
2040826c:	8082                	ret

2040826e <_exit>:
_exit():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:5
#include <metal/shutdown.h>

void
_exit(int exit_status)
{
2040826e:	1101                	addi	sp,sp,-32
20408270:	ce06                	sw	ra,28(sp)
20408272:	cc22                	sw	s0,24(sp)
20408274:	1000                	addi	s0,sp,32
20408276:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:6
  metal_shutdown(exit_status);
2040827a:	fec42503          	lw	a0,-20(s0)
2040827e:	35dd                	jal	20408164 <metal_shutdown>
