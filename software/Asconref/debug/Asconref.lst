
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/debug/Asconref.elf:     file format elf32-littleriscv
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/debug/Asconref.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x000093b4 memsz 0x000093b4 flags rwx
    LOAD off    0x0000a790 vaddr 0x80000790 paddr 0x80000790 align 2**12
         filesz 0x00000000 memsz 0x000016c4 flags rw-
    LOAD off    0x0000b000 vaddr 0x80000000 paddr 0x204093b8 align 2**12
         filesz 0x00000790 memsz 0x00000790 flags rw-
    LOAD off    0x0000b790 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x0000b790 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             00000194  20400000  20400000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text             00008882  20400200  20400200  00001200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata           00000928  20408a88  20408a88  00009a88  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array       00000004  204093b0  204093b0  0000a3b0  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .data             00000790  80000000  204093b8  0000b000  2**3  CONTENTS, ALLOC, LOAD, DATA
  5 .bss              00000ac4  80000790  80000790  0000a790  2**3  ALLOC
  6 .stack            00000400  80001254  80001254  0000a790  2**0  ALLOC
  7 .heap             00000800  80001654  80001654  0000a790  2**0  ALLOC
  8 .debug_info       00019aa8  00000000  00000000  0000b790  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev     00003e14  00000000  00000000  00025238  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges    00000ad0  00000000  00000000  00029050  2**3  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges     00001300  00000000  00000000  00029b20  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_line       0000f715  00000000  00000000  0002ae20  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_str        0000410a  00000000  00000000  0003a535  2**0  CONTENTS, READONLY, DEBUGGING
 14 .comment          00000028  00000000  00000000  0003e63f  2**0  CONTENTS, READONLY
 15 .riscv.attributes 0000002b  00000000  00000000  0003e667  2**0  CONTENTS, READONLY
 16 .debug_frame      00002a44  00000000  00000000  0003e694  2**2  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc        00006236  00000000  00000000  000410d8  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
20400200 l    d  .text	00000000 .text
20408a88 l    d  .rodata	00000000 .rodata
204093b0 l    d  .init_array	00000000 .init_array
80000000 l    d  .data	00000000 .data
80000790 l    d  .bss	00000000 .bss
80001254 l    d  .stack	00000000 .stack
80001654 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 libriscv__mmachine__freedom-e310-arty-xmem_a-entry.o
20400060 l       .init	00000000 early_trap_vector
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400136 l       .init	00000000 _skip_init
20409060 l       .rodata	00000000 argv
20409064 l       .rodata	00000000 envp
20409068 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 Asconref.c
80000010 l     O .data	00000010 k.2868
80000000 l     O .data	00000010 npub.2867
800011a4 l     O .bss	00000020 ad.2865
80000ca4 l     O .bss	00000500 m.2864
80000794 l     O .bss	00000510 c.2862
00000000 l    df *ABS*	00000000 aead.c
204002f0 l     F .text	000000c2 ROR
204003b2 l     F .text	000005ae ROUND
20400960 l     F .text	0000008e P12
204009ee l     F .text	00000052 P6
20400a40 l     F .text	000000a4 LOADBYTES
20400ae4 l     F .text	0000008e STOREBYTES
00000000 l    df *ABS*	00000000 printf.c
2040122e l     F .text	00000020 _out_null
2040124e l     F .text	00000032 _out_char
20401280 l     F .text	0000004e _strnlen_s
204012ce l     F .text	00000038 _is_digit
20401306 l     F .text	0000005e _atoi
20401364 l     F .text	00000108 _out_rev
2040146c l     F .text	0000025e _ntoa_format
204016ca l     F .text	00000104 _ntoa_long
204017ce l     F .text	0000012e _ntoa_long_long
204018fc l     F .text	000005d4 _ftoa
20401ed0 l     F .text	0000066e _etoa
20408e98 l     O .rodata	00000050 pow10.2193
2040253e l     F .text	00000b7c _vsnprintf
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 fixunsdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800011c4 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 tty.c
204053b2 l     F .text	00000022 metal_tty_init
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
2040545c l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20405486 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
204054ae l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
204054ea l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2040564a l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20405b82 l     F .text	00000024 __metal_driver_cpu_hartid
20405ba6 l     F .text	0000002a __metal_driver_cpu_timebase
20405bd0 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
00000000 l    df *ABS*	00000000 riscv_plic0.c
20407464 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2040748e l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
204074b6 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
204074de l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20407506 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20407a54 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20407a7a l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20407aa4 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
2040830e l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20408338 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20408366 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
2040838e l     F .text	0000002e __metal_driver_sifive_uart0_clock
204083bc l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
204083e6 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_output_selector
20408410 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20408602 l     F .text	000000d8 pre_rate_change_callback_func
204086da l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 libriscv__mmachine__freedom-e310-arty-xmem_a-vector.o
20408980 l       .text	00000000 IRQ_0
20408984 l       .text	00000000 IRQ_1
20408988 l       .text	00000000 IRQ_2
2040898c l       .text	00000000 IRQ_3
20408990 l       .text	00000000 IRQ_4
20408994 l       .text	00000000 IRQ_5
20408998 l       .text	00000000 IRQ_6
2040899c l       .text	00000000 IRQ_7
204089a0 l       .text	00000000 IRQ_8
204089a4 l       .text	00000000 IRQ_9
204089a8 l       .text	00000000 IRQ_10
204089ac l       .text	00000000 IRQ_11
204089b0 l       .text	00000000 IRQ_12
204089b4 l       .text	00000000 IRQ_13
204089b8 l       .text	00000000 IRQ_14
204089bc l       .text	00000000 IRQ_15
204089c0 l       .text	00000000 IRQ_LC0
204089c4 l       .text	00000000 IRQ_LC1
204089c8 l       .text	00000000 IRQ_LC2
204089cc l       .text	00000000 IRQ_LC3
204089d0 l       .text	00000000 IRQ_LC4
204089d4 l       .text	00000000 IRQ_LC5
204089d8 l       .text	00000000 IRQ_LC6
204089dc l       .text	00000000 IRQ_LC7
204089e0 l       .text	00000000 IRQ_LC8
204089e4 l       .text	00000000 IRQ_LC9
204089e8 l       .text	00000000 IRQ_LC10
204089ec l       .text	00000000 IRQ_LC11
204089f0 l       .text	00000000 IRQ_LC12
204089f4 l       .text	00000000 IRQ_LC13
204089f8 l       .text	00000000 IRQ_LC14
204089fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20408a00 l     F .text	0000002e __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
80000020 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204093b4 l       .init_array	00000000 __fini_array_end
204093b4 l       .init_array	00000000 __fini_array_start
204093b4 l       .init_array	00000000 __init_array_end
204093b0 l       .init_array	00000000 __preinit_array_end
204093b0 l       .init_array	00000000 __init_array_start
204093b0 l       .init_array	00000000 __preinit_array_start
20409390 g     O .rodata	00000020 __metal_driver_vtable_sifive_uart0
204063d2  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20401208 g     F .text	00000026 _putchar
20408562 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20405826 g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
20404328 g     F .text	0000006a .hidden __eqdf2
2040633c  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20406bc2 g     F .text	00000038 __metal_valid_interrupt_id
20406fea g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000f68 g       .data	00000000 __global_pointer$
204087dc g     F .text	00000054 _metal_clock_append_to_callbacks
20407556 g     F .text	00000038 __metal_plic0_complete_interrupt
20406e44 g     F .text	0000014e __metal_driver_riscv_cpu_controller_interrupt_register
204088b6 g     F .text	0000002e metal_cpu_get
80000748 g     O .data	00000020 __metal_dt_serial_10013000
20407ee8 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20409074 g     O .rodata	0000004c __metal_driver_vtable_riscv_clint0
80001254 g       .bss	00000000 metal_segment_bss_target_end
2040551a g     F .text	0000009a __metal_clint0_mtime_get
204073f8 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000000 g       *ABS*	00000000 __metal_chicken_bit
20407c98 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20404392 g     F .text	000000a4 .hidden __gtdf2
2040513a g     F .text	0000000c __errno
08000000 g       .init_array	00000000 metal_segment_itim_target_start
2040847a g     F .text	00000032 __metal_driver_sifive_uart0_txready
20400070 g     F .init	0000000e __metal_synchronize_harts
80000790 g       .bss	00000000 metal_segment_bss_target_start
204055b4 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20408138 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80001250 g     O .bss	00000004 errno
00000400 g       *ABS*	00000000 __stack_size
20408830 g     F .text	00000030 metal_clock_register_pre_rate_change_callback
204066c0  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204092c8 g     O .rodata	0000004c __metal_driver_vtable_riscv_plic0
20409288 g     O .rodata	00000040 __metal_driver_vtable_cpu
2040542e g     F .text	0000002e metal_uart_set_baud_rate
2040870a g     F .text	000000d2 __metal_driver_sifive_uart0_init
2040707e g     F .text	00000072 __metal_driver_cpu_mcycle_get
80001654 g       .heap	00000000 metal_segment_heap_target_start
8000077c g     O .data	00000004 __metal_dt_cpu_0
20404fcc g     F .text	0000006a .hidden __floatsidf
2040662a  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20404436 g     F .text	000000a4 .hidden __ltdf2
20406918  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20405d68 g     F .text	00000018 __metal_default_exception_handler
20405b4e g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
204075f2 g     F .text	00000062 __metal_plic0_set_priority
20407006 g     F .text	0000005c __metal_driver_riscv_cpu_controller_set_vector_mode
20404f70 g     F .text	0000005c .hidden __fixunsdfsi
20405bfa g     F .text	00000030 __metal_driver_cpu_get
2040923c g     O .rodata	0000004c __metal_driver_vtable_riscv_cpu_intc
20405c5c g     F .text	00000018 __metal_interrupt_global_disable
20406594  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20406756  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20407a0c g     F .text	00000048 __metal_driver_riscv_plic0_disable
20406cb6 g     F .text	0000004e __metal_exception_register
20407212 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20407d7a g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
20405e58 g     F .text	00000068 __metal_default_sw_handler
20403800 g     F .text	000005f2 .hidden __adddf3
20408860 g     F .text	00000030 metal_clock_register_post_rate_change_callback
2040843a g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
204034ae g     F .text	00000352 .hidden __umoddi3
20407e40 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
80000784 g     O .data	00000008 __metal_driver_vtable_fixed_clock
8000076c g     O .data	00000004 _global_impure_ptr
20405ec0  w    F .text	00000092 metal_timer_interrupt_vector_handler
204051aa g     F .text	0000006a __libc_init_array
20407dba g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
204067ec  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20403150 g     F .text	0000035e .hidden __udivdi3
20405036 g     F .text	00000050 .hidden __floatunsidf
20406f92 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20407d34 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20400174 g     F .init	00000002 _init
20405cbe g     F .text	0000001a __metal_interrupt_timer_disable
20407f32 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
204072d0 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20409354 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20407e80 g     F .text	00000068 __metal_driver_sifive_gpio0_enable_io
20405172 g     F .text	00000038 __libc_fini_array
204082c0 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
2040725a g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20404f0c g     F .text	00000064 .hidden __fixdfsi
80000000 g       .data	00000000 metal_segment_data_target_start
20405d10 g     F .text	0000002c __metal_interrupt_local_enable
20405b1a g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20405360 g     F .text	0000002c metal_tty_putc
20407714 g     F .text	00000018 __metal_plic0_default_handler
20403110 g     F .text	00000012 write
80000080 g     O .data	0000000c __metal_dt_clock_0
20404436 g     F .text	000000a4 .hidden __ledf2
00000800 g       *ABS*	00000000 __heap_size
20405cf4 g     F .text	0000001c __metal_interrupt_external_disable
20408458 g     F .text	00000022 __metal_driver_sifive_uart0_get_interrupt_id
20407062 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20406d04 g     F .text	00000140 __metal_driver_riscv_cpu_controller_interrupt_init
20405086 g     F .text	0000003c .hidden __clzsi2
204073b2 g     F .text	00000046 __metal_driver_cpu_exception_register
20405c74 g     F .text	00000018 __metal_interrupt_software_enable
20406210  w    F .text	00000096 metal_lc1_interrupt_vector_handler
80000790 g     O .bss	00000004 _global_atexit
20400c00 g     F .text	00000608 crypto_aead_encrypt
20406ada g     F .text	00000050 __metal_controller_interrupt_vector_mode
20405298 g     F .text	000000c8 __call_exitprocs
80001654 g       .stack	00000000 _sp
2040007e g     F .init	00000000 _start
20407392 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20407426 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20405cd8 g     F .text	0000001c __metal_interrupt_external_enable
20405214 g     F .text	00000084 __register_exitproc
204084ac g     F .text	00000040 __metal_driver_sifive_uart0_putc
204077be g     F .text	00000144 __metal_driver_riscv_plic0_init
204079c4 g     F .text	00000048 __metal_driver_riscv_plic0_enable
20407d08 g     F .text	0000002c __metal_driver_sifive_gpio0_output
204064fe  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20405c2a g     F .text	0000001a __metal_myhart_id
204082e0 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20405dc6  w    F .text	00000092 metal_software_interrupt_vector_handler
20406fbe g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20408542 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20405708 g     F .text	000000da __metal_driver_riscv_clint0_register
80000774 g     O .data	00000008 __metal_dt_clint_2000000
20403df2 g     F .text	00000536 .hidden __divdf3
204044da g     F .text	0000043c .hidden __muldf3
20407c58 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
20400176  w    F .init	00000000 secondary_main
20405d98  w    F .text	0000002e metal_interrupt_vector_handler
204075c6 g     F .text	0000002c __metal_plic0_get_threshold
20406bfa g     F .text	000000bc __metal_local_interrupt_enable
204059e4 g     F .text	00000136 __metal_driver_riscv_clint0_command_request
20406468  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20400200 g     F .text	000000f0 main
80000790 g       .data	00000000 metal_segment_data_target_end
2040726e g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20407332 g     F .text	00000060 __metal_driver_cpu_get_msip
204088fe g     F .text	0000000e metal_shutdown
08000000 g       .init_array	00000000 metal_segment_itim_target_end
20407444 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20407528 g     F .text	0000002e __metal_plic0_claim_interrupt
20406882  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040580a g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
204070f0 g     F .text	00000046 __metal_driver_cpu_timebase_get
20400000 g       .init	00000000 _enter
204088e4 g     F .text	0000001a metal_cpu_get_current_hartid
20408980 g       .text	00000000 __metal_vector_table
204093b8 g       *ABS*	00000000 metal_segment_itim_source_start
80000770  w    O .data	00000004 __metal_cpu_table
20404328 g     F .text	0000006a .hidden __nedf2
80000090 g     O .data	000003b8 __metal_dt_cpu_0_interrupt_controller
20400174 g     F .init	00000002 _fini
20408f60 g     O .rodata	00000100 .hidden __clz_tab
20405c44 g     F .text	00000018 __metal_interrupt_global_enable
20405130 g     F .text	0000000a atexit
2040538c g     F .text	00000026 metal_tty_putc_raw
20403122 g     F .text	0000002e _write_r
20405ca4 g     F .text	0000001a __metal_interrupt_timer_enable
204084ec g     F .text	00000056 __metal_driver_sifive_uart0_getc
2040592c g     F .text	000000b8 __metal_driver_riscv_clint0_disable
80000768 g     O .data	00000004 _impure_ptr
2040719c g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20400b72 g     F .text	0000008e printS
20408a2e g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
2040587a g     F .text	000000b2 __metal_driver_riscv_clint0_enable
204093b8 g       *ABS*	00000000 metal_segment_data_source_start
80001e54 g       .heap	00000000 metal_segment_heap_target_end
20406b2a g     F .text	00000098 __metal_controller_interrupt_vector
80000448 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20407dfa g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
204030ba g     F .text	00000056 printf_
20405f52 g     F .text	00000066 __metal_default_timer_handler
204050c2 g     F .text	0000006e _write
2040772c g     F .text	00000092 __metal_plic0_handler
204062a6  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20406a44  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20408890 g     F .text	00000026 metal_cpu_interrupt_controller
20405146 g     F .text	0000002c exit
20408a4c g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
80000780 g     O .data	00000004 __metal_dt_gpio_10012000
20405d80 g     F .text	00000018 __metal_default_interrupt_handler
20405400 g     F .text	0000002e metal_uart_putc
20407cde g     F .text	0000002a __metal_driver_sifive_gpio0_input
20406000 g     F .text	00000154 __metal_exception_handler
2040617a  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20408a6e g     F .text	00000014 _exit
20407136 g     F .text	00000066 __metal_driver_cpu_mtime_get
204057e2 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20404392 g     F .text	000000a4 .hidden __gedf2
204069ae  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20405680 g     F .text	00000088 __metal_driver_riscv_clint0_init
20404916 g     F .text	000005f6 .hidden __subdf3
2040722c g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20407688 g     F .text	0000008c __metal_plic0_enable
2040006e  w      .init	00000000 __register_frame_info
20407240 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20405d3c g     F .text	0000002c __metal_interrupt_local_disable
20405c8c g     F .text	00000018 __metal_interrupt_software_disable
20407654 g     F .text	00000034 __metal_plic0_get_priority
204053d4 g     F .text	0000002c metal_uart_init
2040758e g     F .text	00000038 __metal_plic0_set_threshold
00000000 g       *ABS*	00000000 __metal_boot_hart
20407902 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	f6818193          	addi	gp,gp,-152 # 80000f68 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:29
.option pop

    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400008:	00000297          	auipc	t0,0x0
2040000c:	05828293          	addi	t0,t0,88 # 20400060 <early_trap_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:30
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:32
    /* enable chicken bit if core is bullet series*/
    la t0, __metal_chicken_bit
20400014:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:33
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:34
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:43
     * C, so here we set up a C environment.  First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
20400020:	dfc00117          	auipc	sp,0xdfc00
20400024:	fe010113          	addi	sp,sp,-32 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:52
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    .weak __metal_before_start
    la ra, __metal_before_start
20400028:	dfc00097          	auipc	ra,0xdfc00
2040002c:	fd808093          	addi	ra,ra,-40 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:53
    beqz ra, 1f
20400030:	00008363          	beqz	ra,20400036 <_enter+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:54
    jalr ra
20400034:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:60
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400036:	f1402573          	csrr	a0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:61
    li a1, 0
2040003a:	4581                	li	a1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:62
    li a2, 0
2040003c:	4601                	li	a2,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:63
    call _start
2040003e:	2081                	jal	2040007e <_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:68

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400040:	dfc00097          	auipc	ra,0xdfc00
20400044:	fc008093          	addi	ra,ra,-64 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:69
    beqz ra, 1f
20400048:	00008363          	beqz	ra,2040004e <_enter+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:70
    jalr ra
2040004c:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:75
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2040004e:	00000297          	auipc	t0,0x0
20400052:	00c28293          	addi	t0,t0,12 # 2040005a <_enter+0x5a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:76
     csrw mtvec, t0
20400056:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:78
1:
     lw t1, 0(x0)
2040005a:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:79
     j 1b
2040005e:	bff5                	j	2040005a <_enter+0x5a>

20400060 <early_trap_vector>:
early_trap_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:89
 * you end up here then there's a bug in the early boot code somewhere. */
.section .text.metal.init.trapvec
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400060:	342022f3          	csrr	t0,mcause
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:90
    csrr t1, mepc
20400064:	34102373          	csrr	t1,mepc
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:91
    csrr t2, mtval
20400068:	343023f3          	csrr	t2,mtval
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:92
    j early_trap_vector
2040006c:	bfd5                	j	20400060 <early_trap_vector>

2040006e <__register_frame_info>:
__register_frame_info():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:105
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2040006e:	8082                	ret

20400070 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init")))
void __metal_synchronize_harts() {
20400070:	1141                	addi	sp,sp,-16
20400072:	c622                	sw	s0,12(sp)
20400074:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:61
        /* Wait for hart 0 to clear the MSIP bit */
        while (METAL_MSIP(msip_base, hart) == 1) ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400076:	0001                	nop
20400078:	4432                	lw	s0,12(sp)
2040007a:	0141                	addi	sp,sp,16
2040007c:	8082                	ret

2040007e <_start>:
_start():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
2040007e:	8406                	mv	s0,ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400080:	5fc01197          	auipc	gp,0x5fc01
20400084:	ee818193          	addi	gp,gp,-280 # 80000f68 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:51

  /* The METAL is designed for a bare-metal environment and therefor is expected
   * to define its own stack pointer.  We also align the stack pointer here
   * because the only RISC-V ABI that's currently defined mandates 16-byte
   * stack alignment. */
  la sp, _sp
20400088:	6ec18113          	addi	sp,gp,1772 # 80001654 <_sp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:54

  /* Increment by hartid number of stack sizes */
  li t0, 0
2040008c:	4281                	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:55
  la t1, __stack_size
2040008e:	40000313          	li	t1,1024
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:57
1:
  beq t0, a0, 1f
20400092:	00a28563          	beq	t0,a0,2040009c <_start+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:58
  add sp, sp, t1
20400096:	911a                	add	sp,sp,t1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:59
  addi t0, t0, 1
20400098:	0285                	addi	t0,t0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:60
  j 1b
2040009a:	bfe5                	j	20400092 <_start+0x14>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:62
1:
  andi sp, sp, -16
2040009c:	ff017113          	andi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:65

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
204000a0:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:66
  bne a0, t0, _skip_init
204000a4:	08551963          	bne	a0,t0,20400136 <_skip_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:75
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
204000a8:	00009297          	auipc	t0,0x9
204000ac:	31028293          	addi	t0,t0,784 # 204093b8 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:76
  la t1, metal_segment_data_target_start
204000b0:	5fc00317          	auipc	t1,0x5fc00
204000b4:	f5030313          	addi	t1,t1,-176 # 80000000 <metal_segment_data_target_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:77
  la t2, metal_segment_data_target_end
204000b8:	82818393          	addi	t2,gp,-2008 # 80000790 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:79

  beq t0, t1, 2f
204000bc:	00628c63          	beq	t0,t1,204000d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:80
  bge t1, t2, 2f
204000c0:	00735a63          	bge	t1,t2,204000d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:84

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204000c4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  addi t0, t0, 4
204000c8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  sw   a0, 0(t1)
204000ca:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:87
  addi t1, t1, 4
204000ce:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:88
  blt  t1, t2, 1b
204000d0:	fe734ae3          	blt	t1,t2,204000c4 <_start+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:99
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
204000d4:	00009297          	auipc	t0,0x9
204000d8:	2e428293          	addi	t0,t0,740 # 204093b8 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:100
  la t1, metal_segment_itim_target_start
204000dc:	e7c00317          	auipc	t1,0xe7c00
204000e0:	f2430313          	addi	t1,t1,-220 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:101
  la t2, metal_segment_itim_target_end
204000e4:	e7c00397          	auipc	t2,0xe7c00
204000e8:	f1c38393          	addi	t2,t2,-228 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:103

  beq t0, t1, 2f
204000ec:	00628c63          	beq	t0,t1,20400104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:104
  bge t1, t2, 2f
204000f0:	00735a63          	bge	t1,t2,20400104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:108

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204000f4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:109
  addi t0, t0, 4
204000f8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:110
  sw   a0, 0(t1)
204000fa:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:111
  addi t1, t1, 4
204000fe:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:112
  blt  t1, t2, 1b
20400100:	fe734ae3          	blt	t1,t2,204000f4 <_start+0x76>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:124
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
20400104:	0000100f          	fence.i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:127

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20400108:	5fc00317          	auipc	t1,0x5fc00
2040010c:	68830313          	addi	t1,t1,1672 # 80000790 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:128
  la t2, metal_segment_bss_target_end
20400110:	2ec18393          	addi	t2,gp,748 # 80001254 <metal_segment_bss_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:130

  bge t1, t2, 2f
20400114:	00735763          	bge	t1,t2,20400122 <_start+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:134

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20400118:	00032023          	sw	zero,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:135
  addi t1, t1, 4
2040011c:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:136
  blt  t1, t2, 1b
2040011e:	fe734de3          	blt	t1,t2,20400118 <_start+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:147
2:

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400122:	c211                	beqz	a2,20400126 <_start+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:148
  jalr a2
20400124:	9602                	jalr	a2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:152
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400126:	00005517          	auipc	a0,0x5
2040012a:	04c50513          	addi	a0,a0,76 # 20405172 <__libc_fini_array>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:153
  call atexit
2040012e:	002050ef          	jal	ra,20405130 <atexit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:154
  call __libc_init_array
20400132:	078050ef          	jal	ra,204051aa <__libc_init_array>

20400136 <_skip_init>:
_skip_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:160

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400136:	3f2d                	jal	20400070 <__metal_synchronize_harts>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:163

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  csrr a5, misa
20400138:	301027f3          	csrr	a5,misa
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:164
  li   a4, 0x10028
2040013c:	00010737          	lui	a4,0x10
20400140:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:165
  and  a5, a5, a4
20400144:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:166
  beqz a5, 1f
20400146:	cb89                	beqz	a5,20400158 <_skip_init+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  csrr a5, mstatus
20400148:	300027f3          	csrr	a5,mstatus
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:168
  lui  a4, 0x2
2040014c:	6709                	lui	a4,0x2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:169
  or   a5, a5, a4
2040014e:	8fd9                	or	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:170
  csrw mstatus, a5
20400150:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:171
  csrwi fcsr, 0
20400154:	00305073          	csrwi	fcsr,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:177
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20400158:	4505                	li	a0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  la a1, argv  /* argv = {"libgloss", NULL} */
2040015a:	00009597          	auipc	a1,0x9
2040015e:	f0658593          	addi	a1,a1,-250 # 20409060 <argv>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  la a2, envp  /* envp = {NULL} */
20400162:	00009617          	auipc	a2,0x9
20400166:	f0260613          	addi	a2,a2,-254 # 20409064 <envp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:180
  call secondary_main
2040016a:	2031                	jal	20400176 <secondary_main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:186

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2040016c:	7db040ef          	jal	ra,20405146 <exit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:191

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
20400170:	80a2                	mv	ra,s0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:192
  ret
20400172:	8082                	ret

20400174 <_fini>:
_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:204
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
20400174:	8082                	ret

20400176 <secondary_main>:
secondary_main():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:215
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
20400176:	1141                	addi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:217
#if __riscv_xlen == 32
  sw ra, 4(sp)
20400178:	c206                	sw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:221
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
2040017a:	f14022f3          	csrr	t0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  la t1, __metal_boot_hart
2040017e:	00000313          	li	t1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  beq t0, t1, 2f
20400182:	00628563          	beq	t0,t1,2040018c <secondary_main+0x16>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:225
1:
  wfi
20400186:	10500073          	wfi
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  j 1b
2040018a:	bff5                	j	20400186 <secondary_main+0x10>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:228
2:
  call main
2040018c:	2895                	jal	20400200 <main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:230
#if __riscv_xlen == 32
  lw ra, 4(sp)
2040018e:	4092                	lw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:234
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
20400190:	0141                	addi	sp,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  ret
20400192:	8082                	ret

Disassembly of section .text:

20400200 <main>:
main():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:9
#include "aead.h"
#include "printf.h"
//#include "stdio.h"
#include "word.h"
#define len 1280
int main () {
20400200:	7139                	addi	sp,sp,-64
20400202:	de06                	sw	ra,60(sp)
20400204:	dc22                	sw	s0,56(sp)
20400206:	0080                	addi	s0,sp,64
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:17
                        const unsigned char* m, unsigned long long mlen,
                        const unsigned char* ad, unsigned long long adlen,
                        const unsigned char* npub,
                        const unsigned char* k) */

   unsigned long long clen = len;
20400208:	50000793          	li	a5,1280
2040020c:	4801                	li	a6,0
2040020e:	fcf42823          	sw	a5,-48(s0)
20400212:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:24
   /*unsigned char m [16] = {0x00, 0x00, 0x00, 0x00,
                           0x00, 0x00, 0x00, 0x00,
                           0x00, 0x00, 0x00, 0x00,
                           0x00, 0x00, 0x00, 0x00
                           };*/
   unsigned  long long mlen = len;
20400216:	50000793          	li	a5,1280
2040021a:	4801                	li	a6,0
2040021c:	fef42023          	sw	a5,-32(s0)
20400220:	ff042223          	sw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:27
   static unsigned char m [len] = {0};
   static unsigned char ad[32] = {0};
   unsigned long long adlen = 0;
20400224:	4781                	li	a5,0
20400226:	4801                	li	a6,0
20400228:	fcf42c23          	sw	a5,-40(s0)
2040022c:	fd042e23          	sw	a6,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:37
   static unsigned char k [16] = {0xab, 0xcd, 0x00, 0x00,
                           0x00, 0x00, 0xdc, 0xba,
                            0x56, 0x78, 0x00, 0x00,
                           0x00, 0x00, 0x87, 0x65
   };
   printf("Holas\n");
20400230:	204097b7          	lui	a5,0x20409
20400234:	a8878513          	addi	a0,a5,-1400 # 20408a88 <_exit+0x1a>
20400238:	683020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:38
   crypto_aead_encrypt(c,&clen,m,mlen,ad, adlen,npub,k);
2040023c:	fd040593          	addi	a1,s0,-48
20400240:	800007b7          	lui	a5,0x80000
20400244:	01078793          	addi	a5,a5,16 # 80000010 <metal_segment_heap_target_end+0xffffe1bc>
20400248:	c23e                	sw	a5,4(sp)
2040024a:	800007b7          	lui	a5,0x80000
2040024e:	00078793          	mv	a5,a5
20400252:	c03e                	sw	a5,0(sp)
20400254:	fd842803          	lw	a6,-40(s0)
20400258:	fdc42883          	lw	a7,-36(s0)
2040025c:	23c18793          	addi	a5,gp,572 # 800011a4 <ad.2865>
20400260:	fe042683          	lw	a3,-32(s0)
20400264:	fe442703          	lw	a4,-28(s0)
20400268:	80001637          	lui	a2,0x80001
2040026c:	ca460613          	addi	a2,a2,-860 # 80000ca4 <metal_segment_heap_target_end+0xffffee50>
20400270:	80000537          	lui	a0,0x80000
20400274:	79450513          	addi	a0,a0,1940 # 80000794 <metal_segment_heap_target_end+0xffffe940>
20400278:	189000ef          	jal	ra,20400c00 <crypto_aead_encrypt>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:40
    //crypto_aead_decrypt(m,&mlen,npub,clen,ad,adlen,npub,k);
    printf("hola");
2040027c:	204097b7          	lui	a5,0x20409
20400280:	a9078513          	addi	a0,a5,-1392 # 20408a90 <_exit+0x22>
20400284:	637020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:41
    for(int i = 0; i < len+16; i ++){
20400288:	fe042623          	sw	zero,-20(s0)
2040028c:	a081                	j	204002cc <main+0xcc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:42
       if(i%8==0 ){
2040028e:	fec42783          	lw	a5,-20(s0)
20400292:	8b9d                	andi	a5,a5,7
20400294:	e799                	bnez	a5,204002a2 <main+0xa2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:43
            printf("\n");
20400296:	204097b7          	lui	a5,0x20409
2040029a:	a9878513          	addi	a0,a5,-1384 # 20408a98 <_exit+0x2a>
2040029e:	61d020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:45 (discriminator 2)
        }
        printf("%02x",c[i]);
204002a2:	800007b7          	lui	a5,0x80000
204002a6:	79478713          	addi	a4,a5,1940 # 80000794 <metal_segment_heap_target_end+0xffffe940>
204002aa:	fec42783          	lw	a5,-20(s0)
204002ae:	97ba                	add	a5,a5,a4
204002b0:	0007c783          	lbu	a5,0(a5)
204002b4:	85be                	mv	a1,a5
204002b6:	204097b7          	lui	a5,0x20409
204002ba:	a9c78513          	addi	a0,a5,-1380 # 20408a9c <_exit+0x2e>
204002be:	5fd020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:41 (discriminator 2)
    for(int i = 0; i < len+16; i ++){
204002c2:	fec42783          	lw	a5,-20(s0)
204002c6:	0785                	addi	a5,a5,1
204002c8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:41 (discriminator 1)
204002cc:	fec42703          	lw	a4,-20(s0)
204002d0:	50f00793          	li	a5,1295
204002d4:	fae7dde3          	bge	a5,a4,2040028e <main+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:48

    }
    printf("\n");
204002d8:	204097b7          	lui	a5,0x20409
204002dc:	a9878513          	addi	a0,a5,-1384 # 20408a98 <_exit+0x2a>
204002e0:	5db020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:50

    return 0;
204002e4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/Asconref.c:51
204002e6:	853e                	mv	a0,a5
204002e8:	50f2                	lw	ra,60(sp)
204002ea:	5462                	lw	s0,56(sp)
204002ec:	6121                	addi	sp,sp,64
204002ee:	8082                	ret

204002f0 <ROR>:
ROR():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:7
#define ROUND_H_

#include "ascon.h"
#include "constants.h"

static inline uint64_t ROR(uint64_t x, int n) {
204002f0:	1101                	addi	sp,sp,-32
204002f2:	ce22                	sw	s0,28(sp)
204002f4:	1000                	addi	s0,sp,32
204002f6:	fea42423          	sw	a0,-24(s0)
204002fa:	feb42623          	sw	a1,-20(s0)
204002fe:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:8
  return x >> n | x << (-n & 63);
20400302:	fe842783          	lw	a5,-24(s0)
20400306:	fec42803          	lw	a6,-20(s0)
2040030a:	fe442603          	lw	a2,-28(s0)
2040030e:	1601                	addi	a2,a2,-32
20400310:	00064663          	bltz	a2,2040031c <ROR+0x2c>
20400314:	00c85333          	srl	t1,a6,a2
20400318:	4381                	li	t2,0
2040031a:	a025                	j	20400342 <ROR+0x52>
2040031c:	00181593          	slli	a1,a6,0x1
20400320:	457d                	li	a0,31
20400322:	fe442603          	lw	a2,-28(s0)
20400326:	40c50633          	sub	a2,a0,a2
2040032a:	00c59633          	sll	a2,a1,a2
2040032e:	fe442583          	lw	a1,-28(s0)
20400332:	00b7d333          	srl	t1,a5,a1
20400336:	00666333          	or	t1,a2,t1
2040033a:	fe442603          	lw	a2,-28(s0)
2040033e:	00c853b3          	srl	t2,a6,a2
20400342:	fe442603          	lw	a2,-28(s0)
20400346:	40c00633          	neg	a2,a2
2040034a:	03f67613          	andi	a2,a2,63
2040034e:	1601                	addi	a2,a2,-32
20400350:	00064663          	bltz	a2,2040035c <ROR+0x6c>
20400354:	00c79733          	sll	a4,a5,a2
20400358:	4681                	li	a3,0
2040035a:	a83d                	j	20400398 <ROR+0xa8>
2040035c:	0017d593          	srli	a1,a5,0x1
20400360:	457d                	li	a0,31
20400362:	fe442603          	lw	a2,-28(s0)
20400366:	40c00633          	neg	a2,a2
2040036a:	03f67613          	andi	a2,a2,63
2040036e:	40c50633          	sub	a2,a0,a2
20400372:	00c5d633          	srl	a2,a1,a2
20400376:	fe442583          	lw	a1,-28(s0)
2040037a:	40b005b3          	neg	a1,a1
2040037e:	03f5f593          	andi	a1,a1,63
20400382:	00b81733          	sll	a4,a6,a1
20400386:	8f51                	or	a4,a4,a2
20400388:	fe442603          	lw	a2,-28(s0)
2040038c:	40c00633          	neg	a2,a2
20400390:	03f67613          	andi	a2,a2,63
20400394:	00c796b3          	sll	a3,a5,a2
20400398:	0066ee33          	or	t3,a3,t1
2040039c:	00776eb3          	or	t4,a4,t2
204003a0:	86f2                	mv	a3,t3
204003a2:	8776                	mv	a4,t4
204003a4:	87b6                	mv	a5,a3
204003a6:	883a                	mv	a6,a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:9
}
204003a8:	853e                	mv	a0,a5
204003aa:	85c2                	mv	a1,a6
204003ac:	4472                	lw	s0,28(sp)
204003ae:	6105                	addi	sp,sp,32
204003b0:	8082                	ret

204003b2 <ROUND>:
ROUND():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:11

static inline void ROUND(ascon_state_t* s, uint8_t C) {
204003b2:	7169                	addi	sp,sp,-304
204003b4:	12112623          	sw	ra,300(sp)
204003b8:	12812423          	sw	s0,296(sp)
204003bc:	13212223          	sw	s2,292(sp)
204003c0:	13312023          	sw	s3,288(sp)
204003c4:	11412e23          	sw	s4,284(sp)
204003c8:	11512c23          	sw	s5,280(sp)
204003cc:	11612a23          	sw	s6,276(sp)
204003d0:	11712823          	sw	s7,272(sp)
204003d4:	11812623          	sw	s8,268(sp)
204003d8:	11912423          	sw	s9,264(sp)
204003dc:	11a12223          	sw	s10,260(sp)
204003e0:	11b12023          	sw	s11,256(sp)
204003e4:	1a00                	addi	s0,sp,304
204003e6:	f8a42e23          	sw	a0,-100(s0)
204003ea:	87ae                	mv	a5,a1
204003ec:	f8f40da3          	sb	a5,-101(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:14
  ascon_state_t t;
  /* addition of round constant */
  s->x[2] ^= C;
204003f0:	f9c42783          	lw	a5,-100(s0)
204003f4:	4b94                	lw	a3,16(a5)
204003f6:	4bd8                	lw	a4,20(a5)
204003f8:	f9b44783          	lbu	a5,-101(s0)
204003fc:	0ff7f793          	andi	a5,a5,255
20400400:	883e                	mv	a6,a5
20400402:	4881                	li	a7,0
20400404:	0106c333          	xor	t1,a3,a6
20400408:	011743b3          	xor	t2,a4,a7
2040040c:	f9c42783          	lw	a5,-100(s0)
20400410:	0067a823          	sw	t1,16(a5)
20400414:	0077aa23          	sw	t2,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:17
  /* printstate(" round constant", s); */
  /* substitution layer */
  s->x[0] ^= s->x[4];
20400418:	f9c42783          	lw	a5,-100(s0)
2040041c:	4394                	lw	a3,0(a5)
2040041e:	43d8                	lw	a4,4(a5)
20400420:	f9c42783          	lw	a5,-100(s0)
20400424:	0247a803          	lw	a6,36(a5)
20400428:	539c                	lw	a5,32(a5)
2040042a:	00f6ce33          	xor	t3,a3,a5
2040042e:	01074eb3          	xor	t4,a4,a6
20400432:	f9c42783          	lw	a5,-100(s0)
20400436:	01c7a023          	sw	t3,0(a5)
2040043a:	01d7a223          	sw	t4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:18
  s->x[4] ^= s->x[3];
2040043e:	f9c42783          	lw	a5,-100(s0)
20400442:	5394                	lw	a3,32(a5)
20400444:	53d8                	lw	a4,36(a5)
20400446:	f9c42783          	lw	a5,-100(s0)
2040044a:	01c7a803          	lw	a6,28(a5)
2040044e:	4f9c                	lw	a5,24(a5)
20400450:	00f6cc33          	xor	s8,a3,a5
20400454:	01074cb3          	xor	s9,a4,a6
20400458:	f9c42783          	lw	a5,-100(s0)
2040045c:	0387a023          	sw	s8,32(a5)
20400460:	0397a223          	sw	s9,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:19
  s->x[2] ^= s->x[1];
20400464:	f9c42783          	lw	a5,-100(s0)
20400468:	4b94                	lw	a3,16(a5)
2040046a:	4bd8                	lw	a4,20(a5)
2040046c:	f9c42783          	lw	a5,-100(s0)
20400470:	00c7a803          	lw	a6,12(a5)
20400474:	479c                	lw	a5,8(a5)
20400476:	00f6c633          	xor	a2,a3,a5
2040047a:	f8c42823          	sw	a2,-112(s0)
2040047e:	010747b3          	xor	a5,a4,a6
20400482:	f8f42a23          	sw	a5,-108(s0)
20400486:	f9c42783          	lw	a5,-100(s0)
2040048a:	f9042683          	lw	a3,-112(s0)
2040048e:	f9442703          	lw	a4,-108(s0)
20400492:	cb94                	sw	a3,16(a5)
20400494:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:21
  /* start of keccak s-box */
  t.x[0] = s->x[0] ^ (~s->x[1] & s->x[2]);
20400496:	f9c42783          	lw	a5,-100(s0)
2040049a:	4394                	lw	a3,0(a5)
2040049c:	43d8                	lw	a4,4(a5)
2040049e:	f9c42783          	lw	a5,-100(s0)
204004a2:	00c7a803          	lw	a6,12(a5)
204004a6:	479c                	lw	a5,8(a5)
204004a8:	fff7c913          	not	s2,a5
204004ac:	fff84993          	not	s3,a6
204004b0:	f9c42783          	lw	a5,-100(s0)
204004b4:	0147a803          	lw	a6,20(a5)
204004b8:	4b9c                	lw	a5,16(a5)
204004ba:	00f97f33          	and	t5,s2,a5
204004be:	0109ffb3          	and	t6,s3,a6
204004c2:	01e6c7b3          	xor	a5,a3,t5
204004c6:	f8f42423          	sw	a5,-120(s0)
204004ca:	01f747b3          	xor	a5,a4,t6
204004ce:	f8f42623          	sw	a5,-116(s0)
204004d2:	f8842783          	lw	a5,-120(s0)
204004d6:	f8c42803          	lw	a6,-116(s0)
204004da:	faf42423          	sw	a5,-88(s0)
204004de:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:22
  t.x[1] = s->x[1] ^ (~s->x[2] & s->x[3]);
204004e2:	f9c42783          	lw	a5,-100(s0)
204004e6:	4794                	lw	a3,8(a5)
204004e8:	47d8                	lw	a4,12(a5)
204004ea:	f9c42783          	lw	a5,-100(s0)
204004ee:	0147a803          	lw	a6,20(a5)
204004f2:	4b9c                	lw	a5,16(a5)
204004f4:	fff7cb13          	not	s6,a5
204004f8:	fff84b93          	not	s7,a6
204004fc:	f9c42783          	lw	a5,-100(s0)
20400500:	01c7a803          	lw	a6,28(a5)
20400504:	4f9c                	lw	a5,24(a5)
20400506:	00fb7a33          	and	s4,s6,a5
2040050a:	010bfab3          	and	s5,s7,a6
2040050e:	0146c7b3          	xor	a5,a3,s4
20400512:	f8f42023          	sw	a5,-128(s0)
20400516:	015747b3          	xor	a5,a4,s5
2040051a:	f8f42223          	sw	a5,-124(s0)
2040051e:	f8042783          	lw	a5,-128(s0)
20400522:	f8442803          	lw	a6,-124(s0)
20400526:	faf42823          	sw	a5,-80(s0)
2040052a:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:23
  t.x[2] = s->x[2] ^ (~s->x[3] & s->x[4]);
2040052e:	f9c42783          	lw	a5,-100(s0)
20400532:	4b94                	lw	a3,16(a5)
20400534:	4bd8                	lw	a4,20(a5)
20400536:	f9c42783          	lw	a5,-100(s0)
2040053a:	01c7a803          	lw	a6,28(a5)
2040053e:	4f9c                	lw	a5,24(a5)
20400540:	fff7c613          	not	a2,a5
20400544:	f6c42c23          	sw	a2,-136(s0)
20400548:	fff84793          	not	a5,a6
2040054c:	f6f42e23          	sw	a5,-132(s0)
20400550:	f9c42783          	lw	a5,-100(s0)
20400554:	0247a803          	lw	a6,36(a5)
20400558:	539c                	lw	a5,32(a5)
2040055a:	f7842583          	lw	a1,-136(s0)
2040055e:	f7c42603          	lw	a2,-132(s0)
20400562:	852e                	mv	a0,a1
20400564:	00f57d33          	and	s10,a0,a5
20400568:	01067db3          	and	s11,a2,a6
2040056c:	01a6c7b3          	xor	a5,a3,s10
20400570:	f6f42823          	sw	a5,-144(s0)
20400574:	01b747b3          	xor	a5,a4,s11
20400578:	f6f42a23          	sw	a5,-140(s0)
2040057c:	f7042783          	lw	a5,-144(s0)
20400580:	f7442803          	lw	a6,-140(s0)
20400584:	faf42c23          	sw	a5,-72(s0)
20400588:	fb042e23          	sw	a6,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:24
  t.x[3] = s->x[3] ^ (~s->x[4] & s->x[0]);
2040058c:	f9c42783          	lw	a5,-100(s0)
20400590:	4f94                	lw	a3,24(a5)
20400592:	4fd8                	lw	a4,28(a5)
20400594:	f9c42783          	lw	a5,-100(s0)
20400598:	0247a803          	lw	a6,36(a5)
2040059c:	539c                	lw	a5,32(a5)
2040059e:	fff7c613          	not	a2,a5
204005a2:	f6c42423          	sw	a2,-152(s0)
204005a6:	fff84793          	not	a5,a6
204005aa:	f6f42623          	sw	a5,-148(s0)
204005ae:	f9c42783          	lw	a5,-100(s0)
204005b2:	0047a803          	lw	a6,4(a5)
204005b6:	439c                	lw	a5,0(a5)
204005b8:	f6842583          	lw	a1,-152(s0)
204005bc:	f6c42603          	lw	a2,-148(s0)
204005c0:	852e                	mv	a0,a1
204005c2:	8d7d                	and	a0,a0,a5
204005c4:	f6a42023          	sw	a0,-160(s0)
204005c8:	010677b3          	and	a5,a2,a6
204005cc:	f6f42223          	sw	a5,-156(s0)
204005d0:	f6042783          	lw	a5,-160(s0)
204005d4:	f6442803          	lw	a6,-156(s0)
204005d8:	863e                	mv	a2,a5
204005da:	8e35                	xor	a2,a2,a3
204005dc:	f4c42c23          	sw	a2,-168(s0)
204005e0:	87c2                	mv	a5,a6
204005e2:	8fb9                	xor	a5,a5,a4
204005e4:	f4f42e23          	sw	a5,-164(s0)
204005e8:	f5842783          	lw	a5,-168(s0)
204005ec:	f5c42803          	lw	a6,-164(s0)
204005f0:	fcf42023          	sw	a5,-64(s0)
204005f4:	fd042223          	sw	a6,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:25
  t.x[4] = s->x[4] ^ (~s->x[0] & s->x[1]);
204005f8:	f9c42783          	lw	a5,-100(s0)
204005fc:	5394                	lw	a3,32(a5)
204005fe:	53d8                	lw	a4,36(a5)
20400600:	f9c42783          	lw	a5,-100(s0)
20400604:	0047a803          	lw	a6,4(a5)
20400608:	439c                	lw	a5,0(a5)
2040060a:	fff7c613          	not	a2,a5
2040060e:	f4c42823          	sw	a2,-176(s0)
20400612:	fff84793          	not	a5,a6
20400616:	f4f42a23          	sw	a5,-172(s0)
2040061a:	f9c42783          	lw	a5,-100(s0)
2040061e:	00c7a803          	lw	a6,12(a5)
20400622:	479c                	lw	a5,8(a5)
20400624:	f5042583          	lw	a1,-176(s0)
20400628:	f5442603          	lw	a2,-172(s0)
2040062c:	852e                	mv	a0,a1
2040062e:	8d7d                	and	a0,a0,a5
20400630:	f4a42423          	sw	a0,-184(s0)
20400634:	010677b3          	and	a5,a2,a6
20400638:	f4f42623          	sw	a5,-180(s0)
2040063c:	f4842783          	lw	a5,-184(s0)
20400640:	f4c42803          	lw	a6,-180(s0)
20400644:	863e                	mv	a2,a5
20400646:	8e35                	xor	a2,a2,a3
20400648:	f4c42023          	sw	a2,-192(s0)
2040064c:	87c2                	mv	a5,a6
2040064e:	8fb9                	xor	a5,a5,a4
20400650:	f4f42223          	sw	a5,-188(s0)
20400654:	f4042783          	lw	a5,-192(s0)
20400658:	f4442803          	lw	a6,-188(s0)
2040065c:	fcf42423          	sw	a5,-56(s0)
20400660:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:27
  /* end of keccak s-box */
  t.x[1] ^= t.x[0];
20400664:	fb042683          	lw	a3,-80(s0)
20400668:	fb442703          	lw	a4,-76(s0)
2040066c:	fa842783          	lw	a5,-88(s0)
20400670:	fac42803          	lw	a6,-84(s0)
20400674:	00f6c633          	xor	a2,a3,a5
20400678:	f2c42c23          	sw	a2,-200(s0)
2040067c:	010747b3          	xor	a5,a4,a6
20400680:	f2f42e23          	sw	a5,-196(s0)
20400684:	f3842783          	lw	a5,-200(s0)
20400688:	f3c42803          	lw	a6,-196(s0)
2040068c:	faf42823          	sw	a5,-80(s0)
20400690:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:28
  t.x[0] ^= t.x[4];
20400694:	fa842683          	lw	a3,-88(s0)
20400698:	fac42703          	lw	a4,-84(s0)
2040069c:	fc842783          	lw	a5,-56(s0)
204006a0:	fcc42803          	lw	a6,-52(s0)
204006a4:	00f6c633          	xor	a2,a3,a5
204006a8:	f2c42823          	sw	a2,-208(s0)
204006ac:	010747b3          	xor	a5,a4,a6
204006b0:	f2f42a23          	sw	a5,-204(s0)
204006b4:	f3042783          	lw	a5,-208(s0)
204006b8:	f3442803          	lw	a6,-204(s0)
204006bc:	faf42423          	sw	a5,-88(s0)
204006c0:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:29
  t.x[3] ^= t.x[2];
204006c4:	fc042683          	lw	a3,-64(s0)
204006c8:	fc442703          	lw	a4,-60(s0)
204006cc:	fb842783          	lw	a5,-72(s0)
204006d0:	fbc42803          	lw	a6,-68(s0)
204006d4:	00f6c633          	xor	a2,a3,a5
204006d8:	f2c42423          	sw	a2,-216(s0)
204006dc:	010747b3          	xor	a5,a4,a6
204006e0:	f2f42623          	sw	a5,-212(s0)
204006e4:	f2842783          	lw	a5,-216(s0)
204006e8:	f2c42803          	lw	a6,-212(s0)
204006ec:	fcf42023          	sw	a5,-64(s0)
204006f0:	fd042223          	sw	a6,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:30
  t.x[2] = ~t.x[2];
204006f4:	fb842783          	lw	a5,-72(s0)
204006f8:	fbc42803          	lw	a6,-68(s0)
204006fc:	fff7c713          	not	a4,a5
20400700:	f2e42023          	sw	a4,-224(s0)
20400704:	fff84793          	not	a5,a6
20400708:	f2f42223          	sw	a5,-220(s0)
2040070c:	f2042783          	lw	a5,-224(s0)
20400710:	f2442803          	lw	a6,-220(s0)
20400714:	faf42c23          	sw	a5,-72(s0)
20400718:	fb042e23          	sw	a6,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:33
  /* printstate(" substitution layer", &t); */
  /* linear diffusion layer */
  s->x[0] = t.x[0] ^ ROR(t.x[0], 19) ^ ROR(t.x[0], 28);
2040071c:	fa842903          	lw	s2,-88(s0)
20400720:	fac42983          	lw	s3,-84(s0)
20400724:	fa842783          	lw	a5,-88(s0)
20400728:	fac42803          	lw	a6,-84(s0)
2040072c:	464d                	li	a2,19
2040072e:	853e                	mv	a0,a5
20400730:	85c2                	mv	a1,a6
20400732:	3e7d                	jal	204002f0 <ROR>
20400734:	87aa                	mv	a5,a0
20400736:	882e                	mv	a6,a1
20400738:	00f94733          	xor	a4,s2,a5
2040073c:	f0e42c23          	sw	a4,-232(s0)
20400740:	0109c7b3          	xor	a5,s3,a6
20400744:	f0f42e23          	sw	a5,-228(s0)
20400748:	fa842783          	lw	a5,-88(s0)
2040074c:	fac42803          	lw	a6,-84(s0)
20400750:	4671                	li	a2,28
20400752:	853e                	mv	a0,a5
20400754:	85c2                	mv	a1,a6
20400756:	3e69                	jal	204002f0 <ROR>
20400758:	87aa                	mv	a5,a0
2040075a:	882e                	mv	a6,a1
2040075c:	f1842683          	lw	a3,-232(s0)
20400760:	f1c42703          	lw	a4,-228(s0)
20400764:	8636                	mv	a2,a3
20400766:	8e3d                	xor	a2,a2,a5
20400768:	f0c42823          	sw	a2,-240(s0)
2040076c:	010747b3          	xor	a5,a4,a6
20400770:	f0f42a23          	sw	a5,-236(s0)
20400774:	f9c42783          	lw	a5,-100(s0)
20400778:	f1042683          	lw	a3,-240(s0)
2040077c:	f1442703          	lw	a4,-236(s0)
20400780:	c394                	sw	a3,0(a5)
20400782:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:34
  s->x[1] = t.x[1] ^ ROR(t.x[1], 61) ^ ROR(t.x[1], 39);
20400784:	fb042903          	lw	s2,-80(s0)
20400788:	fb442983          	lw	s3,-76(s0)
2040078c:	fb042783          	lw	a5,-80(s0)
20400790:	fb442803          	lw	a6,-76(s0)
20400794:	03d00613          	li	a2,61
20400798:	853e                	mv	a0,a5
2040079a:	85c2                	mv	a1,a6
2040079c:	3e91                	jal	204002f0 <ROR>
2040079e:	87aa                	mv	a5,a0
204007a0:	882e                	mv	a6,a1
204007a2:	00f94733          	xor	a4,s2,a5
204007a6:	f0e42423          	sw	a4,-248(s0)
204007aa:	0109c7b3          	xor	a5,s3,a6
204007ae:	f0f42623          	sw	a5,-244(s0)
204007b2:	fb042783          	lw	a5,-80(s0)
204007b6:	fb442803          	lw	a6,-76(s0)
204007ba:	02700613          	li	a2,39
204007be:	853e                	mv	a0,a5
204007c0:	85c2                	mv	a1,a6
204007c2:	363d                	jal	204002f0 <ROR>
204007c4:	87aa                	mv	a5,a0
204007c6:	882e                	mv	a6,a1
204007c8:	f0842683          	lw	a3,-248(s0)
204007cc:	f0c42703          	lw	a4,-244(s0)
204007d0:	8636                	mv	a2,a3
204007d2:	8e3d                	xor	a2,a2,a5
204007d4:	f0c42023          	sw	a2,-256(s0)
204007d8:	010747b3          	xor	a5,a4,a6
204007dc:	f0f42223          	sw	a5,-252(s0)
204007e0:	f9c42783          	lw	a5,-100(s0)
204007e4:	f0042683          	lw	a3,-256(s0)
204007e8:	f0442703          	lw	a4,-252(s0)
204007ec:	c794                	sw	a3,8(a5)
204007ee:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:35
  s->x[2] = t.x[2] ^ ROR(t.x[2], 1) ^ ROR(t.x[2], 6);
204007f0:	fb842903          	lw	s2,-72(s0)
204007f4:	fbc42983          	lw	s3,-68(s0)
204007f8:	fb842783          	lw	a5,-72(s0)
204007fc:	fbc42803          	lw	a6,-68(s0)
20400800:	4605                	li	a2,1
20400802:	853e                	mv	a0,a5
20400804:	85c2                	mv	a1,a6
20400806:	34ed                	jal	204002f0 <ROR>
20400808:	87aa                	mv	a5,a0
2040080a:	882e                	mv	a6,a1
2040080c:	00f94733          	xor	a4,s2,a5
20400810:	eee42c23          	sw	a4,-264(s0)
20400814:	0109c7b3          	xor	a5,s3,a6
20400818:	eef42e23          	sw	a5,-260(s0)
2040081c:	fb842783          	lw	a5,-72(s0)
20400820:	fbc42803          	lw	a6,-68(s0)
20400824:	4619                	li	a2,6
20400826:	853e                	mv	a0,a5
20400828:	85c2                	mv	a1,a6
2040082a:	34d9                	jal	204002f0 <ROR>
2040082c:	87aa                	mv	a5,a0
2040082e:	882e                	mv	a6,a1
20400830:	ef842683          	lw	a3,-264(s0)
20400834:	efc42703          	lw	a4,-260(s0)
20400838:	8636                	mv	a2,a3
2040083a:	8e3d                	xor	a2,a2,a5
2040083c:	eec42823          	sw	a2,-272(s0)
20400840:	010747b3          	xor	a5,a4,a6
20400844:	eef42a23          	sw	a5,-268(s0)
20400848:	f9c42783          	lw	a5,-100(s0)
2040084c:	ef042683          	lw	a3,-272(s0)
20400850:	ef442703          	lw	a4,-268(s0)
20400854:	cb94                	sw	a3,16(a5)
20400856:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:36
  s->x[3] = t.x[3] ^ ROR(t.x[3], 10) ^ ROR(t.x[3], 17);
20400858:	fc042903          	lw	s2,-64(s0)
2040085c:	fc442983          	lw	s3,-60(s0)
20400860:	fc042783          	lw	a5,-64(s0)
20400864:	fc442803          	lw	a6,-60(s0)
20400868:	4629                	li	a2,10
2040086a:	853e                	mv	a0,a5
2040086c:	85c2                	mv	a1,a6
2040086e:	3449                	jal	204002f0 <ROR>
20400870:	87aa                	mv	a5,a0
20400872:	882e                	mv	a6,a1
20400874:	00f94733          	xor	a4,s2,a5
20400878:	eee42423          	sw	a4,-280(s0)
2040087c:	0109c7b3          	xor	a5,s3,a6
20400880:	eef42623          	sw	a5,-276(s0)
20400884:	fc042783          	lw	a5,-64(s0)
20400888:	fc442803          	lw	a6,-60(s0)
2040088c:	4645                	li	a2,17
2040088e:	853e                	mv	a0,a5
20400890:	85c2                	mv	a1,a6
20400892:	3cb9                	jal	204002f0 <ROR>
20400894:	87aa                	mv	a5,a0
20400896:	882e                	mv	a6,a1
20400898:	ee842683          	lw	a3,-280(s0)
2040089c:	eec42703          	lw	a4,-276(s0)
204008a0:	8636                	mv	a2,a3
204008a2:	8e3d                	xor	a2,a2,a5
204008a4:	eec42023          	sw	a2,-288(s0)
204008a8:	010747b3          	xor	a5,a4,a6
204008ac:	eef42223          	sw	a5,-284(s0)
204008b0:	f9c42783          	lw	a5,-100(s0)
204008b4:	ee042683          	lw	a3,-288(s0)
204008b8:	ee442703          	lw	a4,-284(s0)
204008bc:	cf94                	sw	a3,24(a5)
204008be:	cfd8                	sw	a4,28(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:37
  s->x[4] = t.x[4] ^ ROR(t.x[4], 7) ^ ROR(t.x[4], 41);
204008c0:	fc842903          	lw	s2,-56(s0)
204008c4:	fcc42983          	lw	s3,-52(s0)
204008c8:	fc842783          	lw	a5,-56(s0)
204008cc:	fcc42803          	lw	a6,-52(s0)
204008d0:	461d                	li	a2,7
204008d2:	853e                	mv	a0,a5
204008d4:	85c2                	mv	a1,a6
204008d6:	3c29                	jal	204002f0 <ROR>
204008d8:	87aa                	mv	a5,a0
204008da:	882e                	mv	a6,a1
204008dc:	00f94733          	xor	a4,s2,a5
204008e0:	ece42c23          	sw	a4,-296(s0)
204008e4:	0109c7b3          	xor	a5,s3,a6
204008e8:	ecf42e23          	sw	a5,-292(s0)
204008ec:	fc842783          	lw	a5,-56(s0)
204008f0:	fcc42803          	lw	a6,-52(s0)
204008f4:	02900613          	li	a2,41
204008f8:	853e                	mv	a0,a5
204008fa:	85c2                	mv	a1,a6
204008fc:	3ad5                	jal	204002f0 <ROR>
204008fe:	87aa                	mv	a5,a0
20400900:	882e                	mv	a6,a1
20400902:	ed842683          	lw	a3,-296(s0)
20400906:	edc42703          	lw	a4,-292(s0)
2040090a:	8636                	mv	a2,a3
2040090c:	8e3d                	xor	a2,a2,a5
2040090e:	ecc42823          	sw	a2,-304(s0)
20400912:	010747b3          	xor	a5,a4,a6
20400916:	ecf42a23          	sw	a5,-300(s0)
2040091a:	f9c42783          	lw	a5,-100(s0)
2040091e:	ed042683          	lw	a3,-304(s0)
20400922:	ed442703          	lw	a4,-300(s0)
20400926:	d394                	sw	a3,32(a5)
20400928:	d3d8                	sw	a4,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/round.h:39
  //printstate(" round output", s);
}
2040092a:	0001                	nop
2040092c:	12c12083          	lw	ra,300(sp)
20400930:	12812403          	lw	s0,296(sp)
20400934:	12412903          	lw	s2,292(sp)
20400938:	12012983          	lw	s3,288(sp)
2040093c:	11c12a03          	lw	s4,284(sp)
20400940:	11812a83          	lw	s5,280(sp)
20400944:	11412b03          	lw	s6,276(sp)
20400948:	11012b83          	lw	s7,272(sp)
2040094c:	10c12c03          	lw	s8,268(sp)
20400950:	10812c83          	lw	s9,264(sp)
20400954:	10412d03          	lw	s10,260(sp)
20400958:	10012d83          	lw	s11,256(sp)
2040095c:	6155                	addi	sp,sp,304
2040095e:	8082                	ret

20400960 <P12>:
P12():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:10

#include "ascon.h"
#include "constants.h"
#include "round.h"

static inline void P12(ascon_state_t* s) {
20400960:	1101                	addi	sp,sp,-32
20400962:	ce06                	sw	ra,28(sp)
20400964:	cc22                	sw	s0,24(sp)
20400966:	1000                	addi	s0,sp,32
20400968:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:11
  ROUND(s, 0xf0);
2040096c:	0f000593          	li	a1,240
20400970:	fec42503          	lw	a0,-20(s0)
20400974:	3c3d                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:12
  ROUND(s, 0xe1);
20400976:	0e100593          	li	a1,225
2040097a:	fec42503          	lw	a0,-20(s0)
2040097e:	3c15                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:13
  ROUND(s, 0xd2);
20400980:	0d200593          	li	a1,210
20400984:	fec42503          	lw	a0,-20(s0)
20400988:	342d                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:14
  ROUND(s, 0xc3);
2040098a:	0c300593          	li	a1,195
2040098e:	fec42503          	lw	a0,-20(s0)
20400992:	3405                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:15
  ROUND(s, 0xb4);
20400994:	0b400593          	li	a1,180
20400998:	fec42503          	lw	a0,-20(s0)
2040099c:	3c19                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:16
  ROUND(s, 0xa5);
2040099e:	0a500593          	li	a1,165
204009a2:	fec42503          	lw	a0,-20(s0)
204009a6:	3431                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:17
  ROUND(s, 0x96);
204009a8:	09600593          	li	a1,150
204009ac:	fec42503          	lw	a0,-20(s0)
204009b0:	3409                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:18
  ROUND(s, 0x87);
204009b2:	08700593          	li	a1,135
204009b6:	fec42503          	lw	a0,-20(s0)
204009ba:	3ae5                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:19
  ROUND(s, 0x78);
204009bc:	07800593          	li	a1,120
204009c0:	fec42503          	lw	a0,-20(s0)
204009c4:	32fd                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:20
  ROUND(s, 0x69);
204009c6:	06900593          	li	a1,105
204009ca:	fec42503          	lw	a0,-20(s0)
204009ce:	32d5                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:21
  ROUND(s, 0x5a);
204009d0:	05a00593          	li	a1,90
204009d4:	fec42503          	lw	a0,-20(s0)
204009d8:	3ae9                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:22
  ROUND(s, 0x4b);
204009da:	04b00593          	li	a1,75
204009de:	fec42503          	lw	a0,-20(s0)
204009e2:	3ac1                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:23
}
204009e4:	0001                	nop
204009e6:	40f2                	lw	ra,28(sp)
204009e8:	4462                	lw	s0,24(sp)
204009ea:	6105                	addi	sp,sp,32
204009ec:	8082                	ret

204009ee <P6>:
P6():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:36
  ROUND(s, 0x69);
  ROUND(s, 0x5a);
  ROUND(s, 0x4b);
}

static inline void P6(ascon_state_t* s) {
204009ee:	1101                	addi	sp,sp,-32
204009f0:	ce06                	sw	ra,28(sp)
204009f2:	cc22                	sw	s0,24(sp)
204009f4:	1000                	addi	s0,sp,32
204009f6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:37
  ROUND(s, 0x96);
204009fa:	09600593          	li	a1,150
204009fe:	fec42503          	lw	a0,-20(s0)
20400a02:	3a45                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:38
  ROUND(s, 0x87);
20400a04:	08700593          	li	a1,135
20400a08:	fec42503          	lw	a0,-20(s0)
20400a0c:	325d                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:39
  ROUND(s, 0x78);
20400a0e:	07800593          	li	a1,120
20400a12:	fec42503          	lw	a0,-20(s0)
20400a16:	3a71                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:40
  ROUND(s, 0x69);
20400a18:	06900593          	li	a1,105
20400a1c:	fec42503          	lw	a0,-20(s0)
20400a20:	3a49                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:41
  ROUND(s, 0x5a);
20400a22:	05a00593          	li	a1,90
20400a26:	fec42503          	lw	a0,-20(s0)
20400a2a:	3261                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:42
  ROUND(s, 0x4b);
20400a2c:	04b00593          	li	a1,75
20400a30:	fec42503          	lw	a0,-20(s0)
20400a34:	3abd                	jal	204003b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/permutations.h:43
}
20400a36:	0001                	nop
20400a38:	40f2                	lw	ra,28(sp)
20400a3a:	4462                	lw	s0,24(sp)
20400a3c:	6105                	addi	sp,sp,32
20400a3e:	8082                	ret

20400a40 <LOADBYTES>:
LOADBYTES():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:20

/* set padding byte in 64-bit Ascon word */
#define PAD(i) SETBYTE(0x80, i)

/* load bytes into 64-bit Ascon word */
static inline uint64_t LOADBYTES(const uint8_t* bytes, int n) {
20400a40:	7179                	addi	sp,sp,-48
20400a42:	d622                	sw	s0,44(sp)
20400a44:	1800                	addi	s0,sp,48
20400a46:	fca42e23          	sw	a0,-36(s0)
20400a4a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:22
  int i;
  uint64_t x = 0;
20400a4e:	4581                	li	a1,0
20400a50:	4601                	li	a2,0
20400a52:	feb42023          	sw	a1,-32(s0)
20400a56:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:23
  for (i = 0; i < n; ++i){ x |= SETBYTE(bytes[i], i);
20400a5a:	fe042623          	sw	zero,-20(s0)
20400a5e:	a0a5                	j	20400ac6 <LOADBYTES+0x86>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:23 (discriminator 3)
20400a60:	fec42603          	lw	a2,-20(s0)
20400a64:	fdc42583          	lw	a1,-36(s0)
20400a68:	962e                	add	a2,a2,a1
20400a6a:	00064603          	lbu	a2,0(a2)
20400a6e:	86b2                	mv	a3,a2
20400a70:	4701                	li	a4,0
20400a72:	459d                	li	a1,7
20400a74:	fec42603          	lw	a2,-20(s0)
20400a78:	40c58633          	sub	a2,a1,a2
20400a7c:	060e                	slli	a2,a2,0x3
20400a7e:	fe060593          	addi	a1,a2,-32
20400a82:	0005c663          	bltz	a1,20400a8e <LOADBYTES+0x4e>
20400a86:	00b69833          	sll	a6,a3,a1
20400a8a:	4781                	li	a5,0
20400a8c:	a829                	j	20400aa6 <LOADBYTES+0x66>
20400a8e:	0016d513          	srli	a0,a3,0x1
20400a92:	45fd                	li	a1,31
20400a94:	8d91                	sub	a1,a1,a2
20400a96:	00b555b3          	srl	a1,a0,a1
20400a9a:	00c71833          	sll	a6,a4,a2
20400a9e:	0105e833          	or	a6,a1,a6
20400aa2:	00c697b3          	sll	a5,a3,a2
20400aa6:	fe042603          	lw	a2,-32(s0)
20400aaa:	8e5d                	or	a2,a2,a5
20400aac:	fec42023          	sw	a2,-32(s0)
20400ab0:	fe442603          	lw	a2,-28(s0)
20400ab4:	01066633          	or	a2,a2,a6
20400ab8:	fec42223          	sw	a2,-28(s0)
20400abc:	fec42603          	lw	a2,-20(s0)
20400ac0:	0605                	addi	a2,a2,1
20400ac2:	fec42623          	sw	a2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:23 (discriminator 1)
20400ac6:	fec42583          	lw	a1,-20(s0)
20400aca:	fd842603          	lw	a2,-40(s0)
20400ace:	f8c5c9e3          	blt	a1,a2,20400a60 <LOADBYTES+0x20>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:25
  };
  return x;
20400ad2:	fe042783          	lw	a5,-32(s0)
20400ad6:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:26
}
20400ada:	853e                	mv	a0,a5
20400adc:	85c2                	mv	a1,a6
20400ade:	5432                	lw	s0,44(sp)
20400ae0:	6145                	addi	sp,sp,48
20400ae2:	8082                	ret

20400ae4 <STOREBYTES>:
STOREBYTES():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:29

/* store bytes from 64-bit Ascon word */
static inline void STOREBYTES(uint8_t* bytes, uint64_t x, int n) {
20400ae4:	7179                	addi	sp,sp,-48
20400ae6:	d622                	sw	s0,44(sp)
20400ae8:	1800                	addi	s0,sp,48
20400aea:	fca42e23          	sw	a0,-36(s0)
20400aee:	fcb42823          	sw	a1,-48(s0)
20400af2:	fcc42a23          	sw	a2,-44(s0)
20400af6:	fcd42c23          	sw	a3,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:31
  int i;
  for (i = 0; i < n; ++i) bytes[i] = GETBYTE(x, i);
20400afa:	fe042623          	sw	zero,-20(s0)
20400afe:	a085                	j	20400b5e <STOREBYTES+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:31 (discriminator 3)
20400b00:	469d                	li	a3,7
20400b02:	fec42703          	lw	a4,-20(s0)
20400b06:	40e68733          	sub	a4,a3,a4
20400b0a:	070e                	slli	a4,a4,0x3
20400b0c:	fe070693          	addi	a3,a4,-32 # 1fe0 <__heap_size+0x17e0>
20400b10:	0006c863          	bltz	a3,20400b20 <STOREBYTES+0x3c>
20400b14:	fd442703          	lw	a4,-44(s0)
20400b18:	00d757b3          	srl	a5,a4,a3
20400b1c:	4801                	li	a6,0
20400b1e:	a015                	j	20400b42 <STOREBYTES+0x5e>
20400b20:	fd442683          	lw	a3,-44(s0)
20400b24:	00169613          	slli	a2,a3,0x1
20400b28:	46fd                	li	a3,31
20400b2a:	8e99                	sub	a3,a3,a4
20400b2c:	00d616b3          	sll	a3,a2,a3
20400b30:	fd042603          	lw	a2,-48(s0)
20400b34:	00e657b3          	srl	a5,a2,a4
20400b38:	8fd5                	or	a5,a5,a3
20400b3a:	fd442683          	lw	a3,-44(s0)
20400b3e:	00e6d833          	srl	a6,a3,a4
20400b42:	fec42703          	lw	a4,-20(s0)
20400b46:	fdc42683          	lw	a3,-36(s0)
20400b4a:	9736                	add	a4,a4,a3
20400b4c:	0ff7f693          	andi	a3,a5,255
20400b50:	00d70023          	sb	a3,0(a4)
20400b54:	fec42703          	lw	a4,-20(s0)
20400b58:	0705                	addi	a4,a4,1
20400b5a:	fee42623          	sw	a4,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:31 (discriminator 1)
20400b5e:	fec42683          	lw	a3,-20(s0)
20400b62:	fd842703          	lw	a4,-40(s0)
20400b66:	f8e6cde3          	blt	a3,a4,20400b00 <STOREBYTES+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/word.h:32
}
20400b6a:	0001                	nop
20400b6c:	5432                	lw	s0,44(sp)
20400b6e:	6145                	addi	sp,sp,48
20400b70:	8082                	ret

20400b72 <printS>:
printS():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:10
// #include "printstate.h"
#include "word.h"
#include "aead.h"
#include "printf.h"

void printS(ascon_state_t *s) {
20400b72:	7179                	addi	sp,sp,-48
20400b74:	d606                	sw	ra,44(sp)
20400b76:	d422                	sw	s0,40(sp)
20400b78:	1800                	addi	s0,sp,48
20400b7a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:11
   for (int i = 0; i < 5; i++) {
20400b7e:	fe042623          	sw	zero,-20(s0)
20400b82:	a8b9                	j	20400be0 <printS+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:12
        unsigned char*ptr = (unsigned char *)&s->x[i];
20400b84:	fec42783          	lw	a5,-20(s0)
20400b88:	078e                	slli	a5,a5,0x3
20400b8a:	fdc42703          	lw	a4,-36(s0)
20400b8e:	97ba                	add	a5,a5,a4
20400b90:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:13
        for(int j = 0; j < 8; j++){
20400b94:	fe042423          	sw	zero,-24(s0)
20400b98:	a025                	j	20400bc0 <printS+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:14 (discriminator 3)
            printf("%02x", ptr[j]);
20400b9a:	fe842783          	lw	a5,-24(s0)
20400b9e:	fe442703          	lw	a4,-28(s0)
20400ba2:	97ba                	add	a5,a5,a4
20400ba4:	0007c783          	lbu	a5,0(a5)
20400ba8:	85be                	mv	a1,a5
20400baa:	204097b7          	lui	a5,0x20409
20400bae:	aa478513          	addi	a0,a5,-1372 # 20408aa4 <_exit+0x36>
20400bb2:	508020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:13 (discriminator 3)
        for(int j = 0; j < 8; j++){
20400bb6:	fe842783          	lw	a5,-24(s0)
20400bba:	0785                	addi	a5,a5,1
20400bbc:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:13 (discriminator 1)
20400bc0:	fe842703          	lw	a4,-24(s0)
20400bc4:	479d                	li	a5,7
20400bc6:	fce7dae3          	bge	a5,a4,20400b9a <printS+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:16 (discriminator 2)
        }
        printf("\n");
20400bca:	204097b7          	lui	a5,0x20409
20400bce:	aac78513          	addi	a0,a5,-1364 # 20408aac <_exit+0x3e>
20400bd2:	4e8020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:11 (discriminator 2)
   for (int i = 0; i < 5; i++) {
20400bd6:	fec42783          	lw	a5,-20(s0)
20400bda:	0785                	addi	a5,a5,1
20400bdc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:11 (discriminator 1)
20400be0:	fec42703          	lw	a4,-20(s0)
20400be4:	4791                	li	a5,4
20400be6:	f8e7dfe3          	bge	a5,a4,20400b84 <printS+0x12>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:19
    }

    printf("\n");
20400bea:	204097b7          	lui	a5,0x20409
20400bee:	aac78513          	addi	a0,a5,-1364 # 20408aac <_exit+0x3e>
20400bf2:	4c8020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:20
}
20400bf6:	0001                	nop
20400bf8:	50b2                	lw	ra,44(sp)
20400bfa:	5422                	lw	s0,40(sp)
20400bfc:	6145                	addi	sp,sp,48
20400bfe:	8082                	ret

20400c00 <crypto_aead_encrypt>:
crypto_aead_encrypt():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:43

int crypto_aead_encrypt(unsigned char *c, unsigned long long *clen,
                        const unsigned char *m, unsigned long long mlen,
                        const unsigned char *ad, unsigned long long adlen,
                        const unsigned char *npub,
                        const unsigned char *k) {
20400c00:	7151                	addi	sp,sp,-240
20400c02:	d786                	sw	ra,236(sp)
20400c04:	d5a2                	sw	s0,232(sp)
20400c06:	d3ca                	sw	s2,228(sp)
20400c08:	d1ce                	sw	s3,224(sp)
20400c0a:	cfd2                	sw	s4,220(sp)
20400c0c:	cdd6                	sw	s5,216(sp)
20400c0e:	cbda                	sw	s6,212(sp)
20400c10:	c9de                	sw	s7,208(sp)
20400c12:	c7e2                	sw	s8,204(sp)
20400c14:	c5e6                	sw	s9,200(sp)
20400c16:	c3ea                	sw	s10,196(sp)
20400c18:	c1ee                	sw	s11,192(sp)
20400c1a:	1980                	addi	s0,sp,240
20400c1c:	f6a42e23          	sw	a0,-132(s0)
20400c20:	f6b42c23          	sw	a1,-136(s0)
20400c24:	f6c42a23          	sw	a2,-140(s0)
20400c28:	f6d42423          	sw	a3,-152(s0)
20400c2c:	f6e42623          	sw	a4,-148(s0)
20400c30:	f6f42823          	sw	a5,-144(s0)
20400c34:	f7042023          	sw	a6,-160(s0)
20400c38:	f7142223          	sw	a7,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:47


    /* set ciphertext size */
    *clen = mlen + CRYPTO_ABYTES;
20400c3c:	f6842783          	lw	a5,-152(s0)
20400c40:	f6c42803          	lw	a6,-148(s0)
20400c44:	46c1                	li	a3,16
20400c46:	4701                	li	a4,0
20400c48:	00d78533          	add	a0,a5,a3
20400c4c:	862a                	mv	a2,a0
20400c4e:	00f63633          	sltu	a2,a2,a5
20400c52:	00e805b3          	add	a1,a6,a4
20400c56:	00b607b3          	add	a5,a2,a1
20400c5a:	85be                	mv	a1,a5
20400c5c:	86aa                	mv	a3,a0
20400c5e:	872e                	mv	a4,a1
20400c60:	f7842783          	lw	a5,-136(s0)
20400c64:	c394                	sw	a3,0(a5)
20400c66:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:50

    /* load key and nonce */
    const uint64_t K0 = LOADBYTES(k, 8);
20400c68:	45a1                	li	a1,8
20400c6a:	4048                	lw	a0,4(s0)
20400c6c:	3bd1                	jal	20400a40 <LOADBYTES>
20400c6e:	fca42423          	sw	a0,-56(s0)
20400c72:	fcb42623          	sw	a1,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:51
    const uint64_t K1 = LOADBYTES(k + 8, 8);
20400c76:	405c                	lw	a5,4(s0)
20400c78:	07a1                	addi	a5,a5,8
20400c7a:	45a1                	li	a1,8
20400c7c:	853e                	mv	a0,a5
20400c7e:	33c9                	jal	20400a40 <LOADBYTES>
20400c80:	fca42023          	sw	a0,-64(s0)
20400c84:	fcb42223          	sw	a1,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:52
    const uint64_t N0 = LOADBYTES(npub, 8);
20400c88:	45a1                	li	a1,8
20400c8a:	4008                	lw	a0,0(s0)
20400c8c:	3b55                	jal	20400a40 <LOADBYTES>
20400c8e:	faa42c23          	sw	a0,-72(s0)
20400c92:	fab42e23          	sw	a1,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:53
    const uint64_t N1 = LOADBYTES(npub + 8, 8);
20400c96:	401c                	lw	a5,0(s0)
20400c98:	07a1                	addi	a5,a5,8
20400c9a:	45a1                	li	a1,8
20400c9c:	853e                	mv	a0,a5
20400c9e:	334d                	jal	20400a40 <LOADBYTES>
20400ca0:	faa42823          	sw	a0,-80(s0)
20400ca4:	fab42a23          	sw	a1,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:57

    /* initialize */
    ascon_state_t s;
    s.x[0] = ASCON_128_IV;
20400ca8:	4781                	li	a5,0
20400caa:	80401837          	lui	a6,0x80401
20400cae:	c0680813          	addi	a6,a6,-1018 # 80400c06 <metal_segment_heap_target_end+0x3fedb2>
20400cb2:	f8f42423          	sw	a5,-120(s0)
20400cb6:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:58
    s.x[1] = K0;
20400cba:	fc842783          	lw	a5,-56(s0)
20400cbe:	fcc42803          	lw	a6,-52(s0)
20400cc2:	f8f42823          	sw	a5,-112(s0)
20400cc6:	f9042a23          	sw	a6,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:59
    s.x[2] = K1;
20400cca:	fc042783          	lw	a5,-64(s0)
20400cce:	fc442803          	lw	a6,-60(s0)
20400cd2:	f8f42c23          	sw	a5,-104(s0)
20400cd6:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:60
    s.x[3] = N0;
20400cda:	fb842783          	lw	a5,-72(s0)
20400cde:	fbc42803          	lw	a6,-68(s0)
20400ce2:	faf42023          	sw	a5,-96(s0)
20400ce6:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:61
    s.x[4] = N1;
20400cea:	fb042783          	lw	a5,-80(s0)
20400cee:	fb442803          	lw	a6,-76(s0)
20400cf2:	faf42423          	sw	a5,-88(s0)
20400cf6:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:62
    printf("init 1st key xor\n");
20400cfa:	204097b7          	lui	a5,0x20409
20400cfe:	ab478513          	addi	a0,a5,-1356 # 20408ab4 <_exit+0x46>
20400d02:	3b8020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:63
    printS(&s);
20400d06:	f8840793          	addi	a5,s0,-120
20400d0a:	853e                	mv	a0,a5
20400d0c:	359d                	jal	20400b72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:64
    P12(&s);
20400d0e:	f8840793          	addi	a5,s0,-120
20400d12:	853e                	mv	a0,a5
20400d14:	31b1                	jal	20400960 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:65
    s.x[3] ^= K0;
20400d16:	fa042783          	lw	a5,-96(s0)
20400d1a:	fa442803          	lw	a6,-92(s0)
20400d1e:	fc842703          	lw	a4,-56(s0)
20400d22:	00f74b33          	xor	s6,a4,a5
20400d26:	fcc42703          	lw	a4,-52(s0)
20400d2a:	01074bb3          	xor	s7,a4,a6
20400d2e:	fb642023          	sw	s6,-96(s0)
20400d32:	fb742223          	sw	s7,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:66
    s.x[4] ^= K1;
20400d36:	fa842783          	lw	a5,-88(s0)
20400d3a:	fac42803          	lw	a6,-84(s0)
20400d3e:	fc042703          	lw	a4,-64(s0)
20400d42:	00f74c33          	xor	s8,a4,a5
20400d46:	fc442703          	lw	a4,-60(s0)
20400d4a:	01074cb3          	xor	s9,a4,a6
20400d4e:	fb842423          	sw	s8,-88(s0)
20400d52:	fb942623          	sw	s9,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:67
    printf("init 2nd key xor \n");
20400d56:	204097b7          	lui	a5,0x20409
20400d5a:	ac878513          	addi	a0,a5,-1336 # 20408ac8 <_exit+0x5a>
20400d5e:	35c020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:68
    printS(&s);
20400d62:	f8840793          	addi	a5,s0,-120
20400d66:	853e                	mv	a0,a5
20400d68:	3529                	jal	20400b72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:70

    if (adlen) {
20400d6a:	f6042783          	lw	a5,-160(s0)
20400d6e:	f6442703          	lw	a4,-156(s0)
20400d72:	8fd9                	or	a5,a5,a4
20400d74:	16078f63          	beqz	a5,20400ef2 <crypto_aead_encrypt+0x2f2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:72
        /* full associated data blocks */
        while (adlen >= ASCON_128_RATE) {
20400d78:	a841                	j	20400e08 <crypto_aead_encrypt+0x208>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:73
            s.x[0] ^= LOADBYTES(ad, 8);
20400d7a:	45a1                	li	a1,8
20400d7c:	f7042503          	lw	a0,-144(s0)
20400d80:	31c1                	jal	20400a40 <LOADBYTES>
20400d82:	86aa                	mv	a3,a0
20400d84:	872e                	mv	a4,a1
20400d86:	f8842783          	lw	a5,-120(s0)
20400d8a:	f8c42803          	lw	a6,-116(s0)
20400d8e:	00f6cd33          	xor	s10,a3,a5
20400d92:	01074db3          	xor	s11,a4,a6
20400d96:	f9a42423          	sw	s10,-120(s0)
20400d9a:	f9b42623          	sw	s11,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:74
            printf("pad ad %lx \n", LOADBYTES(ad, 8));
20400d9e:	45a1                	li	a1,8
20400da0:	f7042503          	lw	a0,-144(s0)
20400da4:	3971                	jal	20400a40 <LOADBYTES>
20400da6:	87aa                	mv	a5,a0
20400da8:	882e                	mv	a6,a1
20400daa:	863e                	mv	a2,a5
20400dac:	86c2                	mv	a3,a6
20400dae:	204097b7          	lui	a5,0x20409
20400db2:	adc78513          	addi	a0,a5,-1316 # 20408adc <_exit+0x6e>
20400db6:	304020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:75
            P6(&s);
20400dba:	f8840793          	addi	a5,s0,-120
20400dbe:	853e                	mv	a0,a5
20400dc0:	313d                	jal	204009ee <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:76
            printf("absorb adata \n");
20400dc2:	204097b7          	lui	a5,0x20409
20400dc6:	aec78513          	addi	a0,a5,-1300 # 20408aec <_exit+0x7e>
20400dca:	2f0020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:77
            printS(&s);
20400dce:	f8840793          	addi	a5,s0,-120
20400dd2:	853e                	mv	a0,a5
20400dd4:	3b79                	jal	20400b72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:78
            ad += ASCON_128_RATE;
20400dd6:	f7042783          	lw	a5,-144(s0)
20400dda:	07a1                	addi	a5,a5,8
20400ddc:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:79
            adlen -= ASCON_128_RATE;
20400de0:	f6042783          	lw	a5,-160(s0)
20400de4:	f6442803          	lw	a6,-156(s0)
20400de8:	56e1                	li	a3,-8
20400dea:	577d                	li	a4,-1
20400dec:	00d785b3          	add	a1,a5,a3
20400df0:	852e                	mv	a0,a1
20400df2:	00f53533          	sltu	a0,a0,a5
20400df6:	00e80633          	add	a2,a6,a4
20400dfa:	00c507b3          	add	a5,a0,a2
20400dfe:	863e                	mv	a2,a5
20400e00:	f6b42023          	sw	a1,-160(s0)
20400e04:	f6c42223          	sw	a2,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:72
        while (adlen >= ASCON_128_RATE) {
20400e08:	f6442783          	lw	a5,-156(s0)
20400e0c:	f7bd                	bnez	a5,20400d7a <crypto_aead_encrypt+0x17a>
20400e0e:	f6442783          	lw	a5,-156(s0)
20400e12:	e791                	bnez	a5,20400e1e <crypto_aead_encrypt+0x21e>
20400e14:	f6042703          	lw	a4,-160(s0)
20400e18:	479d                	li	a5,7
20400e1a:	f6e7e0e3          	bltu	a5,a4,20400d7a <crypto_aead_encrypt+0x17a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:82
        }
        /* final associated data block */
        s.x[0] ^= LOADBYTES(ad, adlen);
20400e1e:	f6042783          	lw	a5,-160(s0)
20400e22:	85be                	mv	a1,a5
20400e24:	f7042503          	lw	a0,-144(s0)
20400e28:	3921                	jal	20400a40 <LOADBYTES>
20400e2a:	86aa                	mv	a3,a0
20400e2c:	872e                	mv	a4,a1
20400e2e:	f8842783          	lw	a5,-120(s0)
20400e32:	f8c42803          	lw	a6,-116(s0)
20400e36:	00f6c633          	xor	a2,a3,a5
20400e3a:	f4c42c23          	sw	a2,-168(s0)
20400e3e:	010747b3          	xor	a5,a4,a6
20400e42:	f4f42e23          	sw	a5,-164(s0)
20400e46:	f5842783          	lw	a5,-168(s0)
20400e4a:	f5c42803          	lw	a6,-164(s0)
20400e4e:	f8f42423          	sw	a5,-120(s0)
20400e52:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:84
        // printf("ad %lx \n",*ad);
        printf("pad %lld ad %lx \n", adlen, LOADBYTES(ad, adlen));
20400e56:	f6042783          	lw	a5,-160(s0)
20400e5a:	85be                	mv	a1,a5
20400e5c:	f7042503          	lw	a0,-144(s0)
20400e60:	36c5                	jal	20400a40 <LOADBYTES>
20400e62:	87aa                	mv	a5,a0
20400e64:	882e                	mv	a6,a1
20400e66:	873e                	mv	a4,a5
20400e68:	87c2                	mv	a5,a6
20400e6a:	f6042603          	lw	a2,-160(s0)
20400e6e:	f6442683          	lw	a3,-156(s0)
20400e72:	204095b7          	lui	a1,0x20409
20400e76:	afc58513          	addi	a0,a1,-1284 # 20408afc <_exit+0x8e>
20400e7a:	240020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:85
        s.x[0] ^= PAD(adlen);
20400e7e:	f8842683          	lw	a3,-120(s0)
20400e82:	f8c42703          	lw	a4,-116(s0)
20400e86:	f6042603          	lw	a2,-160(s0)
20400e8a:	4781                	li	a5,0
20400e8c:	8f91                	sub	a5,a5,a2
20400e8e:	078e                	slli	a5,a5,0x3
20400e90:	03878793          	addi	a5,a5,56
20400e94:	fe078613          	addi	a2,a5,-32
20400e98:	00064863          	bltz	a2,20400ea8 <crypto_aead_encrypt+0x2a8>
20400e9c:	08000793          	li	a5,128
20400ea0:	00c79ab3          	sll	s5,a5,a2
20400ea4:	4a01                	li	s4,0
20400ea6:	a015                	j	20400eca <crypto_aead_encrypt+0x2ca>
20400ea8:	08000613          	li	a2,128
20400eac:	00165593          	srli	a1,a2,0x1
20400eb0:	467d                	li	a2,31
20400eb2:	8e1d                	sub	a2,a2,a5
20400eb4:	00c5d633          	srl	a2,a1,a2
20400eb8:	4581                	li	a1,0
20400eba:	00f59ab3          	sll	s5,a1,a5
20400ebe:	01566ab3          	or	s5,a2,s5
20400ec2:	08000613          	li	a2,128
20400ec6:	00f61a33          	sll	s4,a2,a5
20400eca:	0146c7b3          	xor	a5,a3,s4
20400ece:	f4f42823          	sw	a5,-176(s0)
20400ed2:	015747b3          	xor	a5,a4,s5
20400ed6:	f4f42a23          	sw	a5,-172(s0)
20400eda:	f5042783          	lw	a5,-176(s0)
20400ede:	f5442803          	lw	a6,-172(s0)
20400ee2:	f8f42423          	sw	a5,-120(s0)
20400ee6:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:86
        P6(&s);
20400eea:	f8840793          	addi	a5,s0,-120
20400eee:	853e                	mv	a0,a5
20400ef0:	3cfd                	jal	204009ee <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:90

    }
    /* domain separation */
    s.x[4] ^= 1;
20400ef2:	fa842783          	lw	a5,-88(s0)
20400ef6:	fac42803          	lw	a6,-84(s0)
20400efa:	0017c713          	xori	a4,a5,1
20400efe:	f4e42423          	sw	a4,-184(s0)
20400f02:	00084793          	xori	a5,a6,0
20400f06:	f4f42623          	sw	a5,-180(s0)
20400f0a:	f4842783          	lw	a5,-184(s0)
20400f0e:	f4c42803          	lw	a6,-180(s0)
20400f12:	faf42423          	sw	a5,-88(s0)
20400f16:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:91
    printf("AD Domain separation \n");
20400f1a:	204097b7          	lui	a5,0x20409
20400f1e:	b1078513          	addi	a0,a5,-1264 # 20408b10 <_exit+0xa2>
20400f22:	198020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:92
    printS(&s);
20400f26:	f8840793          	addi	a5,s0,-120
20400f2a:	853e                	mv	a0,a5
20400f2c:	3199                	jal	20400b72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:95

    /* full plaintext blocks */
    while (mlen >= ASCON_128_RATE) {
20400f2e:	a04d                	j	20400fd0 <crypto_aead_encrypt+0x3d0>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:96
        s.x[0] ^= LOADBYTES(m, 8);
20400f30:	45a1                	li	a1,8
20400f32:	f7442503          	lw	a0,-140(s0)
20400f36:	3629                	jal	20400a40 <LOADBYTES>
20400f38:	86aa                	mv	a3,a0
20400f3a:	872e                	mv	a4,a1
20400f3c:	f8842783          	lw	a5,-120(s0)
20400f40:	f8c42803          	lw	a6,-116(s0)
20400f44:	00f6c633          	xor	a2,a3,a5
20400f48:	f4c42023          	sw	a2,-192(s0)
20400f4c:	010747b3          	xor	a5,a4,a6
20400f50:	f4f42223          	sw	a5,-188(s0)
20400f54:	f4042783          	lw	a5,-192(s0)
20400f58:	f4442803          	lw	a6,-188(s0)
20400f5c:	f8f42423          	sw	a5,-120(s0)
20400f60:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:97
        STOREBYTES(c, s.x[0], 8);
20400f64:	f8842783          	lw	a5,-120(s0)
20400f68:	f8c42803          	lw	a6,-116(s0)
20400f6c:	46a1                	li	a3,8
20400f6e:	85be                	mv	a1,a5
20400f70:	8642                	mv	a2,a6
20400f72:	f7c42503          	lw	a0,-132(s0)
20400f76:	36bd                	jal	20400ae4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:99

        printf("absorb plain \n");
20400f78:	204097b7          	lui	a5,0x20409
20400f7c:	b2878513          	addi	a0,a5,-1240 # 20408b28 <_exit+0xba>
20400f80:	13a020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:100
        printS(&s);
20400f84:	f8840793          	addi	a5,s0,-120
20400f88:	853e                	mv	a0,a5
20400f8a:	36e5                	jal	20400b72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:102

        P6(&s);
20400f8c:	f8840793          	addi	a5,s0,-120
20400f90:	853e                	mv	a0,a5
20400f92:	3cb1                	jal	204009ee <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:103
        m += ASCON_128_RATE;
20400f94:	f7442783          	lw	a5,-140(s0)
20400f98:	07a1                	addi	a5,a5,8
20400f9a:	f6f42a23          	sw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:104
        c += ASCON_128_RATE;
20400f9e:	f7c42783          	lw	a5,-132(s0)
20400fa2:	07a1                	addi	a5,a5,8
20400fa4:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:105
        mlen -= ASCON_128_RATE;
20400fa8:	f6842683          	lw	a3,-152(s0)
20400fac:	f6c42703          	lw	a4,-148(s0)
20400fb0:	55e1                	li	a1,-8
20400fb2:	567d                	li	a2,-1
20400fb4:	00b687b3          	add	a5,a3,a1
20400fb8:	853e                	mv	a0,a5
20400fba:	00d53533          	sltu	a0,a0,a3
20400fbe:	00c70833          	add	a6,a4,a2
20400fc2:	01050733          	add	a4,a0,a6
20400fc6:	883a                	mv	a6,a4
20400fc8:	f6f42423          	sw	a5,-152(s0)
20400fcc:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:95
    while (mlen >= ASCON_128_RATE) {
20400fd0:	f6c42783          	lw	a5,-148(s0)
20400fd4:	ffb1                	bnez	a5,20400f30 <crypto_aead_encrypt+0x330>
20400fd6:	f6c42783          	lw	a5,-148(s0)
20400fda:	e791                	bnez	a5,20400fe6 <crypto_aead_encrypt+0x3e6>
20400fdc:	f6842703          	lw	a4,-152(s0)
20400fe0:	479d                	li	a5,7
20400fe2:	f4e7e7e3          	bltu	a5,a4,20400f30 <crypto_aead_encrypt+0x330>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:108
    }
    /* final plaintext block */
    s.x[0] ^= LOADBYTES(m, mlen);
20400fe6:	f6842783          	lw	a5,-152(s0)
20400fea:	85be                	mv	a1,a5
20400fec:	f7442503          	lw	a0,-140(s0)
20400ff0:	3c81                	jal	20400a40 <LOADBYTES>
20400ff2:	86aa                	mv	a3,a0
20400ff4:	872e                	mv	a4,a1
20400ff6:	f8842783          	lw	a5,-120(s0)
20400ffa:	f8c42803          	lw	a6,-116(s0)
20400ffe:	00f6c633          	xor	a2,a3,a5
20401002:	f2c42c23          	sw	a2,-200(s0)
20401006:	010747b3          	xor	a5,a4,a6
2040100a:	f2f42e23          	sw	a5,-196(s0)
2040100e:	f3842783          	lw	a5,-200(s0)
20401012:	f3c42803          	lw	a6,-196(s0)
20401016:	f8f42423          	sw	a5,-120(s0)
2040101a:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:112
    //printf("C: %lx\n", LOADBYTES(m, mlen));
    // printf("C S_0: %lx\n", s.x[0]);

    STOREBYTES(c, s.x[0], mlen);
2040101e:	f8842783          	lw	a5,-120(s0)
20401022:	f8c42803          	lw	a6,-116(s0)
20401026:	f6842703          	lw	a4,-152(s0)
2040102a:	86ba                	mv	a3,a4
2040102c:	85be                	mv	a1,a5
2040102e:	8642                	mv	a2,a6
20401030:	f7c42503          	lw	a0,-132(s0)
20401034:	3c45                	jal	20400ae4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:113
    printf("\n");
20401036:	204097b7          	lui	a5,0x20409
2040103a:	aac78513          	addi	a0,a5,-1364 # 20408aac <_exit+0x3e>
2040103e:	07c020ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:118
//    for (int ax; ax < 8; ax++) {
//        printf("%x", *(c + ax));
//    }
//    printf("\n");
    s.x[0] ^= PAD(mlen);
20401042:	f8842683          	lw	a3,-120(s0)
20401046:	f8c42703          	lw	a4,-116(s0)
2040104a:	f6842603          	lw	a2,-152(s0)
2040104e:	4781                	li	a5,0
20401050:	8f91                	sub	a5,a5,a2
20401052:	078e                	slli	a5,a5,0x3
20401054:	03878793          	addi	a5,a5,56
20401058:	fe078613          	addi	a2,a5,-32
2040105c:	00064863          	bltz	a2,2040106c <crypto_aead_encrypt+0x46c>
20401060:	08000793          	li	a5,128
20401064:	00c799b3          	sll	s3,a5,a2
20401068:	4901                	li	s2,0
2040106a:	a015                	j	2040108e <crypto_aead_encrypt+0x48e>
2040106c:	08000613          	li	a2,128
20401070:	00165593          	srli	a1,a2,0x1
20401074:	467d                	li	a2,31
20401076:	8e1d                	sub	a2,a2,a5
20401078:	00c5d633          	srl	a2,a1,a2
2040107c:	4581                	li	a1,0
2040107e:	00f599b3          	sll	s3,a1,a5
20401082:	013669b3          	or	s3,a2,s3
20401086:	08000613          	li	a2,128
2040108a:	00f61933          	sll	s2,a2,a5
2040108e:	0126c7b3          	xor	a5,a3,s2
20401092:	f2f42823          	sw	a5,-208(s0)
20401096:	013747b3          	xor	a5,a4,s3
2040109a:	f2f42a23          	sw	a5,-204(s0)
2040109e:	f3042783          	lw	a5,-208(s0)
204010a2:	f3442803          	lw	a6,-204(s0)
204010a6:	f8f42423          	sw	a5,-120(s0)
204010aa:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:119
    c += mlen;
204010ae:	f6842783          	lw	a5,-152(s0)
204010b2:	f7c42703          	lw	a4,-132(s0)
204010b6:	97ba                	add	a5,a5,a4
204010b8:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:121

    printf("pad plain \n");
204010bc:	204097b7          	lui	a5,0x20409
204010c0:	b3878513          	addi	a0,a5,-1224 # 20408b38 <_exit+0xca>
204010c4:	7f7010ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:122
    printS(&s);
204010c8:	f8840793          	addi	a5,s0,-120
204010cc:	853e                	mv	a0,a5
204010ce:	3455                	jal	20400b72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:125

    /* finalize */
    s.x[1] ^= K0;
204010d0:	f9042783          	lw	a5,-112(s0)
204010d4:	f9442803          	lw	a6,-108(s0)
204010d8:	fc842703          	lw	a4,-56(s0)
204010dc:	8f3d                	xor	a4,a4,a5
204010de:	f2e42423          	sw	a4,-216(s0)
204010e2:	fcc42703          	lw	a4,-52(s0)
204010e6:	010747b3          	xor	a5,a4,a6
204010ea:	f2f42623          	sw	a5,-212(s0)
204010ee:	f2842783          	lw	a5,-216(s0)
204010f2:	f2c42803          	lw	a6,-212(s0)
204010f6:	f8f42823          	sw	a5,-112(s0)
204010fa:	f9042a23          	sw	a6,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:126
    s.x[2] ^= K1;
204010fe:	f9842783          	lw	a5,-104(s0)
20401102:	f9c42803          	lw	a6,-100(s0)
20401106:	fc042703          	lw	a4,-64(s0)
2040110a:	8f3d                	xor	a4,a4,a5
2040110c:	f2e42023          	sw	a4,-224(s0)
20401110:	fc442703          	lw	a4,-60(s0)
20401114:	010747b3          	xor	a5,a4,a6
20401118:	f2f42223          	sw	a5,-220(s0)
2040111c:	f2042783          	lw	a5,-224(s0)
20401120:	f2442803          	lw	a6,-220(s0)
20401124:	f8f42c23          	sw	a5,-104(s0)
20401128:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:128

    printf("key xor 1 \n");
2040112c:	204097b7          	lui	a5,0x20409
20401130:	b4478513          	addi	a0,a5,-1212 # 20408b44 <_exit+0xd6>
20401134:	787010ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:129
    printS(&s);
20401138:	f8840793          	addi	a5,s0,-120
2040113c:	853e                	mv	a0,a5
2040113e:	3c15                	jal	20400b72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:131

    P12(&s);
20401140:	f8840793          	addi	a5,s0,-120
20401144:	853e                	mv	a0,a5
20401146:	81bff0ef          	jal	ra,20400960 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:132
    s.x[3] ^= K0;
2040114a:	fa042783          	lw	a5,-96(s0)
2040114e:	fa442803          	lw	a6,-92(s0)
20401152:	fc842703          	lw	a4,-56(s0)
20401156:	8f3d                	xor	a4,a4,a5
20401158:	f0e42c23          	sw	a4,-232(s0)
2040115c:	fcc42703          	lw	a4,-52(s0)
20401160:	010747b3          	xor	a5,a4,a6
20401164:	f0f42e23          	sw	a5,-228(s0)
20401168:	f1842783          	lw	a5,-232(s0)
2040116c:	f1c42803          	lw	a6,-228(s0)
20401170:	faf42023          	sw	a5,-96(s0)
20401174:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:133
    s.x[4] ^= K1;
20401178:	fa842783          	lw	a5,-88(s0)
2040117c:	fac42803          	lw	a6,-84(s0)
20401180:	fc042703          	lw	a4,-64(s0)
20401184:	8f3d                	xor	a4,a4,a5
20401186:	f0e42823          	sw	a4,-240(s0)
2040118a:	fc442703          	lw	a4,-60(s0)
2040118e:	010747b3          	xor	a5,a4,a6
20401192:	f0f42a23          	sw	a5,-236(s0)
20401196:	f1042783          	lw	a5,-240(s0)
2040119a:	f1442803          	lw	a6,-236(s0)
2040119e:	faf42423          	sw	a5,-88(s0)
204011a2:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:135

    printf("key kor 2 \n");
204011a6:	204097b7          	lui	a5,0x20409
204011aa:	b5078513          	addi	a0,a5,-1200 # 20408b50 <_exit+0xe2>
204011ae:	70d010ef          	jal	ra,204030ba <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:136
    printS(&s);
204011b2:	f8840793          	addi	a5,s0,-120
204011b6:	853e                	mv	a0,a5
204011b8:	3a6d                	jal	20400b72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:139

    /* set tag */
    STOREBYTES(c, s.x[3], 8);
204011ba:	fa042783          	lw	a5,-96(s0)
204011be:	fa442803          	lw	a6,-92(s0)
204011c2:	46a1                	li	a3,8
204011c4:	85be                	mv	a1,a5
204011c6:	8642                	mv	a2,a6
204011c8:	f7c42503          	lw	a0,-132(s0)
204011cc:	3a21                	jal	20400ae4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:140
    STOREBYTES(c + 8, s.x[4], 8);
204011ce:	f7c42783          	lw	a5,-132(s0)
204011d2:	00878713          	addi	a4,a5,8
204011d6:	fa842783          	lw	a5,-88(s0)
204011da:	fac42803          	lw	a6,-84(s0)
204011de:	46a1                	li	a3,8
204011e0:	85be                	mv	a1,a5
204011e2:	8642                	mv	a2,a6
204011e4:	853a                	mv	a0,a4
204011e6:	38fd                	jal	20400ae4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:142

    return 0;
204011e8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/aead.c:143
}
204011ea:	853e                	mv	a0,a5
204011ec:	50be                	lw	ra,236(sp)
204011ee:	542e                	lw	s0,232(sp)
204011f0:	591e                	lw	s2,228(sp)
204011f2:	598e                	lw	s3,224(sp)
204011f4:	4a7e                	lw	s4,220(sp)
204011f6:	4aee                	lw	s5,216(sp)
204011f8:	4b5e                	lw	s6,212(sp)
204011fa:	4bce                	lw	s7,208(sp)
204011fc:	4c3e                	lw	s8,204(sp)
204011fe:	4cae                	lw	s9,200(sp)
20401200:	4d1e                	lw	s10,196(sp)
20401202:	4d8e                	lw	s11,192(sp)
20401204:	616d                	addi	sp,sp,240
20401206:	8082                	ret

20401208 <_putchar>:
_putchar():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:120
// import float.h for DBL_MAX
#if defined(PRINTF_SUPPORT_FLOAT)
#include <float.h>
#endif

void _putchar(char character){
20401208:	1101                	addi	sp,sp,-32
2040120a:	ce06                	sw	ra,28(sp)
2040120c:	cc22                	sw	s0,24(sp)
2040120e:	1000                	addi	s0,sp,32
20401210:	87aa                	mv	a5,a0
20401212:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:121
    write(1, &character, 1);
20401216:	fef40793          	addi	a5,s0,-17
2040121a:	4605                	li	a2,1
2040121c:	85be                	mv	a1,a5
2040121e:	4505                	li	a0,1
20401220:	6f1010ef          	jal	ra,20403110 <write>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:122
}
20401224:	0001                	nop
20401226:	40f2                	lw	ra,28(sp)
20401228:	4462                	lw	s0,24(sp)
2040122a:	6105                	addi	sp,sp,32
2040122c:	8082                	ret

2040122e <_out_null>:
_out_null():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:146
}


// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
2040122e:	1101                	addi	sp,sp,-32
20401230:	ce22                	sw	s0,28(sp)
20401232:	1000                	addi	s0,sp,32
20401234:	87aa                	mv	a5,a0
20401236:	feb42423          	sw	a1,-24(s0)
2040123a:	fec42223          	sw	a2,-28(s0)
2040123e:	fed42023          	sw	a3,-32(s0)
20401242:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:148
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
20401246:	0001                	nop
20401248:	4472                	lw	s0,28(sp)
2040124a:	6105                	addi	sp,sp,32
2040124c:	8082                	ret

2040124e <_out_char>:
_out_char():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:153


// internal _putchar wrapper
static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
{
2040124e:	1101                	addi	sp,sp,-32
20401250:	ce06                	sw	ra,28(sp)
20401252:	cc22                	sw	s0,24(sp)
20401254:	1000                	addi	s0,sp,32
20401256:	87aa                	mv	a5,a0
20401258:	feb42423          	sw	a1,-24(s0)
2040125c:	fec42223          	sw	a2,-28(s0)
20401260:	fed42023          	sw	a3,-32(s0)
20401264:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:155
  (void)buffer; (void)idx; (void)maxlen;
  if (character) {
20401268:	fef44783          	lbu	a5,-17(s0)
2040126c:	c789                	beqz	a5,20401276 <_out_char+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:156
    _putchar(character);
2040126e:	fef44783          	lbu	a5,-17(s0)
20401272:	853e                	mv	a0,a5
20401274:	3f51                	jal	20401208 <_putchar>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:158
  }
}
20401276:	0001                	nop
20401278:	40f2                	lw	ra,28(sp)
2040127a:	4462                	lw	s0,24(sp)
2040127c:	6105                	addi	sp,sp,32
2040127e:	8082                	ret

20401280 <_strnlen_s>:
_strnlen_s():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:175


// internal secure strlen
// \return The length of the string (excluding the terminating 0) limited by 'maxsize'
static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
{
20401280:	7179                	addi	sp,sp,-48
20401282:	d622                	sw	s0,44(sp)
20401284:	1800                	addi	s0,sp,48
20401286:	fca42e23          	sw	a0,-36(s0)
2040128a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:177
  const char* s;
  for (s = str; *s && maxsize--; ++s);
2040128e:	fdc42783          	lw	a5,-36(s0)
20401292:	fef42623          	sw	a5,-20(s0)
20401296:	a031                	j	204012a2 <_strnlen_s+0x22>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:177 (discriminator 4)
20401298:	fec42783          	lw	a5,-20(s0)
2040129c:	0785                	addi	a5,a5,1
2040129e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:177 (discriminator 1)
204012a2:	fec42783          	lw	a5,-20(s0)
204012a6:	0007c783          	lbu	a5,0(a5)
204012aa:	cb81                	beqz	a5,204012ba <_strnlen_s+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:177 (discriminator 3)
204012ac:	fd842783          	lw	a5,-40(s0)
204012b0:	fff78713          	addi	a4,a5,-1
204012b4:	fce42c23          	sw	a4,-40(s0)
204012b8:	f3e5                	bnez	a5,20401298 <_strnlen_s+0x18>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:178
  return (unsigned int)(s - str);
204012ba:	fec42703          	lw	a4,-20(s0)
204012be:	fdc42783          	lw	a5,-36(s0)
204012c2:	40f707b3          	sub	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:179
}
204012c6:	853e                	mv	a0,a5
204012c8:	5432                	lw	s0,44(sp)
204012ca:	6145                	addi	sp,sp,48
204012cc:	8082                	ret

204012ce <_is_digit>:
_is_digit():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:185


// internal test if char is a digit (0-9)
// \return true if char is a digit
static inline bool _is_digit(char ch)
{
204012ce:	1101                	addi	sp,sp,-32
204012d0:	ce22                	sw	s0,28(sp)
204012d2:	1000                	addi	s0,sp,32
204012d4:	87aa                	mv	a5,a0
204012d6:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:186
  return (ch >= '0') && (ch <= '9');
204012da:	fef44703          	lbu	a4,-17(s0)
204012de:	02f00793          	li	a5,47
204012e2:	00e7fa63          	bgeu	a5,a4,204012f6 <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:186 (discriminator 1)
204012e6:	fef44703          	lbu	a4,-17(s0)
204012ea:	03900793          	li	a5,57
204012ee:	00e7e463          	bltu	a5,a4,204012f6 <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:186 (discriminator 3)
204012f2:	4785                	li	a5,1
204012f4:	a011                	j	204012f8 <_is_digit+0x2a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:186 (discriminator 4)
204012f6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:186 (discriminator 6)
204012f8:	8b85                	andi	a5,a5,1
204012fa:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:187 (discriminator 6)
}
204012fe:	853e                	mv	a0,a5
20401300:	4472                	lw	s0,28(sp)
20401302:	6105                	addi	sp,sp,32
20401304:	8082                	ret

20401306 <_atoi>:
_atoi():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:192


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
20401306:	7179                	addi	sp,sp,-48
20401308:	d606                	sw	ra,44(sp)
2040130a:	d422                	sw	s0,40(sp)
2040130c:	1800                	addi	s0,sp,48
2040130e:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:193
  unsigned int i = 0U;
20401312:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:194
  while (_is_digit(**str)) {
20401316:	a03d                	j	20401344 <_atoi+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:195
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
20401318:	fec42703          	lw	a4,-20(s0)
2040131c:	87ba                	mv	a5,a4
2040131e:	078a                	slli	a5,a5,0x2
20401320:	97ba                	add	a5,a5,a4
20401322:	0786                	slli	a5,a5,0x1
20401324:	863e                	mv	a2,a5
20401326:	fdc42783          	lw	a5,-36(s0)
2040132a:	439c                	lw	a5,0(a5)
2040132c:	00178693          	addi	a3,a5,1
20401330:	fdc42703          	lw	a4,-36(s0)
20401334:	c314                	sw	a3,0(a4)
20401336:	0007c783          	lbu	a5,0(a5)
2040133a:	97b2                	add	a5,a5,a2
2040133c:	fd078793          	addi	a5,a5,-48
20401340:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:194
  while (_is_digit(**str)) {
20401344:	fdc42783          	lw	a5,-36(s0)
20401348:	439c                	lw	a5,0(a5)
2040134a:	0007c783          	lbu	a5,0(a5)
2040134e:	853e                	mv	a0,a5
20401350:	3fbd                	jal	204012ce <_is_digit>
20401352:	87aa                	mv	a5,a0
20401354:	f3f1                	bnez	a5,20401318 <_atoi+0x12>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:197
  }
  return i;
20401356:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:198
}
2040135a:	853e                	mv	a0,a5
2040135c:	50b2                	lw	ra,44(sp)
2040135e:	5422                	lw	s0,40(sp)
20401360:	6145                	addi	sp,sp,48
20401362:	8082                	ret

20401364 <_out_rev>:
_out_rev():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:203


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
20401364:	7139                	addi	sp,sp,-64
20401366:	de06                	sw	ra,60(sp)
20401368:	dc22                	sw	s0,56(sp)
2040136a:	0080                	addi	s0,sp,64
2040136c:	fca42e23          	sw	a0,-36(s0)
20401370:	fcb42c23          	sw	a1,-40(s0)
20401374:	fcc42a23          	sw	a2,-44(s0)
20401378:	fcd42823          	sw	a3,-48(s0)
2040137c:	fce42623          	sw	a4,-52(s0)
20401380:	fcf42423          	sw	a5,-56(s0)
20401384:	fd042223          	sw	a6,-60(s0)
20401388:	fd142023          	sw	a7,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:204
  const size_t start_idx = idx;
2040138c:	fd442783          	lw	a5,-44(s0)
20401390:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:207

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
20401394:	fc042783          	lw	a5,-64(s0)
20401398:	8b89                	andi	a5,a5,2
2040139a:	e3c1                	bnez	a5,2040141a <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:207 (discriminator 1)
2040139c:	fc042783          	lw	a5,-64(s0)
204013a0:	8b85                	andi	a5,a5,1
204013a2:	efa5                	bnez	a5,2040141a <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:208
    for (size_t i = len; i < width; i++) {
204013a4:	fc842783          	lw	a5,-56(s0)
204013a8:	fef42623          	sw	a5,-20(s0)
204013ac:	a035                	j	204013d8 <_out_rev+0x74>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:209 (discriminator 3)
      out(' ', buffer, idx++, maxlen);
204013ae:	fd442783          	lw	a5,-44(s0)
204013b2:	00178713          	addi	a4,a5,1
204013b6:	fce42a23          	sw	a4,-44(s0)
204013ba:	fdc42703          	lw	a4,-36(s0)
204013be:	fd042683          	lw	a3,-48(s0)
204013c2:	863e                	mv	a2,a5
204013c4:	fd842583          	lw	a1,-40(s0)
204013c8:	02000513          	li	a0,32
204013cc:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:208 (discriminator 3)
    for (size_t i = len; i < width; i++) {
204013ce:	fec42783          	lw	a5,-20(s0)
204013d2:	0785                	addi	a5,a5,1
204013d4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:208 (discriminator 1)
204013d8:	fec42703          	lw	a4,-20(s0)
204013dc:	fc442783          	lw	a5,-60(s0)
204013e0:	fcf767e3          	bltu	a4,a5,204013ae <_out_rev+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:214
    }
  }

  // reverse string
  while (len) {
204013e4:	a81d                	j	2040141a <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:215
    out(buf[--len], buffer, idx++, maxlen);
204013e6:	fc842783          	lw	a5,-56(s0)
204013ea:	17fd                	addi	a5,a5,-1
204013ec:	fcf42423          	sw	a5,-56(s0)
204013f0:	fcc42703          	lw	a4,-52(s0)
204013f4:	fc842783          	lw	a5,-56(s0)
204013f8:	97ba                	add	a5,a5,a4
204013fa:	0007c503          	lbu	a0,0(a5)
204013fe:	fd442783          	lw	a5,-44(s0)
20401402:	00178713          	addi	a4,a5,1
20401406:	fce42a23          	sw	a4,-44(s0)
2040140a:	fdc42703          	lw	a4,-36(s0)
2040140e:	fd042683          	lw	a3,-48(s0)
20401412:	863e                	mv	a2,a5
20401414:	fd842583          	lw	a1,-40(s0)
20401418:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:214
  while (len) {
2040141a:	fc842783          	lw	a5,-56(s0)
2040141e:	f7e1                	bnez	a5,204013e6 <_out_rev+0x82>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:219
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
20401420:	fc042783          	lw	a5,-64(s0)
20401424:	8b89                	andi	a5,a5,2
20401426:	cf85                	beqz	a5,2040145e <_out_rev+0xfa>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:220
    while (idx - start_idx < width) {
20401428:	a00d                	j	2040144a <_out_rev+0xe6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:221
      out(' ', buffer, idx++, maxlen);
2040142a:	fd442783          	lw	a5,-44(s0)
2040142e:	00178713          	addi	a4,a5,1
20401432:	fce42a23          	sw	a4,-44(s0)
20401436:	fdc42703          	lw	a4,-36(s0)
2040143a:	fd042683          	lw	a3,-48(s0)
2040143e:	863e                	mv	a2,a5
20401440:	fd842583          	lw	a1,-40(s0)
20401444:	02000513          	li	a0,32
20401448:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:220
    while (idx - start_idx < width) {
2040144a:	fd442703          	lw	a4,-44(s0)
2040144e:	fe842783          	lw	a5,-24(s0)
20401452:	40f707b3          	sub	a5,a4,a5
20401456:	fc442703          	lw	a4,-60(s0)
2040145a:	fce7e8e3          	bltu	a5,a4,2040142a <_out_rev+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:225
    }
  }

  return idx;
2040145e:	fd442783          	lw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:226
}
20401462:	853e                	mv	a0,a5
20401464:	50f2                	lw	ra,60(sp)
20401466:	5462                	lw	s0,56(sp)
20401468:	6121                	addi	sp,sp,64
2040146a:	8082                	ret

2040146c <_ntoa_format>:
_ntoa_format():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:231


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
2040146c:	7179                	addi	sp,sp,-48
2040146e:	d606                	sw	ra,44(sp)
20401470:	d422                	sw	s0,40(sp)
20401472:	1800                	addi	s0,sp,48
20401474:	fea42623          	sw	a0,-20(s0)
20401478:	feb42423          	sw	a1,-24(s0)
2040147c:	fec42223          	sw	a2,-28(s0)
20401480:	fed42023          	sw	a3,-32(s0)
20401484:	fce42e23          	sw	a4,-36(s0)
20401488:	fcf42c23          	sw	a5,-40(s0)
2040148c:	87c2                	mv	a5,a6
2040148e:	fd142823          	sw	a7,-48(s0)
20401492:	fcf40ba3          	sb	a5,-41(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:233
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
20401496:	441c                	lw	a5,8(s0)
20401498:	8b89                	andi	a5,a5,2
2040149a:	e3d1                	bnez	a5,2040151e <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:234
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
2040149c:	405c                	lw	a5,4(s0)
2040149e:	cb9d                	beqz	a5,204014d4 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:234 (discriminator 1)
204014a0:	441c                	lw	a5,8(s0)
204014a2:	8b85                	andi	a5,a5,1
204014a4:	cb85                	beqz	a5,204014d4 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:234 (discriminator 2)
204014a6:	fd744783          	lbu	a5,-41(s0)
204014aa:	e781                	bnez	a5,204014b2 <_ntoa_format+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:234 (discriminator 3)
204014ac:	441c                	lw	a5,8(s0)
204014ae:	8bb1                	andi	a5,a5,12
204014b0:	c395                	beqz	a5,204014d4 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:235
      width--;
204014b2:	405c                	lw	a5,4(s0)
204014b4:	17fd                	addi	a5,a5,-1
204014b6:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:237
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204014b8:	a831                	j	204014d4 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:238
      buf[len++] = '0';
204014ba:	fd842783          	lw	a5,-40(s0)
204014be:	00178713          	addi	a4,a5,1
204014c2:	fce42c23          	sw	a4,-40(s0)
204014c6:	fdc42703          	lw	a4,-36(s0)
204014ca:	97ba                	add	a5,a5,a4
204014cc:	03000713          	li	a4,48
204014d0:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:237
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204014d4:	fd842703          	lw	a4,-40(s0)
204014d8:	401c                	lw	a5,0(s0)
204014da:	02f77563          	bgeu	a4,a5,20401504 <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:237 (discriminator 1)
204014de:	fd842703          	lw	a4,-40(s0)
204014e2:	47fd                	li	a5,31
204014e4:	fce7fbe3          	bgeu	a5,a4,204014ba <_ntoa_format+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:240
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204014e8:	a831                	j	20401504 <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:241
      buf[len++] = '0';
204014ea:	fd842783          	lw	a5,-40(s0)
204014ee:	00178713          	addi	a4,a5,1
204014f2:	fce42c23          	sw	a4,-40(s0)
204014f6:	fdc42703          	lw	a4,-36(s0)
204014fa:	97ba                	add	a5,a5,a4
204014fc:	03000713          	li	a4,48
20401500:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:240
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20401504:	441c                	lw	a5,8(s0)
20401506:	8b85                	andi	a5,a5,1
20401508:	cb99                	beqz	a5,2040151e <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:240 (discriminator 1)
2040150a:	fd842703          	lw	a4,-40(s0)
2040150e:	405c                	lw	a5,4(s0)
20401510:	00f77763          	bgeu	a4,a5,2040151e <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:240 (discriminator 2)
20401514:	fd842703          	lw	a4,-40(s0)
20401518:	47fd                	li	a5,31
2040151a:	fce7f8e3          	bgeu	a5,a4,204014ea <_ntoa_format+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:246
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
2040151e:	441c                	lw	a5,8(s0)
20401520:	8bc1                	andi	a5,a5,16
20401522:	10078663          	beqz	a5,2040162e <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:247
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
20401526:	441c                	lw	a5,8(s0)
20401528:	4007f793          	andi	a5,a5,1024
2040152c:	e3a1                	bnez	a5,2040156c <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:247 (discriminator 1)
2040152e:	fd842783          	lw	a5,-40(s0)
20401532:	cf8d                	beqz	a5,2040156c <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:247 (discriminator 2)
20401534:	fd842703          	lw	a4,-40(s0)
20401538:	401c                	lw	a5,0(s0)
2040153a:	00f70763          	beq	a4,a5,20401548 <_ntoa_format+0xdc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:247 (discriminator 3)
2040153e:	fd842703          	lw	a4,-40(s0)
20401542:	405c                	lw	a5,4(s0)
20401544:	02f71463          	bne	a4,a5,2040156c <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:248
      len--;
20401548:	fd842783          	lw	a5,-40(s0)
2040154c:	17fd                	addi	a5,a5,-1
2040154e:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:249
      if (len && (base == 16U)) {
20401552:	fd842783          	lw	a5,-40(s0)
20401556:	cb99                	beqz	a5,2040156c <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:249 (discriminator 1)
20401558:	fd042703          	lw	a4,-48(s0)
2040155c:	47c1                	li	a5,16
2040155e:	00f71763          	bne	a4,a5,2040156c <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:250
        len--;
20401562:	fd842783          	lw	a5,-40(s0)
20401566:	17fd                	addi	a5,a5,-1
20401568:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:253
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
2040156c:	fd042703          	lw	a4,-48(s0)
20401570:	47c1                	li	a5,16
20401572:	02f71963          	bne	a4,a5,204015a4 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:253 (discriminator 1)
20401576:	441c                	lw	a5,8(s0)
20401578:	0207f793          	andi	a5,a5,32
2040157c:	e785                	bnez	a5,204015a4 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:253 (discriminator 2)
2040157e:	fd842703          	lw	a4,-40(s0)
20401582:	47fd                	li	a5,31
20401584:	02e7e063          	bltu	a5,a4,204015a4 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:254
      buf[len++] = 'x';
20401588:	fd842783          	lw	a5,-40(s0)
2040158c:	00178713          	addi	a4,a5,1
20401590:	fce42c23          	sw	a4,-40(s0)
20401594:	fdc42703          	lw	a4,-36(s0)
20401598:	97ba                	add	a5,a5,a4
2040159a:	07800713          	li	a4,120
2040159e:	00e78023          	sb	a4,0(a5)
204015a2:	a0a5                	j	2040160a <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:256
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204015a4:	fd042703          	lw	a4,-48(s0)
204015a8:	47c1                	li	a5,16
204015aa:	02f71963          	bne	a4,a5,204015dc <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:256 (discriminator 1)
204015ae:	441c                	lw	a5,8(s0)
204015b0:	0207f793          	andi	a5,a5,32
204015b4:	c785                	beqz	a5,204015dc <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:256 (discriminator 2)
204015b6:	fd842703          	lw	a4,-40(s0)
204015ba:	47fd                	li	a5,31
204015bc:	02e7e063          	bltu	a5,a4,204015dc <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:257
      buf[len++] = 'X';
204015c0:	fd842783          	lw	a5,-40(s0)
204015c4:	00178713          	addi	a4,a5,1
204015c8:	fce42c23          	sw	a4,-40(s0)
204015cc:	fdc42703          	lw	a4,-36(s0)
204015d0:	97ba                	add	a5,a5,a4
204015d2:	05800713          	li	a4,88
204015d6:	00e78023          	sb	a4,0(a5)
204015da:	a805                	j	2040160a <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:259
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204015dc:	fd042703          	lw	a4,-48(s0)
204015e0:	4789                	li	a5,2
204015e2:	02f71463          	bne	a4,a5,2040160a <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:259 (discriminator 1)
204015e6:	fd842703          	lw	a4,-40(s0)
204015ea:	47fd                	li	a5,31
204015ec:	00e7ef63          	bltu	a5,a4,2040160a <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:260
      buf[len++] = 'b';
204015f0:	fd842783          	lw	a5,-40(s0)
204015f4:	00178713          	addi	a4,a5,1
204015f8:	fce42c23          	sw	a4,-40(s0)
204015fc:	fdc42703          	lw	a4,-36(s0)
20401600:	97ba                	add	a5,a5,a4
20401602:	06200713          	li	a4,98
20401606:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:262
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
2040160a:	fd842703          	lw	a4,-40(s0)
2040160e:	47fd                	li	a5,31
20401610:	00e7ef63          	bltu	a5,a4,2040162e <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:263
      buf[len++] = '0';
20401614:	fd842783          	lw	a5,-40(s0)
20401618:	00178713          	addi	a4,a5,1
2040161c:	fce42c23          	sw	a4,-40(s0)
20401620:	fdc42703          	lw	a4,-36(s0)
20401624:	97ba                	add	a5,a5,a4
20401626:	03000713          	li	a4,48
2040162a:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:267
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
2040162e:	fd842703          	lw	a4,-40(s0)
20401632:	47fd                	li	a5,31
20401634:	06e7e463          	bltu	a5,a4,2040169c <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:268
    if (negative) {
20401638:	fd744783          	lbu	a5,-41(s0)
2040163c:	cf99                	beqz	a5,2040165a <_ntoa_format+0x1ee>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:269
      buf[len++] = '-';
2040163e:	fd842783          	lw	a5,-40(s0)
20401642:	00178713          	addi	a4,a5,1
20401646:	fce42c23          	sw	a4,-40(s0)
2040164a:	fdc42703          	lw	a4,-36(s0)
2040164e:	97ba                	add	a5,a5,a4
20401650:	02d00713          	li	a4,45
20401654:	00e78023          	sb	a4,0(a5)
20401658:	a091                	j	2040169c <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:271
    }
    else if (flags & FLAGS_PLUS) {
2040165a:	441c                	lw	a5,8(s0)
2040165c:	8b91                	andi	a5,a5,4
2040165e:	cf99                	beqz	a5,2040167c <_ntoa_format+0x210>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:272
      buf[len++] = '+';  // ignore the space if the '+' exists
20401660:	fd842783          	lw	a5,-40(s0)
20401664:	00178713          	addi	a4,a5,1
20401668:	fce42c23          	sw	a4,-40(s0)
2040166c:	fdc42703          	lw	a4,-36(s0)
20401670:	97ba                	add	a5,a5,a4
20401672:	02b00713          	li	a4,43
20401676:	00e78023          	sb	a4,0(a5)
2040167a:	a00d                	j	2040169c <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:274
    }
    else if (flags & FLAGS_SPACE) {
2040167c:	441c                	lw	a5,8(s0)
2040167e:	8ba1                	andi	a5,a5,8
20401680:	cf91                	beqz	a5,2040169c <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:275
      buf[len++] = ' ';
20401682:	fd842783          	lw	a5,-40(s0)
20401686:	00178713          	addi	a4,a5,1
2040168a:	fce42c23          	sw	a4,-40(s0)
2040168e:	fdc42703          	lw	a4,-36(s0)
20401692:	97ba                	add	a5,a5,a4
20401694:	02000713          	li	a4,32
20401698:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:279
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
2040169c:	00842883          	lw	a7,8(s0)
204016a0:	00442803          	lw	a6,4(s0)
204016a4:	fd842783          	lw	a5,-40(s0)
204016a8:	fdc42703          	lw	a4,-36(s0)
204016ac:	fe042683          	lw	a3,-32(s0)
204016b0:	fe442603          	lw	a2,-28(s0)
204016b4:	fe842583          	lw	a1,-24(s0)
204016b8:	fec42503          	lw	a0,-20(s0)
204016bc:	3165                	jal	20401364 <_out_rev>
204016be:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:280
}
204016c0:	853e                	mv	a0,a5
204016c2:	50b2                	lw	ra,44(sp)
204016c4:	5422                	lw	s0,40(sp)
204016c6:	6145                	addi	sp,sp,48
204016c8:	8082                	ret

204016ca <_ntoa_long>:
_ntoa_long():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:285


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
204016ca:	7159                	addi	sp,sp,-112
204016cc:	d686                	sw	ra,108(sp)
204016ce:	d4a2                	sw	s0,104(sp)
204016d0:	1880                	addi	s0,sp,112
204016d2:	faa42e23          	sw	a0,-68(s0)
204016d6:	fab42c23          	sw	a1,-72(s0)
204016da:	fac42a23          	sw	a2,-76(s0)
204016de:	fad42823          	sw	a3,-80(s0)
204016e2:	fae42623          	sw	a4,-84(s0)
204016e6:	fb042223          	sw	a6,-92(s0)
204016ea:	fb142023          	sw	a7,-96(s0)
204016ee:	faf405a3          	sb	a5,-85(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:287
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
204016f2:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:290

  // no hash for 0 values
  if (!value) {
204016f6:	fac42783          	lw	a5,-84(s0)
204016fa:	e781                	bnez	a5,20401702 <_ntoa_long+0x38>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:291
    flags &= ~FLAGS_HASH;
204016fc:	405c                	lw	a5,4(s0)
204016fe:	9bbd                	andi	a5,a5,-17
20401700:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:295
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
20401702:	405c                	lw	a5,4(s0)
20401704:	4007f793          	andi	a5,a5,1024
20401708:	c781                	beqz	a5,20401710 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:295 (discriminator 1)
2040170a:	fac42783          	lw	a5,-84(s0)
2040170e:	c3c9                	beqz	a5,20401790 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:297
    do {
      const char digit = (char)(value % base);
20401710:	fac42703          	lw	a4,-84(s0)
20401714:	fa442783          	lw	a5,-92(s0)
20401718:	02f777b3          	remu	a5,a4,a5
2040171c:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:298
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
20401720:	feb44703          	lbu	a4,-21(s0)
20401724:	47a5                	li	a5,9
20401726:	00e7e963          	bltu	a5,a4,20401738 <_ntoa_long+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:298 (discriminator 1)
2040172a:	feb44783          	lbu	a5,-21(s0)
2040172e:	03078793          	addi	a5,a5,48
20401732:	0ff7f793          	andi	a5,a5,255
20401736:	a015                	j	2040175a <_ntoa_long+0x90>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:298 (discriminator 2)
20401738:	405c                	lw	a5,4(s0)
2040173a:	0207f793          	andi	a5,a5,32
2040173e:	c781                	beqz	a5,20401746 <_ntoa_long+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:298 (discriminator 4)
20401740:	04100793          	li	a5,65
20401744:	a019                	j	2040174a <_ntoa_long+0x80>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:298 (discriminator 5)
20401746:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:298 (discriminator 7)
2040174a:	feb44703          	lbu	a4,-21(s0)
2040174e:	97ba                	add	a5,a5,a4
20401750:	0ff7f793          	andi	a5,a5,255
20401754:	17d9                	addi	a5,a5,-10
20401756:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:298 (discriminator 8)
2040175a:	fec42703          	lw	a4,-20(s0)
2040175e:	00170693          	addi	a3,a4,1
20401762:	fed42623          	sw	a3,-20(s0)
20401766:	ff040693          	addi	a3,s0,-16
2040176a:	9736                	add	a4,a4,a3
2040176c:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:299 (discriminator 8)
      value /= base;
20401770:	fac42703          	lw	a4,-84(s0)
20401774:	fa442783          	lw	a5,-92(s0)
20401778:	02f757b3          	divu	a5,a4,a5
2040177c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:300 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
20401780:	fac42783          	lw	a5,-84(s0)
20401784:	c791                	beqz	a5,20401790 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:300 (discriminator 1)
20401786:	fec42703          	lw	a4,-20(s0)
2040178a:	47fd                	li	a5,31
2040178c:	f8e7f2e3          	bgeu	a5,a4,20401710 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:303
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20401790:	fab44683          	lbu	a3,-85(s0)
20401794:	fc840713          	addi	a4,s0,-56
20401798:	405c                	lw	a5,4(s0)
2040179a:	c43e                	sw	a5,8(sp)
2040179c:	401c                	lw	a5,0(s0)
2040179e:	c23e                	sw	a5,4(sp)
204017a0:	fa042783          	lw	a5,-96(s0)
204017a4:	c03e                	sw	a5,0(sp)
204017a6:	fa442883          	lw	a7,-92(s0)
204017aa:	8836                	mv	a6,a3
204017ac:	fec42783          	lw	a5,-20(s0)
204017b0:	fb042683          	lw	a3,-80(s0)
204017b4:	fb442603          	lw	a2,-76(s0)
204017b8:	fb842583          	lw	a1,-72(s0)
204017bc:	fbc42503          	lw	a0,-68(s0)
204017c0:	3175                	jal	2040146c <_ntoa_format>
204017c2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:304
}
204017c4:	853e                	mv	a0,a5
204017c6:	50b6                	lw	ra,108(sp)
204017c8:	5426                	lw	s0,104(sp)
204017ca:	6165                	addi	sp,sp,112
204017cc:	8082                	ret

204017ce <_ntoa_long_long>:
_ntoa_long_long():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:310


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
204017ce:	7119                	addi	sp,sp,-128
204017d0:	d686                	sw	ra,108(sp)
204017d2:	d4a2                	sw	s0,104(sp)
204017d4:	1880                	addi	s0,sp,112
204017d6:	faa42e23          	sw	a0,-68(s0)
204017da:	fab42c23          	sw	a1,-72(s0)
204017de:	fac42a23          	sw	a2,-76(s0)
204017e2:	fad42823          	sw	a3,-80(s0)
204017e6:	fae42423          	sw	a4,-88(s0)
204017ea:	faf42623          	sw	a5,-84(s0)
204017ee:	87c2                	mv	a5,a6
204017f0:	01142623          	sw	a7,12(s0)
204017f4:	faf403a3          	sb	a5,-89(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:312
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
204017f8:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:315

  // no hash for 0 values
  if (!value) {
204017fc:	fa842783          	lw	a5,-88(s0)
20401800:	fac42703          	lw	a4,-84(s0)
20401804:	8fd9                	or	a5,a5,a4
20401806:	e781                	bnez	a5,2040180e <_ntoa_long_long+0x40>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:316
    flags &= ~FLAGS_HASH;
20401808:	4c5c                	lw	a5,28(s0)
2040180a:	9bbd                	andi	a5,a5,-17
2040180c:	cc5c                	sw	a5,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:320
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
2040180e:	4c5c                	lw	a5,28(s0)
20401810:	4007f793          	andi	a5,a5,1024
20401814:	c799                	beqz	a5,20401822 <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:320 (discriminator 1)
20401816:	fa842783          	lw	a5,-88(s0)
2040181a:	fac42703          	lw	a4,-84(s0)
2040181e:	8fd9                	or	a5,a5,a4
20401820:	c3c5                	beqz	a5,204018c0 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:322
    do {
      const char digit = (char)(value % base);
20401822:	fa842783          	lw	a5,-88(s0)
20401826:	fac42803          	lw	a6,-84(s0)
2040182a:	4450                	lw	a2,12(s0)
2040182c:	4814                	lw	a3,16(s0)
2040182e:	853e                	mv	a0,a5
20401830:	85c2                	mv	a1,a6
20401832:	47d010ef          	jal	ra,204034ae <__umoddi3>
20401836:	87aa                	mv	a5,a0
20401838:	882e                	mv	a6,a1
2040183a:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:323
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
2040183e:	feb44703          	lbu	a4,-21(s0)
20401842:	47a5                	li	a5,9
20401844:	00e7e963          	bltu	a5,a4,20401856 <_ntoa_long_long+0x88>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:323 (discriminator 1)
20401848:	feb44783          	lbu	a5,-21(s0)
2040184c:	03078793          	addi	a5,a5,48
20401850:	0ff7f793          	andi	a5,a5,255
20401854:	a015                	j	20401878 <_ntoa_long_long+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:323 (discriminator 2)
20401856:	4c5c                	lw	a5,28(s0)
20401858:	0207f793          	andi	a5,a5,32
2040185c:	c781                	beqz	a5,20401864 <_ntoa_long_long+0x96>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:323 (discriminator 4)
2040185e:	04100793          	li	a5,65
20401862:	a019                	j	20401868 <_ntoa_long_long+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:323 (discriminator 5)
20401864:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:323 (discriminator 7)
20401868:	feb44703          	lbu	a4,-21(s0)
2040186c:	97ba                	add	a5,a5,a4
2040186e:	0ff7f793          	andi	a5,a5,255
20401872:	17d9                	addi	a5,a5,-10
20401874:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:323 (discriminator 8)
20401878:	fec42703          	lw	a4,-20(s0)
2040187c:	00170693          	addi	a3,a4,1
20401880:	fed42623          	sw	a3,-20(s0)
20401884:	ff040693          	addi	a3,s0,-16
20401888:	9736                	add	a4,a4,a3
2040188a:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:324 (discriminator 8)
      value /= base;
2040188e:	4450                	lw	a2,12(s0)
20401890:	4814                	lw	a3,16(s0)
20401892:	fa842503          	lw	a0,-88(s0)
20401896:	fac42583          	lw	a1,-84(s0)
2040189a:	0b7010ef          	jal	ra,20403150 <__udivdi3>
2040189e:	87aa                	mv	a5,a0
204018a0:	882e                	mv	a6,a1
204018a2:	faf42423          	sw	a5,-88(s0)
204018a6:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:325 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
204018aa:	fa842783          	lw	a5,-88(s0)
204018ae:	fac42703          	lw	a4,-84(s0)
204018b2:	8fd9                	or	a5,a5,a4
204018b4:	c791                	beqz	a5,204018c0 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:325 (discriminator 1)
204018b6:	fec42703          	lw	a4,-20(s0)
204018ba:	47fd                	li	a5,31
204018bc:	f6e7f3e3          	bgeu	a5,a4,20401822 <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:328
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
204018c0:	4450                	lw	a2,12(s0)
204018c2:	fa744683          	lbu	a3,-89(s0)
204018c6:	fc840713          	addi	a4,s0,-56
204018ca:	4c5c                	lw	a5,28(s0)
204018cc:	c43e                	sw	a5,8(sp)
204018ce:	4c1c                	lw	a5,24(s0)
204018d0:	c23e                	sw	a5,4(sp)
204018d2:	485c                	lw	a5,20(s0)
204018d4:	c03e                	sw	a5,0(sp)
204018d6:	88b2                	mv	a7,a2
204018d8:	8836                	mv	a6,a3
204018da:	fec42783          	lw	a5,-20(s0)
204018de:	fb042683          	lw	a3,-80(s0)
204018e2:	fb442603          	lw	a2,-76(s0)
204018e6:	fb842583          	lw	a1,-72(s0)
204018ea:	fbc42503          	lw	a0,-68(s0)
204018ee:	3ebd                	jal	2040146c <_ntoa_format>
204018f0:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:329
}
204018f2:	853e                	mv	a0,a5
204018f4:	50b6                	lw	ra,108(sp)
204018f6:	5426                	lw	s0,104(sp)
204018f8:	6109                	addi	sp,sp,128
204018fa:	8082                	ret

204018fc <_ftoa>:
_ftoa():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:343
#endif


// internal ftoa for fixed decimal floating point
static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
204018fc:	7175                	addi	sp,sp,-144
204018fe:	c706                	sw	ra,140(sp)
20401900:	c522                	sw	s0,136(sp)
20401902:	c326                	sw	s1,132(sp)
20401904:	0900                	addi	s0,sp,144
20401906:	f8a42e23          	sw	a0,-100(s0)
2040190a:	f8b42c23          	sw	a1,-104(s0)
2040190e:	f8c42a23          	sw	a2,-108(s0)
20401912:	f8d42823          	sw	a3,-112(s0)
20401916:	f8e42423          	sw	a4,-120(s0)
2040191a:	f8f42623          	sw	a5,-116(s0)
2040191e:	f9042223          	sw	a6,-124(s0)
20401922:	f9142023          	sw	a7,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:345
  char buf[PRINTF_FTOA_BUFFER_SIZE];
  size_t len  = 0U;
20401926:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:346
  double diff = 0.0;
2040192a:	fc042823          	sw	zero,-48(s0)
2040192e:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:352

  // powers of 10
  static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };

  // test for special values
  if (value != value)
20401932:	f8842603          	lw	a2,-120(s0)
20401936:	f8c42683          	lw	a3,-116(s0)
2040193a:	f8842503          	lw	a0,-120(s0)
2040193e:	f8c42583          	lw	a1,-116(s0)
20401942:	1e7020ef          	jal	ra,20404328 <__eqdf2>
20401946:	87aa                	mv	a5,a0
20401948:	c78d                	beqz	a5,20401972 <_ftoa+0x76>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:353
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
2040194a:	00042883          	lw	a7,0(s0)
2040194e:	f8042803          	lw	a6,-128(s0)
20401952:	478d                	li	a5,3
20401954:	20409737          	lui	a4,0x20409
20401958:	c0870713          	addi	a4,a4,-1016 # 20408c08 <_exit+0x19a>
2040195c:	f9042683          	lw	a3,-112(s0)
20401960:	f9442603          	lw	a2,-108(s0)
20401964:	f9842583          	lw	a1,-104(s0)
20401968:	f9c42503          	lw	a0,-100(s0)
2040196c:	3ae5                	jal	20401364 <_out_rev>
2040196e:	87aa                	mv	a5,a0
20401970:	ab91                	j	20401ec4 <_ftoa+0x5c8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:354
  if (value < -DBL_MAX)
20401972:	204097b7          	lui	a5,0x20409
20401976:	c207a603          	lw	a2,-992(a5) # 20408c20 <_exit+0x1b2>
2040197a:	c247a683          	lw	a3,-988(a5)
2040197e:	f8842503          	lw	a0,-120(s0)
20401982:	f8c42583          	lw	a1,-116(s0)
20401986:	2b1020ef          	jal	ra,20404436 <__ledf2>
2040198a:	87aa                	mv	a5,a0
2040198c:	0207d763          	bgez	a5,204019ba <_ftoa+0xbe>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:355
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
20401990:	00042883          	lw	a7,0(s0)
20401994:	f8042803          	lw	a6,-128(s0)
20401998:	4791                	li	a5,4
2040199a:	20409737          	lui	a4,0x20409
2040199e:	c0c70713          	addi	a4,a4,-1012 # 20408c0c <_exit+0x19e>
204019a2:	f9042683          	lw	a3,-112(s0)
204019a6:	f9442603          	lw	a2,-108(s0)
204019aa:	f9842583          	lw	a1,-104(s0)
204019ae:	f9c42503          	lw	a0,-100(s0)
204019b2:	9b3ff0ef          	jal	ra,20401364 <_out_rev>
204019b6:	87aa                	mv	a5,a0
204019b8:	a331                	j	20401ec4 <_ftoa+0x5c8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:356
  if (value > DBL_MAX)
204019ba:	204097b7          	lui	a5,0x20409
204019be:	c287a603          	lw	a2,-984(a5) # 20408c28 <_exit+0x1ba>
204019c2:	c2c7a683          	lw	a3,-980(a5)
204019c6:	f8842503          	lw	a0,-120(s0)
204019ca:	f8c42583          	lw	a1,-116(s0)
204019ce:	1c5020ef          	jal	ra,20404392 <__gedf2>
204019d2:	87aa                	mv	a5,a0
204019d4:	04f05463          	blez	a5,20401a1c <_ftoa+0x120>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:357
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
204019d8:	401c                	lw	a5,0(s0)
204019da:	8b91                	andi	a5,a5,4
204019dc:	c791                	beqz	a5,204019e8 <_ftoa+0xec>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:357 (discriminator 1)
204019de:	204097b7          	lui	a5,0x20409
204019e2:	c1478713          	addi	a4,a5,-1004 # 20408c14 <_exit+0x1a6>
204019e6:	a029                	j	204019f0 <_ftoa+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:357 (discriminator 2)
204019e8:	204097b7          	lui	a5,0x20409
204019ec:	c1c78713          	addi	a4,a5,-996 # 20408c1c <_exit+0x1ae>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:357 (discriminator 4)
204019f0:	401c                	lw	a5,0(s0)
204019f2:	8b91                	andi	a5,a5,4
204019f4:	c399                	beqz	a5,204019fa <_ftoa+0xfe>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:357 (discriminator 5)
204019f6:	4791                	li	a5,4
204019f8:	a011                	j	204019fc <_ftoa+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:357 (discriminator 6)
204019fa:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:357 (discriminator 8)
204019fc:	00042883          	lw	a7,0(s0)
20401a00:	f8042803          	lw	a6,-128(s0)
20401a04:	f9042683          	lw	a3,-112(s0)
20401a08:	f9442603          	lw	a2,-108(s0)
20401a0c:	f9842583          	lw	a1,-104(s0)
20401a10:	f9c42503          	lw	a0,-100(s0)
20401a14:	951ff0ef          	jal	ra,20401364 <_out_rev>
20401a18:	87aa                	mv	a5,a0
20401a1a:	a16d                	j	20401ec4 <_ftoa+0x5c8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:361

  // test for very large values
  // standard printf behavior is to print EVERY whole number digit -- which could be 100s of characters overflowing your buffers == bad
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
20401a1c:	204097b7          	lui	a5,0x20409
20401a20:	c307a603          	lw	a2,-976(a5) # 20408c30 <_exit+0x1c2>
20401a24:	c347a683          	lw	a3,-972(a5)
20401a28:	f8842503          	lw	a0,-120(s0)
20401a2c:	f8c42583          	lw	a1,-116(s0)
20401a30:	163020ef          	jal	ra,20404392 <__gedf2>
20401a34:	87aa                	mv	a5,a0
20401a36:	02f04163          	bgtz	a5,20401a58 <_ftoa+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:361 (discriminator 1)
20401a3a:	204097b7          	lui	a5,0x20409
20401a3e:	c387a603          	lw	a2,-968(a5) # 20408c38 <_exit+0x1ca>
20401a42:	c3c7a683          	lw	a3,-964(a5)
20401a46:	f8842503          	lw	a0,-120(s0)
20401a4a:	f8c42583          	lw	a1,-116(s0)
20401a4e:	1e9020ef          	jal	ra,20404436 <__ledf2>
20401a52:	87aa                	mv	a5,a0
20401a54:	0207d763          	bgez	a5,20401a82 <_ftoa+0x186>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:363
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
20401a58:	401c                	lw	a5,0(s0)
20401a5a:	c03e                	sw	a5,0(sp)
20401a5c:	f8042883          	lw	a7,-128(s0)
20401a60:	f8442803          	lw	a6,-124(s0)
20401a64:	f8842703          	lw	a4,-120(s0)
20401a68:	f8c42783          	lw	a5,-116(s0)
20401a6c:	f9042683          	lw	a3,-112(s0)
20401a70:	f9442603          	lw	a2,-108(s0)
20401a74:	f9842583          	lw	a1,-104(s0)
20401a78:	f9c42503          	lw	a0,-100(s0)
20401a7c:	2991                	jal	20401ed0 <_etoa>
20401a7e:	87aa                	mv	a5,a0
20401a80:	a191                	j	20401ec4 <_ftoa+0x5c8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:370
    return 0U;
#endif
  }

  // test for negative
  bool negative = false;
20401a82:	fe0405a3          	sb	zero,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:371
  if (value < 0) {
20401a86:	4601                	li	a2,0
20401a88:	4681                	li	a3,0
20401a8a:	f8842503          	lw	a0,-120(s0)
20401a8e:	f8c42583          	lw	a1,-116(s0)
20401a92:	1a5020ef          	jal	ra,20404436 <__ledf2>
20401a96:	87aa                	mv	a5,a0
20401a98:	0207d363          	bgez	a5,20401abe <_ftoa+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:372
    negative = true;
20401a9c:	4785                	li	a5,1
20401a9e:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:373
    value = 0 - value;
20401aa2:	f8842603          	lw	a2,-120(s0)
20401aa6:	f8c42683          	lw	a3,-116(s0)
20401aaa:	4501                	li	a0,0
20401aac:	4581                	li	a1,0
20401aae:	669020ef          	jal	ra,20404916 <__subdf3>
20401ab2:	87aa                	mv	a5,a0
20401ab4:	882e                	mv	a6,a1
20401ab6:	f8f42423          	sw	a5,-120(s0)
20401aba:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:377
  }

  // set default precision, if not set explicitly
  if (!(flags & FLAGS_PRECISION)) {
20401abe:	401c                	lw	a5,0(s0)
20401ac0:	4007f793          	andi	a5,a5,1024
20401ac4:	e79d                	bnez	a5,20401af2 <_ftoa+0x1f6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:378
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
20401ac6:	4799                	li	a5,6
20401ac8:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:381
  }
  // limit precision to 9, cause a prec >= 10 can lead to overflow errors
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20401acc:	a01d                	j	20401af2 <_ftoa+0x1f6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:382
    buf[len++] = '0';
20401ace:	fec42783          	lw	a5,-20(s0)
20401ad2:	00178713          	addi	a4,a5,1
20401ad6:	fee42623          	sw	a4,-20(s0)
20401ada:	ff040713          	addi	a4,s0,-16
20401ade:	97ba                	add	a5,a5,a4
20401ae0:	03000713          	li	a4,48
20401ae4:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:383
    prec--;
20401ae8:	f8442783          	lw	a5,-124(s0)
20401aec:	17fd                	addi	a5,a5,-1
20401aee:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:381
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20401af2:	fec42703          	lw	a4,-20(s0)
20401af6:	47fd                	li	a5,31
20401af8:	00e7e763          	bltu	a5,a4,20401b06 <_ftoa+0x20a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:381 (discriminator 1)
20401afc:	f8442703          	lw	a4,-124(s0)
20401b00:	47a5                	li	a5,9
20401b02:	fce7e6e3          	bltu	a5,a4,20401ace <_ftoa+0x1d2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:386
  }

  int whole = (int)value;
20401b06:	f8842503          	lw	a0,-120(s0)
20401b0a:	f8c42583          	lw	a1,-116(s0)
20401b0e:	3fe030ef          	jal	ra,20404f0c <__fixdfsi>
20401b12:	87aa                	mv	a5,a0
20401b14:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:387
  double tmp = (value - whole) * pow10[prec];
20401b18:	fe442503          	lw	a0,-28(s0)
20401b1c:	4b0030ef          	jal	ra,20404fcc <__floatsidf>
20401b20:	87aa                	mv	a5,a0
20401b22:	882e                	mv	a6,a1
20401b24:	863e                	mv	a2,a5
20401b26:	86c2                	mv	a3,a6
20401b28:	f8842503          	lw	a0,-120(s0)
20401b2c:	f8c42583          	lw	a1,-116(s0)
20401b30:	5e7020ef          	jal	ra,20404916 <__subdf3>
20401b34:	87aa                	mv	a5,a0
20401b36:	882e                	mv	a6,a1
20401b38:	853e                	mv	a0,a5
20401b3a:	85c2                	mv	a1,a6
20401b3c:	204097b7          	lui	a5,0x20409
20401b40:	e9878713          	addi	a4,a5,-360 # 20408e98 <pow10.2193>
20401b44:	f8442783          	lw	a5,-124(s0)
20401b48:	078e                	slli	a5,a5,0x3
20401b4a:	97ba                	add	a5,a5,a4
20401b4c:	0047a803          	lw	a6,4(a5)
20401b50:	439c                	lw	a5,0(a5)
20401b52:	863e                	mv	a2,a5
20401b54:	86c2                	mv	a3,a6
20401b56:	185020ef          	jal	ra,204044da <__muldf3>
20401b5a:	87aa                	mv	a5,a0
20401b5c:	882e                	mv	a6,a1
20401b5e:	fcf42423          	sw	a5,-56(s0)
20401b62:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:388
  unsigned long frac = (unsigned long)tmp;
20401b66:	fc842503          	lw	a0,-56(s0)
20401b6a:	fcc42583          	lw	a1,-52(s0)
20401b6e:	402030ef          	jal	ra,20404f70 <__fixunsdfsi>
20401b72:	87aa                	mv	a5,a0
20401b74:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:389
  diff = tmp - frac;
20401b78:	fe042503          	lw	a0,-32(s0)
20401b7c:	4ba030ef          	jal	ra,20405036 <__floatunsidf>
20401b80:	87aa                	mv	a5,a0
20401b82:	882e                	mv	a6,a1
20401b84:	863e                	mv	a2,a5
20401b86:	86c2                	mv	a3,a6
20401b88:	fc842503          	lw	a0,-56(s0)
20401b8c:	fcc42583          	lw	a1,-52(s0)
20401b90:	587020ef          	jal	ra,20404916 <__subdf3>
20401b94:	87aa                	mv	a5,a0
20401b96:	882e                	mv	a6,a1
20401b98:	fcf42823          	sw	a5,-48(s0)
20401b9c:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:391

  if (diff > 0.5) {
20401ba0:	204097b7          	lui	a5,0x20409
20401ba4:	c407a603          	lw	a2,-960(a5) # 20408c40 <_exit+0x1d2>
20401ba8:	c447a683          	lw	a3,-956(a5)
20401bac:	fd042503          	lw	a0,-48(s0)
20401bb0:	fd442583          	lw	a1,-44(s0)
20401bb4:	7de020ef          	jal	ra,20404392 <__gedf2>
20401bb8:	87aa                	mv	a5,a0
20401bba:	04f05563          	blez	a5,20401c04 <_ftoa+0x308>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:392
    ++frac;
20401bbe:	fe042783          	lw	a5,-32(s0)
20401bc2:	0785                	addi	a5,a5,1
20401bc4:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:394
    // handle rollover, e.g. case 0.99 with prec 1 is 1.0
    if (frac >= pow10[prec]) {
20401bc8:	fe042503          	lw	a0,-32(s0)
20401bcc:	46a030ef          	jal	ra,20405036 <__floatunsidf>
20401bd0:	204097b7          	lui	a5,0x20409
20401bd4:	e9878713          	addi	a4,a5,-360 # 20408e98 <pow10.2193>
20401bd8:	f8442783          	lw	a5,-124(s0)
20401bdc:	078e                	slli	a5,a5,0x3
20401bde:	97ba                	add	a5,a5,a4
20401be0:	0047a803          	lw	a6,4(a5)
20401be4:	439c                	lw	a5,0(a5)
20401be6:	863e                	mv	a2,a5
20401be8:	86c2                	mv	a3,a6
20401bea:	7a8020ef          	jal	ra,20404392 <__gedf2>
20401bee:	87aa                	mv	a5,a0
20401bf0:	0407c563          	bltz	a5,20401c3a <_ftoa+0x33e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:395
      frac = 0;
20401bf4:	fe042023          	sw	zero,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:396
      ++whole;
20401bf8:	fe442783          	lw	a5,-28(s0)
20401bfc:	0785                	addi	a5,a5,1
20401bfe:	fef42223          	sw	a5,-28(s0)
20401c02:	a825                	j	20401c3a <_ftoa+0x33e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:399
    }
  }
  else if (diff < 0.5) {
20401c04:	204097b7          	lui	a5,0x20409
20401c08:	c407a603          	lw	a2,-960(a5) # 20408c40 <_exit+0x1d2>
20401c0c:	c447a683          	lw	a3,-956(a5)
20401c10:	fd042503          	lw	a0,-48(s0)
20401c14:	fd442583          	lw	a1,-44(s0)
20401c18:	01f020ef          	jal	ra,20404436 <__ledf2>
20401c1c:	87aa                	mv	a5,a0
20401c1e:	0007ce63          	bltz	a5,20401c3a <_ftoa+0x33e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:401
  }
  else if ((frac == 0U) || (frac & 1U)) {
20401c22:	fe042783          	lw	a5,-32(s0)
20401c26:	c789                	beqz	a5,20401c30 <_ftoa+0x334>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:401 (discriminator 1)
20401c28:	fe042783          	lw	a5,-32(s0)
20401c2c:	8b85                	andi	a5,a5,1
20401c2e:	c791                	beqz	a5,20401c3a <_ftoa+0x33e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:403
    // if halfway, round up if odd OR if last digit is 0
    ++frac;
20401c30:	fe042783          	lw	a5,-32(s0)
20401c34:	0785                	addi	a5,a5,1
20401c36:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:406
  }

  if (prec == 0U) {
20401c3a:	f8442783          	lw	a5,-124(s0)
20401c3e:	e7d9                	bnez	a5,20401ccc <_ftoa+0x3d0>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:407
    diff = value - (double)whole;
20401c40:	fe442503          	lw	a0,-28(s0)
20401c44:	388030ef          	jal	ra,20404fcc <__floatsidf>
20401c48:	87aa                	mv	a5,a0
20401c4a:	882e                	mv	a6,a1
20401c4c:	863e                	mv	a2,a5
20401c4e:	86c2                	mv	a3,a6
20401c50:	f8842503          	lw	a0,-120(s0)
20401c54:	f8c42583          	lw	a1,-116(s0)
20401c58:	4bf020ef          	jal	ra,20404916 <__subdf3>
20401c5c:	87aa                	mv	a5,a0
20401c5e:	882e                	mv	a6,a1
20401c60:	fcf42823          	sw	a5,-48(s0)
20401c64:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:408
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
20401c68:	4485                	li	s1,1
20401c6a:	204097b7          	lui	a5,0x20409
20401c6e:	c407a603          	lw	a2,-960(a5) # 20408c40 <_exit+0x1d2>
20401c72:	c447a683          	lw	a3,-956(a5)
20401c76:	fd042503          	lw	a0,-48(s0)
20401c7a:	fd442583          	lw	a1,-44(s0)
20401c7e:	7b8020ef          	jal	ra,20404436 <__ledf2>
20401c82:	87aa                	mv	a5,a0
20401c84:	0007c363          	bltz	a5,20401c8a <_ftoa+0x38e>
20401c88:	4481                	li	s1,0
20401c8a:	0ff4f793          	andi	a5,s1,255
20401c8e:	0017c793          	xori	a5,a5,1
20401c92:	0ff7f793          	andi	a5,a5,255
20401c96:	e385                	bnez	a5,20401cb6 <_ftoa+0x3ba>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:408 (discriminator 2)
20401c98:	204097b7          	lui	a5,0x20409
20401c9c:	c407a603          	lw	a2,-960(a5) # 20408c40 <_exit+0x1d2>
20401ca0:	c447a683          	lw	a3,-956(a5)
20401ca4:	fd042503          	lw	a0,-48(s0)
20401ca8:	fd442583          	lw	a1,-44(s0)
20401cac:	6e6020ef          	jal	ra,20404392 <__gedf2>
20401cb0:	87aa                	mv	a5,a0
20401cb2:	0cf05a63          	blez	a5,20401d86 <_ftoa+0x48a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:408 (discriminator 3)
20401cb6:	fe442783          	lw	a5,-28(s0)
20401cba:	8b85                	andi	a5,a5,1
20401cbc:	10078663          	beqz	a5,20401dc8 <_ftoa+0x4cc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:411
      // exactly 0.5 and ODD, then round up
      // 1.5 -> 2, but 2.5 -> 2
      ++whole;
20401cc0:	fe442783          	lw	a5,-28(s0)
20401cc4:	0785                	addi	a5,a5,1
20401cc6:	fef42223          	sw	a5,-28(s0)
20401cca:	a8fd                	j	20401dc8 <_ftoa+0x4cc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:415
    }
  }
  else {
    unsigned int count = prec;
20401ccc:	f8442783          	lw	a5,-124(s0)
20401cd0:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:417
    // now do fractional part, as an unsigned number
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401cd4:	a0b1                	j	20401d20 <_ftoa+0x424>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:418
      --count;
20401cd6:	fdc42783          	lw	a5,-36(s0)
20401cda:	17fd                	addi	a5,a5,-1
20401cdc:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:419
      buf[len++] = (char)(48U + (frac % 10U));
20401ce0:	fe042703          	lw	a4,-32(s0)
20401ce4:	47a9                	li	a5,10
20401ce6:	02f777b3          	remu	a5,a4,a5
20401cea:	0ff7f713          	andi	a4,a5,255
20401cee:	fec42783          	lw	a5,-20(s0)
20401cf2:	00178693          	addi	a3,a5,1
20401cf6:	fed42623          	sw	a3,-20(s0)
20401cfa:	03070713          	addi	a4,a4,48
20401cfe:	0ff77713          	andi	a4,a4,255
20401d02:	ff040693          	addi	a3,s0,-16
20401d06:	97b6                	add	a5,a5,a3
20401d08:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:420
      if (!(frac /= 10U)) {
20401d0c:	fe042703          	lw	a4,-32(s0)
20401d10:	47a9                	li	a5,10
20401d12:	02f757b3          	divu	a5,a4,a5
20401d16:	fef42023          	sw	a5,-32(s0)
20401d1a:	fe042783          	lw	a5,-32(s0)
20401d1e:	c799                	beqz	a5,20401d2c <_ftoa+0x430>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:417
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401d20:	fec42703          	lw	a4,-20(s0)
20401d24:	47fd                	li	a5,31
20401d26:	fae7f8e3          	bgeu	a5,a4,20401cd6 <_ftoa+0x3da>
20401d2a:	a005                	j	20401d4a <_ftoa+0x44e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:421
        break;
20401d2c:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:425
      }
    }
    // add extra 0s
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20401d2e:	a831                	j	20401d4a <_ftoa+0x44e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:426
      buf[len++] = '0';
20401d30:	fec42783          	lw	a5,-20(s0)
20401d34:	00178713          	addi	a4,a5,1
20401d38:	fee42623          	sw	a4,-20(s0)
20401d3c:	ff040713          	addi	a4,s0,-16
20401d40:	97ba                	add	a5,a5,a4
20401d42:	03000713          	li	a4,48
20401d46:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:425
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20401d4a:	fec42703          	lw	a4,-20(s0)
20401d4e:	47fd                	li	a5,31
20401d50:	00e7e963          	bltu	a5,a4,20401d62 <_ftoa+0x466>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:425 (discriminator 1)
20401d54:	fdc42783          	lw	a5,-36(s0)
20401d58:	fff78713          	addi	a4,a5,-1
20401d5c:	fce42e23          	sw	a4,-36(s0)
20401d60:	fbe1                	bnez	a5,20401d30 <_ftoa+0x434>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:428
    }
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
20401d62:	fec42703          	lw	a4,-20(s0)
20401d66:	47fd                	li	a5,31
20401d68:	06e7e063          	bltu	a5,a4,20401dc8 <_ftoa+0x4cc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:430
      // add decimal
      buf[len++] = '.';
20401d6c:	fec42783          	lw	a5,-20(s0)
20401d70:	00178713          	addi	a4,a5,1
20401d74:	fee42623          	sw	a4,-20(s0)
20401d78:	ff040713          	addi	a4,s0,-16
20401d7c:	97ba                	add	a5,a5,a4
20401d7e:	02e00713          	li	a4,46
20401d82:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:435 (discriminator 1)
    }
  }

  // do whole part, number is reversed
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401d86:	a089                	j	20401dc8 <_ftoa+0x4cc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:436
    buf[len++] = (char)(48 + (whole % 10));
20401d88:	fe442703          	lw	a4,-28(s0)
20401d8c:	47a9                	li	a5,10
20401d8e:	02f767b3          	rem	a5,a4,a5
20401d92:	0ff7f713          	andi	a4,a5,255
20401d96:	fec42783          	lw	a5,-20(s0)
20401d9a:	00178693          	addi	a3,a5,1
20401d9e:	fed42623          	sw	a3,-20(s0)
20401da2:	03070713          	addi	a4,a4,48
20401da6:	0ff77713          	andi	a4,a4,255
20401daa:	ff040693          	addi	a3,s0,-16
20401dae:	97b6                	add	a5,a5,a3
20401db0:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:437
    if (!(whole /= 10)) {
20401db4:	fe442703          	lw	a4,-28(s0)
20401db8:	47a9                	li	a5,10
20401dba:	02f747b3          	div	a5,a4,a5
20401dbe:	fef42223          	sw	a5,-28(s0)
20401dc2:	fe442783          	lw	a5,-28(s0)
20401dc6:	c799                	beqz	a5,20401dd4 <_ftoa+0x4d8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:435
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401dc8:	fec42703          	lw	a4,-20(s0)
20401dcc:	47fd                	li	a5,31
20401dce:	fae7fde3          	bgeu	a5,a4,20401d88 <_ftoa+0x48c>
20401dd2:	a011                	j	20401dd6 <_ftoa+0x4da>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:438
      break;
20401dd4:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:443
    }
  }

  // pad leading zeros
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
20401dd6:	401c                	lw	a5,0(s0)
20401dd8:	8b89                	andi	a5,a5,2
20401dda:	ebb9                	bnez	a5,20401e30 <_ftoa+0x534>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:443 (discriminator 1)
20401ddc:	401c                	lw	a5,0(s0)
20401dde:	8b85                	andi	a5,a5,1
20401de0:	cba1                	beqz	a5,20401e30 <_ftoa+0x534>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:444
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
20401de2:	f8042783          	lw	a5,-128(s0)
20401de6:	cb95                	beqz	a5,20401e1a <_ftoa+0x51e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:444 (discriminator 1)
20401de8:	feb44783          	lbu	a5,-21(s0)
20401dec:	e781                	bnez	a5,20401df4 <_ftoa+0x4f8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:444 (discriminator 2)
20401dee:	401c                	lw	a5,0(s0)
20401df0:	8bb1                	andi	a5,a5,12
20401df2:	c785                	beqz	a5,20401e1a <_ftoa+0x51e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:445
      width--;
20401df4:	f8042783          	lw	a5,-128(s0)
20401df8:	17fd                	addi	a5,a5,-1
20401dfa:	f8f42023          	sw	a5,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:447
    }
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20401dfe:	a831                	j	20401e1a <_ftoa+0x51e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:448
      buf[len++] = '0';
20401e00:	fec42783          	lw	a5,-20(s0)
20401e04:	00178713          	addi	a4,a5,1
20401e08:	fee42623          	sw	a4,-20(s0)
20401e0c:	ff040713          	addi	a4,s0,-16
20401e10:	97ba                	add	a5,a5,a4
20401e12:	03000713          	li	a4,48
20401e16:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:447
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20401e1a:	fec42703          	lw	a4,-20(s0)
20401e1e:	f8042783          	lw	a5,-128(s0)
20401e22:	00f77763          	bgeu	a4,a5,20401e30 <_ftoa+0x534>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:447 (discriminator 1)
20401e26:	fec42703          	lw	a4,-20(s0)
20401e2a:	47fd                	li	a5,31
20401e2c:	fce7fae3          	bgeu	a5,a4,20401e00 <_ftoa+0x504>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:452
    }
  }

  if (len < PRINTF_FTOA_BUFFER_SIZE) {
20401e30:	fec42703          	lw	a4,-20(s0)
20401e34:	47fd                	li	a5,31
20401e36:	06e7e463          	bltu	a5,a4,20401e9e <_ftoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:453
    if (negative) {
20401e3a:	feb44783          	lbu	a5,-21(s0)
20401e3e:	cf99                	beqz	a5,20401e5c <_ftoa+0x560>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:454
      buf[len++] = '-';
20401e40:	fec42783          	lw	a5,-20(s0)
20401e44:	00178713          	addi	a4,a5,1
20401e48:	fee42623          	sw	a4,-20(s0)
20401e4c:	ff040713          	addi	a4,s0,-16
20401e50:	97ba                	add	a5,a5,a4
20401e52:	02d00713          	li	a4,45
20401e56:	fae78c23          	sb	a4,-72(a5)
20401e5a:	a091                	j	20401e9e <_ftoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:456
    }
    else if (flags & FLAGS_PLUS) {
20401e5c:	401c                	lw	a5,0(s0)
20401e5e:	8b91                	andi	a5,a5,4
20401e60:	cf99                	beqz	a5,20401e7e <_ftoa+0x582>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:457
      buf[len++] = '+';  // ignore the space if the '+' exists
20401e62:	fec42783          	lw	a5,-20(s0)
20401e66:	00178713          	addi	a4,a5,1
20401e6a:	fee42623          	sw	a4,-20(s0)
20401e6e:	ff040713          	addi	a4,s0,-16
20401e72:	97ba                	add	a5,a5,a4
20401e74:	02b00713          	li	a4,43
20401e78:	fae78c23          	sb	a4,-72(a5)
20401e7c:	a00d                	j	20401e9e <_ftoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:459
    }
    else if (flags & FLAGS_SPACE) {
20401e7e:	401c                	lw	a5,0(s0)
20401e80:	8ba1                	andi	a5,a5,8
20401e82:	cf91                	beqz	a5,20401e9e <_ftoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:460
      buf[len++] = ' ';
20401e84:	fec42783          	lw	a5,-20(s0)
20401e88:	00178713          	addi	a4,a5,1
20401e8c:	fee42623          	sw	a4,-20(s0)
20401e90:	ff040713          	addi	a4,s0,-16
20401e94:	97ba                	add	a5,a5,a4
20401e96:	02000713          	li	a4,32
20401e9a:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:464
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
20401e9e:	fa840713          	addi	a4,s0,-88
20401ea2:	00042883          	lw	a7,0(s0)
20401ea6:	f8042803          	lw	a6,-128(s0)
20401eaa:	fec42783          	lw	a5,-20(s0)
20401eae:	f9042683          	lw	a3,-112(s0)
20401eb2:	f9442603          	lw	a2,-108(s0)
20401eb6:	f9842583          	lw	a1,-104(s0)
20401eba:	f9c42503          	lw	a0,-100(s0)
20401ebe:	ca6ff0ef          	jal	ra,20401364 <_out_rev>
20401ec2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:465 (discriminator 3)
}
20401ec4:	853e                	mv	a0,a5
20401ec6:	40ba                	lw	ra,140(sp)
20401ec8:	442a                	lw	s0,136(sp)
20401eca:	449a                	lw	s1,132(sp)
20401ecc:	6149                	addi	sp,sp,144
20401ece:	8082                	ret

20401ed0 <_etoa>:
_etoa():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:471


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
20401ed0:	7131                	addi	sp,sp,-192
20401ed2:	df06                	sw	ra,188(sp)
20401ed4:	dd22                	sw	s0,184(sp)
20401ed6:	db26                	sw	s1,180(sp)
20401ed8:	d94a                	sw	s2,176(sp)
20401eda:	d74e                	sw	s3,172(sp)
20401edc:	d552                	sw	s4,168(sp)
20401ede:	d356                	sw	s5,164(sp)
20401ee0:	d15a                	sw	s6,160(sp)
20401ee2:	cf5e                	sw	s7,156(sp)
20401ee4:	cd62                	sw	s8,152(sp)
20401ee6:	cb66                	sw	s9,148(sp)
20401ee8:	c96a                	sw	s10,144(sp)
20401eea:	c76e                	sw	s11,140(sp)
20401eec:	0180                	addi	s0,sp,192
20401eee:	f6a42e23          	sw	a0,-132(s0)
20401ef2:	f6b42c23          	sw	a1,-136(s0)
20401ef6:	f6c42a23          	sw	a2,-140(s0)
20401efa:	f6d42823          	sw	a3,-144(s0)
20401efe:	f6e42423          	sw	a4,-152(s0)
20401f02:	f6f42623          	sw	a5,-148(s0)
20401f06:	f7042223          	sw	a6,-156(s0)
20401f0a:	f7142023          	sw	a7,-160(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:473
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
20401f0e:	f6842603          	lw	a2,-152(s0)
20401f12:	f6c42683          	lw	a3,-148(s0)
20401f16:	f6842503          	lw	a0,-152(s0)
20401f1a:	f6c42583          	lw	a1,-148(s0)
20401f1e:	40a020ef          	jal	ra,20404328 <__eqdf2>
20401f22:	87aa                	mv	a5,a0
20401f24:	ef9d                	bnez	a5,20401f62 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:473 (discriminator 1)
20401f26:	204097b7          	lui	a5,0x20409
20401f2a:	c287a603          	lw	a2,-984(a5) # 20408c28 <_exit+0x1ba>
20401f2e:	c2c7a683          	lw	a3,-980(a5)
20401f32:	f6842503          	lw	a0,-152(s0)
20401f36:	f6c42583          	lw	a1,-148(s0)
20401f3a:	458020ef          	jal	ra,20404392 <__gedf2>
20401f3e:	87aa                	mv	a5,a0
20401f40:	02f04163          	bgtz	a5,20401f62 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:473 (discriminator 2)
20401f44:	204097b7          	lui	a5,0x20409
20401f48:	c207a603          	lw	a2,-992(a5) # 20408c20 <_exit+0x1b2>
20401f4c:	c247a683          	lw	a3,-988(a5)
20401f50:	f6842503          	lw	a0,-152(s0)
20401f54:	f6c42583          	lw	a1,-148(s0)
20401f58:	4de020ef          	jal	ra,20404436 <__ledf2>
20401f5c:	87aa                	mv	a5,a0
20401f5e:	0207d863          	bgez	a5,20401f8e <_etoa+0xbe>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:474
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
20401f62:	401c                	lw	a5,0(s0)
20401f64:	c03e                	sw	a5,0(sp)
20401f66:	f6042883          	lw	a7,-160(s0)
20401f6a:	f6442803          	lw	a6,-156(s0)
20401f6e:	f6842703          	lw	a4,-152(s0)
20401f72:	f6c42783          	lw	a5,-148(s0)
20401f76:	f7042683          	lw	a3,-144(s0)
20401f7a:	f7442603          	lw	a2,-140(s0)
20401f7e:	f7842583          	lw	a1,-136(s0)
20401f82:	f7c42503          	lw	a0,-132(s0)
20401f86:	977ff0ef          	jal	ra,204018fc <_ftoa>
20401f8a:	87aa                	mv	a5,a0
20401f8c:	ab49                	j	2040251e <_etoa+0x64e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:478
  }

  // determine the sign
  const bool negative = value < 0;
20401f8e:	4485                	li	s1,1
20401f90:	4601                	li	a2,0
20401f92:	4681                	li	a3,0
20401f94:	f6842503          	lw	a0,-152(s0)
20401f98:	f6c42583          	lw	a1,-148(s0)
20401f9c:	49a020ef          	jal	ra,20404436 <__ledf2>
20401fa0:	87aa                	mv	a5,a0
20401fa2:	0007c363          	bltz	a5,20401fa8 <_etoa+0xd8>
20401fa6:	4481                	li	s1,0
20401fa8:	fa9409a3          	sb	s1,-77(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:479
  if (negative) {
20401fac:	fb344783          	lbu	a5,-77(s0)
20401fb0:	cf81                	beqz	a5,20401fc8 <_etoa+0xf8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:480
    value = -value;
20401fb2:	f6842783          	lw	a5,-152(s0)
20401fb6:	f6f42423          	sw	a5,-152(s0)
20401fba:	f6c42703          	lw	a4,-148(s0)
20401fbe:	800007b7          	lui	a5,0x80000
20401fc2:	8fb9                	xor	a5,a5,a4
20401fc4:	f6f42623          	sw	a5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:484
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
20401fc8:	401c                	lw	a5,0(s0)
20401fca:	4007f793          	andi	a5,a5,1024
20401fce:	e781                	bnez	a5,20401fd6 <_etoa+0x106>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:485
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
20401fd0:	4799                	li	a5,6
20401fd2:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:495
  union {
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
20401fd6:	f6842783          	lw	a5,-152(s0)
20401fda:	f6c42803          	lw	a6,-148(s0)
20401fde:	f8f42423          	sw	a5,-120(s0)
20401fe2:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:496
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
20401fe6:	f8842783          	lw	a5,-120(s0)
20401fea:	f8c42803          	lw	a6,-116(s0)
20401fee:	01485793          	srli	a5,a6,0x14
20401ff2:	f4f42c23          	sw	a5,-168(s0)
20401ff6:	f4042e23          	sw	zero,-164(s0)
20401ffa:	f5842783          	lw	a5,-168(s0)
20401ffe:	7ff7f793          	andi	a5,a5,2047
20402002:	c0178793          	addi	a5,a5,-1023 # 7ffffc01 <metal_segment_heap_target_end+0xffffddad>
20402006:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:497
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
2040200a:	f8842783          	lw	a5,-120(s0)
2040200e:	f8c42803          	lw	a6,-116(s0)
20402012:	fff7f913          	andi	s2,a5,-1
20402016:	00100737          	lui	a4,0x100
2040201a:	177d                	addi	a4,a4,-1
2040201c:	00e879b3          	and	s3,a6,a4
20402020:	00096b13          	ori	s6,s2,0
20402024:	3ff007b7          	lui	a5,0x3ff00
20402028:	00f9ebb3          	or	s7,s3,a5
2040202c:	f9642423          	sw	s6,-120(s0)
20402030:	f9742623          	sw	s7,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:499
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
20402034:	fac42503          	lw	a0,-84(s0)
20402038:	795020ef          	jal	ra,20404fcc <__floatsidf>
2040203c:	204097b7          	lui	a5,0x20409
20402040:	c487a603          	lw	a2,-952(a5) # 20408c48 <_exit+0x1da>
20402044:	c4c7a683          	lw	a3,-948(a5)
20402048:	492020ef          	jal	ra,204044da <__muldf3>
2040204c:	87aa                	mv	a5,a0
2040204e:	882e                	mv	a6,a1
20402050:	853e                	mv	a0,a5
20402052:	85c2                	mv	a1,a6
20402054:	204097b7          	lui	a5,0x20409
20402058:	c507a603          	lw	a2,-944(a5) # 20408c50 <_exit+0x1e2>
2040205c:	c547a683          	lw	a3,-940(a5)
20402060:	7a0010ef          	jal	ra,20403800 <__adddf3>
20402064:	87aa                	mv	a5,a0
20402066:	882e                	mv	a6,a1
20402068:	893e                	mv	s2,a5
2040206a:	89c2                	mv	s3,a6
2040206c:	f8842783          	lw	a5,-120(s0)
20402070:	f8c42803          	lw	a6,-116(s0)
20402074:	20409737          	lui	a4,0x20409
20402078:	c5872603          	lw	a2,-936(a4) # 20408c58 <_exit+0x1ea>
2040207c:	c5c72683          	lw	a3,-932(a4)
20402080:	853e                	mv	a0,a5
20402082:	85c2                	mv	a1,a6
20402084:	093020ef          	jal	ra,20404916 <__subdf3>
20402088:	87aa                	mv	a5,a0
2040208a:	882e                	mv	a6,a1
2040208c:	853e                	mv	a0,a5
2040208e:	85c2                	mv	a1,a6
20402090:	204097b7          	lui	a5,0x20409
20402094:	c607a603          	lw	a2,-928(a5) # 20408c60 <_exit+0x1f2>
20402098:	c647a683          	lw	a3,-924(a5)
2040209c:	43e020ef          	jal	ra,204044da <__muldf3>
204020a0:	87aa                	mv	a5,a0
204020a2:	882e                	mv	a6,a1
204020a4:	863e                	mv	a2,a5
204020a6:	86c2                	mv	a3,a6
204020a8:	854a                	mv	a0,s2
204020aa:	85ce                	mv	a1,s3
204020ac:	754010ef          	jal	ra,20403800 <__adddf3>
204020b0:	87aa                	mv	a5,a0
204020b2:	882e                	mv	a6,a1
204020b4:	853e                	mv	a0,a5
204020b6:	85c2                	mv	a1,a6
204020b8:	655020ef          	jal	ra,20404f0c <__fixdfsi>
204020bc:	87aa                	mv	a5,a0
204020be:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:501
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
204020c2:	fbc42503          	lw	a0,-68(s0)
204020c6:	707020ef          	jal	ra,20404fcc <__floatsidf>
204020ca:	204097b7          	lui	a5,0x20409
204020ce:	c687a603          	lw	a2,-920(a5) # 20408c68 <_exit+0x1fa>
204020d2:	c6c7a683          	lw	a3,-916(a5)
204020d6:	404020ef          	jal	ra,204044da <__muldf3>
204020da:	87aa                	mv	a5,a0
204020dc:	882e                	mv	a6,a1
204020de:	853e                	mv	a0,a5
204020e0:	85c2                	mv	a1,a6
204020e2:	204097b7          	lui	a5,0x20409
204020e6:	c407a603          	lw	a2,-960(a5) # 20408c40 <_exit+0x1d2>
204020ea:	c447a683          	lw	a3,-956(a5)
204020ee:	712010ef          	jal	ra,20403800 <__adddf3>
204020f2:	87aa                	mv	a5,a0
204020f4:	882e                	mv	a6,a1
204020f6:	853e                	mv	a0,a5
204020f8:	85c2                	mv	a1,a6
204020fa:	613020ef          	jal	ra,20404f0c <__fixdfsi>
204020fe:	87aa                	mv	a5,a0
20402100:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:502
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
20402104:	fbc42503          	lw	a0,-68(s0)
20402108:	6c5020ef          	jal	ra,20404fcc <__floatsidf>
2040210c:	204097b7          	lui	a5,0x20409
20402110:	c707a603          	lw	a2,-912(a5) # 20408c70 <_exit+0x202>
20402114:	c747a683          	lw	a3,-908(a5)
20402118:	3c2020ef          	jal	ra,204044da <__muldf3>
2040211c:	87aa                	mv	a5,a0
2040211e:	882e                	mv	a6,a1
20402120:	893e                	mv	s2,a5
20402122:	89c2                	mv	s3,a6
20402124:	fac42503          	lw	a0,-84(s0)
20402128:	6a5020ef          	jal	ra,20404fcc <__floatsidf>
2040212c:	204097b7          	lui	a5,0x20409
20402130:	c787a603          	lw	a2,-904(a5) # 20408c78 <_exit+0x20a>
20402134:	c7c7a683          	lw	a3,-900(a5)
20402138:	3a2020ef          	jal	ra,204044da <__muldf3>
2040213c:	87aa                	mv	a5,a0
2040213e:	882e                	mv	a6,a1
20402140:	863e                	mv	a2,a5
20402142:	86c2                	mv	a3,a6
20402144:	854a                	mv	a0,s2
20402146:	85ce                	mv	a1,s3
20402148:	7ce020ef          	jal	ra,20404916 <__subdf3>
2040214c:	87aa                	mv	a5,a0
2040214e:	882e                	mv	a6,a1
20402150:	faf42023          	sw	a5,-96(s0)
20402154:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:503
  const double z2 = z * z;
20402158:	fa042603          	lw	a2,-96(s0)
2040215c:	fa442683          	lw	a3,-92(s0)
20402160:	fa042503          	lw	a0,-96(s0)
20402164:	fa442583          	lw	a1,-92(s0)
20402168:	372020ef          	jal	ra,204044da <__muldf3>
2040216c:	87aa                	mv	a5,a0
2040216e:	882e                	mv	a6,a1
20402170:	f8f42c23          	sw	a5,-104(s0)
20402174:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:504
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
20402178:	fac42783          	lw	a5,-84(s0)
2040217c:	3ff78793          	addi	a5,a5,1023
20402180:	8d3e                	mv	s10,a5
20402182:	87fd                	srai	a5,a5,0x1f
20402184:	8dbe                	mv	s11,a5
20402186:	014d1c93          	slli	s9,s10,0x14
2040218a:	4c01                	li	s8,0
2040218c:	f9842423          	sw	s8,-120(s0)
20402190:	f9942623          	sw	s9,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:506
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
20402194:	f8842903          	lw	s2,-120(s0)
20402198:	f8c42983          	lw	s3,-116(s0)
2040219c:	fa042783          	lw	a5,-96(s0)
204021a0:	fa442803          	lw	a6,-92(s0)
204021a4:	863e                	mv	a2,a5
204021a6:	86c2                	mv	a3,a6
204021a8:	853e                	mv	a0,a5
204021aa:	85c2                	mv	a1,a6
204021ac:	654010ef          	jal	ra,20403800 <__adddf3>
204021b0:	87aa                	mv	a5,a0
204021b2:	882e                	mv	a6,a1
204021b4:	8b3e                	mv	s6,a5
204021b6:	8bc2                	mv	s7,a6
204021b8:	204097b7          	lui	a5,0x20409
204021bc:	fa042603          	lw	a2,-96(s0)
204021c0:	fa442683          	lw	a3,-92(s0)
204021c4:	c807a503          	lw	a0,-896(a5) # 20408c80 <_exit+0x212>
204021c8:	c847a583          	lw	a1,-892(a5)
204021cc:	74a020ef          	jal	ra,20404916 <__subdf3>
204021d0:	87aa                	mv	a5,a0
204021d2:	882e                	mv	a6,a1
204021d4:	8c3e                	mv	s8,a5
204021d6:	8cc2                	mv	s9,a6
204021d8:	204097b7          	lui	a5,0x20409
204021dc:	c887a603          	lw	a2,-888(a5) # 20408c88 <_exit+0x21a>
204021e0:	c8c7a683          	lw	a3,-884(a5)
204021e4:	f9842503          	lw	a0,-104(s0)
204021e8:	f9c42583          	lw	a1,-100(s0)
204021ec:	407010ef          	jal	ra,20403df2 <__divdf3>
204021f0:	87aa                	mv	a5,a0
204021f2:	882e                	mv	a6,a1
204021f4:	853e                	mv	a0,a5
204021f6:	85c2                	mv	a1,a6
204021f8:	204097b7          	lui	a5,0x20409
204021fc:	c907a603          	lw	a2,-880(a5) # 20408c90 <_exit+0x222>
20402200:	c947a683          	lw	a3,-876(a5)
20402204:	5fc010ef          	jal	ra,20403800 <__adddf3>
20402208:	87aa                	mv	a5,a0
2040220a:	882e                	mv	a6,a1
2040220c:	863e                	mv	a2,a5
2040220e:	86c2                	mv	a3,a6
20402210:	f9842503          	lw	a0,-104(s0)
20402214:	f9c42583          	lw	a1,-100(s0)
20402218:	3db010ef          	jal	ra,20403df2 <__divdf3>
2040221c:	87aa                	mv	a5,a0
2040221e:	882e                	mv	a6,a1
20402220:	853e                	mv	a0,a5
20402222:	85c2                	mv	a1,a6
20402224:	204097b7          	lui	a5,0x20409
20402228:	c987a603          	lw	a2,-872(a5) # 20408c98 <_exit+0x22a>
2040222c:	c9c7a683          	lw	a3,-868(a5)
20402230:	5d0010ef          	jal	ra,20403800 <__adddf3>
20402234:	87aa                	mv	a5,a0
20402236:	882e                	mv	a6,a1
20402238:	863e                	mv	a2,a5
2040223a:	86c2                	mv	a3,a6
2040223c:	f9842503          	lw	a0,-104(s0)
20402240:	f9c42583          	lw	a1,-100(s0)
20402244:	3af010ef          	jal	ra,20403df2 <__divdf3>
20402248:	87aa                	mv	a5,a0
2040224a:	882e                	mv	a6,a1
2040224c:	863e                	mv	a2,a5
2040224e:	86c2                	mv	a3,a6
20402250:	8562                	mv	a0,s8
20402252:	85e6                	mv	a1,s9
20402254:	5ac010ef          	jal	ra,20403800 <__adddf3>
20402258:	87aa                	mv	a5,a0
2040225a:	882e                	mv	a6,a1
2040225c:	863e                	mv	a2,a5
2040225e:	86c2                	mv	a3,a6
20402260:	855a                	mv	a0,s6
20402262:	85de                	mv	a1,s7
20402264:	38f010ef          	jal	ra,20403df2 <__divdf3>
20402268:	87aa                	mv	a5,a0
2040226a:	882e                	mv	a6,a1
2040226c:	853e                	mv	a0,a5
2040226e:	85c2                	mv	a1,a6
20402270:	204097b7          	lui	a5,0x20409
20402274:	ca07a603          	lw	a2,-864(a5) # 20408ca0 <_exit+0x232>
20402278:	ca47a683          	lw	a3,-860(a5)
2040227c:	584010ef          	jal	ra,20403800 <__adddf3>
20402280:	87aa                	mv	a5,a0
20402282:	882e                	mv	a6,a1
20402284:	863e                	mv	a2,a5
20402286:	86c2                	mv	a3,a6
20402288:	854a                	mv	a0,s2
2040228a:	85ce                	mv	a1,s3
2040228c:	24e020ef          	jal	ra,204044da <__muldf3>
20402290:	87aa                	mv	a5,a0
20402292:	882e                	mv	a6,a1
20402294:	f8f42423          	sw	a5,-120(s0)
20402298:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:508
  // correct for rounding errors
  if (value < conv.F) {
2040229c:	f8842783          	lw	a5,-120(s0)
204022a0:	f8c42803          	lw	a6,-116(s0)
204022a4:	863e                	mv	a2,a5
204022a6:	86c2                	mv	a3,a6
204022a8:	f6842503          	lw	a0,-152(s0)
204022ac:	f6c42583          	lw	a1,-148(s0)
204022b0:	186020ef          	jal	ra,20404436 <__ledf2>
204022b4:	87aa                	mv	a5,a0
204022b6:	0207db63          	bgez	a5,204022ec <_etoa+0x41c>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:509
    expval--;
204022ba:	fbc42783          	lw	a5,-68(s0)
204022be:	17fd                	addi	a5,a5,-1
204022c0:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:510
    conv.F /= 10;
204022c4:	f8842783          	lw	a5,-120(s0)
204022c8:	f8c42803          	lw	a6,-116(s0)
204022cc:	20409737          	lui	a4,0x20409
204022d0:	c9072603          	lw	a2,-880(a4) # 20408c90 <_exit+0x222>
204022d4:	c9472683          	lw	a3,-876(a4)
204022d8:	853e                	mv	a0,a5
204022da:	85c2                	mv	a1,a6
204022dc:	317010ef          	jal	ra,20403df2 <__divdf3>
204022e0:	87aa                	mv	a5,a0
204022e2:	882e                	mv	a6,a1
204022e4:	f8f42423          	sw	a5,-120(s0)
204022e8:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:514
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
204022ec:	fbc42703          	lw	a4,-68(s0)
204022f0:	06300793          	li	a5,99
204022f4:	00e7ca63          	blt	a5,a4,20402308 <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:514 (discriminator 1)
204022f8:	fbc42703          	lw	a4,-68(s0)
204022fc:	f9d00793          	li	a5,-99
20402300:	00f74463          	blt	a4,a5,20402308 <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:514 (discriminator 3)
20402304:	4791                	li	a5,4
20402306:	a011                	j	2040230a <_etoa+0x43a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:514 (discriminator 4)
20402308:	4795                	li	a5,5
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:514 (discriminator 6)
2040230a:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:517 (discriminator 6)

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
2040230e:	4018                	lw	a4,0(s0)
20402310:	6785                	lui	a5,0x1
20402312:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402316:	8ff9                	and	a5,a5,a4
20402318:	c7d1                	beqz	a5,204023a4 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:519
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
2040231a:	204097b7          	lui	a5,0x20409
2040231e:	ca87a603          	lw	a2,-856(a5) # 20408ca8 <_exit+0x23a>
20402322:	cac7a683          	lw	a3,-852(a5)
20402326:	f6842503          	lw	a0,-152(s0)
2040232a:	f6c42583          	lw	a1,-148(s0)
2040232e:	064020ef          	jal	ra,20404392 <__gedf2>
20402332:	87aa                	mv	a5,a0
20402334:	0407cc63          	bltz	a5,2040238c <_etoa+0x4bc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:519 (discriminator 1)
20402338:	204097b7          	lui	a5,0x20409
2040233c:	cb07a603          	lw	a2,-848(a5) # 20408cb0 <_exit+0x242>
20402340:	cb47a683          	lw	a3,-844(a5)
20402344:	f6842503          	lw	a0,-152(s0)
20402348:	f6c42583          	lw	a1,-148(s0)
2040234c:	0ea020ef          	jal	ra,20404436 <__ledf2>
20402350:	87aa                	mv	a5,a0
20402352:	0207dd63          	bgez	a5,2040238c <_etoa+0x4bc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:520
      if ((int)prec > expval) {
20402356:	f6442783          	lw	a5,-156(s0)
2040235a:	fbc42703          	lw	a4,-68(s0)
2040235e:	00f75c63          	bge	a4,a5,20402376 <_etoa+0x4a6>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:521
        prec = (unsigned)((int)prec - expval - 1);
20402362:	f6442703          	lw	a4,-156(s0)
20402366:	fbc42783          	lw	a5,-68(s0)
2040236a:	40f707b3          	sub	a5,a4,a5
2040236e:	17fd                	addi	a5,a5,-1
20402370:	f6f42223          	sw	a5,-156(s0)
20402374:	a019                	j	2040237a <_etoa+0x4aa>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:524
      }
      else {
        prec = 0;
20402376:	f6042223          	sw	zero,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:526
      }
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
2040237a:	401c                	lw	a5,0(s0)
2040237c:	4007e793          	ori	a5,a5,1024
20402380:	c01c                	sw	a5,0(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:528
      // no characters in exponent
      minwidth = 0U;
20402382:	fa042c23          	sw	zero,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:529
      expval   = 0;
20402386:	fa042e23          	sw	zero,-68(s0)
2040238a:	a829                	j	204023a4 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:533
    }
    else {
      // we use one sigfig for the whole part
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
2040238c:	f6442783          	lw	a5,-156(s0)
20402390:	cb91                	beqz	a5,204023a4 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:533 (discriminator 1)
20402392:	401c                	lw	a5,0(s0)
20402394:	4007f793          	andi	a5,a5,1024
20402398:	c791                	beqz	a5,204023a4 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:534
        --prec;
2040239a:	f6442783          	lw	a5,-156(s0)
2040239e:	17fd                	addi	a5,a5,-1
204023a0:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:540
      }
    }
  }

  // will everything fit?
  unsigned int fwidth = width;
204023a4:	f6042783          	lw	a5,-160(s0)
204023a8:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:541
  if (width > minwidth) {
204023ac:	f6042703          	lw	a4,-160(s0)
204023b0:	fb842783          	lw	a5,-72(s0)
204023b4:	00e7fb63          	bgeu	a5,a4,204023ca <_etoa+0x4fa>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:543
    // we didn't fall-back so subtract the characters required for the exponent
    fwidth -= minwidth;
204023b8:	fb442703          	lw	a4,-76(s0)
204023bc:	fb842783          	lw	a5,-72(s0)
204023c0:	40f707b3          	sub	a5,a4,a5
204023c4:	faf42a23          	sw	a5,-76(s0)
204023c8:	a019                	j	204023ce <_etoa+0x4fe>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:546
  } else {
    // not enough characters, so go back to default sizing
    fwidth = 0U;
204023ca:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:548
  }
  if ((flags & FLAGS_LEFT) && minwidth) {
204023ce:	401c                	lw	a5,0(s0)
204023d0:	8b89                	andi	a5,a5,2
204023d2:	c791                	beqz	a5,204023de <_etoa+0x50e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:548 (discriminator 1)
204023d4:	fb842783          	lw	a5,-72(s0)
204023d8:	c399                	beqz	a5,204023de <_etoa+0x50e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:550
    // if we're padding on the right, DON'T pad the floating part
    fwidth = 0U;
204023da:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:554
  }

  // rescale the float value
  if (expval) {
204023de:	fbc42783          	lw	a5,-68(s0)
204023e2:	c39d                	beqz	a5,20402408 <_etoa+0x538>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:555
    value /= conv.F;
204023e4:	f8842783          	lw	a5,-120(s0)
204023e8:	f8c42803          	lw	a6,-116(s0)
204023ec:	863e                	mv	a2,a5
204023ee:	86c2                	mv	a3,a6
204023f0:	f6842503          	lw	a0,-152(s0)
204023f4:	f6c42583          	lw	a1,-148(s0)
204023f8:	1fb010ef          	jal	ra,20403df2 <__divdf3>
204023fc:	87aa                	mv	a5,a0
204023fe:	882e                	mv	a6,a1
20402400:	f6f42423          	sw	a5,-152(s0)
20402404:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:559
  }

  // output the floating part
  const size_t start_idx = idx;
20402408:	f7442783          	lw	a5,-140(s0)
2040240c:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:560
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
20402410:	fb344783          	lbu	a5,-77(s0)
20402414:	cb91                	beqz	a5,20402428 <_etoa+0x558>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:560 (discriminator 1)
20402416:	f6842a03          	lw	s4,-152(s0)
2040241a:	f6c42703          	lw	a4,-148(s0)
2040241e:	800007b7          	lui	a5,0x80000
20402422:	00f74ab3          	xor	s5,a4,a5
20402426:	a029                	j	20402430 <_etoa+0x560>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:560 (discriminator 2)
20402428:	f6842a03          	lw	s4,-152(s0)
2040242c:	f6c42a83          	lw	s5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:560 (discriminator 4)
20402430:	4018                	lw	a4,0(s0)
20402432:	77fd                	lui	a5,0xfffff
20402434:	7ff78793          	addi	a5,a5,2047 # fffff7ff <metal_segment_heap_target_end+0x7fffd9ab>
20402438:	8ff9                	and	a5,a5,a4
2040243a:	c03e                	sw	a5,0(sp)
2040243c:	fb442883          	lw	a7,-76(s0)
20402440:	f6442803          	lw	a6,-156(s0)
20402444:	8752                	mv	a4,s4
20402446:	87d6                	mv	a5,s5
20402448:	f7042683          	lw	a3,-144(s0)
2040244c:	f7442603          	lw	a2,-140(s0)
20402450:	f7842583          	lw	a1,-136(s0)
20402454:	f7c42503          	lw	a0,-132(s0)
20402458:	ca4ff0ef          	jal	ra,204018fc <_ftoa>
2040245c:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:563 (discriminator 4)

  // output the exponent part
  if (minwidth) {
20402460:	fb842783          	lw	a5,-72(s0)
20402464:	cbdd                	beqz	a5,2040251a <_etoa+0x64a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:565
    // output the exponential symbol
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
20402466:	401c                	lw	a5,0(s0)
20402468:	0207f793          	andi	a5,a5,32
2040246c:	c781                	beqz	a5,20402474 <_etoa+0x5a4>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:565 (discriminator 1)
2040246e:	04500793          	li	a5,69
20402472:	a019                	j	20402478 <_etoa+0x5a8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:565 (discriminator 2)
20402474:	06500793          	li	a5,101
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:565 (discriminator 4)
20402478:	f7442703          	lw	a4,-140(s0)
2040247c:	00170693          	addi	a3,a4,1
20402480:	f6d42a23          	sw	a3,-140(s0)
20402484:	f7c42803          	lw	a6,-132(s0)
20402488:	f7042683          	lw	a3,-144(s0)
2040248c:	863a                	mv	a2,a4
2040248e:	f7842583          	lw	a1,-136(s0)
20402492:	853e                	mv	a0,a5
20402494:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:567 (discriminator 4)
    // output the exponent value
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
20402496:	fbc42783          	lw	a5,-68(s0)
2040249a:	41f7d713          	srai	a4,a5,0x1f
2040249e:	fbc42783          	lw	a5,-68(s0)
204024a2:	8fb9                	xor	a5,a5,a4
204024a4:	8f99                	sub	a5,a5,a4
204024a6:	863e                	mv	a2,a5
204024a8:	fbc42783          	lw	a5,-68(s0)
204024ac:	83fd                	srli	a5,a5,0x1f
204024ae:	0ff7f693          	andi	a3,a5,255
204024b2:	fb842783          	lw	a5,-72(s0)
204024b6:	17fd                	addi	a5,a5,-1
204024b8:	4715                	li	a4,5
204024ba:	c23a                	sw	a4,4(sp)
204024bc:	c03e                	sw	a5,0(sp)
204024be:	4881                	li	a7,0
204024c0:	4829                	li	a6,10
204024c2:	87b6                	mv	a5,a3
204024c4:	8732                	mv	a4,a2
204024c6:	f7042683          	lw	a3,-144(s0)
204024ca:	f7442603          	lw	a2,-140(s0)
204024ce:	f7842583          	lw	a1,-136(s0)
204024d2:	f7c42503          	lw	a0,-132(s0)
204024d6:	9f4ff0ef          	jal	ra,204016ca <_ntoa_long>
204024da:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:569 (discriminator 4)
    // might need to right-pad spaces
    if (flags & FLAGS_LEFT) {
204024de:	401c                	lw	a5,0(s0)
204024e0:	8b89                	andi	a5,a5,2
204024e2:	cf85                	beqz	a5,2040251a <_etoa+0x64a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:570
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
204024e4:	a00d                	j	20402506 <_etoa+0x636>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:570 (discriminator 2)
204024e6:	f7442783          	lw	a5,-140(s0)
204024ea:	00178713          	addi	a4,a5,1
204024ee:	f6e42a23          	sw	a4,-140(s0)
204024f2:	f7c42703          	lw	a4,-132(s0)
204024f6:	f7042683          	lw	a3,-144(s0)
204024fa:	863e                	mv	a2,a5
204024fc:	f7842583          	lw	a1,-136(s0)
20402500:	02000513          	li	a0,32
20402504:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:570 (discriminator 1)
20402506:	f7442703          	lw	a4,-140(s0)
2040250a:	f9442783          	lw	a5,-108(s0)
2040250e:	40f707b3          	sub	a5,a4,a5
20402512:	f6042703          	lw	a4,-160(s0)
20402516:	fce7e8e3          	bltu	a5,a4,204024e6 <_etoa+0x616>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:573
    }
  }
  return idx;
2040251a:	f7442783          	lw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:574 (discriminator 1)
}
2040251e:	853e                	mv	a0,a5
20402520:	50fa                	lw	ra,188(sp)
20402522:	546a                	lw	s0,184(sp)
20402524:	54da                	lw	s1,180(sp)
20402526:	594a                	lw	s2,176(sp)
20402528:	59ba                	lw	s3,172(sp)
2040252a:	5a2a                	lw	s4,168(sp)
2040252c:	5a9a                	lw	s5,164(sp)
2040252e:	5b0a                	lw	s6,160(sp)
20402530:	4bfa                	lw	s7,156(sp)
20402532:	4c6a                	lw	s8,152(sp)
20402534:	4cda                	lw	s9,148(sp)
20402536:	4d4a                	lw	s10,144(sp)
20402538:	4dba                	lw	s11,140(sp)
2040253a:	6129                	addi	sp,sp,192
2040253c:	8082                	ret

2040253e <_vsnprintf>:
_vsnprintf():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:581
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
2040253e:	7171                	addi	sp,sp,-176
20402540:	d706                	sw	ra,172(sp)
20402542:	d522                	sw	s0,168(sp)
20402544:	d34a                	sw	s2,164(sp)
20402546:	d14e                	sw	s3,160(sp)
20402548:	cf52                	sw	s4,156(sp)
2040254a:	cd56                	sw	s5,152(sp)
2040254c:	cb5a                	sw	s6,148(sp)
2040254e:	c95e                	sw	s7,144(sp)
20402550:	c762                	sw	s8,140(sp)
20402552:	c566                	sw	s9,136(sp)
20402554:	c36a                	sw	s10,132(sp)
20402556:	c16e                	sw	s11,128(sp)
20402558:	1900                	addi	s0,sp,176
2040255a:	f6a42e23          	sw	a0,-132(s0)
2040255e:	f6b42c23          	sw	a1,-136(s0)
20402562:	f6c42a23          	sw	a2,-140(s0)
20402566:	f6d42823          	sw	a3,-144(s0)
2040256a:	f6e42623          	sw	a4,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:583
  unsigned int flags, width, precision, n;
  size_t idx = 0U;
2040256e:	fa042e23          	sw	zero,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:585

  if (!buffer) {
20402572:	f7842783          	lw	a5,-136(s0)
20402576:	2e0796e3          	bnez	a5,20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:587
    // use null output function
    out = _out_null;
2040257a:	204017b7          	lui	a5,0x20401
2040257e:	22e78793          	addi	a5,a5,558 # 2040122e <_out_null>
20402582:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:590
  }

  while (*format)
20402586:	2dd0006f          	j	20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:593
  {
    // format specifier?  %[flags][width][.precision][length]
    if (*format != '%') {
2040258a:	f7042783          	lw	a5,-144(s0)
2040258e:	0007c703          	lbu	a4,0(a5)
20402592:	02500793          	li	a5,37
20402596:	02f70b63          	beq	a4,a5,204025cc <_vsnprintf+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:595
      // no
      out(*format, buffer, idx++, maxlen);
2040259a:	f7042783          	lw	a5,-144(s0)
2040259e:	0007c503          	lbu	a0,0(a5)
204025a2:	fbc42783          	lw	a5,-68(s0)
204025a6:	00178713          	addi	a4,a5,1
204025aa:	fae42e23          	sw	a4,-68(s0)
204025ae:	f7c42703          	lw	a4,-132(s0)
204025b2:	f7442683          	lw	a3,-140(s0)
204025b6:	863e                	mv	a2,a5
204025b8:	f7842583          	lw	a1,-136(s0)
204025bc:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:596
      format++;
204025be:	f7042783          	lw	a5,-144(s0)
204025c2:	0785                	addi	a5,a5,1
204025c4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:597
      continue;
204025c8:	29b0006f          	j	20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:601
    }
    else {
      // yes, evaluate it
      format++;
204025cc:	f7042783          	lw	a5,-144(s0)
204025d0:	0785                	addi	a5,a5,1
204025d2:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:605
    }

    // evaluate flags
    flags = 0U;
204025d6:	fc042623          	sw	zero,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:607
    do {
      switch (*format) {
204025da:	f7042783          	lw	a5,-144(s0)
204025de:	0007c783          	lbu	a5,0(a5)
204025e2:	1781                	addi	a5,a5,-32
204025e4:	4741                	li	a4,16
204025e6:	0af76663          	bltu	a4,a5,20402692 <_vsnprintf+0x154>
204025ea:	00279713          	slli	a4,a5,0x2
204025ee:	204097b7          	lui	a5,0x20409
204025f2:	cb878793          	addi	a5,a5,-840 # 20408cb8 <_exit+0x24a>
204025f6:	97ba                	add	a5,a5,a4
204025f8:	439c                	lw	a5,0(a5)
204025fa:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:608
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
204025fc:	fcc42783          	lw	a5,-52(s0)
20402600:	0017e793          	ori	a5,a5,1
20402604:	fcf42623          	sw	a5,-52(s0)
20402608:	f7042783          	lw	a5,-144(s0)
2040260c:	0785                	addi	a5,a5,1
2040260e:	f6f42823          	sw	a5,-144(s0)
20402612:	4785                	li	a5,1
20402614:	fcf42023          	sw	a5,-64(s0)
20402618:	a041                	j	20402698 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:609
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
2040261a:	fcc42783          	lw	a5,-52(s0)
2040261e:	0027e793          	ori	a5,a5,2
20402622:	fcf42623          	sw	a5,-52(s0)
20402626:	f7042783          	lw	a5,-144(s0)
2040262a:	0785                	addi	a5,a5,1
2040262c:	f6f42823          	sw	a5,-144(s0)
20402630:	4785                	li	a5,1
20402632:	fcf42023          	sw	a5,-64(s0)
20402636:	a08d                	j	20402698 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:610
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
20402638:	fcc42783          	lw	a5,-52(s0)
2040263c:	0047e793          	ori	a5,a5,4
20402640:	fcf42623          	sw	a5,-52(s0)
20402644:	f7042783          	lw	a5,-144(s0)
20402648:	0785                	addi	a5,a5,1
2040264a:	f6f42823          	sw	a5,-144(s0)
2040264e:	4785                	li	a5,1
20402650:	fcf42023          	sw	a5,-64(s0)
20402654:	a091                	j	20402698 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:611
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
20402656:	fcc42783          	lw	a5,-52(s0)
2040265a:	0087e793          	ori	a5,a5,8
2040265e:	fcf42623          	sw	a5,-52(s0)
20402662:	f7042783          	lw	a5,-144(s0)
20402666:	0785                	addi	a5,a5,1
20402668:	f6f42823          	sw	a5,-144(s0)
2040266c:	4785                	li	a5,1
2040266e:	fcf42023          	sw	a5,-64(s0)
20402672:	a01d                	j	20402698 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:612
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
20402674:	fcc42783          	lw	a5,-52(s0)
20402678:	0107e793          	ori	a5,a5,16
2040267c:	fcf42623          	sw	a5,-52(s0)
20402680:	f7042783          	lw	a5,-144(s0)
20402684:	0785                	addi	a5,a5,1
20402686:	f6f42823          	sw	a5,-144(s0)
2040268a:	4785                	li	a5,1
2040268c:	fcf42023          	sw	a5,-64(s0)
20402690:	a021                	j	20402698 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:613
        default :                                   n = 0U; break;
20402692:	fc042023          	sw	zero,-64(s0)
20402696:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:615
      }
    } while (n);
20402698:	fc042783          	lw	a5,-64(s0)
2040269c:	ff9d                	bnez	a5,204025da <_vsnprintf+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:618

    // evaluate width field
    width = 0U;
2040269e:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:619
    if (_is_digit(*format)) {
204026a2:	f7042783          	lw	a5,-144(s0)
204026a6:	0007c783          	lbu	a5,0(a5)
204026aa:	853e                	mv	a0,a5
204026ac:	c23fe0ef          	jal	ra,204012ce <_is_digit>
204026b0:	87aa                	mv	a5,a0
204026b2:	cb89                	beqz	a5,204026c4 <_vsnprintf+0x186>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:620
      width = _atoi(&format);
204026b4:	f7040793          	addi	a5,s0,-144
204026b8:	853e                	mv	a0,a5
204026ba:	c4dfe0ef          	jal	ra,20401306 <_atoi>
204026be:	fca42423          	sw	a0,-56(s0)
204026c2:	a8a1                	j	2040271a <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:622
    }
    else if (*format == '*') {
204026c4:	f7042783          	lw	a5,-144(s0)
204026c8:	0007c703          	lbu	a4,0(a5)
204026cc:	02a00793          	li	a5,42
204026d0:	04f71563          	bne	a4,a5,2040271a <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:623
      const int w = va_arg(va, int);
204026d4:	f6c42783          	lw	a5,-148(s0)
204026d8:	00478713          	addi	a4,a5,4
204026dc:	f6e42623          	sw	a4,-148(s0)
204026e0:	439c                	lw	a5,0(a5)
204026e2:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:624
      if (w < 0) {
204026e6:	fa842783          	lw	a5,-88(s0)
204026ea:	0007df63          	bgez	a5,20402708 <_vsnprintf+0x1ca>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:625
        flags |= FLAGS_LEFT;    // reverse padding
204026ee:	fcc42783          	lw	a5,-52(s0)
204026f2:	0027e793          	ori	a5,a5,2
204026f6:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:626
        width = (unsigned int)-w;
204026fa:	fa842783          	lw	a5,-88(s0)
204026fe:	40f007b3          	neg	a5,a5
20402702:	fcf42423          	sw	a5,-56(s0)
20402706:	a029                	j	20402710 <_vsnprintf+0x1d2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:629
      }
      else {
        width = (unsigned int)w;
20402708:	fa842783          	lw	a5,-88(s0)
2040270c:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:631
      }
      format++;
20402710:	f7042783          	lw	a5,-144(s0)
20402714:	0785                	addi	a5,a5,1
20402716:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:635
    }

    // evaluate precision field
    precision = 0U;
2040271a:	fc042223          	sw	zero,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:636
    if (*format == '.') {
2040271e:	f7042783          	lw	a5,-144(s0)
20402722:	0007c703          	lbu	a4,0(a5)
20402726:	02e00793          	li	a5,46
2040272a:	06f71b63          	bne	a4,a5,204027a0 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:637
      flags |= FLAGS_PRECISION;
2040272e:	fcc42783          	lw	a5,-52(s0)
20402732:	4007e793          	ori	a5,a5,1024
20402736:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:638
      format++;
2040273a:	f7042783          	lw	a5,-144(s0)
2040273e:	0785                	addi	a5,a5,1
20402740:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:639
      if (_is_digit(*format)) {
20402744:	f7042783          	lw	a5,-144(s0)
20402748:	0007c783          	lbu	a5,0(a5)
2040274c:	853e                	mv	a0,a5
2040274e:	b81fe0ef          	jal	ra,204012ce <_is_digit>
20402752:	87aa                	mv	a5,a0
20402754:	cb89                	beqz	a5,20402766 <_vsnprintf+0x228>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:640
        precision = _atoi(&format);
20402756:	f7040793          	addi	a5,s0,-144
2040275a:	853e                	mv	a0,a5
2040275c:	babfe0ef          	jal	ra,20401306 <_atoi>
20402760:	fca42223          	sw	a0,-60(s0)
20402764:	a835                	j	204027a0 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:642
      }
      else if (*format == '*') {
20402766:	f7042783          	lw	a5,-144(s0)
2040276a:	0007c703          	lbu	a4,0(a5)
2040276e:	02a00793          	li	a5,42
20402772:	02f71763          	bne	a4,a5,204027a0 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:643
        const int prec = (int)va_arg(va, int);
20402776:	f6c42783          	lw	a5,-148(s0)
2040277a:	00478713          	addi	a4,a5,4
2040277e:	f6e42623          	sw	a4,-148(s0)
20402782:	439c                	lw	a5,0(a5)
20402784:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:644
        precision = prec > 0 ? (unsigned int)prec : 0U;
20402788:	fa442783          	lw	a5,-92(s0)
2040278c:	0007d363          	bgez	a5,20402792 <_vsnprintf+0x254>
20402790:	4781                	li	a5,0
20402792:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:645
        format++;
20402796:	f7042783          	lw	a5,-144(s0)
2040279a:	0785                	addi	a5,a5,1
2040279c:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:650
      }
    }

    // evaluate length field
    switch (*format) {
204027a0:	f7042783          	lw	a5,-144(s0)
204027a4:	0007c783          	lbu	a5,0(a5)
204027a8:	f9878793          	addi	a5,a5,-104
204027ac:	4749                	li	a4,18
204027ae:	0cf76d63          	bltu	a4,a5,20402888 <_vsnprintf+0x34a>
204027b2:	00279713          	slli	a4,a5,0x2
204027b6:	204097b7          	lui	a5,0x20409
204027ba:	cfc78793          	addi	a5,a5,-772 # 20408cfc <_exit+0x28e>
204027be:	97ba                	add	a5,a5,a4
204027c0:	439c                	lw	a5,0(a5)
204027c2:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:652
      case 'l' :
        flags |= FLAGS_LONG;
204027c4:	fcc42783          	lw	a5,-52(s0)
204027c8:	1007e793          	ori	a5,a5,256
204027cc:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:653
        format++;
204027d0:	f7042783          	lw	a5,-144(s0)
204027d4:	0785                	addi	a5,a5,1
204027d6:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:654
        if (*format == 'l') {
204027da:	f7042783          	lw	a5,-144(s0)
204027de:	0007c703          	lbu	a4,0(a5)
204027e2:	06c00793          	li	a5,108
204027e6:	0af71363          	bne	a4,a5,2040288c <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:655
          flags |= FLAGS_LONG_LONG;
204027ea:	fcc42783          	lw	a5,-52(s0)
204027ee:	2007e793          	ori	a5,a5,512
204027f2:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:656
          format++;
204027f6:	f7042783          	lw	a5,-144(s0)
204027fa:	0785                	addi	a5,a5,1
204027fc:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:658
        }
        break;
20402800:	a071                	j	2040288c <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:660
      case 'h' :
        flags |= FLAGS_SHORT;
20402802:	fcc42783          	lw	a5,-52(s0)
20402806:	0807e793          	ori	a5,a5,128
2040280a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:661
        format++;
2040280e:	f7042783          	lw	a5,-144(s0)
20402812:	0785                	addi	a5,a5,1
20402814:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:662
        if (*format == 'h') {
20402818:	f7042783          	lw	a5,-144(s0)
2040281c:	0007c703          	lbu	a4,0(a5)
20402820:	06800793          	li	a5,104
20402824:	06f71663          	bne	a4,a5,20402890 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:663
          flags |= FLAGS_CHAR;
20402828:	fcc42783          	lw	a5,-52(s0)
2040282c:	0407e793          	ori	a5,a5,64
20402830:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:664
          format++;
20402834:	f7042783          	lw	a5,-144(s0)
20402838:	0785                	addi	a5,a5,1
2040283a:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:666
        }
        break;
2040283e:	a889                	j	20402890 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:669
#if defined(PRINTF_SUPPORT_PTRDIFF_T)
      case 't' :
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
20402840:	fcc42783          	lw	a5,-52(s0)
20402844:	1007e793          	ori	a5,a5,256
20402848:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:670
        format++;
2040284c:	f7042783          	lw	a5,-144(s0)
20402850:	0785                	addi	a5,a5,1
20402852:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:671
        break;
20402856:	a835                	j	20402892 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:674
#endif
      case 'j' :
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
20402858:	fcc42783          	lw	a5,-52(s0)
2040285c:	2007e793          	ori	a5,a5,512
20402860:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:675
        format++;
20402864:	f7042783          	lw	a5,-144(s0)
20402868:	0785                	addi	a5,a5,1
2040286a:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:676
        break;
2040286e:	a015                	j	20402892 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:678
      case 'z' :
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
20402870:	fcc42783          	lw	a5,-52(s0)
20402874:	1007e793          	ori	a5,a5,256
20402878:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:679
        format++;
2040287c:	f7042783          	lw	a5,-144(s0)
20402880:	0785                	addi	a5,a5,1
20402882:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:680
        break;
20402886:	a031                	j	20402892 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:682
      default :
        break;
20402888:	0001                	nop
2040288a:	a021                	j	20402892 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:658
        break;
2040288c:	0001                	nop
2040288e:	a011                	j	20402892 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:666
        break;
20402890:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:686
    }

    // evaluate specifier
    switch (*format) {
20402892:	f7042783          	lw	a5,-144(s0)
20402896:	0007c783          	lbu	a5,0(a5)
2040289a:	fdb78793          	addi	a5,a5,-37
2040289e:	05300713          	li	a4,83
204028a2:	78f76863          	bltu	a4,a5,20403032 <_vsnprintf+0xaf4>
204028a6:	00279713          	slli	a4,a5,0x2
204028aa:	204097b7          	lui	a5,0x20409
204028ae:	d4878793          	addi	a5,a5,-696 # 20408d48 <_exit+0x2da>
204028b2:	97ba                	add	a5,a5,a4
204028b4:	439c                	lw	a5,0(a5)
204028b6:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:696
      case 'X' :
      case 'o' :
      case 'b' : {
        // set the base
        unsigned int base;
        if (*format == 'x' || *format == 'X') {
204028b8:	f7042783          	lw	a5,-144(s0)
204028bc:	0007c703          	lbu	a4,0(a5)
204028c0:	07800793          	li	a5,120
204028c4:	00f70a63          	beq	a4,a5,204028d8 <_vsnprintf+0x39a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:696 (discriminator 1)
204028c8:	f7042783          	lw	a5,-144(s0)
204028cc:	0007c703          	lbu	a4,0(a5)
204028d0:	05800793          	li	a5,88
204028d4:	00f71663          	bne	a4,a5,204028e0 <_vsnprintf+0x3a2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:697
          base = 16U;
204028d8:	47c1                	li	a5,16
204028da:	faf42c23          	sw	a5,-72(s0)
204028de:	a089                	j	20402920 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:699
        }
        else if (*format == 'o') {
204028e0:	f7042783          	lw	a5,-144(s0)
204028e4:	0007c703          	lbu	a4,0(a5)
204028e8:	06f00793          	li	a5,111
204028ec:	00f71663          	bne	a4,a5,204028f8 <_vsnprintf+0x3ba>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:700
          base =  8U;
204028f0:	47a1                	li	a5,8
204028f2:	faf42c23          	sw	a5,-72(s0)
204028f6:	a02d                	j	20402920 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:702
        }
        else if (*format == 'b') {
204028f8:	f7042783          	lw	a5,-144(s0)
204028fc:	0007c703          	lbu	a4,0(a5)
20402900:	06200793          	li	a5,98
20402904:	00f71663          	bne	a4,a5,20402910 <_vsnprintf+0x3d2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:703
          base =  2U;
20402908:	4789                	li	a5,2
2040290a:	faf42c23          	sw	a5,-72(s0)
2040290e:	a809                	j	20402920 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:706
        }
        else {
          base = 10U;
20402910:	47a9                	li	a5,10
20402912:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:707
          flags &= ~FLAGS_HASH;   // no hash for dec format
20402916:	fcc42783          	lw	a5,-52(s0)
2040291a:	9bbd                	andi	a5,a5,-17
2040291c:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:710
        }
        // uppercase
        if (*format == 'X') {
20402920:	f7042783          	lw	a5,-144(s0)
20402924:	0007c703          	lbu	a4,0(a5)
20402928:	05800793          	li	a5,88
2040292c:	00f71863          	bne	a4,a5,2040293c <_vsnprintf+0x3fe>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:711
          flags |= FLAGS_UPPERCASE;
20402930:	fcc42783          	lw	a5,-52(s0)
20402934:	0207e793          	ori	a5,a5,32
20402938:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:715
        }

        // no plus or space flag for u, x, X, o, b
        if ((*format != 'i') && (*format != 'd')) {
2040293c:	f7042783          	lw	a5,-144(s0)
20402940:	0007c703          	lbu	a4,0(a5)
20402944:	06900793          	li	a5,105
20402948:	00f70f63          	beq	a4,a5,20402966 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:715 (discriminator 1)
2040294c:	f7042783          	lw	a5,-144(s0)
20402950:	0007c703          	lbu	a4,0(a5)
20402954:	06400793          	li	a5,100
20402958:	00f70763          	beq	a4,a5,20402966 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:716
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
2040295c:	fcc42783          	lw	a5,-52(s0)
20402960:	9bcd                	andi	a5,a5,-13
20402962:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:720
        }

        // ignore '0' flag when precision is given
        if (flags & FLAGS_PRECISION) {
20402966:	fcc42783          	lw	a5,-52(s0)
2040296a:	4007f793          	andi	a5,a5,1024
2040296e:	c791                	beqz	a5,2040297a <_vsnprintf+0x43c>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:721
          flags &= ~FLAGS_ZEROPAD;
20402970:	fcc42783          	lw	a5,-52(s0)
20402974:	9bf9                	andi	a5,a5,-2
20402976:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:725
        }

        // convert the integer
        if ((*format == 'i') || (*format == 'd')) {
2040297a:	f7042783          	lw	a5,-144(s0)
2040297e:	0007c703          	lbu	a4,0(a5)
20402982:	06900793          	li	a5,105
20402986:	00f70a63          	beq	a4,a5,2040299a <_vsnprintf+0x45c>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:725 (discriminator 1)
2040298a:	f7042783          	lw	a5,-144(s0)
2040298e:	0007c703          	lbu	a4,0(a5)
20402992:	06400793          	li	a5,100
20402996:	1af71b63          	bne	a4,a5,20402b4c <_vsnprintf+0x60e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:727
          // signed
          if (flags & FLAGS_LONG_LONG) {
2040299a:	fcc42783          	lw	a5,-52(s0)
2040299e:	2007f793          	andi	a5,a5,512
204029a2:	c3d5                	beqz	a5,20402a46 <_vsnprintf+0x508>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:729
#if defined(PRINTF_SUPPORT_LONG_LONG)
            const long long value = va_arg(va, long long);
204029a4:	f6c42783          	lw	a5,-148(s0)
204029a8:	079d                	addi	a5,a5,7
204029aa:	9be1                	andi	a5,a5,-8
204029ac:	00878713          	addi	a4,a5,8
204029b0:	f6e42623          	sw	a4,-148(s0)
204029b4:	0047a803          	lw	a6,4(a5)
204029b8:	439c                	lw	a5,0(a5)
204029ba:	f8f42c23          	sw	a5,-104(s0)
204029be:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:730
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
204029c2:	f9c42783          	lw	a5,-100(s0)
204029c6:	41f7d913          	srai	s2,a5,0x1f
204029ca:	f9c42783          	lw	a5,-100(s0)
204029ce:	41f7d993          	srai	s3,a5,0x1f
204029d2:	f9842783          	lw	a5,-104(s0)
204029d6:	0127ca33          	xor	s4,a5,s2
204029da:	f9c42783          	lw	a5,-100(s0)
204029de:	0137cab3          	xor	s5,a5,s3
204029e2:	412a07b3          	sub	a5,s4,s2
204029e6:	873e                	mv	a4,a5
204029e8:	00ea3733          	sltu	a4,s4,a4
204029ec:	413a8833          	sub	a6,s5,s3
204029f0:	40e80733          	sub	a4,a6,a4
204029f4:	883a                	mv	a6,a4
204029f6:	8a3e                	mv	s4,a5
204029f8:	8ac2                	mv	s5,a6
204029fa:	8652                	mv	a2,s4
204029fc:	86d6                	mv	a3,s5
204029fe:	f9c42783          	lw	a5,-100(s0)
20402a02:	83fd                	srli	a5,a5,0x1f
20402a04:	0ff7f713          	andi	a4,a5,255
20402a08:	fb842783          	lw	a5,-72(s0)
20402a0c:	8b3e                	mv	s6,a5
20402a0e:	4b81                	li	s7,0
20402a10:	fcc42783          	lw	a5,-52(s0)
20402a14:	c63e                	sw	a5,12(sp)
20402a16:	fc842783          	lw	a5,-56(s0)
20402a1a:	c43e                	sw	a5,8(sp)
20402a1c:	fc442783          	lw	a5,-60(s0)
20402a20:	c23e                	sw	a5,4(sp)
20402a22:	c05e                	sw	s7,0(sp)
20402a24:	88da                	mv	a7,s6
20402a26:	883a                	mv	a6,a4
20402a28:	8732                	mv	a4,a2
20402a2a:	87b6                	mv	a5,a3
20402a2c:	f7442683          	lw	a3,-140(s0)
20402a30:	fbc42603          	lw	a2,-68(s0)
20402a34:	f7842583          	lw	a1,-136(s0)
20402a38:	f7c42503          	lw	a0,-132(s0)
20402a3c:	d93fe0ef          	jal	ra,204017ce <_ntoa_long_long>
20402a40:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20402a44:	a425                	j	20402c6c <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:733
#endif
          }
          else if (flags & FLAGS_LONG) {
20402a46:	fcc42783          	lw	a5,-52(s0)
20402a4a:	1007f793          	andi	a5,a5,256
20402a4e:	c3ad                	beqz	a5,20402ab0 <_vsnprintf+0x572>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:734
            const long value = va_arg(va, long);
20402a50:	f6c42783          	lw	a5,-148(s0)
20402a54:	00478713          	addi	a4,a5,4
20402a58:	f6e42623          	sw	a4,-148(s0)
20402a5c:	439c                	lw	a5,0(a5)
20402a5e:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:735
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402a62:	f9442783          	lw	a5,-108(s0)
20402a66:	41f7d713          	srai	a4,a5,0x1f
20402a6a:	f9442783          	lw	a5,-108(s0)
20402a6e:	8fb9                	xor	a5,a5,a4
20402a70:	8f99                	sub	a5,a5,a4
20402a72:	86be                	mv	a3,a5
20402a74:	f9442783          	lw	a5,-108(s0)
20402a78:	83fd                	srli	a5,a5,0x1f
20402a7a:	0ff7f713          	andi	a4,a5,255
20402a7e:	fcc42783          	lw	a5,-52(s0)
20402a82:	c23e                	sw	a5,4(sp)
20402a84:	fc842783          	lw	a5,-56(s0)
20402a88:	c03e                	sw	a5,0(sp)
20402a8a:	fc442883          	lw	a7,-60(s0)
20402a8e:	fb842803          	lw	a6,-72(s0)
20402a92:	87ba                	mv	a5,a4
20402a94:	8736                	mv	a4,a3
20402a96:	f7442683          	lw	a3,-140(s0)
20402a9a:	fbc42603          	lw	a2,-68(s0)
20402a9e:	f7842583          	lw	a1,-136(s0)
20402aa2:	f7c42503          	lw	a0,-132(s0)
20402aa6:	c25fe0ef          	jal	ra,204016ca <_ntoa_long>
20402aaa:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20402aae:	aa7d                	j	20402c6c <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:738
          }
          else {
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
20402ab0:	fcc42783          	lw	a5,-52(s0)
20402ab4:	0407f793          	andi	a5,a5,64
20402ab8:	cb99                	beqz	a5,20402ace <_vsnprintf+0x590>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:738 (discriminator 1)
20402aba:	f6c42783          	lw	a5,-148(s0)
20402abe:	00478713          	addi	a4,a5,4
20402ac2:	f6e42623          	sw	a4,-148(s0)
20402ac6:	439c                	lw	a5,0(a5)
20402ac8:	0ff7f793          	andi	a5,a5,255
20402acc:	a03d                	j	20402afa <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:738 (discriminator 2)
20402ace:	fcc42783          	lw	a5,-52(s0)
20402ad2:	0807f793          	andi	a5,a5,128
20402ad6:	cb99                	beqz	a5,20402aec <_vsnprintf+0x5ae>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:738 (discriminator 4)
20402ad8:	f6c42783          	lw	a5,-148(s0)
20402adc:	00478713          	addi	a4,a5,4
20402ae0:	f6e42623          	sw	a4,-148(s0)
20402ae4:	439c                	lw	a5,0(a5)
20402ae6:	07c2                	slli	a5,a5,0x10
20402ae8:	87c1                	srai	a5,a5,0x10
20402aea:	a801                	j	20402afa <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:738 (discriminator 5)
20402aec:	f6c42783          	lw	a5,-148(s0)
20402af0:	00478713          	addi	a4,a5,4
20402af4:	f6e42623          	sw	a4,-148(s0)
20402af8:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:738 (discriminator 8)
20402afa:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:739 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402afe:	f9042783          	lw	a5,-112(s0)
20402b02:	41f7d713          	srai	a4,a5,0x1f
20402b06:	f9042783          	lw	a5,-112(s0)
20402b0a:	8fb9                	xor	a5,a5,a4
20402b0c:	8f99                	sub	a5,a5,a4
20402b0e:	86be                	mv	a3,a5
20402b10:	f9042783          	lw	a5,-112(s0)
20402b14:	83fd                	srli	a5,a5,0x1f
20402b16:	0ff7f713          	andi	a4,a5,255
20402b1a:	fcc42783          	lw	a5,-52(s0)
20402b1e:	c23e                	sw	a5,4(sp)
20402b20:	fc842783          	lw	a5,-56(s0)
20402b24:	c03e                	sw	a5,0(sp)
20402b26:	fc442883          	lw	a7,-60(s0)
20402b2a:	fb842803          	lw	a6,-72(s0)
20402b2e:	87ba                	mv	a5,a4
20402b30:	8736                	mv	a4,a3
20402b32:	f7442683          	lw	a3,-140(s0)
20402b36:	fbc42603          	lw	a2,-68(s0)
20402b3a:	f7842583          	lw	a1,-136(s0)
20402b3e:	f7c42503          	lw	a0,-132(s0)
20402b42:	b89fe0ef          	jal	ra,204016ca <_ntoa_long>
20402b46:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:727 (discriminator 8)
          if (flags & FLAGS_LONG_LONG) {
20402b4a:	a20d                	j	20402c6c <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:744
          }
        }
        else {
          // unsigned
          if (flags & FLAGS_LONG_LONG) {
20402b4c:	fcc42783          	lw	a5,-52(s0)
20402b50:	2007f793          	andi	a5,a5,512
20402b54:	cba1                	beqz	a5,20402ba4 <_vsnprintf+0x666>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:746
#if defined(PRINTF_SUPPORT_LONG_LONG)
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
20402b56:	f6c42783          	lw	a5,-148(s0)
20402b5a:	079d                	addi	a5,a5,7
20402b5c:	9be1                	andi	a5,a5,-8
20402b5e:	00878713          	addi	a4,a5,8
20402b62:	f6e42623          	sw	a4,-148(s0)
20402b66:	4398                	lw	a4,0(a5)
20402b68:	43dc                	lw	a5,4(a5)
20402b6a:	fb842683          	lw	a3,-72(s0)
20402b6e:	8c36                	mv	s8,a3
20402b70:	4c81                	li	s9,0
20402b72:	fcc42683          	lw	a3,-52(s0)
20402b76:	c636                	sw	a3,12(sp)
20402b78:	fc842683          	lw	a3,-56(s0)
20402b7c:	c436                	sw	a3,8(sp)
20402b7e:	fc442683          	lw	a3,-60(s0)
20402b82:	c236                	sw	a3,4(sp)
20402b84:	c066                	sw	s9,0(sp)
20402b86:	88e2                	mv	a7,s8
20402b88:	4801                	li	a6,0
20402b8a:	f7442683          	lw	a3,-140(s0)
20402b8e:	fbc42603          	lw	a2,-68(s0)
20402b92:	f7842583          	lw	a1,-136(s0)
20402b96:	f7c42503          	lw	a0,-132(s0)
20402b9a:	c35fe0ef          	jal	ra,204017ce <_ntoa_long_long>
20402b9e:	faa42e23          	sw	a0,-68(s0)
20402ba2:	a0e9                	j	20402c6c <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:749
#endif
          }
          else if (flags & FLAGS_LONG) {
20402ba4:	fcc42783          	lw	a5,-52(s0)
20402ba8:	1007f793          	andi	a5,a5,256
20402bac:	c3a1                	beqz	a5,20402bec <_vsnprintf+0x6ae>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:750
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
20402bae:	f6c42783          	lw	a5,-148(s0)
20402bb2:	00478713          	addi	a4,a5,4
20402bb6:	f6e42623          	sw	a4,-148(s0)
20402bba:	4398                	lw	a4,0(a5)
20402bbc:	fcc42783          	lw	a5,-52(s0)
20402bc0:	c23e                	sw	a5,4(sp)
20402bc2:	fc842783          	lw	a5,-56(s0)
20402bc6:	c03e                	sw	a5,0(sp)
20402bc8:	fc442883          	lw	a7,-60(s0)
20402bcc:	fb842803          	lw	a6,-72(s0)
20402bd0:	4781                	li	a5,0
20402bd2:	f7442683          	lw	a3,-140(s0)
20402bd6:	fbc42603          	lw	a2,-68(s0)
20402bda:	f7842583          	lw	a1,-136(s0)
20402bde:	f7c42503          	lw	a0,-132(s0)
20402be2:	ae9fe0ef          	jal	ra,204016ca <_ntoa_long>
20402be6:	faa42e23          	sw	a0,-68(s0)
20402bea:	a049                	j	20402c6c <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:753
          }
          else {
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
20402bec:	fcc42783          	lw	a5,-52(s0)
20402bf0:	0407f793          	andi	a5,a5,64
20402bf4:	cb99                	beqz	a5,20402c0a <_vsnprintf+0x6cc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:753 (discriminator 1)
20402bf6:	f6c42783          	lw	a5,-148(s0)
20402bfa:	00478713          	addi	a4,a5,4
20402bfe:	f6e42623          	sw	a4,-148(s0)
20402c02:	439c                	lw	a5,0(a5)
20402c04:	0ff7f793          	andi	a5,a5,255
20402c08:	a03d                	j	20402c36 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:753 (discriminator 2)
20402c0a:	fcc42783          	lw	a5,-52(s0)
20402c0e:	0807f793          	andi	a5,a5,128
20402c12:	cb99                	beqz	a5,20402c28 <_vsnprintf+0x6ea>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:753 (discriminator 4)
20402c14:	f6c42783          	lw	a5,-148(s0)
20402c18:	00478713          	addi	a4,a5,4
20402c1c:	f6e42623          	sw	a4,-148(s0)
20402c20:	439c                	lw	a5,0(a5)
20402c22:	07c2                	slli	a5,a5,0x10
20402c24:	83c1                	srli	a5,a5,0x10
20402c26:	a801                	j	20402c36 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:753 (discriminator 5)
20402c28:	f6c42783          	lw	a5,-148(s0)
20402c2c:	00478713          	addi	a4,a5,4
20402c30:	f6e42623          	sw	a4,-148(s0)
20402c34:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:753 (discriminator 8)
20402c36:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:754 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
20402c3a:	fcc42783          	lw	a5,-52(s0)
20402c3e:	c23e                	sw	a5,4(sp)
20402c40:	fc842783          	lw	a5,-56(s0)
20402c44:	c03e                	sw	a5,0(sp)
20402c46:	fc442883          	lw	a7,-60(s0)
20402c4a:	fb842803          	lw	a6,-72(s0)
20402c4e:	4781                	li	a5,0
20402c50:	fa042703          	lw	a4,-96(s0)
20402c54:	f7442683          	lw	a3,-140(s0)
20402c58:	fbc42603          	lw	a2,-68(s0)
20402c5c:	f7842583          	lw	a1,-136(s0)
20402c60:	f7c42503          	lw	a0,-132(s0)
20402c64:	a67fe0ef          	jal	ra,204016ca <_ntoa_long>
20402c68:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:757
          }
        }
        format++;
20402c6c:	f7042783          	lw	a5,-144(s0)
20402c70:	0785                	addi	a5,a5,1
20402c72:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:758
        break;
20402c76:	a6f5                	j	20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:763
      }
#if defined(PRINTF_SUPPORT_FLOAT)
      case 'f' :
      case 'F' :
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
20402c78:	f7042783          	lw	a5,-144(s0)
20402c7c:	0007c703          	lbu	a4,0(a5)
20402c80:	04600793          	li	a5,70
20402c84:	00f71863          	bne	a4,a5,20402c94 <_vsnprintf+0x756>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:763 (discriminator 1)
20402c88:	fcc42783          	lw	a5,-52(s0)
20402c8c:	0207e793          	ori	a5,a5,32
20402c90:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:764
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20402c94:	f6c42783          	lw	a5,-148(s0)
20402c98:	079d                	addi	a5,a5,7
20402c9a:	9be1                	andi	a5,a5,-8
20402c9c:	00878713          	addi	a4,a5,8
20402ca0:	f6e42623          	sw	a4,-148(s0)
20402ca4:	4398                	lw	a4,0(a5)
20402ca6:	43dc                	lw	a5,4(a5)
20402ca8:	fcc42683          	lw	a3,-52(s0)
20402cac:	c036                	sw	a3,0(sp)
20402cae:	fc842883          	lw	a7,-56(s0)
20402cb2:	fc442803          	lw	a6,-60(s0)
20402cb6:	f7442683          	lw	a3,-140(s0)
20402cba:	fbc42603          	lw	a2,-68(s0)
20402cbe:	f7842583          	lw	a1,-136(s0)
20402cc2:	f7c42503          	lw	a0,-132(s0)
20402cc6:	c37fe0ef          	jal	ra,204018fc <_ftoa>
20402cca:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:765
        format++;
20402cce:	f7042783          	lw	a5,-144(s0)
20402cd2:	0785                	addi	a5,a5,1
20402cd4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:766
        break;
20402cd8:	a669                	j	20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:772
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
      case 'e':
      case 'E':
      case 'g':
      case 'G':
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
20402cda:	f7042783          	lw	a5,-144(s0)
20402cde:	0007c703          	lbu	a4,0(a5)
20402ce2:	06700793          	li	a5,103
20402ce6:	00f70a63          	beq	a4,a5,20402cfa <_vsnprintf+0x7bc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:772 (discriminator 2)
20402cea:	f7042783          	lw	a5,-144(s0)
20402cee:	0007c703          	lbu	a4,0(a5)
20402cf2:	04700793          	li	a5,71
20402cf6:	00f71a63          	bne	a4,a5,20402d0a <_vsnprintf+0x7cc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:772 (discriminator 3)
20402cfa:	fcc42703          	lw	a4,-52(s0)
20402cfe:	6785                	lui	a5,0x1
20402d00:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402d04:	8fd9                	or	a5,a5,a4
20402d06:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:773
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
20402d0a:	f7042783          	lw	a5,-144(s0)
20402d0e:	0007c703          	lbu	a4,0(a5)
20402d12:	04500793          	li	a5,69
20402d16:	00f70a63          	beq	a4,a5,20402d2a <_vsnprintf+0x7ec>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:773 (discriminator 2)
20402d1a:	f7042783          	lw	a5,-144(s0)
20402d1e:	0007c703          	lbu	a4,0(a5)
20402d22:	04700793          	li	a5,71
20402d26:	00f71863          	bne	a4,a5,20402d36 <_vsnprintf+0x7f8>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:773 (discriminator 3)
20402d2a:	fcc42783          	lw	a5,-52(s0)
20402d2e:	0207e793          	ori	a5,a5,32
20402d32:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:774
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20402d36:	f6c42783          	lw	a5,-148(s0)
20402d3a:	079d                	addi	a5,a5,7
20402d3c:	9be1                	andi	a5,a5,-8
20402d3e:	00878713          	addi	a4,a5,8
20402d42:	f6e42623          	sw	a4,-148(s0)
20402d46:	4398                	lw	a4,0(a5)
20402d48:	43dc                	lw	a5,4(a5)
20402d4a:	fcc42683          	lw	a3,-52(s0)
20402d4e:	c036                	sw	a3,0(sp)
20402d50:	fc842883          	lw	a7,-56(s0)
20402d54:	fc442803          	lw	a6,-60(s0)
20402d58:	f7442683          	lw	a3,-140(s0)
20402d5c:	fbc42603          	lw	a2,-68(s0)
20402d60:	f7842583          	lw	a1,-136(s0)
20402d64:	f7c42503          	lw	a0,-132(s0)
20402d68:	968ff0ef          	jal	ra,20401ed0 <_etoa>
20402d6c:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:775
        format++;
20402d70:	f7042783          	lw	a5,-144(s0)
20402d74:	0785                	addi	a5,a5,1
20402d76:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:776
        break;
20402d7a:	a4e5                	j	20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:780
#endif  // PRINTF_SUPPORT_EXPONENTIAL
#endif  // PRINTF_SUPPORT_FLOAT
      case 'c' : {
        unsigned int l = 1U;
20402d7c:	4785                	li	a5,1
20402d7e:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:782
        // pre padding
        if (!(flags & FLAGS_LEFT)) {
20402d82:	fcc42783          	lw	a5,-52(s0)
20402d86:	8b89                	andi	a5,a5,2
20402d88:	ef85                	bnez	a5,20402dc0 <_vsnprintf+0x882>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:783
          while (l++ < width) {
20402d8a:	a00d                	j	20402dac <_vsnprintf+0x86e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:784
            out(' ', buffer, idx++, maxlen);
20402d8c:	fbc42783          	lw	a5,-68(s0)
20402d90:	00178713          	addi	a4,a5,1
20402d94:	fae42e23          	sw	a4,-68(s0)
20402d98:	f7c42703          	lw	a4,-132(s0)
20402d9c:	f7442683          	lw	a3,-140(s0)
20402da0:	863e                	mv	a2,a5
20402da2:	f7842583          	lw	a1,-136(s0)
20402da6:	02000513          	li	a0,32
20402daa:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:783
          while (l++ < width) {
20402dac:	fb442783          	lw	a5,-76(s0)
20402db0:	00178713          	addi	a4,a5,1
20402db4:	fae42a23          	sw	a4,-76(s0)
20402db8:	fc842703          	lw	a4,-56(s0)
20402dbc:	fce7e8e3          	bltu	a5,a4,20402d8c <_vsnprintf+0x84e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:788
          }
        }
        // char output
        out((char)va_arg(va, int), buffer, idx++, maxlen);
20402dc0:	f6c42783          	lw	a5,-148(s0)
20402dc4:	00478713          	addi	a4,a5,4
20402dc8:	f6e42623          	sw	a4,-148(s0)
20402dcc:	439c                	lw	a5,0(a5)
20402dce:	0ff7f513          	andi	a0,a5,255
20402dd2:	fbc42783          	lw	a5,-68(s0)
20402dd6:	00178713          	addi	a4,a5,1
20402dda:	fae42e23          	sw	a4,-68(s0)
20402dde:	f7c42703          	lw	a4,-132(s0)
20402de2:	f7442683          	lw	a3,-140(s0)
20402de6:	863e                	mv	a2,a5
20402de8:	f7842583          	lw	a1,-136(s0)
20402dec:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:790
        // post padding
        if (flags & FLAGS_LEFT) {
20402dee:	fcc42783          	lw	a5,-52(s0)
20402df2:	8b89                	andi	a5,a5,2
20402df4:	cf85                	beqz	a5,20402e2c <_vsnprintf+0x8ee>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:791
          while (l++ < width) {
20402df6:	a00d                	j	20402e18 <_vsnprintf+0x8da>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:792
            out(' ', buffer, idx++, maxlen);
20402df8:	fbc42783          	lw	a5,-68(s0)
20402dfc:	00178713          	addi	a4,a5,1
20402e00:	fae42e23          	sw	a4,-68(s0)
20402e04:	f7c42703          	lw	a4,-132(s0)
20402e08:	f7442683          	lw	a3,-140(s0)
20402e0c:	863e                	mv	a2,a5
20402e0e:	f7842583          	lw	a1,-136(s0)
20402e12:	02000513          	li	a0,32
20402e16:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:791
          while (l++ < width) {
20402e18:	fb442783          	lw	a5,-76(s0)
20402e1c:	00178713          	addi	a4,a5,1
20402e20:	fae42a23          	sw	a4,-76(s0)
20402e24:	fc842703          	lw	a4,-56(s0)
20402e28:	fce7e8e3          	bltu	a5,a4,20402df8 <_vsnprintf+0x8ba>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:795
          }
        }
        format++;
20402e2c:	f7042783          	lw	a5,-144(s0)
20402e30:	0785                	addi	a5,a5,1
20402e32:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:796
        break;
20402e36:	a435                	j	20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:800
      }

      case 's' : {
        const char* p = va_arg(va, char*);
20402e38:	f6c42783          	lw	a5,-148(s0)
20402e3c:	00478713          	addi	a4,a5,4
20402e40:	f6e42623          	sw	a4,-148(s0)
20402e44:	439c                	lw	a5,0(a5)
20402e46:	faf42823          	sw	a5,-80(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:801
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
20402e4a:	fc442783          	lw	a5,-60(s0)
20402e4e:	c781                	beqz	a5,20402e56 <_vsnprintf+0x918>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:801 (discriminator 1)
20402e50:	fc442783          	lw	a5,-60(s0)
20402e54:	a011                	j	20402e58 <_vsnprintf+0x91a>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:801 (discriminator 2)
20402e56:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:801 (discriminator 4)
20402e58:	85be                	mv	a1,a5
20402e5a:	fb042503          	lw	a0,-80(s0)
20402e5e:	c22fe0ef          	jal	ra,20401280 <_strnlen_s>
20402e62:	faa42623          	sw	a0,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:803 (discriminator 4)
        // pre padding
        if (flags & FLAGS_PRECISION) {
20402e66:	fcc42783          	lw	a5,-52(s0)
20402e6a:	4007f793          	andi	a5,a5,1024
20402e6e:	cb91                	beqz	a5,20402e82 <_vsnprintf+0x944>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:804
          l = (l < precision ? l : precision);
20402e70:	fac42703          	lw	a4,-84(s0)
20402e74:	fc442783          	lw	a5,-60(s0)
20402e78:	00f77363          	bgeu	a4,a5,20402e7e <_vsnprintf+0x940>
20402e7c:	87ba                	mv	a5,a4
20402e7e:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:806
        }
        if (!(flags & FLAGS_LEFT)) {
20402e82:	fcc42783          	lw	a5,-52(s0)
20402e86:	8b89                	andi	a5,a5,2
20402e88:	e3bd                	bnez	a5,20402eee <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:807
          while (l++ < width) {
20402e8a:	a00d                	j	20402eac <_vsnprintf+0x96e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:808
            out(' ', buffer, idx++, maxlen);
20402e8c:	fbc42783          	lw	a5,-68(s0)
20402e90:	00178713          	addi	a4,a5,1
20402e94:	fae42e23          	sw	a4,-68(s0)
20402e98:	f7c42703          	lw	a4,-132(s0)
20402e9c:	f7442683          	lw	a3,-140(s0)
20402ea0:	863e                	mv	a2,a5
20402ea2:	f7842583          	lw	a1,-136(s0)
20402ea6:	02000513          	li	a0,32
20402eaa:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:807
          while (l++ < width) {
20402eac:	fac42783          	lw	a5,-84(s0)
20402eb0:	00178713          	addi	a4,a5,1
20402eb4:	fae42623          	sw	a4,-84(s0)
20402eb8:	fc842703          	lw	a4,-56(s0)
20402ebc:	fce7e8e3          	bltu	a5,a4,20402e8c <_vsnprintf+0x94e>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:812
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20402ec0:	a03d                	j	20402eee <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:813
          out(*(p++), buffer, idx++, maxlen);
20402ec2:	fb042783          	lw	a5,-80(s0)
20402ec6:	00178713          	addi	a4,a5,1
20402eca:	fae42823          	sw	a4,-80(s0)
20402ece:	0007c503          	lbu	a0,0(a5)
20402ed2:	fbc42783          	lw	a5,-68(s0)
20402ed6:	00178713          	addi	a4,a5,1
20402eda:	fae42e23          	sw	a4,-68(s0)
20402ede:	f7c42703          	lw	a4,-132(s0)
20402ee2:	f7442683          	lw	a3,-140(s0)
20402ee6:	863e                	mv	a2,a5
20402ee8:	f7842583          	lw	a1,-136(s0)
20402eec:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:812
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20402eee:	fb042783          	lw	a5,-80(s0)
20402ef2:	0007c783          	lbu	a5,0(a5)
20402ef6:	cf89                	beqz	a5,20402f10 <_vsnprintf+0x9d2>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:812 (discriminator 1)
20402ef8:	fcc42783          	lw	a5,-52(s0)
20402efc:	4007f793          	andi	a5,a5,1024
20402f00:	d3e9                	beqz	a5,20402ec2 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:812 (discriminator 2)
20402f02:	fc442783          	lw	a5,-60(s0)
20402f06:	fff78713          	addi	a4,a5,-1
20402f0a:	fce42223          	sw	a4,-60(s0)
20402f0e:	fbd5                	bnez	a5,20402ec2 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:816
        }
        // post padding
        if (flags & FLAGS_LEFT) {
20402f10:	fcc42783          	lw	a5,-52(s0)
20402f14:	8b89                	andi	a5,a5,2
20402f16:	cf85                	beqz	a5,20402f4e <_vsnprintf+0xa10>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:817
          while (l++ < width) {
20402f18:	a00d                	j	20402f3a <_vsnprintf+0x9fc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:818
            out(' ', buffer, idx++, maxlen);
20402f1a:	fbc42783          	lw	a5,-68(s0)
20402f1e:	00178713          	addi	a4,a5,1
20402f22:	fae42e23          	sw	a4,-68(s0)
20402f26:	f7c42703          	lw	a4,-132(s0)
20402f2a:	f7442683          	lw	a3,-140(s0)
20402f2e:	863e                	mv	a2,a5
20402f30:	f7842583          	lw	a1,-136(s0)
20402f34:	02000513          	li	a0,32
20402f38:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:817
          while (l++ < width) {
20402f3a:	fac42783          	lw	a5,-84(s0)
20402f3e:	00178713          	addi	a4,a5,1
20402f42:	fae42623          	sw	a4,-84(s0)
20402f46:	fc842703          	lw	a4,-56(s0)
20402f4a:	fce7e8e3          	bltu	a5,a4,20402f1a <_vsnprintf+0x9dc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:821
          }
        }
        format++;
20402f4e:	f7042783          	lw	a5,-144(s0)
20402f52:	0785                	addi	a5,a5,1
20402f54:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:822
        break;
20402f58:	a229                	j	20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:826
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
20402f5a:	47a1                	li	a5,8
20402f5c:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:827
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
20402f60:	fcc42783          	lw	a5,-52(s0)
20402f64:	0217e793          	ori	a5,a5,33
20402f68:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:829
#if defined(PRINTF_SUPPORT_LONG_LONG)
        const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
20402f6c:	f80407a3          	sb	zero,-113(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:830
        if (is_ll) {
20402f70:	f8f44783          	lbu	a5,-113(s0)
20402f74:	c7a9                	beqz	a5,20402fbe <_vsnprintf+0xa80>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:831
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
20402f76:	f6c42783          	lw	a5,-148(s0)
20402f7a:	00478713          	addi	a4,a5,4
20402f7e:	f6e42623          	sw	a4,-148(s0)
20402f82:	439c                	lw	a5,0(a5)
20402f84:	8d3e                	mv	s10,a5
20402f86:	4d81                	li	s11,0
20402f88:	fcc42783          	lw	a5,-52(s0)
20402f8c:	c63e                	sw	a5,12(sp)
20402f8e:	fc842783          	lw	a5,-56(s0)
20402f92:	c43e                	sw	a5,8(sp)
20402f94:	fc442783          	lw	a5,-60(s0)
20402f98:	c23e                	sw	a5,4(sp)
20402f9a:	c002                	sw	zero,0(sp)
20402f9c:	48c1                	li	a7,16
20402f9e:	4801                	li	a6,0
20402fa0:	876a                	mv	a4,s10
20402fa2:	87ee                	mv	a5,s11
20402fa4:	f7442683          	lw	a3,-140(s0)
20402fa8:	fbc42603          	lw	a2,-68(s0)
20402fac:	f7842583          	lw	a1,-136(s0)
20402fb0:	f7c42503          	lw	a0,-132(s0)
20402fb4:	81bfe0ef          	jal	ra,204017ce <_ntoa_long_long>
20402fb8:	faa42e23          	sw	a0,-68(s0)
20402fbc:	a83d                	j	20402ffa <_vsnprintf+0xabc>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:835
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
20402fbe:	f6c42783          	lw	a5,-148(s0)
20402fc2:	00478713          	addi	a4,a5,4
20402fc6:	f6e42623          	sw	a4,-148(s0)
20402fca:	439c                	lw	a5,0(a5)
20402fcc:	873e                	mv	a4,a5
20402fce:	fcc42783          	lw	a5,-52(s0)
20402fd2:	c23e                	sw	a5,4(sp)
20402fd4:	fc842783          	lw	a5,-56(s0)
20402fd8:	c03e                	sw	a5,0(sp)
20402fda:	fc442883          	lw	a7,-60(s0)
20402fde:	4841                	li	a6,16
20402fe0:	4781                	li	a5,0
20402fe2:	f7442683          	lw	a3,-140(s0)
20402fe6:	fbc42603          	lw	a2,-68(s0)
20402fea:	f7842583          	lw	a1,-136(s0)
20402fee:	f7c42503          	lw	a0,-132(s0)
20402ff2:	ed8fe0ef          	jal	ra,204016ca <_ntoa_long>
20402ff6:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:839
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
20402ffa:	f7042783          	lw	a5,-144(s0)
20402ffe:	0785                	addi	a5,a5,1
20403000:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:840
        break;
20403004:	a8b9                	j	20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:844
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
20403006:	fbc42783          	lw	a5,-68(s0)
2040300a:	00178713          	addi	a4,a5,1
2040300e:	fae42e23          	sw	a4,-68(s0)
20403012:	f7c42703          	lw	a4,-132(s0)
20403016:	f7442683          	lw	a3,-140(s0)
2040301a:	863e                	mv	a2,a5
2040301c:	f7842583          	lw	a1,-136(s0)
20403020:	02500513          	li	a0,37
20403024:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:845
        format++;
20403026:	f7042783          	lw	a5,-144(s0)
2040302a:	0785                	addi	a5,a5,1
2040302c:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:846
        break;
20403030:	a80d                	j	20403062 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:849

      default :
        out(*format, buffer, idx++, maxlen);
20403032:	f7042783          	lw	a5,-144(s0)
20403036:	0007c503          	lbu	a0,0(a5)
2040303a:	fbc42783          	lw	a5,-68(s0)
2040303e:	00178713          	addi	a4,a5,1
20403042:	fae42e23          	sw	a4,-68(s0)
20403046:	f7c42703          	lw	a4,-132(s0)
2040304a:	f7442683          	lw	a3,-140(s0)
2040304e:	863e                	mv	a2,a5
20403050:	f7842583          	lw	a1,-136(s0)
20403054:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:850
        format++;
20403056:	f7042783          	lw	a5,-144(s0)
2040305a:	0785                	addi	a5,a5,1
2040305c:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:851
        break;
20403060:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:590
  while (*format)
20403062:	f7042783          	lw	a5,-144(s0)
20403066:	0007c783          	lbu	a5,0(a5)
2040306a:	d2079063          	bnez	a5,2040258a <_vsnprintf+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:856
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
2040306e:	fbc42703          	lw	a4,-68(s0)
20403072:	f7442783          	lw	a5,-140(s0)
20403076:	00f76663          	bltu	a4,a5,20403082 <_vsnprintf+0xb44>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:856 (discriminator 1)
2040307a:	f7442783          	lw	a5,-140(s0)
2040307e:	17fd                	addi	a5,a5,-1
20403080:	a019                	j	20403086 <_vsnprintf+0xb48>
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:856 (discriminator 2)
20403082:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:856 (discriminator 4)
20403086:	f7c42703          	lw	a4,-132(s0)
2040308a:	f7442683          	lw	a3,-140(s0)
2040308e:	863e                	mv	a2,a5
20403090:	f7842583          	lw	a1,-136(s0)
20403094:	4501                	li	a0,0
20403096:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:859 (discriminator 4)

  // return written chars without terminating \0
  return (int)idx;
20403098:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:860 (discriminator 4)
}
2040309c:	853e                	mv	a0,a5
2040309e:	50ba                	lw	ra,172(sp)
204030a0:	542a                	lw	s0,168(sp)
204030a2:	591a                	lw	s2,164(sp)
204030a4:	598a                	lw	s3,160(sp)
204030a6:	4a7a                	lw	s4,156(sp)
204030a8:	4aea                	lw	s5,152(sp)
204030aa:	4b5a                	lw	s6,148(sp)
204030ac:	4bca                	lw	s7,144(sp)
204030ae:	4c3a                	lw	s8,140(sp)
204030b0:	4caa                	lw	s9,136(sp)
204030b2:	4d1a                	lw	s10,132(sp)
204030b4:	4d8a                	lw	s11,128(sp)
204030b6:	614d                	addi	sp,sp,176
204030b8:	8082                	ret

204030ba <printf_>:
printf_():
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:866


///////////////////////////////////////////////////////////////////////////////

int printf_(const char* format, ...)
{
204030ba:	715d                	addi	sp,sp,-80
204030bc:	d606                	sw	ra,44(sp)
204030be:	d422                	sw	s0,40(sp)
204030c0:	1800                	addi	s0,sp,48
204030c2:	fca42e23          	sw	a0,-36(s0)
204030c6:	c04c                	sw	a1,4(s0)
204030c8:	c410                	sw	a2,8(s0)
204030ca:	c454                	sw	a3,12(s0)
204030cc:	c818                	sw	a4,16(s0)
204030ce:	c85c                	sw	a5,20(s0)
204030d0:	01042c23          	sw	a6,24(s0)
204030d4:	01142e23          	sw	a7,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:868
  va_list va;
  va_start(va, format);
204030d8:	02040793          	addi	a5,s0,32
204030dc:	1791                	addi	a5,a5,-28
204030de:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:870
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
204030e2:	fe842703          	lw	a4,-24(s0)
204030e6:	fe440793          	addi	a5,s0,-28
204030ea:	fdc42683          	lw	a3,-36(s0)
204030ee:	567d                	li	a2,-1
204030f0:	85be                	mv	a1,a5
204030f2:	204017b7          	lui	a5,0x20401
204030f6:	24e78513          	addi	a0,a5,590 # 2040124e <_out_char>
204030fa:	c44ff0ef          	jal	ra,2040253e <_vsnprintf>
204030fe:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:872
  va_end(va);
  return ret;
20403102:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/Asconref/printf.c:873
}
20403106:	853e                	mv	a0,a5
20403108:	50b2                	lw	ra,44(sp)
2040310a:	5422                	lw	s0,40(sp)
2040310c:	6161                	addi	sp,sp,80
2040310e:	8082                	ret

20403110 <write>:
write():
20403110:	5fbfd797          	auipc	a5,0x5fbfd
20403114:	65878793          	addi	a5,a5,1624 # 80000768 <_impure_ptr>
20403118:	86b2                	mv	a3,a2
2040311a:	862e                	mv	a2,a1
2040311c:	85aa                	mv	a1,a0
2040311e:	4388                	lw	a0,0(a5)
20403120:	a009                	j	20403122 <_write_r>

20403122 <_write_r>:
_write_r():
20403122:	1141                	addi	sp,sp,-16
20403124:	c422                	sw	s0,8(sp)
20403126:	842a                	mv	s0,a0
20403128:	852e                	mv	a0,a1
2040312a:	85b2                	mv	a1,a2
2040312c:	8636                	mv	a2,a3
2040312e:	2e01a423          	sw	zero,744(gp) # 80001250 <errno>
20403132:	c606                	sw	ra,12(sp)
20403134:	78f010ef          	jal	ra,204050c2 <_write>
20403138:	57fd                	li	a5,-1
2040313a:	00f51763          	bne	a0,a5,20403148 <_write_r+0x26>
2040313e:	2e818793          	addi	a5,gp,744 # 80001250 <errno>
20403142:	439c                	lw	a5,0(a5)
20403144:	c391                	beqz	a5,20403148 <_write_r+0x26>
20403146:	c01c                	sw	a5,0(s0)
20403148:	40b2                	lw	ra,12(sp)
2040314a:	4422                	lw	s0,8(sp)
2040314c:	0141                	addi	sp,sp,16
2040314e:	8082                	ret

20403150 <__udivdi3>:
__udivdi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
20403150:	87ae                	mv	a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20403152:	8832                	mv	a6,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20403154:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20403156:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20403158:	20069663          	bnez	a3,20403364 <__udivdi3+0x214>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
2040315c:	00006897          	auipc	a7,0x6
20403160:	e0488893          	addi	a7,a7,-508 # 20408f60 <__clz_tab>
20403164:	0ac5fe63          	bgeu	a1,a2,20403220 <__udivdi3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20403168:	6741                	lui	a4,0x10
2040316a:	0ae67463          	bgeu	a2,a4,20403212 <__udivdi3+0xc2>
2040316e:	0ff00713          	li	a4,255
20403172:	00c73733          	sltu	a4,a4,a2
20403176:	070e                	slli	a4,a4,0x3
20403178:	00e656b3          	srl	a3,a2,a4
2040317c:	98b6                	add	a7,a7,a3
2040317e:	0008c683          	lbu	a3,0(a7)
20403182:	9736                	add	a4,a4,a3
20403184:	02000693          	li	a3,32
20403188:	8e99                	sub	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
2040318a:	ca99                	beqz	a3,204031a0 <__udivdi3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2040318c:	00d797b3          	sll	a5,a5,a3
20403190:	00e55733          	srl	a4,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20403194:	00d61833          	sll	a6,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20403198:	00f765b3          	or	a1,a4,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2040319c:	00d51333          	sll	t1,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
204031a0:	01085513          	srli	a0,a6,0x10
204031a4:	02a5f733          	remu	a4,a1,a0
204031a8:	01081613          	slli	a2,a6,0x10
204031ac:	8241                	srli	a2,a2,0x10
204031ae:	01035693          	srli	a3,t1,0x10
204031b2:	02a5d5b3          	divu	a1,a1,a0
204031b6:	0742                	slli	a4,a4,0x10
204031b8:	8ed9                	or	a3,a3,a4
204031ba:	02b607b3          	mul	a5,a2,a1
204031be:	872e                	mv	a4,a1
204031c0:	00f6fc63          	bgeu	a3,a5,204031d8 <__udivdi3+0x88>
204031c4:	96c2                	add	a3,a3,a6
204031c6:	fff58713          	addi	a4,a1,-1
204031ca:	0106e763          	bltu	a3,a6,204031d8 <__udivdi3+0x88>
204031ce:	00f6f563          	bgeu	a3,a5,204031d8 <__udivdi3+0x88>
204031d2:	ffe58713          	addi	a4,a1,-2
204031d6:	96c2                	add	a3,a3,a6
204031d8:	8e9d                	sub	a3,a3,a5
204031da:	02a6f7b3          	remu	a5,a3,a0
204031de:	0342                	slli	t1,t1,0x10
204031e0:	01035313          	srli	t1,t1,0x10
204031e4:	02a6d6b3          	divu	a3,a3,a0
204031e8:	07c2                	slli	a5,a5,0x10
204031ea:	0067e333          	or	t1,a5,t1
204031ee:	02d605b3          	mul	a1,a2,a3
204031f2:	8536                	mv	a0,a3
204031f4:	00b37b63          	bgeu	t1,a1,2040320a <__udivdi3+0xba>
204031f8:	9342                	add	t1,t1,a6
204031fa:	fff68513          	addi	a0,a3,-1
204031fe:	01036663          	bltu	t1,a6,2040320a <__udivdi3+0xba>
20403202:	00b37463          	bgeu	t1,a1,2040320a <__udivdi3+0xba>
20403206:	ffe68513          	addi	a0,a3,-2
2040320a:	0742                	slli	a4,a4,0x10
2040320c:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
2040320e:	4581                	li	a1,0
20403210:	a84d                	j	204032c2 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20403212:	010006b7          	lui	a3,0x1000
20403216:	4741                	li	a4,16
20403218:	f6d660e3          	bltu	a2,a3,20403178 <__udivdi3+0x28>
2040321c:	4761                	li	a4,24
2040321e:	bfa9                	j	20403178 <__udivdi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20403220:	e601                	bnez	a2,20403228 <__udivdi3+0xd8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20403222:	4685                	li	a3,1
20403224:	02c6d833          	divu	a6,a3,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20403228:	66c1                	lui	a3,0x10
2040322a:	08d87e63          	bgeu	a6,a3,204032c6 <__udivdi3+0x176>
2040322e:	0ff00693          	li	a3,255
20403232:	0106f363          	bgeu	a3,a6,20403238 <__udivdi3+0xe8>
20403236:	4721                	li	a4,8
20403238:	00e856b3          	srl	a3,a6,a4
2040323c:	98b6                	add	a7,a7,a3
2040323e:	0008c683          	lbu	a3,0(a7)
20403242:	96ba                	add	a3,a3,a4
20403244:	02000713          	li	a4,32
20403248:	8f15                	sub	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
2040324a:	e749                	bnez	a4,204032d4 <__udivdi3+0x184>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
2040324c:	410787b3          	sub	a5,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
20403250:	4585                	li	a1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20403252:	01085613          	srli	a2,a6,0x10
20403256:	01081893          	slli	a7,a6,0x10
2040325a:	0108d893          	srli	a7,a7,0x10
2040325e:	01035693          	srli	a3,t1,0x10
20403262:	02c7f733          	remu	a4,a5,a2
20403266:	02c7d7b3          	divu	a5,a5,a2
2040326a:	0742                	slli	a4,a4,0x10
2040326c:	8ed9                	or	a3,a3,a4
2040326e:	02f88533          	mul	a0,a7,a5
20403272:	873e                	mv	a4,a5
20403274:	00a6fc63          	bgeu	a3,a0,2040328c <__udivdi3+0x13c>
20403278:	96c2                	add	a3,a3,a6
2040327a:	fff78713          	addi	a4,a5,-1
2040327e:	0106e763          	bltu	a3,a6,2040328c <__udivdi3+0x13c>
20403282:	00a6f563          	bgeu	a3,a0,2040328c <__udivdi3+0x13c>
20403286:	ffe78713          	addi	a4,a5,-2
2040328a:	96c2                	add	a3,a3,a6
2040328c:	8e89                	sub	a3,a3,a0
2040328e:	02c6f7b3          	remu	a5,a3,a2
20403292:	0342                	slli	t1,t1,0x10
20403294:	01035313          	srli	t1,t1,0x10
20403298:	02c6d6b3          	divu	a3,a3,a2
2040329c:	07c2                	slli	a5,a5,0x10
2040329e:	0067e333          	or	t1,a5,t1
204032a2:	02d888b3          	mul	a7,a7,a3
204032a6:	8536                	mv	a0,a3
204032a8:	01137b63          	bgeu	t1,a7,204032be <__udivdi3+0x16e>
204032ac:	9342                	add	t1,t1,a6
204032ae:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
204032b2:	01036663          	bltu	t1,a6,204032be <__udivdi3+0x16e>
204032b6:	01137463          	bgeu	t1,a7,204032be <__udivdi3+0x16e>
204032ba:	ffe68513          	addi	a0,a3,-2
204032be:	0742                	slli	a4,a4,0x10
204032c0:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
204032c2:	853a                	mv	a0,a4
204032c4:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
204032c6:	010006b7          	lui	a3,0x1000
204032ca:	4741                	li	a4,16
204032cc:	f6d866e3          	bltu	a6,a3,20403238 <__udivdi3+0xe8>
204032d0:	4761                	li	a4,24
204032d2:	b79d                	j	20403238 <__udivdi3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
204032d4:	00e81833          	sll	a6,a6,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
204032d8:	00d7d5b3          	srl	a1,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
204032dc:	00e51333          	sll	t1,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
204032e0:	00d556b3          	srl	a3,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
204032e4:	01085513          	srli	a0,a6,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
204032e8:	00e797b3          	sll	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
204032ec:	02a5f733          	remu	a4,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
204032f0:	00f6e8b3          	or	a7,a3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
204032f4:	01081793          	slli	a5,a6,0x10
204032f8:	83c1                	srli	a5,a5,0x10
204032fa:	0108d613          	srli	a2,a7,0x10
204032fe:	02a5d5b3          	divu	a1,a1,a0
20403302:	0742                	slli	a4,a4,0x10
20403304:	8f51                	or	a4,a4,a2
20403306:	02b786b3          	mul	a3,a5,a1
2040330a:	862e                	mv	a2,a1
2040330c:	00d77c63          	bgeu	a4,a3,20403324 <__udivdi3+0x1d4>
20403310:	9742                	add	a4,a4,a6
20403312:	fff58613          	addi	a2,a1,-1
20403316:	01076763          	bltu	a4,a6,20403324 <__udivdi3+0x1d4>
2040331a:	00d77563          	bgeu	a4,a3,20403324 <__udivdi3+0x1d4>
2040331e:	ffe58613          	addi	a2,a1,-2
20403322:	9742                	add	a4,a4,a6
20403324:	40d706b3          	sub	a3,a4,a3
20403328:	02a6f733          	remu	a4,a3,a0
2040332c:	08c2                	slli	a7,a7,0x10
2040332e:	0108d893          	srli	a7,a7,0x10
20403332:	02a6d6b3          	divu	a3,a3,a0
20403336:	0742                	slli	a4,a4,0x10
20403338:	02d785b3          	mul	a1,a5,a3
2040333c:	011767b3          	or	a5,a4,a7
20403340:	8736                	mv	a4,a3
20403342:	00b7fc63          	bgeu	a5,a1,2040335a <__udivdi3+0x20a>
20403346:	97c2                	add	a5,a5,a6
20403348:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
2040334c:	0107e763          	bltu	a5,a6,2040335a <__udivdi3+0x20a>
20403350:	00b7f563          	bgeu	a5,a1,2040335a <__udivdi3+0x20a>
20403354:	ffe68713          	addi	a4,a3,-2
20403358:	97c2                	add	a5,a5,a6
2040335a:	8f8d                	sub	a5,a5,a1
2040335c:	01061593          	slli	a1,a2,0x10
20403360:	8dd9                	or	a1,a1,a4
20403362:	bdc5                	j	20403252 <__udivdi3+0x102>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20403364:	14d5e263          	bltu	a1,a3,204034a8 <__udivdi3+0x358>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20403368:	6741                	lui	a4,0x10
2040336a:	02e6fe63          	bgeu	a3,a4,204033a6 <__udivdi3+0x256>
2040336e:	0ff00813          	li	a6,255
20403372:	00d83733          	sltu	a4,a6,a3
20403376:	070e                	slli	a4,a4,0x3
20403378:	00e6d833          	srl	a6,a3,a4
2040337c:	00006597          	auipc	a1,0x6
20403380:	be458593          	addi	a1,a1,-1052 # 20408f60 <__clz_tab>
20403384:	95c2                	add	a1,a1,a6
20403386:	0005c803          	lbu	a6,0(a1)
2040338a:	02000593          	li	a1,32
2040338e:	983a                	add	a6,a6,a4
20403390:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20403394:	e185                	bnez	a1,204033b4 <__udivdi3+0x264>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20403396:	4705                	li	a4,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20403398:	f2f6e5e3          	bltu	a3,a5,204032c2 <__udivdi3+0x172>
2040339c:	00c53533          	sltu	a0,a0,a2
204033a0:	00154713          	xori	a4,a0,1
204033a4:	bf39                	j	204032c2 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
204033a6:	010005b7          	lui	a1,0x1000
204033aa:	4741                	li	a4,16
204033ac:	fcb6e6e3          	bltu	a3,a1,20403378 <__udivdi3+0x228>
204033b0:	4761                	li	a4,24
204033b2:	b7d9                	j	20403378 <__udivdi3+0x228>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
204033b4:	01065733          	srl	a4,a2,a6
204033b8:	00b696b3          	sll	a3,a3,a1
204033bc:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204033be:	0106de93          	srli	t4,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
204033c2:	0107d733          	srl	a4,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204033c6:	03d778b3          	remu	a7,a4,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
204033ca:	00b797b3          	sll	a5,a5,a1
204033ce:	01055833          	srl	a6,a0,a6
204033d2:	00f86333          	or	t1,a6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204033d6:	01069793          	slli	a5,a3,0x10
204033da:	83c1                	srli	a5,a5,0x10
204033dc:	01035813          	srli	a6,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
204033e0:	00b61633          	sll	a2,a2,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204033e4:	03d75733          	divu	a4,a4,t4
204033e8:	08c2                	slli	a7,a7,0x10
204033ea:	0108e833          	or	a6,a7,a6
204033ee:	02e78f33          	mul	t5,a5,a4
204033f2:	8e3a                	mv	t3,a4
204033f4:	01e87c63          	bgeu	a6,t5,2040340c <__udivdi3+0x2bc>
204033f8:	9836                	add	a6,a6,a3
204033fa:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
204033fe:	00d86763          	bltu	a6,a3,2040340c <__udivdi3+0x2bc>
20403402:	01e87563          	bgeu	a6,t5,2040340c <__udivdi3+0x2bc>
20403406:	ffe70e13          	addi	t3,a4,-2
2040340a:	9836                	add	a6,a6,a3
2040340c:	41e80833          	sub	a6,a6,t5
20403410:	03d878b3          	remu	a7,a6,t4
20403414:	03d85833          	divu	a6,a6,t4
20403418:	08c2                	slli	a7,a7,0x10
2040341a:	03078eb3          	mul	t4,a5,a6
2040341e:	01031793          	slli	a5,t1,0x10
20403422:	83c1                	srli	a5,a5,0x10
20403424:	00f8e7b3          	or	a5,a7,a5
20403428:	8742                	mv	a4,a6
2040342a:	01d7fc63          	bgeu	a5,t4,20403442 <__udivdi3+0x2f2>
2040342e:	97b6                	add	a5,a5,a3
20403430:	fff80713          	addi	a4,a6,-1
20403434:	00d7e763          	bltu	a5,a3,20403442 <__udivdi3+0x2f2>
20403438:	01d7f563          	bgeu	a5,t4,20403442 <__udivdi3+0x2f2>
2040343c:	ffe80713          	addi	a4,a6,-2
20403440:	97b6                	add	a5,a5,a3
20403442:	0e42                	slli	t3,t3,0x10
20403444:	41d787b3          	sub	a5,a5,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20403448:	6ec1                	lui	t4,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2040344a:	00ee6733          	or	a4,t3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040344e:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
20403452:	01077333          	and	t1,a4,a6
20403456:	01075893          	srli	a7,a4,0x10
2040345a:	01067833          	and	a6,a2,a6
2040345e:	8241                	srli	a2,a2,0x10
20403460:	03030e33          	mul	t3,t1,a6
20403464:	03088833          	mul	a6,a7,a6
20403468:	010e5693          	srli	a3,t3,0x10
2040346c:	02c30333          	mul	t1,t1,a2
20403470:	9342                	add	t1,t1,a6
20403472:	969a                	add	a3,a3,t1
20403474:	02c888b3          	mul	a7,a7,a2
20403478:	0106f363          	bgeu	a3,a6,2040347e <__udivdi3+0x32e>
2040347c:	98f6                	add	a7,a7,t4
2040347e:	0106d613          	srli	a2,a3,0x10
20403482:	98b2                	add	a7,a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20403484:	0317e063          	bltu	a5,a7,204034a4 <__udivdi3+0x354>
20403488:	d91793e3          	bne	a5,a7,2040320e <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040348c:	67c1                	lui	a5,0x10
2040348e:	17fd                	addi	a5,a5,-1
20403490:	8efd                	and	a3,a3,a5
20403492:	06c2                	slli	a3,a3,0x10
20403494:	00fe7e33          	and	t3,t3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20403498:	00b51533          	sll	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040349c:	96f2                	add	a3,a3,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
2040349e:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
204034a0:	e2d571e3          	bgeu	a0,a3,204032c2 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
204034a4:	177d                	addi	a4,a4,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
204034a6:	b3a5                	j	2040320e <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
204034a8:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
204034aa:	4701                	li	a4,0
204034ac:	bd19                	j	204032c2 <__udivdi3+0x172>

204034ae <__umoddi3>:
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
204034ae:	88b2                	mv	a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
204034b0:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
204034b2:	87aa                	mv	a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
204034b4:	882e                	mv	a6,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
204034b6:	1c069863          	bnez	a3,20403686 <__umoddi3+0x1d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
204034ba:	00006697          	auipc	a3,0x6
204034be:	aa668693          	addi	a3,a3,-1370 # 20408f60 <__clz_tab>
204034c2:	0ac5f863          	bgeu	a1,a2,20403572 <__umoddi3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
204034c6:	6341                	lui	t1,0x10
204034c8:	08667e63          	bgeu	a2,t1,20403564 <__umoddi3+0xb6>
204034cc:	0ff00313          	li	t1,255
204034d0:	00c37363          	bgeu	t1,a2,204034d6 <__umoddi3+0x28>
204034d4:	4721                	li	a4,8
204034d6:	00e65333          	srl	t1,a2,a4
204034da:	969a                	add	a3,a3,t1
204034dc:	0006ce03          	lbu	t3,0(a3)
204034e0:	02000313          	li	t1,32
204034e4:	9e3a                	add	t3,t3,a4
204034e6:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
204034ea:	00030c63          	beqz	t1,20403502 <__umoddi3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
204034ee:	006595b3          	sll	a1,a1,t1
204034f2:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
204034f6:	006618b3          	sll	a7,a2,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
204034fa:	00be6833          	or	a6,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
204034fe:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20403502:	0108d613          	srli	a2,a7,0x10
20403506:	02c87733          	remu	a4,a6,a2
2040350a:	01089513          	slli	a0,a7,0x10
2040350e:	8141                	srli	a0,a0,0x10
20403510:	0107d693          	srli	a3,a5,0x10
20403514:	02c85833          	divu	a6,a6,a2
20403518:	0742                	slli	a4,a4,0x10
2040351a:	8ed9                	or	a3,a3,a4
2040351c:	03050833          	mul	a6,a0,a6
20403520:	0106f863          	bgeu	a3,a6,20403530 <__umoddi3+0x82>
20403524:	96c6                	add	a3,a3,a7
20403526:	0116e563          	bltu	a3,a7,20403530 <__umoddi3+0x82>
2040352a:	0106f363          	bgeu	a3,a6,20403530 <__umoddi3+0x82>
2040352e:	96c6                	add	a3,a3,a7
20403530:	410686b3          	sub	a3,a3,a6
20403534:	02c6f733          	remu	a4,a3,a2
20403538:	07c2                	slli	a5,a5,0x10
2040353a:	83c1                	srli	a5,a5,0x10
2040353c:	02c6d6b3          	divu	a3,a3,a2
20403540:	02d506b3          	mul	a3,a0,a3
20403544:	01071513          	slli	a0,a4,0x10
20403548:	8fc9                	or	a5,a5,a0
2040354a:	00d7f863          	bgeu	a5,a3,2040355a <__umoddi3+0xac>
2040354e:	97c6                	add	a5,a5,a7
20403550:	0117e563          	bltu	a5,a7,2040355a <__umoddi3+0xac>
20403554:	00d7f363          	bgeu	a5,a3,2040355a <__umoddi3+0xac>
20403558:	97c6                	add	a5,a5,a7
2040355a:	8f95                	sub	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
2040355c:	0067d533          	srl	a0,a5,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
20403560:	4581                	li	a1,0
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
20403562:	8082                	ret
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20403564:	01000337          	lui	t1,0x1000
20403568:	4741                	li	a4,16
2040356a:	f66666e3          	bltu	a2,t1,204034d6 <__umoddi3+0x28>
2040356e:	4761                	li	a4,24
20403570:	b79d                	j	204034d6 <__umoddi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20403572:	e601                	bnez	a2,2040357a <__umoddi3+0xcc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20403574:	4605                	li	a2,1
20403576:	031658b3          	divu	a7,a2,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
2040357a:	6641                	lui	a2,0x10
2040357c:	08c8f363          	bgeu	a7,a2,20403602 <__umoddi3+0x154>
20403580:	0ff00613          	li	a2,255
20403584:	01167363          	bgeu	a2,a7,2040358a <__umoddi3+0xdc>
20403588:	4721                	li	a4,8
2040358a:	00e8d633          	srl	a2,a7,a4
2040358e:	96b2                	add	a3,a3,a2
20403590:	0006ce03          	lbu	t3,0(a3)
20403594:	02000313          	li	t1,32
20403598:	9e3a                	add	t3,t3,a4
2040359a:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
2040359e:	06031963          	bnez	t1,20403610 <__umoddi3+0x162>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
204035a2:	411585b3          	sub	a1,a1,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
204035a6:	0108d713          	srli	a4,a7,0x10
204035aa:	01089513          	slli	a0,a7,0x10
204035ae:	8141                	srli	a0,a0,0x10
204035b0:	0107d613          	srli	a2,a5,0x10
204035b4:	02e5f6b3          	remu	a3,a1,a4
204035b8:	02e5d5b3          	divu	a1,a1,a4
204035bc:	06c2                	slli	a3,a3,0x10
204035be:	8ed1                	or	a3,a3,a2
204035c0:	02b505b3          	mul	a1,a0,a1
204035c4:	00b6f863          	bgeu	a3,a1,204035d4 <__umoddi3+0x126>
204035c8:	96c6                	add	a3,a3,a7
204035ca:	0116e563          	bltu	a3,a7,204035d4 <__umoddi3+0x126>
204035ce:	00b6f363          	bgeu	a3,a1,204035d4 <__umoddi3+0x126>
204035d2:	96c6                	add	a3,a3,a7
204035d4:	40b685b3          	sub	a1,a3,a1
204035d8:	02e5f6b3          	remu	a3,a1,a4
204035dc:	07c2                	slli	a5,a5,0x10
204035de:	83c1                	srli	a5,a5,0x10
204035e0:	02e5d5b3          	divu	a1,a1,a4
204035e4:	02b505b3          	mul	a1,a0,a1
204035e8:	01069513          	slli	a0,a3,0x10
204035ec:	8fc9                	or	a5,a5,a0
204035ee:	00b7f863          	bgeu	a5,a1,204035fe <__umoddi3+0x150>
204035f2:	97c6                	add	a5,a5,a7
204035f4:	0117e563          	bltu	a5,a7,204035fe <__umoddi3+0x150>
204035f8:	00b7f363          	bgeu	a5,a1,204035fe <__umoddi3+0x150>
204035fc:	97c6                	add	a5,a5,a7
204035fe:	8f8d                	sub	a5,a5,a1
20403600:	bfb1                	j	2040355c <__umoddi3+0xae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20403602:	01000637          	lui	a2,0x1000
20403606:	4741                	li	a4,16
20403608:	f8c8e1e3          	bltu	a7,a2,2040358a <__umoddi3+0xdc>
2040360c:	4761                	li	a4,24
2040360e:	bfb5                	j	2040358a <__umoddi3+0xdc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20403610:	006898b3          	sll	a7,a7,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20403614:	01c5d733          	srl	a4,a1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20403618:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2040361c:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20403620:	0108d513          	srli	a0,a7,0x10
20403624:	02a776b3          	remu	a3,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20403628:	006595b3          	sll	a1,a1,t1
2040362c:	00be6e33          	or	t3,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20403630:	01089593          	slli	a1,a7,0x10
20403634:	81c1                	srli	a1,a1,0x10
20403636:	010e5613          	srli	a2,t3,0x10
2040363a:	02a75733          	divu	a4,a4,a0
2040363e:	06c2                	slli	a3,a3,0x10
20403640:	8ed1                	or	a3,a3,a2
20403642:	02e58733          	mul	a4,a1,a4
20403646:	00e6f863          	bgeu	a3,a4,20403656 <__umoddi3+0x1a8>
2040364a:	96c6                	add	a3,a3,a7
2040364c:	0116e563          	bltu	a3,a7,20403656 <__umoddi3+0x1a8>
20403650:	00e6f363          	bgeu	a3,a4,20403656 <__umoddi3+0x1a8>
20403654:	96c6                	add	a3,a3,a7
20403656:	40e68633          	sub	a2,a3,a4
2040365a:	02a676b3          	remu	a3,a2,a0
2040365e:	0e42                	slli	t3,t3,0x10
20403660:	010e5e13          	srli	t3,t3,0x10
20403664:	02a65633          	divu	a2,a2,a0
20403668:	06c2                	slli	a3,a3,0x10
2040366a:	02c58633          	mul	a2,a1,a2
2040366e:	01c6e5b3          	or	a1,a3,t3
20403672:	00c5f863          	bgeu	a1,a2,20403682 <__umoddi3+0x1d4>
20403676:	95c6                	add	a1,a1,a7
20403678:	0115e563          	bltu	a1,a7,20403682 <__umoddi3+0x1d4>
2040367c:	00c5f363          	bgeu	a1,a2,20403682 <__umoddi3+0x1d4>
20403680:	95c6                	add	a1,a1,a7
20403682:	8d91                	sub	a1,a1,a2
20403684:	b70d                	j	204035a6 <__umoddi3+0xf8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20403686:	ecd5eee3          	bltu	a1,a3,20403562 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
2040368a:	6741                	lui	a4,0x10
2040368c:	04e6f563          	bgeu	a3,a4,204036d6 <__umoddi3+0x228>
20403690:	0ff00e93          	li	t4,255
20403694:	00deb733          	sltu	a4,t4,a3
20403698:	070e                	slli	a4,a4,0x3
2040369a:	00e6d333          	srl	t1,a3,a4
2040369e:	00006897          	auipc	a7,0x6
204036a2:	8c288893          	addi	a7,a7,-1854 # 20408f60 <__clz_tab>
204036a6:	989a                	add	a7,a7,t1
204036a8:	0008ce83          	lbu	t4,0(a7)
204036ac:	02000e13          	li	t3,32
204036b0:	9eba                	add	t4,t4,a4
204036b2:	41de0e33          	sub	t3,t3,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
204036b6:	020e1763          	bnez	t3,204036e4 <__umoddi3+0x236>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
204036ba:	00b6e463          	bltu	a3,a1,204036c2 <__umoddi3+0x214>
204036be:	00c56963          	bltu	a0,a2,204036d0 <__umoddi3+0x222>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
204036c2:	40c507b3          	sub	a5,a0,a2
204036c6:	8d95                	sub	a1,a1,a3
204036c8:	00f53533          	sltu	a0,a0,a5
204036cc:	40a58833          	sub	a6,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
204036d0:	853e                	mv	a0,a5
204036d2:	85c2                	mv	a1,a6
204036d4:	b579                	j	20403562 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
204036d6:	010008b7          	lui	a7,0x1000
204036da:	4741                	li	a4,16
204036dc:	fb16efe3          	bltu	a3,a7,2040369a <__umoddi3+0x1ec>
204036e0:	4761                	li	a4,24
204036e2:	bf65                	j	2040369a <__umoddi3+0x1ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
204036e4:	01d65733          	srl	a4,a2,t4
204036e8:	01c696b3          	sll	a3,a3,t3
204036ec:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204036ee:	0106d813          	srli	a6,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
204036f2:	01d5d733          	srl	a4,a1,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204036f6:	03077333          	remu	t1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
204036fa:	01c595b3          	sll	a1,a1,t3
204036fe:	01d557b3          	srl	a5,a0,t4
20403702:	8fcd                	or	a5,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403704:	01069593          	slli	a1,a3,0x10
20403708:	81c1                	srli	a1,a1,0x10
2040370a:	0107d893          	srli	a7,a5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2040370e:	01c61633          	sll	a2,a2,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20403712:	01c51533          	sll	a0,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403716:	03075733          	divu	a4,a4,a6
2040371a:	0342                	slli	t1,t1,0x10
2040371c:	011368b3          	or	a7,t1,a7
20403720:	02e58f33          	mul	t5,a1,a4
20403724:	833a                	mv	t1,a4
20403726:	01e8fc63          	bgeu	a7,t5,2040373e <__umoddi3+0x290>
2040372a:	98b6                	add	a7,a7,a3
2040372c:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
20403730:	00d8e763          	bltu	a7,a3,2040373e <__umoddi3+0x290>
20403734:	01e8f563          	bgeu	a7,t5,2040373e <__umoddi3+0x290>
20403738:	ffe70313          	addi	t1,a4,-2
2040373c:	98b6                	add	a7,a7,a3
2040373e:	41e888b3          	sub	a7,a7,t5
20403742:	0308ff33          	remu	t5,a7,a6
20403746:	0308d8b3          	divu	a7,a7,a6
2040374a:	0f42                	slli	t5,t5,0x10
2040374c:	03158833          	mul	a6,a1,a7
20403750:	01079593          	slli	a1,a5,0x10
20403754:	81c1                	srli	a1,a1,0x10
20403756:	00bf65b3          	or	a1,t5,a1
2040375a:	87c6                	mv	a5,a7
2040375c:	0105fc63          	bgeu	a1,a6,20403774 <__umoddi3+0x2c6>
20403760:	95b6                	add	a1,a1,a3
20403762:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
20403766:	00d5e763          	bltu	a1,a3,20403774 <__umoddi3+0x2c6>
2040376a:	0105f563          	bgeu	a1,a6,20403774 <__umoddi3+0x2c6>
2040376e:	ffe88793          	addi	a5,a7,-2
20403772:	95b6                	add	a1,a1,a3
20403774:	0342                	slli	t1,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20403776:	6f41                	lui	t5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403778:	00f36333          	or	t1,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040377c:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
20403780:	00f378b3          	and	a7,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403784:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20403788:	01035313          	srli	t1,t1,0x10
2040378c:	01065813          	srli	a6,a2,0x10
20403790:	8ff1                	and	a5,a5,a2
20403792:	02f88733          	mul	a4,a7,a5
20403796:	02f307b3          	mul	a5,t1,a5
2040379a:	030888b3          	mul	a7,a7,a6
2040379e:	03030333          	mul	t1,t1,a6
204037a2:	98be                	add	a7,a7,a5
204037a4:	01075813          	srli	a6,a4,0x10
204037a8:	9846                	add	a6,a6,a7
204037aa:	00f87363          	bgeu	a6,a5,204037b0 <__umoddi3+0x302>
204037ae:	937a                	add	t1,t1,t5
204037b0:	01085793          	srli	a5,a6,0x10
204037b4:	933e                	add	t1,t1,a5
204037b6:	67c1                	lui	a5,0x10
204037b8:	17fd                	addi	a5,a5,-1
204037ba:	00f87833          	and	a6,a6,a5
204037be:	0842                	slli	a6,a6,0x10
204037c0:	8f7d                	and	a4,a4,a5
204037c2:	9742                	add	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
204037c4:	0065e663          	bltu	a1,t1,204037d0 <__umoddi3+0x322>
204037c8:	00659c63          	bne	a1,t1,204037e0 <__umoddi3+0x332>
204037cc:	00e57a63          	bgeu	a0,a4,204037e0 <__umoddi3+0x332>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
204037d0:	40c70633          	sub	a2,a4,a2
204037d4:	00c73733          	sltu	a4,a4,a2
204037d8:	9736                	add	a4,a4,a3
204037da:	40e30333          	sub	t1,t1,a4
204037de:	8732                	mv	a4,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
204037e0:	40e50733          	sub	a4,a0,a4
204037e4:	00e53533          	sltu	a0,a0,a4
204037e8:	406585b3          	sub	a1,a1,t1
204037ec:	8d89                	sub	a1,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
204037ee:	01d597b3          	sll	a5,a1,t4
204037f2:	01c75733          	srl	a4,a4,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
204037f6:	00e7e533          	or	a0,a5,a4
204037fa:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
204037fe:	b395                	j	20403562 <__umoddi3+0xb4>

20403800 <__adddf3>:
__adddf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403800:	00100837          	lui	a6,0x100
20403804:	187d                	addi	a6,a6,-1
20403806:	00b878b3          	and	a7,a6,a1
2040380a:	088e                	slli	a7,a7,0x3
2040380c:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403810:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403812:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403816:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2040381a:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2040381e:	0146d893          	srli	a7,a3,0x14
20403822:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403824:	ca26                	sw	s1,20(sp)
20403826:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403828:	7ff77493          	andi	s1,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2040382c:	7ff8f893          	andi	a7,a7,2047
20403830:	01d65713          	srli	a4,a2,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403834:	ce06                	sw	ra,28(sp)
20403836:	cc22                	sw	s0,24(sp)
20403838:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2040383a:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2040383e:	82fd                	srli	a3,a3,0x1f
20403840:	01076733          	or	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403844:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403846:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403848:	41148833          	sub	a6,s1,a7
2040384c:	22d91663          	bne	s2,a3,20403a78 <__adddf3+0x278>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 7)
20403850:	0f005163          	blez	a6,20403932 <__adddf3+0x132>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 9)
20403854:	02089863          	bnez	a7,20403884 <__adddf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 11)
20403858:	00c766b3          	or	a3,a4,a2
2040385c:	56068763          	beqz	a3,20403dca <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 14)
20403860:	fff80593          	addi	a1,a6,-1 # fffff <__heap_size+0xff7ff>
20403864:	e989                	bnez	a1,20403876 <__adddf3+0x76>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 23)
20403866:	962a                	add	a2,a2,a0
20403868:	00a63533          	sltu	a0,a2,a0
2040386c:	97ba                	add	a5,a5,a4
2040386e:	97aa                	add	a5,a5,a0
20403870:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 80)
20403872:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
20403874:	a8b1                	j	204038d0 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 24)
20403876:	7ff00693          	li	a3,2047
2040387a:	00d81d63          	bne	a6,a3,20403894 <__adddf3+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
2040387e:	7ff00493          	li	s1,2047
20403882:	aa79                	j	20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 12)
20403884:	7ff00693          	li	a3,2047
20403888:	18d48c63          	beq	s1,a3,20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 38)
2040388c:	008006b7          	lui	a3,0x800
20403890:	8f55                	or	a4,a4,a3
20403892:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 47)
20403894:	03800693          	li	a3,56
20403898:	08b6c963          	blt	a3,a1,2040392a <__adddf3+0x12a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 48)
2040389c:	46fd                	li	a3,31
2040389e:	06b6c063          	blt	a3,a1,204038fe <__adddf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 50)
204038a2:	02000813          	li	a6,32
204038a6:	40b80833          	sub	a6,a6,a1
204038aa:	010716b3          	sll	a3,a4,a6
204038ae:	00b658b3          	srl	a7,a2,a1
204038b2:	01061633          	sll	a2,a2,a6
204038b6:	0116e6b3          	or	a3,a3,a7
204038ba:	00c03633          	snez	a2,a2
204038be:	8e55                	or	a2,a2,a3
204038c0:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 64)
204038c4:	962a                	add	a2,a2,a0
204038c6:	973e                	add	a4,a4,a5
204038c8:	00a637b3          	sltu	a5,a2,a0
204038cc:	97ba                	add	a5,a5,a4
204038ce:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 122)
204038d0:	00879713          	slli	a4,a5,0x8
204038d4:	14075663          	bgez	a4,20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 182)
204038d8:	0485                	addi	s1,s1,1
204038da:	7ff00713          	li	a4,2047
204038de:	48e48563          	beq	s1,a4,20403d68 <__adddf3+0x568>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204038e2:	ff8006b7          	lui	a3,0xff800
204038e6:	16fd                	addi	a3,a3,-1
204038e8:	8efd                	and	a3,a3,a5
204038ea:	00155593          	srli	a1,a0,0x1
204038ee:	8905                	andi	a0,a0,1
204038f0:	01f69793          	slli	a5,a3,0x1f
204038f4:	8d4d                	or	a0,a0,a1
204038f6:	8d5d                	or	a0,a0,a5
204038f8:	0016d793          	srli	a5,a3,0x1
204038fc:	a215                	j	20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 51)
204038fe:	fe058693          	addi	a3,a1,-32 # ffffe0 <__heap_size+0xfff7e0>
20403902:	02000893          	li	a7,32
20403906:	00d756b3          	srl	a3,a4,a3
2040390a:	4801                	li	a6,0
2040390c:	01158863          	beq	a1,a7,2040391c <__adddf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 58)
20403910:	04000813          	li	a6,64
20403914:	40b805b3          	sub	a1,a6,a1
20403918:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 61)
2040391c:	00c86633          	or	a2,a6,a2
20403920:	00c03633          	snez	a2,a2
20403924:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 49)
20403926:	4701                	li	a4,0
20403928:	bf71                	j	204038c4 <__adddf3+0xc4>
2040392a:	8e59                	or	a2,a2,a4
2040392c:	00c03633          	snez	a2,a2
20403930:	bfdd                	j	20403926 <__adddf3+0x126>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 10)
20403932:	0a080b63          	beqz	a6,204039e8 <__adddf3+0x1e8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 66)
20403936:	409885b3          	sub	a1,a7,s1
2040393a:	e48d                	bnez	s1,20403964 <__adddf3+0x164>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 68)
2040393c:	00a7e6b3          	or	a3,a5,a0
20403940:	40068b63          	beqz	a3,20403d56 <__adddf3+0x556>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 71)
20403944:	fff58693          	addi	a3,a1,-1
20403948:	e699                	bnez	a3,20403956 <__adddf3+0x156>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
2040394a:	9532                	add	a0,a0,a2
2040394c:	97ba                	add	a5,a5,a4
2040394e:	00c53633          	sltu	a2,a0,a2
20403952:	97b2                	add	a5,a5,a2
20403954:	bf39                	j	20403872 <__adddf3+0x72>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 81)
20403956:	7ff00813          	li	a6,2047
2040395a:	01059d63          	bne	a1,a6,20403974 <__adddf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2040395e:	87ba                	mv	a5,a4
20403960:	8532                	mv	a0,a2
20403962:	bf31                	j	2040387e <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 69)
20403964:	7ff00693          	li	a3,2047
20403968:	fed88be3          	beq	a7,a3,2040395e <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 95)
2040396c:	008006b7          	lui	a3,0x800
20403970:	8fd5                	or	a5,a5,a3
20403972:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 104)
20403974:	03800593          	li	a1,56
20403978:	06d5c463          	blt	a1,a3,204039e0 <__adddf3+0x1e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 105)
2040397c:	45fd                	li	a1,31
2040397e:	02d5cb63          	blt	a1,a3,204039b4 <__adddf3+0x1b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 107)
20403982:	02000813          	li	a6,32
20403986:	40d80833          	sub	a6,a6,a3
2040398a:	00d55333          	srl	t1,a0,a3
2040398e:	010795b3          	sll	a1,a5,a6
20403992:	01051533          	sll	a0,a0,a6
20403996:	0065e5b3          	or	a1,a1,t1
2040399a:	00a03533          	snez	a0,a0
2040399e:	8d4d                	or	a0,a0,a1
204039a0:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 121)
204039a4:	9532                	add	a0,a0,a2
204039a6:	00e687b3          	add	a5,a3,a4
204039aa:	00c53633          	sltu	a2,a0,a2
204039ae:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 121)
204039b0:	84c6                	mv	s1,a7
204039b2:	bf39                	j	204038d0 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 108)
204039b4:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
204039b8:	02000313          	li	t1,32
204039bc:	00b7d5b3          	srl	a1,a5,a1
204039c0:	4801                	li	a6,0
204039c2:	00668863          	beq	a3,t1,204039d2 <__adddf3+0x1d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 115)
204039c6:	04000813          	li	a6,64
204039ca:	40d806b3          	sub	a3,a6,a3
204039ce:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 118)
204039d2:	00a86533          	or	a0,a6,a0
204039d6:	00a03533          	snez	a0,a0
204039da:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 106)
204039dc:	4681                	li	a3,0
204039de:	b7d9                	j	204039a4 <__adddf3+0x1a4>
204039e0:	8d5d                	or	a0,a0,a5
204039e2:	00a03533          	snez	a0,a0
204039e6:	bfdd                	j	204039dc <__adddf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 67)
204039e8:	00148693          	addi	a3,s1,1
204039ec:	7fe6f593          	andi	a1,a3,2046
204039f0:	e1bd                	bnez	a1,20403a56 <__adddf3+0x256>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 123)
204039f2:	00a7e6b3          	or	a3,a5,a0
204039f6:	e4a9                	bnez	s1,20403a40 <__adddf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 125)
204039f8:	36068363          	beqz	a3,20403d5e <__adddf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 128)
204039fc:	00c766b3          	or	a3,a4,a2
20403a00:	c285                	beqz	a3,20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 134)
20403a02:	962a                	add	a2,a2,a0
20403a04:	97ba                	add	a5,a5,a4
20403a06:	00a63533          	sltu	a0,a2,a0
20403a0a:	97aa                	add	a5,a5,a0
20403a0c:	00879713          	slli	a4,a5,0x8
20403a10:	8532                	mv	a0,a2
20403a12:	00075763          	bgez	a4,20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 136)
20403a16:	ff800737          	lui	a4,0xff800
20403a1a:	177d                	addi	a4,a4,-1
20403a1c:	8ff9                	and	a5,a5,a4
20403a1e:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 417)
20403a20:	00757713          	andi	a4,a0,7
20403a24:	34070463          	beqz	a4,20403d6c <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 37)
20403a28:	00f57713          	andi	a4,a0,15
20403a2c:	4691                	li	a3,4
20403a2e:	32d70f63          	beq	a4,a3,20403d6c <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 44)
20403a32:	00450693          	addi	a3,a0,4
20403a36:	00a6b533          	sltu	a0,a3,a0
20403a3a:	97aa                	add	a5,a5,a0
20403a3c:	8536                	mv	a0,a3
20403a3e:	a63d                	j	20403d6c <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 153)
20403a40:	de99                	beqz	a3,2040395e <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 155)
20403a42:	8e59                	or	a2,a2,a4
20403a44:	e2060de3          	beqz	a2,2040387e <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403a48:	4901                	li	s2,0
20403a4a:	004007b7          	lui	a5,0x400
20403a4e:	4501                	li	a0,0
20403a50:	7ff00493          	li	s1,2047
20403a54:	ae21                	j	20403d6c <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 124)
20403a56:	7ff00593          	li	a1,2047
20403a5a:	30b68563          	beq	a3,a1,20403d64 <__adddf3+0x564>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403a5e:	962a                	add	a2,a2,a0
20403a60:	973e                	add	a4,a4,a5
20403a62:	00a637b3          	sltu	a5,a2,a0
20403a66:	973e                	add	a4,a4,a5
20403a68:	01f71513          	slli	a0,a4,0x1f
20403a6c:	8205                	srli	a2,a2,0x1
20403a6e:	8d51                	or	a0,a0,a2
20403a70:	00175793          	srli	a5,a4,0x1
20403a74:	84b6                	mv	s1,a3
20403a76:	b76d                	j	20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 8)
20403a78:	0d005663          	blez	a6,20403b44 <__adddf3+0x344>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 200)
20403a7c:	08089163          	bnez	a7,20403afe <__adddf3+0x2fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 202)
20403a80:	00c766b3          	or	a3,a4,a2
20403a84:	34068363          	beqz	a3,20403dca <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 205)
20403a88:	fff80593          	addi	a1,a6,-1
20403a8c:	e991                	bnez	a1,20403aa0 <__adddf3+0x2a0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 214)
20403a8e:	40c50633          	sub	a2,a0,a2
20403a92:	00c53533          	sltu	a0,a0,a2
20403a96:	8f99                	sub	a5,a5,a4
20403a98:	8f89                	sub	a5,a5,a0
20403a9a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 271)
20403a9c:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20403a9e:	a0b1                	j	20403aea <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 215)
20403aa0:	7ff00693          	li	a3,2047
20403aa4:	dcd80de3          	beq	a6,a3,2040387e <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 238)
20403aa8:	03800693          	li	a3,56
20403aac:	08b6c863          	blt	a3,a1,20403b3c <__adddf3+0x33c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 239)
20403ab0:	46fd                	li	a3,31
20403ab2:	04b6cf63          	blt	a3,a1,20403b10 <__adddf3+0x310>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 241)
20403ab6:	02000813          	li	a6,32
20403aba:	40b80833          	sub	a6,a6,a1
20403abe:	010716b3          	sll	a3,a4,a6
20403ac2:	00b658b3          	srl	a7,a2,a1
20403ac6:	01061633          	sll	a2,a2,a6
20403aca:	0116e6b3          	or	a3,a3,a7
20403ace:	00c03633          	snez	a2,a2
20403ad2:	8e55                	or	a2,a2,a3
20403ad4:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 255)
20403ad8:	40c50633          	sub	a2,a0,a2
20403adc:	40e78733          	sub	a4,a5,a4
20403ae0:	00c537b3          	sltu	a5,a0,a2
20403ae4:	40f707b3          	sub	a5,a4,a5
20403ae8:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 313)
20403aea:	00879713          	slli	a4,a5,0x8
20403aee:	f20759e3          	bgez	a4,20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 373)
20403af2:	00800437          	lui	s0,0x800
20403af6:	147d                	addi	s0,s0,-1
20403af8:	8c7d                	and	s0,s0,a5
20403afa:	89aa                	mv	s3,a0
20403afc:	a275                	j	20403ca8 <__adddf3+0x4a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 203)
20403afe:	7ff00693          	li	a3,2047
20403b02:	f0d48fe3          	beq	s1,a3,20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 229)
20403b06:	008006b7          	lui	a3,0x800
20403b0a:	8f55                	or	a4,a4,a3
20403b0c:	85c2                	mv	a1,a6
20403b0e:	bf69                	j	20403aa8 <__adddf3+0x2a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 242)
20403b10:	fe058693          	addi	a3,a1,-32
20403b14:	02000893          	li	a7,32
20403b18:	00d756b3          	srl	a3,a4,a3
20403b1c:	4801                	li	a6,0
20403b1e:	01158863          	beq	a1,a7,20403b2e <__adddf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 249)
20403b22:	04000813          	li	a6,64
20403b26:	40b805b3          	sub	a1,a6,a1
20403b2a:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 252)
20403b2e:	00c86633          	or	a2,a6,a2
20403b32:	00c03633          	snez	a2,a2
20403b36:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 240)
20403b38:	4701                	li	a4,0
20403b3a:	bf79                	j	20403ad8 <__adddf3+0x2d8>
20403b3c:	8e59                	or	a2,a2,a4
20403b3e:	00c03633          	snez	a2,a2
20403b42:	bfdd                	j	20403b38 <__adddf3+0x338>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 201)
20403b44:	0c080463          	beqz	a6,20403c0c <__adddf3+0x40c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 257)
20403b48:	40988833          	sub	a6,a7,s1
20403b4c:	e895                	bnez	s1,20403b80 <__adddf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 259)
20403b4e:	00a7e5b3          	or	a1,a5,a0
20403b52:	26058e63          	beqz	a1,20403dce <__adddf3+0x5ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 262)
20403b56:	fff80593          	addi	a1,a6,-1
20403b5a:	e991                	bnez	a1,20403b6e <__adddf3+0x36e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20403b5c:	40a60533          	sub	a0,a2,a0
20403b60:	40f707b3          	sub	a5,a4,a5
20403b64:	00a63633          	sltu	a2,a2,a0
20403b68:	8f91                	sub	a5,a5,a2
20403b6a:	8936                	mv	s2,a3
20403b6c:	bf05                	j	20403a9c <__adddf3+0x29c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 272)
20403b6e:	7ff00313          	li	t1,2047
20403b72:	00681f63          	bne	a6,t1,20403b90 <__adddf3+0x390>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403b76:	87ba                	mv	a5,a4
20403b78:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403b7a:	7ff00493          	li	s1,2047
20403b7e:	a07d                	j	20403c2c <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 260)
20403b80:	7ff00593          	li	a1,2047
20403b84:	feb889e3          	beq	a7,a1,20403b76 <__adddf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 286)
20403b88:	008005b7          	lui	a1,0x800
20403b8c:	8fcd                	or	a5,a5,a1
20403b8e:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 295)
20403b90:	03800813          	li	a6,56
20403b94:	06b84863          	blt	a6,a1,20403c04 <__adddf3+0x404>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 296)
20403b98:	487d                	li	a6,31
20403b9a:	02b84e63          	blt	a6,a1,20403bd6 <__adddf3+0x3d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 298)
20403b9e:	02000313          	li	t1,32
20403ba2:	40b30333          	sub	t1,t1,a1
20403ba6:	00b55e33          	srl	t3,a0,a1
20403baa:	00679833          	sll	a6,a5,t1
20403bae:	00651533          	sll	a0,a0,t1
20403bb2:	01c86833          	or	a6,a6,t3
20403bb6:	00a03533          	snez	a0,a0
20403bba:	00a86533          	or	a0,a6,a0
20403bbe:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 312)
20403bc2:	40a60533          	sub	a0,a2,a0
20403bc6:	40b707b3          	sub	a5,a4,a1
20403bca:	00a63633          	sltu	a2,a2,a0
20403bce:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 312)
20403bd0:	84c6                	mv	s1,a7
20403bd2:	8936                	mv	s2,a3
20403bd4:	bf19                	j	20403aea <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 299)
20403bd6:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20403bda:	02000e13          	li	t3,32
20403bde:	0107d833          	srl	a6,a5,a6
20403be2:	4301                	li	t1,0
20403be4:	01c58863          	beq	a1,t3,20403bf4 <__adddf3+0x3f4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 306)
20403be8:	04000313          	li	t1,64
20403bec:	40b305b3          	sub	a1,t1,a1
20403bf0:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 309)
20403bf4:	00a36533          	or	a0,t1,a0
20403bf8:	00a03533          	snez	a0,a0
20403bfc:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 297)
20403c00:	4581                	li	a1,0
20403c02:	b7c1                	j	20403bc2 <__adddf3+0x3c2>
20403c04:	8d5d                	or	a0,a0,a5
20403c06:	00a03533          	snez	a0,a0
20403c0a:	bfdd                	j	20403c00 <__adddf3+0x400>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 258)
20403c0c:	00148593          	addi	a1,s1,1
20403c10:	7fe5f593          	andi	a1,a1,2046
20403c14:	e5b5                	bnez	a1,20403c80 <__adddf3+0x480>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 314)
20403c16:	00a7e833          	or	a6,a5,a0
20403c1a:	00c765b3          	or	a1,a4,a2
20403c1e:	e4b1                	bnez	s1,20403c6a <__adddf3+0x46a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 316)
20403c20:	00081863          	bnez	a6,20403c30 <__adddf3+0x430>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 318)
20403c24:	1a058963          	beqz	a1,20403dd6 <__adddf3+0x5d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403c28:	87ba                	mv	a5,a4
20403c2a:	8532                	mv	a0,a2
20403c2c:	8936                	mv	s2,a3
20403c2e:	bbcd                	j	20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 319)
20403c30:	de0588e3          	beqz	a1,20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 326)
20403c34:	40c50833          	sub	a6,a0,a2
20403c38:	40e785b3          	sub	a1,a5,a4
20403c3c:	010538b3          	sltu	a7,a0,a6
20403c40:	411585b3          	sub	a1,a1,a7
20403c44:	00859413          	slli	s0,a1,0x8
20403c48:	00045a63          	bgez	s0,20403c5c <__adddf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 328)
20403c4c:	40a60533          	sub	a0,a2,a0
20403c50:	40f707b3          	sub	a5,a4,a5
20403c54:	00a63633          	sltu	a2,a2,a0
20403c58:	8f91                	sub	a5,a5,a2
20403c5a:	bfc9                	j	20403c2c <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 329)
20403c5c:	00b86533          	or	a0,a6,a1
20403c60:	16050f63          	beqz	a0,20403dde <__adddf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403c64:	87ae                	mv	a5,a1
20403c66:	8542                	mv	a0,a6
20403c68:	bb65                	j	20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 348)
20403c6a:	00081863          	bnez	a6,20403c7a <__adddf3+0x47a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 349)
20403c6e:	16058a63          	beqz	a1,20403de2 <__adddf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403c72:	87ba                	mv	a5,a4
20403c74:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403c76:	8936                	mv	s2,a3
20403c78:	b119                	j	2040387e <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 350)
20403c7a:	c00582e3          	beqz	a1,2040387e <__adddf3+0x7e>
20403c7e:	b3e9                	j	20403a48 <__adddf3+0x248>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 315)
20403c80:	40c509b3          	sub	s3,a0,a2
20403c84:	013535b3          	sltu	a1,a0,s3
20403c88:	40e78433          	sub	s0,a5,a4
20403c8c:	8c0d                	sub	s0,s0,a1
20403c8e:	00841593          	slli	a1,s0,0x8
20403c92:	0605d763          	bgez	a1,20403d00 <__adddf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 366)
20403c96:	40a609b3          	sub	s3,a2,a0
20403c9a:	40f707b3          	sub	a5,a4,a5
20403c9e:	01363633          	sltu	a2,a2,s3
20403ca2:	40c78433          	sub	s0,a5,a2
20403ca6:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 375)
20403ca8:	c035                	beqz	s0,20403d0c <__adddf3+0x50c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 378)
20403caa:	8522                	mv	a0,s0
20403cac:	3da010ef          	jal	ra,20405086 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 389)
20403cb0:	ff850713          	addi	a4,a0,-8
20403cb4:	47fd                	li	a5,31
20403cb6:	06e7c163          	blt	a5,a4,20403d18 <__adddf3+0x518>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 390)
20403cba:	02000793          	li	a5,32
20403cbe:	8f99                	sub	a5,a5,a4
20403cc0:	00e41433          	sll	s0,s0,a4
20403cc4:	00f9d7b3          	srl	a5,s3,a5
20403cc8:	8c5d                	or	s0,s0,a5
20403cca:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 399)
20403cce:	06974e63          	blt	a4,s1,20403d4a <__adddf3+0x54a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 400)
20403cd2:	8f05                	sub	a4,a4,s1
20403cd4:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7fe1ad>
20403cd8:	46fd                	li	a3,31
20403cda:	04f6c563          	blt	a3,a5,20403d24 <__adddf3+0x524>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 402)
20403cde:	02000713          	li	a4,32
20403ce2:	8f1d                	sub	a4,a4,a5
20403ce4:	00f55633          	srl	a2,a0,a5
20403ce8:	00e416b3          	sll	a3,s0,a4
20403cec:	00e51533          	sll	a0,a0,a4
20403cf0:	8ed1                	or	a3,a3,a2
20403cf2:	00a03533          	snez	a0,a0
20403cf6:	8d55                	or	a0,a0,a3
20403cf8:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20403cfc:	4481                	li	s1,0
20403cfe:	b30d                	j	20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 367)
20403d00:	0089e533          	or	a0,s3,s0
20403d04:	f155                	bnez	a0,20403ca8 <__adddf3+0x4a8>
20403d06:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403d08:	4481                	li	s1,0
20403d0a:	a8c1                	j	20403dda <__adddf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 382)
20403d0c:	854e                	mv	a0,s3
20403d0e:	378010ef          	jal	ra,20405086 <__clzsi2>
20403d12:	02050513          	addi	a0,a0,32
20403d16:	bf69                	j	20403cb0 <__adddf3+0x4b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 391)
20403d18:	fd850413          	addi	s0,a0,-40
20403d1c:	00899433          	sll	s0,s3,s0
20403d20:	4501                	li	a0,0
20403d22:	b775                	j	20403cce <__adddf3+0x4ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 403)
20403d24:	1705                	addi	a4,a4,-31
20403d26:	02000613          	li	a2,32
20403d2a:	00e45733          	srl	a4,s0,a4
20403d2e:	4681                	li	a3,0
20403d30:	00c78763          	beq	a5,a2,20403d3e <__adddf3+0x53e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 411)
20403d34:	04000693          	li	a3,64
20403d38:	8e9d                	sub	a3,a3,a5
20403d3a:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20403d3e:	8d55                	or	a0,a0,a3
20403d40:	00a03533          	snez	a0,a0
20403d44:	8d59                	or	a0,a0,a4
20403d46:	4781                	li	a5,0
20403d48:	bf55                	j	20403cfc <__adddf3+0x4fc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 401)
20403d4a:	ff8007b7          	lui	a5,0xff800
20403d4e:	17fd                	addi	a5,a5,-1
20403d50:	8c99                	sub	s1,s1,a4
20403d52:	8fe1                	and	a5,a5,s0
20403d54:	b1f1                	j	20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403d56:	87ba                	mv	a5,a4
20403d58:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403d5a:	84ae                	mv	s1,a1
20403d5c:	b1d1                	j	20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403d5e:	87ba                	mv	a5,a4
20403d60:	8532                	mv	a0,a2
20403d62:	b97d                	j	20403a20 <__adddf3+0x220>
20403d64:	7ff00493          	li	s1,2047
20403d68:	4781                	li	a5,0
20403d6a:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 47)
20403d6c:	00879713          	slli	a4,a5,0x8
20403d70:	00075b63          	bgez	a4,20403d86 <__adddf3+0x586>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 63)
20403d74:	0485                	addi	s1,s1,1
20403d76:	7ff00713          	li	a4,2047
20403d7a:	06e48963          	beq	s1,a4,20403dec <__adddf3+0x5ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20403d7e:	ff800737          	lui	a4,0xff800
20403d82:	177d                	addi	a4,a4,-1
20403d84:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 79)
20403d86:	01d79713          	slli	a4,a5,0x1d
20403d8a:	810d                	srli	a0,a0,0x3
20403d8c:	8d59                	or	a0,a0,a4
20403d8e:	7ff00713          	li	a4,2047
20403d92:	838d                	srli	a5,a5,0x3
20403d94:	00e49963          	bne	s1,a4,20403da6 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 80)
20403d98:	8d5d                	or	a0,a0,a5
20403d9a:	4781                	li	a5,0
20403d9c:	c509                	beqz	a0,20403da6 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20403d9e:	000807b7          	lui	a5,0x80
20403da2:	4501                	li	a0,0
20403da4:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20403da6:	7ff4f713          	andi	a4,s1,2047
20403daa:	07b2                	slli	a5,a5,0xc
20403dac:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20403dae:	40f2                	lw	ra,28(sp)
20403db0:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20403db2:	83b1                	srli	a5,a5,0xc
20403db4:	01f91593          	slli	a1,s2,0x1f
20403db8:	8fd9                	or	a5,a5,a4
20403dba:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20403dbe:	44d2                	lw	s1,20(sp)
20403dc0:	4942                	lw	s2,16(sp)
20403dc2:	49b2                	lw	s3,12(sp)
20403dc4:	85ba                	mv	a1,a4
20403dc6:	6105                	addi	sp,sp,32
20403dc8:	8082                	ret
20403dca:	84c2                	mv	s1,a6
20403dcc:	b991                	j	20403a20 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403dce:	87ba                	mv	a5,a4
20403dd0:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403dd2:	84c2                	mv	s1,a6
20403dd4:	bda1                	j	20403c2c <__adddf3+0x42c>
20403dd6:	4781                	li	a5,0
20403dd8:	4501                	li	a0,0
20403dda:	4901                	li	s2,0
20403ddc:	bf41                	j	20403d6c <__adddf3+0x56c>
20403dde:	4781                	li	a5,0
20403de0:	bfed                	j	20403dda <__adddf3+0x5da>
20403de2:	4501                	li	a0,0
20403de4:	4901                	li	s2,0
20403de6:	004007b7          	lui	a5,0x400
20403dea:	b19d                	j	20403a50 <__adddf3+0x250>
20403dec:	4781                	li	a5,0
20403dee:	4501                	li	a0,0
20403df0:	bf59                	j	20403d86 <__adddf3+0x586>

20403df2 <__divdf3>:
__divdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403df2:	7179                	addi	sp,sp,-48
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403df4:	0145d813          	srli	a6,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403df8:	d226                	sw	s1,36(sp)
20403dfa:	ce4e                	sw	s3,28(sp)
20403dfc:	cc52                	sw	s4,24(sp)
20403dfe:	c85a                	sw	s6,16(sp)
20403e00:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403e02:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403e06:	d606                	sw	ra,44(sp)
20403e08:	d422                	sw	s0,40(sp)
20403e0a:	d04a                	sw	s2,32(sp)
20403e0c:	ca56                	sw	s5,20(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403e0e:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403e12:	8b2a                	mv	s6,a0
20403e14:	8bb2                	mv	s7,a2
20403e16:	8a36                	mv	s4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403e18:	80b1                	srli	s1,s1,0xc
20403e1a:	01f5d993          	srli	s3,a1,0x1f
20403e1e:	08080463          	beqz	a6,20403ea6 <__divdf3+0xb4>
20403e22:	7ff00793          	li	a5,2047
20403e26:	0cf80a63          	beq	a6,a5,20403efa <__divdf3+0x108>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 1)
20403e2a:	01d55a93          	srli	s5,a0,0x1d
20403e2e:	048e                	slli	s1,s1,0x3
20403e30:	009ae4b3          	or	s1,s5,s1
20403e34:	00800ab7          	lui	s5,0x800
20403e38:	0154eab3          	or	s5,s1,s5
20403e3c:	00351413          	slli	s0,a0,0x3
20403e40:	c0180913          	addi	s2,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20403e44:	4b01                	li	s6,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20403e46:	014a5513          	srli	a0,s4,0x14
20403e4a:	00ca1493          	slli	s1,s4,0xc
20403e4e:	7ff57813          	andi	a6,a0,2047
20403e52:	80b1                	srli	s1,s1,0xc
20403e54:	01fa5a13          	srli	s4,s4,0x1f
20403e58:	0c080463          	beqz	a6,20403f20 <__divdf3+0x12e>
20403e5c:	7ff00793          	li	a5,2047
20403e60:	10f80963          	beq	a6,a5,20403f72 <__divdf3+0x180>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 1)
20403e64:	00349513          	slli	a0,s1,0x3
20403e68:	01dbd793          	srli	a5,s7,0x1d
20403e6c:	8d5d                	or	a0,a0,a5
20403e6e:	008004b7          	lui	s1,0x800
20403e72:	8cc9                	or	s1,s1,a0
20403e74:	003b9f13          	slli	t5,s7,0x3
20403e78:	c0180513          	addi	a0,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20403e7c:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20403e7e:	002b1713          	slli	a4,s6,0x2
20403e82:	8f5d                	or	a4,a4,a5
20403e84:	177d                	addi	a4,a4,-1
20403e86:	46b9                	li	a3,14
20403e88:	0149c633          	xor	a2,s3,s4
20403e8c:	40a90833          	sub	a6,s2,a0
20403e90:	10e6e363          	bltu	a3,a4,20403f96 <__divdf3+0x1a4>
20403e94:	00005697          	auipc	a3,0x5
20403e98:	05468693          	addi	a3,a3,84 # 20408ee8 <pow10.2193+0x50>
20403e9c:	070a                	slli	a4,a4,0x2
20403e9e:	9736                	add	a4,a4,a3
20403ea0:	4318                	lw	a4,0(a4)
20403ea2:	9736                	add	a4,a4,a3
20403ea4:	8702                	jr	a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 2)
20403ea6:	00a4eab3          	or	s5,s1,a0
20403eaa:	060a8263          	beqz	s5,20403f0e <__divdf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 12)
20403eae:	c89d                	beqz	s1,20403ee4 <__divdf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 16)
20403eb0:	8526                	mv	a0,s1
20403eb2:	1d4010ef          	jal	ra,20405086 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 27)
20403eb6:	ff550793          	addi	a5,a0,-11
20403eba:	4771                	li	a4,28
20403ebc:	02f74963          	blt	a4,a5,20403eee <__divdf3+0xfc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 28)
20403ec0:	4af5                	li	s5,29
20403ec2:	ff850413          	addi	s0,a0,-8
20403ec6:	40fa8ab3          	sub	s5,s5,a5
20403eca:	008494b3          	sll	s1,s1,s0
20403ece:	015b5ab3          	srl	s5,s6,s5
20403ed2:	009aeab3          	or	s5,s5,s1
20403ed6:	008b1433          	sll	s0,s6,s0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20403eda:	c0d00813          	li	a6,-1011
20403ede:	40a80933          	sub	s2,a6,a0
20403ee2:	b78d                	j	20403e44 <__divdf3+0x52>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 20)
20403ee4:	1a2010ef          	jal	ra,20405086 <__clzsi2>
20403ee8:	02050513          	addi	a0,a0,32
20403eec:	b7e9                	j	20403eb6 <__divdf3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 29)
20403eee:	fd850493          	addi	s1,a0,-40
20403ef2:	009b1ab3          	sll	s5,s6,s1
20403ef6:	4401                	li	s0,0
20403ef8:	b7cd                	j	20403eda <__divdf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 3)
20403efa:	00a4eab3          	or	s5,s1,a0
20403efe:	000a8c63          	beqz	s5,20403f16 <__divdf3+0x124>
20403f02:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403f04:	8aa6                	mv	s5,s1
20403f06:	7ff00913          	li	s2,2047
20403f0a:	4b0d                	li	s6,3
20403f0c:	bf2d                	j	20403e46 <__divdf3+0x54>
20403f0e:	4401                	li	s0,0
20403f10:	4901                	li	s2,0
20403f12:	4b05                	li	s6,1
20403f14:	bf0d                	j	20403e46 <__divdf3+0x54>
20403f16:	4401                	li	s0,0
20403f18:	7ff00913          	li	s2,2047
20403f1c:	4b09                	li	s6,2
20403f1e:	b725                	j	20403e46 <__divdf3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 2)
20403f20:	0174ef33          	or	t5,s1,s7
20403f24:	060f0063          	beqz	t5,20403f84 <__divdf3+0x192>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 12)
20403f28:	c88d                	beqz	s1,20403f5a <__divdf3+0x168>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 16)
20403f2a:	8526                	mv	a0,s1
20403f2c:	15a010ef          	jal	ra,20405086 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 27)
20403f30:	ff550793          	addi	a5,a0,-11
20403f34:	4771                	li	a4,28
20403f36:	02f74863          	blt	a4,a5,20403f66 <__divdf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 28)
20403f3a:	4775                	li	a4,29
20403f3c:	ff850f13          	addi	t5,a0,-8
20403f40:	8f1d                	sub	a4,a4,a5
20403f42:	01e494b3          	sll	s1,s1,t5
20403f46:	00ebd733          	srl	a4,s7,a4
20403f4a:	8cd9                	or	s1,s1,a4
20403f4c:	01eb9f33          	sll	t5,s7,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20403f50:	c0d00613          	li	a2,-1011
20403f54:	40a60533          	sub	a0,a2,a0
20403f58:	b715                	j	20403e7c <__divdf3+0x8a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 20)
20403f5a:	855e                	mv	a0,s7
20403f5c:	12a010ef          	jal	ra,20405086 <__clzsi2>
20403f60:	02050513          	addi	a0,a0,32
20403f64:	b7f1                	j	20403f30 <__divdf3+0x13e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 29)
20403f66:	fd850493          	addi	s1,a0,-40
20403f6a:	009b94b3          	sll	s1,s7,s1
20403f6e:	4f01                	li	t5,0
20403f70:	b7c5                	j	20403f50 <__divdf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 3)
20403f72:	0174ef33          	or	t5,s1,s7
20403f76:	000f0b63          	beqz	t5,20403f8c <__divdf3+0x19a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20403f7a:	8f5e                	mv	t5,s7
20403f7c:	7ff00513          	li	a0,2047
20403f80:	478d                	li	a5,3
20403f82:	bdf5                	j	20403e7e <__divdf3+0x8c>
20403f84:	4481                	li	s1,0
20403f86:	4501                	li	a0,0
20403f88:	4785                	li	a5,1
20403f8a:	bdd5                	j	20403e7e <__divdf3+0x8c>
20403f8c:	4481                	li	s1,0
20403f8e:	7ff00513          	li	a0,2047
20403f92:	4789                	li	a5,2
20403f94:	b5ed                	j	20403e7e <__divdf3+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 2)
20403f96:	0154e663          	bltu	s1,s5,20403fa2 <__divdf3+0x1b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 11)
20403f9a:	2a9a9363          	bne	s5,s1,20404240 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 12)
20403f9e:	2be46163          	bltu	s0,t5,20404240 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 14)
20403fa2:	01fa9693          	slli	a3,s5,0x1f
20403fa6:	00145713          	srli	a4,s0,0x1
20403faa:	01f41793          	slli	a5,s0,0x1f
20403fae:	001ada93          	srli	s5,s5,0x1
20403fb2:	00e6e433          	or	s0,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 19)
20403fb6:	00849513          	slli	a0,s1,0x8
20403fba:	018f5493          	srli	s1,t5,0x18
20403fbe:	8d45                	or	a0,a0,s1
20403fc0:	01055e13          	srli	t3,a0,0x10
20403fc4:	03cad8b3          	divu	a7,s5,t3
20403fc8:	01051313          	slli	t1,a0,0x10
20403fcc:	01035313          	srli	t1,t1,0x10
20403fd0:	01045713          	srli	a4,s0,0x10
20403fd4:	008f1593          	slli	a1,t5,0x8
20403fd8:	03caf4b3          	remu	s1,s5,t3
20403fdc:	8fc6                	mv	t6,a7
20403fde:	031306b3          	mul	a3,t1,a7
20403fe2:	01049a93          	slli	s5,s1,0x10
20403fe6:	01576733          	or	a4,a4,s5
20403fea:	00d77c63          	bgeu	a4,a3,20404002 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 22)
20403fee:	972a                	add	a4,a4,a0
20403ff0:	fff88f93          	addi	t6,a7,-1
20403ff4:	00a76763          	bltu	a4,a0,20404002 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 24)
20403ff8:	00d77563          	bgeu	a4,a3,20404002 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 26)
20403ffc:	ffe88f93          	addi	t6,a7,-2
20404000:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 28)
20404002:	8f15                	sub	a4,a4,a3
20404004:	03c75eb3          	divu	t4,a4,t3
20404008:	0442                	slli	s0,s0,0x10
2040400a:	8041                	srli	s0,s0,0x10
2040400c:	03c77733          	remu	a4,a4,t3
20404010:	86f6                	mv	a3,t4
20404012:	03d308b3          	mul	a7,t1,t4
20404016:	0742                	slli	a4,a4,0x10
20404018:	8f41                	or	a4,a4,s0
2040401a:	01177c63          	bgeu	a4,a7,20404032 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 29)
2040401e:	972a                	add	a4,a4,a0
20404020:	fffe8693          	addi	a3,t4,-1
20404024:	00a76763          	bltu	a4,a0,20404032 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 31)
20404028:	01177563          	bgeu	a4,a7,20404032 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 33)
2040402c:	ffee8693          	addi	a3,t4,-2
20404030:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 35)
20404032:	0fc2                	slli	t6,t6,0x10
20404034:	00dfefb3          	or	t6,t6,a3
20404038:	66c1                	lui	a3,0x10
2040403a:	41170433          	sub	s0,a4,a7
2040403e:	fff68893          	addi	a7,a3,-1 # ffff <__heap_size+0xf7ff>
20404042:	010fdf13          	srli	t5,t6,0x10
20404046:	011ff733          	and	a4,t6,a7
2040404a:	0105de93          	srli	t4,a1,0x10
2040404e:	0115f8b3          	and	a7,a1,a7
20404052:	031703b3          	mul	t2,a4,a7
20404056:	031f04b3          	mul	s1,t5,a7
2040405a:	02ee8733          	mul	a4,t4,a4
2040405e:	03df02b3          	mul	t0,t5,t4
20404062:	00970f33          	add	t5,a4,s1
20404066:	0103d713          	srli	a4,t2,0x10
2040406a:	977a                	add	a4,a4,t5
2040406c:	00977363          	bgeu	a4,s1,20404072 <__divdf3+0x280>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 36)
20404070:	92b6                	add	t0,t0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 38)
20404072:	01075f13          	srli	t5,a4,0x10
20404076:	9f16                	add	t5,t5,t0
20404078:	62c1                	lui	t0,0x10
2040407a:	12fd                	addi	t0,t0,-1
2040407c:	005776b3          	and	a3,a4,t0
20404080:	06c2                	slli	a3,a3,0x10
20404082:	0053f3b3          	and	t2,t2,t0
20404086:	969e                	add	a3,a3,t2
20404088:	01e46763          	bltu	s0,t5,20404096 <__divdf3+0x2a4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 40)
2040408c:	84fe                	mv	s1,t6
2040408e:	03e41e63          	bne	s0,t5,204040ca <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 41)
20404092:	02d7fc63          	bgeu	a5,a3,204040ca <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 43)
20404096:	97ae                	add	a5,a5,a1
20404098:	00b7b733          	sltu	a4,a5,a1
2040409c:	972a                	add	a4,a4,a0
2040409e:	943a                	add	s0,s0,a4
204040a0:	ffff8493          	addi	s1,t6,-1
204040a4:	00856663          	bltu	a0,s0,204040b0 <__divdf3+0x2be>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 46)
204040a8:	02851163          	bne	a0,s0,204040ca <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 47)
204040ac:	00b7ef63          	bltu	a5,a1,204040ca <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 49)
204040b0:	01e46663          	bltu	s0,t5,204040bc <__divdf3+0x2ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 52)
204040b4:	008f1b63          	bne	t5,s0,204040ca <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 53)
204040b8:	00d7f963          	bgeu	a5,a3,204040ca <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 55)
204040bc:	97ae                	add	a5,a5,a1
204040be:	00b7b733          	sltu	a4,a5,a1
204040c2:	972a                	add	a4,a4,a0
204040c4:	ffef8493          	addi	s1,t6,-2
204040c8:	943a                	add	s0,s0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 57)
204040ca:	40d786b3          	sub	a3,a5,a3
204040ce:	41e40433          	sub	s0,s0,t5
204040d2:	00d7b7b3          	sltu	a5,a5,a3
204040d6:	8c1d                	sub	s0,s0,a5
204040d8:	5f7d                	li	t5,-1
204040da:	0e850563          	beq	a0,s0,204041c4 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 59)
204040de:	03c45f33          	divu	t5,s0,t3
204040e2:	0106d713          	srli	a4,a3,0x10
204040e6:	03c47433          	remu	s0,s0,t3
204040ea:	03e307b3          	mul	a5,t1,t5
204040ee:	0442                	slli	s0,s0,0x10
204040f0:	8c59                	or	s0,s0,a4
204040f2:	877a                	mv	a4,t5
204040f4:	00f47c63          	bgeu	s0,a5,2040410c <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 61)
204040f8:	942a                	add	s0,s0,a0
204040fa:	ffff0713          	addi	a4,t5,-1
204040fe:	00a46763          	bltu	s0,a0,2040410c <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 63)
20404102:	00f47563          	bgeu	s0,a5,2040410c <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 65)
20404106:	ffef0713          	addi	a4,t5,-2
2040410a:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 67)
2040410c:	8c1d                	sub	s0,s0,a5
2040410e:	03c45f33          	divu	t5,s0,t3
20404112:	06c2                	slli	a3,a3,0x10
20404114:	82c1                	srli	a3,a3,0x10
20404116:	03c47433          	remu	s0,s0,t3
2040411a:	87fa                	mv	a5,t5
2040411c:	03e30333          	mul	t1,t1,t5
20404120:	0442                	slli	s0,s0,0x10
20404122:	8c55                	or	s0,s0,a3
20404124:	00647c63          	bgeu	s0,t1,2040413c <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 68)
20404128:	942a                	add	s0,s0,a0
2040412a:	ffff0793          	addi	a5,t5,-1
2040412e:	00a46763          	bltu	s0,a0,2040413c <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 70)
20404132:	00647563          	bgeu	s0,t1,2040413c <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 72)
20404136:	ffef0793          	addi	a5,t5,-2
2040413a:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 74)
2040413c:	0742                	slli	a4,a4,0x10
2040413e:	8f5d                	or	a4,a4,a5
20404140:	01071793          	slli	a5,a4,0x10
20404144:	83c1                	srli	a5,a5,0x10
20404146:	40640433          	sub	s0,s0,t1
2040414a:	01075313          	srli	t1,a4,0x10
2040414e:	03178e33          	mul	t3,a5,a7
20404152:	031308b3          	mul	a7,t1,a7
20404156:	026e8333          	mul	t1,t4,t1
2040415a:	02fe8eb3          	mul	t4,t4,a5
2040415e:	010e5793          	srli	a5,t3,0x10
20404162:	9ec6                	add	t4,t4,a7
20404164:	97f6                	add	a5,a5,t4
20404166:	0117f463          	bgeu	a5,a7,2040416e <__divdf3+0x37c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 75)
2040416a:	66c1                	lui	a3,0x10
2040416c:	9336                	add	t1,t1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 77)
2040416e:	0107d893          	srli	a7,a5,0x10
20404172:	989a                	add	a7,a7,t1
20404174:	6341                	lui	t1,0x10
20404176:	137d                	addi	t1,t1,-1
20404178:	0067f6b3          	and	a3,a5,t1
2040417c:	06c2                	slli	a3,a3,0x10
2040417e:	006e7e33          	and	t3,t3,t1
20404182:	96f2                	add	a3,a3,t3
20404184:	01146663          	bltu	s0,a7,20404190 <__divdf3+0x39e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 79)
20404188:	19141e63          	bne	s0,a7,20404324 <__divdf3+0x532>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 80)
2040418c:	8f3a                	mv	t5,a4
2040418e:	ca9d                	beqz	a3,204041c4 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 82)
20404190:	942a                	add	s0,s0,a0
20404192:	fff70f13          	addi	t5,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7fe1ab>
20404196:	02a46163          	bltu	s0,a0,204041b8 <__divdf3+0x3c6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 88)
2040419a:	01146663          	bltu	s0,a7,204041a6 <__divdf3+0x3b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 91)
2040419e:	19141263          	bne	s0,a7,20404322 <__divdf3+0x530>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 92)
204041a2:	00d5fd63          	bgeu	a1,a3,204041bc <__divdf3+0x3ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 94)
204041a6:	00159793          	slli	a5,a1,0x1
204041aa:	00b7b5b3          	sltu	a1,a5,a1
204041ae:	952e                	add	a0,a0,a1
204041b0:	ffe70f13          	addi	t5,a4,-2
204041b4:	942a                	add	s0,s0,a0
204041b6:	85be                	mv	a1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 96)
204041b8:	01141463          	bne	s0,a7,204041c0 <__divdf3+0x3ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 98)
204041bc:	00b68463          	beq	a3,a1,204041c4 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 99)
204041c0:	001f6f13          	ori	t5,t5,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 2)
204041c4:	3ff80713          	addi	a4,a6,1023
204041c8:	0ae05763          	blez	a4,20404276 <__divdf3+0x484>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 6)
204041cc:	007f7793          	andi	a5,t5,7
204041d0:	cf81                	beqz	a5,204041e8 <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 8)
204041d2:	00ff7793          	andi	a5,t5,15
204041d6:	4691                	li	a3,4
204041d8:	00d78863          	beq	a5,a3,204041e8 <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 10)
204041dc:	004f0693          	addi	a3,t5,4
204041e0:	01e6bf33          	sltu	t5,a3,t5
204041e4:	94fa                	add	s1,s1,t5
204041e6:	8f36                	mv	t5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 9)
204041e8:	00749793          	slli	a5,s1,0x7
204041ec:	0007d863          	bgez	a5,204041fc <__divdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 24)
204041f0:	ff0007b7          	lui	a5,0xff000
204041f4:	17fd                	addi	a5,a5,-1
204041f6:	8cfd                	and	s1,s1,a5
204041f8:	40080713          	addi	a4,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 26)
204041fc:	7fe00793          	li	a5,2046
20404200:	10e7c863          	blt	a5,a4,20404310 <__divdf3+0x51e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20404204:	003f5f13          	srli	t5,t5,0x3
20404208:	01d49793          	slli	a5,s1,0x1d
2040420c:	01e7e7b3          	or	a5,a5,t5
20404210:	0034d513          	srli	a0,s1,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20404214:	0532                	slli	a0,a0,0xc
20404216:	7ff77713          	andi	a4,a4,2047
2040421a:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
2040421c:	50b2                	lw	ra,44(sp)
2040421e:	5422                	lw	s0,40(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20404220:	8131                	srli	a0,a0,0xc
20404222:	8d59                	or	a0,a0,a4
20404224:	067e                	slli	a2,a2,0x1f
20404226:	00c56733          	or	a4,a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
2040422a:	5492                	lw	s1,36(sp)
2040422c:	5902                	lw	s2,32(sp)
2040422e:	49f2                	lw	s3,28(sp)
20404230:	4a62                	lw	s4,24(sp)
20404232:	4ad2                	lw	s5,20(sp)
20404234:	4b42                	lw	s6,16(sp)
20404236:	4bb2                	lw	s7,12(sp)
20404238:	853e                	mv	a0,a5
2040423a:	85ba                	mv	a1,a4
2040423c:	6145                	addi	sp,sp,48
2040423e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 15)
20404240:	187d                	addi	a6,a6,-1
20404242:	4781                	li	a5,0
20404244:	bb8d                	j	20403fb6 <__divdf3+0x1c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 8)
20404246:	864e                	mv	a2,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 8)
20404248:	84d6                	mv	s1,s5
2040424a:	8f22                	mv	t5,s0
2040424c:	87da                	mv	a5,s6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
2040424e:	4709                	li	a4,2
20404250:	0ce78063          	beq	a5,a4,20404310 <__divdf3+0x51e>
20404254:	470d                	li	a4,3
20404256:	0ae78663          	beq	a5,a4,20404302 <__divdf3+0x510>
2040425a:	4705                	li	a4,1
2040425c:	f6e794e3          	bne	a5,a4,204041c4 <__divdf3+0x3d2>
20404260:	4501                	li	a0,0
20404262:	4781                	li	a5,0
20404264:	a885                	j	204042d4 <__divdf3+0x4e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 5)
20404266:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 5)
20404268:	b7dd                	j	2040424e <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
2040426a:	000804b7          	lui	s1,0x80
2040426e:	4f01                	li	t5,0
20404270:	4601                	li	a2,0
20404272:	478d                	li	a5,3
20404274:	bfe9                	j	2040424e <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 59)
20404276:	4505                	li	a0,1
20404278:	8d19                	sub	a0,a0,a4
2040427a:	03800793          	li	a5,56
2040427e:	fea7c1e3          	blt	a5,a0,20404260 <__divdf3+0x46e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 60)
20404282:	47fd                	li	a5,31
20404284:	04a7ca63          	blt	a5,a0,204042d8 <__divdf3+0x4e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 62)
20404288:	41e80813          	addi	a6,a6,1054
2040428c:	010497b3          	sll	a5,s1,a6
20404290:	00af5733          	srl	a4,t5,a0
20404294:	010f1833          	sll	a6,t5,a6
20404298:	8fd9                	or	a5,a5,a4
2040429a:	01003833          	snez	a6,a6
2040429e:	0107e7b3          	or	a5,a5,a6
204042a2:	00a4d533          	srl	a0,s1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 75)
204042a6:	0077f713          	andi	a4,a5,7
204042aa:	cf01                	beqz	a4,204042c2 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 76)
204042ac:	00f7f713          	andi	a4,a5,15
204042b0:	4691                	li	a3,4
204042b2:	00d70863          	beq	a4,a3,204042c2 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 78)
204042b6:	00478713          	addi	a4,a5,4 # ff000004 <metal_segment_heap_target_end+0x7effe1b0>
204042ba:	00f737b3          	sltu	a5,a4,a5
204042be:	953e                	add	a0,a0,a5
204042c0:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 77)
204042c2:	00851713          	slli	a4,a0,0x8
204042c6:	04074a63          	bltz	a4,2040431a <__divdf3+0x528>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 93)
204042ca:	01d51713          	slli	a4,a0,0x1d
204042ce:	838d                	srli	a5,a5,0x3
204042d0:	8fd9                	or	a5,a5,a4
204042d2:	810d                	srli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
204042d4:	4701                	li	a4,0
204042d6:	bf3d                	j	20404214 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 63)
204042d8:	5785                	li	a5,-31
204042da:	8f99                	sub	a5,a5,a4
204042dc:	02000693          	li	a3,32
204042e0:	00f4d7b3          	srl	a5,s1,a5
204042e4:	4701                	li	a4,0
204042e6:	00d50663          	beq	a0,a3,204042f2 <__divdf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 71)
204042ea:	43e80813          	addi	a6,a6,1086
204042ee:	01049733          	sll	a4,s1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 74)
204042f2:	01e76f33          	or	t5,a4,t5
204042f6:	01e03f33          	snez	t5,t5
204042fa:	01e7e7b3          	or	a5,a5,t5
204042fe:	4501                	li	a0,0
20404300:	b75d                	j	204042a6 <__divdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20404302:	00080537          	lui	a0,0x80
20404306:	4781                	li	a5,0
20404308:	7ff00713          	li	a4,2047
2040430c:	4601                	li	a2,0
2040430e:	b719                	j	20404214 <__divdf3+0x422>
20404310:	4501                	li	a0,0
20404312:	4781                	li	a5,0
20404314:	7ff00713          	li	a4,2047
20404318:	bdf5                	j	20404214 <__divdf3+0x422>
2040431a:	4501                	li	a0,0
2040431c:	4781                	li	a5,0
2040431e:	4705                	li	a4,1
20404320:	bdd5                	j	20404214 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20404322:	877a                	mv	a4,t5
20404324:	8f3a                	mv	t5,a4
20404326:	bd69                	j	204041c0 <__divdf3+0x3ce>

20404328 <__eqdf2>:
__eqdf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
20404328:	0145d713          	srli	a4,a1,0x14
2040432c:	001007b7          	lui	a5,0x100
20404330:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
20404332:	0146d813          	srli	a6,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:36
20404336:	832a                	mv	t1,a0
20404338:	8eaa                	mv	t4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
2040433a:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
2040433e:	7ff00513          	li	a0,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
20404342:	00b7f8b3          	and	a7,a5,a1
20404346:	8f32                	mv	t5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
20404348:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
2040434a:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
2040434c:	7ff87813          	andi	a6,a6,2047
20404350:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20404352:	00a71a63          	bne	a4,a0,20404366 <__eqdf2+0x3e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 18)
20404356:	0068ee33          	or	t3,a7,t1
2040435a:	4505                	li	a0,1
2040435c:	000e1463          	bnez	t3,20404364 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20404360:	00e80563          	beq	a6,a4,2040436a <__eqdf2+0x42>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:49
20404364:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 21)
20404366:	00a81563          	bne	a6,a0,20404370 <__eqdf2+0x48>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 22)
2040436a:	8e5d                	or	a2,a2,a5
2040436c:	4505                	li	a0,1
2040436e:	fa7d                	bnez	a2,20404364 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 73)
20404370:	4505                	li	a0,1
20404372:	ff0719e3          	bne	a4,a6,20404364 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 75)
20404376:	fef897e3          	bne	a7,a5,20404364 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 77)
2040437a:	ffee95e3          	bne	t4,t5,20404364 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 79)
2040437e:	00d58863          	beq	a1,a3,2040438e <__eqdf2+0x66>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 80)
20404382:	f36d                	bnez	a4,20404364 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 83)
20404384:	0068e533          	or	a0,a7,t1
20404388:	00a03533          	snez	a0,a0
2040438c:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
2040438e:	4501                	li	a0,0
20404390:	8082                	ret

20404392 <__gedf2>:
__gedf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20404392:	0145d813          	srli	a6,a1,0x14
20404396:	001007b7          	lui	a5,0x100
2040439a:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
2040439c:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
204043a0:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204043a4:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
204043a8:	00b7f8b3          	and	a7,a5,a1
204043ac:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
204043ae:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
204043b0:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
204043b2:	8e32                	mv	t3,a2
204043b4:	7ff77713          	andi	a4,a4,2047
204043b8:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204043ba:	01d81863          	bne	a6,t4,204043ca <__gedf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 18)
204043be:	00a8eeb3          	or	t4,a7,a0
204043c2:	060e8563          	beqz	t4,2040442c <__gedf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204043c6:	55f9                	li	a1,-2
204043c8:	a80d                	j	204043fa <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 21)
204043ca:	01d71663          	bne	a4,t4,204043d6 <__gedf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 22)
204043ce:	00c7eeb3          	or	t4,a5,a2
204043d2:	fe0e9ae3          	bnez	t4,204043c6 <__gedf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 57)
204043d6:	04081d63          	bnez	a6,20404430 <__gedf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 58)
204043da:	00a8e533          	or	a0,a7,a0
204043de:	00153513          	seqz	a0,a0
204043e2:	e319                	bnez	a4,204043e8 <__gedf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 64)
204043e4:	8e5d                	or	a2,a2,a5
204043e6:	ce15                	beqz	a2,20404422 <__gedf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204043e8:	e511                	bnez	a0,204043f4 <__gedf2+0x62>
204043ea:	00d58a63          	beq	a1,a3,204043fe <__gedf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 108)
204043ee:	c985                	beqz	a1,2040441e <__gedf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204043f0:	55fd                	li	a1,-1
204043f2:	a021                	j	204043fa <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 74)
204043f4:	55fd                	li	a1,-1
204043f6:	c291                	beqz	a3,204043fa <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204043f8:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:49
204043fa:	852e                	mv	a0,a1
204043fc:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 87)
204043fe:	ff0748e3          	blt	a4,a6,204043ee <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 93)
20404402:	00e85463          	bge	a6,a4,2040440a <__gedf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 118)
20404406:	f9f5                	bnez	a1,204043fa <__gedf2+0x68>
20404408:	b7e5                	j	204043f0 <__gedf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 99)
2040440a:	ff17e2e3          	bltu	a5,a7,204043ee <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 105)
2040440e:	00f89c63          	bne	a7,a5,20404426 <__gedf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 106)
20404412:	fc6e6ee3          	bltu	t3,t1,204043ee <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 116)
20404416:	ffc368e3          	bltu	t1,t3,20404406 <__gedf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
2040441a:	4581                	li	a1,0
2040441c:	bff9                	j	204043fa <__gedf2+0x68>
2040441e:	4585                	li	a1,1
20404420:	bfe9                	j	204043fa <__gedf2+0x68>
20404422:	fd65                	bnez	a0,2040441a <__gedf2+0x88>
20404424:	b7e9                	j	204043ee <__gedf2+0x5c>
20404426:	fef8e0e3          	bltu	a7,a5,20404406 <__gedf2+0x74>
2040442a:	bfc5                	j	2040441a <__gedf2+0x88>
2040442c:	fb0701e3          	beq	a4,a6,204043ce <__gedf2+0x3c>
20404430:	ff4d                	bnez	a4,204043ea <__gedf2+0x58>
20404432:	4501                	li	a0,0
20404434:	bf45                	j	204043e4 <__gedf2+0x52>

20404436 <__ledf2>:
__ledf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20404436:	0145d813          	srli	a6,a1,0x14
2040443a:	001007b7          	lui	a5,0x100
2040443e:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20404440:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20404444:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20404448:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
2040444c:	00b7f8b3          	and	a7,a5,a1
20404450:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20404452:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20404454:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20404456:	8e32                	mv	t3,a2
20404458:	7ff77713          	andi	a4,a4,2047
2040445c:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2040445e:	01d81863          	bne	a6,t4,2040446e <__ledf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 18)
20404462:	00a8eeb3          	or	t4,a7,a0
20404466:	060e8563          	beqz	t4,204044d0 <__ledf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2040446a:	4589                	li	a1,2
2040446c:	a80d                	j	2040449e <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 21)
2040446e:	01d71663          	bne	a4,t4,2040447a <__ledf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 22)
20404472:	00c7eeb3          	or	t4,a5,a2
20404476:	fe0e9ae3          	bnez	t4,2040446a <__ledf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 57)
2040447a:	04081d63          	bnez	a6,204044d4 <__ledf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 58)
2040447e:	00a8e533          	or	a0,a7,a0
20404482:	00153513          	seqz	a0,a0
20404486:	e319                	bnez	a4,2040448c <__ledf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 64)
20404488:	8e5d                	or	a2,a2,a5
2040448a:	ce15                	beqz	a2,204044c6 <__ledf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2040448c:	e511                	bnez	a0,20404498 <__ledf2+0x62>
2040448e:	00d58a63          	beq	a1,a3,204044a2 <__ledf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 108)
20404492:	c985                	beqz	a1,204044c2 <__ledf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20404494:	55fd                	li	a1,-1
20404496:	a021                	j	2040449e <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 74)
20404498:	55fd                	li	a1,-1
2040449a:	c291                	beqz	a3,2040449e <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2040449c:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:49
2040449e:	852e                	mv	a0,a1
204044a0:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 87)
204044a2:	ff0748e3          	blt	a4,a6,20404492 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 93)
204044a6:	00e85463          	bge	a6,a4,204044ae <__ledf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 118)
204044aa:	f9f5                	bnez	a1,2040449e <__ledf2+0x68>
204044ac:	b7e5                	j	20404494 <__ledf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 99)
204044ae:	ff17e2e3          	bltu	a5,a7,20404492 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 105)
204044b2:	00f89c63          	bne	a7,a5,204044ca <__ledf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 106)
204044b6:	fc6e6ee3          	bltu	t3,t1,20404492 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 116)
204044ba:	ffc368e3          	bltu	t1,t3,204044aa <__ledf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
204044be:	4581                	li	a1,0
204044c0:	bff9                	j	2040449e <__ledf2+0x68>
204044c2:	4585                	li	a1,1
204044c4:	bfe9                	j	2040449e <__ledf2+0x68>
204044c6:	fd65                	bnez	a0,204044be <__ledf2+0x88>
204044c8:	b7e9                	j	20404492 <__ledf2+0x5c>
204044ca:	fef8e0e3          	bltu	a7,a5,204044aa <__ledf2+0x74>
204044ce:	bfc5                	j	204044be <__ledf2+0x88>
204044d0:	fb0701e3          	beq	a4,a6,20404472 <__ledf2+0x3c>
204044d4:	ff4d                	bnez	a4,2040448e <__ledf2+0x58>
204044d6:	4501                	li	a0,0
204044d8:	bf45                	j	20404488 <__ledf2+0x52>

204044da <__muldf3>:
__muldf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
204044da:	7179                	addi	sp,sp,-48
204044dc:	ce4e                	sw	s3,28(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
204044de:	0145d993          	srli	s3,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
204044e2:	d422                	sw	s0,40(sp)
204044e4:	d226                	sw	s1,36(sp)
204044e6:	cc52                	sw	s4,24(sp)
204044e8:	ca56                	sw	s5,20(sp)
204044ea:	c85a                	sw	s6,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
204044ec:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
204044f0:	d606                	sw	ra,44(sp)
204044f2:	d04a                	sw	s2,32(sp)
204044f4:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
204044f6:	7ff9f993          	andi	s3,s3,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
204044fa:	842a                	mv	s0,a0
204044fc:	8b32                	mv	s6,a2
204044fe:	8ab6                	mv	s5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20404500:	80b1                	srli	s1,s1,0xc
20404502:	01f5da13          	srli	s4,a1,0x1f
20404506:	08098163          	beqz	s3,20404588 <__muldf3+0xae>
2040450a:	7ff00793          	li	a5,2047
2040450e:	0cf98563          	beq	s3,a5,204045d8 <__muldf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 1)
20404512:	01d55793          	srli	a5,a0,0x1d
20404516:	048e                	slli	s1,s1,0x3
20404518:	8cdd                	or	s1,s1,a5
2040451a:	008007b7          	lui	a5,0x800
2040451e:	8cdd                	or	s1,s1,a5
20404520:	00351913          	slli	s2,a0,0x3
20404524:	c0198993          	addi	s3,s3,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
20404528:	4b81                	li	s7,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
2040452a:	014ad513          	srli	a0,s5,0x14
2040452e:	00ca9413          	slli	s0,s5,0xc
20404532:	7ff57513          	andi	a0,a0,2047
20404536:	8031                	srli	s0,s0,0xc
20404538:	01fada93          	srli	s5,s5,0x1f
2040453c:	c161                	beqz	a0,204045fc <__muldf3+0x122>
2040453e:	7ff00793          	li	a5,2047
20404542:	10f50563          	beq	a0,a5,2040464c <__muldf3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 1)
20404546:	01db5793          	srli	a5,s6,0x1d
2040454a:	040e                	slli	s0,s0,0x3
2040454c:	8c5d                	or	s0,s0,a5
2040454e:	008007b7          	lui	a5,0x800
20404552:	8c5d                	or	s0,s0,a5
20404554:	c0150513          	addi	a0,a0,-1023 # 7fc01 <__heap_size+0x7f401>
20404558:	003b1793          	slli	a5,s6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
2040455c:	4701                	li	a4,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
2040455e:	002b9693          	slli	a3,s7,0x2
20404562:	8ed9                	or	a3,a3,a4
20404564:	954e                	add	a0,a0,s3
20404566:	16fd                	addi	a3,a3,-1
20404568:	45b9                	li	a1,14
2040456a:	015a4633          	xor	a2,s4,s5
2040456e:	00150813          	addi	a6,a0,1
20404572:	0ed5ee63          	bltu	a1,a3,2040466e <__muldf3+0x194>
20404576:	00005597          	auipc	a1,0x5
2040457a:	9ae58593          	addi	a1,a1,-1618 # 20408f24 <pow10.2193+0x8c>
2040457e:	068a                	slli	a3,a3,0x2
20404580:	96ae                	add	a3,a3,a1
20404582:	4294                	lw	a3,0(a3)
20404584:	96ae                	add	a3,a3,a1
20404586:	8682                	jr	a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 2)
20404588:	00a4e933          	or	s2,s1,a0
2040458c:	04090f63          	beqz	s2,204045ea <__muldf3+0x110>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 12)
20404590:	c88d                	beqz	s1,204045c2 <__muldf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 16)
20404592:	8526                	mv	a0,s1
20404594:	2f3000ef          	jal	ra,20405086 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 27)
20404598:	ff550713          	addi	a4,a0,-11
2040459c:	47f1                	li	a5,28
2040459e:	02e7c763          	blt	a5,a4,204045cc <__muldf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 28)
204045a2:	47f5                	li	a5,29
204045a4:	ff850913          	addi	s2,a0,-8
204045a8:	8f99                	sub	a5,a5,a4
204045aa:	012494b3          	sll	s1,s1,s2
204045ae:	00f457b3          	srl	a5,s0,a5
204045b2:	8cdd                	or	s1,s1,a5
204045b4:	01241933          	sll	s2,s0,s2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
204045b8:	c0d00993          	li	s3,-1011
204045bc:	40a989b3          	sub	s3,s3,a0
204045c0:	b7a5                	j	20404528 <__muldf3+0x4e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 20)
204045c2:	2c5000ef          	jal	ra,20405086 <__clzsi2>
204045c6:	02050513          	addi	a0,a0,32
204045ca:	b7f9                	j	20404598 <__muldf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 29)
204045cc:	fd850493          	addi	s1,a0,-40
204045d0:	009414b3          	sll	s1,s0,s1
204045d4:	4901                	li	s2,0
204045d6:	b7cd                	j	204045b8 <__muldf3+0xde>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 3)
204045d8:	00a4e933          	or	s2,s1,a0
204045dc:	00090b63          	beqz	s2,204045f2 <__muldf3+0x118>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
204045e0:	892a                	mv	s2,a0
204045e2:	7ff00993          	li	s3,2047
204045e6:	4b8d                	li	s7,3
204045e8:	b789                	j	2040452a <__muldf3+0x50>
204045ea:	4481                	li	s1,0
204045ec:	4981                	li	s3,0
204045ee:	4b85                	li	s7,1
204045f0:	bf2d                	j	2040452a <__muldf3+0x50>
204045f2:	4481                	li	s1,0
204045f4:	7ff00993          	li	s3,2047
204045f8:	4b89                	li	s7,2
204045fa:	bf05                	j	2040452a <__muldf3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 2)
204045fc:	016467b3          	or	a5,s0,s6
20404600:	cfb1                	beqz	a5,2040465c <__muldf3+0x182>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 12)
20404602:	c80d                	beqz	s0,20404634 <__muldf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 16)
20404604:	8522                	mv	a0,s0
20404606:	281000ef          	jal	ra,20405086 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 27)
2040460a:	ff550693          	addi	a3,a0,-11
2040460e:	47f1                	li	a5,28
20404610:	02d7c863          	blt	a5,a3,20404640 <__muldf3+0x166>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 28)
20404614:	4775                	li	a4,29
20404616:	ff850793          	addi	a5,a0,-8
2040461a:	8f15                	sub	a4,a4,a3
2040461c:	00f41433          	sll	s0,s0,a5
20404620:	00eb5733          	srl	a4,s6,a4
20404624:	8c59                	or	s0,s0,a4
20404626:	00fb17b3          	sll	a5,s6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
2040462a:	c0d00713          	li	a4,-1011
2040462e:	40a70533          	sub	a0,a4,a0
20404632:	b72d                	j	2040455c <__muldf3+0x82>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 20)
20404634:	855a                	mv	a0,s6
20404636:	251000ef          	jal	ra,20405086 <__clzsi2>
2040463a:	02050513          	addi	a0,a0,32
2040463e:	b7f1                	j	2040460a <__muldf3+0x130>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 29)
20404640:	fd850413          	addi	s0,a0,-40
20404644:	008b1433          	sll	s0,s6,s0
20404648:	4781                	li	a5,0
2040464a:	b7c5                	j	2040462a <__muldf3+0x150>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 3)
2040464c:	016467b3          	or	a5,s0,s6
20404650:	cb91                	beqz	a5,20404664 <__muldf3+0x18a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
20404652:	87da                	mv	a5,s6
20404654:	7ff00513          	li	a0,2047
20404658:	470d                	li	a4,3
2040465a:	b711                	j	2040455e <__muldf3+0x84>
2040465c:	4401                	li	s0,0
2040465e:	4501                	li	a0,0
20404660:	4705                	li	a4,1
20404662:	bdf5                	j	2040455e <__muldf3+0x84>
20404664:	4401                	li	s0,0
20404666:	7ff00513          	li	a0,2047
2040466a:	4709                	li	a4,2
2040466c:	bdcd                	j	2040455e <__muldf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 2)
2040466e:	6f41                	lui	t5,0x10
20404670:	ffff0e93          	addi	t4,t5,-1 # ffff <__heap_size+0xf7ff>
20404674:	01095713          	srli	a4,s2,0x10
20404678:	0107d893          	srli	a7,a5,0x10
2040467c:	01d97933          	and	s2,s2,t4
20404680:	01d7f7b3          	and	a5,a5,t4
20404684:	032885b3          	mul	a1,a7,s2
20404688:	032786b3          	mul	a3,a5,s2
2040468c:	02f70fb3          	mul	t6,a4,a5
20404690:	01f58333          	add	t1,a1,t6
20404694:	0106d593          	srli	a1,a3,0x10
20404698:	959a                	add	a1,a1,t1
2040469a:	03170e33          	mul	t3,a4,a7
2040469e:	01f5f363          	bgeu	a1,t6,204046a4 <__muldf3+0x1ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 9)
204046a2:	9e7a                	add	t3,t3,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 11)
204046a4:	0105d393          	srli	t2,a1,0x10
204046a8:	01d5f5b3          	and	a1,a1,t4
204046ac:	01d6f6b3          	and	a3,a3,t4
204046b0:	01045f13          	srli	t5,s0,0x10
204046b4:	01d472b3          	and	t0,s0,t4
204046b8:	05c2                	slli	a1,a1,0x10
204046ba:	95b6                	add	a1,a1,a3
204046bc:	02570eb3          	mul	t4,a4,t0
204046c0:	032286b3          	mul	a3,t0,s2
204046c4:	032f0933          	mul	s2,t5,s2
204046c8:	01d90333          	add	t1,s2,t4
204046cc:	0106d913          	srli	s2,a3,0x10
204046d0:	991a                	add	s2,s2,t1
204046d2:	03e70733          	mul	a4,a4,t5
204046d6:	01d97463          	bgeu	s2,t4,204046de <__muldf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 12)
204046da:	6341                	lui	t1,0x10
204046dc:	971a                	add	a4,a4,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 14)
204046de:	01095e93          	srli	t4,s2,0x10
204046e2:	69c1                	lui	s3,0x10
204046e4:	9eba                	add	t4,t4,a4
204046e6:	fff98713          	addi	a4,s3,-1 # ffff <__heap_size+0xf7ff>
204046ea:	00e97933          	and	s2,s2,a4
204046ee:	8ef9                	and	a3,a3,a4
204046f0:	0104d413          	srli	s0,s1,0x10
204046f4:	0942                	slli	s2,s2,0x10
204046f6:	8cf9                	and	s1,s1,a4
204046f8:	9936                	add	s2,s2,a3
204046fa:	02978733          	mul	a4,a5,s1
204046fe:	93ca                	add	t2,t2,s2
20404700:	02f40333          	mul	t1,s0,a5
20404704:	029886b3          	mul	a3,a7,s1
20404708:	028887b3          	mul	a5,a7,s0
2040470c:	006688b3          	add	a7,a3,t1
20404710:	01075693          	srli	a3,a4,0x10
20404714:	96c6                	add	a3,a3,a7
20404716:	0066f363          	bgeu	a3,t1,2040471c <__muldf3+0x242>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 15)
2040471a:	97ce                	add	a5,a5,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 17)
2040471c:	0106d893          	srli	a7,a3,0x10
20404720:	69c1                	lui	s3,0x10
20404722:	00f88fb3          	add	t6,a7,a5
20404726:	fff98793          	addi	a5,s3,-1 # ffff <__heap_size+0xf7ff>
2040472a:	8efd                	and	a3,a3,a5
2040472c:	8f7d                	and	a4,a4,a5
2040472e:	029288b3          	mul	a7,t0,s1
20404732:	06c2                	slli	a3,a3,0x10
20404734:	96ba                	add	a3,a3,a4
20404736:	025407b3          	mul	a5,s0,t0
2040473a:	029f04b3          	mul	s1,t5,s1
2040473e:	028f0333          	mul	t1,t5,s0
20404742:	94be                	add	s1,s1,a5
20404744:	0108d413          	srli	s0,a7,0x10
20404748:	94a2                	add	s1,s1,s0
2040474a:	00f4f363          	bgeu	s1,a5,20404750 <__muldf3+0x276>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 18)
2040474e:	934e                	add	t1,t1,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 20)
20404750:	67c1                	lui	a5,0x10
20404752:	17fd                	addi	a5,a5,-1
20404754:	00f4f733          	and	a4,s1,a5
20404758:	00f8f8b3          	and	a7,a7,a5
2040475c:	0742                	slli	a4,a4,0x10
2040475e:	9e1e                	add	t3,t3,t2
20404760:	9746                	add	a4,a4,a7
20404762:	012e3933          	sltu	s2,t3,s2
20404766:	9776                	add	a4,a4,t4
20404768:	01270433          	add	s0,a4,s2
2040476c:	9e36                	add	t3,t3,a3
2040476e:	00de36b3          	sltu	a3,t3,a3
20404772:	01f408b3          	add	a7,s0,t6
20404776:	00d88f33          	add	t5,a7,a3
2040477a:	01d73733          	sltu	a4,a4,t4
2040477e:	01243433          	sltu	s0,s0,s2
20404782:	8c59                	or	s0,s0,a4
20404784:	80c1                	srli	s1,s1,0x10
20404786:	01f8b8b3          	sltu	a7,a7,t6
2040478a:	00df36b3          	sltu	a3,t5,a3
2040478e:	9426                	add	s0,s0,s1
20404790:	00d8e6b3          	or	a3,a7,a3
20404794:	9436                	add	s0,s0,a3
20404796:	941a                	add	s0,s0,t1
20404798:	017f5793          	srli	a5,t5,0x17
2040479c:	0426                	slli	s0,s0,0x9
2040479e:	8c5d                	or	s0,s0,a5
204047a0:	009e1793          	slli	a5,t3,0x9
204047a4:	8fcd                	or	a5,a5,a1
204047a6:	00f037b3          	snez	a5,a5
204047aa:	017e5e13          	srli	t3,t3,0x17
204047ae:	009f1713          	slli	a4,t5,0x9
204047b2:	01c7e7b3          	or	a5,a5,t3
204047b6:	8fd9                	or	a5,a5,a4
204047b8:	00741713          	slli	a4,s0,0x7
204047bc:	0a075863          	bgez	a4,2040486c <__muldf3+0x392>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 38)
204047c0:	0017d713          	srli	a4,a5,0x1
204047c4:	8b85                	andi	a5,a5,1
204047c6:	8fd9                	or	a5,a5,a4
204047c8:	01f41713          	slli	a4,s0,0x1f
204047cc:	8fd9                	or	a5,a5,a4
204047ce:	8005                	srli	s0,s0,0x1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 2)
204047d0:	3ff80693          	addi	a3,a6,1023
204047d4:	08d05e63          	blez	a3,20404870 <__muldf3+0x396>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 6)
204047d8:	0077f713          	andi	a4,a5,7
204047dc:	cf01                	beqz	a4,204047f4 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 8)
204047de:	00f7f713          	andi	a4,a5,15
204047e2:	4591                	li	a1,4
204047e4:	00b70863          	beq	a4,a1,204047f4 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 10)
204047e8:	00478713          	addi	a4,a5,4 # 10004 <__heap_size+0xf804>
204047ec:	00f737b3          	sltu	a5,a4,a5
204047f0:	943e                	add	s0,s0,a5
204047f2:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 9)
204047f4:	00741713          	slli	a4,s0,0x7
204047f8:	00075863          	bgez	a4,20404808 <__muldf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 24)
204047fc:	ff000737          	lui	a4,0xff000
20404800:	177d                	addi	a4,a4,-1
20404802:	8c79                	and	s0,s0,a4
20404804:	40080693          	addi	a3,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 26)
20404808:	7fe00713          	li	a4,2046
2040480c:	0ed74c63          	blt	a4,a3,20404904 <__muldf3+0x42a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404810:	0037d713          	srli	a4,a5,0x3
20404814:	01d41793          	slli	a5,s0,0x1d
20404818:	8fd9                	or	a5,a5,a4
2040481a:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 120)
2040481c:	0432                	slli	s0,s0,0xc
2040481e:	7ff6f713          	andi	a4,a3,2047
20404822:	0752                	slli	a4,a4,0x14
20404824:	8031                	srli	s0,s0,0xc
20404826:	8c59                	or	s0,s0,a4
20404828:	067e                	slli	a2,a2,0x1f
2040482a:	00c46733          	or	a4,s0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:51 (discriminator 120)
2040482e:	50b2                	lw	ra,44(sp)
20404830:	5422                	lw	s0,40(sp)
20404832:	5492                	lw	s1,36(sp)
20404834:	5902                	lw	s2,32(sp)
20404836:	49f2                	lw	s3,28(sp)
20404838:	4a62                	lw	s4,24(sp)
2040483a:	4ad2                	lw	s5,20(sp)
2040483c:	4b42                	lw	s6,16(sp)
2040483e:	4bb2                	lw	s7,12(sp)
20404840:	853e                	mv	a0,a5
20404842:	85ba                	mv	a1,a4
20404844:	6145                	addi	sp,sp,48
20404846:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 7)
20404848:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 7)
2040484a:	8426                	mv	s0,s1
2040484c:	87ca                	mv	a5,s2
2040484e:	875e                	mv	a4,s7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404850:	4689                	li	a3,2
20404852:	0ad70963          	beq	a4,a3,20404904 <__muldf3+0x42a>
20404856:	468d                	li	a3,3
20404858:	08d70f63          	beq	a4,a3,204048f6 <__muldf3+0x41c>
2040485c:	4685                	li	a3,1
2040485e:	f6d719e3          	bne	a4,a3,204047d0 <__muldf3+0x2f6>
20404862:	4401                	li	s0,0
20404864:	4781                	li	a5,0
20404866:	a09d                	j	204048cc <__muldf3+0x3f2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 4)
20404868:	8656                	mv	a2,s5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 4)
2040486a:	b7dd                	j	20404850 <__muldf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
2040486c:	882a                	mv	a6,a0
2040486e:	b78d                	j	204047d0 <__muldf3+0x2f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 59)
20404870:	4585                	li	a1,1
20404872:	8d95                	sub	a1,a1,a3
20404874:	03800713          	li	a4,56
20404878:	feb745e3          	blt	a4,a1,20404862 <__muldf3+0x388>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 60)
2040487c:	477d                	li	a4,31
2040487e:	04b74963          	blt	a4,a1,204048d0 <__muldf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 62)
20404882:	41e80813          	addi	a6,a6,1054
20404886:	01041733          	sll	a4,s0,a6
2040488a:	00b7d6b3          	srl	a3,a5,a1
2040488e:	010797b3          	sll	a5,a5,a6
20404892:	8f55                	or	a4,a4,a3
20404894:	00f037b3          	snez	a5,a5
20404898:	8fd9                	or	a5,a5,a4
2040489a:	00b45433          	srl	s0,s0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 75)
2040489e:	0077f713          	andi	a4,a5,7
204048a2:	cf01                	beqz	a4,204048ba <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 76)
204048a4:	00f7f713          	andi	a4,a5,15
204048a8:	4691                	li	a3,4
204048aa:	00d70863          	beq	a4,a3,204048ba <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 78)
204048ae:	00478713          	addi	a4,a5,4
204048b2:	00f737b3          	sltu	a5,a4,a5
204048b6:	943e                	add	s0,s0,a5
204048b8:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 77)
204048ba:	00841713          	slli	a4,s0,0x8
204048be:	04074863          	bltz	a4,2040490e <__muldf3+0x434>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 93)
204048c2:	01d41713          	slli	a4,s0,0x1d
204048c6:	838d                	srli	a5,a5,0x3
204048c8:	8fd9                	or	a5,a5,a4
204048ca:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
204048cc:	4681                	li	a3,0
204048ce:	b7b9                	j	2040481c <__muldf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 63)
204048d0:	5705                	li	a4,-31
204048d2:	8f15                	sub	a4,a4,a3
204048d4:	02000513          	li	a0,32
204048d8:	00e45733          	srl	a4,s0,a4
204048dc:	4681                	li	a3,0
204048de:	00a58663          	beq	a1,a0,204048ea <__muldf3+0x410>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 71)
204048e2:	43e80813          	addi	a6,a6,1086
204048e6:	010416b3          	sll	a3,s0,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 74)
204048ea:	8fd5                	or	a5,a5,a3
204048ec:	00f037b3          	snez	a5,a5
204048f0:	8fd9                	or	a5,a5,a4
204048f2:	4401                	li	s0,0
204048f4:	b76d                	j	2040489e <__muldf3+0x3c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
204048f6:	00080437          	lui	s0,0x80
204048fa:	4781                	li	a5,0
204048fc:	7ff00693          	li	a3,2047
20404900:	4601                	li	a2,0
20404902:	bf29                	j	2040481c <__muldf3+0x342>
20404904:	4401                	li	s0,0
20404906:	4781                	li	a5,0
20404908:	7ff00693          	li	a3,2047
2040490c:	bf01                	j	2040481c <__muldf3+0x342>
2040490e:	4401                	li	s0,0
20404910:	4781                	li	a5,0
20404912:	4685                	li	a3,1
20404914:	b721                	j	2040481c <__muldf3+0x342>

20404916 <__subdf3>:
__subdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404916:	00100837          	lui	a6,0x100
2040491a:	187d                	addi	a6,a6,-1
2040491c:	00b878b3          	and	a7,a6,a1
20404920:	088e                	slli	a7,a7,0x3
20404922:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20404926:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404928:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
2040492c:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404930:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404934:	0146d893          	srli	a7,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20404938:	ca26                	sw	s1,20(sp)
2040493a:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
2040493c:	7ff77493          	andi	s1,a4,2047
20404940:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404944:	01d65713          	srli	a4,a2,0x1d
20404948:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
2040494a:	ce06                	sw	ra,28(sp)
2040494c:	cc22                	sw	s0,24(sp)
2040494e:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404950:	7ff8f893          	andi	a7,a7,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404954:	7ff00593          	li	a1,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404958:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
2040495a:	82fd                	srli	a3,a3,0x1f
2040495c:	01076733          	or	a4,a4,a6
20404960:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404962:	00b89563          	bne	a7,a1,2040496c <__subdf3+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 2)
20404966:	00c765b3          	or	a1,a4,a2
2040496a:	e199                	bnez	a1,20404970 <__subdf3+0x5a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 3)
2040496c:	0016c693          	xori	a3,a3,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 11)
20404970:	41148833          	sub	a6,s1,a7
20404974:	23269363          	bne	a3,s2,20404b9a <__subdf3+0x284>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 12)
20404978:	0f005c63          	blez	a6,20404a70 <__subdf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 14)
2040497c:	04089563          	bnez	a7,204049c6 <__subdf3+0xb0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 16)
20404980:	00c766b3          	or	a3,a4,a2
20404984:	c28d                	beqz	a3,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 19)
20404986:	fff48813          	addi	a6,s1,-1 # 7ffff <__heap_size+0x7f7ff>
2040498a:	00081a63          	bnez	a6,2040499e <__subdf3+0x88>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 28)
2040498e:	962a                	add	a2,a2,a0
20404990:	00a63533          	sltu	a0,a2,a0
20404994:	97ba                	add	a5,a5,a4
20404996:	97aa                	add	a5,a5,a0
20404998:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 85)
2040499a:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
2040499c:	a895                	j	20404a10 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 29)
2040499e:	7ff00693          	li	a3,2047
204049a2:	02d49963          	bne	s1,a3,204049d4 <__subdf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 422)
204049a6:	00757713          	andi	a4,a0,7
204049aa:	4e070063          	beqz	a4,20404e8a <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 37)
204049ae:	00f57713          	andi	a4,a0,15
204049b2:	4691                	li	a3,4
204049b4:	4cd70b63          	beq	a4,a3,20404e8a <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 44)
204049b8:	00450693          	addi	a3,a0,4
204049bc:	00a6b533          	sltu	a0,a3,a0
204049c0:	97aa                	add	a5,a5,a0
204049c2:	8536                	mv	a0,a3
204049c4:	a1d9                	j	20404e8a <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 17)
204049c6:	7ff00693          	li	a3,2047
204049ca:	fcd48ee3          	beq	s1,a3,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 43)
204049ce:	008006b7          	lui	a3,0x800
204049d2:	8f55                	or	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 52)
204049d4:	03800693          	li	a3,56
204049d8:	0906c863          	blt	a3,a6,20404a68 <__subdf3+0x152>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 53)
204049dc:	46fd                	li	a3,31
204049de:	0706c063          	blt	a3,a6,20404a3e <__subdf3+0x128>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 55)
204049e2:	02000593          	li	a1,32
204049e6:	410585b3          	sub	a1,a1,a6
204049ea:	00b716b3          	sll	a3,a4,a1
204049ee:	010658b3          	srl	a7,a2,a6
204049f2:	00b61633          	sll	a2,a2,a1
204049f6:	0116e6b3          	or	a3,a3,a7
204049fa:	00c03633          	snez	a2,a2
204049fe:	8e55                	or	a2,a2,a3
20404a00:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 69)
20404a04:	962a                	add	a2,a2,a0
20404a06:	973e                	add	a4,a4,a5
20404a08:	00a637b3          	sltu	a5,a2,a0
20404a0c:	97ba                	add	a5,a5,a4
20404a0e:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 127)
20404a10:	00879713          	slli	a4,a5,0x8
20404a14:	f80759e3          	bgez	a4,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 187)
20404a18:	0485                	addi	s1,s1,1
20404a1a:	7ff00713          	li	a4,2047
20404a1e:	46e48463          	beq	s1,a4,20404e86 <__subdf3+0x570>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404a22:	ff8006b7          	lui	a3,0xff800
20404a26:	16fd                	addi	a3,a3,-1
20404a28:	8efd                	and	a3,a3,a5
20404a2a:	00155593          	srli	a1,a0,0x1
20404a2e:	8905                	andi	a0,a0,1
20404a30:	01f69793          	slli	a5,a3,0x1f
20404a34:	8d4d                	or	a0,a0,a1
20404a36:	8d5d                	or	a0,a0,a5
20404a38:	0016d793          	srli	a5,a3,0x1
20404a3c:	b7ad                	j	204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 56)
20404a3e:	fe080693          	addi	a3,a6,-32 # fffe0 <__heap_size+0xff7e0>
20404a42:	02000893          	li	a7,32
20404a46:	00d756b3          	srl	a3,a4,a3
20404a4a:	4581                	li	a1,0
20404a4c:	01180863          	beq	a6,a7,20404a5c <__subdf3+0x146>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 63)
20404a50:	04000593          	li	a1,64
20404a54:	41058833          	sub	a6,a1,a6
20404a58:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 66)
20404a5c:	8e4d                	or	a2,a2,a1
20404a5e:	00c03633          	snez	a2,a2
20404a62:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 54)
20404a64:	4701                	li	a4,0
20404a66:	bf79                	j	20404a04 <__subdf3+0xee>
20404a68:	8e59                	or	a2,a2,a4
20404a6a:	00c03633          	snez	a2,a2
20404a6e:	bfdd                	j	20404a64 <__subdf3+0x14e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 15)
20404a70:	0a080b63          	beqz	a6,20404b26 <__subdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 71)
20404a74:	409885b3          	sub	a1,a7,s1
20404a78:	e48d                	bnez	s1,20404aa2 <__subdf3+0x18c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 73)
20404a7a:	00a7e6b3          	or	a3,a5,a0
20404a7e:	3e068b63          	beqz	a3,20404e74 <__subdf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 76)
20404a82:	fff58693          	addi	a3,a1,-1
20404a86:	e699                	bnez	a3,20404a94 <__subdf3+0x17e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
20404a88:	9532                	add	a0,a0,a2
20404a8a:	97ba                	add	a5,a5,a4
20404a8c:	00c53633          	sltu	a2,a0,a2
20404a90:	97b2                	add	a5,a5,a2
20404a92:	b721                	j	2040499a <__subdf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 86)
20404a94:	7ff00813          	li	a6,2047
20404a98:	01059d63          	bne	a1,a6,20404ab2 <__subdf3+0x19c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404a9c:	87ba                	mv	a5,a4
20404a9e:	8532                	mv	a0,a2
20404aa0:	ace5                	j	20404d98 <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 74)
20404aa2:	7ff00693          	li	a3,2047
20404aa6:	fed88be3          	beq	a7,a3,20404a9c <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 100)
20404aaa:	008006b7          	lui	a3,0x800
20404aae:	8fd5                	or	a5,a5,a3
20404ab0:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 109)
20404ab2:	03800593          	li	a1,56
20404ab6:	06d5c463          	blt	a1,a3,20404b1e <__subdf3+0x208>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 110)
20404aba:	45fd                	li	a1,31
20404abc:	02d5cb63          	blt	a1,a3,20404af2 <__subdf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 112)
20404ac0:	02000813          	li	a6,32
20404ac4:	40d80833          	sub	a6,a6,a3
20404ac8:	00d55333          	srl	t1,a0,a3
20404acc:	010795b3          	sll	a1,a5,a6
20404ad0:	01051533          	sll	a0,a0,a6
20404ad4:	0065e5b3          	or	a1,a1,t1
20404ad8:	00a03533          	snez	a0,a0
20404adc:	8d4d                	or	a0,a0,a1
20404ade:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 126)
20404ae2:	9532                	add	a0,a0,a2
20404ae4:	00e687b3          	add	a5,a3,a4
20404ae8:	00c53633          	sltu	a2,a0,a2
20404aec:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 126)
20404aee:	84c6                	mv	s1,a7
20404af0:	b705                	j	20404a10 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 113)
20404af2:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20404af6:	02000313          	li	t1,32
20404afa:	00b7d5b3          	srl	a1,a5,a1
20404afe:	4801                	li	a6,0
20404b00:	00668863          	beq	a3,t1,20404b10 <__subdf3+0x1fa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 120)
20404b04:	04000813          	li	a6,64
20404b08:	40d806b3          	sub	a3,a6,a3
20404b0c:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 123)
20404b10:	00a86533          	or	a0,a6,a0
20404b14:	00a03533          	snez	a0,a0
20404b18:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 111)
20404b1a:	4681                	li	a3,0
20404b1c:	b7d9                	j	20404ae2 <__subdf3+0x1cc>
20404b1e:	8d5d                	or	a0,a0,a5
20404b20:	00a03533          	snez	a0,a0
20404b24:	bfdd                	j	20404b1a <__subdf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 72)
20404b26:	00148693          	addi	a3,s1,1
20404b2a:	7fe6f593          	andi	a1,a3,2046
20404b2e:	e5a9                	bnez	a1,20404b78 <__subdf3+0x262>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 128)
20404b30:	00a7e6b3          	or	a3,a5,a0
20404b34:	e49d                	bnez	s1,20404b62 <__subdf3+0x24c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 130)
20404b36:	34068363          	beqz	a3,20404e7c <__subdf3+0x566>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 133)
20404b3a:	00c766b3          	or	a3,a4,a2
20404b3e:	e60684e3          	beqz	a3,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 139)
20404b42:	962a                	add	a2,a2,a0
20404b44:	97ba                	add	a5,a5,a4
20404b46:	00a63533          	sltu	a0,a2,a0
20404b4a:	97aa                	add	a5,a5,a0
20404b4c:	00879713          	slli	a4,a5,0x8
20404b50:	8532                	mv	a0,a2
20404b52:	e4075ae3          	bgez	a4,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 141)
20404b56:	ff800737          	lui	a4,0xff800
20404b5a:	177d                	addi	a4,a4,-1
20404b5c:	8ff9                	and	a5,a5,a4
20404b5e:	4485                	li	s1,1
20404b60:	b599                	j	204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 158)
20404b62:	de8d                	beqz	a3,20404a9c <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 160)
20404b64:	8e59                	or	a2,a2,a4
20404b66:	22060963          	beqz	a2,20404d98 <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404b6a:	4901                	li	s2,0
20404b6c:	004007b7          	lui	a5,0x400
20404b70:	4501                	li	a0,0
20404b72:	7ff00493          	li	s1,2047
20404b76:	ae11                	j	20404e8a <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 129)
20404b78:	7ff00593          	li	a1,2047
20404b7c:	30b68363          	beq	a3,a1,20404e82 <__subdf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404b80:	962a                	add	a2,a2,a0
20404b82:	973e                	add	a4,a4,a5
20404b84:	00a637b3          	sltu	a5,a2,a0
20404b88:	973e                	add	a4,a4,a5
20404b8a:	01f71513          	slli	a0,a4,0x1f
20404b8e:	8205                	srli	a2,a2,0x1
20404b90:	8d51                	or	a0,a0,a2
20404b92:	00175793          	srli	a5,a4,0x1
20404b96:	84b6                	mv	s1,a3
20404b98:	b539                	j	204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 13)
20404b9a:	0d005563          	blez	a6,20404c64 <__subdf3+0x34e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 205)
20404b9e:	08089263          	bnez	a7,20404c22 <__subdf3+0x30c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 207)
20404ba2:	00c766b3          	or	a3,a4,a2
20404ba6:	e00680e3          	beqz	a3,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 210)
20404baa:	fff48813          	addi	a6,s1,-1
20404bae:	00081b63          	bnez	a6,20404bc4 <__subdf3+0x2ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 219)
20404bb2:	40c50633          	sub	a2,a0,a2
20404bb6:	00c53533          	sltu	a0,a0,a2
20404bba:	8f99                	sub	a5,a5,a4
20404bbc:	8f89                	sub	a5,a5,a0
20404bbe:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 276)
20404bc0:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20404bc2:	a0b1                	j	20404c0e <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 220)
20404bc4:	7ff00693          	li	a3,2047
20404bc8:	dcd48fe3          	beq	s1,a3,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 243)
20404bcc:	03800693          	li	a3,56
20404bd0:	0906c663          	blt	a3,a6,20404c5c <__subdf3+0x346>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 244)
20404bd4:	46fd                	li	a3,31
20404bd6:	0506ce63          	blt	a3,a6,20404c32 <__subdf3+0x31c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 246)
20404bda:	02000593          	li	a1,32
20404bde:	410585b3          	sub	a1,a1,a6
20404be2:	00b716b3          	sll	a3,a4,a1
20404be6:	010658b3          	srl	a7,a2,a6
20404bea:	00b61633          	sll	a2,a2,a1
20404bee:	0116e6b3          	or	a3,a3,a7
20404bf2:	00c03633          	snez	a2,a2
20404bf6:	8e55                	or	a2,a2,a3
20404bf8:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 260)
20404bfc:	40c50633          	sub	a2,a0,a2
20404c00:	40e78733          	sub	a4,a5,a4
20404c04:	00c537b3          	sltu	a5,a0,a2
20404c08:	40f707b3          	sub	a5,a4,a5
20404c0c:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 318)
20404c0e:	00879713          	slli	a4,a5,0x8
20404c12:	d8075ae3          	bgez	a4,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 378)
20404c16:	00800437          	lui	s0,0x800
20404c1a:	147d                	addi	s0,s0,-1
20404c1c:	8c7d                	and	s0,s0,a5
20404c1e:	89aa                	mv	s3,a0
20404c20:	a26d                	j	20404dca <__subdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 208)
20404c22:	7ff00693          	li	a3,2047
20404c26:	d8d480e3          	beq	s1,a3,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 234)
20404c2a:	008006b7          	lui	a3,0x800
20404c2e:	8f55                	or	a4,a4,a3
20404c30:	bf71                	j	20404bcc <__subdf3+0x2b6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 247)
20404c32:	fe080693          	addi	a3,a6,-32
20404c36:	02000893          	li	a7,32
20404c3a:	00d756b3          	srl	a3,a4,a3
20404c3e:	4581                	li	a1,0
20404c40:	01180863          	beq	a6,a7,20404c50 <__subdf3+0x33a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 254)
20404c44:	04000593          	li	a1,64
20404c48:	41058833          	sub	a6,a1,a6
20404c4c:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 257)
20404c50:	8e4d                	or	a2,a2,a1
20404c52:	00c03633          	snez	a2,a2
20404c56:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 245)
20404c58:	4701                	li	a4,0
20404c5a:	b74d                	j	20404bfc <__subdf3+0x2e6>
20404c5c:	8e59                	or	a2,a2,a4
20404c5e:	00c03633          	snez	a2,a2
20404c62:	bfdd                	j	20404c58 <__subdf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 206)
20404c64:	0c080463          	beqz	a6,20404d2c <__subdf3+0x416>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 262)
20404c68:	40988833          	sub	a6,a7,s1
20404c6c:	e895                	bnez	s1,20404ca0 <__subdf3+0x38a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 264)
20404c6e:	00a7e5b3          	or	a1,a5,a0
20404c72:	26058b63          	beqz	a1,20404ee8 <__subdf3+0x5d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 267)
20404c76:	fff80593          	addi	a1,a6,-1
20404c7a:	e991                	bnez	a1,20404c8e <__subdf3+0x378>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20404c7c:	40a60533          	sub	a0,a2,a0
20404c80:	40f707b3          	sub	a5,a4,a5
20404c84:	00a63633          	sltu	a2,a2,a0
20404c88:	8f91                	sub	a5,a5,a2
20404c8a:	8936                	mv	s2,a3
20404c8c:	bf15                	j	20404bc0 <__subdf3+0x2aa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 277)
20404c8e:	7ff00313          	li	t1,2047
20404c92:	00681f63          	bne	a6,t1,20404cb0 <__subdf3+0x39a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404c96:	87ba                	mv	a5,a4
20404c98:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404c9a:	7ff00493          	li	s1,2047
20404c9e:	a07d                	j	20404d4c <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 265)
20404ca0:	7ff00593          	li	a1,2047
20404ca4:	feb889e3          	beq	a7,a1,20404c96 <__subdf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 291)
20404ca8:	008005b7          	lui	a1,0x800
20404cac:	8fcd                	or	a5,a5,a1
20404cae:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 300)
20404cb0:	03800813          	li	a6,56
20404cb4:	06b84863          	blt	a6,a1,20404d24 <__subdf3+0x40e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 301)
20404cb8:	487d                	li	a6,31
20404cba:	02b84e63          	blt	a6,a1,20404cf6 <__subdf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 303)
20404cbe:	02000313          	li	t1,32
20404cc2:	40b30333          	sub	t1,t1,a1
20404cc6:	00b55e33          	srl	t3,a0,a1
20404cca:	00679833          	sll	a6,a5,t1
20404cce:	00651533          	sll	a0,a0,t1
20404cd2:	01c86833          	or	a6,a6,t3
20404cd6:	00a03533          	snez	a0,a0
20404cda:	00a86533          	or	a0,a6,a0
20404cde:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 317)
20404ce2:	40a60533          	sub	a0,a2,a0
20404ce6:	40b707b3          	sub	a5,a4,a1
20404cea:	00a63633          	sltu	a2,a2,a0
20404cee:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 317)
20404cf0:	84c6                	mv	s1,a7
20404cf2:	8936                	mv	s2,a3
20404cf4:	bf29                	j	20404c0e <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 304)
20404cf6:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20404cfa:	02000e13          	li	t3,32
20404cfe:	0107d833          	srl	a6,a5,a6
20404d02:	4301                	li	t1,0
20404d04:	01c58863          	beq	a1,t3,20404d14 <__subdf3+0x3fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 311)
20404d08:	04000313          	li	t1,64
20404d0c:	40b305b3          	sub	a1,t1,a1
20404d10:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 314)
20404d14:	00a36533          	or	a0,t1,a0
20404d18:	00a03533          	snez	a0,a0
20404d1c:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 302)
20404d20:	4581                	li	a1,0
20404d22:	b7c1                	j	20404ce2 <__subdf3+0x3cc>
20404d24:	8d5d                	or	a0,a0,a5
20404d26:	00a03533          	snez	a0,a0
20404d2a:	bfdd                	j	20404d20 <__subdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 263)
20404d2c:	00148593          	addi	a1,s1,1
20404d30:	7fe5f593          	andi	a1,a1,2046
20404d34:	e5bd                	bnez	a1,20404da2 <__subdf3+0x48c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 319)
20404d36:	00a7e833          	or	a6,a5,a0
20404d3a:	00c765b3          	or	a1,a4,a2
20404d3e:	e4b1                	bnez	s1,20404d8a <__subdf3+0x474>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 321)
20404d40:	00081863          	bnez	a6,20404d50 <__subdf3+0x43a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 323)
20404d44:	1a058663          	beqz	a1,20404ef0 <__subdf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404d48:	87ba                	mv	a5,a4
20404d4a:	8532                	mv	a0,a2
20404d4c:	8936                	mv	s2,a3
20404d4e:	b9a1                	j	204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 324)
20404d50:	c4058be3          	beqz	a1,204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 331)
20404d54:	40c50833          	sub	a6,a0,a2
20404d58:	40e785b3          	sub	a1,a5,a4
20404d5c:	010538b3          	sltu	a7,a0,a6
20404d60:	411585b3          	sub	a1,a1,a7
20404d64:	00859413          	slli	s0,a1,0x8
20404d68:	00045a63          	bgez	s0,20404d7c <__subdf3+0x466>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 333)
20404d6c:	40a60533          	sub	a0,a2,a0
20404d70:	40f707b3          	sub	a5,a4,a5
20404d74:	00a63633          	sltu	a2,a2,a0
20404d78:	8f91                	sub	a5,a5,a2
20404d7a:	bfc9                	j	20404d4c <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 334)
20404d7c:	00b86533          	or	a0,a6,a1
20404d80:	16050c63          	beqz	a0,20404ef8 <__subdf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404d84:	87ae                	mv	a5,a1
20404d86:	8542                	mv	a0,a6
20404d88:	b939                	j	204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 353)
20404d8a:	00081a63          	bnez	a6,20404d9e <__subdf3+0x488>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 354)
20404d8e:	16058763          	beqz	a1,20404efc <__subdf3+0x5e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404d92:	87ba                	mv	a5,a4
20404d94:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404d96:	8936                	mv	s2,a3
20404d98:	7ff00493          	li	s1,2047
20404d9c:	b129                	j	204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 355)
20404d9e:	dded                	beqz	a1,20404d98 <__subdf3+0x482>
20404da0:	b3e9                	j	20404b6a <__subdf3+0x254>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 320)
20404da2:	40c509b3          	sub	s3,a0,a2
20404da6:	013535b3          	sltu	a1,a0,s3
20404daa:	40e78433          	sub	s0,a5,a4
20404dae:	8c0d                	sub	s0,s0,a1
20404db0:	00841593          	slli	a1,s0,0x8
20404db4:	0605d663          	bgez	a1,20404e20 <__subdf3+0x50a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 371)
20404db8:	40a609b3          	sub	s3,a2,a0
20404dbc:	40f707b3          	sub	a5,a4,a5
20404dc0:	01363633          	sltu	a2,a2,s3
20404dc4:	40c78433          	sub	s0,a5,a2
20404dc8:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 380)
20404dca:	c02d                	beqz	s0,20404e2c <__subdf3+0x516>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 383)
20404dcc:	8522                	mv	a0,s0
20404dce:	2c65                	jal	20405086 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 394)
20404dd0:	ff850713          	addi	a4,a0,-8
20404dd4:	47fd                	li	a5,31
20404dd6:	06e7c063          	blt	a5,a4,20404e36 <__subdf3+0x520>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 395)
20404dda:	02000793          	li	a5,32
20404dde:	8f99                	sub	a5,a5,a4
20404de0:	00e41433          	sll	s0,s0,a4
20404de4:	00f9d7b3          	srl	a5,s3,a5
20404de8:	8c5d                	or	s0,s0,a5
20404dea:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 404)
20404dee:	06974d63          	blt	a4,s1,20404e68 <__subdf3+0x552>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 405)
20404df2:	8f05                	sub	a4,a4,s1
20404df4:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7fe1ad>
20404df8:	46fd                	li	a3,31
20404dfa:	04f6c463          	blt	a3,a5,20404e42 <__subdf3+0x52c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 407)
20404dfe:	02000713          	li	a4,32
20404e02:	8f1d                	sub	a4,a4,a5
20404e04:	00f55633          	srl	a2,a0,a5
20404e08:	00e416b3          	sll	a3,s0,a4
20404e0c:	00e51533          	sll	a0,a0,a4
20404e10:	8ed1                	or	a3,a3,a2
20404e12:	00a03533          	snez	a0,a0
20404e16:	8d55                	or	a0,a0,a3
20404e18:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
20404e1c:	4481                	li	s1,0
20404e1e:	b661                	j	204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 372)
20404e20:	0089e533          	or	a0,s3,s0
20404e24:	f15d                	bnez	a0,20404dca <__subdf3+0x4b4>
20404e26:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404e28:	4481                	li	s1,0
20404e2a:	a0e9                	j	20404ef4 <__subdf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 387)
20404e2c:	854e                	mv	a0,s3
20404e2e:	2ca1                	jal	20405086 <__clzsi2>
20404e30:	02050513          	addi	a0,a0,32
20404e34:	bf71                	j	20404dd0 <__subdf3+0x4ba>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 396)
20404e36:	fd850413          	addi	s0,a0,-40
20404e3a:	00899433          	sll	s0,s3,s0
20404e3e:	4501                	li	a0,0
20404e40:	b77d                	j	20404dee <__subdf3+0x4d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 408)
20404e42:	1705                	addi	a4,a4,-31
20404e44:	02000613          	li	a2,32
20404e48:	00e45733          	srl	a4,s0,a4
20404e4c:	4681                	li	a3,0
20404e4e:	00c78763          	beq	a5,a2,20404e5c <__subdf3+0x546>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 416)
20404e52:	04000693          	li	a3,64
20404e56:	8e9d                	sub	a3,a3,a5
20404e58:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
20404e5c:	8d55                	or	a0,a0,a3
20404e5e:	00a03533          	snez	a0,a0
20404e62:	8d59                	or	a0,a0,a4
20404e64:	4781                	li	a5,0
20404e66:	bf5d                	j	20404e1c <__subdf3+0x506>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 406)
20404e68:	ff8007b7          	lui	a5,0xff800
20404e6c:	17fd                	addi	a5,a5,-1
20404e6e:	8c99                	sub	s1,s1,a4
20404e70:	8fe1                	and	a5,a5,s0
20404e72:	be15                	j	204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404e74:	87ba                	mv	a5,a4
20404e76:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404e78:	84ae                	mv	s1,a1
20404e7a:	b635                	j	204049a6 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404e7c:	87ba                	mv	a5,a4
20404e7e:	8532                	mv	a0,a2
20404e80:	b61d                	j	204049a6 <__subdf3+0x90>
20404e82:	7ff00493          	li	s1,2047
20404e86:	4781                	li	a5,0
20404e88:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 47)
20404e8a:	00879713          	slli	a4,a5,0x8
20404e8e:	00075b63          	bgez	a4,20404ea4 <__subdf3+0x58e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 63)
20404e92:	0485                	addi	s1,s1,1
20404e94:	7ff00713          	li	a4,2047
20404e98:	06e48763          	beq	s1,a4,20404f06 <__subdf3+0x5f0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
20404e9c:	ff800737          	lui	a4,0xff800
20404ea0:	177d                	addi	a4,a4,-1
20404ea2:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 79)
20404ea4:	01d79713          	slli	a4,a5,0x1d
20404ea8:	810d                	srli	a0,a0,0x3
20404eaa:	8d59                	or	a0,a0,a4
20404eac:	7ff00713          	li	a4,2047
20404eb0:	838d                	srli	a5,a5,0x3
20404eb2:	00e49963          	bne	s1,a4,20404ec4 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 80)
20404eb6:	8d5d                	or	a0,a0,a5
20404eb8:	4781                	li	a5,0
20404eba:	c509                	beqz	a0,20404ec4 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
20404ebc:	000807b7          	lui	a5,0x80
20404ec0:	4501                	li	a0,0
20404ec2:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20404ec4:	7ff4f713          	andi	a4,s1,2047
20404ec8:	07b2                	slli	a5,a5,0xc
20404eca:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
20404ecc:	40f2                	lw	ra,28(sp)
20404ece:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20404ed0:	83b1                	srli	a5,a5,0xc
20404ed2:	01f91593          	slli	a1,s2,0x1f
20404ed6:	8fd9                	or	a5,a5,a4
20404ed8:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
20404edc:	44d2                	lw	s1,20(sp)
20404ede:	4942                	lw	s2,16(sp)
20404ee0:	49b2                	lw	s3,12(sp)
20404ee2:	85ba                	mv	a1,a4
20404ee4:	6105                	addi	sp,sp,32
20404ee6:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404ee8:	87ba                	mv	a5,a4
20404eea:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404eec:	84c2                	mv	s1,a6
20404eee:	bdb9                	j	20404d4c <__subdf3+0x436>
20404ef0:	4781                	li	a5,0
20404ef2:	4501                	li	a0,0
20404ef4:	4901                	li	s2,0
20404ef6:	bf51                	j	20404e8a <__subdf3+0x574>
20404ef8:	4781                	li	a5,0
20404efa:	bfed                	j	20404ef4 <__subdf3+0x5de>
20404efc:	4501                	li	a0,0
20404efe:	4901                	li	s2,0
20404f00:	004007b7          	lui	a5,0x400
20404f04:	b1bd                	j	20404b72 <__subdf3+0x25c>
20404f06:	4781                	li	a5,0
20404f08:	4501                	li	a0,0
20404f0a:	bf69                	j	20404ea4 <__subdf3+0x58e>

20404f0c <__fixdfsi>:
__fixdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
20404f0c:	0145d713          	srli	a4,a1,0x14
20404f10:	001006b7          	lui	a3,0x100
20404f14:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
20404f18:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20404f1c:	3fe00613          	li	a2,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
20404f20:	8fed                	and	a5,a5,a1
20404f22:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20404f24:	04e65463          	bge	a2,a4,20404f6c <__fixdfsi+0x60>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 10)
20404f28:	41d00613          	li	a2,1053
20404f2c:	00e65863          	bge	a2,a4,20404f3c <__fixdfsi+0x30>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 13)
20404f30:	80000537          	lui	a0,0x80000
20404f34:	fff54513          	not	a0,a0
20404f38:	952e                	add	a0,a0,a1
20404f3a:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 12)
20404f3c:	8fd5                	or	a5,a5,a3
20404f3e:	43300693          	li	a3,1075
20404f42:	8e99                	sub	a3,a3,a4
20404f44:	467d                	li	a2,31
20404f46:	00d64d63          	blt	a2,a3,20404f60 <__fixdfsi+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 29)
20404f4a:	bed70713          	addi	a4,a4,-1043 # ff7ffbed <metal_segment_heap_target_end+0x7f7fdd99>
20404f4e:	00e797b3          	sll	a5,a5,a4
20404f52:	00d55533          	srl	a0,a0,a3
20404f56:	8d5d                	or	a0,a0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 42)
20404f58:	c999                	beqz	a1,20404f6e <__fixdfsi+0x62>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 44)
20404f5a:	40a00533          	neg	a0,a0
20404f5e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 41)
20404f60:	41300513          	li	a0,1043
20404f64:	8d19                	sub	a0,a0,a4
20404f66:	00a7d533          	srl	a0,a5,a0
20404f6a:	b7fd                	j	20404f58 <__fixdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20404f6c:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:47
20404f6e:	8082                	ret

20404f70 <__fixunsdfsi>:
__fixunsdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20404f70:	0145d713          	srli	a4,a1,0x14
20404f74:	001006b7          	lui	a3,0x100
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:36
20404f78:	862a                	mv	a2,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20404f7a:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
20404f7e:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20404f82:	3fe00513          	li	a0,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20404f86:	8fed                	and	a5,a5,a1
20404f88:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20404f8a:	02e55f63          	bge	a0,a4,20404fc8 <__fixunsdfsi+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 10)
20404f8e:	4501                	li	a0,0
20404f90:	e591                	bnez	a1,20404f9c <__fixunsdfsi+0x2c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20404f92:	41e00593          	li	a1,1054
20404f96:	557d                	li	a0,-1
20404f98:	00e5d363          	bge	a1,a4,20404f9e <__fixunsdfsi+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:47
20404f9c:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 18)
20404f9e:	8fd5                	or	a5,a5,a3
20404fa0:	43300693          	li	a3,1075
20404fa4:	8e99                	sub	a3,a3,a4
20404fa6:	45fd                	li	a1,31
20404fa8:	00d5ca63          	blt	a1,a3,20404fbc <__fixunsdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 33)
20404fac:	bed70713          	addi	a4,a4,-1043
20404fb0:	00e797b3          	sll	a5,a5,a4
20404fb4:	00d65533          	srl	a0,a2,a3
20404fb8:	8d5d                	or	a0,a0,a5
20404fba:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 45)
20404fbc:	41300513          	li	a0,1043
20404fc0:	8d19                	sub	a0,a0,a4
20404fc2:	00a7d533          	srl	a0,a5,a0
20404fc6:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20404fc8:	4501                	li	a0,0
20404fca:	8082                	ret

20404fcc <__floatsidf>:
__floatsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:37
20404fcc:	1141                	addi	sp,sp,-16
20404fce:	c606                	sw	ra,12(sp)
20404fd0:	c422                	sw	s0,8(sp)
20404fd2:	c226                	sw	s1,4(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
20404fd4:	cd31                	beqz	a0,20405030 <__floatsidf+0x64>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 1)
20404fd6:	41f55793          	srai	a5,a0,0x1f
20404fda:	00a7c433          	xor	s0,a5,a0
20404fde:	8c1d                	sub	s0,s0,a5
20404fe0:	01f55493          	srli	s1,a0,0x1f
20404fe4:	8522                	mv	a0,s0
20404fe6:	2045                	jal	20405086 <__clzsi2>
20404fe8:	41e00713          	li	a4,1054
20404fec:	47a9                	li	a5,10
20404fee:	8f09                	sub	a4,a4,a0
20404ff0:	02a7ca63          	blt	a5,a0,20405024 <__floatsidf+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 23)
20404ff4:	47ad                	li	a5,11
20404ff6:	8f89                	sub	a5,a5,a0
20404ff8:	0555                	addi	a0,a0,21
20404ffa:	00f457b3          	srl	a5,s0,a5
20404ffe:	00a41433          	sll	s0,s0,a0
20405002:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:42
20405004:	07b2                	slli	a5,a5,0xc
20405006:	7ff77713          	andi	a4,a4,2047
2040500a:	0752                	slli	a4,a4,0x14
2040500c:	83b1                	srli	a5,a5,0xc
2040500e:	057e                	slli	a0,a0,0x1f
20405010:	8fd9                	or	a5,a5,a4
20405012:	00a7e733          	or	a4,a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:45
20405016:	40b2                	lw	ra,12(sp)
20405018:	8522                	mv	a0,s0
2040501a:	4422                	lw	s0,8(sp)
2040501c:	4492                	lw	s1,4(sp)
2040501e:	85ba                	mv	a1,a4
20405020:	0141                	addi	sp,sp,16
20405022:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 24)
20405024:	1555                	addi	a0,a0,-11
20405026:	00a417b3          	sll	a5,s0,a0
2040502a:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
2040502c:	4401                	li	s0,0
2040502e:	bfd9                	j	20405004 <__floatsidf+0x38>
20405030:	4701                	li	a4,0
20405032:	4781                	li	a5,0
20405034:	bfe5                	j	2040502c <__floatsidf+0x60>

20405036 <__floatunsidf>:
__floatunsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:37
20405036:	1141                	addi	sp,sp,-16
20405038:	c422                	sw	s0,8(sp)
2040503a:	c606                	sw	ra,12(sp)
2040503c:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
2040503e:	c129                	beqz	a0,20405080 <__floatunsidf+0x4a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 6)
20405040:	2099                	jal	20405086 <__clzsi2>
20405042:	41e00713          	li	a4,1054
20405046:	47a9                	li	a5,10
20405048:	8f09                	sub	a4,a4,a0
2040504a:	02a7c663          	blt	a5,a0,20405076 <__floatunsidf+0x40>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 23)
2040504e:	47ad                	li	a5,11
20405050:	8f89                	sub	a5,a5,a0
20405052:	0555                	addi	a0,a0,21
20405054:	00f457b3          	srl	a5,s0,a5
20405058:	00a41433          	sll	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
2040505c:	8522                	mv	a0,s0
2040505e:	40b2                	lw	ra,12(sp)
20405060:	4422                	lw	s0,8(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:42
20405062:	07b2                	slli	a5,a5,0xc
20405064:	7ff77713          	andi	a4,a4,2047
20405068:	0752                	slli	a4,a4,0x14
2040506a:	83b1                	srli	a5,a5,0xc
2040506c:	00e7e6b3          	or	a3,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
20405070:	85b6                	mv	a1,a3
20405072:	0141                	addi	sp,sp,16
20405074:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 24)
20405076:	1555                	addi	a0,a0,-11
20405078:	00a417b3          	sll	a5,s0,a0
2040507c:	4401                	li	s0,0
2040507e:	bff9                	j	2040505c <__floatunsidf+0x26>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
20405080:	4781                	li	a5,0
20405082:	4701                	li	a4,0
20405084:	bfe1                	j	2040505c <__floatunsidf+0x26>

20405086 <__clzsi2>:
__clzsi2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
20405086:	67c1                	lui	a5,0x10
20405088:	02f57663          	bgeu	a0,a5,204050b4 <__clzsi2+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 3)
2040508c:	0ff00793          	li	a5,255
20405090:	00a7b7b3          	sltu	a5,a5,a0
20405094:	078e                	slli	a5,a5,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 14)
20405096:	02000713          	li	a4,32
2040509a:	8f1d                	sub	a4,a4,a5
2040509c:	00f557b3          	srl	a5,a0,a5
204050a0:	00004517          	auipc	a0,0x4
204050a4:	ec050513          	addi	a0,a0,-320 # 20408f60 <__clz_tab>
204050a8:	97aa                	add	a5,a5,a0
204050aa:	0007c503          	lbu	a0,0(a5) # 10000 <__heap_size+0xf800>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:713 (discriminator 14)
204050ae:	40a70533          	sub	a0,a4,a0
204050b2:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 4)
204050b4:	01000737          	lui	a4,0x1000
204050b8:	47c1                	li	a5,16
204050ba:	fce56ee3          	bltu	a0,a4,20405096 <__clzsi2+0x10>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
204050be:	47e1                	li	a5,24
204050c0:	bfd9                	j	20405096 <__clzsi2+0x10>

204050c2 <_write>:
_write():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:9
#include <unistd.h>

/* Write to a file.  */
ssize_t
_write(int file, const void *ptr, size_t len)
{
204050c2:	7179                	addi	sp,sp,-48
204050c4:	d606                	sw	ra,44(sp)
204050c6:	d422                	sw	s0,40(sp)
204050c8:	1800                	addi	s0,sp,48
204050ca:	fca42e23          	sw	a0,-36(s0) # 7fffdc <__heap_size+0x7ff7dc>
204050ce:	fcb42c23          	sw	a1,-40(s0)
204050d2:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:10
  if (file != STDOUT_FILENO) {
204050d6:	fdc42703          	lw	a4,-36(s0)
204050da:	4785                	li	a5,1
204050dc:	00f70963          	beq	a4,a5,204050ee <_write+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:11
    errno = ENOSYS;
204050e0:	28a9                	jal	2040513a <__errno>
204050e2:	872a                	mv	a4,a0
204050e4:	05800793          	li	a5,88
204050e8:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:12
    return -1;
204050ea:	57fd                	li	a5,-1
204050ec:	a82d                	j	20405126 <_write+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:15
  }

  const char *bptr = ptr;
204050ee:	fd842783          	lw	a5,-40(s0)
204050f2:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16
  for (size_t i = 0; i < len; ++i)
204050f6:	fe042623          	sw	zero,-20(s0)
204050fa:	a839                	j	20405118 <_write+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:17 (discriminator 3)
    metal_tty_putc(bptr[i]);
204050fc:	fe842703          	lw	a4,-24(s0)
20405100:	fec42783          	lw	a5,-20(s0)
20405104:	97ba                	add	a5,a5,a4
20405106:	0007c783          	lbu	a5,0(a5)
2040510a:	853e                	mv	a0,a5
2040510c:	2c91                	jal	20405360 <metal_tty_putc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 3)
  for (size_t i = 0; i < len; ++i)
2040510e:	fec42783          	lw	a5,-20(s0)
20405112:	0785                	addi	a5,a5,1
20405114:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 1)
20405118:	fec42703          	lw	a4,-20(s0)
2040511c:	fd442783          	lw	a5,-44(s0)
20405120:	fcf76ee3          	bltu	a4,a5,204050fc <_write+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:18
  return 0;
20405124:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:19
}
20405126:	853e                	mv	a0,a5
20405128:	50b2                	lw	ra,44(sp)
2040512a:	5422                	lw	s0,40(sp)
2040512c:	6145                	addi	sp,sp,48
2040512e:	8082                	ret

20405130 <atexit>:
atexit():
20405130:	85aa                	mv	a1,a0
20405132:	4681                	li	a3,0
20405134:	4601                	li	a2,0
20405136:	4501                	li	a0,0
20405138:	a8f1                	j	20405214 <__register_exitproc>

2040513a <__errno>:
__errno():
2040513a:	5fbfb797          	auipc	a5,0x5fbfb
2040513e:	62e78793          	addi	a5,a5,1582 # 80000768 <_impure_ptr>
20405142:	4388                	lw	a0,0(a5)
20405144:	8082                	ret

20405146 <exit>:
exit():
20405146:	1141                	addi	sp,sp,-16
20405148:	c422                	sw	s0,8(sp)
2040514a:	c606                	sw	ra,12(sp)
2040514c:	00000797          	auipc	a5,0x0
20405150:	14c78793          	addi	a5,a5,332 # 20405298 <__call_exitprocs>
20405154:	842a                	mv	s0,a0
20405156:	c399                	beqz	a5,2040515c <exit+0x16>
20405158:	4581                	li	a1,0
2040515a:	2a3d                	jal	20405298 <__call_exitprocs>
2040515c:	5fbfb797          	auipc	a5,0x5fbfb
20405160:	61078793          	addi	a5,a5,1552 # 8000076c <_global_impure_ptr>
20405164:	4388                	lw	a0,0(a5)
20405166:	551c                	lw	a5,40(a0)
20405168:	c391                	beqz	a5,2040516c <exit+0x26>
2040516a:	9782                	jalr	a5
2040516c:	8522                	mv	a0,s0
2040516e:	101030ef          	jal	ra,20408a6e <_exit>

20405172 <__libc_fini_array>:
__libc_fini_array():
20405172:	1141                	addi	sp,sp,-16
20405174:	00004797          	auipc	a5,0x4
20405178:	24078793          	addi	a5,a5,576 # 204093b4 <__fini_array_end>
2040517c:	c422                	sw	s0,8(sp)
2040517e:	00004417          	auipc	s0,0x4
20405182:	23640413          	addi	s0,s0,566 # 204093b4 <__fini_array_end>
20405186:	8c1d                	sub	s0,s0,a5
20405188:	c226                	sw	s1,4(sp)
2040518a:	c606                	sw	ra,12(sp)
2040518c:	8409                	srai	s0,s0,0x2
2040518e:	84be                	mv	s1,a5
20405190:	e411                	bnez	s0,2040519c <__libc_fini_array+0x2a>
20405192:	40b2                	lw	ra,12(sp)
20405194:	4422                	lw	s0,8(sp)
20405196:	4492                	lw	s1,4(sp)
20405198:	0141                	addi	sp,sp,16
2040519a:	8082                	ret
2040519c:	147d                	addi	s0,s0,-1
2040519e:	00241793          	slli	a5,s0,0x2
204051a2:	97a6                	add	a5,a5,s1
204051a4:	439c                	lw	a5,0(a5)
204051a6:	9782                	jalr	a5
204051a8:	b7e5                	j	20405190 <__libc_fini_array+0x1e>

204051aa <__libc_init_array>:
__libc_init_array():
204051aa:	1141                	addi	sp,sp,-16
204051ac:	00004797          	auipc	a5,0x4
204051b0:	20478793          	addi	a5,a5,516 # 204093b0 <__init_array_start>
204051b4:	c422                	sw	s0,8(sp)
204051b6:	00004417          	auipc	s0,0x4
204051ba:	1fa40413          	addi	s0,s0,506 # 204093b0 <__init_array_start>
204051be:	8c1d                	sub	s0,s0,a5
204051c0:	c226                	sw	s1,4(sp)
204051c2:	c04a                	sw	s2,0(sp)
204051c4:	c606                	sw	ra,12(sp)
204051c6:	8409                	srai	s0,s0,0x2
204051c8:	4481                	li	s1,0
204051ca:	893e                	mv	s2,a5
204051cc:	02849663          	bne	s1,s0,204051f8 <__libc_init_array+0x4e>
204051d0:	00004797          	auipc	a5,0x4
204051d4:	1e078793          	addi	a5,a5,480 # 204093b0 <__init_array_start>
204051d8:	00004417          	auipc	s0,0x4
204051dc:	1dc40413          	addi	s0,s0,476 # 204093b4 <__fini_array_end>
204051e0:	8c1d                	sub	s0,s0,a5
204051e2:	8409                	srai	s0,s0,0x2
204051e4:	4481                	li	s1,0
204051e6:	893e                	mv	s2,a5
204051e8:	00849f63          	bne	s1,s0,20405206 <__libc_init_array+0x5c>
204051ec:	40b2                	lw	ra,12(sp)
204051ee:	4422                	lw	s0,8(sp)
204051f0:	4492                	lw	s1,4(sp)
204051f2:	4902                	lw	s2,0(sp)
204051f4:	0141                	addi	sp,sp,16
204051f6:	8082                	ret
204051f8:	00249793          	slli	a5,s1,0x2
204051fc:	97ca                	add	a5,a5,s2
204051fe:	439c                	lw	a5,0(a5)
20405200:	0485                	addi	s1,s1,1
20405202:	9782                	jalr	a5
20405204:	b7e1                	j	204051cc <__libc_init_array+0x22>
20405206:	00249793          	slli	a5,s1,0x2
2040520a:	97ca                	add	a5,a5,s2
2040520c:	439c                	lw	a5,0(a5)
2040520e:	0485                	addi	s1,s1,1
20405210:	9782                	jalr	a5
20405212:	bfd9                	j	204051e8 <__libc_init_array+0x3e>

20405214 <__register_exitproc>:
__register_exitproc():
20405214:	5fbfb797          	auipc	a5,0x5fbfb
20405218:	57c78793          	addi	a5,a5,1404 # 80000790 <metal_segment_data_target_end>
2040521c:	439c                	lw	a5,0(a5)
2040521e:	8e2a                	mv	t3,a0
20405220:	e38d                	bnez	a5,20405242 <__register_exitproc+0x2e>
20405222:	25c18713          	addi	a4,gp,604 # 800011c4 <_global_atexit0>
20405226:	5fbfb797          	auipc	a5,0x5fbfb
2040522a:	56e7a523          	sw	a4,1386(a5) # 80000790 <metal_segment_data_target_end>
2040522e:	dfbfb517          	auipc	a0,0xdfbfb
20405232:	dd250513          	addi	a0,a0,-558 # 0 <__metal_boot_hart>
20405236:	87ba                	mv	a5,a4
20405238:	c509                	beqz	a0,20405242 <__register_exitproc+0x2e>
2040523a:	411c                	lw	a5,0(a0)
2040523c:	2ef1a223          	sw	a5,740(gp) # 8000124c <_global_atexit0+0x88>
20405240:	87ba                	mv	a5,a4
20405242:	43d8                	lw	a4,4(a5)
20405244:	487d                	li	a6,31
20405246:	557d                	li	a0,-1
20405248:	04e84763          	blt	a6,a4,20405296 <__register_exitproc+0x82>
2040524c:	020e0e63          	beqz	t3,20405288 <__register_exitproc+0x74>
20405250:	0887a803          	lw	a6,136(a5)
20405254:	04080163          	beqz	a6,20405296 <__register_exitproc+0x82>
20405258:	00271893          	slli	a7,a4,0x2
2040525c:	98c2                	add	a7,a7,a6
2040525e:	00c8a023          	sw	a2,0(a7)
20405262:	10082303          	lw	t1,256(a6)
20405266:	4605                	li	a2,1
20405268:	00e61633          	sll	a2,a2,a4
2040526c:	00c36333          	or	t1,t1,a2
20405270:	10682023          	sw	t1,256(a6)
20405274:	08d8a023          	sw	a3,128(a7)
20405278:	4689                	li	a3,2
2040527a:	00de1763          	bne	t3,a3,20405288 <__register_exitproc+0x74>
2040527e:	10482683          	lw	a3,260(a6)
20405282:	8e55                	or	a2,a2,a3
20405284:	10c82223          	sw	a2,260(a6)
20405288:	00170693          	addi	a3,a4,1 # 1000001 <__heap_size+0xfff801>
2040528c:	070a                	slli	a4,a4,0x2
2040528e:	c3d4                	sw	a3,4(a5)
20405290:	97ba                	add	a5,a5,a4
20405292:	c78c                	sw	a1,8(a5)
20405294:	4501                	li	a0,0
20405296:	8082                	ret

20405298 <__call_exitprocs>:
__call_exitprocs():
20405298:	7179                	addi	sp,sp,-48
2040529a:	cc52                	sw	s4,24(sp)
2040529c:	ca56                	sw	s5,20(sp)
2040529e:	c85a                	sw	s6,16(sp)
204052a0:	c65e                	sw	s7,12(sp)
204052a2:	d606                	sw	ra,44(sp)
204052a4:	d422                	sw	s0,40(sp)
204052a6:	d226                	sw	s1,36(sp)
204052a8:	d04a                	sw	s2,32(sp)
204052aa:	ce4e                	sw	s3,28(sp)
204052ac:	c462                	sw	s8,8(sp)
204052ae:	8b2a                	mv	s6,a0
204052b0:	8a2e                	mv	s4,a1
204052b2:	5fbfba97          	auipc	s5,0x5fbfb
204052b6:	4dea8a93          	addi	s5,s5,1246 # 80000790 <metal_segment_data_target_end>
204052ba:	4b85                	li	s7,1
204052bc:	000aa403          	lw	s0,0(s5)
204052c0:	c811                	beqz	s0,204052d4 <__call_exitprocs+0x3c>
204052c2:	4044                	lw	s1,4(s0)
204052c4:	08842983          	lw	s3,136(s0)
204052c8:	fff48913          	addi	s2,s1,-1
204052cc:	048a                	slli	s1,s1,0x2
204052ce:	94a2                	add	s1,s1,s0
204052d0:	00095e63          	bgez	s2,204052ec <__call_exitprocs+0x54>
204052d4:	50b2                	lw	ra,44(sp)
204052d6:	5422                	lw	s0,40(sp)
204052d8:	5492                	lw	s1,36(sp)
204052da:	5902                	lw	s2,32(sp)
204052dc:	49f2                	lw	s3,28(sp)
204052de:	4a62                	lw	s4,24(sp)
204052e0:	4ad2                	lw	s5,20(sp)
204052e2:	4b42                	lw	s6,16(sp)
204052e4:	4bb2                	lw	s7,12(sp)
204052e6:	4c22                	lw	s8,8(sp)
204052e8:	6145                	addi	sp,sp,48
204052ea:	8082                	ret
204052ec:	000a0e63          	beqz	s4,20405308 <__call_exitprocs+0x70>
204052f0:	00099563          	bnez	s3,204052fa <__call_exitprocs+0x62>
204052f4:	197d                	addi	s2,s2,-1
204052f6:	14f1                	addi	s1,s1,-4
204052f8:	bfe1                	j	204052d0 <__call_exitprocs+0x38>
204052fa:	00291793          	slli	a5,s2,0x2
204052fe:	97ce                	add	a5,a5,s3
20405300:	0807a783          	lw	a5,128(a5)
20405304:	ff4798e3          	bne	a5,s4,204052f4 <__call_exitprocs+0x5c>
20405308:	4058                	lw	a4,4(s0)
2040530a:	40dc                	lw	a5,4(s1)
2040530c:	177d                	addi	a4,a4,-1
2040530e:	03271863          	bne	a4,s2,2040533e <__call_exitprocs+0xa6>
20405312:	01242223          	sw	s2,4(s0)
20405316:	dff9                	beqz	a5,204052f4 <__call_exitprocs+0x5c>
20405318:	00442c03          	lw	s8,4(s0)
2040531c:	00098863          	beqz	s3,2040532c <__call_exitprocs+0x94>
20405320:	1009a683          	lw	a3,256(s3)
20405324:	012b9733          	sll	a4,s7,s2
20405328:	8ef9                	and	a3,a3,a4
2040532a:	ee89                	bnez	a3,20405344 <__call_exitprocs+0xac>
2040532c:	9782                	jalr	a5
2040532e:	4058                	lw	a4,4(s0)
20405330:	000aa783          	lw	a5,0(s5)
20405334:	f98714e3          	bne	a4,s8,204052bc <__call_exitprocs+0x24>
20405338:	faf40ee3          	beq	s0,a5,204052f4 <__call_exitprocs+0x5c>
2040533c:	b741                	j	204052bc <__call_exitprocs+0x24>
2040533e:	0004a223          	sw	zero,4(s1)
20405342:	bfd1                	j	20405316 <__call_exitprocs+0x7e>
20405344:	00291693          	slli	a3,s2,0x2
20405348:	96ce                	add	a3,a3,s3
2040534a:	428c                	lw	a1,0(a3)
2040534c:	1049a683          	lw	a3,260(s3)
20405350:	8f75                	and	a4,a4,a3
20405352:	e701                	bnez	a4,2040535a <__call_exitprocs+0xc2>
20405354:	855a                	mv	a0,s6
20405356:	9782                	jalr	a5
20405358:	bfd9                	j	2040532e <__call_exitprocs+0x96>
2040535a:	852e                	mv	a0,a1
2040535c:	9782                	jalr	a5
2040535e:	bfc1                	j	2040532e <__call_exitprocs+0x96>

20405360 <metal_tty_putc>:
metal_tty_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:12

#if defined(__METAL_DT_STDOUT_UART_HANDLE)
/* This implementation serves as a small shim that interfaces with the first
 * UART on a system. */
int metal_tty_putc(int c)
{
20405360:	1101                	addi	sp,sp,-32
20405362:	ce06                	sw	ra,28(sp)
20405364:	cc22                	sw	s0,24(sp)
20405366:	1000                	addi	s0,sp,32
20405368:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:13
    if (c == '\n') {
2040536c:	fec42703          	lw	a4,-20(s0)
20405370:	47a9                	li	a5,10
20405372:	00f71463          	bne	a4,a5,2040537a <metal_tty_putc+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:14
        metal_tty_putc_raw( '\r' );
20405376:	4535                	li	a0,13
20405378:	2811                	jal	2040538c <metal_tty_putc_raw>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:16
    }
    return metal_tty_putc_raw( c );
2040537a:	fec42503          	lw	a0,-20(s0)
2040537e:	2039                	jal	2040538c <metal_tty_putc_raw>
20405380:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:17
}
20405382:	853e                	mv	a0,a5
20405384:	40f2                	lw	ra,28(sp)
20405386:	4462                	lw	s0,24(sp)
20405388:	6105                	addi	sp,sp,32
2040538a:	8082                	ret

2040538c <metal_tty_putc_raw>:
metal_tty_putc_raw():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:20

int metal_tty_putc_raw(int c)
{
2040538c:	1101                	addi	sp,sp,-32
2040538e:	ce06                	sw	ra,28(sp)
20405390:	cc22                	sw	s0,24(sp)
20405392:	1000                	addi	s0,sp,32
20405394:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:21
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20405398:	fec42583          	lw	a1,-20(s0)
2040539c:	800007b7          	lui	a5,0x80000
204053a0:	74878513          	addi	a0,a5,1864 # 80000748 <metal_segment_heap_target_end+0xffffe8f4>
204053a4:	28b1                	jal	20405400 <metal_uart_putc>
204053a6:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:22
}
204053a8:	853e                	mv	a0,a5
204053aa:	40f2                	lw	ra,28(sp)
204053ac:	4462                	lw	s0,24(sp)
204053ae:	6105                	addi	sp,sp,32
204053b0:	8082                	ret

204053b2 <metal_tty_init>:
metal_tty_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:40
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

static void metal_tty_init(void) __attribute__((constructor));
static void metal_tty_init(void)
{
204053b2:	1141                	addi	sp,sp,-16
204053b4:	c606                	sw	ra,12(sp)
204053b6:	c422                	sw	s0,8(sp)
204053b8:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:41
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204053ba:	67f1                	lui	a5,0x1c
204053bc:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204053c0:	800007b7          	lui	a5,0x80000
204053c4:	74878513          	addi	a0,a5,1864 # 80000748 <metal_segment_heap_target_end+0xffffe8f4>
204053c8:	2031                	jal	204053d4 <metal_uart_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:42
}
204053ca:	0001                	nop
204053cc:	40b2                	lw	ra,12(sp)
204053ce:	4422                	lw	s0,8(sp)
204053d0:	0141                	addi	sp,sp,16
204053d2:	8082                	ret

204053d4 <metal_uart_init>:
metal_uart_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:44
 * other method on the UART can be invoked. It is invalid to initialize a UART more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) { uart->vtable->init(uart, baud_rate); }
204053d4:	1101                	addi	sp,sp,-32
204053d6:	ce06                	sw	ra,28(sp)
204053d8:	cc22                	sw	s0,24(sp)
204053da:	1000                	addi	s0,sp,32
204053dc:	fea42623          	sw	a0,-20(s0)
204053e0:	feb42423          	sw	a1,-24(s0)
204053e4:	fec42783          	lw	a5,-20(s0)
204053e8:	439c                	lw	a5,0(a5)
204053ea:	439c                	lw	a5,0(a5)
204053ec:	fe842583          	lw	a1,-24(s0)
204053f0:	fec42503          	lw	a0,-20(s0)
204053f4:	9782                	jalr	a5
204053f6:	0001                	nop
204053f8:	40f2                	lw	ra,28(sp)
204053fa:	4462                	lw	s0,24(sp)
204053fc:	6105                	addi	sp,sp,32
204053fe:	8082                	ret

20405400 <metal_uart_putc>:
metal_uart_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:52
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) { return uart->vtable->putc(uart, c); }
20405400:	1101                	addi	sp,sp,-32
20405402:	ce06                	sw	ra,28(sp)
20405404:	cc22                	sw	s0,24(sp)
20405406:	1000                	addi	s0,sp,32
20405408:	fea42623          	sw	a0,-20(s0)
2040540c:	feb42423          	sw	a1,-24(s0)
20405410:	fec42783          	lw	a5,-20(s0)
20405414:	439c                	lw	a5,0(a5)
20405416:	43dc                	lw	a5,4(a5)
20405418:	fe842583          	lw	a1,-24(s0)
2040541c:	fec42503          	lw	a0,-20(s0)
20405420:	9782                	jalr	a5
20405422:	87aa                	mv	a5,a0
20405424:	853e                	mv	a0,a5
20405426:	40f2                	lw	ra,28(sp)
20405428:	4462                	lw	s0,24(sp)
2040542a:	6105                	addi	sp,sp,32
2040542c:	8082                	ret

2040542e <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:85
 * @brief Set the baud rate of the UART peripheral
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart, int baud_rate) { return uart->vtable->set_baud_rate(uart, baud_rate); }
2040542e:	1101                	addi	sp,sp,-32
20405430:	ce06                	sw	ra,28(sp)
20405432:	cc22                	sw	s0,24(sp)
20405434:	1000                	addi	s0,sp,32
20405436:	fea42623          	sw	a0,-20(s0)
2040543a:	feb42423          	sw	a1,-24(s0)
2040543e:	fec42783          	lw	a5,-20(s0)
20405442:	439c                	lw	a5,0(a5)
20405444:	4bdc                	lw	a5,20(a5)
20405446:	fe842583          	lw	a1,-24(s0)
2040544a:	fec42503          	lw	a0,-20(s0)
2040544e:	9782                	jalr	a5
20405450:	87aa                	mv	a5,a0
20405452:	853e                	mv	a0,a5
20405454:	40f2                	lw	ra,28(sp)
20405456:	4462                	lw	s0,24(sp)
20405458:	6105                	addi	sp,sp,32
2040545a:	8082                	ret

2040545c <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:136
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
2040545c:	1101                	addi	sp,sp,-32
2040545e:	ce22                	sw	s0,28(sp)
20405460:	1000                	addi	s0,sp,32
20405462:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:137
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20405466:	fec42703          	lw	a4,-20(s0)
2040546a:	800007b7          	lui	a5,0x80000
2040546e:	77478793          	addi	a5,a5,1908 # 80000774 <metal_segment_heap_target_end+0xffffe920>
20405472:	00f71563          	bne	a4,a5,2040547c <__metal_driver_sifive_clint0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:138
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20405476:	020007b7          	lui	a5,0x2000
2040547a:	a011                	j	2040547e <__metal_driver_sifive_clint0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:141
	}
	else {
		return 0;
2040547c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:143
	}
}
2040547e:	853e                	mv	a0,a5
20405480:	4472                	lw	s0,28(sp)
20405482:	6105                	addi	sp,sp,32
20405484:	8082                	ret

20405486 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:156
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20405486:	1101                	addi	sp,sp,-32
20405488:	ce22                	sw	s0,28(sp)
2040548a:	1000                	addi	s0,sp,32
2040548c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:157
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20405490:	fec42703          	lw	a4,-20(s0)
20405494:	800007b7          	lui	a5,0x80000
20405498:	77478793          	addi	a5,a5,1908 # 80000774 <metal_segment_heap_target_end+0xffffe920>
2040549c:	00f71463          	bne	a4,a5,204054a4 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:158
		return METAL_MAX_CLINT_INTERRUPTS;
204054a0:	4789                	li	a5,2
204054a2:	a011                	j	204054a6 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:161
	}
	else {
		return 0;
204054a4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:163
	}
}
204054a6:	853e                	mv	a0,a5
204054a8:	4472                	lw	s0,28(sp)
204054aa:	6105                	addi	sp,sp,32
204054ac:	8082                	ret

204054ae <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:166

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204054ae:	1101                	addi	sp,sp,-32
204054b0:	ce22                	sw	s0,28(sp)
204054b2:	1000                	addi	s0,sp,32
204054b4:	fea42623          	sw	a0,-20(s0)
204054b8:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:167
	if (idx == 0) {
204054bc:	fe842783          	lw	a5,-24(s0)
204054c0:	e791                	bnez	a5,204054cc <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:168
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204054c2:	800007b7          	lui	a5,0x80000
204054c6:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe23c>
204054ca:	a821                	j	204054e2 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:170
	}
	else if (idx == 1) {
204054cc:	fe842703          	lw	a4,-24(s0)
204054d0:	4785                	li	a5,1
204054d2:	00f71763          	bne	a4,a5,204054e0 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:171
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204054d6:	800007b7          	lui	a5,0x80000
204054da:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe23c>
204054de:	a011                	j	204054e2 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:174
	}
	else {
		return NULL;
204054e0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:176
	}
}
204054e2:	853e                	mv	a0,a5
204054e4:	4472                	lw	s0,28(sp)
204054e6:	6105                	addi	sp,sp,32
204054e8:	8082                	ret

204054ea <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:179

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
204054ea:	1101                	addi	sp,sp,-32
204054ec:	ce22                	sw	s0,28(sp)
204054ee:	1000                	addi	s0,sp,32
204054f0:	fea42623          	sw	a0,-20(s0)
204054f4:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:180
	if (idx == 0) {
204054f8:	fe842783          	lw	a5,-24(s0)
204054fc:	e399                	bnez	a5,20405502 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:181
		return 3;
204054fe:	478d                	li	a5,3
20405500:	a809                	j	20405512 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:183
	}
	else if (idx == 1) {
20405502:	fe842703          	lw	a4,-24(s0)
20405506:	4785                	li	a5,1
20405508:	00f71463          	bne	a4,a5,20405510 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:184
		return 7;
2040550c:	479d                	li	a5,7
2040550e:	a011                	j	20405512 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:187
	}
	else {
		return 0;
20405510:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:189
	}
}
20405512:	853e                	mv	a0,a5
20405514:	4472                	lw	s0,28(sp)
20405516:	6105                	addi	sp,sp,32
20405518:	8082                	ret

2040551a <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/cpu.h>
#include <metal/drivers/riscv_clint0.h>
#include <metal/machine.h>

unsigned long long __metal_clint0_mtime_get (struct __metal_driver_riscv_clint0 *clint)
{
2040551a:	715d                	addi	sp,sp,-80
2040551c:	c686                	sw	ra,76(sp)
2040551e:	c4a2                	sw	s0,72(sp)
20405520:	c2ca                	sw	s2,68(sp)
20405522:	c0ce                	sw	s3,64(sp)
20405524:	de52                	sw	s4,60(sp)
20405526:	dc56                	sw	s5,56(sp)
20405528:	da5a                	sw	s6,52(sp)
2040552a:	d85e                	sw	s7,48(sp)
2040552c:	d662                	sw	s8,44(sp)
2040552e:	d466                	sw	s9,40(sp)
20405530:	0880                	addi	s0,sp,80
20405532:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:16
    __metal_io_u32 lo, hi;
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
20405536:	fbc42783          	lw	a5,-68(s0)
2040553a:	853e                	mv	a0,a5
2040553c:	3705                	jal	2040545c <__metal_driver_sifive_clint0_control_base>
2040553e:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:20 (discriminator 1)

    /* Guard against rollover when reading */
    do {
	hi = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
20405542:	fcc42703          	lw	a4,-52(s0)
20405546:	67b1                	lui	a5,0xc
20405548:	17f1                	addi	a5,a5,-4
2040554a:	97ba                	add	a5,a5,a4
2040554c:	439c                	lw	a5,0(a5)
2040554e:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)
	lo = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
20405552:	fcc42703          	lw	a4,-52(s0)
20405556:	67b1                	lui	a5,0xc
20405558:	17e1                	addi	a5,a5,-8
2040555a:	97ba                	add	a5,a5,a4
2040555c:	439c                	lw	a5,0(a5)
2040555e:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:22 (discriminator 1)
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4)) != hi);
20405562:	fcc42703          	lw	a4,-52(s0)
20405566:	67b1                	lui	a5,0xc
20405568:	17f1                	addi	a5,a5,-4
2040556a:	97ba                	add	a5,a5,a4
2040556c:	439c                	lw	a5,0(a5)
2040556e:	fc842703          	lw	a4,-56(s0)
20405572:	fcf718e3          	bne	a4,a5,20405542 <__metal_clint0_mtime_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:24

    return (((unsigned long long)hi) << 32) | lo;
20405576:	fc842783          	lw	a5,-56(s0)
2040557a:	8c3e                	mv	s8,a5
2040557c:	4c81                	li	s9,0
2040557e:	000c1993          	slli	s3,s8,0x0
20405582:	4901                	li	s2,0
20405584:	fc442783          	lw	a5,-60(s0)
20405588:	8a3e                	mv	s4,a5
2040558a:	4a81                	li	s5,0
2040558c:	01496b33          	or	s6,s2,s4
20405590:	0159ebb3          	or	s7,s3,s5
20405594:	87da                	mv	a5,s6
20405596:	885e                	mv	a6,s7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25
}
20405598:	853e                	mv	a0,a5
2040559a:	85c2                	mv	a1,a6
2040559c:	40b6                	lw	ra,76(sp)
2040559e:	4426                	lw	s0,72(sp)
204055a0:	4916                	lw	s2,68(sp)
204055a2:	4986                	lw	s3,64(sp)
204055a4:	5a72                	lw	s4,60(sp)
204055a6:	5ae2                	lw	s5,56(sp)
204055a8:	5b52                	lw	s6,52(sp)
204055aa:	5bc2                	lw	s7,48(sp)
204055ac:	5c32                	lw	s8,44(sp)
204055ae:	5ca2                	lw	s9,40(sp)
204055b0:	6161                	addi	sp,sp,80
204055b2:	8082                	ret

204055b4 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time)
{   
204055b4:	7179                	addi	sp,sp,-48
204055b6:	d606                	sw	ra,44(sp)
204055b8:	d422                	sw	s0,40(sp)
204055ba:	d24a                	sw	s2,36(sp)
204055bc:	d04e                	sw	s3,32(sp)
204055be:	1800                	addi	s0,sp,48
204055c0:	fca42e23          	sw	a0,-36(s0)
204055c4:	fcb42c23          	sw	a1,-40(s0)
204055c8:	fcc42823          	sw	a2,-48(s0)
204055cc:	fcd42a23          	sw	a3,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:31
    struct __metal_driver_riscv_clint0 *clint =
204055d0:	fdc42783          	lw	a5,-36(s0)
204055d4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:33
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
204055d8:	fec42783          	lw	a5,-20(s0)
204055dc:	853e                	mv	a0,a5
204055de:	3dbd                	jal	2040545c <__metal_driver_sifive_clint0_control_base>
204055e0:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:40
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = 0xFFFFFFFF;
204055e4:	fd842783          	lw	a5,-40(s0)
204055e8:	078e                	slli	a5,a5,0x3
204055ea:	873e                	mv	a4,a5
204055ec:	fe842783          	lw	a5,-24(s0)
204055f0:	973e                	add	a4,a4,a5
204055f2:	6791                	lui	a5,0x4
204055f4:	0791                	addi	a5,a5,4
204055f6:	97ba                	add	a5,a5,a4
204055f8:	873e                	mv	a4,a5
204055fa:	57fd                	li	a5,-1
204055fc:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:41
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE)) = (__metal_io_u32)time;
204055fe:	fd842783          	lw	a5,-40(s0)
20405602:	078e                	slli	a5,a5,0x3
20405604:	873e                	mv	a4,a5
20405606:	fe842783          	lw	a5,-24(s0)
2040560a:	973e                	add	a4,a4,a5
2040560c:	6791                	lui	a5,0x4
2040560e:	97ba                	add	a5,a5,a4
20405610:	873e                	mv	a4,a5
20405612:	fd042783          	lw	a5,-48(s0)
20405616:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:42
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = (__metal_io_u32)(time >> 32);
20405618:	fd442783          	lw	a5,-44(s0)
2040561c:	0007d913          	srli	s2,a5,0x0
20405620:	4981                	li	s3,0
20405622:	fd842783          	lw	a5,-40(s0)
20405626:	078e                	slli	a5,a5,0x3
20405628:	873e                	mv	a4,a5
2040562a:	fe842783          	lw	a5,-24(s0)
2040562e:	973e                	add	a4,a4,a5
20405630:	6791                	lui	a5,0x4
20405632:	0791                	addi	a5,a5,4
20405634:	97ba                	add	a5,a5,a4
20405636:	874a                	mv	a4,s2
20405638:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:43
    return 0;
2040563a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:44
}
2040563c:	853e                	mv	a0,a5
2040563e:	50b2                	lw	ra,44(sp)
20405640:	5422                	lw	s0,40(sp)
20405642:	5912                	lw	s2,36(sp)
20405644:	5982                	lw	s3,32(sp)
20405646:	6145                	addi	sp,sp,48
20405648:	8082                	ret

2040564a <_get_cpu_intc>:
_get_cpu_intc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47

static struct metal_interrupt *_get_cpu_intc()
{
2040564a:	1101                	addi	sp,sp,-32
2040564c:	ce06                	sw	ra,28(sp)
2040564e:	cc22                	sw	s0,24(sp)
20405650:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    int hartid = 0;
20405652:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
    __asm__ volatile("csrr %[hartid], mhartid"
20405656:	f14027f3          	csrr	a5,mhartid
2040565a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:52
                     : [hartid] "=r" (hartid) :: "memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
2040565e:	fec42783          	lw	a5,-20(s0)
20405662:	853e                	mv	a0,a5
20405664:	252030ef          	jal	ra,204088b6 <metal_cpu_get>
20405668:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54

    return metal_cpu_interrupt_controller(cpu);
2040566c:	fe842503          	lw	a0,-24(s0)
20405670:	220030ef          	jal	ra,20408890 <metal_cpu_interrupt_controller>
20405674:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
20405676:	853e                	mv	a0,a5
20405678:	40f2                	lw	ra,28(sp)
2040567a:	4462                	lw	s0,24(sp)
2040567c:	6105                	addi	sp,sp,32
2040567e:	8082                	ret

20405680 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58

void __metal_driver_riscv_clint0_init (struct metal_interrupt *controller)
{
20405680:	7139                	addi	sp,sp,-64
20405682:	de06                	sw	ra,60(sp)
20405684:	dc22                	sw	s0,56(sp)
20405686:	0080                	addi	s0,sp,64
20405688:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
2040568c:	fcc42503          	lw	a0,-52(s0)
20405690:	3bdd                	jal	20405486 <__metal_driver_sifive_clint0_num_interrupts>
20405692:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:60
    struct __metal_driver_riscv_clint0 *clint =
20405696:	fcc42783          	lw	a5,-52(s0)
2040569a:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:63
                              (struct __metal_driver_riscv_clint0 *)(controller);

    if ( !clint->init_done ) {
2040569e:	fe442783          	lw	a5,-28(s0)
204056a2:	43dc                	lw	a5,4(a5)
204056a4:	efa9                	bnez	a5,204056fe <__metal_driver_riscv_clint0_init+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
	/* Register its interrupts with with parent controller, aka sw and timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
204056a6:	fe042623          	sw	zero,-20(s0)
204056aa:	a081                	j	204056ea <__metal_driver_riscv_clint0_init+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:66 (discriminator 3)
	  struct metal_interrupt *intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204056ac:	fec42583          	lw	a1,-20(s0)
204056b0:	fcc42503          	lw	a0,-52(s0)
204056b4:	3bed                	jal	204054ae <__metal_driver_sifive_clint0_interrupt_parents>
204056b6:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67 (discriminator 3)
	  int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204056ba:	fec42583          	lw	a1,-20(s0)
204056be:	fcc42503          	lw	a0,-52(s0)
204056c2:	3525                	jal	204054ea <__metal_driver_sifive_clint0_interrupt_lines>
204056c4:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:68 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
204056c8:	fe042783          	lw	a5,-32(s0)
204056cc:	439c                	lw	a5,0(a5)
204056ce:	4fdc                	lw	a5,28(a5)
204056d0:	fcc42683          	lw	a3,-52(s0)
204056d4:	4601                	li	a2,0
204056d6:	fdc42583          	lw	a1,-36(s0)
204056da:	fe042503          	lw	a0,-32(s0)
204056de:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
204056e0:	fec42783          	lw	a5,-20(s0)
204056e4:	0785                	addi	a5,a5,1
204056e6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 1)
204056ea:	fec42703          	lw	a4,-20(s0)
204056ee:	fe842783          	lw	a5,-24(s0)
204056f2:	faf74de3          	blt	a4,a5,204056ac <__metal_driver_riscv_clint0_init+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
	}
	clint->init_done = 1;
204056f6:	fe442783          	lw	a5,-28(s0)
204056fa:	4705                	li	a4,1
204056fc:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:72
    }	
}
204056fe:	0001                	nop
20405700:	50f2                	lw	ra,60(sp)
20405702:	5462                	lw	s0,56(sp)
20405704:	6121                	addi	sp,sp,64
20405706:	8082                	ret

20405708 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:77

int __metal_driver_riscv_clint0_register (struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv)
{
20405708:	7139                	addi	sp,sp,-64
2040570a:	de06                	sw	ra,60(sp)
2040570c:	dc22                	sw	s0,56(sp)
2040570e:	0080                	addi	s0,sp,64
20405710:	fca42623          	sw	a0,-52(s0)
20405714:	fcb42423          	sw	a1,-56(s0)
20405718:	fcc42223          	sw	a2,-60(s0)
2040571c:	fcd42023          	sw	a3,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78
    int rc = -1;
20405720:	57fd                	li	a5,-1
20405722:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:79
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20405726:	3b4010ef          	jal	ra,20406ada <__metal_controller_interrupt_vector_mode>
2040572a:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80
    struct metal_interrupt *intc = NULL;
2040572e:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20405732:	3f21                	jal	2040564a <_get_cpu_intc>
20405734:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:82
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20405738:	fcc42503          	lw	a0,-52(s0)
2040573c:	33a9                	jal	20405486 <__metal_driver_sifive_clint0_num_interrupts>
2040573e:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84

    if ( (mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE) ) {
20405742:	fe042703          	lw	a4,-32(s0)
20405746:	4785                	li	a5,1
20405748:	00f70863          	beq	a4,a5,20405758 <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84 (discriminator 1)
2040574c:	fe042783          	lw	a5,-32(s0)
20405750:	c781                	beqz	a5,20405758 <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
        return rc;
20405752:	fec42783          	lw	a5,-20(s0)
20405756:	a049                	j	204057d8 <__metal_driver_riscv_clint0_register+0xd0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88
    }

    for(int i = 0; i < num_interrupts; i++) {
20405758:	fe042223          	sw	zero,-28(s0)
2040575c:	a091                	j	204057a0 <__metal_driver_riscv_clint0_register+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89
	int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040575e:	fe442583          	lw	a1,-28(s0)
20405762:	fcc42503          	lw	a0,-52(s0)
20405766:	3351                	jal	204054ea <__metal_driver_sifive_clint0_interrupt_lines>
20405768:	fca42a23          	sw	a0,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040576c:	fe442583          	lw	a1,-28(s0)
20405770:	fcc42503          	lw	a0,-52(s0)
20405774:	3b2d                	jal	204054ae <__metal_driver_sifive_clint0_interrupt_parents>
20405776:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
        if (cpu_intc == intc && id == line) {
2040577a:	fdc42703          	lw	a4,-36(s0)
2040577e:	fe842783          	lw	a5,-24(s0)
20405782:	00f71863          	bne	a4,a5,20405792 <__metal_driver_riscv_clint0_register+0x8a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91 (discriminator 1)
20405786:	fc842703          	lw	a4,-56(s0)
2040578a:	fd442783          	lw	a5,-44(s0)
2040578e:	02f70063          	beq	a4,a5,204057ae <__metal_driver_riscv_clint0_register+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:94 (discriminator 2)
            break;
        }
	intc = NULL;
20405792:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 2)
    for(int i = 0; i < num_interrupts; i++) {
20405796:	fe442783          	lw	a5,-28(s0)
2040579a:	0785                	addi	a5,a5,1
2040579c:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 1)
204057a0:	fe442703          	lw	a4,-28(s0)
204057a4:	fd842783          	lw	a5,-40(s0)
204057a8:	faf74be3          	blt	a4,a5,2040575e <__metal_driver_riscv_clint0_register+0x56>
204057ac:	a011                	j	204057b0 <__metal_driver_riscv_clint0_register+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
            break;
204057ae:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
    }

    /* Register its interrupts with parent controller */
    if (intc) {
204057b0:	fe842783          	lw	a5,-24(s0)
204057b4:	c385                	beqz	a5,204057d4 <__metal_driver_riscv_clint0_register+0xcc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:99
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
204057b6:	fe842783          	lw	a5,-24(s0)
204057ba:	439c                	lw	a5,0(a5)
204057bc:	4fdc                	lw	a5,28(a5)
204057be:	fc042683          	lw	a3,-64(s0)
204057c2:	fc442603          	lw	a2,-60(s0)
204057c6:	fc842583          	lw	a1,-56(s0)
204057ca:	fe842503          	lw	a0,-24(s0)
204057ce:	9782                	jalr	a5
204057d0:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }
    return rc;
204057d4:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
}
204057d8:	853e                	mv	a0,a5
204057da:	50f2                	lw	ra,60(sp)
204057dc:	5462                	lw	s0,56(sp)
204057de:	6121                	addi	sp,sp,64
204057e0:	8082                	ret

204057e2 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107

int __metal_driver_riscv_clint0_vector_register (struct metal_interrupt *controller,
                                                 int id, metal_interrupt_vector_handler_t isr,
                                                 void *priv)
{   
204057e2:	7179                	addi	sp,sp,-48
204057e4:	d622                	sw	s0,44(sp)
204057e6:	1800                	addi	s0,sp,48
204057e8:	fca42e23          	sw	a0,-36(s0)
204057ec:	fcb42c23          	sw	a1,-40(s0)
204057f0:	fcc42a23          	sw	a2,-44(s0)
204057f4:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:109
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
204057f8:	57fd                	li	a5,-1
204057fa:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:110
    return rc;
204057fe:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
}
20405802:	853e                	mv	a0,a5
20405804:	5432                	lw	s0,44(sp)
20405806:	6145                	addi	sp,sp,48
20405808:	8082                	ret

2040580a <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode (struct metal_interrupt *controller)
{
2040580a:	1101                	addi	sp,sp,-32
2040580c:	ce06                	sw	ra,28(sp)
2040580e:	cc22                	sw	s0,24(sp)
20405810:	1000                	addi	s0,sp,32
20405812:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
    return __metal_controller_interrupt_vector_mode();
20405816:	2c4010ef          	jal	ra,20406ada <__metal_controller_interrupt_vector_mode>
2040581a:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:116
}
2040581c:	853e                	mv	a0,a5
2040581e:	40f2                	lw	ra,28(sp)
20405820:	4462                	lw	s0,24(sp)
20405822:	6105                	addi	sp,sp,32
20405824:	8082                	ret

20405826 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_set_vector_mode (struct metal_interrupt *controller, metal_vector_mode mode)
{
20405826:	7179                	addi	sp,sp,-48
20405828:	d606                	sw	ra,44(sp)
2040582a:	d422                	sw	s0,40(sp)
2040582c:	1800                	addi	s0,sp,48
2040582e:	fca42e23          	sw	a0,-36(s0)
20405832:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:120
    int rc = -1;
20405836:	57fd                	li	a5,-1
20405838:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    struct metal_interrupt *intc = _get_cpu_intc();
2040583c:	3539                	jal	2040564a <_get_cpu_intc>
2040583e:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123

    if (intc) {
20405842:	fe842783          	lw	a5,-24(s0)
20405846:	c395                	beqz	a5,2040586a <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:125
	/* Valid vector modes are VECTOR and DIRECT, anything else is invalid (-1) */
        switch (mode) {
20405848:	fd842703          	lw	a4,-40(s0)
2040584c:	4785                	li	a5,1
2040584e:	00e7ef63          	bltu	a5,a4,2040586c <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20405852:	fe842783          	lw	a5,-24(s0)
20405856:	439c                	lw	a5,0(a5)
20405858:	43dc                	lw	a5,4(a5)
2040585a:	fd842583          	lw	a1,-40(s0)
2040585e:	fe842503          	lw	a0,-24(s0)
20405862:	9782                	jalr	a5
20405864:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:129
            break;
20405868:	a011                	j	2040586c <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131
        }
    }
2040586a:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    return rc;
2040586c:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
}
20405870:	853e                	mv	a0,a5
20405872:	50b2                	lw	ra,44(sp)
20405874:	5422                	lw	s0,40(sp)
20405876:	6145                	addi	sp,sp,48
20405878:	8082                	ret

2040587a <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:136

int __metal_driver_riscv_clint0_enable (struct metal_interrupt *controller, int id)
{
2040587a:	7139                	addi	sp,sp,-64
2040587c:	de06                	sw	ra,60(sp)
2040587e:	dc22                	sw	s0,56(sp)
20405880:	0080                	addi	s0,sp,64
20405882:	fca42623          	sw	a0,-52(s0)
20405886:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:137
    int rc = -1;
2040588a:	57fd                	li	a5,-1
2040588c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:139

    if ( id ) {
20405890:	fc842783          	lw	a5,-56(s0)
20405894:	c7c9                	beqz	a5,2040591e <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:140
        struct metal_interrupt *intc = NULL;
20405896:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2040589a:	3b45                	jal	2040564a <_get_cpu_intc>
2040589c:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
204058a0:	fcc42503          	lw	a0,-52(s0)
204058a4:	36cd                	jal	20405486 <__metal_driver_sifive_clint0_num_interrupts>
204058a6:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144

        for(int i = 0; i < num_interrupts; i++) {
204058aa:	fe042223          	sw	zero,-28(s0)
204058ae:	a091                	j	204058f2 <__metal_driver_riscv_clint0_enable+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:145
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204058b0:	fe442583          	lw	a1,-28(s0)
204058b4:	fcc42503          	lw	a0,-52(s0)
204058b8:	390d                	jal	204054ea <__metal_driver_sifive_clint0_interrupt_lines>
204058ba:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204058be:	fe442583          	lw	a1,-28(s0)
204058c2:	fcc42503          	lw	a0,-52(s0)
204058c6:	36e5                	jal	204054ae <__metal_driver_sifive_clint0_interrupt_parents>
204058c8:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
            if(cpu_intc == intc && id == line) {
204058cc:	fe042703          	lw	a4,-32(s0)
204058d0:	fe842783          	lw	a5,-24(s0)
204058d4:	00f71863          	bne	a4,a5,204058e4 <__metal_driver_riscv_clint0_enable+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147 (discriminator 1)
204058d8:	fc842703          	lw	a4,-56(s0)
204058dc:	fd842783          	lw	a5,-40(s0)
204058e0:	02f70063          	beq	a4,a5,20405900 <__metal_driver_riscv_clint0_enable+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:150 (discriminator 2)
                break;
            }
	    intc = NULL;
204058e4:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
204058e8:	fe442783          	lw	a5,-28(s0)
204058ec:	0785                	addi	a5,a5,1
204058ee:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 1)
204058f2:	fe442703          	lw	a4,-28(s0)
204058f6:	fdc42783          	lw	a5,-36(s0)
204058fa:	faf74be3          	blt	a4,a5,204058b0 <__metal_driver_riscv_clint0_enable+0x36>
204058fe:	a011                	j	20405902 <__metal_driver_riscv_clint0_enable+0x88>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
                break;
20405900:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154
        }
        
        /* Enable its interrupts with parent controller */
        if (intc) {
20405902:	fe842783          	lw	a5,-24(s0)
20405906:	cf81                	beqz	a5,2040591e <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
            rc = intc->vtable->interrupt_enable(intc, id);
20405908:	fe842783          	lw	a5,-24(s0)
2040590c:	439c                	lw	a5,0(a5)
2040590e:	53dc                	lw	a5,36(a5)
20405910:	fc842583          	lw	a1,-56(s0)
20405914:	fe842503          	lw	a0,-24(s0)
20405918:	9782                	jalr	a5
2040591a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:159
        }
    }

    return rc;
2040591e:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160
}
20405922:	853e                	mv	a0,a5
20405924:	50f2                	lw	ra,60(sp)
20405926:	5462                	lw	s0,56(sp)
20405928:	6121                	addi	sp,sp,64
2040592a:	8082                	ret

2040592c <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:163

int __metal_driver_riscv_clint0_disable (struct metal_interrupt *controller, int id)
{
2040592c:	7139                	addi	sp,sp,-64
2040592e:	de06                	sw	ra,60(sp)
20405930:	dc22                	sw	s0,56(sp)
20405932:	0080                	addi	s0,sp,64
20405934:	fca42623          	sw	a0,-52(s0)
20405938:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
    int rc = -1;
2040593c:	57fd                	li	a5,-1
2040593e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166

    if ( id ) {
20405942:	fc842783          	lw	a5,-56(s0)
20405946:	cbc1                	beqz	a5,204059d6 <__metal_driver_riscv_clint0_disable+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:167
        struct metal_interrupt *intc = NULL;
20405948:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2040594c:	39fd                	jal	2040564a <_get_cpu_intc>
2040594e:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:169
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20405952:	fcc42503          	lw	a0,-52(s0)
20405956:	b31ff0ef          	jal	ra,20405486 <__metal_driver_sifive_clint0_num_interrupts>
2040595a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171

        for(int i = 0; i < num_interrupts; i++) {
2040595e:	fe042223          	sw	zero,-28(s0)
20405962:	a0a1                	j	204059aa <__metal_driver_riscv_clint0_disable+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20405964:	fe442583          	lw	a1,-28(s0)
20405968:	fcc42503          	lw	a0,-52(s0)
2040596c:	b7fff0ef          	jal	ra,204054ea <__metal_driver_sifive_clint0_interrupt_lines>
20405970:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20405974:	fe442583          	lw	a1,-28(s0)
20405978:	fcc42503          	lw	a0,-52(s0)
2040597c:	b33ff0ef          	jal	ra,204054ae <__metal_driver_sifive_clint0_interrupt_parents>
20405980:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174
            if(cpu_intc == intc && id == line) {
20405984:	fe042703          	lw	a4,-32(s0)
20405988:	fe842783          	lw	a5,-24(s0)
2040598c:	00f71863          	bne	a4,a5,2040599c <__metal_driver_riscv_clint0_disable+0x70>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174 (discriminator 1)
20405990:	fc842703          	lw	a4,-56(s0)
20405994:	fd842783          	lw	a5,-40(s0)
20405998:	02f70063          	beq	a4,a5,204059b8 <__metal_driver_riscv_clint0_disable+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177 (discriminator 2)
                break;
            }
	    intc = NULL;
2040599c:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
204059a0:	fe442783          	lw	a5,-28(s0)
204059a4:	0785                	addi	a5,a5,1
204059a6:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 1)
204059aa:	fe442703          	lw	a4,-28(s0)
204059ae:	fdc42783          	lw	a5,-36(s0)
204059b2:	faf749e3          	blt	a4,a5,20405964 <__metal_driver_riscv_clint0_disable+0x38>
204059b6:	a011                	j	204059ba <__metal_driver_riscv_clint0_disable+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:175
                break;
204059b8:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181
        }
        
        /* Disable its interrupts with parent controller */
        if (intc) {
204059ba:	fe842783          	lw	a5,-24(s0)
204059be:	cf81                	beqz	a5,204059d6 <__metal_driver_riscv_clint0_disable+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
            rc = intc->vtable->interrupt_disable(intc, id);
204059c0:	fe842783          	lw	a5,-24(s0)
204059c4:	439c                	lw	a5,0(a5)
204059c6:	579c                	lw	a5,40(a5)
204059c8:	fc842583          	lw	a1,-56(s0)
204059cc:	fe842503          	lw	a0,-24(s0)
204059d0:	9782                	jalr	a5
204059d2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        }
    }

    return rc;
204059d6:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:187
}
204059da:	853e                	mv	a0,a5
204059dc:	50f2                	lw	ra,60(sp)
204059de:	5462                	lw	s0,56(sp)
204059e0:	6121                	addi	sp,sp,64
204059e2:	8082                	ret

204059e4 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:191

int __metal_driver_riscv_clint0_command_request (struct metal_interrupt *controller,
                                               int command, void *data)
{
204059e4:	7179                	addi	sp,sp,-48
204059e6:	d606                	sw	ra,44(sp)
204059e8:	d422                	sw	s0,40(sp)
204059ea:	1800                	addi	s0,sp,48
204059ec:	fca42e23          	sw	a0,-36(s0)
204059f0:	fcb42c23          	sw	a1,-40(s0)
204059f4:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:193
    int hartid;
    int rc = -1;
204059f8:	57fd                	li	a5,-1
204059fa:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
    struct __metal_driver_riscv_clint0 *clint =
204059fe:	fdc42783          	lw	a5,-36(s0)
20405a02:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(controller);
20405a06:	fdc42503          	lw	a0,-36(s0)
20405a0a:	a53ff0ef          	jal	ra,2040545c <__metal_driver_sifive_clint0_control_base>
20405a0e:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198

    switch (command) {
20405a12:	fd842703          	lw	a4,-40(s0)
20405a16:	4789                	li	a5,2
20405a18:	04f70963          	beq	a4,a5,20405a6a <__metal_driver_riscv_clint0_command_request+0x86>
20405a1c:	fd842703          	lw	a4,-40(s0)
20405a20:	4789                	li	a5,2
20405a22:	00e7c863          	blt	a5,a4,20405a32 <__metal_driver_riscv_clint0_command_request+0x4e>
20405a26:	fd842703          	lw	a4,-40(s0)
20405a2a:	4785                	li	a5,1
20405a2c:	00f70e63          	beq	a4,a5,20405a48 <__metal_driver_riscv_clint0_command_request+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
						    (hartid * 4)));
        }
        break;
    default:
	break;
20405a30:	a8f1                	j	20405b0c <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198
    switch (command) {
20405a32:	fd842703          	lw	a4,-40(s0)
20405a36:	478d                	li	a5,3
20405a38:	04f70d63          	beq	a4,a5,20405a92 <__metal_driver_riscv_clint0_command_request+0xae>
20405a3c:	fd842703          	lw	a4,-40(s0)
20405a40:	4791                	li	a5,4
20405a42:	08f70963          	beq	a4,a5,20405ad4 <__metal_driver_riscv_clint0_command_request+0xf0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
	break;
20405a46:	a0d9                	j	20405b0c <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:200
        if (data) {
20405a48:	fd442783          	lw	a5,-44(s0)
20405a4c:	cbcd                	beqz	a5,20405afe <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:201
	    *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20405a4e:	fe842503          	lw	a0,-24(s0)
20405a52:	ac9ff0ef          	jal	ra,2040551a <__metal_clint0_mtime_get>
20405a56:	87aa                	mv	a5,a0
20405a58:	882e                	mv	a6,a1
20405a5a:	fd442703          	lw	a4,-44(s0)
20405a5e:	c31c                	sw	a5,0(a4)
20405a60:	01072223          	sw	a6,4(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
            rc = 0;
20405a64:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20405a68:	a859                	j	20405afe <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:206
	if (data) {
20405a6a:	fd442783          	lw	a5,-44(s0)
20405a6e:	cbd1                	beqz	a5,20405b02 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
	    hartid = *(int *)data;
20405a70:	fd442783          	lw	a5,-44(s0)
20405a74:	439c                	lw	a5,0(a5)
20405a76:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405a7a:	fe042783          	lw	a5,-32(s0)
20405a7e:	078a                	slli	a5,a5,0x2
20405a80:	873e                	mv	a4,a5
20405a82:	fe442783          	lw	a5,-28(s0)
20405a86:	97ba                	add	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:209
					       (hartid * 4))) = METAL_DISABLE;
20405a88:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:210
            rc = 0;
20405a8c:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20405a90:	a88d                	j	20405b02 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
	if (data) {
20405a92:	fd442783          	lw	a5,-44(s0)
20405a96:	cba5                	beqz	a5,20405b06 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:215
	    hartid = *(int *)data;
20405a98:	fd442783          	lw	a5,-44(s0)
20405a9c:	439c                	lw	a5,0(a5)
20405a9e:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:216
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405aa2:	fe042783          	lw	a5,-32(s0)
20405aa6:	078a                	slli	a5,a5,0x2
20405aa8:	873e                	mv	a4,a5
20405aaa:	fe442783          	lw	a5,-28(s0)
20405aae:	97ba                	add	a5,a5,a4
20405ab0:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
					       (hartid * 4))) = METAL_ENABLE;
20405ab2:	4785                	li	a5,1
20405ab4:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
	    __METAL_IO_FENCE(o,i);
20405ab6:	0480000f          	fence	o,i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405aba:	fe042783          	lw	a5,-32(s0)
20405abe:	078a                	slli	a5,a5,0x2
20405ac0:	873e                	mv	a4,a5
20405ac2:	fe442783          	lw	a5,-28(s0)
20405ac6:	97ba                	add	a5,a5,a4
20405ac8:	439c                	lw	a5,0(a5)
20405aca:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
            rc = 0;
20405ace:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20405ad2:	a815                	j	20405b06 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:234
        rc = 0;
20405ad4:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
	if (data) {
20405ad8:	fd442783          	lw	a5,-44(s0)
20405adc:	c79d                	beqz	a5,20405b0a <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
	    hartid = *(int *)data;
20405ade:	fd442783          	lw	a5,-44(s0)
20405ae2:	439c                	lw	a5,0(a5)
20405ae4:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405ae8:	fe042783          	lw	a5,-32(s0)
20405aec:	078a                	slli	a5,a5,0x2
20405aee:	873e                	mv	a4,a5
20405af0:	fe442783          	lw	a5,-28(s0)
20405af4:	97ba                	add	a5,a5,a4
20405af6:	439c                	lw	a5,0(a5)
20405af8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20405afc:	a039                	j	20405b0a <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20405afe:	0001                	nop
20405b00:	a031                	j	20405b0c <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20405b02:	0001                	nop
20405b04:	a021                	j	20405b0c <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20405b06:	0001                	nop
20405b08:	a011                	j	20405b0c <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20405b0a:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:245
    }

    return rc;
20405b0c:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:246
}
20405b10:	853e                	mv	a0,a5
20405b12:	50b2                	lw	ra,44(sp)
20405b14:	5422                	lw	s0,40(sp)
20405b16:	6145                	addi	sp,sp,48
20405b18:	8082                	ret

20405b1a <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249

int __metal_driver_riscv_clint0_clear_interrupt (struct metal_interrupt *controller, int id)
{
20405b1a:	7179                	addi	sp,sp,-48
20405b1c:	d606                	sw	ra,44(sp)
20405b1e:	d422                	sw	s0,40(sp)
20405b20:	1800                	addi	s0,sp,48
20405b22:	fca42e23          	sw	a0,-36(s0)
20405b26:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:250
    int hartid = metal_cpu_get_current_hartid();
20405b2a:	5bb020ef          	jal	ra,204088e4 <metal_cpu_get_current_hartid>
20405b2e:	87aa                	mv	a5,a0
20405b30:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
    return __metal_driver_riscv_clint0_command_request(controller,
20405b34:	fec40793          	addi	a5,s0,-20
20405b38:	863e                	mv	a2,a5
20405b3a:	4589                	li	a1,2
20405b3c:	fdc42503          	lw	a0,-36(s0)
20405b40:	3555                	jal	204059e4 <__metal_driver_riscv_clint0_command_request>
20405b42:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
						METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20405b44:	853e                	mv	a0,a5
20405b46:	50b2                	lw	ra,44(sp)
20405b48:	5422                	lw	s0,40(sp)
20405b4a:	6145                	addi	sp,sp,48
20405b4c:	8082                	ret

20405b4e <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256

int __metal_driver_riscv_clint0_set_interrupt (struct metal_interrupt *controller, int id)
{
20405b4e:	7179                	addi	sp,sp,-48
20405b50:	d606                	sw	ra,44(sp)
20405b52:	d422                	sw	s0,40(sp)
20405b54:	1800                	addi	s0,sp,48
20405b56:	fca42e23          	sw	a0,-36(s0)
20405b5a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
    int hartid = metal_cpu_get_current_hartid();
20405b5e:	587020ef          	jal	ra,204088e4 <metal_cpu_get_current_hartid>
20405b62:	87aa                	mv	a5,a0
20405b64:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
    return __metal_driver_riscv_clint0_command_request(controller,
20405b68:	fec40793          	addi	a5,s0,-20
20405b6c:	863e                	mv	a2,a5
20405b6e:	458d                	li	a1,3
20405b70:	fdc42503          	lw	a0,-36(s0)
20405b74:	3d85                	jal	204059e4 <__metal_driver_riscv_clint0_command_request>
20405b76:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:260
						METAL_SOFTWARE_IPI_SET, &hartid);
}
20405b78:	853e                	mv	a0,a5
20405b7a:	50b2                	lw	ra,44(sp)
20405b7c:	5422                	lw	s0,40(sp)
20405b7e:	6145                	addi	sp,sp,48
20405b80:	8082                	ret

20405b82 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:195



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20405b82:	1101                	addi	sp,sp,-32
20405b84:	ce22                	sw	s0,28(sp)
20405b86:	1000                	addi	s0,sp,32
20405b88:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:196
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405b8c:	fec42703          	lw	a4,-20(s0)
20405b90:	81418793          	addi	a5,gp,-2028 # 8000077c <__metal_dt_cpu_0>
20405b94:	00f71463          	bne	a4,a5,20405b9c <__metal_driver_cpu_hartid+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:197
		return 0;
20405b98:	4781                	li	a5,0
20405b9a:	a011                	j	20405b9e <__metal_driver_cpu_hartid+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:200
	}
	else {
		return -1;
20405b9c:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:202
	}
}
20405b9e:	853e                	mv	a0,a5
20405ba0:	4472                	lw	s0,28(sp)
20405ba2:	6105                	addi	sp,sp,32
20405ba4:	8082                	ret

20405ba6 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:205

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20405ba6:	1101                	addi	sp,sp,-32
20405ba8:	ce22                	sw	s0,28(sp)
20405baa:	1000                	addi	s0,sp,32
20405bac:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:206
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405bb0:	fec42703          	lw	a4,-20(s0)
20405bb4:	81418793          	addi	a5,gp,-2028 # 8000077c <__metal_dt_cpu_0>
20405bb8:	00f71763          	bne	a4,a5,20405bc6 <__metal_driver_cpu_timebase+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:207
		return 1000000;
20405bbc:	000f47b7          	lui	a5,0xf4
20405bc0:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20405bc4:	a011                	j	20405bc8 <__metal_driver_cpu_timebase+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:210
	}
	else {
		return 0;
20405bc6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:212
	}
}
20405bc8:	853e                	mv	a0,a5
20405bca:	4472                	lw	s0,28(sp)
20405bcc:	6105                	addi	sp,sp,32
20405bce:	8082                	ret

20405bd0 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:215

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20405bd0:	1101                	addi	sp,sp,-32
20405bd2:	ce22                	sw	s0,28(sp)
20405bd4:	1000                	addi	s0,sp,32
20405bd6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:216
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405bda:	fec42703          	lw	a4,-20(s0)
20405bde:	81418793          	addi	a5,gp,-2028 # 8000077c <__metal_dt_cpu_0>
20405be2:	00f71763          	bne	a4,a5,20405bf0 <__metal_driver_cpu_interrupt_controller+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:217
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20405be6:	800007b7          	lui	a5,0x80000
20405bea:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe23c>
20405bee:	a011                	j	20405bf2 <__metal_driver_cpu_interrupt_controller+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:220
	}
	else {
		return NULL;
20405bf0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:222
	}
}
20405bf2:	853e                	mv	a0,a5
20405bf4:	4472                	lw	s0,28(sp)
20405bf6:	6105                	addi	sp,sp,32
20405bf8:	8082                	ret

20405bfa <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:14
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu, unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid)
{
20405bfa:	1101                	addi	sp,sp,-32
20405bfc:	ce22                	sw	s0,28(sp)
20405bfe:	1000                	addi	s0,sp,32
20405c00:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:15
    if (hartid < __METAL_DT_MAX_HARTS) {
20405c04:	fec42783          	lw	a5,-20(s0)
20405c08:	00f04c63          	bgtz	a5,20405c20 <__metal_driver_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:16
        return &(__metal_cpu_table[hartid]->cpu);
20405c0c:	800007b7          	lui	a5,0x80000
20405c10:	fec42703          	lw	a4,-20(s0)
20405c14:	070a                	slli	a4,a4,0x2
20405c16:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20405c1a:	97ba                	add	a5,a5,a4
20405c1c:	439c                	lw	a5,0(a5)
20405c1e:	a011                	j	20405c22 <__metal_driver_cpu_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:18
    }
    return (struct metal_cpu *)NULL;
20405c20:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:19
}
20405c22:	853e                	mv	a0,a5
20405c24:	4472                	lw	s0,28(sp)
20405c26:	6105                	addi	sp,sp,32
20405c28:	8082                	ret

20405c2a <__metal_myhart_id>:
__metal_myhart_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:22

uintptr_t __metal_myhart_id (void)
{
20405c2a:	1101                	addi	sp,sp,-32
20405c2c:	ce22                	sw	s0,28(sp)
20405c2e:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:24
    uintptr_t myhart;
    __asm__ volatile ("csrr %0, mhartid" : "=r"(myhart));
20405c30:	f14027f3          	csrr	a5,mhartid
20405c34:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
    return myhart;
20405c38:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
}
20405c3c:	853e                	mv	a0,a5
20405c3e:	4472                	lw	s0,28(sp)
20405c40:	6105                	addi	sp,sp,32
20405c42:	8082                	ret

20405c44 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
    for (ptr = base; ptr < (base + size); ptr++){
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable (void) {
20405c44:	1101                	addi	sp,sp,-32
20405c46:	ce22                	sw	s0,28(sp)
20405c48:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:38
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20405c4a:	47a1                	li	a5,8
20405c4c:	3007a7f3          	csrrs	a5,mstatus,a5
20405c50:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:39
}
20405c54:	0001                	nop
20405c56:	4472                	lw	s0,28(sp)
20405c58:	6105                	addi	sp,sp,32
20405c5a:	8082                	ret

20405c5c <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:41

void __metal_interrupt_global_disable (void) {
20405c5c:	1101                	addi	sp,sp,-32
20405c5e:	ce22                	sw	s0,28(sp)
20405c60:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:43
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20405c62:	47a1                	li	a5,8
20405c64:	3007b7f3          	csrrc	a5,mstatus,a5
20405c68:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:44
}
20405c6c:	0001                	nop
20405c6e:	4472                	lw	s0,28(sp)
20405c70:	6105                	addi	sp,sp,32
20405c72:	8082                	ret

20405c74 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:46

void __metal_interrupt_software_enable (void) {
20405c74:	1101                	addi	sp,sp,-32
20405c76:	ce22                	sw	s0,28(sp)
20405c78:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:48
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20405c7a:	47a1                	li	a5,8
20405c7c:	3047a7f3          	csrrs	a5,mie,a5
20405c80:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:49
}
20405c84:	0001                	nop
20405c86:	4472                	lw	s0,28(sp)
20405c88:	6105                	addi	sp,sp,32
20405c8a:	8082                	ret

20405c8c <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:51

void __metal_interrupt_software_disable (void) {
20405c8c:	1101                	addi	sp,sp,-32
20405c8e:	ce22                	sw	s0,28(sp)
20405c90:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:53
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20405c92:	47a1                	li	a5,8
20405c94:	3047b7f3          	csrrc	a5,mie,a5
20405c98:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
}
20405c9c:	0001                	nop
20405c9e:	4472                	lw	s0,28(sp)
20405ca0:	6105                	addi	sp,sp,32
20405ca2:	8082                	ret

20405ca4 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:56

void __metal_interrupt_timer_enable (void) {
20405ca4:	1101                	addi	sp,sp,-32
20405ca6:	ce22                	sw	s0,28(sp)
20405ca8:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:58
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20405caa:	08000793          	li	a5,128
20405cae:	3047a7f3          	csrrs	a5,mie,a5
20405cb2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59
}
20405cb6:	0001                	nop
20405cb8:	4472                	lw	s0,28(sp)
20405cba:	6105                	addi	sp,sp,32
20405cbc:	8082                	ret

20405cbe <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61

void __metal_interrupt_timer_disable (void) {
20405cbe:	1101                	addi	sp,sp,-32
20405cc0:	ce22                	sw	s0,28(sp)
20405cc2:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:63
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20405cc4:	08000793          	li	a5,128
20405cc8:	3047b7f3          	csrrc	a5,mie,a5
20405ccc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
}
20405cd0:	0001                	nop
20405cd2:	4472                	lw	s0,28(sp)
20405cd4:	6105                	addi	sp,sp,32
20405cd6:	8082                	ret

20405cd8 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_external_enable (void) {
20405cd8:	1101                	addi	sp,sp,-32
20405cda:	ce22                	sw	s0,28(sp)
20405cdc:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20405cde:	6785                	lui	a5,0x1
20405ce0:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20405ce4:	3047a7f3          	csrrs	a5,mie,a5
20405ce8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:69
}
20405cec:	0001                	nop
20405cee:	4472                	lw	s0,28(sp)
20405cf0:	6105                	addi	sp,sp,32
20405cf2:	8082                	ret

20405cf4 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71

void __metal_interrupt_external_disable (void) {
20405cf4:	1101                	addi	sp,sp,-32
20405cf6:	ce22                	sw	s0,28(sp)
20405cf8:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73
    unsigned long m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20405cfa:	6785                	lui	a5,0x1
20405cfc:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20405d00:	3047b7f3          	csrrc	a5,mie,a5
20405d04:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:74
}
20405d08:	0001                	nop
20405d0a:	4472                	lw	s0,28(sp)
20405d0c:	6105                	addi	sp,sp,32
20405d0e:	8082                	ret

20405d10 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:76

void __metal_interrupt_local_enable (int id) {
20405d10:	7179                	addi	sp,sp,-48
20405d12:	d622                	sw	s0,44(sp)
20405d14:	1800                	addi	s0,sp,48
20405d16:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:77
    uintptr_t b = 1 << id;
20405d1a:	fdc42783          	lw	a5,-36(s0)
20405d1e:	4705                	li	a4,1
20405d20:	00f717b3          	sll	a5,a4,a5
20405d24:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:79
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20405d28:	fec42783          	lw	a5,-20(s0)
20405d2c:	3047a7f3          	csrrs	a5,mie,a5
20405d30:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80
}
20405d34:	0001                	nop
20405d36:	5432                	lw	s0,44(sp)
20405d38:	6145                	addi	sp,sp,48
20405d3a:	8082                	ret

20405d3c <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82

void __metal_interrupt_local_disable (int id) {
20405d3c:	7179                	addi	sp,sp,-48
20405d3e:	d622                	sw	s0,44(sp)
20405d40:	1800                	addi	s0,sp,48
20405d42:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:83
    uintptr_t b = 1 << id;
20405d46:	fdc42783          	lw	a5,-36(s0)
20405d4a:	4705                	li	a4,1
20405d4c:	00f717b3          	sll	a5,a4,a5
20405d50:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20405d54:	fec42783          	lw	a5,-20(s0)
20405d58:	3047b7f3          	csrrc	a5,mie,a5
20405d5c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:86
}
20405d60:	0001                	nop
20405d62:	5432                	lw	s0,44(sp)
20405d64:	6145                	addi	sp,sp,48
20405d66:	8082                	ret

20405d68 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:88

void __metal_default_exception_handler (struct metal_cpu *cpu, int ecode) {
20405d68:	1101                	addi	sp,sp,-32
20405d6a:	ce06                	sw	ra,28(sp)
20405d6c:	cc22                	sw	s0,24(sp)
20405d6e:	1000                	addi	s0,sp,32
20405d70:	fea42623          	sw	a0,-20(s0)
20405d74:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    metal_shutdown(100);
20405d78:	06400513          	li	a0,100
20405d7c:	383020ef          	jal	ra,204088fe <metal_shutdown>

20405d80 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
}

void __metal_default_interrupt_handler (int id, void *priv) {
20405d80:	1101                	addi	sp,sp,-32
20405d82:	ce06                	sw	ra,28(sp)
20405d84:	cc22                	sw	s0,24(sp)
20405d86:	1000                	addi	s0,sp,32
20405d88:	fea42623          	sw	a0,-20(s0)
20405d8c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:93
    metal_shutdown(200);
20405d90:	0c800513          	li	a0,200
20405d94:	36b020ef          	jal	ra,204088fe <metal_shutdown>

20405d98 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:97
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler (void) {
20405d98:	715d                	addi	sp,sp,-80
20405d9a:	c686                	sw	ra,76(sp)
20405d9c:	c496                	sw	t0,72(sp)
20405d9e:	c29a                	sw	t1,68(sp)
20405da0:	c09e                	sw	t2,64(sp)
20405da2:	de22                	sw	s0,60(sp)
20405da4:	dc2a                	sw	a0,56(sp)
20405da6:	da2e                	sw	a1,52(sp)
20405da8:	d832                	sw	a2,48(sp)
20405daa:	d636                	sw	a3,44(sp)
20405dac:	d43a                	sw	a4,40(sp)
20405dae:	d23e                	sw	a5,36(sp)
20405db0:	d042                	sw	a6,32(sp)
20405db2:	ce46                	sw	a7,28(sp)
20405db4:	cc72                	sw	t3,24(sp)
20405db6:	ca76                	sw	t4,20(sp)
20405db8:	c87a                	sw	t5,16(sp)
20405dba:	c67e                	sw	t6,12(sp)
20405dbc:	0880                	addi	s0,sp,80
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:98
    metal_shutdown(300);
20405dbe:	12c00513          	li	a0,300
20405dc2:	33d020ef          	jal	ra,204088fe <metal_shutdown>

20405dc6 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_software_interrupt_vector_handler (void) {
20405dc6:	711d                	addi	sp,sp,-96
20405dc8:	ce86                	sw	ra,92(sp)
20405dca:	cc96                	sw	t0,88(sp)
20405dcc:	ca9a                	sw	t1,84(sp)
20405dce:	c89e                	sw	t2,80(sp)
20405dd0:	c6a2                	sw	s0,76(sp)
20405dd2:	c4aa                	sw	a0,72(sp)
20405dd4:	c2ae                	sw	a1,68(sp)
20405dd6:	c0b2                	sw	a2,64(sp)
20405dd8:	de36                	sw	a3,60(sp)
20405dda:	dc3a                	sw	a4,56(sp)
20405ddc:	da3e                	sw	a5,52(sp)
20405dde:	d842                	sw	a6,48(sp)
20405de0:	d646                	sw	a7,44(sp)
20405de2:	d472                	sw	t3,40(sp)
20405de4:	d276                	sw	t4,36(sp)
20405de6:	d07a                	sw	t5,32(sp)
20405de8:	ce7e                	sw	t6,28(sp)
20405dea:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405dec:	3d3d                	jal	20405c2a <__metal_myhart_id>
20405dee:	872a                	mv	a4,a0
20405df0:	800007b7          	lui	a5,0x80000
20405df4:	070a                	slli	a4,a4,0x2
20405df6:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20405dfa:	97ba                	add	a5,a5,a4
20405dfc:	439c                	lw	a5,0(a5)
20405dfe:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

    if ( cpu ) {
20405e02:	fac42783          	lw	a5,-84(s0)
20405e06:	c785                	beqz	a5,20405e2e <metal_software_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:109
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405e08:	fac42503          	lw	a0,-84(s0)
20405e0c:	33d1                	jal	20405bd0 <__metal_driver_cpu_interrupt_controller>
20405e0e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].exint_data;
20405e12:	fa842783          	lw	a5,-88(s0)
20405e16:	0e07a783          	lw	a5,224(a5)
20405e1a:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
        intc->metal_int_table[METAL_INTERRUPT_ID_SW].handler(METAL_INTERRUPT_ID_SW, priv);
20405e1e:	fa842783          	lw	a5,-88(s0)
20405e22:	0d87a783          	lw	a5,216(a5)
20405e26:	fa442583          	lw	a1,-92(s0)
20405e2a:	450d                	li	a0,3
20405e2c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113
    }
}
20405e2e:	0001                	nop
20405e30:	40f6                	lw	ra,92(sp)
20405e32:	42e6                	lw	t0,88(sp)
20405e34:	4356                	lw	t1,84(sp)
20405e36:	43c6                	lw	t2,80(sp)
20405e38:	4436                	lw	s0,76(sp)
20405e3a:	4526                	lw	a0,72(sp)
20405e3c:	4596                	lw	a1,68(sp)
20405e3e:	4606                	lw	a2,64(sp)
20405e40:	56f2                	lw	a3,60(sp)
20405e42:	5762                	lw	a4,56(sp)
20405e44:	57d2                	lw	a5,52(sp)
20405e46:	5842                	lw	a6,48(sp)
20405e48:	58b2                	lw	a7,44(sp)
20405e4a:	5e22                	lw	t3,40(sp)
20405e4c:	5e92                	lw	t4,36(sp)
20405e4e:	5f02                	lw	t5,32(sp)
20405e50:	4ff2                	lw	t6,28(sp)
20405e52:	6125                	addi	sp,sp,96
20405e54:	30200073          	mret

20405e58 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:115

void __metal_default_sw_handler (int id, void *priv) {
20405e58:	7179                	addi	sp,sp,-48
20405e5a:	d606                	sw	ra,44(sp)
20405e5c:	d422                	sw	s0,40(sp)
20405e5e:	1800                	addi	s0,sp,48
20405e60:	fca42e23          	sw	a0,-36(s0)
20405e64:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405e68:	33c9                	jal	20405c2a <__metal_myhart_id>
20405e6a:	872a                	mv	a4,a0
20405e6c:	800007b7          	lui	a5,0x80000
20405e70:	070a                	slli	a4,a4,0x2
20405e72:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20405e76:	97ba                	add	a5,a5,a4
20405e78:	439c                	lw	a5,0(a5)
20405e7a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:120

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
20405e7e:	342027f3          	csrr	a5,mcause
20405e82:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:121
    if ( cpu ) {
20405e86:	fec42783          	lw	a5,-20(s0)
20405e8a:	c795                	beqz	a5,20405eb6 <__metal_default_sw_handler+0x5e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405e8c:	fec42503          	lw	a0,-20(s0)
20405e90:	3381                	jal	20405bd0 <__metal_driver_cpu_interrupt_controller>
20405e92:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:124
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE]((struct metal_cpu *)cpu, id);
20405e96:	fe842783          	lw	a5,-24(s0)
20405e9a:	3ff7f793          	andi	a5,a5,1023
20405e9e:	fe442703          	lw	a4,-28(s0)
20405ea2:	0e078793          	addi	a5,a5,224
20405ea6:	078a                	slli	a5,a5,0x2
20405ea8:	97ba                	add	a5,a5,a4
20405eaa:	479c                	lw	a5,8(a5)
20405eac:	fdc42583          	lw	a1,-36(s0)
20405eb0:	fec42503          	lw	a0,-20(s0)
20405eb4:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:126
    }
}
20405eb6:	0001                	nop
20405eb8:	50b2                	lw	ra,44(sp)
20405eba:	5422                	lw	s0,40(sp)
20405ebc:	6145                	addi	sp,sp,48
20405ebe:	8082                	ret

20405ec0 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_timer_interrupt_vector_handler (void) {
20405ec0:	711d                	addi	sp,sp,-96
20405ec2:	ce86                	sw	ra,92(sp)
20405ec4:	cc96                	sw	t0,88(sp)
20405ec6:	ca9a                	sw	t1,84(sp)
20405ec8:	c89e                	sw	t2,80(sp)
20405eca:	c6a2                	sw	s0,76(sp)
20405ecc:	c4aa                	sw	a0,72(sp)
20405ece:	c2ae                	sw	a1,68(sp)
20405ed0:	c0b2                	sw	a2,64(sp)
20405ed2:	de36                	sw	a3,60(sp)
20405ed4:	dc3a                	sw	a4,56(sp)
20405ed6:	da3e                	sw	a5,52(sp)
20405ed8:	d842                	sw	a6,48(sp)
20405eda:	d646                	sw	a7,44(sp)
20405edc:	d472                	sw	t3,40(sp)
20405ede:	d276                	sw	t4,36(sp)
20405ee0:	d07a                	sw	t5,32(sp)
20405ee2:	ce7e                	sw	t6,28(sp)
20405ee4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405ee6:	3391                	jal	20405c2a <__metal_myhart_id>
20405ee8:	872a                	mv	a4,a0
20405eea:	800007b7          	lui	a5,0x80000
20405eee:	070a                	slli	a4,a4,0x2
20405ef0:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20405ef4:	97ba                	add	a5,a5,a4
20405ef6:	439c                	lw	a5,0(a5)
20405ef8:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:134

    if ( cpu ) {
20405efc:	fac42783          	lw	a5,-84(s0)
20405f00:	c785                	beqz	a5,20405f28 <metal_timer_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:136
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405f02:	fac42503          	lw	a0,-84(s0)
20405f06:	31e9                	jal	20405bd0 <__metal_driver_cpu_interrupt_controller>
20405f08:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].exint_data;
20405f0c:	fa842783          	lw	a5,-88(s0)
20405f10:	1407a783          	lw	a5,320(a5)
20405f14:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
        intc->metal_int_table[METAL_INTERRUPT_ID_TMR].handler(METAL_INTERRUPT_ID_TMR, priv);
20405f18:	fa842783          	lw	a5,-88(s0)
20405f1c:	1387a783          	lw	a5,312(a5)
20405f20:	fa442583          	lw	a1,-92(s0)
20405f24:	451d                	li	a0,7
20405f26:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
    }
}
20405f28:	0001                	nop
20405f2a:	40f6                	lw	ra,92(sp)
20405f2c:	42e6                	lw	t0,88(sp)
20405f2e:	4356                	lw	t1,84(sp)
20405f30:	43c6                	lw	t2,80(sp)
20405f32:	4436                	lw	s0,76(sp)
20405f34:	4526                	lw	a0,72(sp)
20405f36:	4596                	lw	a1,68(sp)
20405f38:	4606                	lw	a2,64(sp)
20405f3a:	56f2                	lw	a3,60(sp)
20405f3c:	5762                	lw	a4,56(sp)
20405f3e:	57d2                	lw	a5,52(sp)
20405f40:	5842                	lw	a6,48(sp)
20405f42:	58b2                	lw	a7,44(sp)
20405f44:	5e22                	lw	t3,40(sp)
20405f46:	5e92                	lw	t4,36(sp)
20405f48:	5f02                	lw	t5,32(sp)
20405f4a:	4ff2                	lw	t6,28(sp)
20405f4c:	6125                	addi	sp,sp,96
20405f4e:	30200073          	mret

20405f52 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:142

void __metal_default_timer_handler (int id, void *priv) {
20405f52:	7179                	addi	sp,sp,-48
20405f54:	d606                	sw	ra,44(sp)
20405f56:	d422                	sw	s0,40(sp)
20405f58:	1800                	addi	s0,sp,48
20405f5a:	fca42e23          	sw	a0,-36(s0)
20405f5e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:143
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20405f62:	31e1                	jal	20405c2a <__metal_myhart_id>
20405f64:	87aa                	mv	a5,a0
20405f66:	853e                	mv	a0,a5
20405f68:	3949                	jal	20405bfa <__metal_driver_cpu_get>
20405f6a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20405f6e:	fec42503          	lw	a0,-20(s0)
20405f72:	1c4010ef          	jal	ra,20407136 <__metal_driver_cpu_mtime_get>
20405f76:	fea42023          	sw	a0,-32(s0)
20405f7a:	feb42223          	sw	a1,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:147

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20405f7e:	fe042783          	lw	a5,-32(s0)
20405f82:	fe442803          	lw	a6,-28(s0)
20405f86:	45a9                	li	a1,10
20405f88:	4601                	li	a2,0
20405f8a:	00b786b3          	add	a3,a5,a1
20405f8e:	8536                	mv	a0,a3
20405f90:	00f53533          	sltu	a0,a0,a5
20405f94:	00c80733          	add	a4,a6,a2
20405f98:	00e507b3          	add	a5,a0,a4
20405f9c:	873e                	mv	a4,a5
20405f9e:	87b6                	mv	a5,a3
20405fa0:	883a                	mv	a6,a4
20405fa2:	85be                	mv	a1,a5
20405fa4:	8642                	mv	a2,a6
20405fa6:	fec42503          	lw	a0,-20(s0)
20405faa:	1f2010ef          	jal	ra,2040719c <__metal_driver_cpu_mtimecmp_set>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148
}
20405fae:	0001                	nop
20405fb0:	50b2                	lw	ra,44(sp)
20405fb2:	5422                	lw	s0,40(sp)
20405fb4:	6145                	addi	sp,sp,48
20405fb6:	8082                	ret
	...

20406000 <__metal_exception_handler>:
__metal_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:165
        intc->metal_int_table[METAL_INTERRUPT_ID_EXT].handler(METAL_INTERRUPT_ID_EXT, priv);
    }
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler (void) {
20406000:	7119                	addi	sp,sp,-128
20406002:	de86                	sw	ra,124(sp)
20406004:	dc96                	sw	t0,120(sp)
20406006:	da9a                	sw	t1,116(sp)
20406008:	d89e                	sw	t2,112(sp)
2040600a:	d6a2                	sw	s0,108(sp)
2040600c:	d4aa                	sw	a0,104(sp)
2040600e:	d2ae                	sw	a1,100(sp)
20406010:	d0b2                	sw	a2,96(sp)
20406012:	ceb6                	sw	a3,92(sp)
20406014:	ccba                	sw	a4,88(sp)
20406016:	cabe                	sw	a5,84(sp)
20406018:	c8c2                	sw	a6,80(sp)
2040601a:	c6c6                	sw	a7,76(sp)
2040601c:	c4f2                	sw	t3,72(sp)
2040601e:	c2f6                	sw	t4,68(sp)
20406020:	c0fa                	sw	t5,64(sp)
20406022:	de7e                	sw	t6,60(sp)
20406024:	0100                	addi	s0,sp,128
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:170
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406026:	c05ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
2040602a:	872a                	mv	a4,a0
2040602c:	800007b7          	lui	a5,0x80000
20406030:	070a                	slli	a4,a4,0x2
20406032:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20406036:	97ba                	add	a5,a5,a4
20406038:	439c                	lw	a5,0(a5)
2040603a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:172

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
2040603e:	342027f3          	csrr	a5,mcause
20406042:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:173
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
20406046:	341027f3          	csrr	a5,mepc
2040604a:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    __asm__ volatile ("csrr %0, mtval" : "=r"(mtval));
2040604e:	343027f3          	csrr	a5,mtval
20406052:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:175
    __asm__ volatile ("csrr %0, mtvec" : "=r"(mtvec));
20406056:	305027f3          	csrr	a5,mtvec
2040605a:	f8f42e23          	sw	a5,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177

    if ( cpu ) {
2040605e:	fac42783          	lw	a5,-84(s0)
20406062:	c7e9                	beqz	a5,2040612c <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406064:	fac42503          	lw	a0,-84(s0)
20406068:	b69ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
2040606c:	f8a42c23          	sw	a0,-104(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:180
        id = mcause & METAL_MCAUSE_CAUSE;
20406070:	fa842783          	lw	a5,-88(s0)
20406074:	3ff7f793          	andi	a5,a5,1023
20406078:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181
        if (mcause & METAL_MCAUSE_INTR) {
2040607c:	fa842783          	lw	a5,-88(s0)
20406080:	0807d863          	bgez	a5,20406110 <__metal_exception_handler+0x110>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20406084:	f9442703          	lw	a4,-108(s0)
20406088:	47ad                	li	a5,11
2040608a:	00e7d763          	bge	a5,a4,20406098 <__metal_exception_handler+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183 (discriminator 1)
               ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
2040608e:	f9c42783          	lw	a5,-100(s0)
20406092:	03f7f793          	andi	a5,a5,63
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20406096:	ef9d                	bnez	a5,204060d4 <__metal_exception_handler+0xd4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
                priv = intc->metal_int_table[id].exint_data;
20406098:	f9842683          	lw	a3,-104(s0)
2040609c:	f9442703          	lw	a4,-108(s0)
204060a0:	87ba                	mv	a5,a4
204060a2:	0786                	slli	a5,a5,0x1
204060a4:	97ba                	add	a5,a5,a4
204060a6:	078e                	slli	a5,a5,0x3
204060a8:	97b6                	add	a5,a5,a3
204060aa:	0987a783          	lw	a5,152(a5)
204060ae:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
                intc->metal_int_table[id].handler(id, priv);
204060b2:	f9842683          	lw	a3,-104(s0)
204060b6:	f9442703          	lw	a4,-108(s0)
204060ba:	87ba                	mv	a5,a4
204060bc:	0786                	slli	a5,a5,0x1
204060be:	97ba                	add	a5,a5,a4
204060c0:	078e                	slli	a5,a5,0x3
204060c2:	97b6                	add	a5,a5,a3
204060c4:	0907a783          	lw	a5,144(a5)
204060c8:	f8c42583          	lw	a1,-116(s0)
204060cc:	f9442503          	lw	a0,-108(s0)
204060d0:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
		return;
204060d2:	a8a9                	j	2040612c <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
204060d4:	f9c42783          	lw	a5,-100(s0)
204060d8:	03f7f713          	andi	a4,a5,63
204060dc:	4789                	li	a5,2
204060de:	04f71763          	bne	a4,a5,2040612c <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192
    		uintptr_t mtvt;
    		metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile ("csrr %0, 0x307" : "=r"(mtvt));
204060e2:	307027f3          	csrr	a5,mtvt
204060e6:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
               	priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204060ea:	f9842783          	lw	a5,-104(s0)
204060ee:	0dc7a783          	lw	a5,220(a5)
204060f2:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
               	mtvt_handler = (metal_interrupt_handler_t)*(uintptr_t *)mtvt;
204060f6:	f9042783          	lw	a5,-112(s0)
204060fa:	439c                	lw	a5,0(a5)
204060fc:	f8f42423          	sw	a5,-120(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
               	mtvt_handler(id, priv);
20406100:	f8842783          	lw	a5,-120(s0)
20406104:	f8c42583          	lw	a1,-116(s0)
20406108:	f9442503          	lw	a0,-108(s0)
2040610c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:196
		return;
2040610e:	a839                	j	2040612c <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:199
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20406110:	f9842703          	lw	a4,-104(s0)
20406114:	f9442783          	lw	a5,-108(s0)
20406118:	0e078793          	addi	a5,a5,224
2040611c:	078a                	slli	a5,a5,0x2
2040611e:	97ba                	add	a5,a5,a4
20406120:	479c                	lw	a5,8(a5)
20406122:	f9442583          	lw	a1,-108(s0)
20406126:	fac42503          	lw	a0,-84(s0)
2040612a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
        }
    }
}
2040612c:	50f6                	lw	ra,124(sp)
2040612e:	52e6                	lw	t0,120(sp)
20406130:	5356                	lw	t1,116(sp)
20406132:	53c6                	lw	t2,112(sp)
20406134:	5436                	lw	s0,108(sp)
20406136:	5526                	lw	a0,104(sp)
20406138:	5596                	lw	a1,100(sp)
2040613a:	5606                	lw	a2,96(sp)
2040613c:	46f6                	lw	a3,92(sp)
2040613e:	4766                	lw	a4,88(sp)
20406140:	47d6                	lw	a5,84(sp)
20406142:	4846                	lw	a6,80(sp)
20406144:	48b6                	lw	a7,76(sp)
20406146:	4e26                	lw	t3,72(sp)
20406148:	4e96                	lw	t4,68(sp)
2040614a:	4f06                	lw	t5,64(sp)
2040614c:	5ff2                	lw	t6,60(sp)
2040614e:	6109                	addi	sp,sp,128
20406150:	30200073          	mret
	...

2040617a <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler (void) {
2040617a:	711d                	addi	sp,sp,-96
2040617c:	ce86                	sw	ra,92(sp)
2040617e:	cc96                	sw	t0,88(sp)
20406180:	ca9a                	sw	t1,84(sp)
20406182:	c89e                	sw	t2,80(sp)
20406184:	c6a2                	sw	s0,76(sp)
20406186:	c4aa                	sw	a0,72(sp)
20406188:	c2ae                	sw	a1,68(sp)
2040618a:	c0b2                	sw	a2,64(sp)
2040618c:	de36                	sw	a3,60(sp)
2040618e:	dc3a                	sw	a4,56(sp)
20406190:	da3e                	sw	a5,52(sp)
20406192:	d842                	sw	a6,48(sp)
20406194:	d646                	sw	a7,44(sp)
20406196:	d472                	sw	t3,40(sp)
20406198:	d276                	sw	t4,36(sp)
2040619a:	d07a                	sw	t5,32(sp)
2040619c:	ce7e                	sw	t6,28(sp)
2040619e:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204061a0:	a8bff0ef          	jal	ra,20405c2a <__metal_myhart_id>
204061a4:	872a                	mv	a4,a0
204061a6:	800007b7          	lui	a5,0x80000
204061aa:	070a                	slli	a4,a4,0x2
204061ac:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
204061b0:	97ba                	add	a5,a5,a4
204061b2:	439c                	lw	a5,0(a5)
204061b4:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:210

    if ( cpu ) {
204061b8:	fac42783          	lw	a5,-84(s0)
204061bc:	c78d                	beqz	a5,204061e6 <metal_lc0_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:212
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204061be:	fac42503          	lw	a0,-84(s0)
204061c2:	a0fff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204061c6:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:213
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC0].exint_data;
204061ca:	fa842783          	lw	a5,-88(s0)
204061ce:	2187a783          	lw	a5,536(a5)
204061d2:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214
        intc->metal_int_table[METAL_INTERRUPT_ID_LC0].handler(METAL_INTERRUPT_ID_LC0, priv);
204061d6:	fa842783          	lw	a5,-88(s0)
204061da:	2107a783          	lw	a5,528(a5)
204061de:	fa442583          	lw	a1,-92(s0)
204061e2:	4541                	li	a0,16
204061e4:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
    }
}
204061e6:	0001                	nop
204061e8:	40f6                	lw	ra,92(sp)
204061ea:	42e6                	lw	t0,88(sp)
204061ec:	4356                	lw	t1,84(sp)
204061ee:	43c6                	lw	t2,80(sp)
204061f0:	4436                	lw	s0,76(sp)
204061f2:	4526                	lw	a0,72(sp)
204061f4:	4596                	lw	a1,68(sp)
204061f6:	4606                	lw	a2,64(sp)
204061f8:	56f2                	lw	a3,60(sp)
204061fa:	5762                	lw	a4,56(sp)
204061fc:	57d2                	lw	a5,52(sp)
204061fe:	5842                	lw	a6,48(sp)
20406200:	58b2                	lw	a7,44(sp)
20406202:	5e22                	lw	t3,40(sp)
20406204:	5e92                	lw	t4,36(sp)
20406206:	5f02                	lw	t5,32(sp)
20406208:	4ff2                	lw	t6,28(sp)
2040620a:	6125                	addi	sp,sp,96
2040620c:	30200073          	mret

20406210 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler (void) {
20406210:	711d                	addi	sp,sp,-96
20406212:	ce86                	sw	ra,92(sp)
20406214:	cc96                	sw	t0,88(sp)
20406216:	ca9a                	sw	t1,84(sp)
20406218:	c89e                	sw	t2,80(sp)
2040621a:	c6a2                	sw	s0,76(sp)
2040621c:	c4aa                	sw	a0,72(sp)
2040621e:	c2ae                	sw	a1,68(sp)
20406220:	c0b2                	sw	a2,64(sp)
20406222:	de36                	sw	a3,60(sp)
20406224:	dc3a                	sw	a4,56(sp)
20406226:	da3e                	sw	a5,52(sp)
20406228:	d842                	sw	a6,48(sp)
2040622a:	d646                	sw	a7,44(sp)
2040622c:	d472                	sw	t3,40(sp)
2040622e:	d276                	sw	t4,36(sp)
20406230:	d07a                	sw	t5,32(sp)
20406232:	ce7e                	sw	t6,28(sp)
20406234:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:222
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406236:	9f5ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
2040623a:	872a                	mv	a4,a0
2040623c:	800007b7          	lui	a5,0x80000
20406240:	070a                	slli	a4,a4,0x2
20406242:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20406246:	97ba                	add	a5,a5,a4
20406248:	439c                	lw	a5,0(a5)
2040624a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

    if ( cpu ) {
2040624e:	fac42783          	lw	a5,-84(s0)
20406252:	c78d                	beqz	a5,2040627c <metal_lc1_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406254:	fac42503          	lw	a0,-84(s0)
20406258:	979ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
2040625c:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:227
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC1].exint_data;
20406260:	fa842783          	lw	a5,-88(s0)
20406264:	2307a783          	lw	a5,560(a5)
20406268:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:228
        intc->metal_int_table[METAL_INTERRUPT_ID_LC1].handler(METAL_INTERRUPT_ID_LC1, priv);
2040626c:	fa842783          	lw	a5,-88(s0)
20406270:	2287a783          	lw	a5,552(a5)
20406274:	fa442583          	lw	a1,-92(s0)
20406278:	4545                	li	a0,17
2040627a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    }
}
2040627c:	0001                	nop
2040627e:	40f6                	lw	ra,92(sp)
20406280:	42e6                	lw	t0,88(sp)
20406282:	4356                	lw	t1,84(sp)
20406284:	43c6                	lw	t2,80(sp)
20406286:	4436                	lw	s0,76(sp)
20406288:	4526                	lw	a0,72(sp)
2040628a:	4596                	lw	a1,68(sp)
2040628c:	4606                	lw	a2,64(sp)
2040628e:	56f2                	lw	a3,60(sp)
20406290:	5762                	lw	a4,56(sp)
20406292:	57d2                	lw	a5,52(sp)
20406294:	5842                	lw	a6,48(sp)
20406296:	58b2                	lw	a7,44(sp)
20406298:	5e22                	lw	t3,40(sp)
2040629a:	5e92                	lw	t4,36(sp)
2040629c:	5f02                	lw	t5,32(sp)
2040629e:	4ff2                	lw	t6,28(sp)
204062a0:	6125                	addi	sp,sp,96
204062a2:	30200073          	mret

204062a6 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:233

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler (void) {
204062a6:	711d                	addi	sp,sp,-96
204062a8:	ce86                	sw	ra,92(sp)
204062aa:	cc96                	sw	t0,88(sp)
204062ac:	ca9a                	sw	t1,84(sp)
204062ae:	c89e                	sw	t2,80(sp)
204062b0:	c6a2                	sw	s0,76(sp)
204062b2:	c4aa                	sw	a0,72(sp)
204062b4:	c2ae                	sw	a1,68(sp)
204062b6:	c0b2                	sw	a2,64(sp)
204062b8:	de36                	sw	a3,60(sp)
204062ba:	dc3a                	sw	a4,56(sp)
204062bc:	da3e                	sw	a5,52(sp)
204062be:	d842                	sw	a6,48(sp)
204062c0:	d646                	sw	a7,44(sp)
204062c2:	d472                	sw	t3,40(sp)
204062c4:	d276                	sw	t4,36(sp)
204062c6:	d07a                	sw	t5,32(sp)
204062c8:	ce7e                	sw	t6,28(sp)
204062ca:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204062cc:	95fff0ef          	jal	ra,20405c2a <__metal_myhart_id>
204062d0:	872a                	mv	a4,a0
204062d2:	800007b7          	lui	a5,0x80000
204062d6:	070a                	slli	a4,a4,0x2
204062d8:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
204062dc:	97ba                	add	a5,a5,a4
204062de:	439c                	lw	a5,0(a5)
204062e0:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:238

    if ( cpu ) {
204062e4:	fac42783          	lw	a5,-84(s0)
204062e8:	c78d                	beqz	a5,20406312 <metal_lc2_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204062ea:	fac42503          	lw	a0,-84(s0)
204062ee:	8e3ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204062f2:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC2].exint_data;
204062f6:	fa842783          	lw	a5,-88(s0)
204062fa:	2487a783          	lw	a5,584(a5)
204062fe:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:242
        intc->metal_int_table[METAL_INTERRUPT_ID_LC2].handler(METAL_INTERRUPT_ID_LC2, priv);
20406302:	fa842783          	lw	a5,-88(s0)
20406306:	2407a783          	lw	a5,576(a5)
2040630a:	fa442583          	lw	a1,-92(s0)
2040630e:	4549                	li	a0,18
20406310:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244
    }
}
20406312:	0001                	nop
20406314:	40f6                	lw	ra,92(sp)
20406316:	42e6                	lw	t0,88(sp)
20406318:	4356                	lw	t1,84(sp)
2040631a:	43c6                	lw	t2,80(sp)
2040631c:	4436                	lw	s0,76(sp)
2040631e:	4526                	lw	a0,72(sp)
20406320:	4596                	lw	a1,68(sp)
20406322:	4606                	lw	a2,64(sp)
20406324:	56f2                	lw	a3,60(sp)
20406326:	5762                	lw	a4,56(sp)
20406328:	57d2                	lw	a5,52(sp)
2040632a:	5842                	lw	a6,48(sp)
2040632c:	58b2                	lw	a7,44(sp)
2040632e:	5e22                	lw	t3,40(sp)
20406330:	5e92                	lw	t4,36(sp)
20406332:	5f02                	lw	t5,32(sp)
20406334:	4ff2                	lw	t6,28(sp)
20406336:	6125                	addi	sp,sp,96
20406338:	30200073          	mret

2040633c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:247

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler (void) {
2040633c:	711d                	addi	sp,sp,-96
2040633e:	ce86                	sw	ra,92(sp)
20406340:	cc96                	sw	t0,88(sp)
20406342:	ca9a                	sw	t1,84(sp)
20406344:	c89e                	sw	t2,80(sp)
20406346:	c6a2                	sw	s0,76(sp)
20406348:	c4aa                	sw	a0,72(sp)
2040634a:	c2ae                	sw	a1,68(sp)
2040634c:	c0b2                	sw	a2,64(sp)
2040634e:	de36                	sw	a3,60(sp)
20406350:	dc3a                	sw	a4,56(sp)
20406352:	da3e                	sw	a5,52(sp)
20406354:	d842                	sw	a6,48(sp)
20406356:	d646                	sw	a7,44(sp)
20406358:	d472                	sw	t3,40(sp)
2040635a:	d276                	sw	t4,36(sp)
2040635c:	d07a                	sw	t5,32(sp)
2040635e:	ce7e                	sw	t6,28(sp)
20406360:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406362:	8c9ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
20406366:	872a                	mv	a4,a0
20406368:	800007b7          	lui	a5,0x80000
2040636c:	070a                	slli	a4,a4,0x2
2040636e:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20406372:	97ba                	add	a5,a5,a4
20406374:	439c                	lw	a5,0(a5)
20406376:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:252

    if ( cpu ) {
2040637a:	fac42783          	lw	a5,-84(s0)
2040637e:	c78d                	beqz	a5,204063a8 <metal_lc3_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406380:	fac42503          	lw	a0,-84(s0)
20406384:	84dff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
20406388:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC3].exint_data;
2040638c:	fa842783          	lw	a5,-88(s0)
20406390:	2607a783          	lw	a5,608(a5)
20406394:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
        intc->metal_int_table[METAL_INTERRUPT_ID_LC3].handler(METAL_INTERRUPT_ID_LC3, priv);
20406398:	fa842783          	lw	a5,-88(s0)
2040639c:	2587a783          	lw	a5,600(a5)
204063a0:	fa442583          	lw	a1,-92(s0)
204063a4:	454d                	li	a0,19
204063a6:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:258
    }
}
204063a8:	0001                	nop
204063aa:	40f6                	lw	ra,92(sp)
204063ac:	42e6                	lw	t0,88(sp)
204063ae:	4356                	lw	t1,84(sp)
204063b0:	43c6                	lw	t2,80(sp)
204063b2:	4436                	lw	s0,76(sp)
204063b4:	4526                	lw	a0,72(sp)
204063b6:	4596                	lw	a1,68(sp)
204063b8:	4606                	lw	a2,64(sp)
204063ba:	56f2                	lw	a3,60(sp)
204063bc:	5762                	lw	a4,56(sp)
204063be:	57d2                	lw	a5,52(sp)
204063c0:	5842                	lw	a6,48(sp)
204063c2:	58b2                	lw	a7,44(sp)
204063c4:	5e22                	lw	t3,40(sp)
204063c6:	5e92                	lw	t4,36(sp)
204063c8:	5f02                	lw	t5,32(sp)
204063ca:	4ff2                	lw	t6,28(sp)
204063cc:	6125                	addi	sp,sp,96
204063ce:	30200073          	mret

204063d2 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler (void) {
204063d2:	711d                	addi	sp,sp,-96
204063d4:	ce86                	sw	ra,92(sp)
204063d6:	cc96                	sw	t0,88(sp)
204063d8:	ca9a                	sw	t1,84(sp)
204063da:	c89e                	sw	t2,80(sp)
204063dc:	c6a2                	sw	s0,76(sp)
204063de:	c4aa                	sw	a0,72(sp)
204063e0:	c2ae                	sw	a1,68(sp)
204063e2:	c0b2                	sw	a2,64(sp)
204063e4:	de36                	sw	a3,60(sp)
204063e6:	dc3a                	sw	a4,56(sp)
204063e8:	da3e                	sw	a5,52(sp)
204063ea:	d842                	sw	a6,48(sp)
204063ec:	d646                	sw	a7,44(sp)
204063ee:	d472                	sw	t3,40(sp)
204063f0:	d276                	sw	t4,36(sp)
204063f2:	d07a                	sw	t5,32(sp)
204063f4:	ce7e                	sw	t6,28(sp)
204063f6:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:264
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204063f8:	833ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
204063fc:	872a                	mv	a4,a0
204063fe:	800007b7          	lui	a5,0x80000
20406402:	070a                	slli	a4,a4,0x2
20406404:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20406408:	97ba                	add	a5,a5,a4
2040640a:	439c                	lw	a5,0(a5)
2040640c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266

    if ( cpu ) {
20406410:	fac42783          	lw	a5,-84(s0)
20406414:	c78d                	beqz	a5,2040643e <metal_lc4_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:268
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406416:	fac42503          	lw	a0,-84(s0)
2040641a:	fb6ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
2040641e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:269
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC4].exint_data;
20406422:	fa842783          	lw	a5,-88(s0)
20406426:	2787a783          	lw	a5,632(a5)
2040642a:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:270
        intc->metal_int_table[METAL_INTERRUPT_ID_LC4].handler(METAL_INTERRUPT_ID_LC4, priv);
2040642e:	fa842783          	lw	a5,-88(s0)
20406432:	2707a783          	lw	a5,624(a5)
20406436:	fa442583          	lw	a1,-92(s0)
2040643a:	4551                	li	a0,20
2040643c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    }
}
2040643e:	0001                	nop
20406440:	40f6                	lw	ra,92(sp)
20406442:	42e6                	lw	t0,88(sp)
20406444:	4356                	lw	t1,84(sp)
20406446:	43c6                	lw	t2,80(sp)
20406448:	4436                	lw	s0,76(sp)
2040644a:	4526                	lw	a0,72(sp)
2040644c:	4596                	lw	a1,68(sp)
2040644e:	4606                	lw	a2,64(sp)
20406450:	56f2                	lw	a3,60(sp)
20406452:	5762                	lw	a4,56(sp)
20406454:	57d2                	lw	a5,52(sp)
20406456:	5842                	lw	a6,48(sp)
20406458:	58b2                	lw	a7,44(sp)
2040645a:	5e22                	lw	t3,40(sp)
2040645c:	5e92                	lw	t4,36(sp)
2040645e:	5f02                	lw	t5,32(sp)
20406460:	4ff2                	lw	t6,28(sp)
20406462:	6125                	addi	sp,sp,96
20406464:	30200073          	mret

20406468 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:275

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler (void) {
20406468:	711d                	addi	sp,sp,-96
2040646a:	ce86                	sw	ra,92(sp)
2040646c:	cc96                	sw	t0,88(sp)
2040646e:	ca9a                	sw	t1,84(sp)
20406470:	c89e                	sw	t2,80(sp)
20406472:	c6a2                	sw	s0,76(sp)
20406474:	c4aa                	sw	a0,72(sp)
20406476:	c2ae                	sw	a1,68(sp)
20406478:	c0b2                	sw	a2,64(sp)
2040647a:	de36                	sw	a3,60(sp)
2040647c:	dc3a                	sw	a4,56(sp)
2040647e:	da3e                	sw	a5,52(sp)
20406480:	d842                	sw	a6,48(sp)
20406482:	d646                	sw	a7,44(sp)
20406484:	d472                	sw	t3,40(sp)
20406486:	d276                	sw	t4,36(sp)
20406488:	d07a                	sw	t5,32(sp)
2040648a:	ce7e                	sw	t6,28(sp)
2040648c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040648e:	f9cff0ef          	jal	ra,20405c2a <__metal_myhart_id>
20406492:	872a                	mv	a4,a0
20406494:	800007b7          	lui	a5,0x80000
20406498:	070a                	slli	a4,a4,0x2
2040649a:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
2040649e:	97ba                	add	a5,a5,a4
204064a0:	439c                	lw	a5,0(a5)
204064a2:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:280

    if ( cpu ) {
204064a6:	fac42783          	lw	a5,-84(s0)
204064aa:	c78d                	beqz	a5,204064d4 <metal_lc5_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:282
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204064ac:	fac42503          	lw	a0,-84(s0)
204064b0:	f20ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204064b4:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC5].exint_data;
204064b8:	fa842783          	lw	a5,-88(s0)
204064bc:	2907a783          	lw	a5,656(a5)
204064c0:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
        intc->metal_int_table[METAL_INTERRUPT_ID_LC5].handler(METAL_INTERRUPT_ID_LC5, priv);
204064c4:	fa842783          	lw	a5,-88(s0)
204064c8:	2887a783          	lw	a5,648(a5)
204064cc:	fa442583          	lw	a1,-92(s0)
204064d0:	4555                	li	a0,21
204064d2:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:286
    }
}
204064d4:	0001                	nop
204064d6:	40f6                	lw	ra,92(sp)
204064d8:	42e6                	lw	t0,88(sp)
204064da:	4356                	lw	t1,84(sp)
204064dc:	43c6                	lw	t2,80(sp)
204064de:	4436                	lw	s0,76(sp)
204064e0:	4526                	lw	a0,72(sp)
204064e2:	4596                	lw	a1,68(sp)
204064e4:	4606                	lw	a2,64(sp)
204064e6:	56f2                	lw	a3,60(sp)
204064e8:	5762                	lw	a4,56(sp)
204064ea:	57d2                	lw	a5,52(sp)
204064ec:	5842                	lw	a6,48(sp)
204064ee:	58b2                	lw	a7,44(sp)
204064f0:	5e22                	lw	t3,40(sp)
204064f2:	5e92                	lw	t4,36(sp)
204064f4:	5f02                	lw	t5,32(sp)
204064f6:	4ff2                	lw	t6,28(sp)
204064f8:	6125                	addi	sp,sp,96
204064fa:	30200073          	mret

204064fe <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler (void) {
204064fe:	711d                	addi	sp,sp,-96
20406500:	ce86                	sw	ra,92(sp)
20406502:	cc96                	sw	t0,88(sp)
20406504:	ca9a                	sw	t1,84(sp)
20406506:	c89e                	sw	t2,80(sp)
20406508:	c6a2                	sw	s0,76(sp)
2040650a:	c4aa                	sw	a0,72(sp)
2040650c:	c2ae                	sw	a1,68(sp)
2040650e:	c0b2                	sw	a2,64(sp)
20406510:	de36                	sw	a3,60(sp)
20406512:	dc3a                	sw	a4,56(sp)
20406514:	da3e                	sw	a5,52(sp)
20406516:	d842                	sw	a6,48(sp)
20406518:	d646                	sw	a7,44(sp)
2040651a:	d472                	sw	t3,40(sp)
2040651c:	d276                	sw	t4,36(sp)
2040651e:	d07a                	sw	t5,32(sp)
20406520:	ce7e                	sw	t6,28(sp)
20406522:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:292
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406524:	f06ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
20406528:	872a                	mv	a4,a0
2040652a:	800007b7          	lui	a5,0x80000
2040652e:	070a                	slli	a4,a4,0x2
20406530:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20406534:	97ba                	add	a5,a5,a4
20406536:	439c                	lw	a5,0(a5)
20406538:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:294

    if ( cpu ) {
2040653c:	fac42783          	lw	a5,-84(s0)
20406540:	c78d                	beqz	a5,2040656a <metal_lc6_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406542:	fac42503          	lw	a0,-84(s0)
20406546:	e8aff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
2040654a:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC6].exint_data;
2040654e:	fa842783          	lw	a5,-88(s0)
20406552:	2a87a783          	lw	a5,680(a5)
20406556:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:298
        intc->metal_int_table[METAL_INTERRUPT_ID_LC6].handler(METAL_INTERRUPT_ID_LC6, priv);
2040655a:	fa842783          	lw	a5,-88(s0)
2040655e:	2a07a783          	lw	a5,672(a5)
20406562:	fa442583          	lw	a1,-92(s0)
20406566:	4559                	li	a0,22
20406568:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:300
    }
}
2040656a:	0001                	nop
2040656c:	40f6                	lw	ra,92(sp)
2040656e:	42e6                	lw	t0,88(sp)
20406570:	4356                	lw	t1,84(sp)
20406572:	43c6                	lw	t2,80(sp)
20406574:	4436                	lw	s0,76(sp)
20406576:	4526                	lw	a0,72(sp)
20406578:	4596                	lw	a1,68(sp)
2040657a:	4606                	lw	a2,64(sp)
2040657c:	56f2                	lw	a3,60(sp)
2040657e:	5762                	lw	a4,56(sp)
20406580:	57d2                	lw	a5,52(sp)
20406582:	5842                	lw	a6,48(sp)
20406584:	58b2                	lw	a7,44(sp)
20406586:	5e22                	lw	t3,40(sp)
20406588:	5e92                	lw	t4,36(sp)
2040658a:	5f02                	lw	t5,32(sp)
2040658c:	4ff2                	lw	t6,28(sp)
2040658e:	6125                	addi	sp,sp,96
20406590:	30200073          	mret

20406594 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler (void) {
20406594:	711d                	addi	sp,sp,-96
20406596:	ce86                	sw	ra,92(sp)
20406598:	cc96                	sw	t0,88(sp)
2040659a:	ca9a                	sw	t1,84(sp)
2040659c:	c89e                	sw	t2,80(sp)
2040659e:	c6a2                	sw	s0,76(sp)
204065a0:	c4aa                	sw	a0,72(sp)
204065a2:	c2ae                	sw	a1,68(sp)
204065a4:	c0b2                	sw	a2,64(sp)
204065a6:	de36                	sw	a3,60(sp)
204065a8:	dc3a                	sw	a4,56(sp)
204065aa:	da3e                	sw	a5,52(sp)
204065ac:	d842                	sw	a6,48(sp)
204065ae:	d646                	sw	a7,44(sp)
204065b0:	d472                	sw	t3,40(sp)
204065b2:	d276                	sw	t4,36(sp)
204065b4:	d07a                	sw	t5,32(sp)
204065b6:	ce7e                	sw	t6,28(sp)
204065b8:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:306
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204065ba:	e70ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
204065be:	872a                	mv	a4,a0
204065c0:	800007b7          	lui	a5,0x80000
204065c4:	070a                	slli	a4,a4,0x2
204065c6:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
204065ca:	97ba                	add	a5,a5,a4
204065cc:	439c                	lw	a5,0(a5)
204065ce:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:308

    if ( cpu ) {
204065d2:	fac42783          	lw	a5,-84(s0)
204065d6:	c78d                	beqz	a5,20406600 <metal_lc7_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:310
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204065d8:	fac42503          	lw	a0,-84(s0)
204065dc:	df4ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204065e0:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC7].exint_data;
204065e4:	fa842783          	lw	a5,-88(s0)
204065e8:	2c07a783          	lw	a5,704(a5)
204065ec:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:312
        intc->metal_int_table[METAL_INTERRUPT_ID_LC7].handler(METAL_INTERRUPT_ID_LC7, priv);
204065f0:	fa842783          	lw	a5,-88(s0)
204065f4:	2b87a783          	lw	a5,696(a5)
204065f8:	fa442583          	lw	a1,-92(s0)
204065fc:	455d                	li	a0,23
204065fe:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
    }
}
20406600:	0001                	nop
20406602:	40f6                	lw	ra,92(sp)
20406604:	42e6                	lw	t0,88(sp)
20406606:	4356                	lw	t1,84(sp)
20406608:	43c6                	lw	t2,80(sp)
2040660a:	4436                	lw	s0,76(sp)
2040660c:	4526                	lw	a0,72(sp)
2040660e:	4596                	lw	a1,68(sp)
20406610:	4606                	lw	a2,64(sp)
20406612:	56f2                	lw	a3,60(sp)
20406614:	5762                	lw	a4,56(sp)
20406616:	57d2                	lw	a5,52(sp)
20406618:	5842                	lw	a6,48(sp)
2040661a:	58b2                	lw	a7,44(sp)
2040661c:	5e22                	lw	t3,40(sp)
2040661e:	5e92                	lw	t4,36(sp)
20406620:	5f02                	lw	t5,32(sp)
20406622:	4ff2                	lw	t6,28(sp)
20406624:	6125                	addi	sp,sp,96
20406626:	30200073          	mret

2040662a <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler (void) {
2040662a:	711d                	addi	sp,sp,-96
2040662c:	ce86                	sw	ra,92(sp)
2040662e:	cc96                	sw	t0,88(sp)
20406630:	ca9a                	sw	t1,84(sp)
20406632:	c89e                	sw	t2,80(sp)
20406634:	c6a2                	sw	s0,76(sp)
20406636:	c4aa                	sw	a0,72(sp)
20406638:	c2ae                	sw	a1,68(sp)
2040663a:	c0b2                	sw	a2,64(sp)
2040663c:	de36                	sw	a3,60(sp)
2040663e:	dc3a                	sw	a4,56(sp)
20406640:	da3e                	sw	a5,52(sp)
20406642:	d842                	sw	a6,48(sp)
20406644:	d646                	sw	a7,44(sp)
20406646:	d472                	sw	t3,40(sp)
20406648:	d276                	sw	t4,36(sp)
2040664a:	d07a                	sw	t5,32(sp)
2040664c:	ce7e                	sw	t6,28(sp)
2040664e:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406650:	ddaff0ef          	jal	ra,20405c2a <__metal_myhart_id>
20406654:	872a                	mv	a4,a0
20406656:	800007b7          	lui	a5,0x80000
2040665a:	070a                	slli	a4,a4,0x2
2040665c:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20406660:	97ba                	add	a5,a5,a4
20406662:	439c                	lw	a5,0(a5)
20406664:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322

    if ( cpu ) {
20406668:	fac42783          	lw	a5,-84(s0)
2040666c:	c78d                	beqz	a5,20406696 <metal_lc8_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040666e:	fac42503          	lw	a0,-84(s0)
20406672:	d5eff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
20406676:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:325
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC8].exint_data;
2040667a:	fa842783          	lw	a5,-88(s0)
2040667e:	2d87a783          	lw	a5,728(a5)
20406682:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:326
        intc->metal_int_table[METAL_INTERRUPT_ID_LC8].handler(METAL_INTERRUPT_ID_LC8, priv);
20406686:	fa842783          	lw	a5,-88(s0)
2040668a:	2d07a783          	lw	a5,720(a5)
2040668e:	fa442583          	lw	a1,-92(s0)
20406692:	4561                	li	a0,24
20406694:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
    }
}
20406696:	0001                	nop
20406698:	40f6                	lw	ra,92(sp)
2040669a:	42e6                	lw	t0,88(sp)
2040669c:	4356                	lw	t1,84(sp)
2040669e:	43c6                	lw	t2,80(sp)
204066a0:	4436                	lw	s0,76(sp)
204066a2:	4526                	lw	a0,72(sp)
204066a4:	4596                	lw	a1,68(sp)
204066a6:	4606                	lw	a2,64(sp)
204066a8:	56f2                	lw	a3,60(sp)
204066aa:	5762                	lw	a4,56(sp)
204066ac:	57d2                	lw	a5,52(sp)
204066ae:	5842                	lw	a6,48(sp)
204066b0:	58b2                	lw	a7,44(sp)
204066b2:	5e22                	lw	t3,40(sp)
204066b4:	5e92                	lw	t4,36(sp)
204066b6:	5f02                	lw	t5,32(sp)
204066b8:	4ff2                	lw	t6,28(sp)
204066ba:	6125                	addi	sp,sp,96
204066bc:	30200073          	mret

204066c0 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler (void) {
204066c0:	711d                	addi	sp,sp,-96
204066c2:	ce86                	sw	ra,92(sp)
204066c4:	cc96                	sw	t0,88(sp)
204066c6:	ca9a                	sw	t1,84(sp)
204066c8:	c89e                	sw	t2,80(sp)
204066ca:	c6a2                	sw	s0,76(sp)
204066cc:	c4aa                	sw	a0,72(sp)
204066ce:	c2ae                	sw	a1,68(sp)
204066d0:	c0b2                	sw	a2,64(sp)
204066d2:	de36                	sw	a3,60(sp)
204066d4:	dc3a                	sw	a4,56(sp)
204066d6:	da3e                	sw	a5,52(sp)
204066d8:	d842                	sw	a6,48(sp)
204066da:	d646                	sw	a7,44(sp)
204066dc:	d472                	sw	t3,40(sp)
204066de:	d276                	sw	t4,36(sp)
204066e0:	d07a                	sw	t5,32(sp)
204066e2:	ce7e                	sw	t6,28(sp)
204066e4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204066e6:	d44ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
204066ea:	872a                	mv	a4,a0
204066ec:	800007b7          	lui	a5,0x80000
204066f0:	070a                	slli	a4,a4,0x2
204066f2:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
204066f6:	97ba                	add	a5,a5,a4
204066f8:	439c                	lw	a5,0(a5)
204066fa:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336

    if ( cpu ) {
204066fe:	fac42783          	lw	a5,-84(s0)
20406702:	c78d                	beqz	a5,2040672c <metal_lc9_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406704:	fac42503          	lw	a0,-84(s0)
20406708:	cc8ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
2040670c:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:339
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC9].exint_data;
20406710:	fa842783          	lw	a5,-88(s0)
20406714:	2f07a783          	lw	a5,752(a5)
20406718:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        intc->metal_int_table[METAL_INTERRUPT_ID_LC9].handler(METAL_INTERRUPT_ID_LC9, priv);
2040671c:	fa842783          	lw	a5,-88(s0)
20406720:	2e87a783          	lw	a5,744(a5)
20406724:	fa442583          	lw	a1,-92(s0)
20406728:	4565                	li	a0,25
2040672a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
    }
}
2040672c:	0001                	nop
2040672e:	40f6                	lw	ra,92(sp)
20406730:	42e6                	lw	t0,88(sp)
20406732:	4356                	lw	t1,84(sp)
20406734:	43c6                	lw	t2,80(sp)
20406736:	4436                	lw	s0,76(sp)
20406738:	4526                	lw	a0,72(sp)
2040673a:	4596                	lw	a1,68(sp)
2040673c:	4606                	lw	a2,64(sp)
2040673e:	56f2                	lw	a3,60(sp)
20406740:	5762                	lw	a4,56(sp)
20406742:	57d2                	lw	a5,52(sp)
20406744:	5842                	lw	a6,48(sp)
20406746:	58b2                	lw	a7,44(sp)
20406748:	5e22                	lw	t3,40(sp)
2040674a:	5e92                	lw	t4,36(sp)
2040674c:	5f02                	lw	t5,32(sp)
2040674e:	4ff2                	lw	t6,28(sp)
20406750:	6125                	addi	sp,sp,96
20406752:	30200073          	mret

20406756 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:345

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc10_interrupt_vector_handler (void) {
20406756:	711d                	addi	sp,sp,-96
20406758:	ce86                	sw	ra,92(sp)
2040675a:	cc96                	sw	t0,88(sp)
2040675c:	ca9a                	sw	t1,84(sp)
2040675e:	c89e                	sw	t2,80(sp)
20406760:	c6a2                	sw	s0,76(sp)
20406762:	c4aa                	sw	a0,72(sp)
20406764:	c2ae                	sw	a1,68(sp)
20406766:	c0b2                	sw	a2,64(sp)
20406768:	de36                	sw	a3,60(sp)
2040676a:	dc3a                	sw	a4,56(sp)
2040676c:	da3e                	sw	a5,52(sp)
2040676e:	d842                	sw	a6,48(sp)
20406770:	d646                	sw	a7,44(sp)
20406772:	d472                	sw	t3,40(sp)
20406774:	d276                	sw	t4,36(sp)
20406776:	d07a                	sw	t5,32(sp)
20406778:	ce7e                	sw	t6,28(sp)
2040677a:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:348
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040677c:	caeff0ef          	jal	ra,20405c2a <__metal_myhart_id>
20406780:	872a                	mv	a4,a0
20406782:	800007b7          	lui	a5,0x80000
20406786:	070a                	slli	a4,a4,0x2
20406788:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
2040678c:	97ba                	add	a5,a5,a4
2040678e:	439c                	lw	a5,0(a5)
20406790:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:350

    if ( cpu ) {
20406794:	fac42783          	lw	a5,-84(s0)
20406798:	c78d                	beqz	a5,204067c2 <metal_lc10_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:352
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040679a:	fac42503          	lw	a0,-84(s0)
2040679e:	c32ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204067a2:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:353
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC10].exint_data;
204067a6:	fa842783          	lw	a5,-88(s0)
204067aa:	3087a783          	lw	a5,776(a5)
204067ae:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:354
        intc->metal_int_table[METAL_INTERRUPT_ID_LC10].handler(METAL_INTERRUPT_ID_LC10, priv);
204067b2:	fa842783          	lw	a5,-88(s0)
204067b6:	3007a783          	lw	a5,768(a5)
204067ba:	fa442583          	lw	a1,-92(s0)
204067be:	4569                	li	a0,26
204067c0:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:356
    }
}
204067c2:	0001                	nop
204067c4:	40f6                	lw	ra,92(sp)
204067c6:	42e6                	lw	t0,88(sp)
204067c8:	4356                	lw	t1,84(sp)
204067ca:	43c6                	lw	t2,80(sp)
204067cc:	4436                	lw	s0,76(sp)
204067ce:	4526                	lw	a0,72(sp)
204067d0:	4596                	lw	a1,68(sp)
204067d2:	4606                	lw	a2,64(sp)
204067d4:	56f2                	lw	a3,60(sp)
204067d6:	5762                	lw	a4,56(sp)
204067d8:	57d2                	lw	a5,52(sp)
204067da:	5842                	lw	a6,48(sp)
204067dc:	58b2                	lw	a7,44(sp)
204067de:	5e22                	lw	t3,40(sp)
204067e0:	5e92                	lw	t4,36(sp)
204067e2:	5f02                	lw	t5,32(sp)
204067e4:	4ff2                	lw	t6,28(sp)
204067e6:	6125                	addi	sp,sp,96
204067e8:	30200073          	mret

204067ec <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:359

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc11_interrupt_vector_handler (void) {
204067ec:	711d                	addi	sp,sp,-96
204067ee:	ce86                	sw	ra,92(sp)
204067f0:	cc96                	sw	t0,88(sp)
204067f2:	ca9a                	sw	t1,84(sp)
204067f4:	c89e                	sw	t2,80(sp)
204067f6:	c6a2                	sw	s0,76(sp)
204067f8:	c4aa                	sw	a0,72(sp)
204067fa:	c2ae                	sw	a1,68(sp)
204067fc:	c0b2                	sw	a2,64(sp)
204067fe:	de36                	sw	a3,60(sp)
20406800:	dc3a                	sw	a4,56(sp)
20406802:	da3e                	sw	a5,52(sp)
20406804:	d842                	sw	a6,48(sp)
20406806:	d646                	sw	a7,44(sp)
20406808:	d472                	sw	t3,40(sp)
2040680a:	d276                	sw	t4,36(sp)
2040680c:	d07a                	sw	t5,32(sp)
2040680e:	ce7e                	sw	t6,28(sp)
20406810:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:362
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406812:	c18ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
20406816:	872a                	mv	a4,a0
20406818:	800007b7          	lui	a5,0x80000
2040681c:	070a                	slli	a4,a4,0x2
2040681e:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20406822:	97ba                	add	a5,a5,a4
20406824:	439c                	lw	a5,0(a5)
20406826:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:364

    if ( cpu ) {
2040682a:	fac42783          	lw	a5,-84(s0)
2040682e:	c78d                	beqz	a5,20406858 <metal_lc11_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:366
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406830:	fac42503          	lw	a0,-84(s0)
20406834:	b9cff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
20406838:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:367
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC11].exint_data;
2040683c:	fa842783          	lw	a5,-88(s0)
20406840:	3207a783          	lw	a5,800(a5)
20406844:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        intc->metal_int_table[METAL_INTERRUPT_ID_LC11].handler(METAL_INTERRUPT_ID_LC11, priv);
20406848:	fa842783          	lw	a5,-88(s0)
2040684c:	3187a783          	lw	a5,792(a5)
20406850:	fa442583          	lw	a1,-92(s0)
20406854:	456d                	li	a0,27
20406856:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    }
}
20406858:	0001                	nop
2040685a:	40f6                	lw	ra,92(sp)
2040685c:	42e6                	lw	t0,88(sp)
2040685e:	4356                	lw	t1,84(sp)
20406860:	43c6                	lw	t2,80(sp)
20406862:	4436                	lw	s0,76(sp)
20406864:	4526                	lw	a0,72(sp)
20406866:	4596                	lw	a1,68(sp)
20406868:	4606                	lw	a2,64(sp)
2040686a:	56f2                	lw	a3,60(sp)
2040686c:	5762                	lw	a4,56(sp)
2040686e:	57d2                	lw	a5,52(sp)
20406870:	5842                	lw	a6,48(sp)
20406872:	58b2                	lw	a7,44(sp)
20406874:	5e22                	lw	t3,40(sp)
20406876:	5e92                	lw	t4,36(sp)
20406878:	5f02                	lw	t5,32(sp)
2040687a:	4ff2                	lw	t6,28(sp)
2040687c:	6125                	addi	sp,sp,96
2040687e:	30200073          	mret

20406882 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc12_interrupt_vector_handler (void) {
20406882:	711d                	addi	sp,sp,-96
20406884:	ce86                	sw	ra,92(sp)
20406886:	cc96                	sw	t0,88(sp)
20406888:	ca9a                	sw	t1,84(sp)
2040688a:	c89e                	sw	t2,80(sp)
2040688c:	c6a2                	sw	s0,76(sp)
2040688e:	c4aa                	sw	a0,72(sp)
20406890:	c2ae                	sw	a1,68(sp)
20406892:	c0b2                	sw	a2,64(sp)
20406894:	de36                	sw	a3,60(sp)
20406896:	dc3a                	sw	a4,56(sp)
20406898:	da3e                	sw	a5,52(sp)
2040689a:	d842                	sw	a6,48(sp)
2040689c:	d646                	sw	a7,44(sp)
2040689e:	d472                	sw	t3,40(sp)
204068a0:	d276                	sw	t4,36(sp)
204068a2:	d07a                	sw	t5,32(sp)
204068a4:	ce7e                	sw	t6,28(sp)
204068a6:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:376
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204068a8:	b82ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
204068ac:	872a                	mv	a4,a0
204068ae:	800007b7          	lui	a5,0x80000
204068b2:	070a                	slli	a4,a4,0x2
204068b4:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
204068b8:	97ba                	add	a5,a5,a4
204068ba:	439c                	lw	a5,0(a5)
204068bc:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378

    if ( cpu ) {
204068c0:	fac42783          	lw	a5,-84(s0)
204068c4:	c78d                	beqz	a5,204068ee <metal_lc12_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204068c6:	fac42503          	lw	a0,-84(s0)
204068ca:	b06ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204068ce:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC12].exint_data;
204068d2:	fa842783          	lw	a5,-88(s0)
204068d6:	3387a783          	lw	a5,824(a5)
204068da:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:382
        intc->metal_int_table[METAL_INTERRUPT_ID_LC12].handler(METAL_INTERRUPT_ID_LC12, priv);
204068de:	fa842783          	lw	a5,-88(s0)
204068e2:	3307a783          	lw	a5,816(a5)
204068e6:	fa442583          	lw	a1,-92(s0)
204068ea:	4571                	li	a0,28
204068ec:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }
}
204068ee:	0001                	nop
204068f0:	40f6                	lw	ra,92(sp)
204068f2:	42e6                	lw	t0,88(sp)
204068f4:	4356                	lw	t1,84(sp)
204068f6:	43c6                	lw	t2,80(sp)
204068f8:	4436                	lw	s0,76(sp)
204068fa:	4526                	lw	a0,72(sp)
204068fc:	4596                	lw	a1,68(sp)
204068fe:	4606                	lw	a2,64(sp)
20406900:	56f2                	lw	a3,60(sp)
20406902:	5762                	lw	a4,56(sp)
20406904:	57d2                	lw	a5,52(sp)
20406906:	5842                	lw	a6,48(sp)
20406908:	58b2                	lw	a7,44(sp)
2040690a:	5e22                	lw	t3,40(sp)
2040690c:	5e92                	lw	t4,36(sp)
2040690e:	5f02                	lw	t5,32(sp)
20406910:	4ff2                	lw	t6,28(sp)
20406912:	6125                	addi	sp,sp,96
20406914:	30200073          	mret

20406918 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc13_interrupt_vector_handler (void) {
20406918:	711d                	addi	sp,sp,-96
2040691a:	ce86                	sw	ra,92(sp)
2040691c:	cc96                	sw	t0,88(sp)
2040691e:	ca9a                	sw	t1,84(sp)
20406920:	c89e                	sw	t2,80(sp)
20406922:	c6a2                	sw	s0,76(sp)
20406924:	c4aa                	sw	a0,72(sp)
20406926:	c2ae                	sw	a1,68(sp)
20406928:	c0b2                	sw	a2,64(sp)
2040692a:	de36                	sw	a3,60(sp)
2040692c:	dc3a                	sw	a4,56(sp)
2040692e:	da3e                	sw	a5,52(sp)
20406930:	d842                	sw	a6,48(sp)
20406932:	d646                	sw	a7,44(sp)
20406934:	d472                	sw	t3,40(sp)
20406936:	d276                	sw	t4,36(sp)
20406938:	d07a                	sw	t5,32(sp)
2040693a:	ce7e                	sw	t6,28(sp)
2040693c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:390
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040693e:	aecff0ef          	jal	ra,20405c2a <__metal_myhart_id>
20406942:	872a                	mv	a4,a0
20406944:	800007b7          	lui	a5,0x80000
20406948:	070a                	slli	a4,a4,0x2
2040694a:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
2040694e:	97ba                	add	a5,a5,a4
20406950:	439c                	lw	a5,0(a5)
20406952:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:392

    if ( cpu ) {
20406956:	fac42783          	lw	a5,-84(s0)
2040695a:	c78d                	beqz	a5,20406984 <metal_lc13_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040695c:	fac42503          	lw	a0,-84(s0)
20406960:	a70ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
20406964:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:395
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC13].exint_data;
20406968:	fa842783          	lw	a5,-88(s0)
2040696c:	3507a783          	lw	a5,848(a5)
20406970:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
        intc->metal_int_table[METAL_INTERRUPT_ID_LC13].handler(METAL_INTERRUPT_ID_LC13, priv);
20406974:	fa842783          	lw	a5,-88(s0)
20406978:	3487a783          	lw	a5,840(a5)
2040697c:	fa442583          	lw	a1,-92(s0)
20406980:	4575                	li	a0,29
20406982:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
    }
}
20406984:	0001                	nop
20406986:	40f6                	lw	ra,92(sp)
20406988:	42e6                	lw	t0,88(sp)
2040698a:	4356                	lw	t1,84(sp)
2040698c:	43c6                	lw	t2,80(sp)
2040698e:	4436                	lw	s0,76(sp)
20406990:	4526                	lw	a0,72(sp)
20406992:	4596                	lw	a1,68(sp)
20406994:	4606                	lw	a2,64(sp)
20406996:	56f2                	lw	a3,60(sp)
20406998:	5762                	lw	a4,56(sp)
2040699a:	57d2                	lw	a5,52(sp)
2040699c:	5842                	lw	a6,48(sp)
2040699e:	58b2                	lw	a7,44(sp)
204069a0:	5e22                	lw	t3,40(sp)
204069a2:	5e92                	lw	t4,36(sp)
204069a4:	5f02                	lw	t5,32(sp)
204069a6:	4ff2                	lw	t6,28(sp)
204069a8:	6125                	addi	sp,sp,96
204069aa:	30200073          	mret

204069ae <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc14_interrupt_vector_handler (void) {
204069ae:	711d                	addi	sp,sp,-96
204069b0:	ce86                	sw	ra,92(sp)
204069b2:	cc96                	sw	t0,88(sp)
204069b4:	ca9a                	sw	t1,84(sp)
204069b6:	c89e                	sw	t2,80(sp)
204069b8:	c6a2                	sw	s0,76(sp)
204069ba:	c4aa                	sw	a0,72(sp)
204069bc:	c2ae                	sw	a1,68(sp)
204069be:	c0b2                	sw	a2,64(sp)
204069c0:	de36                	sw	a3,60(sp)
204069c2:	dc3a                	sw	a4,56(sp)
204069c4:	da3e                	sw	a5,52(sp)
204069c6:	d842                	sw	a6,48(sp)
204069c8:	d646                	sw	a7,44(sp)
204069ca:	d472                	sw	t3,40(sp)
204069cc:	d276                	sw	t4,36(sp)
204069ce:	d07a                	sw	t5,32(sp)
204069d0:	ce7e                	sw	t6,28(sp)
204069d2:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:404
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204069d4:	a56ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
204069d8:	872a                	mv	a4,a0
204069da:	800007b7          	lui	a5,0x80000
204069de:	070a                	slli	a4,a4,0x2
204069e0:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
204069e4:	97ba                	add	a5,a5,a4
204069e6:	439c                	lw	a5,0(a5)
204069e8:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:406

    if ( cpu ) {
204069ec:	fac42783          	lw	a5,-84(s0)
204069f0:	c78d                	beqz	a5,20406a1a <metal_lc14_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204069f2:	fac42503          	lw	a0,-84(s0)
204069f6:	9daff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204069fa:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:409
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC14].exint_data;
204069fe:	fa842783          	lw	a5,-88(s0)
20406a02:	3687a783          	lw	a5,872(a5)
20406a06:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
        intc->metal_int_table[METAL_INTERRUPT_ID_LC14].handler(METAL_INTERRUPT_ID_LC14, priv);
20406a0a:	fa842783          	lw	a5,-88(s0)
20406a0e:	3607a783          	lw	a5,864(a5)
20406a12:	fa442583          	lw	a1,-92(s0)
20406a16:	4579                	li	a0,30
20406a18:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
    }
}
20406a1a:	0001                	nop
20406a1c:	40f6                	lw	ra,92(sp)
20406a1e:	42e6                	lw	t0,88(sp)
20406a20:	4356                	lw	t1,84(sp)
20406a22:	43c6                	lw	t2,80(sp)
20406a24:	4436                	lw	s0,76(sp)
20406a26:	4526                	lw	a0,72(sp)
20406a28:	4596                	lw	a1,68(sp)
20406a2a:	4606                	lw	a2,64(sp)
20406a2c:	56f2                	lw	a3,60(sp)
20406a2e:	5762                	lw	a4,56(sp)
20406a30:	57d2                	lw	a5,52(sp)
20406a32:	5842                	lw	a6,48(sp)
20406a34:	58b2                	lw	a7,44(sp)
20406a36:	5e22                	lw	t3,40(sp)
20406a38:	5e92                	lw	t4,36(sp)
20406a3a:	5f02                	lw	t5,32(sp)
20406a3c:	4ff2                	lw	t6,28(sp)
20406a3e:	6125                	addi	sp,sp,96
20406a40:	30200073          	mret

20406a44 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:415

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc15_interrupt_vector_handler (void) {
20406a44:	711d                	addi	sp,sp,-96
20406a46:	ce86                	sw	ra,92(sp)
20406a48:	cc96                	sw	t0,88(sp)
20406a4a:	ca9a                	sw	t1,84(sp)
20406a4c:	c89e                	sw	t2,80(sp)
20406a4e:	c6a2                	sw	s0,76(sp)
20406a50:	c4aa                	sw	a0,72(sp)
20406a52:	c2ae                	sw	a1,68(sp)
20406a54:	c0b2                	sw	a2,64(sp)
20406a56:	de36                	sw	a3,60(sp)
20406a58:	dc3a                	sw	a4,56(sp)
20406a5a:	da3e                	sw	a5,52(sp)
20406a5c:	d842                	sw	a6,48(sp)
20406a5e:	d646                	sw	a7,44(sp)
20406a60:	d472                	sw	t3,40(sp)
20406a62:	d276                	sw	t4,36(sp)
20406a64:	d07a                	sw	t5,32(sp)
20406a66:	ce7e                	sw	t6,28(sp)
20406a68:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:418
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406a6a:	9c0ff0ef          	jal	ra,20405c2a <__metal_myhart_id>
20406a6e:	872a                	mv	a4,a0
20406a70:	800007b7          	lui	a5,0x80000
20406a74:	070a                	slli	a4,a4,0x2
20406a76:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
20406a7a:	97ba                	add	a5,a5,a4
20406a7c:	439c                	lw	a5,0(a5)
20406a7e:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:420

    if ( cpu ) {
20406a82:	fac42783          	lw	a5,-84(s0)
20406a86:	c78d                	beqz	a5,20406ab0 <metal_lc15_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:422
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406a88:	fac42503          	lw	a0,-84(s0)
20406a8c:	944ff0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
20406a90:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:423
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC15].exint_data;
20406a94:	fa842783          	lw	a5,-88(s0)
20406a98:	3807a783          	lw	a5,896(a5)
20406a9c:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:424
        intc->metal_int_table[METAL_INTERRUPT_ID_LC15].handler(METAL_INTERRUPT_ID_LC15, priv);
20406aa0:	fa842783          	lw	a5,-88(s0)
20406aa4:	3787a783          	lw	a5,888(a5)
20406aa8:	fa442583          	lw	a1,-92(s0)
20406aac:	457d                	li	a0,31
20406aae:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:426
    }
}
20406ab0:	0001                	nop
20406ab2:	40f6                	lw	ra,92(sp)
20406ab4:	42e6                	lw	t0,88(sp)
20406ab6:	4356                	lw	t1,84(sp)
20406ab8:	43c6                	lw	t2,80(sp)
20406aba:	4436                	lw	s0,76(sp)
20406abc:	4526                	lw	a0,72(sp)
20406abe:	4596                	lw	a1,68(sp)
20406ac0:	4606                	lw	a2,64(sp)
20406ac2:	56f2                	lw	a3,60(sp)
20406ac4:	5762                	lw	a4,56(sp)
20406ac6:	57d2                	lw	a5,52(sp)
20406ac8:	5842                	lw	a6,48(sp)
20406aca:	58b2                	lw	a7,44(sp)
20406acc:	5e22                	lw	t3,40(sp)
20406ace:	5e92                	lw	t4,36(sp)
20406ad0:	5f02                	lw	t5,32(sp)
20406ad2:	4ff2                	lw	t6,28(sp)
20406ad4:	6125                	addi	sp,sp,96
20406ad6:	30200073          	mret

20406ada <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429

metal_vector_mode __metal_controller_interrupt_vector_mode (void)
{
20406ada:	1101                	addi	sp,sp,-32
20406adc:	ce22                	sw	s0,28(sp)
20406ade:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
    uintptr_t val;

    asm volatile ("csrr %0, mtvec" : "=r"(val));
20406ae0:	305027f3          	csrr	a5,mtvec
20406ae4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:433
    val &= METAL_MTVEC_MASK;
20406ae8:	fec42783          	lw	a5,-20(s0)
20406aec:	03f7f793          	andi	a5,a5,63
20406af0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:435

    switch (val) {
20406af4:	fec42703          	lw	a4,-20(s0)
20406af8:	4789                	li	a5,2
20406afa:	00f70d63          	beq	a4,a5,20406b14 <__metal_controller_interrupt_vector_mode+0x3a>
20406afe:	fec42703          	lw	a4,-20(s0)
20406b02:	478d                	li	a5,3
20406b04:	00f70a63          	beq	a4,a5,20406b18 <__metal_controller_interrupt_vector_mode+0x3e>
20406b08:	fec42703          	lw	a4,-20(s0)
20406b0c:	4785                	li	a5,1
20406b0e:	00f70763          	beq	a4,a5,20406b1c <__metal_controller_interrupt_vector_mode+0x42>
20406b12:	a039                	j	20406b20 <__metal_controller_interrupt_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:437
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20406b14:	478d                	li	a5,3
20406b16:	a031                	j	20406b22 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20406b18:	4791                	li	a5,4
20406b1a:	a021                	j	20406b22 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:441
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20406b1c:	4785                	li	a5,1
20406b1e:	a011                	j	20406b22 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    }
    return METAL_DIRECT_MODE;
20406b20:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:444
}
20406b22:	853e                	mv	a0,a5
20406b24:	4472                	lw	s0,28(sp)
20406b26:	6105                	addi	sp,sp,32
20406b28:	8082                	ret

20406b2a <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447

void __metal_controller_interrupt_vector (metal_vector_mode mode, void *vec_table)
{  
20406b2a:	7179                	addi	sp,sp,-48
20406b2c:	d622                	sw	s0,44(sp)
20406b2e:	1800                	addi	s0,sp,48
20406b30:	fca42e23          	sw	a0,-36(s0)
20406b34:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
    uintptr_t trap_entry, val;

    __asm__ volatile ("csrr %0, mtvec" : "=r"(val));
20406b38:	305027f3          	csrr	a5,mtvec
20406b3c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:451
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20406b40:	fec42783          	lw	a5,-20(s0)
20406b44:	fc07f793          	andi	a5,a5,-64
20406b48:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:452
    trap_entry = (uintptr_t)vec_table;
20406b4c:	fd842783          	lw	a5,-40(s0)
20406b50:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

    switch (mode) {
20406b54:	fdc42703          	lw	a4,-36(s0)
20406b58:	4791                	li	a5,4
20406b5a:	06e7e063          	bltu	a5,a4,20406bba <__metal_controller_interrupt_vector+0x90>
20406b5e:	fdc42783          	lw	a5,-36(s0)
20406b62:	00279713          	slli	a4,a5,0x2
20406b66:	204097b7          	lui	a5,0x20409
20406b6a:	0c078793          	addi	a5,a5,192 # 204090c0 <__metal_driver_vtable_riscv_clint0+0x4c>
20406b6e:	97ba                	add	a5,a5,a4
20406b70:	439c                	lw	a5,0(a5)
20406b72:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20406b74:	fe842783          	lw	a5,-24(s0)
20406b78:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:458
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC));
20406b7c:	fec42783          	lw	a5,-20(s0)
20406b80:	0027e793          	ori	a5,a5,2
20406b84:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        break;
20406b88:	a80d                	j	20406bba <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20406b8a:	fe842783          	lw	a5,-24(s0)
20406b8e:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC_VECTORED));
20406b92:	fec42783          	lw	a5,-20(s0)
20406b96:	0037e793          	ori	a5,a5,3
20406b9a:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:463
        break;
20406b9e:	a831                	j	20406bba <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
    case METAL_VECTOR_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry | METAL_MTVEC_VECTORED));
20406ba0:	fe842783          	lw	a5,-24(s0)
20406ba4:	0017e793          	ori	a5,a5,1
20406ba8:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466
        break;
20406bac:	a039                	j	20406bba <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:468
    case METAL_DIRECT_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20406bae:	fe842783          	lw	a5,-24(s0)
20406bb2:	9bf1                	andi	a5,a5,-4
20406bb4:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:469
        break;
20406bb8:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:471
    }
}
20406bba:	0001                	nop
20406bbc:	5432                	lw	s0,44(sp)
20406bbe:	6145                	addi	sp,sp,48
20406bc0:	8082                	ret

20406bc2 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:474

int __metal_valid_interrupt_id (int id)
{
20406bc2:	1101                	addi	sp,sp,-32
20406bc4:	ce22                	sw	s0,28(sp)
20406bc6:	1000                	addi	s0,sp,32
20406bc8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
    switch (id) {
20406bcc:	fec42783          	lw	a5,-20(s0)
20406bd0:	17f5                	addi	a5,a5,-3
20406bd2:	4771                	li	a4,28
20406bd4:	00f76d63          	bltu	a4,a5,20406bee <__metal_valid_interrupt_id+0x2c>
20406bd8:	00279713          	slli	a4,a5,0x2
20406bdc:	204097b7          	lui	a5,0x20409
20406be0:	0d478793          	addi	a5,a5,212 # 204090d4 <__metal_driver_vtable_riscv_clint0+0x60>
20406be4:	97ba                	add	a5,a5,a4
20406be6:	439c                	lw	a5,0(a5)
20406be8:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        return 1;
20406bea:	4785                	li	a5,1
20406bec:	a019                	j	20406bf2 <__metal_valid_interrupt_id+0x30>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:497
    default:
        break;
20406bee:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:500
    }

    return 0;
20406bf0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
}
20406bf2:	853e                	mv	a0,a5
20406bf4:	4472                	lw	s0,28(sp)
20406bf6:	6105                	addi	sp,sp,32
20406bf8:	8082                	ret

20406bfa <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506

 
int __metal_local_interrupt_enable (struct metal_interrupt *controller,
				  metal_interrupt_id_e id, int enable)
{
20406bfa:	7179                	addi	sp,sp,-48
20406bfc:	d606                	sw	ra,44(sp)
20406bfe:	d422                	sw	s0,40(sp)
20406c00:	1800                	addi	s0,sp,48
20406c02:	fca42e23          	sw	a0,-36(s0)
20406c06:	fcb42c23          	sw	a1,-40(s0)
20406c0a:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
    int rc = 0;
20406c0e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:509
  
    if ( !controller) {
20406c12:	fdc42783          	lw	a5,-36(s0)
20406c16:	e399                	bnez	a5,20406c1c <__metal_local_interrupt_enable+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        return -1;
20406c18:	57fd                	li	a5,-1
20406c1a:	a849                	j	20406cac <__metal_local_interrupt_enable+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
    }

    switch (id) {
20406c1c:	fd842703          	lw	a4,-40(s0)
20406c20:	47fd                	li	a5,31
20406c22:	08e7e063          	bltu	a5,a4,20406ca2 <__metal_local_interrupt_enable+0xa8>
20406c26:	fd842783          	lw	a5,-40(s0)
20406c2a:	00279713          	slli	a4,a5,0x2
20406c2e:	204097b7          	lui	a5,0x20409
20406c32:	14878793          	addi	a5,a5,328 # 20409148 <__metal_driver_vtable_riscv_clint0+0xd4>
20406c36:	97ba                	add	a5,a5,a4
20406c38:	439c                	lw	a5,0(a5)
20406c3a:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:515
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20406c3c:	fd442783          	lw	a5,-44(s0)
20406c40:	c781                	beqz	a5,20406c48 <__metal_local_interrupt_enable+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
            __metal_interrupt_global_enable();
20406c42:	802ff0ef          	jal	ra,20405c44 <__metal_interrupt_global_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20406c46:	a08d                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            __metal_interrupt_global_disable();
20406c48:	814ff0ef          	jal	ra,20405c5c <__metal_interrupt_global_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        break;
20406c4c:	a8b1                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20406c4e:	fd442783          	lw	a5,-44(s0)
20406c52:	c781                	beqz	a5,20406c5a <__metal_local_interrupt_enable+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:523
            __metal_interrupt_software_enable();
20406c54:	820ff0ef          	jal	ra,20405c74 <__metal_interrupt_software_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20406c58:	a881                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:525
            __metal_interrupt_software_disable();
20406c5a:	832ff0ef          	jal	ra,20405c8c <__metal_interrupt_software_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        break;
20406c5e:	a0a9                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:529
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20406c60:	fd442783          	lw	a5,-44(s0)
20406c64:	c781                	beqz	a5,20406c6c <__metal_local_interrupt_enable+0x72>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:530
	    __metal_interrupt_timer_enable();
20406c66:	83eff0ef          	jal	ra,20405ca4 <__metal_interrupt_timer_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	} else {
	    __metal_interrupt_timer_disable();
	}
	break;
20406c6a:	a83d                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:532
	    __metal_interrupt_timer_disable();
20406c6c:	852ff0ef          	jal	ra,20405cbe <__metal_interrupt_timer_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	break;
20406c70:	a825                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:536
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20406c72:	fd442783          	lw	a5,-44(s0)
20406c76:	c781                	beqz	a5,20406c7e <__metal_local_interrupt_enable+0x84>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:537
            __metal_interrupt_external_enable();
20406c78:	860ff0ef          	jal	ra,20405cd8 <__metal_interrupt_external_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20406c7c:	a035                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:539
            __metal_interrupt_external_disable();
20406c7e:	876ff0ef          	jal	ra,20405cf4 <__metal_interrupt_external_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        break;
20406c82:	a01d                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20406c84:	fd442783          	lw	a5,-44(s0)
20406c88:	c799                	beqz	a5,20406c96 <__metal_local_interrupt_enable+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
            __metal_interrupt_local_enable(id);
20406c8a:	fd842783          	lw	a5,-40(s0)
20406c8e:	853e                	mv	a0,a5
20406c90:	880ff0ef          	jal	ra,20405d10 <__metal_interrupt_local_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20406c94:	a811                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:561
            __metal_interrupt_local_disable(id);
20406c96:	fd842783          	lw	a5,-40(s0)
20406c9a:	853e                	mv	a0,a5
20406c9c:	8a0ff0ef          	jal	ra,20405d3c <__metal_interrupt_local_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        break;
20406ca0:	a021                	j	20406ca8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:565
    default:
        rc = -1;
20406ca2:	57fd                	li	a5,-1
20406ca4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:567
    }
    return rc;
20406ca8:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:568
}
20406cac:	853e                	mv	a0,a5
20406cae:	50b2                	lw	ra,44(sp)
20406cb0:	5422                	lw	s0,40(sp)
20406cb2:	6145                	addi	sp,sp,48
20406cb4:	8082                	ret

20406cb6 <__metal_exception_register>:
__metal_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:572

int __metal_exception_register (struct metal_interrupt *controller,
                              int ecode, metal_exception_handler_t isr)
{
20406cb6:	7179                	addi	sp,sp,-48
20406cb8:	d622                	sw	s0,44(sp)
20406cba:	1800                	addi	s0,sp,48
20406cbc:	fca42e23          	sw	a0,-36(s0)
20406cc0:	fcb42c23          	sw	a1,-40(s0)
20406cc4:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:573
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406cc8:	fdc42783          	lw	a5,-36(s0)
20406ccc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20406cd0:	fd842703          	lw	a4,-40(s0)
20406cd4:	47ad                	li	a5,11
20406cd6:	02e7c263          	blt	a5,a4,20406cfa <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575 (discriminator 1)
20406cda:	fd442783          	lw	a5,-44(s0)
20406cde:	cf91                	beqz	a5,20406cfa <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:576
        intc->metal_exception_table[ecode] = isr;
20406ce0:	fec42703          	lw	a4,-20(s0)
20406ce4:	fd842783          	lw	a5,-40(s0)
20406ce8:	0e078793          	addi	a5,a5,224
20406cec:	078a                	slli	a5,a5,0x2
20406cee:	97ba                	add	a5,a5,a4
20406cf0:	fd442703          	lw	a4,-44(s0)
20406cf4:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:577
        return 0;
20406cf6:	4781                	li	a5,0
20406cf8:	a011                	j	20406cfc <__metal_exception_register+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:579
    }
    return -1;
20406cfa:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:580
}
20406cfc:	853e                	mv	a0,a5
20406cfe:	5432                	lw	s0,44(sp)
20406d00:	6145                	addi	sp,sp,48
20406d02:	8082                	ret

20406d04 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:583

void __metal_driver_riscv_cpu_controller_interrupt_init (struct metal_interrupt *controller)
{
20406d04:	7139                	addi	sp,sp,-64
20406d06:	de06                	sw	ra,60(sp)
20406d08:	dc22                	sw	s0,56(sp)
20406d0a:	0080                	addi	s0,sp,64
20406d0c:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:584
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406d10:	fcc42783          	lw	a5,-52(s0)
20406d14:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:587
    uintptr_t val;

    if ( !intc->init_done ) {
20406d18:	fe442783          	lw	a5,-28(s0)
20406d1c:	43dc                	lw	a5,4(a5)
20406d1e:	10079e63          	bnez	a5,20406e3a <__metal_driver_riscv_cpu_controller_interrupt_init+0x136>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:589
        /* Disable and clear all interrupt sources */
        __asm__ volatile ("csrc mie, %0" :: "r"(-1));
20406d22:	57fd                	li	a5,-1
20406d24:	3047b073          	csrc	mie,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:590
        __asm__ volatile ("csrc mip, %0" :: "r"(-1));
20406d28:	57fd                	li	a5,-1
20406d2a:	3447b073          	csrc	mip,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:594

        /* Read the misa CSR to determine if the delegation registers exist */
        uintptr_t misa;
        __asm__ volatile ("csrr %0, misa" : "=r" (misa));
20406d2e:	301027f3          	csrr	a5,misa
20406d32:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

        /* The delegation CSRs exist if user mode interrupts (N extension) or
         * supervisor mode (S extension) are supported */
        if((misa & METAL_ISA_N_EXTENSIONS) || (misa & METAL_ISA_S_EXTENSIONS)) {
20406d36:	fe042703          	lw	a4,-32(s0)
20406d3a:	6789                	lui	a5,0x2
20406d3c:	8ff9                	and	a5,a5,a4
20406d3e:	e799                	bnez	a5,20406d4c <__metal_driver_riscv_cpu_controller_interrupt_init+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598 (discriminator 1)
20406d40:	fe042703          	lw	a4,-32(s0)
20406d44:	000407b7          	lui	a5,0x40
20406d48:	8ff9                	and	a5,a5,a4
20406d4a:	c799                	beqz	a5,20406d58 <__metal_driver_riscv_cpu_controller_interrupt_init+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:600
            /* Disable interrupt and exception delegation */
            __asm__ volatile ("csrc mideleg, %0" :: "r"(-1));
20406d4c:	57fd                	li	a5,-1
20406d4e:	3037b073          	csrc	mideleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            __asm__ volatile ("csrc medeleg, %0" :: "r"(-1));
20406d52:	57fd                	li	a5,-1
20406d54:	3027b073          	csrc	medeleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:605
        }

        /* The satp CSR exists if supervisor mode (S extension) is supported */
        if(misa & METAL_ISA_S_EXTENSIONS) {
20406d58:	fe042703          	lw	a4,-32(s0)
20406d5c:	000407b7          	lui	a5,0x40
20406d60:	8ff9                	and	a5,a5,a4
20406d62:	c781                	beqz	a5,20406d6a <__metal_driver_riscv_cpu_controller_interrupt_init+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:607
            /* Clear the entire CSR to make sure that satp.MODE = 0 */
            __asm__ volatile ("csrc satp, %0" :: "r"(-1));
20406d64:	57fd                	li	a5,-1
20406d66:	1807b073          	csrc	satp,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611
        }

        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20406d6a:	fe042623          	sw	zero,-20(s0)
20406d6e:	a0b9                	j	20406dbc <__metal_driver_riscv_cpu_controller_interrupt_init+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20406d70:	fe442683          	lw	a3,-28(s0)
20406d74:	fec42703          	lw	a4,-20(s0)
20406d78:	87ba                	mv	a5,a4
20406d7a:	0786                	slli	a5,a5,0x1
20406d7c:	97ba                	add	a5,a5,a4
20406d7e:	078e                	slli	a5,a5,0x3
20406d80:	97b6                	add	a5,a5,a3
20406d82:	0807a823          	sw	zero,144(a5) # 40090 <__heap_size+0x3f890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:613 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20406d86:	fe442683          	lw	a3,-28(s0)
20406d8a:	fec42703          	lw	a4,-20(s0)
20406d8e:	87ba                	mv	a5,a4
20406d90:	0786                	slli	a5,a5,0x1
20406d92:	97ba                	add	a5,a5,a4
20406d94:	078e                	slli	a5,a5,0x3
20406d96:	97b6                	add	a5,a5,a3
20406d98:	0807aa23          	sw	zero,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:614 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20406d9c:	fe442683          	lw	a3,-28(s0)
20406da0:	fec42703          	lw	a4,-20(s0)
20406da4:	87ba                	mv	a5,a4
20406da6:	0786                	slli	a5,a5,0x1
20406da8:	97ba                	add	a5,a5,a4
20406daa:	078e                	slli	a5,a5,0x3
20406dac:	97b6                	add	a5,a5,a3
20406dae:	0807ac23          	sw	zero,152(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20406db2:	fec42783          	lw	a5,-20(s0)
20406db6:	0785                	addi	a5,a5,1
20406db8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 1)
20406dbc:	fec42703          	lw	a4,-20(s0)
20406dc0:	47fd                	li	a5,31
20406dc2:	fae7d7e3          	bge	a5,a4,20406d70 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
	}
	for (int i = 0; i < METAL_MAX_ME; i++) {
20406dc6:	fe042423          	sw	zero,-24(s0)
20406dca:	a01d                	j	20406df0 <__metal_driver_riscv_cpu_controller_interrupt_init+0xec>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:617 (discriminator 3)
	    intc->metal_exception_table[i] = __metal_default_exception_handler;
20406dcc:	fe442703          	lw	a4,-28(s0)
20406dd0:	fe842783          	lw	a5,-24(s0)
20406dd4:	0e078793          	addi	a5,a5,224
20406dd8:	078a                	slli	a5,a5,0x2
20406dda:	97ba                	add	a5,a5,a4
20406ddc:	20406737          	lui	a4,0x20406
20406de0:	d6870713          	addi	a4,a4,-664 # 20405d68 <__metal_default_exception_handler>
20406de4:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 3)
	for (int i = 0; i < METAL_MAX_ME; i++) {
20406de6:	fe842783          	lw	a5,-24(s0)
20406dea:	0785                	addi	a5,a5,1
20406dec:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 1)
20406df0:	fe842703          	lw	a4,-24(s0)
20406df4:	47ad                	li	a5,11
20406df6:	fce7dbe3          	bge	a5,a4,20406dcc <__metal_driver_riscv_cpu_controller_interrupt_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:619
	}
        __metal_controller_interrupt_vector(METAL_DIRECT_MODE, (void *)(uintptr_t)&__metal_exception_handler);
20406dfa:	204067b7          	lui	a5,0x20406
20406dfe:	00078593          	mv	a1,a5
20406e02:	4501                	li	a0,0
20406e04:	d27ff0ef          	jal	ra,20406b2a <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620
	__asm__ volatile ("csrr %0, misa" : "=r"(val));
20406e08:	301027f3          	csrr	a5,misa
20406e0c:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
	if (val & (METAL_ISA_D_EXTENSIONS | METAL_ISA_F_EXTENSIONS | METAL_ISA_Q_EXTENSIONS)) {
20406e10:	fdc42703          	lw	a4,-36(s0)
20406e14:	67c1                	lui	a5,0x10
20406e16:	02878793          	addi	a5,a5,40 # 10028 <__heap_size+0xf828>
20406e1a:	8ff9                	and	a5,a5,a4
20406e1c:	cb99                	beqz	a5,20406e32 <__metal_driver_riscv_cpu_controller_interrupt_init+0x12e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:623
	    /* Floating point architecture, so turn on FP register saving*/
	    __asm__ volatile ("csrr %0, mstatus" : "=r"(val));
20406e1e:	300027f3          	csrr	a5,mstatus
20406e22:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:624
	    __asm__ volatile ("csrw mstatus, %0" :: "r"(val | METAL_MSTATUS_FS_INIT));
20406e26:	fdc42703          	lw	a4,-36(s0)
20406e2a:	6789                	lui	a5,0x2
20406e2c:	8fd9                	or	a5,a5,a4
20406e2e:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:626
	}
	intc->init_done = 1;
20406e32:	fe442783          	lw	a5,-28(s0)
20406e36:	4705                	li	a4,1
20406e38:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628
    }
}
20406e3a:	0001                	nop
20406e3c:	50f2                	lw	ra,60(sp)
20406e3e:	5462                	lw	s0,56(sp)
20406e40:	6121                	addi	sp,sp,64
20406e42:	8082                	ret

20406e44 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:633

int __metal_driver_riscv_cpu_controller_interrupt_register(struct metal_interrupt *controller,
							 int id, metal_interrupt_handler_t isr,
							 void *priv)
{
20406e44:	7179                	addi	sp,sp,-48
20406e46:	d606                	sw	ra,44(sp)
20406e48:	d422                	sw	s0,40(sp)
20406e4a:	1800                	addi	s0,sp,48
20406e4c:	fca42e23          	sw	a0,-36(s0)
20406e50:	fcb42c23          	sw	a1,-40(s0)
20406e54:	fcc42a23          	sw	a2,-44(s0)
20406e58:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634
    int rc = 0;
20406e5c:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:635
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406e60:	fdc42783          	lw	a5,-36(s0)
20406e64:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:637
 
    if ( !__metal_valid_interrupt_id(id) ) {
20406e68:	fd842503          	lw	a0,-40(s0)
20406e6c:	3b99                	jal	20406bc2 <__metal_valid_interrupt_id>
20406e6e:	87aa                	mv	a5,a0
20406e70:	e399                	bnez	a5,20406e76 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:638
        return -11;
20406e72:	57d5                	li	a5,-11
20406e74:	aa11                	j	20406f88 <__metal_driver_riscv_cpu_controller_interrupt_register+0x144>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:641
    }

    if (isr) {
20406e76:	fd442783          	lw	a5,-44(s0)
20406e7a:	cf85                	beqz	a5,20406eb2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642
        intc->metal_int_table[id].handler = isr;
20406e7c:	fe842683          	lw	a3,-24(s0)
20406e80:	fd842703          	lw	a4,-40(s0)
20406e84:	87ba                	mv	a5,a4
20406e86:	0786                	slli	a5,a5,0x1
20406e88:	97ba                	add	a5,a5,a4
20406e8a:	078e                	slli	a5,a5,0x3
20406e8c:	97b6                	add	a5,a5,a3
20406e8e:	fd442703          	lw	a4,-44(s0)
20406e92:	08e7a823          	sw	a4,144(a5) # 2090 <__heap_size+0x1890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:643
        intc->metal_int_table[id].exint_data = priv;
20406e96:	fe842683          	lw	a3,-24(s0)
20406e9a:	fd842703          	lw	a4,-40(s0)
20406e9e:	87ba                	mv	a5,a4
20406ea0:	0786                	slli	a5,a5,0x1
20406ea2:	97ba                	add	a5,a5,a4
20406ea4:	078e                	slli	a5,a5,0x3
20406ea6:	97b6                	add	a5,a5,a3
20406ea8:	fd042703          	lw	a4,-48(s0)
20406eac:	08e7ac23          	sw	a4,152(a5)
20406eb0:	a8d1                	j	20406f84 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
    } else {
	switch (id) {
20406eb2:	fd842783          	lw	a5,-40(s0)
20406eb6:	17f5                	addi	a5,a5,-3
20406eb8:	4771                	li	a4,28
20406eba:	0cf76263          	bltu	a4,a5,20406f7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20406ebe:	00279713          	slli	a4,a5,0x2
20406ec2:	204097b7          	lui	a5,0x20409
20406ec6:	1c878793          	addi	a5,a5,456 # 204091c8 <__metal_driver_vtable_riscv_clint0+0x154>
20406eca:	97ba                	add	a5,a5,a4
20406ecc:	439c                	lw	a5,0(a5)
20406ece:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:647
	case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20406ed0:	fe842683          	lw	a3,-24(s0)
20406ed4:	fd842703          	lw	a4,-40(s0)
20406ed8:	87ba                	mv	a5,a4
20406eda:	0786                	slli	a5,a5,0x1
20406edc:	97ba                	add	a5,a5,a4
20406ede:	078e                	slli	a5,a5,0x3
20406ee0:	97b6                	add	a5,a5,a3
20406ee2:	20406737          	lui	a4,0x20406
20406ee6:	e5870713          	addi	a4,a4,-424 # 20405e58 <__metal_default_sw_handler>
20406eea:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
            intc->metal_int_table[id].sub_int = priv;
20406eee:	fe842683          	lw	a3,-24(s0)
20406ef2:	fd842703          	lw	a4,-40(s0)
20406ef6:	87ba                	mv	a5,a4
20406ef8:	0786                	slli	a5,a5,0x1
20406efa:	97ba                	add	a5,a5,a4
20406efc:	078e                	slli	a5,a5,0x3
20406efe:	97b6                	add	a5,a5,a3
20406f00:	fd042703          	lw	a4,-48(s0)
20406f04:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
	  break;
20406f08:	a8b5                	j	20406f84 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:651
	case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20406f0a:	fe842683          	lw	a3,-24(s0)
20406f0e:	fd842703          	lw	a4,-40(s0)
20406f12:	87ba                	mv	a5,a4
20406f14:	0786                	slli	a5,a5,0x1
20406f16:	97ba                	add	a5,a5,a4
20406f18:	078e                	slli	a5,a5,0x3
20406f1a:	97b6                	add	a5,a5,a3
20406f1c:	20406737          	lui	a4,0x20406
20406f20:	f5270713          	addi	a4,a4,-174 # 20405f52 <__metal_default_timer_handler>
20406f24:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652
            intc->metal_int_table[id].sub_int = priv;
20406f28:	fe842683          	lw	a3,-24(s0)
20406f2c:	fd842703          	lw	a4,-40(s0)
20406f30:	87ba                	mv	a5,a4
20406f32:	0786                	slli	a5,a5,0x1
20406f34:	97ba                	add	a5,a5,a4
20406f36:	078e                	slli	a5,a5,0x3
20406f38:	97b6                	add	a5,a5,a3
20406f3a:	fd042703          	lw	a4,-48(s0)
20406f3e:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
	  break;
20406f42:	a089                	j	20406f84 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
	case METAL_INTERRUPT_ID_LC11:
	case METAL_INTERRUPT_ID_LC12:
	case METAL_INTERRUPT_ID_LC13:
	case METAL_INTERRUPT_ID_LC14:
	case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler = __metal_default_interrupt_handler;
20406f44:	fe842683          	lw	a3,-24(s0)
20406f48:	fd842703          	lw	a4,-40(s0)
20406f4c:	87ba                	mv	a5,a4
20406f4e:	0786                	slli	a5,a5,0x1
20406f50:	97ba                	add	a5,a5,a4
20406f52:	078e                	slli	a5,a5,0x3
20406f54:	97b6                	add	a5,a5,a3
20406f56:	20406737          	lui	a4,0x20406
20406f5a:	d8070713          	addi	a4,a4,-640 # 20405d80 <__metal_default_interrupt_handler>
20406f5e:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:672
            intc->metal_int_table[id].sub_int = priv;
20406f62:	fe842683          	lw	a3,-24(s0)
20406f66:	fd842703          	lw	a4,-40(s0)
20406f6a:	87ba                	mv	a5,a4
20406f6c:	0786                	slli	a5,a5,0x1
20406f6e:	97ba                	add	a5,a5,a4
20406f70:	078e                	slli	a5,a5,0x3
20406f72:	97b6                	add	a5,a5,a3
20406f74:	fd042703          	lw	a4,-48(s0)
20406f78:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:673
	  break;
20406f7c:	a021                	j	20406f84 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
	default:
	  rc = -12;
20406f7e:	57d1                	li	a5,-12
20406f80:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
	}
    }
    return rc;
20406f84:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
}
20406f88:	853e                	mv	a0,a5
20406f8a:	50b2                	lw	ra,44(sp)
20406f8c:	5422                	lw	s0,40(sp)
20406f8e:	6145                	addi	sp,sp,48
20406f90:	8082                	ret

20406f92 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:683

int __metal_driver_riscv_cpu_controller_interrupt_enable (struct metal_interrupt *controller,
                                                        int id)
{
20406f92:	1101                	addi	sp,sp,-32
20406f94:	ce06                	sw	ra,28(sp)
20406f96:	cc22                	sw	s0,24(sp)
20406f98:	1000                	addi	s0,sp,32
20406f9a:	fea42623          	sw	a0,-20(s0)
20406f9e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20406fa2:	fe842783          	lw	a5,-24(s0)
20406fa6:	4605                	li	a2,1
20406fa8:	85be                	mv	a1,a5
20406faa:	fec42503          	lw	a0,-20(s0)
20406fae:	c4dff0ef          	jal	ra,20406bfa <__metal_local_interrupt_enable>
20406fb2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
20406fb4:	853e                	mv	a0,a5
20406fb6:	40f2                	lw	ra,28(sp)
20406fb8:	4462                	lw	s0,24(sp)
20406fba:	6105                	addi	sp,sp,32
20406fbc:	8082                	ret

20406fbe <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:689

int __metal_driver_riscv_cpu_controller_interrupt_disable (struct metal_interrupt *controller,
                                                         int id)
{   
20406fbe:	1101                	addi	sp,sp,-32
20406fc0:	ce06                	sw	ra,28(sp)
20406fc2:	cc22                	sw	s0,24(sp)
20406fc4:	1000                	addi	s0,sp,32
20406fc6:	fea42623          	sw	a0,-20(s0)
20406fca:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20406fce:	fe842783          	lw	a5,-24(s0)
20406fd2:	4601                	li	a2,0
20406fd4:	85be                	mv	a1,a5
20406fd6:	fec42503          	lw	a0,-20(s0)
20406fda:	c21ff0ef          	jal	ra,20406bfa <__metal_local_interrupt_enable>
20406fde:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:691
}
20406fe0:	853e                	mv	a0,a5
20406fe2:	40f2                	lw	ra,28(sp)
20406fe4:	4462                	lw	s0,24(sp)
20406fe6:	6105                	addi	sp,sp,32
20406fe8:	8082                	ret

20406fea <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:722
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode (struct metal_interrupt *controller)
{   
20406fea:	1101                	addi	sp,sp,-32
20406fec:	ce06                	sw	ra,28(sp)
20406fee:	cc22                	sw	s0,24(sp)
20406ff0:	1000                	addi	s0,sp,32
20406ff2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723
    return __metal_controller_interrupt_vector_mode();
20406ff6:	ae5ff0ef          	jal	ra,20406ada <__metal_controller_interrupt_vector_mode>
20406ffa:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
}
20406ffc:	853e                	mv	a0,a5
20406ffe:	40f2                	lw	ra,28(sp)
20407000:	4462                	lw	s0,24(sp)
20407002:	6105                	addi	sp,sp,32
20407004:	8082                	ret

20407006 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728

int __metal_driver_riscv_cpu_controller_set_vector_mode (struct metal_interrupt *controller,
                                                         metal_vector_mode mode)
{   
20407006:	7179                	addi	sp,sp,-48
20407008:	d606                	sw	ra,44(sp)
2040700a:	d422                	sw	s0,40(sp)
2040700c:	1800                	addi	s0,sp,48
2040700e:	fca42e23          	sw	a0,-36(s0)
20407012:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:729
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20407016:	fdc42783          	lw	a5,-36(s0)
2040701a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731

    if (mode == METAL_DIRECT_MODE) {
2040701e:	fd842783          	lw	a5,-40(s0)
20407022:	eb99                	bnez	a5,20407038 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        __metal_controller_interrupt_vector(mode, (void *)(uintptr_t)&__metal_exception_handler);
20407024:	204067b7          	lui	a5,0x20406
20407028:	00078593          	mv	a1,a5
2040702c:	fd842503          	lw	a0,-40(s0)
20407030:	afbff0ef          	jal	ra,20406b2a <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            return 0;
20407034:	4781                	li	a5,0
20407036:	a00d                	j	20407058 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:735
    }
    if (mode == METAL_VECTOR_MODE) {
20407038:	fd842703          	lw	a4,-40(s0)
2040703c:	4785                	li	a5,1
2040703e:	00f71c63          	bne	a4,a5,20407056 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:736
        __metal_controller_interrupt_vector(mode, (void *)__metal_vector_table);
20407042:	204097b7          	lui	a5,0x20409
20407046:	98078593          	addi	a1,a5,-1664 # 20408980 <__metal_vector_table>
2040704a:	fd842503          	lw	a0,-40(s0)
2040704e:	addff0ef          	jal	ra,20406b2a <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
        return 0;
20407052:	4781                	li	a5,0
20407054:	a011                	j	20407058 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:739
    }
    return -1;
20407056:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740
}
20407058:	853e                	mv	a0,a5
2040705a:	50b2                	lw	ra,44(sp)
2040705c:	5422                	lw	s0,40(sp)
2040705e:	6145                	addi	sp,sp,48
20407060:	8082                	ret

20407062 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:744

int __metal_driver_riscv_cpu_controller_command_request (struct metal_interrupt *controller,
						       int cmd, void *data)
{
20407062:	1101                	addi	sp,sp,-32
20407064:	ce22                	sw	s0,28(sp)
20407066:	1000                	addi	s0,sp,32
20407068:	fea42623          	sw	a0,-20(s0)
2040706c:	feb42423          	sw	a1,-24(s0)
20407070:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:746
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic */
    return 0;
20407074:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747
}
20407076:	853e                	mv	a0,a5
20407078:	4472                	lw	s0,28(sp)
2040707a:	6105                	addi	sp,sp,32
2040707c:	8082                	ret

2040707e <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:752

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu)
{
2040707e:	7139                	addi	sp,sp,-64
20407080:	de22                	sw	s0,60(sp)
20407082:	0080                	addi	s0,sp,64
20407084:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:753
    unsigned long long val = 0;
20407088:	4301                	li	t1,0
2040708a:	4381                	li	t2,0
2040708c:	fe642423          	sw	t1,-24(s0)
20407090:	fe742623          	sw	t2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi));
20407094:	b8002573          	csrr	a0,mcycleh
20407098:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:759
    __asm__ volatile ("csrr %0, mcycle" : "=r"(lo));
2040709c:	b0002573          	csrr	a0,mcycle
204070a0:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:760
    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi1));
204070a4:	b8002573          	csrr	a0,mcycleh
204070a8:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:761
    if (hi == hi1) {
204070ac:	fe442883          	lw	a7,-28(s0)
204070b0:	fdc42503          	lw	a0,-36(s0)
204070b4:	02a89563          	bne	a7,a0,204070de <__metal_driver_cpu_mcycle_get+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
        val = ((unsigned long long)hi << 32) | lo;
204070b8:	fe442503          	lw	a0,-28(s0)
204070bc:	85aa                	mv	a1,a0
204070be:	4601                	li	a2,0
204070c0:	00059813          	slli	a6,a1,0x0
204070c4:	4781                	li	a5,0
204070c6:	fe042603          	lw	a2,-32(s0)
204070ca:	86b2                	mv	a3,a2
204070cc:	4701                	li	a4,0
204070ce:	00d7e633          	or	a2,a5,a3
204070d2:	fec42423          	sw	a2,-24(s0)
204070d6:	00e867b3          	or	a5,a6,a4
204070da:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:768
    }
#else
    __asm__ volatile ("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
204070de:	fe842783          	lw	a5,-24(s0)
204070e2:	fec42803          	lw	a6,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:769
}
204070e6:	853e                	mv	a0,a5
204070e8:	85c2                	mv	a1,a6
204070ea:	5472                	lw	s0,60(sp)
204070ec:	6121                	addi	sp,sp,64
204070ee:	8082                	ret

204070f0 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu)
{
204070f0:	7179                	addi	sp,sp,-48
204070f2:	d606                	sw	ra,44(sp)
204070f4:	d422                	sw	s0,40(sp)
204070f6:	d24a                	sw	s2,36(sp)
204070f8:	d04e                	sw	s3,32(sp)
204070fa:	1800                	addi	s0,sp,48
204070fc:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:774
  int timebase;
    if (!cpu) {
20407100:	fdc42783          	lw	a5,-36(s0)
20407104:	e781                	bnez	a5,2040710c <__metal_driver_cpu_timebase_get+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775
        return 0;
20407106:	4901                	li	s2,0
20407108:	4981                	li	s3,0
2040710a:	a821                	j	20407122 <__metal_driver_cpu_timebase_get+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:778
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
2040710c:	fdc42503          	lw	a0,-36(s0)
20407110:	a97fe0ef          	jal	ra,20405ba6 <__metal_driver_cpu_timebase>
20407114:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:779
    return timebase;
20407118:	fec42783          	lw	a5,-20(s0)
2040711c:	893e                	mv	s2,a5
2040711e:	87fd                	srai	a5,a5,0x1f
20407120:	89be                	mv	s3,a5
20407122:	87ca                	mv	a5,s2
20407124:	884e                	mv	a6,s3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:780
}
20407126:	853e                	mv	a0,a5
20407128:	85c2                	mv	a1,a6
2040712a:	50b2                	lw	ra,44(sp)
2040712c:	5422                	lw	s0,40(sp)
2040712e:	5912                	lw	s2,36(sp)
20407130:	5982                	lw	s3,32(sp)
20407132:	6145                	addi	sp,sp,48
20407134:	8082                	ret

20407136 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:783

unsigned long long  __metal_driver_cpu_mtime_get (struct metal_cpu *cpu)
{
20407136:	7179                	addi	sp,sp,-48
20407138:	d606                	sw	ra,44(sp)
2040713a:	d422                	sw	s0,40(sp)
2040713c:	1800                	addi	s0,sp,48
2040713e:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:784
    unsigned long long time = 0;
20407142:	4781                	li	a5,0
20407144:	4801                	li	a6,0
20407146:	fef42023          	sw	a5,-32(s0)
2040714a:	ff042223          	sw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:787
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
2040714e:	fdc42503          	lw	a0,-36(s0)
20407152:	a7ffe0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
20407156:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:789

    if (intc) {
2040715a:	fec42783          	lw	a5,-20(s0)
2040715e:	c78d                	beqz	a5,20407188 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:790
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20407160:	fec42783          	lw	a5,-20(s0)
20407164:	13c7a783          	lw	a5,316(a5)
20407168:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:791
        if (tmr_intc) {
2040716c:	fe842783          	lw	a5,-24(s0)
20407170:	cf81                	beqz	a5,20407188 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:792
            tmr_intc->vtable->command_request(tmr_intc,
20407172:	fe842783          	lw	a5,-24(s0)
20407176:	439c                	lw	a5,0(a5)
20407178:	43f8                	lw	a4,68(a5)
2040717a:	fe040793          	addi	a5,s0,-32
2040717e:	863e                	mv	a2,a5
20407180:	4585                	li	a1,1
20407182:	fe842503          	lw	a0,-24(s0)
20407186:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:796
                                              METAL_TIMER_MTIME_GET, &time);
        }
    }
    return time;
20407188:	fe042783          	lw	a5,-32(s0)
2040718c:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:797
}
20407190:	853e                	mv	a0,a5
20407192:	85c2                	mv	a1,a6
20407194:	50b2                	lw	ra,44(sp)
20407196:	5422                	lw	s0,40(sp)
20407198:	6145                	addi	sp,sp,48
2040719a:	8082                	ret

2040719c <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:800

int __metal_driver_cpu_mtimecmp_set (struct metal_cpu *cpu, unsigned long long time)
{
2040719c:	7179                	addi	sp,sp,-48
2040719e:	d606                	sw	ra,44(sp)
204071a0:	d422                	sw	s0,40(sp)
204071a2:	d226                	sw	s1,36(sp)
204071a4:	1800                	addi	s0,sp,48
204071a6:	fca42e23          	sw	a0,-36(s0)
204071aa:	fcb42823          	sw	a1,-48(s0)
204071ae:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    int rc = -1;
204071b2:	57fd                	li	a5,-1
204071b4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
204071b8:	fdc42503          	lw	a0,-36(s0)
204071bc:	a15fe0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204071c0:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:806

    if (intc) {
204071c4:	fe842783          	lw	a5,-24(s0)
204071c8:	cf8d                	beqz	a5,20407202 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
204071ca:	fe842783          	lw	a5,-24(s0)
204071ce:	13c7a783          	lw	a5,316(a5)
204071d2:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
        if (tmr_intc) {
204071d6:	fe442783          	lw	a5,-28(s0)
204071da:	c785                	beqz	a5,20407202 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:809
            rc = tmr_intc->vtable->mtimecmp_set(tmr_intc,
204071dc:	fe442783          	lw	a5,-28(s0)
204071e0:	439c                	lw	a5,0(a5)
204071e2:	47a4                	lw	s1,72(a5)
204071e4:	fdc42503          	lw	a0,-36(s0)
204071e8:	99bfe0ef          	jal	ra,20405b82 <__metal_driver_cpu_hartid>
204071ec:	87aa                	mv	a5,a0
204071ee:	fd042603          	lw	a2,-48(s0)
204071f2:	fd442683          	lw	a3,-44(s0)
204071f6:	85be                	mv	a1,a5
204071f8:	fe442503          	lw	a0,-28(s0)
204071fc:	9482                	jalr	s1
204071fe:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:814
                                                __metal_driver_cpu_hartid(cpu),
                                                time);
        }
    }
    return rc;
20407202:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:815
}
20407206:	853e                	mv	a0,a5
20407208:	50b2                	lw	ra,44(sp)
2040720a:	5422                	lw	s0,40(sp)
2040720c:	5492                	lw	s1,36(sp)
2040720e:	6145                	addi	sp,sp,48
20407210:	8082                	ret

20407212 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:819

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu)
{
20407212:	1101                	addi	sp,sp,-32
20407214:	ce22                	sw	s0,28(sp)
20407216:	1000                	addi	s0,sp,32
20407218:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2040721c:	800007b7          	lui	a5,0x80000
20407220:	77478793          	addi	a5,a5,1908 # 80000774 <metal_segment_heap_target_end+0xffffe920>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20407224:	853e                	mv	a0,a5
20407226:	4472                	lw	s0,28(sp)
20407228:	6105                	addi	sp,sp,32
2040722a:	8082                	ret

2040722c <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:833

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu)
{
2040722c:	1101                	addi	sp,sp,-32
2040722e:	ce22                	sw	s0,28(sp)
20407230:	1000                	addi	s0,sp,32
20407232:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834
    return METAL_INTERRUPT_ID_TMR;
20407236:	479d                	li	a5,7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
}
20407238:	853e                	mv	a0,a5
2040723a:	4472                	lw	s0,28(sp)
2040723c:	6105                	addi	sp,sp,32
2040723e:	8082                	ret

20407240 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:839

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu)
{
20407240:	1101                	addi	sp,sp,-32
20407242:	ce22                	sw	s0,28(sp)
20407244:	1000                	addi	s0,sp,32
20407246:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:841
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2040724a:	800007b7          	lui	a5,0x80000
2040724e:	77478793          	addi	a5,a5,1908 # 80000774 <metal_segment_heap_target_end+0xffffe920>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:850
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20407252:	853e                	mv	a0,a5
20407254:	4472                	lw	s0,28(sp)
20407256:	6105                	addi	sp,sp,32
20407258:	8082                	ret

2040725a <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:853

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu)
{
2040725a:	1101                	addi	sp,sp,-32
2040725c:	ce22                	sw	s0,28(sp)
2040725e:	1000                	addi	s0,sp,32
20407260:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:854
    return METAL_INTERRUPT_ID_SW;
20407264:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:855
}
20407266:	853e                	mv	a0,a5
20407268:	4472                	lw	s0,28(sp)
2040726a:	6105                	addi	sp,sp,32
2040726c:	8082                	ret

2040726e <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:858

int __metal_driver_cpu_set_sw_ipi (struct metal_cpu *cpu, int hartid)
{
2040726e:	7179                	addi	sp,sp,-48
20407270:	d606                	sw	ra,44(sp)
20407272:	d422                	sw	s0,40(sp)
20407274:	1800                	addi	s0,sp,48
20407276:	fca42e23          	sw	a0,-36(s0)
2040727a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:859
    int rc = -1;
2040727e:	57fd                	li	a5,-1
20407280:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:862
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc = 
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20407284:	fdc42503          	lw	a0,-36(s0)
20407288:	949fe0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
2040728c:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:864

    if (intc) {
20407290:	fe842783          	lw	a5,-24(s0)
20407294:	c79d                	beqz	a5,204072c2 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:865
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20407296:	fe842783          	lw	a5,-24(s0)
2040729a:	0dc7a783          	lw	a5,220(a5)
2040729e:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:866
        if (sw_intc) {
204072a2:	fe442783          	lw	a5,-28(s0)
204072a6:	cf91                	beqz	a5,204072c2 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:867
            rc = sw_intc->vtable->command_request(sw_intc,
204072a8:	fe442783          	lw	a5,-28(s0)
204072ac:	439c                	lw	a5,0(a5)
204072ae:	43f8                	lw	a4,68(a5)
204072b0:	fd840793          	addi	a5,s0,-40
204072b4:	863e                	mv	a2,a5
204072b6:	458d                	li	a1,3
204072b8:	fe442503          	lw	a0,-28(s0)
204072bc:	9702                	jalr	a4
204072be:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:871
                                                  METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
204072c2:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:872
}
204072c6:	853e                	mv	a0,a5
204072c8:	50b2                	lw	ra,44(sp)
204072ca:	5422                	lw	s0,40(sp)
204072cc:	6145                	addi	sp,sp,48
204072ce:	8082                	ret

204072d0 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:875

int __metal_driver_cpu_clear_sw_ipi (struct metal_cpu *cpu, int hartid)
{
204072d0:	7179                	addi	sp,sp,-48
204072d2:	d606                	sw	ra,44(sp)
204072d4:	d422                	sw	s0,40(sp)
204072d6:	1800                	addi	s0,sp,48
204072d8:	fca42e23          	sw	a0,-36(s0)
204072dc:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:876
    int rc = -1;
204072e0:	57fd                	li	a5,-1
204072e2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:879
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
204072e6:	fdc42503          	lw	a0,-36(s0)
204072ea:	8e7fe0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204072ee:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:881

    if (intc) {
204072f2:	fe842783          	lw	a5,-24(s0)
204072f6:	c79d                	beqz	a5,20407324 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:882
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204072f8:	fe842783          	lw	a5,-24(s0)
204072fc:	0dc7a783          	lw	a5,220(a5)
20407300:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:883
        if (sw_intc) {
20407304:	fe442783          	lw	a5,-28(s0)
20407308:	cf91                	beqz	a5,20407324 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:884
            rc = sw_intc->vtable->command_request(sw_intc,
2040730a:	fe442783          	lw	a5,-28(s0)
2040730e:	439c                	lw	a5,0(a5)
20407310:	43f8                	lw	a4,68(a5)
20407312:	fd840793          	addi	a5,s0,-40
20407316:	863e                	mv	a2,a5
20407318:	4589                	li	a1,2
2040731a:	fe442503          	lw	a0,-28(s0)
2040731e:	9702                	jalr	a4
20407320:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:888
                                                  METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20407324:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:889
}
20407328:	853e                	mv	a0,a5
2040732a:	50b2                	lw	ra,44(sp)
2040732c:	5422                	lw	s0,40(sp)
2040732e:	6145                	addi	sp,sp,48
20407330:	8082                	ret

20407332 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:892

int __metal_driver_cpu_get_msip (struct metal_cpu *cpu, int hartid)
{
20407332:	7179                	addi	sp,sp,-48
20407334:	d606                	sw	ra,44(sp)
20407336:	d422                	sw	s0,40(sp)
20407338:	1800                	addi	s0,sp,48
2040733a:	fca42e23          	sw	a0,-36(s0)
2040733e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:893
    int rc = 0;
20407342:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:896
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20407346:	fdc42503          	lw	a0,-36(s0)
2040734a:	887fe0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
2040734e:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:898

    if (intc) {
20407352:	fe842783          	lw	a5,-24(s0)
20407356:	c79d                	beqz	a5,20407384 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:899
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20407358:	fe842783          	lw	a5,-24(s0)
2040735c:	0dc7a783          	lw	a5,220(a5)
20407360:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:900
        if (sw_intc) {
20407364:	fe442783          	lw	a5,-28(s0)
20407368:	cf91                	beqz	a5,20407384 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:901
            rc = sw_intc->vtable->command_request(sw_intc,
2040736a:	fe442783          	lw	a5,-28(s0)
2040736e:	439c                	lw	a5,0(a5)
20407370:	43f8                	lw	a4,68(a5)
20407372:	fd840793          	addi	a5,s0,-40
20407376:	863e                	mv	a2,a5
20407378:	4591                	li	a1,4
2040737a:	fe442503          	lw	a0,-28(s0)
2040737e:	9702                	jalr	a4
20407380:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:905
                                                  METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20407384:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:906
}
20407388:	853e                	mv	a0,a5
2040738a:	50b2                	lw	ra,44(sp)
2040738c:	5422                	lw	s0,40(sp)
2040738e:	6145                	addi	sp,sp,48
20407390:	8082                	ret

20407392 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:910

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu)
{
20407392:	1101                	addi	sp,sp,-32
20407394:	ce06                	sw	ra,28(sp)
20407396:	cc22                	sw	s0,24(sp)
20407398:	1000                	addi	s0,sp,32
2040739a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:911
    return __metal_driver_cpu_interrupt_controller(cpu);
2040739e:	fec42503          	lw	a0,-20(s0)
204073a2:	82ffe0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204073a6:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:912
}
204073a8:	853e                	mv	a0,a5
204073aa:	40f2                	lw	ra,28(sp)
204073ac:	4462                	lw	s0,24(sp)
204073ae:	6105                	addi	sp,sp,32
204073b0:	8082                	ret

204073b2 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:936
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
				        metal_exception_handler_t isr)
{
204073b2:	7179                	addi	sp,sp,-48
204073b4:	d606                	sw	ra,44(sp)
204073b6:	d422                	sw	s0,40(sp)
204073b8:	1800                	addi	s0,sp,48
204073ba:	fca42e23          	sw	a0,-36(s0)
204073be:	fcb42c23          	sw	a1,-40(s0)
204073c2:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:938
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
204073c6:	fdc42503          	lw	a0,-36(s0)
204073ca:	807fe0ef          	jal	ra,20405bd0 <__metal_driver_cpu_interrupt_controller>
204073ce:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:940

    if (intc) {
204073d2:	fec42783          	lw	a5,-20(s0)
204073d6:	cb99                	beqz	a5,204073ec <__metal_driver_cpu_exception_register+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:941
        return __metal_exception_register((struct metal_interrupt *)intc, ecode, isr);
204073d8:	fd442603          	lw	a2,-44(s0)
204073dc:	fd842583          	lw	a1,-40(s0)
204073e0:	fec42503          	lw	a0,-20(s0)
204073e4:	8d3ff0ef          	jal	ra,20406cb6 <__metal_exception_register>
204073e8:	87aa                	mv	a5,a0
204073ea:	a011                	j	204073ee <__metal_driver_cpu_exception_register+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:943
    }
    return -1;
204073ec:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:944
}
204073ee:	853e                	mv	a0,a5
204073f0:	50b2                	lw	ra,44(sp)
204073f2:	5422                	lw	s0,40(sp)
204073f4:	6145                	addi	sp,sp,48
204073f6:	8082                	ret

204073f8 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:947

int  __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu, uintptr_t epc)
{
204073f8:	1101                	addi	sp,sp,-32
204073fa:	ce22                	sw	s0,28(sp)
204073fc:	1000                	addi	s0,sp,32
204073fe:	fea42623          	sw	a0,-20(s0)
20407402:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:953
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short*)epc & METAL_INSN_LENGTH_MASK)
20407406:	fe842783          	lw	a5,-24(s0)
2040740a:	0007d783          	lhu	a5,0(a5)
2040740e:	0037f713          	andi	a4,a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954
            == METAL_INSN_NOT_COMPRESSED) ? 4 : 2;
20407412:	478d                	li	a5,3
20407414:	00f71463          	bne	a4,a5,2040741c <__metal_driver_cpu_get_instruction_length+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 1)
20407418:	4791                	li	a5,4
2040741a:	a011                	j	2040741e <__metal_driver_cpu_get_instruction_length+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 2)
2040741c:	4789                	li	a5,2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:955 (discriminator 5)
}
2040741e:	853e                	mv	a0,a5
20407420:	4472                	lw	s0,28(sp)
20407422:	6105                	addi	sp,sp,32
20407424:	8082                	ret

20407426 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:958

uintptr_t  __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu)
{
20407426:	7179                	addi	sp,sp,-48
20407428:	d622                	sw	s0,44(sp)
2040742a:	1800                	addi	s0,sp,48
2040742c:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:960
    uintptr_t mepc;
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
20407430:	341027f3          	csrr	a5,mepc
20407434:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:961
    return mepc;
20407438:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:962
}
2040743c:	853e                	mv	a0,a5
2040743e:	5432                	lw	s0,44(sp)
20407440:	6145                	addi	sp,sp,48
20407442:	8082                	ret

20407444 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:965

int  __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc)
{
20407444:	1101                	addi	sp,sp,-32
20407446:	ce22                	sw	s0,28(sp)
20407448:	1000                	addi	s0,sp,32
2040744a:	fea42623          	sw	a0,-20(s0)
2040744e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:966
    __asm__ volatile ("csrw mepc, %0" :: "r"(mepc));
20407452:	fe842783          	lw	a5,-24(s0)
20407456:	34179073          	csrw	mepc,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:967
    return 0;
2040745a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:968
}
2040745c:	853e                	mv	a0,a5
2040745e:	4472                	lw	s0,28(sp)
20407460:	6105                	addi	sp,sp,32
20407462:	8082                	ret

20407464 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:238



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20407464:	1101                	addi	sp,sp,-32
20407466:	ce22                	sw	s0,28(sp)
20407468:	1000                	addi	s0,sp,32
2040746a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:239
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040746e:	fec42703          	lw	a4,-20(s0)
20407472:	800007b7          	lui	a5,0x80000
20407476:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffe5f4>
2040747a:	00f71563          	bne	a4,a5,20407484 <__metal_driver_sifive_plic0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:240
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2040747e:	0c0007b7          	lui	a5,0xc000
20407482:	a011                	j	20407486 <__metal_driver_sifive_plic0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:243
	}
	else {
		return 0;
20407484:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:245
	}
}
20407486:	853e                	mv	a0,a5
20407488:	4472                	lw	s0,28(sp)
2040748a:	6105                	addi	sp,sp,32
2040748c:	8082                	ret

2040748e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:258
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2040748e:	1101                	addi	sp,sp,-32
20407490:	ce22                	sw	s0,28(sp)
20407492:	1000                	addi	s0,sp,32
20407494:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:259
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20407498:	fec42703          	lw	a4,-20(s0)
2040749c:	800007b7          	lui	a5,0x80000
204074a0:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffe5f4>
204074a4:	00f71463          	bne	a4,a5,204074ac <__metal_driver_sifive_plic0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:260
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
204074a8:	47ed                	li	a5,27
204074aa:	a011                	j	204074ae <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:263
	}
	else {
		return 0;
204074ac:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:265
	}
}
204074ae:	853e                	mv	a0,a5
204074b0:	4472                	lw	s0,28(sp)
204074b2:	6105                	addi	sp,sp,32
204074b4:	8082                	ret

204074b6 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:268

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
204074b6:	1101                	addi	sp,sp,-32
204074b8:	ce22                	sw	s0,28(sp)
204074ba:	1000                	addi	s0,sp,32
204074bc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:269
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204074c0:	fec42703          	lw	a4,-20(s0)
204074c4:	800007b7          	lui	a5,0x80000
204074c8:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffe5f4>
204074cc:	00f71463          	bne	a4,a5,204074d4 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:270
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
204074d0:	479d                	li	a5,7
204074d2:	a011                	j	204074d6 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:273
	}
	else {
		return 0;
204074d4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:275
	}
}
204074d6:	853e                	mv	a0,a5
204074d8:	4472                	lw	s0,28(sp)
204074da:	6105                	addi	sp,sp,32
204074dc:	8082                	ret

204074de <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:278

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204074de:	1101                	addi	sp,sp,-32
204074e0:	ce22                	sw	s0,28(sp)
204074e2:	1000                	addi	s0,sp,32
204074e4:	fea42623          	sw	a0,-20(s0)
204074e8:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:279
	if (idx == 0) {
204074ec:	fe842783          	lw	a5,-24(s0)
204074f0:	e791                	bnez	a5,204074fc <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:280
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204074f2:	800007b7          	lui	a5,0x80000
204074f6:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe23c>
204074fa:	a011                	j	204074fe <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:283
	}
	else {
		return NULL;
204074fc:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:285
	}
}
204074fe:	853e                	mv	a0,a5
20407500:	4472                	lw	s0,28(sp)
20407502:	6105                	addi	sp,sp,32
20407504:	8082                	ret

20407506 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:288

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20407506:	1101                	addi	sp,sp,-32
20407508:	ce22                	sw	s0,28(sp)
2040750a:	1000                	addi	s0,sp,32
2040750c:	fea42623          	sw	a0,-20(s0)
20407510:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:289
	if (idx == 0) {
20407514:	fe842783          	lw	a5,-24(s0)
20407518:	e399                	bnez	a5,2040751e <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:290
		return 11;
2040751a:	47ad                	li	a5,11
2040751c:	a011                	j	20407520 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:293
	}
	else {
		return 0;
2040751e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:295
	}
}
20407520:	853e                	mv	a0,a5
20407522:	4472                	lw	s0,28(sp)
20407524:	6105                	addi	sp,sp,32
20407526:	8082                	ret

20407528 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:14
#include <metal/shutdown.h>
#include <metal/drivers/riscv_plic0.h>
#include <metal/machine.h>

unsigned int __metal_plic0_claim_interrupt (struct __metal_driver_riscv_plic0 *plic)
{
20407528:	7179                	addi	sp,sp,-48
2040752a:	d606                	sw	ra,44(sp)
2040752c:	d422                	sw	s0,40(sp)
2040752e:	1800                	addi	s0,sp,48
20407530:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:15
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20407534:	fdc42503          	lw	a0,-36(s0)
20407538:	3735                	jal	20407464 <__metal_driver_sifive_plic0_control_base>
2040753a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:16
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040753e:	fec42703          	lw	a4,-20(s0)
20407542:	002007b7          	lui	a5,0x200
20407546:	0791                	addi	a5,a5,4
20407548:	97ba                	add	a5,a5,a4
2040754a:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
					      METAL_RISCV_PLIC0_CLAIM));
}
2040754c:	853e                	mv	a0,a5
2040754e:	50b2                	lw	ra,44(sp)
20407550:	5422                	lw	s0,40(sp)
20407552:	6145                	addi	sp,sp,48
20407554:	8082                	ret

20407556 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:22

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
				    unsigned int id)
{
20407556:	7179                	addi	sp,sp,-48
20407558:	d606                	sw	ra,44(sp)
2040755a:	d422                	sw	s0,40(sp)
2040755c:	1800                	addi	s0,sp,48
2040755e:	fca42e23          	sw	a0,-36(s0)
20407562:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:23
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20407566:	fdc42503          	lw	a0,-36(s0)
2040756a:	3ded                	jal	20407464 <__metal_driver_sifive_plic0_control_base>
2040756c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:24
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20407570:	fec42703          	lw	a4,-20(s0)
20407574:	002007b7          	lui	a5,0x200
20407578:	0791                	addi	a5,a5,4
2040757a:	97ba                	add	a5,a5,a4
2040757c:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
				       METAL_RISCV_PLIC0_CLAIM)) = id;
2040757e:	fd842783          	lw	a5,-40(s0)
20407582:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:26
}
20407584:	0001                	nop
20407586:	50b2                	lw	ra,44(sp)
20407588:	5422                	lw	s0,40(sp)
2040758a:	6145                	addi	sp,sp,48
2040758c:	8082                	ret

2040758e <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29

int __metal_plic0_set_threshold(struct metal_interrupt *controller, unsigned int threshold)
{
2040758e:	7179                	addi	sp,sp,-48
20407590:	d606                	sw	ra,44(sp)
20407592:	d422                	sw	s0,40(sp)
20407594:	1800                	addi	s0,sp,48
20407596:	fca42e23          	sw	a0,-36(s0)
2040759a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:30
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
2040759e:	fdc42503          	lw	a0,-36(s0)
204075a2:	35c9                	jal	20407464 <__metal_driver_sifive_plic0_control_base>
204075a4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204075a8:	fec42703          	lw	a4,-20(s0)
204075ac:	002007b7          	lui	a5,0x200
204075b0:	97ba                	add	a5,a5,a4
204075b2:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:32
				       METAL_RISCV_PLIC0_THRESHOLD)) = threshold;
204075b4:	fd842783          	lw	a5,-40(s0)
204075b8:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:33
    return 0;
204075ba:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
}
204075bc:	853e                	mv	a0,a5
204075be:	50b2                	lw	ra,44(sp)
204075c0:	5422                	lw	s0,40(sp)
204075c2:	6145                	addi	sp,sp,48
204075c4:	8082                	ret

204075c6 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:37

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller)
{
204075c6:	7179                	addi	sp,sp,-48
204075c8:	d606                	sw	ra,44(sp)
204075ca:	d422                	sw	s0,40(sp)
204075cc:	1800                	addi	s0,sp,48
204075ce:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
204075d2:	fdc42503          	lw	a0,-36(s0)
204075d6:	3579                	jal	20407464 <__metal_driver_sifive_plic0_control_base>
204075d8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204075dc:	fec42703          	lw	a4,-20(s0)
204075e0:	002007b7          	lui	a5,0x200
204075e4:	97ba                	add	a5,a5,a4
204075e6:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:42
				       METAL_RISCV_PLIC0_THRESHOLD));
}
204075e8:	853e                	mv	a0,a5
204075ea:	50b2                	lw	ra,44(sp)
204075ec:	5422                	lw	s0,40(sp)
204075ee:	6145                	addi	sp,sp,48
204075f0:	8082                	ret

204075f2 <__metal_plic0_set_priority>:
__metal_plic0_set_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45

int __metal_plic0_set_priority(struct metal_interrupt *controller, int id, unsigned int priority)
{
204075f2:	7179                	addi	sp,sp,-48
204075f4:	d606                	sw	ra,44(sp)
204075f6:	d422                	sw	s0,40(sp)
204075f8:	1800                	addi	s0,sp,48
204075fa:	fca42e23          	sw	a0,-36(s0)
204075fe:	fcb42c23          	sw	a1,-40(s0)
20407602:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)controller);
20407606:	fdc42503          	lw	a0,-36(s0)
2040760a:	3da9                	jal	20407464 <__metal_driver_sifive_plic0_control_base>
2040760c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:47
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority((struct metal_interrupt *)controller);
20407610:	fdc42503          	lw	a0,-36(s0)
20407614:	354d                	jal	204074b6 <__metal_driver_sifive_plic0_max_priority>
20407616:	87aa                	mv	a5,a0
20407618:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48
    if ( (max_priority) && (priority < max_priority) ) {
2040761c:	fe842783          	lw	a5,-24(s0)
20407620:	c785                	beqz	a5,20407648 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48 (discriminator 1)
20407622:	fd442703          	lw	a4,-44(s0)
20407626:	fe842783          	lw	a5,-24(s0)
2040762a:	00f77f63          	bgeu	a4,a5,20407648 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49
        __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040762e:	fd842783          	lw	a5,-40(s0)
20407632:	078a                	slli	a5,a5,0x2
20407634:	873e                	mv	a4,a5
20407636:	fec42783          	lw	a5,-20(s0)
2040763a:	97ba                	add	a5,a5,a4
2040763c:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) = priority;
2040763e:	fd442783          	lw	a5,-44(s0)
20407642:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
        return 0;
20407644:	4781                	li	a5,0
20407646:	a011                	j	2040764a <__metal_plic0_set_priority+0x58>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:54
    }
    return -1;
20407648:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:55
}
2040764a:	853e                	mv	a0,a5
2040764c:	50b2                	lw	ra,44(sp)
2040764e:	5422                	lw	s0,40(sp)
20407650:	6145                	addi	sp,sp,48
20407652:	8082                	ret

20407654 <__metal_plic0_get_priority>:
__metal_plic0_get_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:58

unsigned int __metal_plic0_get_priority(struct metal_interrupt *controller, int id)
{
20407654:	7179                	addi	sp,sp,-48
20407656:	d606                	sw	ra,44(sp)
20407658:	d422                	sw	s0,40(sp)
2040765a:	1800                	addi	s0,sp,48
2040765c:	fca42e23          	sw	a0,-36(s0)
20407660:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
20407664:	fdc42503          	lw	a0,-36(s0)
20407668:	3bf5                	jal	20407464 <__metal_driver_sifive_plic0_control_base>
2040766a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:61

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040766e:	fd842783          	lw	a5,-40(s0)
20407672:	078a                	slli	a5,a5,0x2
20407674:	873e                	mv	a4,a5
20407676:	fec42783          	lw	a5,-20(s0)
2040767a:	97ba                	add	a5,a5,a4
2040767c:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
2040767e:	853e                	mv	a0,a5
20407680:	50b2                	lw	ra,44(sp)
20407682:	5422                	lw	s0,40(sp)
20407684:	6145                	addi	sp,sp,48
20407686:	8082                	ret

20407688 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67

void __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic, int id, int enable)
{
20407688:	7179                	addi	sp,sp,-48
2040768a:	d606                	sw	ra,44(sp)
2040768c:	d422                	sw	s0,40(sp)
2040768e:	1800                	addi	s0,sp,48
20407690:	fca42e23          	sw	a0,-36(s0)
20407694:	fcb42c23          	sw	a1,-40(s0)
20407698:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
2040769c:	fdc42503          	lw	a0,-36(s0)
204076a0:	33d1                	jal	20407464 <__metal_driver_sifive_plic0_control_base>
204076a2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71

    current = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204076a6:	fd842783          	lw	a5,-40(s0)
204076aa:	8795                	srai	a5,a5,0x5
204076ac:	078a                	slli	a5,a5,0x2
204076ae:	873e                	mv	a4,a5
204076b0:	fec42783          	lw	a5,-20(s0)
204076b4:	973e                	add	a4,a4,a5
204076b6:	6789                	lui	a5,0x2
204076b8:	97ba                	add	a5,a5,a4
204076ba:	439c                	lw	a5,0(a5)
204076bc:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
						(id >> METAL_PLIC_SOURCE_SHIFT) * 4));
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
					METAL_RISCV_PLIC0_ENABLE_BASE +
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204076c0:	fd442783          	lw	a5,-44(s0)
204076c4:	cf81                	beqz	a5,204076dc <__metal_plic0_enable+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:77 (discriminator 1)
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
204076c6:	fd842783          	lw	a5,-40(s0)
204076ca:	8bfd                	andi	a5,a5,31
204076cc:	4705                	li	a4,1
204076ce:	00f717b3          	sll	a5,a4,a5
204076d2:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 1)
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204076d4:	fe842783          	lw	a5,-24(s0)
204076d8:	8fd9                	or	a5,a5,a4
204076da:	a829                	j	204076f4 <__metal_plic0_enable+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 2)
204076dc:	fd842783          	lw	a5,-40(s0)
204076e0:	8bfd                	andi	a5,a5,31
204076e2:	4705                	li	a4,1
204076e4:	00f717b3          	sll	a5,a4,a5
204076e8:	fff7c793          	not	a5,a5
204076ec:	873e                	mv	a4,a5
204076ee:	fe842783          	lw	a5,-24(s0)
204076f2:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:74
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204076f4:	fd842703          	lw	a4,-40(s0)
204076f8:	8715                	srai	a4,a4,0x5
204076fa:	070a                	slli	a4,a4,0x2
204076fc:	86ba                	mv	a3,a4
204076fe:	fec42703          	lw	a4,-20(s0)
20407702:	96ba                	add	a3,a3,a4
20407704:	6709                	lui	a4,0x2
20407706:	9736                	add	a4,a4,a3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20407708:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:79
}
2040770a:	0001                	nop
2040770c:	50b2                	lw	ra,44(sp)
2040770e:	5422                	lw	s0,40(sp)
20407710:	6145                	addi	sp,sp,48
20407712:	8082                	ret

20407714 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:81

void __metal_plic0_default_handler (int id, void *priv) {
20407714:	1101                	addi	sp,sp,-32
20407716:	ce06                	sw	ra,28(sp)
20407718:	cc22                	sw	s0,24(sp)
2040771a:	1000                	addi	s0,sp,32
2040771c:	fea42623          	sw	a0,-20(s0)
20407720:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:82
    metal_shutdown(300);
20407724:	12c00513          	li	a0,300
20407728:	1d6010ef          	jal	ra,204088fe <metal_shutdown>

2040772c <__metal_plic0_handler>:
__metal_plic0_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86
}

void __metal_plic0_handler (int id, void *priv)
{
2040772c:	7179                	addi	sp,sp,-48
2040772e:	d606                	sw	ra,44(sp)
20407730:	d422                	sw	s0,40(sp)
20407732:	1800                	addi	s0,sp,48
20407734:	fca42e23          	sw	a0,-36(s0)
20407738:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:87
    struct __metal_driver_riscv_plic0 *plic = priv;
2040773c:	fd842783          	lw	a5,-40(s0)
20407740:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int idx = __metal_plic0_claim_interrupt(plic);
20407744:	fec42503          	lw	a0,-20(s0)
20407748:	33c5                	jal	20407528 <__metal_plic0_claim_interrupt>
2040774a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:89
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts((struct metal_interrupt *)plic);
2040774e:	fec42503          	lw	a0,-20(s0)
20407752:	d3dff0ef          	jal	ra,2040748e <__metal_driver_sifive_plic0_num_interrupts>
20407756:	87aa                	mv	a5,a0
20407758:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91

    if ( (idx < num_interrupts) && (plic->metal_exint_table[idx]) ) {
2040775c:	fe842703          	lw	a4,-24(s0)
20407760:	fe442783          	lw	a5,-28(s0)
20407764:	04f77263          	bgeu	a4,a5,204077a8 <__metal_plic0_handler+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91 (discriminator 1)
20407768:	fec42703          	lw	a4,-20(s0)
2040776c:	fe842783          	lw	a5,-24(s0)
20407770:	078a                	slli	a5,a5,0x2
20407772:	97ba                	add	a5,a5,a4
20407774:	479c                	lw	a5,8(a5)
20407776:	cb8d                	beqz	a5,204077a8 <__metal_plic0_handler+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:92
	plic->metal_exint_table[idx](idx,
20407778:	fec42703          	lw	a4,-20(s0)
2040777c:	fe842783          	lw	a5,-24(s0)
20407780:	078a                	slli	a5,a5,0x2
20407782:	97ba                	add	a5,a5,a4
20407784:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20407788:	fe842603          	lw	a2,-24(s0)
2040778c:	fec42683          	lw	a3,-20(s0)
20407790:	fe842703          	lw	a4,-24(s0)
20407794:	87ba                	mv	a5,a4
20407796:	0786                	slli	a5,a5,0x1
20407798:	97ba                	add	a5,a5,a4
2040779a:	078e                	slli	a5,a5,0x3
2040779c:	97b6                	add	a5,a5,a3
2040779e:	0887a783          	lw	a5,136(a5)
204077a2:	85be                	mv	a1,a5
204077a4:	8532                	mv	a0,a2
204077a6:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:96
				  plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, idx);
204077a8:	fe842583          	lw	a1,-24(s0)
204077ac:	fec42503          	lw	a0,-20(s0)
204077b0:	da7ff0ef          	jal	ra,20407556 <__metal_plic0_complete_interrupt>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:97
}
204077b4:	0001                	nop
204077b6:	50b2                	lw	ra,44(sp)
204077b8:	5422                	lw	s0,40(sp)
204077ba:	6145                	addi	sp,sp,48
204077bc:	8082                	ret

204077be <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100

void __metal_driver_riscv_plic0_init (struct metal_interrupt *controller)
{
204077be:	7139                	addi	sp,sp,-64
204077c0:	de06                	sw	ra,60(sp)
204077c2:	dc22                	sw	s0,56(sp)
204077c4:	0080                	addi	s0,sp,64
204077c6:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:101
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204077ca:	fcc42783          	lw	a5,-52(s0)
204077ce:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103

    if ( !plic->init_done ) {
204077d2:	fe442783          	lw	a5,-28(s0)
204077d6:	43dc                	lw	a5,4(a5)
204077d8:	12079063          	bnez	a5,204078f8 <__metal_driver_riscv_plic0_init+0x13a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107
        int num_interrupts, line;
        struct metal_interrupt *intc;

	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
204077dc:	fe042623          	sw	zero,-20(s0)
204077e0:	a221                	j	204078e8 <__metal_driver_riscv_plic0_init+0x12a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
	    num_interrupts = __metal_driver_sifive_plic0_num_interrupts(controller);
204077e2:	fcc42503          	lw	a0,-52(s0)
204077e6:	ca9ff0ef          	jal	ra,2040748e <__metal_driver_sifive_plic0_num_interrupts>
204077ea:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:109
	    intc = __metal_driver_sifive_plic0_interrupt_parents(controller, parent);
204077ee:	fec42583          	lw	a1,-20(s0)
204077f2:	fcc42503          	lw	a0,-52(s0)
204077f6:	ce9ff0ef          	jal	ra,204074de <__metal_driver_sifive_plic0_interrupt_parents>
204077fa:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
	    line = __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
204077fe:	fec42583          	lw	a1,-20(s0)
20407802:	fcc42503          	lw	a0,-52(s0)
20407806:	d01ff0ef          	jal	ra,20407506 <__metal_driver_sifive_plic0_interrupt_lines>
2040780a:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:113

	    /* Initialize ist parent controller, aka cpu_intc. */
	    intc->vtable->interrupt_init(intc);
2040780e:	fdc42783          	lw	a5,-36(s0)
20407812:	439c                	lw	a5,0(a5)
20407814:	439c                	lw	a5,0(a5)
20407816:	fdc42503          	lw	a0,-36(s0)
2040781a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115

	    for (int i = 0; i < num_interrupts; i++) {
2040781c:	fe042423          	sw	zero,-24(s0)
20407820:	a085                	j	20407880 <__metal_driver_riscv_plic0_init+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116 (discriminator 3)
		__metal_plic0_enable(plic, i, METAL_DISABLE);
20407822:	4601                	li	a2,0
20407824:	fe842583          	lw	a1,-24(s0)
20407828:	fe442503          	lw	a0,-28(s0)
2040782c:	3db1                	jal	20407688 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:117 (discriminator 3)
		__metal_plic0_set_priority(controller, i, 0);
2040782e:	4601                	li	a2,0
20407830:	fe842583          	lw	a1,-24(s0)
20407834:	fcc42503          	lw	a0,-52(s0)
20407838:	3b6d                	jal	204075f2 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:118 (discriminator 3)
		plic->metal_exint_table[i] = NULL;
2040783a:	fe442703          	lw	a4,-28(s0)
2040783e:	fe842783          	lw	a5,-24(s0)
20407842:	078a                	slli	a5,a5,0x2
20407844:	97ba                	add	a5,a5,a4
20407846:	0007a423          	sw	zero,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:119 (discriminator 3)
		plic->metal_exdata_table[i].sub_int = NULL;
2040784a:	fe442683          	lw	a3,-28(s0)
2040784e:	fe842703          	lw	a4,-24(s0)
20407852:	87ba                	mv	a5,a4
20407854:	0786                	slli	a5,a5,0x1
20407856:	97ba                	add	a5,a5,a4
20407858:	078e                	slli	a5,a5,0x3
2040785a:	97b6                	add	a5,a5,a3
2040785c:	0807a223          	sw	zero,132(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120 (discriminator 3)
		plic->metal_exdata_table[i].exint_data = NULL;
20407860:	fe442683          	lw	a3,-28(s0)
20407864:	fe842703          	lw	a4,-24(s0)
20407868:	87ba                	mv	a5,a4
2040786a:	0786                	slli	a5,a5,0x1
2040786c:	97ba                	add	a5,a5,a4
2040786e:	078e                	slli	a5,a5,0x3
20407870:	97b6                	add	a5,a5,a3
20407872:	0807a423          	sw	zero,136(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 3)
	    for (int i = 0; i < num_interrupts; i++) {
20407876:	fe842783          	lw	a5,-24(s0)
2040787a:	0785                	addi	a5,a5,1
2040787c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20407880:	fe842703          	lw	a4,-24(s0)
20407884:	fe042783          	lw	a5,-32(s0)
20407888:	f8f74de3          	blt	a4,a5,20407822 <__metal_driver_riscv_plic0_init+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123 (discriminator 2)
	    }

	    __metal_plic0_set_threshold(controller, 0);
2040788c:	4581                	li	a1,0
2040788e:	fcc42503          	lw	a0,-52(s0)
20407892:	cfdff0ef          	jal	ra,2040758e <__metal_plic0_set_threshold>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126 (discriminator 2)

	    /* Register plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_register(intc, line, NULL, plic);
20407896:	fdc42783          	lw	a5,-36(s0)
2040789a:	439c                	lw	a5,0(a5)
2040789c:	4fdc                	lw	a5,28(a5)
2040789e:	fe442683          	lw	a3,-28(s0)
204078a2:	4601                	li	a2,0
204078a4:	fd842583          	lw	a1,-40(s0)
204078a8:	fdc42503          	lw	a0,-36(s0)
204078ac:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:128 (discriminator 2)
	    /* Register plic handler for dispatching its device interrupts */
	    intc->vtable->interrupt_register(intc, line, __metal_plic0_handler, plic);
204078ae:	fdc42783          	lw	a5,-36(s0)
204078b2:	439c                	lw	a5,0(a5)
204078b4:	4fd8                	lw	a4,28(a5)
204078b6:	fe442683          	lw	a3,-28(s0)
204078ba:	204077b7          	lui	a5,0x20407
204078be:	72c78613          	addi	a2,a5,1836 # 2040772c <__metal_plic0_handler>
204078c2:	fd842583          	lw	a1,-40(s0)
204078c6:	fdc42503          	lw	a0,-36(s0)
204078ca:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
	    /* Enable plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_enable(intc, line);
204078cc:	fdc42783          	lw	a5,-36(s0)
204078d0:	439c                	lw	a5,0(a5)
204078d2:	53dc                	lw	a5,36(a5)
204078d4:	fd842583          	lw	a1,-40(s0)
204078d8:	fdc42503          	lw	a0,-36(s0)
204078dc:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 2)
	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
204078de:	fec42783          	lw	a5,-20(s0)
204078e2:	0785                	addi	a5,a5,1
204078e4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 1)
204078e8:	fec42783          	lw	a5,-20(s0)
204078ec:	eef05be3          	blez	a5,204077e2 <__metal_driver_riscv_plic0_init+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
	}
        plic->init_done = 1;
204078f0:	fe442783          	lw	a5,-28(s0)
204078f4:	4705                	li	a4,1
204078f6:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:134
    }
}
204078f8:	0001                	nop
204078fa:	50f2                	lw	ra,60(sp)
204078fc:	5462                	lw	s0,56(sp)
204078fe:	6121                	addi	sp,sp,64
20407900:	8082                	ret

20407902 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

int __metal_driver_riscv_plic0_register (struct metal_interrupt *controller,
			               int id, metal_interrupt_handler_t isr,
			               void *priv)
{
20407902:	7179                	addi	sp,sp,-48
20407904:	d606                	sw	ra,44(sp)
20407906:	d422                	sw	s0,40(sp)
20407908:	1800                	addi	s0,sp,48
2040790a:	fca42e23          	sw	a0,-36(s0)
2040790e:	fcb42c23          	sw	a1,-40(s0)
20407912:	fcc42a23          	sw	a2,-44(s0)
20407916:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:140
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040791a:	fdc42783          	lw	a5,-36(s0)
2040791e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20407922:	fdc42503          	lw	a0,-36(s0)
20407926:	b69ff0ef          	jal	ra,2040748e <__metal_driver_sifive_plic0_num_interrupts>
2040792a:	872a                	mv	a4,a0
2040792c:	fd842783          	lw	a5,-40(s0)
20407930:	00e7c463          	blt	a5,a4,20407938 <__metal_driver_riscv_plic0_register+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
        return -1;
20407934:	57fd                	li	a5,-1
20407936:	a051                	j	204079ba <__metal_driver_riscv_plic0_register+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
    }
 
    if (isr) {
20407938:	fd442783          	lw	a5,-44(s0)
2040793c:	cf9d                	beqz	a5,2040797a <__metal_driver_riscv_plic0_register+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
        __metal_plic0_set_priority(controller, id, 2);
2040793e:	4609                	li	a2,2
20407940:	fd842583          	lw	a1,-40(s0)
20407944:	fdc42503          	lw	a0,-36(s0)
20407948:	cabff0ef          	jal	ra,204075f2 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:148
	plic->metal_exint_table[id] = isr;
2040794c:	fec42703          	lw	a4,-20(s0)
20407950:	fd842783          	lw	a5,-40(s0)
20407954:	078a                	slli	a5,a5,0x2
20407956:	97ba                	add	a5,a5,a4
20407958:	fd442703          	lw	a4,-44(s0)
2040795c:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:149
	plic->metal_exdata_table[id].exint_data = priv;
2040795e:	fec42683          	lw	a3,-20(s0)
20407962:	fd842703          	lw	a4,-40(s0)
20407966:	87ba                	mv	a5,a4
20407968:	0786                	slli	a5,a5,0x1
2040796a:	97ba                	add	a5,a5,a4
2040796c:	078e                	slli	a5,a5,0x3
2040796e:	97b6                	add	a5,a5,a3
20407970:	fd042703          	lw	a4,-48(s0)
20407974:	08e7a423          	sw	a4,136(a5)
20407978:	a081                	j	204079b8 <__metal_driver_riscv_plic0_register+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151
    } else {
        __metal_plic0_set_priority(controller, id, 1);
2040797a:	4605                	li	a2,1
2040797c:	fd842583          	lw	a1,-40(s0)
20407980:	fdc42503          	lw	a0,-36(s0)
20407984:	c6fff0ef          	jal	ra,204075f2 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:152
	plic->metal_exint_table[id] = __metal_plic0_default_handler;
20407988:	fec42703          	lw	a4,-20(s0)
2040798c:	fd842783          	lw	a5,-40(s0)
20407990:	078a                	slli	a5,a5,0x2
20407992:	97ba                	add	a5,a5,a4
20407994:	20407737          	lui	a4,0x20407
20407998:	71470713          	addi	a4,a4,1812 # 20407714 <__metal_plic0_default_handler>
2040799c:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:153
	plic->metal_exdata_table[id].sub_int = priv;
2040799e:	fec42683          	lw	a3,-20(s0)
204079a2:	fd842703          	lw	a4,-40(s0)
204079a6:	87ba                	mv	a5,a4
204079a8:	0786                	slli	a5,a5,0x1
204079aa:	97ba                	add	a5,a5,a4
204079ac:	078e                	slli	a5,a5,0x3
204079ae:	97b6                	add	a5,a5,a3
204079b0:	fd042703          	lw	a4,-48(s0)
204079b4:	08e7a223          	sw	a4,132(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156
    }

    return 0;
204079b8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:157
}
204079ba:	853e                	mv	a0,a5
204079bc:	50b2                	lw	ra,44(sp)
204079be:	5422                	lw	s0,40(sp)
204079c0:	6145                	addi	sp,sp,48
204079c2:	8082                	ret

204079c4 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:160

int __metal_driver_riscv_plic0_enable (struct metal_interrupt *controller, int id)
{
204079c4:	7179                	addi	sp,sp,-48
204079c6:	d606                	sw	ra,44(sp)
204079c8:	d422                	sw	s0,40(sp)
204079ca:	1800                	addi	s0,sp,48
204079cc:	fca42e23          	sw	a0,-36(s0)
204079d0:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204079d4:	fdc42783          	lw	a5,-36(s0)
204079d8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204079dc:	fdc42503          	lw	a0,-36(s0)
204079e0:	aafff0ef          	jal	ra,2040748e <__metal_driver_sifive_plic0_num_interrupts>
204079e4:	872a                	mv	a4,a0
204079e6:	fd842783          	lw	a5,-40(s0)
204079ea:	00e7c463          	blt	a5,a4,204079f2 <__metal_driver_riscv_plic0_enable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:164
        return -1;
204079ee:	57fd                	li	a5,-1
204079f0:	a809                	j	20407a02 <__metal_driver_riscv_plic0_enable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167
    }

    __metal_plic0_enable(plic, id, METAL_ENABLE);
204079f2:	4605                	li	a2,1
204079f4:	fd842583          	lw	a1,-40(s0)
204079f8:	fec42503          	lw	a0,-20(s0)
204079fc:	c8dff0ef          	jal	ra,20407688 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    return 0;
20407a00:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:169
}
20407a02:	853e                	mv	a0,a5
20407a04:	50b2                	lw	ra,44(sp)
20407a06:	5422                	lw	s0,40(sp)
20407a08:	6145                	addi	sp,sp,48
20407a0a:	8082                	ret

20407a0c <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:172

int __metal_driver_riscv_plic0_disable (struct metal_interrupt *controller, int id)
{
20407a0c:	7179                	addi	sp,sp,-48
20407a0e:	d606                	sw	ra,44(sp)
20407a10:	d422                	sw	s0,40(sp)
20407a12:	1800                	addi	s0,sp,48
20407a14:	fca42e23          	sw	a0,-36(s0)
20407a18:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:173
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407a1c:	fdc42783          	lw	a5,-36(s0)
20407a20:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20407a24:	fdc42503          	lw	a0,-36(s0)
20407a28:	a67ff0ef          	jal	ra,2040748e <__metal_driver_sifive_plic0_num_interrupts>
20407a2c:	872a                	mv	a4,a0
20407a2e:	fd842783          	lw	a5,-40(s0)
20407a32:	00e7c463          	blt	a5,a4,20407a3a <__metal_driver_riscv_plic0_disable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        return -1;
20407a36:	57fd                	li	a5,-1
20407a38:	a809                	j	20407a4a <__metal_driver_riscv_plic0_disable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:178
    }
    __metal_plic0_enable(plic, id, METAL_DISABLE);
20407a3a:	4601                	li	a2,0
20407a3c:	fd842583          	lw	a1,-40(s0)
20407a40:	fec42503          	lw	a0,-20(s0)
20407a44:	c45ff0ef          	jal	ra,20407688 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    return 0;
20407a48:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
}
20407a4a:	853e                	mv	a0,a5
20407a4c:	50b2                	lw	ra,44(sp)
20407a4e:	5422                	lw	s0,40(sp)
20407a50:	6145                	addi	sp,sp,48
20407a52:	8082                	ret

20407a54 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:388
/* --------------------- sifive_global_external_interrupts0 ------------ */


/* --------------------- sifive_gpio0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_gpio0_base(struct metal_gpio *gpio)
{
20407a54:	1101                	addi	sp,sp,-32
20407a56:	ce22                	sw	s0,28(sp)
20407a58:	1000                	addi	s0,sp,32
20407a5a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:389
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20407a5e:	fec42703          	lw	a4,-20(s0)
20407a62:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407a66:	00f71563          	bne	a4,a5,20407a70 <__metal_driver_sifive_gpio0_base+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:390
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20407a6a:	100127b7          	lui	a5,0x10012
20407a6e:	a011                	j	20407a72 <__metal_driver_sifive_gpio0_base+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:393
	}
	else {
		return 0;
20407a70:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:395
	}
}
20407a72:	853e                	mv	a0,a5
20407a74:	4472                	lw	s0,28(sp)
20407a76:	6105                	addi	sp,sp,32
20407a78:	8082                	ret

20407a7a <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:418
		return 0;
	}
}

static __inline__ struct metal_interrupt * __metal_driver_sifive_gpio0_interrupt_parent(struct metal_gpio *gpio)
{
20407a7a:	1101                	addi	sp,sp,-32
20407a7c:	ce22                	sw	s0,28(sp)
20407a7e:	1000                	addi	s0,sp,32
20407a80:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:419
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20407a84:	fec42703          	lw	a4,-20(s0)
20407a88:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407a8c:	00f71763          	bne	a4,a5,20407a9a <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:420
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20407a90:	800007b7          	lui	a5,0x80000
20407a94:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffe5f4>
20407a98:	a011                	j	20407a9c <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:423
	}
	else {
		return 0;
20407a9a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:425
	}
}
20407a9c:	853e                	mv	a0,a5
20407a9e:	4472                	lw	s0,28(sp)
20407aa0:	6105                	addi	sp,sp,32
20407aa2:	8082                	ret

20407aa4 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:428

static __inline__ int __metal_driver_sifive_gpio0_interrupt_lines(struct metal_gpio *gpio, int idx)
{
20407aa4:	1101                	addi	sp,sp,-32
20407aa6:	ce22                	sw	s0,28(sp)
20407aa8:	1000                	addi	s0,sp,32
20407aaa:	fea42623          	sw	a0,-20(s0)
20407aae:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:429
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20407ab2:	fec42703          	lw	a4,-20(s0)
20407ab6:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407aba:	00f71763          	bne	a4,a5,20407ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:429 (discriminator 1)
20407abe:	fe842783          	lw	a5,-24(s0)
20407ac2:	e399                	bnez	a5,20407ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:430
		return 7;
20407ac4:	479d                	li	a5,7
20407ac6:	a269                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:432
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20407ac8:	fec42703          	lw	a4,-20(s0)
20407acc:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407ad0:	00f71963          	bne	a4,a5,20407ae2 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:432 (discriminator 1)
20407ad4:	fe842703          	lw	a4,-24(s0)
20407ad8:	4785                	li	a5,1
20407ada:	00f71463          	bne	a4,a5,20407ae2 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:433
		return 8;
20407ade:	47a1                	li	a5,8
20407ae0:	aa85                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:435
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20407ae2:	fec42703          	lw	a4,-20(s0)
20407ae6:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407aea:	00f71963          	bne	a4,a5,20407afc <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:435 (discriminator 1)
20407aee:	fe842703          	lw	a4,-24(s0)
20407af2:	4789                	li	a5,2
20407af4:	00f71463          	bne	a4,a5,20407afc <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:436
		return 9;
20407af8:	47a5                	li	a5,9
20407afa:	aa99                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:438
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20407afc:	fec42703          	lw	a4,-20(s0)
20407b00:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407b04:	00f71963          	bne	a4,a5,20407b16 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:438 (discriminator 1)
20407b08:	fe842703          	lw	a4,-24(s0)
20407b0c:	478d                	li	a5,3
20407b0e:	00f71463          	bne	a4,a5,20407b16 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:439
		return 10;
20407b12:	47a9                	li	a5,10
20407b14:	aa35                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:441
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20407b16:	fec42703          	lw	a4,-20(s0)
20407b1a:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407b1e:	00f71963          	bne	a4,a5,20407b30 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:441 (discriminator 1)
20407b22:	fe842703          	lw	a4,-24(s0)
20407b26:	4791                	li	a5,4
20407b28:	00f71463          	bne	a4,a5,20407b30 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:442
		return 11;
20407b2c:	47ad                	li	a5,11
20407b2e:	a20d                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:444
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20407b30:	fec42703          	lw	a4,-20(s0)
20407b34:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407b38:	00f71963          	bne	a4,a5,20407b4a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:444 (discriminator 1)
20407b3c:	fe842703          	lw	a4,-24(s0)
20407b40:	4795                	li	a5,5
20407b42:	00f71463          	bne	a4,a5,20407b4a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:445
		return 12;
20407b46:	47b1                	li	a5,12
20407b48:	a221                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:447
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20407b4a:	fec42703          	lw	a4,-20(s0)
20407b4e:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407b52:	00f71963          	bne	a4,a5,20407b64 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:447 (discriminator 1)
20407b56:	fe842703          	lw	a4,-24(s0)
20407b5a:	4799                	li	a5,6
20407b5c:	00f71463          	bne	a4,a5,20407b64 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:448
		return 13;
20407b60:	47b5                	li	a5,13
20407b62:	a0fd                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:450
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20407b64:	fec42703          	lw	a4,-20(s0)
20407b68:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407b6c:	00f71963          	bne	a4,a5,20407b7e <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:450 (discriminator 1)
20407b70:	fe842703          	lw	a4,-24(s0)
20407b74:	479d                	li	a5,7
20407b76:	00f71463          	bne	a4,a5,20407b7e <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:451
		return 14;
20407b7a:	47b9                	li	a5,14
20407b7c:	a8d1                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:453
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20407b7e:	fec42703          	lw	a4,-20(s0)
20407b82:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407b86:	00f71963          	bne	a4,a5,20407b98 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:453 (discriminator 1)
20407b8a:	fe842703          	lw	a4,-24(s0)
20407b8e:	47a1                	li	a5,8
20407b90:	00f71463          	bne	a4,a5,20407b98 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:454
		return 15;
20407b94:	47bd                	li	a5,15
20407b96:	a86d                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:456
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20407b98:	fec42703          	lw	a4,-20(s0)
20407b9c:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407ba0:	00f71963          	bne	a4,a5,20407bb2 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:456 (discriminator 1)
20407ba4:	fe842703          	lw	a4,-24(s0)
20407ba8:	47a5                	li	a5,9
20407baa:	00f71463          	bne	a4,a5,20407bb2 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:457
		return 16;
20407bae:	47c1                	li	a5,16
20407bb0:	a045                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:459
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20407bb2:	fec42703          	lw	a4,-20(s0)
20407bb6:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407bba:	00f71963          	bne	a4,a5,20407bcc <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:459 (discriminator 1)
20407bbe:	fe842703          	lw	a4,-24(s0)
20407bc2:	47a9                	li	a5,10
20407bc4:	00f71463          	bne	a4,a5,20407bcc <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:460
		return 17;
20407bc8:	47c5                	li	a5,17
20407bca:	a059                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:462
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20407bcc:	fec42703          	lw	a4,-20(s0)
20407bd0:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407bd4:	00f71963          	bne	a4,a5,20407be6 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:462 (discriminator 1)
20407bd8:	fe842703          	lw	a4,-24(s0)
20407bdc:	47ad                	li	a5,11
20407bde:	00f71463          	bne	a4,a5,20407be6 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:463
		return 18;
20407be2:	47c9                	li	a5,18
20407be4:	a0b5                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:465
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20407be6:	fec42703          	lw	a4,-20(s0)
20407bea:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407bee:	00f71963          	bne	a4,a5,20407c00 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:465 (discriminator 1)
20407bf2:	fe842703          	lw	a4,-24(s0)
20407bf6:	47b1                	li	a5,12
20407bf8:	00f71463          	bne	a4,a5,20407c00 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:466
		return 19;
20407bfc:	47cd                	li	a5,19
20407bfe:	a889                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:468
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20407c00:	fec42703          	lw	a4,-20(s0)
20407c04:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407c08:	00f71963          	bne	a4,a5,20407c1a <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:468 (discriminator 1)
20407c0c:	fe842703          	lw	a4,-24(s0)
20407c10:	47b5                	li	a5,13
20407c12:	00f71463          	bne	a4,a5,20407c1a <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:469
		return 20;
20407c16:	47d1                	li	a5,20
20407c18:	a825                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:471
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20407c1a:	fec42703          	lw	a4,-20(s0)
20407c1e:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407c22:	00f71963          	bne	a4,a5,20407c34 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:471 (discriminator 1)
20407c26:	fe842703          	lw	a4,-24(s0)
20407c2a:	47b9                	li	a5,14
20407c2c:	00f71463          	bne	a4,a5,20407c34 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:472
		return 21;
20407c30:	47d5                	li	a5,21
20407c32:	a839                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:474
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20407c34:	fec42703          	lw	a4,-20(s0)
20407c38:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
20407c3c:	00f71963          	bne	a4,a5,20407c4e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:474 (discriminator 1)
20407c40:	fe842703          	lw	a4,-24(s0)
20407c44:	47bd                	li	a5,15
20407c46:	00f71463          	bne	a4,a5,20407c4e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:475
		return 22;
20407c4a:	47d9                	li	a5,22
20407c4c:	a011                	j	20407c50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:478
	}
	else {
		return 0;
20407c4e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:480
	}
}
20407c50:	853e                	mv	a0,a5
20407c52:	4472                	lw	s0,28(sp)
20407c54:	6105                	addi	sp,sp,32
20407c56:	8082                	ret

20407c58 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio, long source)
{
20407c58:	7179                	addi	sp,sp,-48
20407c5a:	d606                	sw	ra,44(sp)
20407c5c:	d422                	sw	s0,40(sp)
20407c5e:	1800                	addi	s0,sp,48
20407c60:	fca42e23          	sw	a0,-36(s0)
20407c64:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407c68:	fdc42503          	lw	a0,-36(s0)
20407c6c:	de9ff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407c70:	87aa                	mv	a5,a0
20407c72:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  |= source;
20407c76:	fec42783          	lw	a5,-20(s0)
20407c7a:	0791                	addi	a5,a5,4
20407c7c:	4398                	lw	a4,0(a5)
20407c7e:	fd842783          	lw	a5,-40(s0)
20407c82:	fec42683          	lw	a3,-20(s0)
20407c86:	0691                	addi	a3,a3,4
20407c88:	8fd9                	or	a5,a5,a4
20407c8a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:18

    return 0;
20407c8c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19
}
20407c8e:	853e                	mv	a0,a5
20407c90:	50b2                	lw	ra,44(sp)
20407c92:	5422                	lw	s0,40(sp)
20407c94:	6145                	addi	sp,sp,48
20407c96:	8082                	ret

20407c98 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:22

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio, long source)
{
20407c98:	7179                	addi	sp,sp,-48
20407c9a:	d606                	sw	ra,44(sp)
20407c9c:	d422                	sw	s0,40(sp)
20407c9e:	1800                	addi	s0,sp,48
20407ca0:	fca42e23          	sw	a0,-36(s0)
20407ca4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407ca8:	fdc42503          	lw	a0,-36(s0)
20407cac:	da9ff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407cb0:	87aa                	mv	a5,a0
20407cb2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:25

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  &= ~source;
20407cb6:	fec42783          	lw	a5,-20(s0)
20407cba:	0791                	addi	a5,a5,4
20407cbc:	439c                	lw	a5,0(a5)
20407cbe:	fd842703          	lw	a4,-40(s0)
20407cc2:	fff74713          	not	a4,a4
20407cc6:	86ba                	mv	a3,a4
20407cc8:	fec42703          	lw	a4,-20(s0)
20407ccc:	0711                	addi	a4,a4,4
20407cce:	8ff5                	and	a5,a5,a3
20407cd0:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    return 0;
20407cd2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:28
}
20407cd4:	853e                	mv	a0,a5
20407cd6:	50b2                	lw	ra,44(sp)
20407cd8:	5422                	lw	s0,40(sp)
20407cda:	6145                	addi	sp,sp,48
20407cdc:	8082                	ret

20407cde <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:31

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio)
{
20407cde:	7179                	addi	sp,sp,-48
20407ce0:	d606                	sw	ra,44(sp)
20407ce2:	d422                	sw	s0,40(sp)
20407ce4:	1800                	addi	s0,sp,48
20407ce6:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407cea:	fdc42503          	lw	a0,-36(s0)
20407cee:	d67ff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407cf2:	87aa                	mv	a5,a0
20407cf4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:34

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
20407cf8:	fec42783          	lw	a5,-20(s0)
20407cfc:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35
}
20407cfe:	853e                	mv	a0,a5
20407d00:	50b2                	lw	ra,44(sp)
20407d02:	5422                	lw	s0,40(sp)
20407d04:	6145                	addi	sp,sp,48
20407d06:	8082                	ret

20407d08 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:38

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio)
{
20407d08:	7179                	addi	sp,sp,-48
20407d0a:	d606                	sw	ra,44(sp)
20407d0c:	d422                	sw	s0,40(sp)
20407d0e:	1800                	addi	s0,sp,48
20407d10:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407d14:	fdc42503          	lw	a0,-36(s0)
20407d18:	d3dff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407d1c:	87aa                	mv	a5,a0
20407d1e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:41

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
20407d22:	fec42783          	lw	a5,-20(s0)
20407d26:	07b1                	addi	a5,a5,12
20407d28:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42
}
20407d2a:	853e                	mv	a0,a5
20407d2c:	50b2                	lw	ra,44(sp)
20407d2e:	5422                	lw	s0,40(sp)
20407d30:	6145                	addi	sp,sp,48
20407d32:	8082                	ret

20407d34 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:46


int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio, long source)
{
20407d34:	7179                	addi	sp,sp,-48
20407d36:	d606                	sw	ra,44(sp)
20407d38:	d422                	sw	s0,40(sp)
20407d3a:	1800                	addi	s0,sp,48
20407d3c:	fca42e23          	sw	a0,-36(s0)
20407d40:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407d44:	fdc42503          	lw	a0,-36(s0)
20407d48:	d0dff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407d4c:	87aa                	mv	a5,a0
20407d4e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:49

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  &= ~source;
20407d52:	fec42783          	lw	a5,-20(s0)
20407d56:	07a1                	addi	a5,a5,8
20407d58:	439c                	lw	a5,0(a5)
20407d5a:	fd842703          	lw	a4,-40(s0)
20407d5e:	fff74713          	not	a4,a4
20407d62:	86ba                	mv	a3,a4
20407d64:	fec42703          	lw	a4,-20(s0)
20407d68:	0721                	addi	a4,a4,8
20407d6a:	8ff5                	and	a5,a5,a3
20407d6c:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    return 0;
20407d6e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:52
}
20407d70:	853e                	mv	a0,a5
20407d72:	50b2                	lw	ra,44(sp)
20407d74:	5422                	lw	s0,40(sp)
20407d76:	6145                	addi	sp,sp,48
20407d78:	8082                	ret

20407d7a <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:55

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio, long source)
{
20407d7a:	7179                	addi	sp,sp,-48
20407d7c:	d606                	sw	ra,44(sp)
20407d7e:	d422                	sw	s0,40(sp)
20407d80:	1800                	addi	s0,sp,48
20407d82:	fca42e23          	sw	a0,-36(s0)
20407d86:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:56
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407d8a:	fdc42503          	lw	a0,-36(s0)
20407d8e:	cc7ff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407d92:	87aa                	mv	a5,a0
20407d94:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  |= source;
20407d98:	fec42783          	lw	a5,-20(s0)
20407d9c:	07a1                	addi	a5,a5,8
20407d9e:	4398                	lw	a4,0(a5)
20407da0:	fd842783          	lw	a5,-40(s0)
20407da4:	fec42683          	lw	a3,-20(s0)
20407da8:	06a1                	addi	a3,a3,8
20407daa:	8fd9                	or	a5,a5,a4
20407dac:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:60

    return 0;
20407dae:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61
}
20407db0:	853e                	mv	a0,a5
20407db2:	50b2                	lw	ra,44(sp)
20407db4:	5422                	lw	s0,40(sp)
20407db6:	6145                	addi	sp,sp,48
20407db8:	8082                	ret

20407dba <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio, long value)
{
20407dba:	7179                	addi	sp,sp,-48
20407dbc:	d606                	sw	ra,44(sp)
20407dbe:	d422                	sw	s0,40(sp)
20407dc0:	1800                	addi	s0,sp,48
20407dc2:	fca42e23          	sw	a0,-36(s0)
20407dc6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:65
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407dca:	fdc42503          	lw	a0,-36(s0)
20407dce:	c87ff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407dd2:	87aa                	mv	a5,a0
20407dd4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |= value;
20407dd8:	fec42783          	lw	a5,-20(s0)
20407ddc:	07b1                	addi	a5,a5,12
20407dde:	4398                	lw	a4,0(a5)
20407de0:	fd842783          	lw	a5,-40(s0)
20407de4:	fec42683          	lw	a3,-20(s0)
20407de8:	06b1                	addi	a3,a3,12
20407dea:	8fd9                	or	a5,a5,a4
20407dec:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:69

    return 0;
20407dee:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70
}
20407df0:	853e                	mv	a0,a5
20407df2:	50b2                	lw	ra,44(sp)
20407df4:	5422                	lw	s0,40(sp)
20407df6:	6145                	addi	sp,sp,48
20407df8:	8082                	ret

20407dfa <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio, long value)
{
20407dfa:	7179                	addi	sp,sp,-48
20407dfc:	d606                	sw	ra,44(sp)
20407dfe:	d422                	sw	s0,40(sp)
20407e00:	1800                	addi	s0,sp,48
20407e02:	fca42e23          	sw	a0,-36(s0)
20407e06:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407e0a:	fdc42503          	lw	a0,-36(s0)
20407e0e:	c47ff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407e12:	87aa                	mv	a5,a0
20407e14:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:76

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &= ~value;
20407e18:	fec42783          	lw	a5,-20(s0)
20407e1c:	07b1                	addi	a5,a5,12
20407e1e:	439c                	lw	a5,0(a5)
20407e20:	fd842703          	lw	a4,-40(s0)
20407e24:	fff74713          	not	a4,a4
20407e28:	86ba                	mv	a3,a4
20407e2a:	fec42703          	lw	a4,-20(s0)
20407e2e:	0731                	addi	a4,a4,12
20407e30:	8ff5                	and	a5,a5,a3
20407e32:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78

    return 0;
20407e34:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:79
}
20407e36:	853e                	mv	a0,a5
20407e38:	50b2                	lw	ra,44(sp)
20407e3a:	5422                	lw	s0,40(sp)
20407e3c:	6145                	addi	sp,sp,48
20407e3e:	8082                	ret

20407e40 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:82

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio, long value)
{
20407e40:	7179                	addi	sp,sp,-48
20407e42:	d606                	sw	ra,44(sp)
20407e44:	d422                	sw	s0,40(sp)
20407e46:	1800                	addi	s0,sp,48
20407e48:	fca42e23          	sw	a0,-36(s0)
20407e4c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407e50:	fdc42503          	lw	a0,-36(s0)
20407e54:	c01ff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407e58:	87aa                	mv	a5,a0
20407e5a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
20407e5e:	fec42783          	lw	a5,-20(s0)
20407e62:	07b1                	addi	a5,a5,12
20407e64:	4398                	lw	a4,0(a5)
20407e66:	fd842783          	lw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20407e6a:	fec42683          	lw	a3,-20(s0)
20407e6e:	06b1                	addi	a3,a3,12
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
20407e70:	8fb9                	xor	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20407e72:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88

    return 0;
20407e74:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:89
}
20407e76:	853e                	mv	a0,a5
20407e78:	50b2                	lw	ra,44(sp)
20407e7a:	5422                	lw	s0,40(sp)
20407e7c:	6145                	addi	sp,sp,48
20407e7e:	8082                	ret

20407e80 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source, long dest)
{
20407e80:	7179                	addi	sp,sp,-48
20407e82:	d606                	sw	ra,44(sp)
20407e84:	d422                	sw	s0,40(sp)
20407e86:	1800                	addi	s0,sp,48
20407e88:	fca42e23          	sw	a0,-36(s0)
20407e8c:	fcb42c23          	sw	a1,-40(s0)
20407e90:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:93
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407e94:	fdc42503          	lw	a0,-36(s0)
20407e98:	bbdff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407e9c:	87aa                	mv	a5,a0
20407e9e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) &= ~source;
20407ea2:	fec42783          	lw	a5,-20(s0)
20407ea6:	03c78793          	addi	a5,a5,60
20407eaa:	439c                	lw	a5,0(a5)
20407eac:	fd842703          	lw	a4,-40(s0)
20407eb0:	fff74713          	not	a4,a4
20407eb4:	86ba                	mv	a3,a4
20407eb6:	fec42703          	lw	a4,-20(s0)
20407eba:	03c70713          	addi	a4,a4,60
20407ebe:	8ff5                	and	a5,a5,a3
20407ec0:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  |= dest;
20407ec2:	fec42783          	lw	a5,-20(s0)
20407ec6:	03878793          	addi	a5,a5,56
20407eca:	4398                	lw	a4,0(a5)
20407ecc:	fd442783          	lw	a5,-44(s0)
20407ed0:	fec42683          	lw	a3,-20(s0)
20407ed4:	03868693          	addi	a3,a3,56
20407ed8:	8fd9                	or	a5,a5,a4
20407eda:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:98

    return 0;
20407edc:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99
}
20407ede:	853e                	mv	a0,a5
20407ee0:	50b2                	lw	ra,44(sp)
20407ee2:	5422                	lw	s0,40(sp)
20407ee4:	6145                	addi	sp,sp,48
20407ee6:	8082                	ret

20407ee8 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:102

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio, long source)
{
20407ee8:	7179                	addi	sp,sp,-48
20407eea:	d606                	sw	ra,44(sp)
20407eec:	d422                	sw	s0,40(sp)
20407eee:	1800                	addi	s0,sp,48
20407ef0:	fca42e23          	sw	a0,-36(s0)
20407ef4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407ef8:	fdc42503          	lw	a0,-36(s0)
20407efc:	b59ff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407f00:	87aa                	mv	a5,a0
20407f02:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:105

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  &= ~source;
20407f06:	fec42783          	lw	a5,-20(s0)
20407f0a:	03878793          	addi	a5,a5,56
20407f0e:	439c                	lw	a5,0(a5)
20407f10:	fd842703          	lw	a4,-40(s0)
20407f14:	fff74713          	not	a4,a4
20407f18:	86ba                	mv	a3,a4
20407f1a:	fec42703          	lw	a4,-20(s0)
20407f1e:	03870713          	addi	a4,a4,56
20407f22:	8ff5                	and	a5,a5,a3
20407f24:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107

    return 0;
20407f26:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20407f28:	853e                	mv	a0,a5
20407f2a:	50b2                	lw	ra,44(sp)
20407f2c:	5422                	lw	s0,40(sp)
20407f2e:	6145                	addi	sp,sp,48
20407f30:	8082                	ret

20407f32 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio, long source, int intr_type)
{
20407f32:	7179                	addi	sp,sp,-48
20407f34:	d606                	sw	ra,44(sp)
20407f36:	d422                	sw	s0,40(sp)
20407f38:	1800                	addi	s0,sp,48
20407f3a:	fca42e23          	sw	a0,-36(s0)
20407f3e:	fcb42c23          	sw	a1,-40(s0)
20407f42:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407f46:	fdc42503          	lw	a0,-36(s0)
20407f4a:	b0bff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20407f4e:	87aa                	mv	a5,a0
20407f50:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    switch (intr_type)
20407f54:	fd442703          	lw	a4,-44(s0)
20407f58:	479d                	li	a5,7
20407f5a:	1ce7e963          	bltu	a5,a4,2040812c <__metal_driver_sifive_gpio0_config_int+0x1fa>
20407f5e:	fd442783          	lw	a5,-44(s0)
20407f62:	00279713          	slli	a4,a5,0x2
20407f66:	204097b7          	lui	a5,0x20409
20407f6a:	31478793          	addi	a5,a5,788 # 20409314 <__metal_driver_vtable_riscv_plic0+0x4c>
20407f6e:	97ba                	add	a5,a5,a4
20407f70:	439c                	lw	a5,0(a5)
20407f72:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117
    {
        case METAL_GPIO_INT_DISABLE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  &= ~source;
20407f74:	fec42783          	lw	a5,-20(s0)
20407f78:	07e1                	addi	a5,a5,24
20407f7a:	439c                	lw	a5,0(a5)
20407f7c:	fd842703          	lw	a4,-40(s0)
20407f80:	fff74713          	not	a4,a4
20407f84:	86ba                	mv	a3,a4
20407f86:	fec42703          	lw	a4,-20(s0)
20407f8a:	0761                	addi	a4,a4,24
20407f8c:	8ff5                	and	a5,a5,a3
20407f8e:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  &= ~source;
20407f90:	fec42783          	lw	a5,-20(s0)
20407f94:	02078793          	addi	a5,a5,32
20407f98:	439c                	lw	a5,0(a5)
20407f9a:	fd842703          	lw	a4,-40(s0)
20407f9e:	fff74713          	not	a4,a4
20407fa2:	86ba                	mv	a3,a4
20407fa4:	fec42703          	lw	a4,-20(s0)
20407fa8:	02070713          	addi	a4,a4,32
20407fac:	8ff5                	and	a5,a5,a3
20407fae:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:119
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  &= ~source;
20407fb0:	fec42783          	lw	a5,-20(s0)
20407fb4:	02878793          	addi	a5,a5,40
20407fb8:	439c                	lw	a5,0(a5)
20407fba:	fd842703          	lw	a4,-40(s0)
20407fbe:	fff74713          	not	a4,a4
20407fc2:	86ba                	mv	a3,a4
20407fc4:	fec42703          	lw	a4,-20(s0)
20407fc8:	02870713          	addi	a4,a4,40
20407fcc:	8ff5                	and	a5,a5,a3
20407fce:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:120
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  &= ~source;
20407fd0:	fec42783          	lw	a5,-20(s0)
20407fd4:	03078793          	addi	a5,a5,48
20407fd8:	439c                	lw	a5,0(a5)
20407fda:	fd842703          	lw	a4,-40(s0)
20407fde:	fff74713          	not	a4,a4
20407fe2:	86ba                	mv	a3,a4
20407fe4:	fec42703          	lw	a4,-20(s0)
20407fe8:	03070713          	addi	a4,a4,48
20407fec:	8ff5                	and	a5,a5,a3
20407fee:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121
            break;
20407ff0:	aa35                	j	2040812c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:123
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20407ff2:	fec42783          	lw	a5,-20(s0)
20407ff6:	07e1                	addi	a5,a5,24
20407ff8:	4398                	lw	a4,0(a5)
20407ffa:	fd842783          	lw	a5,-40(s0)
20407ffe:	fec42683          	lw	a3,-20(s0)
20408002:	06e1                	addi	a3,a3,24
20408004:	8fd9                	or	a5,a5,a4
20408006:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124
            break;
20408008:	a215                	j	2040812c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:126
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
2040800a:	fec42783          	lw	a5,-20(s0)
2040800e:	02078793          	addi	a5,a5,32
20408012:	4398                	lw	a4,0(a5)
20408014:	fd842783          	lw	a5,-40(s0)
20408018:	fec42683          	lw	a3,-20(s0)
2040801c:	02068693          	addi	a3,a3,32
20408020:	8fd9                	or	a5,a5,a4
20408022:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
            break;
20408024:	a221                	j	2040812c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20408026:	fec42783          	lw	a5,-20(s0)
2040802a:	07e1                	addi	a5,a5,24
2040802c:	4398                	lw	a4,0(a5)
2040802e:	fd842783          	lw	a5,-40(s0)
20408032:	fec42683          	lw	a3,-20(s0)
20408036:	06e1                	addi	a3,a3,24
20408038:	8fd9                	or	a5,a5,a4
2040803a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:130
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
2040803c:	fec42783          	lw	a5,-20(s0)
20408040:	02078793          	addi	a5,a5,32
20408044:	4398                	lw	a4,0(a5)
20408046:	fd842783          	lw	a5,-40(s0)
2040804a:	fec42683          	lw	a3,-20(s0)
2040804e:	02068693          	addi	a3,a3,32
20408052:	8fd9                	or	a5,a5,a4
20408054:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
            break;
20408056:	a8d9                	j	2040812c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20408058:	fec42783          	lw	a5,-20(s0)
2040805c:	02878793          	addi	a5,a5,40
20408060:	4398                	lw	a4,0(a5)
20408062:	fd842783          	lw	a5,-40(s0)
20408066:	fec42683          	lw	a3,-20(s0)
2040806a:	02868693          	addi	a3,a3,40
2040806e:	8fd9                	or	a5,a5,a4
20408070:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
            break;
20408072:	a86d                	j	2040812c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:136
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20408074:	fec42783          	lw	a5,-20(s0)
20408078:	03078793          	addi	a5,a5,48
2040807c:	4398                	lw	a4,0(a5)
2040807e:	fd842783          	lw	a5,-40(s0)
20408082:	fec42683          	lw	a3,-20(s0)
20408086:	03068693          	addi	a3,a3,48
2040808a:	8fd9                	or	a5,a5,a4
2040808c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
            break;
2040808e:	a879                	j	2040812c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:139
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20408090:	fec42783          	lw	a5,-20(s0)
20408094:	02878793          	addi	a5,a5,40
20408098:	4398                	lw	a4,0(a5)
2040809a:	fd842783          	lw	a5,-40(s0)
2040809e:	fec42683          	lw	a3,-20(s0)
204080a2:	02868693          	addi	a3,a3,40
204080a6:	8fd9                	or	a5,a5,a4
204080a8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:140
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
204080aa:	fec42783          	lw	a5,-20(s0)
204080ae:	03078793          	addi	a5,a5,48
204080b2:	4398                	lw	a4,0(a5)
204080b4:	fd842783          	lw	a5,-40(s0)
204080b8:	fec42683          	lw	a3,-20(s0)
204080bc:	03068693          	addi	a3,a3,48
204080c0:	8fd9                	or	a5,a5,a4
204080c2:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
            break;
204080c4:	a0a5                	j	2040812c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:143
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
204080c6:	fec42783          	lw	a5,-20(s0)
204080ca:	07e1                	addi	a5,a5,24
204080cc:	4398                	lw	a4,0(a5)
204080ce:	fd842783          	lw	a5,-40(s0)
204080d2:	fec42683          	lw	a3,-20(s0)
204080d6:	06e1                	addi	a3,a3,24
204080d8:	8fd9                	or	a5,a5,a4
204080da:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:144
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
204080dc:	fec42783          	lw	a5,-20(s0)
204080e0:	02078793          	addi	a5,a5,32
204080e4:	4398                	lw	a4,0(a5)
204080e6:	fd842783          	lw	a5,-40(s0)
204080ea:	fec42683          	lw	a3,-20(s0)
204080ee:	02068693          	addi	a3,a3,32
204080f2:	8fd9                	or	a5,a5,a4
204080f4:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
204080f6:	fec42783          	lw	a5,-20(s0)
204080fa:	02878793          	addi	a5,a5,40
204080fe:	4398                	lw	a4,0(a5)
20408100:	fd842783          	lw	a5,-40(s0)
20408104:	fec42683          	lw	a3,-20(s0)
20408108:	02868693          	addi	a3,a3,40
2040810c:	8fd9                	or	a5,a5,a4
2040810e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:146
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20408110:	fec42783          	lw	a5,-20(s0)
20408114:	03078793          	addi	a5,a5,48
20408118:	4398                	lw	a4,0(a5)
2040811a:	fd842783          	lw	a5,-40(s0)
2040811e:	fec42683          	lw	a3,-20(s0)
20408122:	03068693          	addi	a3,a3,48
20408126:	8fd9                	or	a5,a5,a4
20408128:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
            break;
2040812a:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:149
    }
    return 0;
2040812c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:150
}
2040812e:	853e                	mv	a0,a5
20408130:	50b2                	lw	ra,44(sp)
20408132:	5422                	lw	s0,40(sp)
20408134:	6145                	addi	sp,sp,48
20408136:	8082                	ret

20408138 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:153

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source, int intr_type)
{
20408138:	7179                	addi	sp,sp,-48
2040813a:	d606                	sw	ra,44(sp)
2040813c:	d422                	sw	s0,40(sp)
2040813e:	1800                	addi	s0,sp,48
20408140:	fca42e23          	sw	a0,-36(s0)
20408144:	fcb42c23          	sw	a1,-40(s0)
20408148:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:154
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040814c:	fdc42503          	lw	a0,-36(s0)
20408150:	905ff0ef          	jal	ra,20407a54 <__metal_driver_sifive_gpio0_base>
20408154:	87aa                	mv	a5,a0
20408156:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156

    switch (intr_type)
2040815a:	fd442703          	lw	a4,-44(s0)
2040815e:	479d                	li	a5,7
20408160:	14e7ea63          	bltu	a5,a4,204082b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20408164:	fd442783          	lw	a5,-44(s0)
20408168:	00279713          	slli	a4,a5,0x2
2040816c:	204097b7          	lui	a5,0x20409
20408170:	33478793          	addi	a5,a5,820 # 20409334 <__metal_driver_vtable_riscv_plic0+0x6c>
20408174:	97ba                	add	a5,a5,a4
20408176:	439c                	lw	a5,0(a5)
20408178:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    {
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
2040817a:	fec42783          	lw	a5,-20(s0)
2040817e:	07f1                	addi	a5,a5,28
20408180:	4398                	lw	a4,0(a5)
20408182:	fd842783          	lw	a5,-40(s0)
20408186:	fec42683          	lw	a3,-20(s0)
2040818a:	06f1                	addi	a3,a3,28
2040818c:	8fd9                	or	a5,a5,a4
2040818e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:160
            break;
20408190:	a215                	j	204082b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20408192:	fec42783          	lw	a5,-20(s0)
20408196:	02478793          	addi	a5,a5,36
2040819a:	4398                	lw	a4,0(a5)
2040819c:	fd842783          	lw	a5,-40(s0)
204081a0:	fec42683          	lw	a3,-20(s0)
204081a4:	02468693          	addi	a3,a3,36
204081a8:	8fd9                	or	a5,a5,a4
204081aa:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:163
            break;
204081ac:	a221                	j	204082b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
204081ae:	fec42783          	lw	a5,-20(s0)
204081b2:	07f1                	addi	a5,a5,28
204081b4:	4398                	lw	a4,0(a5)
204081b6:	fd842783          	lw	a5,-40(s0)
204081ba:	fec42683          	lw	a3,-20(s0)
204081be:	06f1                	addi	a3,a3,28
204081c0:	8fd9                	or	a5,a5,a4
204081c2:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:166
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
204081c4:	fec42783          	lw	a5,-20(s0)
204081c8:	02478793          	addi	a5,a5,36
204081cc:	4398                	lw	a4,0(a5)
204081ce:	fd842783          	lw	a5,-40(s0)
204081d2:	fec42683          	lw	a3,-20(s0)
204081d6:	02468693          	addi	a3,a3,36
204081da:	8fd9                	or	a5,a5,a4
204081dc:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
            break;
204081de:	a8d9                	j	204082b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
204081e0:	fec42783          	lw	a5,-20(s0)
204081e4:	02c78793          	addi	a5,a5,44
204081e8:	4398                	lw	a4,0(a5)
204081ea:	fd842783          	lw	a5,-40(s0)
204081ee:	fec42683          	lw	a3,-20(s0)
204081f2:	02c68693          	addi	a3,a3,44
204081f6:	8fd9                	or	a5,a5,a4
204081f8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:170
            break;
204081fa:	a86d                	j	204082b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
204081fc:	fec42783          	lw	a5,-20(s0)
20408200:	03478793          	addi	a5,a5,52
20408204:	4398                	lw	a4,0(a5)
20408206:	fd842783          	lw	a5,-40(s0)
2040820a:	fec42683          	lw	a3,-20(s0)
2040820e:	03468693          	addi	a3,a3,52
20408212:	8fd9                	or	a5,a5,a4
20408214:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:173
            break;
20408216:	a879                	j	204082b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20408218:	fec42783          	lw	a5,-20(s0)
2040821c:	02c78793          	addi	a5,a5,44
20408220:	4398                	lw	a4,0(a5)
20408222:	fd842783          	lw	a5,-40(s0)
20408226:	fec42683          	lw	a3,-20(s0)
2040822a:	02c68693          	addi	a3,a3,44
2040822e:	8fd9                	or	a5,a5,a4
20408230:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:176
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20408232:	fec42783          	lw	a5,-20(s0)
20408236:	03478793          	addi	a5,a5,52
2040823a:	4398                	lw	a4,0(a5)
2040823c:	fd842783          	lw	a5,-40(s0)
20408240:	fec42683          	lw	a3,-20(s0)
20408244:	03468693          	addi	a3,a3,52
20408248:	8fd9                	or	a5,a5,a4
2040824a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:177
            break;
2040824c:	a0a5                	j	204082b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
2040824e:	fec42783          	lw	a5,-20(s0)
20408252:	07f1                	addi	a5,a5,28
20408254:	4398                	lw	a4,0(a5)
20408256:	fd842783          	lw	a5,-40(s0)
2040825a:	fec42683          	lw	a3,-20(s0)
2040825e:	06f1                	addi	a3,a3,28
20408260:	8fd9                	or	a5,a5,a4
20408262:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:180
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20408264:	fec42783          	lw	a5,-20(s0)
20408268:	02478793          	addi	a5,a5,36
2040826c:	4398                	lw	a4,0(a5)
2040826e:	fd842783          	lw	a5,-40(s0)
20408272:	fec42683          	lw	a3,-20(s0)
20408276:	02468693          	addi	a3,a3,36
2040827a:	8fd9                	or	a5,a5,a4
2040827c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
2040827e:	fec42783          	lw	a5,-20(s0)
20408282:	02c78793          	addi	a5,a5,44
20408286:	4398                	lw	a4,0(a5)
20408288:	fd842783          	lw	a5,-40(s0)
2040828c:	fec42683          	lw	a3,-20(s0)
20408290:	02c68693          	addi	a3,a3,44
20408294:	8fd9                	or	a5,a5,a4
20408296:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:182
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20408298:	fec42783          	lw	a5,-20(s0)
2040829c:	03478793          	addi	a5,a5,52
204082a0:	4398                	lw	a4,0(a5)
204082a2:	fd842783          	lw	a5,-40(s0)
204082a6:	fec42683          	lw	a3,-20(s0)
204082aa:	03468693          	addi	a3,a3,52
204082ae:	8fd9                	or	a5,a5,a4
204082b0:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:183
            break;
204082b2:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
    }
    return 0;
204082b4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:186
}
204082b6:	853e                	mv	a0,a5
204082b8:	50b2                	lw	ra,44(sp)
204082ba:	5422                	lw	s0,40(sp)
204082bc:	6145                	addi	sp,sp,48
204082be:	8082                	ret

204082c0 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:190

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio)
{
204082c0:	1101                	addi	sp,sp,-32
204082c2:	ce06                	sw	ra,28(sp)
204082c4:	cc22                	sw	s0,24(sp)
204082c6:	1000                	addi	s0,sp,32
204082c8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:191
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
204082cc:	fec42503          	lw	a0,-20(s0)
204082d0:	faaff0ef          	jal	ra,20407a7a <__metal_driver_sifive_gpio0_interrupt_parent>
204082d4:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
}
204082d6:	853e                	mv	a0,a5
204082d8:	40f2                	lw	ra,28(sp)
204082da:	4462                	lw	s0,24(sp)
204082dc:	6105                	addi	sp,sp,32
204082de:	8082                	ret

204082e0 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin)
{
204082e0:	7179                	addi	sp,sp,-48
204082e2:	d606                	sw	ra,44(sp)
204082e4:	d422                	sw	s0,40(sp)
204082e6:	1800                	addi	s0,sp,48
204082e8:	fca42e23          	sw	a0,-36(s0)
204082ec:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:197
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
204082f0:	fd842583          	lw	a1,-40(s0)
204082f4:	fdc42503          	lw	a0,-36(s0)
204082f8:	facff0ef          	jal	ra,20407aa4 <__metal_driver_sifive_gpio0_interrupt_lines>
204082fc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    return irq;
20408300:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
}
20408304:	853e                	mv	a0,a5
20408306:	50b2                	lw	ra,44(sp)
20408308:	5422                	lw	s0,40(sp)
2040830a:	6145                	addi	sp,sp,48
2040830c:	8082                	ret

2040830e <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:564

/* --------------------- sifive_trace ------------ */

/* --------------------- sifive_uart0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_uart0_control_base(struct metal_uart *uart)
{
2040830e:	1101                	addi	sp,sp,-32
20408310:	ce22                	sw	s0,28(sp)
20408312:	1000                	addi	s0,sp,32
20408314:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:565
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408318:	fec42703          	lw	a4,-20(s0)
2040831c:	800007b7          	lui	a5,0x80000
20408320:	74878793          	addi	a5,a5,1864 # 80000748 <metal_segment_heap_target_end+0xffffe8f4>
20408324:	00f71563          	bne	a4,a5,2040832e <__metal_driver_sifive_uart0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:566
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20408328:	100137b7          	lui	a5,0x10013
2040832c:	a011                	j	20408330 <__metal_driver_sifive_uart0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:569
	}
	else {
		return 0;
2040832e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:571
	}
}
20408330:	853e                	mv	a0,a5
20408332:	4472                	lw	s0,28(sp)
20408334:	6105                	addi	sp,sp,32
20408336:	8082                	ret

20408338 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:594
		return 0;
	}
}

static __inline__ struct metal_interrupt * __metal_driver_sifive_uart0_interrupt_parent(struct metal_uart *uart)
{
20408338:	1101                	addi	sp,sp,-32
2040833a:	ce22                	sw	s0,28(sp)
2040833c:	1000                	addi	s0,sp,32
2040833e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:595
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408342:	fec42703          	lw	a4,-20(s0)
20408346:	800007b7          	lui	a5,0x80000
2040834a:	74878793          	addi	a5,a5,1864 # 80000748 <metal_segment_heap_target_end+0xffffe8f4>
2040834e:	00f71763          	bne	a4,a5,2040835c <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:596
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20408352:	800007b7          	lui	a5,0x80000
20408356:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffe5f4>
2040835a:	a011                	j	2040835e <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:599
	}
	else {
		return 0;
2040835c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:601
	}
}
2040835e:	853e                	mv	a0,a5
20408360:	4472                	lw	s0,28(sp)
20408362:	6105                	addi	sp,sp,32
20408364:	8082                	ret

20408366 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:604

static __inline__ int __metal_driver_sifive_uart0_interrupt_line(struct metal_uart *uart)
{
20408366:	1101                	addi	sp,sp,-32
20408368:	ce22                	sw	s0,28(sp)
2040836a:	1000                	addi	s0,sp,32
2040836c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:605
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408370:	fec42703          	lw	a4,-20(s0)
20408374:	800007b7          	lui	a5,0x80000
20408378:	74878793          	addi	a5,a5,1864 # 80000748 <metal_segment_heap_target_end+0xffffe8f4>
2040837c:	00f71463          	bne	a4,a5,20408384 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:606
		return 5;
20408380:	4795                	li	a5,5
20408382:	a011                	j	20408386 <__metal_driver_sifive_uart0_interrupt_line+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:609
	}
	else {
		return 0;
20408384:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:611
	}
}
20408386:	853e                	mv	a0,a5
20408388:	4472                	lw	s0,28(sp)
2040838a:	6105                	addi	sp,sp,32
2040838c:	8082                	ret

2040838e <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:614

static __inline__ struct metal_clock * __metal_driver_sifive_uart0_clock(struct metal_uart *uart)
{
2040838e:	1101                	addi	sp,sp,-32
20408390:	ce22                	sw	s0,28(sp)
20408392:	1000                	addi	s0,sp,32
20408394:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:615
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408398:	fec42703          	lw	a4,-20(s0)
2040839c:	800007b7          	lui	a5,0x80000
204083a0:	74878793          	addi	a5,a5,1864 # 80000748 <metal_segment_heap_target_end+0xffffe8f4>
204083a4:	00f71763          	bne	a4,a5,204083b2 <__metal_driver_sifive_uart0_clock+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:616
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
204083a8:	800007b7          	lui	a5,0x80000
204083ac:	08078793          	addi	a5,a5,128 # 80000080 <metal_segment_heap_target_end+0xffffe22c>
204083b0:	a011                	j	204083b4 <__metal_driver_sifive_uart0_clock+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:619
	}
	else {
		return 0;
204083b2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:621
	}
}
204083b4:	853e                	mv	a0,a5
204083b6:	4472                	lw	s0,28(sp)
204083b8:	6105                	addi	sp,sp,32
204083ba:	8082                	ret

204083bc <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:624

static __inline__ struct __metal_driver_sifive_gpio0 * __metal_driver_sifive_uart0_pinmux(struct metal_uart *uart)
{
204083bc:	1101                	addi	sp,sp,-32
204083be:	ce22                	sw	s0,28(sp)
204083c0:	1000                	addi	s0,sp,32
204083c2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:625
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204083c6:	fec42703          	lw	a4,-20(s0)
204083ca:	800007b7          	lui	a5,0x80000
204083ce:	74878793          	addi	a5,a5,1864 # 80000748 <metal_segment_heap_target_end+0xffffe8f4>
204083d2:	00f71563          	bne	a4,a5,204083dc <__metal_driver_sifive_uart0_pinmux+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:626
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
204083d6:	81818793          	addi	a5,gp,-2024 # 80000780 <__metal_dt_gpio_10012000>
204083da:	a011                	j	204083de <__metal_driver_sifive_uart0_pinmux+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:629
	}
	else {
		return 0;
204083dc:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:631
	}
}
204083de:	853e                	mv	a0,a5
204083e0:	4472                	lw	s0,28(sp)
204083e2:	6105                	addi	sp,sp,32
204083e4:	8082                	ret

204083e6 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:634

static __inline__ unsigned long __metal_driver_sifive_uart0_pinmux_output_selector(struct metal_uart *uart)
{
204083e6:	1101                	addi	sp,sp,-32
204083e8:	ce22                	sw	s0,28(sp)
204083ea:	1000                	addi	s0,sp,32
204083ec:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:635
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204083f0:	fec42703          	lw	a4,-20(s0)
204083f4:	800007b7          	lui	a5,0x80000
204083f8:	74878793          	addi	a5,a5,1864 # 80000748 <metal_segment_heap_target_end+0xffffe8f4>
204083fc:	00f71563          	bne	a4,a5,20408406 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:636
		return 196608;
20408400:	000307b7          	lui	a5,0x30
20408404:	a011                	j	20408408 <__metal_driver_sifive_uart0_pinmux_output_selector+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:639
	}
	else {
		return 0;
20408406:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:641
	}
}
20408408:	853e                	mv	a0,a5
2040840a:	4472                	lw	s0,28(sp)
2040840c:	6105                	addi	sp,sp,32
2040840e:	8082                	ret

20408410 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:644

static __inline__ unsigned long __metal_driver_sifive_uart0_pinmux_source_selector(struct metal_uart *uart)
{
20408410:	1101                	addi	sp,sp,-32
20408412:	ce22                	sw	s0,28(sp)
20408414:	1000                	addi	s0,sp,32
20408416:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:645
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040841a:	fec42703          	lw	a4,-20(s0)
2040841e:	800007b7          	lui	a5,0x80000
20408422:	74878793          	addi	a5,a5,1864 # 80000748 <metal_segment_heap_target_end+0xffffe8f4>
20408426:	00f71563          	bne	a4,a5,20408430 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:646
		return 196608;
2040842a:	000307b7          	lui	a5,0x30
2040842e:	a011                	j	20408432 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:649
	}
	else {
		return 0;
20408430:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:651
	}
}
20408432:	853e                	mv	a0,a5
20408434:	4472                	lw	s0,28(sp)
20408436:	6105                	addi	sp,sp,32
20408438:	8082                	ret

2040843a <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:32
#define UART_REGB(offset)  (__METAL_ACCESS_ONCE((__metal_io_u8  *)UART_REG(offset)))
#define UART_REGW(offset)  (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart)
{
2040843a:	1101                	addi	sp,sp,-32
2040843c:	ce06                	sw	ra,28(sp)
2040843e:	cc22                	sw	s0,24(sp)
20408440:	1000                	addi	s0,sp,32
20408442:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:33
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20408446:	fec42503          	lw	a0,-20(s0)
2040844a:	35fd                	jal	20408338 <__metal_driver_sifive_uart0_interrupt_parent>
2040844c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:34
}
2040844e:	853e                	mv	a0,a5
20408450:	40f2                	lw	ra,28(sp)
20408452:	4462                	lw	s0,24(sp)
20408454:	6105                	addi	sp,sp,32
20408456:	8082                	ret

20408458 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:37

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart)
{
20408458:	1101                	addi	sp,sp,-32
2040845a:	ce06                	sw	ra,28(sp)
2040845c:	cc22                	sw	s0,24(sp)
2040845e:	1000                	addi	s0,sp,32
20408460:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:38
    return (__metal_driver_sifive_uart0_interrupt_line(uart) + METAL_INTERRUPT_ID_GL0);
20408464:	fec42503          	lw	a0,-20(s0)
20408468:	3dfd                	jal	20408366 <__metal_driver_sifive_uart0_interrupt_line>
2040846a:	87aa                	mv	a5,a0
2040846c:	02078793          	addi	a5,a5,32 # 30020 <__heap_size+0x2f820>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:39
}
20408470:	853e                	mv	a0,a5
20408472:	40f2                	lw	ra,28(sp)
20408474:	4462                	lw	s0,24(sp)
20408476:	6105                	addi	sp,sp,32
20408478:	8082                	ret

2040847a <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:43


int __metal_driver_sifive_uart0_txready(struct metal_uart *uart)
{
2040847a:	7179                	addi	sp,sp,-48
2040847c:	d606                	sw	ra,44(sp)
2040847e:	d422                	sw	s0,40(sp)
20408480:	1800                	addi	s0,sp,48
20408482:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:44
  long control_base = __metal_driver_sifive_uart0_control_base(uart);
20408486:	fdc42503          	lw	a0,-36(s0)
2040848a:	3551                	jal	2040830e <__metal_driver_sifive_uart0_control_base>
2040848c:	87aa                	mv	a5,a0
2040848e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:46

  return !((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20408492:	fec42783          	lw	a5,-20(s0)
20408496:	439c                	lw	a5,0(a5)
20408498:	fff7c793          	not	a5,a5
2040849c:	83fd                	srli	a5,a5,0x1f
2040849e:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:47
}
204084a2:	853e                	mv	a0,a5
204084a4:	50b2                	lw	ra,44(sp)
204084a6:	5422                	lw	s0,40(sp)
204084a8:	6145                	addi	sp,sp,48
204084aa:	8082                	ret

204084ac <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:51


int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c)
{
204084ac:	7179                	addi	sp,sp,-48
204084ae:	d606                	sw	ra,44(sp)
204084b0:	d422                	sw	s0,40(sp)
204084b2:	1800                	addi	s0,sp,48
204084b4:	fca42e23          	sw	a0,-36(s0)
204084b8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:52
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204084bc:	fdc42503          	lw	a0,-36(s0)
204084c0:	e4fff0ef          	jal	ra,2040830e <__metal_driver_sifive_uart0_control_base>
204084c4:	87aa                	mv	a5,a0
204084c6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54

    while (!__metal_driver_sifive_uart0_txready(uart)) {
204084ca:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54 (discriminator 1)
204084cc:	fdc42503          	lw	a0,-36(s0)
204084d0:	376d                	jal	2040847a <__metal_driver_sifive_uart0_txready>
204084d2:	87aa                	mv	a5,a0
204084d4:	dfe5                	beqz	a5,204084cc <__metal_driver_sifive_uart0_putc+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:57
		/* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
204084d6:	fec42783          	lw	a5,-20(s0)
204084da:	fd842703          	lw	a4,-40(s0)
204084de:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:58
    return 0;
204084e0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:59
}
204084e2:	853e                	mv	a0,a5
204084e4:	50b2                	lw	ra,44(sp)
204084e6:	5422                	lw	s0,40(sp)
204084e8:	6145                	addi	sp,sp,48
204084ea:	8082                	ret

204084ec <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:63


int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c)
{
204084ec:	7179                	addi	sp,sp,-48
204084ee:	d606                	sw	ra,44(sp)
204084f0:	d422                	sw	s0,40(sp)
204084f2:	1800                	addi	s0,sp,48
204084f4:	fca42e23          	sw	a0,-36(s0)
204084f8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:65
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204084fc:	fdc42503          	lw	a0,-36(s0)
20408500:	e0fff0ef          	jal	ra,2040830e <__metal_driver_sifive_uart0_control_base>
20408504:	87aa                	mv	a5,a0
20408506:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:67
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);;
2040850a:	fec42783          	lw	a5,-20(s0)
2040850e:	0791                	addi	a5,a5,4
20408510:	439c                	lw	a5,0(a5)
20408512:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:68
    if( ch & UART_RXEMPTY ){
20408516:	fe842783          	lw	a5,-24(s0)
2040851a:	0007d763          	bgez	a5,20408528 <__metal_driver_sifive_uart0_getc+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:69
      *c = -1; /* aka: EOF in most of the world */
2040851e:	fd842783          	lw	a5,-40(s0)
20408522:	577d                	li	a4,-1
20408524:	c398                	sw	a4,0(a5)
20408526:	a801                	j	20408536 <__metal_driver_sifive_uart0_getc+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:71
    } else {
      *c = ch & 0x0ff;
20408528:	fe842783          	lw	a5,-24(s0)
2040852c:	0ff7f713          	andi	a4,a5,255
20408530:	fd842783          	lw	a5,-40(s0)
20408534:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:73
    }
    return 0;
20408536:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:74
}
20408538:	853e                	mv	a0,a5
2040853a:	50b2                	lw	ra,44(sp)
2040853c:	5422                	lw	s0,40(sp)
2040853e:	6145                	addi	sp,sp,48
20408540:	8082                	ret

20408542 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:78


int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart)
{
20408542:	7179                	addi	sp,sp,-48
20408544:	d622                	sw	s0,44(sp)
20408546:	1800                	addi	s0,sp,48
20408548:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:79
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2040854c:	fdc42783          	lw	a5,-36(s0)
20408550:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:80
    return uart->baud_rate;
20408554:	fec42783          	lw	a5,-20(s0)
20408558:	43dc                	lw	a5,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:81
}
2040855a:	853e                	mv	a0,a5
2040855c:	5432                	lw	s0,44(sp)
2040855e:	6145                	addi	sp,sp,48
20408560:	8082                	ret

20408562 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:84

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart, int baud_rate)
{
20408562:	7179                	addi	sp,sp,-48
20408564:	d606                	sw	ra,44(sp)
20408566:	d422                	sw	s0,40(sp)
20408568:	1800                	addi	s0,sp,48
2040856a:	fca42e23          	sw	a0,-36(s0)
2040856e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:85
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20408572:	fdc42783          	lw	a5,-36(s0)
20408576:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:86
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
2040857a:	fdc42503          	lw	a0,-36(s0)
2040857e:	d91ff0ef          	jal	ra,2040830e <__metal_driver_sifive_uart0_control_base>
20408582:	87aa                	mv	a5,a0
20408584:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:87
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20408588:	fdc42503          	lw	a0,-36(s0)
2040858c:	e03ff0ef          	jal	ra,2040838e <__metal_driver_sifive_uart0_clock>
20408590:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:89

    uart->baud_rate = baud_rate;
20408594:	fd842703          	lw	a4,-40(s0)
20408598:	fec42783          	lw	a5,-20(s0)
2040859c:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:91

    if (clock != NULL) {
2040859e:	fe442783          	lw	a5,-28(s0)
204085a2:	cbb1                	beqz	a5,204085f6 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:92
        long clock_rate = clock->vtable->get_rate_hz(clock);
204085a4:	fe442783          	lw	a5,-28(s0)
204085a8:	439c                	lw	a5,0(a5)
204085aa:	439c                	lw	a5,0(a5)
204085ac:	fe442503          	lw	a0,-28(s0)
204085b0:	9782                	jalr	a5
204085b2:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:93
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
204085b6:	fe042703          	lw	a4,-32(s0)
204085ba:	fd842783          	lw	a5,-40(s0)
204085be:	02f747b3          	div	a5,a4,a5
204085c2:	fff78713          	addi	a4,a5,-1
204085c6:	fe842783          	lw	a5,-24(s0)
204085ca:	07e1                	addi	a5,a5,24
204085cc:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:94
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
204085ce:	fe842783          	lw	a5,-24(s0)
204085d2:	07a1                	addi	a5,a5,8
204085d4:	439c                	lw	a5,0(a5)
204085d6:	fe842703          	lw	a4,-24(s0)
204085da:	0721                	addi	a4,a4,8
204085dc:	0017e793          	ori	a5,a5,1
204085e0:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:95
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
204085e2:	fe842783          	lw	a5,-24(s0)
204085e6:	07b1                	addi	a5,a5,12
204085e8:	439c                	lw	a5,0(a5)
204085ea:	fe842703          	lw	a4,-24(s0)
204085ee:	0731                	addi	a4,a4,12
204085f0:	0017e793          	ori	a5,a5,1
204085f4:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:97
    }
    return 0;
204085f6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:98
}
204085f8:	853e                	mv	a0,a5
204085fa:	50b2                	lw	ra,44(sp)
204085fc:	5422                	lw	s0,40(sp)
204085fe:	6145                	addi	sp,sp,48
20408600:	8082                	ret

20408602 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:101

static void pre_rate_change_callback_func(void *priv)
{
20408602:	7139                	addi	sp,sp,-64
20408604:	de06                	sw	ra,60(sp)
20408606:	dc22                	sw	s0,56(sp)
20408608:	0080                	addi	s0,sp,64
2040860a:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:102
    struct __metal_driver_sifive_uart0 *uart = priv;
2040860e:	fcc42783          	lw	a5,-52(s0)
20408612:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:103
    long control_base = __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20408616:	fcc42503          	lw	a0,-52(s0)
2040861a:	cf5ff0ef          	jal	ra,2040830e <__metal_driver_sifive_uart0_control_base>
2040861e:	87aa                	mv	a5,a0
20408620:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:104
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20408624:	fcc42503          	lw	a0,-52(s0)
20408628:	d67ff0ef          	jal	ra,2040838e <__metal_driver_sifive_uart0_clock>
2040862c:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:109

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20408630:	fe842783          	lw	a5,-24(s0)
20408634:	07a1                	addi	a5,a5,8
20408636:	4398                	lw	a4,0(a5)
20408638:	fe842783          	lw	a5,-24(s0)
2040863c:	07a1                	addi	a5,a5,8
2040863e:	86be                	mv	a3,a5
20408640:	fff907b7          	lui	a5,0xfff90
20408644:	17fd                	addi	a5,a5,-1
20408646:	8ff9                	and	a5,a5,a4
20408648:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
2040864a:	fe842783          	lw	a5,-24(s0)
2040864e:	07a1                	addi	a5,a5,8
20408650:	4398                	lw	a4,0(a5)
20408652:	fe842783          	lw	a5,-24(s0)
20408656:	07a1                	addi	a5,a5,8
20408658:	86be                	mv	a3,a5
2040865a:	67c1                	lui	a5,0x10
2040865c:	8fd9                	or	a5,a5,a4
2040865e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112

    while((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0) ;
20408660:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112 (discriminator 1)
20408662:	fe842783          	lw	a5,-24(s0)
20408666:	07d1                	addi	a5,a5,20
20408668:	439c                	lw	a5,0(a5)
2040866a:	8b85                	andi	a5,a5,1
2040866c:	dbfd                	beqz	a5,20408662 <pre_rate_change_callback_func+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118

    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol = (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
2040866e:	fe842783          	lw	a5,-24(s0)
20408672:	07a1                	addi	a5,a5,8
20408674:	439c                	lw	a5,0(a5)
20408676:	8b89                	andi	a5,a5,2
20408678:	c399                	beqz	a5,2040867e <pre_rate_change_callback_func+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 1)
2040867a:	47a5                	li	a5,9
2040867c:	a011                	j	20408680 <pre_rate_change_callback_func+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 2)
2040867e:	47a9                	li	a5,10
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 4)
20408680:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:119 (discriminator 4)
    long clk_freq = clock->vtable->get_rate_hz(clock);
20408684:	fe442783          	lw	a5,-28(s0)
20408688:	439c                	lw	a5,0(a5)
2040868a:	439c                	lw	a5,0(a5)
2040868c:	fe442503          	lw	a0,-28(s0)
20408690:	9782                	jalr	a5
20408692:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:120 (discriminator 4)
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20408696:	fe042703          	lw	a4,-32(s0)
2040869a:	fdc42783          	lw	a5,-36(s0)
2040869e:	02f707b3          	mul	a5,a4,a5
204086a2:	873e                	mv	a4,a5
204086a4:	fec42783          	lw	a5,-20(s0)
204086a8:	43dc                	lw	a5,4(a5)
204086aa:	02f757b3          	divu	a5,a4,a5
204086ae:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 4)

    for(volatile long x = 0; x < cycles_to_wait; x++)
204086b2:	fc042a23          	sw	zero,-44(s0)
204086b6:	a039                	j	204086c4 <pre_rate_change_callback_func+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:123 (discriminator 3)
        __asm__("nop");
204086b8:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 3)
    for(volatile long x = 0; x < cycles_to_wait; x++)
204086ba:	fd442783          	lw	a5,-44(s0)
204086be:	0785                	addi	a5,a5,1
204086c0:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 1)
204086c4:	fd442783          	lw	a5,-44(s0)
204086c8:	fd842703          	lw	a4,-40(s0)
204086cc:	fee7c6e3          	blt	a5,a4,204086b8 <pre_rate_change_callback_func+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:124
}
204086d0:	0001                	nop
204086d2:	50f2                	lw	ra,60(sp)
204086d4:	5462                	lw	s0,56(sp)
204086d6:	6121                	addi	sp,sp,64
204086d8:	8082                	ret

204086da <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:127

static void post_rate_change_callback_func(void *priv)
{
204086da:	7179                	addi	sp,sp,-48
204086dc:	d606                	sw	ra,44(sp)
204086de:	d422                	sw	s0,40(sp)
204086e0:	1800                	addi	s0,sp,48
204086e2:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:128
    struct __metal_driver_sifive_uart0 *uart = priv;
204086e6:	fdc42783          	lw	a5,-36(s0)
204086ea:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:129
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
204086ee:	fec42703          	lw	a4,-20(s0)
204086f2:	fec42783          	lw	a5,-20(s0)
204086f6:	43dc                	lw	a5,4(a5)
204086f8:	85be                	mv	a1,a5
204086fa:	853a                	mv	a0,a4
204086fc:	d33fc0ef          	jal	ra,2040542e <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:130
}
20408700:	0001                	nop
20408702:	50b2                	lw	ra,44(sp)
20408704:	5422                	lw	s0,40(sp)
20408706:	6145                	addi	sp,sp,48
20408708:	8082                	ret

2040870a <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:133

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate)
{
2040870a:	7139                	addi	sp,sp,-64
2040870c:	de06                	sw	ra,60(sp)
2040870e:	dc22                	sw	s0,56(sp)
20408710:	0080                	addi	s0,sp,64
20408712:	fca42623          	sw	a0,-52(s0)
20408716:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:134
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2040871a:	fcc42783          	lw	a5,-52(s0)
2040871e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:135
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20408722:	fcc42503          	lw	a0,-52(s0)
20408726:	c69ff0ef          	jal	ra,2040838e <__metal_driver_sifive_uart0_clock>
2040872a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:136
    struct __metal_driver_sifive_gpio0 *pinmux = __metal_driver_sifive_uart0_pinmux(guart);
2040872e:	fcc42503          	lw	a0,-52(s0)
20408732:	c8bff0ef          	jal	ra,204083bc <__metal_driver_sifive_uart0_pinmux>
20408736:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:138

    if(clock != NULL) {
2040873a:	fe842783          	lw	a5,-24(s0)
2040873e:	c7b9                	beqz	a5,2040878c <__metal_driver_sifive_uart0_init+0x82>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:139
        uart->pre_rate_change_callback.callback = &pre_rate_change_callback_func;
20408740:	fec42783          	lw	a5,-20(s0)
20408744:	20408737          	lui	a4,0x20408
20408748:	60270713          	addi	a4,a4,1538 # 20408602 <pre_rate_change_callback_func>
2040874c:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:140
        uart->pre_rate_change_callback.priv = guart;
2040874e:	fec42783          	lw	a5,-20(s0)
20408752:	fcc42703          	lw	a4,-52(s0)
20408756:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:141
        metal_clock_register_pre_rate_change_callback(clock, &(uart->pre_rate_change_callback));
20408758:	fec42783          	lw	a5,-20(s0)
2040875c:	07a1                	addi	a5,a5,8
2040875e:	85be                	mv	a1,a5
20408760:	fe842503          	lw	a0,-24(s0)
20408764:	20f1                	jal	20408830 <metal_clock_register_pre_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:143

        uart->post_rate_change_callback.callback = &post_rate_change_callback_func;
20408766:	fec42783          	lw	a5,-20(s0)
2040876a:	20408737          	lui	a4,0x20408
2040876e:	6da70713          	addi	a4,a4,1754 # 204086da <post_rate_change_callback_func>
20408772:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:144
        uart->post_rate_change_callback.priv = guart;
20408774:	fec42783          	lw	a5,-20(s0)
20408778:	fcc42703          	lw	a4,-52(s0)
2040877c:	cf98                	sw	a4,24(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:145
        metal_clock_register_post_rate_change_callback(clock, &(uart->post_rate_change_callback));
2040877e:	fec42783          	lw	a5,-20(s0)
20408782:	07d1                	addi	a5,a5,20
20408784:	85be                	mv	a1,a5
20408786:	fe842503          	lw	a0,-24(s0)
2040878a:	28d9                	jal	20408860 <metal_clock_register_post_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:148
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2040878c:	fec42783          	lw	a5,-20(s0)
20408790:	fc842583          	lw	a1,-56(s0)
20408794:	853e                	mv	a0,a5
20408796:	c99fc0ef          	jal	ra,2040542e <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:150

    if (pinmux != NULL) {
2040879a:	fe442783          	lw	a5,-28(s0)
2040879e:	cb95                	beqz	a5,204087d2 <__metal_driver_sifive_uart0_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:151
        long pinmux_output_selector = __metal_driver_sifive_uart0_pinmux_output_selector(guart);
204087a0:	fcc42503          	lw	a0,-52(s0)
204087a4:	c43ff0ef          	jal	ra,204083e6 <__metal_driver_sifive_uart0_pinmux_output_selector>
204087a8:	87aa                	mv	a5,a0
204087aa:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:152
        long pinmux_source_selector = __metal_driver_sifive_uart0_pinmux_source_selector(guart);
204087ae:	fcc42503          	lw	a0,-52(s0)
204087b2:	c5fff0ef          	jal	ra,20408410 <__metal_driver_sifive_uart0_pinmux_source_selector>
204087b6:	87aa                	mv	a5,a0
204087b8:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:153
        pinmux->gpio.vtable->enable_io(
204087bc:	fe442783          	lw	a5,-28(s0)
204087c0:	439c                	lw	a5,0(a5)
204087c2:	53dc                	lw	a5,36(a5)
204087c4:	fdc42603          	lw	a2,-36(s0)
204087c8:	fe042583          	lw	a1,-32(s0)
204087cc:	fe442503          	lw	a0,-28(s0)
204087d0:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:159
            (struct metal_gpio *) pinmux,
            pinmux_output_selector,
            pinmux_source_selector
        );
    }
}
204087d2:	0001                	nop
204087d4:	50f2                	lw	ra,60(sp)
204087d6:	5462                	lw	s0,56(sp)
204087d8:	6121                	addi	sp,sp,64
204087da:	8082                	ret

204087dc <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:59
}

/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *_metal_clock_append_to_callbacks(metal_clock_callback *list, metal_clock_callback *const cb) {
204087dc:	7179                	addi	sp,sp,-48
204087de:	d622                	sw	s0,44(sp)
204087e0:	1800                	addi	s0,sp,48
204087e2:	fca42e23          	sw	a0,-36(s0)
204087e6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:60
    cb->_next = NULL;
204087ea:	fd842783          	lw	a5,-40(s0)
204087ee:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:62

    if (!list) {
204087f2:	fdc42783          	lw	a5,-36(s0)
204087f6:	e781                	bnez	a5,204087fe <_metal_clock_append_to_callbacks+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:63
        return cb;
204087f8:	fd842783          	lw	a5,-40(s0)
204087fc:	a035                	j	20408828 <_metal_clock_append_to_callbacks+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:66
    }

    metal_clock_callback *current = list;
204087fe:	fdc42783          	lw	a5,-36(s0)
20408802:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68

    while ((current->_next) != NULL) {
20408806:	a031                	j	20408812 <_metal_clock_append_to_callbacks+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:69
        current = current->_next;
20408808:	fec42783          	lw	a5,-20(s0)
2040880c:	479c                	lw	a5,8(a5)
2040880e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68
    while ((current->_next) != NULL) {
20408812:	fec42783          	lw	a5,-20(s0)
20408816:	479c                	lw	a5,8(a5)
20408818:	fbe5                	bnez	a5,20408808 <_metal_clock_append_to_callbacks+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:72
    }

    current->_next = cb;
2040881a:	fec42783          	lw	a5,-20(s0)
2040881e:	fd842703          	lw	a4,-40(s0)
20408822:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:74

    return list;
20408824:	fdc42783          	lw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:75
}
20408828:	853e                	mv	a0,a5
2040882a:	5432                	lw	s0,44(sp)
2040882c:	6145                	addi	sp,sp,48
2040882e:	8082                	ret

20408830 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:139
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_pre_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
20408830:	1101                	addi	sp,sp,-32
20408832:	ce06                	sw	ra,28(sp)
20408834:	cc22                	sw	s0,24(sp)
20408836:	1000                	addi	s0,sp,32
20408838:	fea42623          	sw	a0,-20(s0)
2040883c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:140
    clk->_pre_rate_change_callback = _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20408840:	fec42783          	lw	a5,-20(s0)
20408844:	43dc                	lw	a5,4(a5)
20408846:	fe842583          	lw	a1,-24(s0)
2040884a:	853e                	mv	a0,a5
2040884c:	3f41                	jal	204087dc <_metal_clock_append_to_callbacks>
2040884e:	872a                	mv	a4,a0
20408850:	fec42783          	lw	a5,-20(s0)
20408854:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:141
}
20408856:	0001                	nop
20408858:	40f2                	lw	ra,28(sp)
2040885a:	4462                	lw	s0,24(sp)
2040885c:	6105                	addi	sp,sp,32
2040885e:	8082                	ret

20408860 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:150
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_post_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
20408860:	1101                	addi	sp,sp,-32
20408862:	ce06                	sw	ra,28(sp)
20408864:	cc22                	sw	s0,24(sp)
20408866:	1000                	addi	s0,sp,32
20408868:	fea42623          	sw	a0,-20(s0)
2040886c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:151
    clk->_post_rate_change_callback = _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20408870:	fec42783          	lw	a5,-20(s0)
20408874:	479c                	lw	a5,8(a5)
20408876:	fe842583          	lw	a1,-24(s0)
2040887a:	853e                	mv	a0,a5
2040887c:	3785                	jal	204087dc <_metal_clock_append_to_callbacks>
2040887e:	872a                	mv	a4,a0
20408880:	fec42783          	lw	a5,-20(s0)
20408884:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:152
}
20408886:	0001                	nop
20408888:	40f2                	lw	ra,28(sp)
2040888a:	4462                	lw	s0,24(sp)
2040888c:	6105                	addi	sp,sp,32
2040888e:	8082                	ret

20408890 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/cpu.h:208
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt* metal_cpu_interrupt_controller(struct metal_cpu *cpu)
{ return cpu->vtable->controller_interrupt(cpu); }
20408890:	1101                	addi	sp,sp,-32
20408892:	ce06                	sw	ra,28(sp)
20408894:	cc22                	sw	s0,24(sp)
20408896:	1000                	addi	s0,sp,32
20408898:	fea42623          	sw	a0,-20(s0)
2040889c:	fec42783          	lw	a5,-20(s0)
204088a0:	439c                	lw	a5,0(a5)
204088a2:	57dc                	lw	a5,44(a5)
204088a4:	fec42503          	lw	a0,-20(s0)
204088a8:	9782                	jalr	a5
204088aa:	87aa                	mv	a5,a0
204088ac:	853e                	mv	a0,a5
204088ae:	40f2                	lw	ra,28(sp)
204088b0:	4462                	lw	s0,24(sp)
204088b2:	6105                	addi	sp,sp,32
204088b4:	8082                	ret

204088b6 <metal_cpu_get>:
metal_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:8

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu* metal_cpu_get(unsigned int hartid)
{
204088b6:	1101                	addi	sp,sp,-32
204088b8:	ce22                	sw	s0,28(sp)
204088ba:	1000                	addi	s0,sp,32
204088bc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:9
    if (hartid < __METAL_DT_MAX_HARTS) {
204088c0:	fec42783          	lw	a5,-20(s0)
204088c4:	eb99                	bnez	a5,204088da <metal_cpu_get+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:10
        return (struct metal_cpu *)__metal_cpu_table[hartid];
204088c6:	800007b7          	lui	a5,0x80000
204088ca:	fec42703          	lw	a4,-20(s0)
204088ce:	070a                	slli	a4,a4,0x2
204088d0:	77078793          	addi	a5,a5,1904 # 80000770 <metal_segment_heap_target_end+0xffffe91c>
204088d4:	97ba                	add	a5,a5,a4
204088d6:	439c                	lw	a5,0(a5)
204088d8:	a011                	j	204088dc <metal_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:12
    }   
    return NULL;
204088da:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:13
}
204088dc:	853e                	mv	a0,a5
204088de:	4472                	lw	s0,28(sp)
204088e0:	6105                	addi	sp,sp,32
204088e2:	8082                	ret

204088e4 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:16

int metal_cpu_get_current_hartid()
{
204088e4:	1101                	addi	sp,sp,-32
204088e6:	ce22                	sw	s0,28(sp)
204088e8:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:19
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r" (mhartid));
204088ea:	f14027f3          	csrr	a5,mhartid
204088ee:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:20
    return mhartid;
204088f2:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:22
#endif
}
204088f6:	853e                	mv	a0,a5
204088f8:	4472                	lw	s0,28(sp)
204088fa:	6105                	addi	sp,sp,32
204088fc:	8082                	ret

204088fe <metal_shutdown>:
metal_shutdown():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message("There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code)
{
204088fe:	1101                	addi	sp,sp,-32
20408900:	ce22                	sw	s0,28(sp)
20408902:	1000                	addi	s0,sp,32
20408904:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
      __asm__ volatile ("nop");
20408908:	0001                	nop
2040890a:	bffd                	j	20408908 <metal_shutdown+0xa>
	...

20408980 <__metal_vector_table>:
IRQ_0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20408980:	c18fd06f          	j	20405d98 <metal_interrupt_vector_handler>

20408984 <IRQ_1>:
IRQ_1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20408984:	c14fd06f          	j	20405d98 <metal_interrupt_vector_handler>

20408988 <IRQ_2>:
IRQ_2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20408988:	c10fd06f          	j	20405d98 <metal_interrupt_vector_handler>

2040898c <IRQ_3>:
IRQ_3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040898c:	c3afd06f          	j	20405dc6 <metal_software_interrupt_vector_handler>

20408990 <IRQ_4>:
IRQ_4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20408990:	c08fd06f          	j	20405d98 <metal_interrupt_vector_handler>

20408994 <IRQ_5>:
IRQ_5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20408994:	c04fd06f          	j	20405d98 <metal_interrupt_vector_handler>

20408998 <IRQ_6>:
IRQ_6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20408998:	c00fd06f          	j	20405d98 <metal_interrupt_vector_handler>

2040899c <IRQ_7>:
IRQ_7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040899c:	d24fd06f          	j	20405ec0 <metal_timer_interrupt_vector_handler>

204089a0 <IRQ_8>:
IRQ_8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
204089a0:	bf8fd06f          	j	20405d98 <metal_interrupt_vector_handler>

204089a4 <IRQ_9>:
IRQ_9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
204089a4:	bf4fd06f          	j	20405d98 <metal_interrupt_vector_handler>

204089a8 <IRQ_10>:
IRQ_10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
204089a8:	bf0fd06f          	j	20405d98 <metal_interrupt_vector_handler>

204089ac <IRQ_11>:
IRQ_11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
204089ac:	becfd06f          	j	20405d98 <metal_interrupt_vector_handler>

204089b0 <IRQ_12>:
IRQ_12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
204089b0:	be8fd06f          	j	20405d98 <metal_interrupt_vector_handler>

204089b4 <IRQ_13>:
IRQ_13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
204089b4:	be4fd06f          	j	20405d98 <metal_interrupt_vector_handler>

204089b8 <IRQ_14>:
IRQ_14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
204089b8:	be0fd06f          	j	20405d98 <metal_interrupt_vector_handler>

204089bc <IRQ_15>:
IRQ_15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
204089bc:	bdcfd06f          	j	20405d98 <metal_interrupt_vector_handler>

204089c0 <IRQ_LC0>:
IRQ_LC0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
204089c0:	fbafd06f          	j	2040617a <metal_lc0_interrupt_vector_handler>

204089c4 <IRQ_LC1>:
IRQ_LC1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
204089c4:	84dfd06f          	j	20406210 <metal_lc1_interrupt_vector_handler>

204089c8 <IRQ_LC2>:
IRQ_LC2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
204089c8:	8dffd06f          	j	204062a6 <metal_lc2_interrupt_vector_handler>

204089cc <IRQ_LC3>:
IRQ_LC3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
204089cc:	971fd06f          	j	2040633c <metal_lc3_interrupt_vector_handler>

204089d0 <IRQ_LC4>:
IRQ_LC4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
204089d0:	a03fd06f          	j	204063d2 <metal_lc4_interrupt_vector_handler>

204089d4 <IRQ_LC5>:
IRQ_LC5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
204089d4:	a95fd06f          	j	20406468 <metal_lc5_interrupt_vector_handler>

204089d8 <IRQ_LC6>:
IRQ_LC6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
204089d8:	b27fd06f          	j	204064fe <metal_lc6_interrupt_vector_handler>

204089dc <IRQ_LC7>:
IRQ_LC7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
204089dc:	bb9fd06f          	j	20406594 <metal_lc7_interrupt_vector_handler>

204089e0 <IRQ_LC8>:
IRQ_LC8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
204089e0:	c4bfd06f          	j	2040662a <metal_lc8_interrupt_vector_handler>

204089e4 <IRQ_LC9>:
IRQ_LC9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
204089e4:	cddfd06f          	j	204066c0 <metal_lc9_interrupt_vector_handler>

204089e8 <IRQ_LC10>:
IRQ_LC10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
204089e8:	d6ffd06f          	j	20406756 <metal_lc10_interrupt_vector_handler>

204089ec <IRQ_LC11>:
IRQ_LC11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
204089ec:	e01fd06f          	j	204067ec <metal_lc11_interrupt_vector_handler>

204089f0 <IRQ_LC12>:
IRQ_LC12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
204089f0:	e93fd06f          	j	20406882 <metal_lc12_interrupt_vector_handler>

204089f4 <IRQ_LC13>:
IRQ_LC13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
204089f4:	f25fd06f          	j	20406918 <metal_lc13_interrupt_vector_handler>

204089f8 <IRQ_LC14>:
IRQ_LC14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
204089f8:	fb7fd06f          	j	204069ae <metal_lc14_interrupt_vector_handler>

204089fc <IRQ_LC15>:
IRQ_LC15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
204089fc:	848fe06f          	j	20406a44 <metal_lc15_interrupt_vector_handler>

20408a00 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:120
{
20408a00:	1101                	addi	sp,sp,-32
20408a02:	ce22                	sw	s0,28(sp)
20408a04:	1000                	addi	s0,sp,32
20408a06:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:121
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20408a0a:	fec42703          	lw	a4,-20(s0)
20408a0e:	800007b7          	lui	a5,0x80000
20408a12:	08078793          	addi	a5,a5,128 # 80000080 <metal_segment_heap_target_end+0xffffe22c>
20408a16:	00f71763          	bne	a4,a5,20408a24 <__metal_driver_fixed_clock_rate+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:122
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20408a1a:	03dfd7b7          	lui	a5,0x3dfd
20408a1e:	24078793          	addi	a5,a5,576 # 3dfd240 <__heap_size+0x3dfca40>
20408a22:	a011                	j	20408a26 <__metal_driver_fixed_clock_rate+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:125
		return 0;
20408a24:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:127
}
20408a26:	853e                	mv	a0,a5
20408a28:	4472                	lw	s0,28(sp)
20408a2a:	6105                	addi	sp,sp,32
20408a2c:	8082                	ret

20408a2e <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
#include <metal/drivers/fixed-clock.h>
#include <stddef.h>
#include <metal/machine.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk)
{
20408a2e:	1101                	addi	sp,sp,-32
20408a30:	ce06                	sw	ra,28(sp)
20408a32:	cc22                	sw	s0,24(sp)
20408a34:	1000                	addi	s0,sp,32
20408a36:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
    return __metal_driver_fixed_clock_rate(gclk);
20408a3a:	fec42503          	lw	a0,-20(s0)
20408a3e:	37c9                	jal	20408a00 <__metal_driver_fixed_clock_rate>
20408a40:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:15
}
20408a42:	853e                	mv	a0,a5
20408a44:	40f2                	lw	ra,28(sp)
20408a46:	4462                	lw	s0,24(sp)
20408a48:	6105                	addi	sp,sp,32
20408a4a:	8082                	ret

20408a4c <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk, long target_hz)
{
20408a4c:	1101                	addi	sp,sp,-32
20408a4e:	ce06                	sw	ra,28(sp)
20408a50:	cc22                	sw	s0,24(sp)
20408a52:	1000                	addi	s0,sp,32
20408a54:	fea42623          	sw	a0,-20(s0)
20408a58:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20408a5c:	fec42503          	lw	a0,-20(s0)
20408a60:	37f9                	jal	20408a2e <__metal_driver_fixed_clock_get_rate_hz>
20408a62:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:20
}
20408a64:	853e                	mv	a0,a5
20408a66:	40f2                	lw	ra,28(sp)
20408a68:	4462                	lw	s0,24(sp)
20408a6a:	6105                	addi	sp,sp,32
20408a6c:	8082                	ret

20408a6e <_exit>:
_exit():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:5
#include <metal/shutdown.h>

void
_exit(int exit_status)
{
20408a6e:	1101                	addi	sp,sp,-32
20408a70:	ce06                	sw	ra,28(sp)
20408a72:	cc22                	sw	s0,24(sp)
20408a74:	1000                	addi	s0,sp,32
20408a76:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:6
  metal_shutdown(exit_status);
20408a7a:	fec42503          	lw	a0,-20(s0)
20408a7e:	e81ff0ef          	jal	ra,204088fe <metal_shutdown>
