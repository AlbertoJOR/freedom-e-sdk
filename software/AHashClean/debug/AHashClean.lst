
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/debug/AHashClean.elf:     file format elf32-littleriscv
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/debug/AHashClean.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x000097a4 memsz 0x000097a4 flags rwx
    LOAD off    0x0000b298 vaddr 0x80001298 paddr 0x80001298 align 2**12
         filesz 0x00000000 memsz 0x00000fb4 flags rw-
    LOAD off    0x0000b000 vaddr 0x80000000 paddr 0x200197a8 align 2**12
         filesz 0x00001298 memsz 0x00001298 flags rw-
    LOAD off    0x0000c298 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x0000c298 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             00000194  20010000  20010000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text             00008544  20010200  20010200  00001200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata           00001050  20018748  20018748  00009748  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array       0000000c  20019798  20019798  0000a798  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .data             00001298  80000000  200197a8  0000b000  2**3  CONTENTS, ALLOC, LOAD, DATA
  5 .bss              000003b4  80001298  80001298  0000b298  2**3  ALLOC
  6 .stack            00000400  8000164c  8000164c  0000b298  2**0  ALLOC
  7 .heap             00000800  80001a4c  80001a4c  0000b298  2**0  ALLOC
  8 .debug_info       00025059  00000000  00000000  0000c298  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev     0000452b  00000000  00000000  000312f1  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges    00000be0  00000000  00000000  00035820  2**3  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges     000013e0  00000000  00000000  00036400  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_line       00011a49  00000000  00000000  000377e0  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_str        00004cee  00000000  00000000  00049229  2**0  CONTENTS, READONLY, DEBUGGING
 14 .comment          00000028  00000000  00000000  0004df17  2**0  CONTENTS, READONLY
 15 .riscv.attributes 0000002b  00000000  00000000  0004df3f  2**0  CONTENTS, READONLY
 16 .debug_frame      00002d90  00000000  00000000  0004df6c  2**2  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc        00006236  00000000  00000000  00050cfc  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
20010200 l    d  .text	00000000 .text
20018748 l    d  .rodata	00000000 .rodata
20019798 l    d  .init_array	00000000 .init_array
80000000 l    d  .data	00000000 .data
80001298 l    d  .bss	00000000 .bss
8000164c l    d  .stack	00000000 .stack
80001a4c l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 libriscv__mmachine__sifive-hifive1-revb_a-entry.o
20010060 l       .init	00000000 early_trap_vector
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010136 l       .init	00000000 _skip_init
20018bb8 l       .rodata	00000000 argv
20018bbc l       .rodata	00000000 envp
20018bc0 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 AHashClean.c
80000000 l     O .data	000007d0 plain_text.1597
8000129c l     O .bss	00000190 hash.1599
8000142c l     O .bss	00000190 performance.1598
00000000 l    df *ABS*	00000000 printf.c
20010336 l     F .text	00000020 _out_null
20010356 l     F .text	00000032 _out_char
20010388 l     F .text	0000004e _strnlen_s
200103d6 l     F .text	00000038 _is_digit
2001040e l     F .text	0000005e _atoi
2001046c l     F .text	00000108 _out_rev
20010574 l     F .text	0000025e _ntoa_format
200107d2 l     F .text	00000104 _ntoa_long
200108d6 l     F .text	0000012e _ntoa_long_long
20010a04 l     F .text	000005d0 _ftoa
20010fd4 l     F .text	0000066c _etoa
200189f0 l     O .rodata	00000050 pow10.2193
20011640 l     F .text	00000b7c _vsnprintf
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 fixunsdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800015bc l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 tty.c
200144b4 l     F .text	00000022 metal_tty_init
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
2001455e l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20014588 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
200145b0 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
200145ec l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2001474c l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20014c7c l     F .text	00000024 __metal_driver_cpu_hartid
20014ca0 l     F .text	0000002a __metal_driver_cpu_timebase
20014cca l     F .text	0000002a __metal_driver_cpu_interrupt_controller
00000000 l    df *ABS*	00000000 riscv_plic0.c
2001655c l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20016586 l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
200165b0 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
200165d8 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20016600 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20016b3c l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20016b56 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20016b6c l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20016b80 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20016c38 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20016c52 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20016c68 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20016c7c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20016d24 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20016d3e l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20016d58 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20016d6e l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20016d82 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20016d94 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20016da4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20016dba l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20016dcc l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
20018e6c l     O .rodata	00000880 pll_configs
20016dde l     F .text	0000004e get_pll_config_freq
20016e2c l     F .text	00000028 metal_sifive_fe310_g000_pll_init
20017068 l     F .text	000000ac find_closest_config
20017114 l     F .text	00000132 configure_pll
200173aa l     F .text	0000002a use_hfxosc
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
200173d4 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_gpio0.c
2001744c l     F .text	00000026 __metal_driver_sifive_gpio0_base
20017472 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
2001749c l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20017eb0 l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20017ef0 l     F .text	00000042 __metal_driver_sifive_uart0_interrupt_parent
20017f32 l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20017f6e l     F .text	00000048 __metal_driver_sifive_uart0_clock
20017fb6 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20017ff6 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_output_selector
20018036 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
20018240 l     F .text	000000d8 pre_rate_change_callback_func
20018318 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 libriscv__mmachine__sifive-hifive1-revb_a-vector.o
20018600 l       .text	00000000 IRQ_0
20018604 l       .text	00000000 IRQ_1
20018608 l       .text	00000000 IRQ_2
2001860c l       .text	00000000 IRQ_3
20018610 l       .text	00000000 IRQ_4
20018614 l       .text	00000000 IRQ_5
20018618 l       .text	00000000 IRQ_6
2001861c l       .text	00000000 IRQ_7
20018620 l       .text	00000000 IRQ_8
20018624 l       .text	00000000 IRQ_9
20018628 l       .text	00000000 IRQ_10
2001862c l       .text	00000000 IRQ_11
20018630 l       .text	00000000 IRQ_12
20018634 l       .text	00000000 IRQ_13
20018638 l       .text	00000000 IRQ_14
2001863c l       .text	00000000 IRQ_15
20018640 l       .text	00000000 IRQ_LC0
20018644 l       .text	00000000 IRQ_LC1
20018648 l       .text	00000000 IRQ_LC2
2001864c l       .text	00000000 IRQ_LC3
20018650 l       .text	00000000 IRQ_LC4
20018654 l       .text	00000000 IRQ_LC5
20018658 l       .text	00000000 IRQ_LC6
2001865c l       .text	00000000 IRQ_LC7
20018660 l       .text	00000000 IRQ_LC8
20018664 l       .text	00000000 IRQ_LC9
20018668 l       .text	00000000 IRQ_LC10
2001866c l       .text	00000000 IRQ_LC11
20018670 l       .text	00000000 IRQ_LC12
20018674 l       .text	00000000 IRQ_LC13
20018678 l       .text	00000000 IRQ_LC14
2001867c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20018680 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
800007d0 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200197a4 l       .init_array	00000000 __fini_array_end
200197a4 l       .init_array	00000000 __fini_array_start
200197a4 l       .init_array	00000000 __init_array_end
20019798 l       .init_array	00000000 __preinit_array_end
20019798 l       .init_array	00000000 __init_array_start
20019798 l       .init_array	00000000 __preinit_array_start
20019774 g     O .rodata	00000020 __metal_driver_vtable_sifive_uart0
200154d0  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20010310 g     F .text	00000026 _putchar
200184ae g     F .text	00000026 metal_clock_get_rate_hz
200181a0 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20014928 g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
2001342a g     F .text	0000006a .hidden __eqdf2
2001543a  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20010200 g     F .text	0000001e rdcycle
20015cc0 g     F .text	00000038 __metal_valid_interrupt_id
200160e2 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80001a58 g       .data	00000000 __global_pointer$
2001845a g     F .text	00000054 _metal_clock_append_to_callbacks
20016650 g     F .text	00000038 __metal_plic0_complete_interrupt
20015f40 g     F .text	0000014e __metal_driver_riscv_cpu_controller_interrupt_register
200185a2 g     F .text	0000002e metal_cpu_get
800011f0 g     O .data	00000020 __metal_dt_serial_10013000
20017a8a g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20018bcc g     O .rodata	0000004c __metal_driver_vtable_riscv_clint0
8000164c g       .bss	00000000 metal_segment_bss_target_end
2001461c g     F .text	0000009a __metal_clint0_mtime_get
200164f0 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000000 g       *ABS*	00000000 __metal_chicken_bit
2001783a g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20013494 g     F .text	000000a4 .hidden __gtdf2
2001423c g     F .text	0000000c __errno
08000000 g       .init_array	00000000 metal_segment_itim_target_start
200180b6 g     F .text	00000034 __metal_driver_sifive_uart0_txready
20010070 g     F .init	0000000e __metal_synchronize_harts
80001298 g       .bss	00000000 metal_segment_bss_target_start
200146b6 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20017cda g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80001648 g     O .bss	00000004 errno
20016ef8 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
2001851c g     F .text	00000030 metal_clock_register_pre_rate_change_callback
200157be  w    F .text	00000096 metal_lc9_interrupt_vector_handler
80001210 g     O .data	00000020 __metal_dt_serial_10023000
20018e20 g     O .rodata	0000004c __metal_driver_vtable_riscv_plic0
20018de0 g     O .rodata	00000040 __metal_driver_vtable_cpu
20014530 g     F .text	0000002e metal_uart_set_baud_rate
20018348 g     F .text	000000d2 __metal_driver_sifive_uart0_init
20016176 g     F .text	00000072 __metal_driver_cpu_mcycle_get
200196ec g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80001a4c g       .heap	00000000 metal_segment_heap_target_start
8000126c g     O .data	00000004 __metal_dt_cpu_0
200140ce g     F .text	0000006a .hidden __floatsidf
20015728  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20013538 g     F .text	000000a4 .hidden __ltdf2
20017246 g     F .text	00000164 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20015a16  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20014e62 g     F .text	00000018 __metal_default_exception_handler
20014c48 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
200166ec g     F .text	00000062 __metal_plic0_set_priority
200160fe g     F .text	0000005c __metal_driver_riscv_cpu_controller_set_vector_mode
20014072 g     F .text	0000005c .hidden __fixunsdfsi
20014cf4 g     F .text	00000030 __metal_driver_cpu_get
20018d94 g     O .rodata	0000004c __metal_driver_vtable_riscv_cpu_intc
20014d56 g     F .text	00000018 __metal_interrupt_global_disable
20015692  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20015854  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20016af4 g     F .text	00000048 __metal_driver_riscv_plic0_disable
20015db4 g     F .text	0000004e __metal_exception_register
2001630a g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
2001791c g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
20014f52 g     F .text	00000068 __metal_default_sw_handler
20012902 g     F .text	000005f2 .hidden __adddf3
2001854c g     F .text	00000030 metal_clock_register_post_rate_change_callback
8000083c g     O .data	0000000c __metal_dt_clock_2
20018076 g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
200125b0 g     F .text	00000352 .hidden __umoddi3
200179e2 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
80001290 g     O .data	00000008 __metal_driver_vtable_fixed_clock
8000125c g     O .data	00000004 _global_impure_ptr
20014fba  w    F .text	00000092 metal_timer_interrupt_vector_handler
200142ac g     F .text	0000006a __libc_init_array
2001795c g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
200158ea  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20012252 g     F .text	0000035e .hidden __udivdi3
20016d02 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20014138 g     F .text	00000050 .hidden __floatunsidf
2001608e g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
200178d6 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2001841a g     F .text	00000040 _metal_clock_call_all_callbacks
20010174 g     F .init	00000002 _init
20014db8 g     F .text	0000001a __metal_interrupt_timer_disable
20017ad4 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
200163c8 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20019738 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20017a22 g     F .text	00000068 __metal_driver_sifive_gpio0_enable_io
20014274 g     F .text	00000038 __libc_fini_array
80001248 g     O .data	0000000c __metal_dt_clock_4
20017e62 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20016352 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
2001400e g     F .text	00000064 .hidden __fixdfsi
80000000 g       .data	00000000 metal_segment_data_target_start
20014e0a g     F .text	0000002c __metal_interrupt_local_enable
20014c14 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20014462 g     F .text	0000002c metal_tty_putc
2001680e g     F .text	00000018 __metal_plic0_default_handler
20012212 g     F .text	00000012 write
80000830 g     O .data	0000000c __metal_dt_clock_0
20013538 g     F .text	000000a4 .hidden __ledf2
00000800 g       *ABS*	00000000 __heap_size
20014dee g     F .text	0000001c __metal_interrupt_external_disable
20018094 g     F .text	00000022 __metal_driver_sifive_uart0_get_interrupt_id
2001615a g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20015e02 g     F .text	0000013e __metal_driver_riscv_cpu_controller_interrupt_init
20014188 g     F .text	0000003c .hidden __clzsi2
200164aa g     F .text	00000046 __metal_driver_cpu_exception_register
20014d6e g     F .text	00000018 __metal_interrupt_software_enable
2001530e  w    F .text	00000096 metal_lc1_interrupt_vector_handler
80001298 g     O .bss	00000004 _global_atexit
20015bd8 g     F .text	00000050 __metal_controller_interrupt_vector_mode
2001439a g     F .text	000000c8 __call_exitprocs
80001a4c g       .stack	00000000 _sp
2001007e g     F .init	00000000 _start
20016b92 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
2001648a g     F .text	00000020 __metal_driver_cpu_controller_interrupt
2001651e g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20014dd2 g     F .text	0000001c __metal_interrupt_external_enable
20014316 g     F .text	00000084 __register_exitproc
200180ea g     F .text	00000040 __metal_driver_sifive_uart0_putc
200168b4 g     F .text	0000013c __metal_driver_riscv_plic0_init
20016aae g     F .text	00000046 __metal_driver_riscv_plic0_enable
200178aa g     F .text	0000002c __metal_driver_sifive_gpio0_output
200155fc  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20014d24 g     F .text	0000001a __metal_myhart_id
20017e82 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20014ec0  w    F .text	00000092 metal_software_interrupt_vector_handler
200160b8 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
20018180 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
2001480a g     F .text	000000da __metal_driver_riscv_clint0_register
80001264 g     O .data	00000008 __metal_dt_clint_2000000
20012ef4 g     F .text	00000536 .hidden __divdf3
200184d4 g     F .text	00000048 metal_clock_set_rate_hz
200135dc g     F .text	0000043c .hidden __muldf3
200177fa g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
20010176  w    F .init	00000000 secondary_main
20014e92  w    F .text	0000002e metal_interrupt_vector_handler
200166c0 g     F .text	0000002c __metal_plic0_get_threshold
200173e6 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20015cf8 g     F .text	000000bc __metal_local_interrupt_enable
20014ae0 g     F .text	00000134 __metal_driver_riscv_clint0_command_request
20015566  w    F .text	00000096 metal_lc5_interrupt_vector_handler
2001021e g     F .text	000000f2 main
80001298 g       .data	00000000 metal_segment_data_target_end
80001278 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20016366 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
2001642a g     F .text	00000060 __metal_driver_cpu_get_msip
200185ea g     F .text	0000000e metal_shutdown
08000000 g       .init_array	00000000 metal_segment_itim_target_end
2001653c g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20016622 g     F .text	0000002e __metal_plic0_claim_interrupt
20015980  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2001490c g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80001274 g     O .data	00000004 __metal_dt_prci_10008000
200161e8 g     F .text	00000046 __metal_driver_cpu_timebase_get
20010000 g       .init	00000000 _enter
200185d0 g     F .text	0000001a metal_cpu_get_current_hartid
20016c8e g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20018600 g       .text	00000000 __metal_vector_table
200197a8 g       *ABS*	00000000 metal_segment_itim_source_start
80001260  w    O .data	00000004 __metal_cpu_table
2001342a g     F .text	0000006a .hidden __nedf2
80000860 g     O .data	000003b8 __metal_dt_cpu_0_interrupt_controller
20010174 g     F .init	00000002 _fini
20018ab8 g     O .rodata	00000100 .hidden __clz_tab
20014d3e g     F .text	00000018 __metal_interrupt_global_enable
20014232 g     F .text	0000000a atexit
2001448e g     F .text	00000026 metal_tty_putc_raw
20012224 g     F .text	0000002e _write_r
20014d9e g     F .text	0000001a __metal_interrupt_timer_enable
2001812a g     F .text	00000056 __metal_driver_sifive_uart0_getc
20014a2e g     F .text	000000b2 __metal_driver_riscv_clint0_disable
80001258 g     O .data	00000004 _impure_ptr
20016294 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20016e54 g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000848 g     O .data	0000000c __metal_dt_clock_5
20017414 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
200186f0 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
2001497c g     F .text	000000b2 __metal_driver_riscv_clint0_enable
200197a8 g       *ABS*	00000000 metal_segment_data_source_start
8000224c g       .heap	00000000 metal_segment_heap_target_end
20015c28 g     F .text	00000098 __metal_controller_interrupt_vector
8000123c g     O .data	0000000c __metal_dt_clock_1
80000c18 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
2001799c g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
200121bc g     F .text	00000056 printf_
2001504c g     F .text	00000066 __metal_default_timer_handler
200141c4 g     F .text	0000006e _write
20016826 g     F .text	0000008e __metal_plic0_handler
200153a4  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20015b42  w    F .text	00000096 metal_lc15_interrupt_vector_handler
2001857c g     F .text	00000026 metal_cpu_interrupt_controller
20014248 g     F .text	0000002c exit
2001870e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
80001270 g     O .data	00000004 __metal_dt_gpio_10012000
20014e7a g     F .text	00000018 __metal_default_interrupt_handler
20014502 g     F .text	0000002e metal_uart_putc
20017880 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20015100 g     F .text	00000152 __metal_exception_handler
20015278  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20018730 g     F .text	00000014 _exit
2001622e g     F .text	00000066 __metal_driver_cpu_mtime_get
200148e4 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20013494 g     F .text	000000a4 .hidden __gedf2
20015aac  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80001280 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20014782 g     F .text	00000088 __metal_driver_riscv_clint0_init
20013a18 g     F .text	000005f6 .hidden __subdf3
20016324 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20016782 g     F .text	0000008c __metal_plic0_enable
2001006e  w      .init	00000000 __register_frame_info
20016c16 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20016338 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20014e36 g     F .text	0000002c __metal_interrupt_local_disable
20014d86 g     F .text	00000018 __metal_interrupt_software_disable
2001674e g     F .text	00000034 __metal_plic0_get_priority
200144d6 g     F .text	0000002c metal_uart_init
80001230 g     O .data	0000000c __metal_dt_clock_3
80000854 g     O .data	0000000c __metal_dt_clock_6
20016688 g     F .text	00000038 __metal_plic0_set_threshold
80001288 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
200169f0 g     F .text	000000be __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff2197          	auipc	gp,0x5fff2
20010004:	a5818193          	addi	gp,gp,-1448 # 80001a58 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:29
.option pop

    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010008:	00000297          	auipc	t0,0x0
2001000c:	05828293          	addi	t0,t0,88 # 20010060 <early_trap_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:30
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:32
    /* enable chicken bit if core is bullet series*/
    la t0, __metal_chicken_bit
20010014:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:33
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:34
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:43
     * C, so here we set up a C environment.  First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
20010020:	dfff0117          	auipc	sp,0xdfff0
20010024:	fe010113          	addi	sp,sp,-32 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:52
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    .weak __metal_before_start
    la ra, __metal_before_start
20010028:	dfff0097          	auipc	ra,0xdfff0
2001002c:	fd808093          	addi	ra,ra,-40 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:53
    beqz ra, 1f
20010030:	00008363          	beqz	ra,20010036 <_enter+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:54
    jalr ra
20010034:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:60
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010036:	f1402573          	csrr	a0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:61
    li a1, 0
2001003a:	4581                	li	a1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:62
    li a2, 0
2001003c:	4601                	li	a2,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:63
    call _start
2001003e:	2081                	jal	2001007e <_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:68

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20010040:	dfff0097          	auipc	ra,0xdfff0
20010044:	fc008093          	addi	ra,ra,-64 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:69
    beqz ra, 1f
20010048:	00008363          	beqz	ra,2001004e <_enter+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:70
    jalr ra
2001004c:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:75
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001004e:	00000297          	auipc	t0,0x0
20010052:	00c28293          	addi	t0,t0,12 # 2001005a <_enter+0x5a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:76
     csrw mtvec, t0
20010056:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:78
1:
     lw t1, 0(x0)
2001005a:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:79
     j 1b
2001005e:	bff5                	j	2001005a <_enter+0x5a>

20010060 <early_trap_vector>:
early_trap_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:89
 * you end up here then there's a bug in the early boot code somewhere. */
.section .text.metal.init.trapvec
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010060:	342022f3          	csrr	t0,mcause
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:90
    csrr t1, mepc
20010064:	34102373          	csrr	t1,mepc
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:91
    csrr t2, mtval
20010068:	343023f3          	csrr	t2,mtval
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:92
    j early_trap_vector
2001006c:	bfd5                	j	20010060 <early_trap_vector>

2001006e <__register_frame_info>:
__register_frame_info():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:105
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2001006e:	8082                	ret

20010070 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init")))
void __metal_synchronize_harts() {
20010070:	1141                	addi	sp,sp,-16
20010072:	c622                	sw	s0,12(sp)
20010074:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:61
        /* Wait for hart 0 to clear the MSIP bit */
        while (METAL_MSIP(msip_base, hart) == 1) ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010076:	0001                	nop
20010078:	4432                	lw	s0,12(sp)
2001007a:	0141                	addi	sp,sp,16
2001007c:	8082                	ret

2001007e <_start>:
_start():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
2001007e:	8406                	mv	s0,ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20010080:	5fff2197          	auipc	gp,0x5fff2
20010084:	9d818193          	addi	gp,gp,-1576 # 80001a58 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:51

  /* The METAL is designed for a bare-metal environment and therefor is expected
   * to define its own stack pointer.  We also align the stack pointer here
   * because the only RISC-V ABI that's currently defined mandates 16-byte
   * stack alignment. */
  la sp, _sp
20010088:	ff418113          	addi	sp,gp,-12 # 80001a4c <_sp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:54

  /* Increment by hartid number of stack sizes */
  li t0, 0
2001008c:	4281                	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:55
  la t1, __stack_size
2001008e:	40000313          	li	t1,1024
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:57
1:
  beq t0, a0, 1f
20010092:	00a28563          	beq	t0,a0,2001009c <_start+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:58
  add sp, sp, t1
20010096:	911a                	add	sp,sp,t1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:59
  addi t0, t0, 1
20010098:	0285                	addi	t0,t0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:60
  j 1b
2001009a:	bfe5                	j	20010092 <_start+0x14>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:62
1:
  andi sp, sp, -16
2001009c:	ff017113          	andi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:65

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
200100a0:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:66
  bne a0, t0, _skip_init
200100a4:	08551963          	bne	a0,t0,20010136 <_skip_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:75
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
200100a8:	00009297          	auipc	t0,0x9
200100ac:	70028293          	addi	t0,t0,1792 # 200197a8 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:76
  la t1, metal_segment_data_target_start
200100b0:	5fff0317          	auipc	t1,0x5fff0
200100b4:	f5030313          	addi	t1,t1,-176 # 80000000 <metal_segment_data_target_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:77
  la t2, metal_segment_data_target_end
200100b8:	84018393          	addi	t2,gp,-1984 # 80001298 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:79

  beq t0, t1, 2f
200100bc:	00628c63          	beq	t0,t1,200100d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:80
  bge t1, t2, 2f
200100c0:	00735a63          	bge	t1,t2,200100d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:84

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200100c4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  addi t0, t0, 4
200100c8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  sw   a0, 0(t1)
200100ca:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:87
  addi t1, t1, 4
200100ce:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:88
  blt  t1, t2, 1b
200100d0:	fe734ae3          	blt	t1,t2,200100c4 <_start+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:99
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
200100d4:	00009297          	auipc	t0,0x9
200100d8:	6d428293          	addi	t0,t0,1748 # 200197a8 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:100
  la t1, metal_segment_itim_target_start
200100dc:	e7ff0317          	auipc	t1,0xe7ff0
200100e0:	f2430313          	addi	t1,t1,-220 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:101
  la t2, metal_segment_itim_target_end
200100e4:	e7ff0397          	auipc	t2,0xe7ff0
200100e8:	f1c38393          	addi	t2,t2,-228 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:103

  beq t0, t1, 2f
200100ec:	00628c63          	beq	t0,t1,20010104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:104
  bge t1, t2, 2f
200100f0:	00735a63          	bge	t1,t2,20010104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:108

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200100f4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:109
  addi t0, t0, 4
200100f8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:110
  sw   a0, 0(t1)
200100fa:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:111
  addi t1, t1, 4
200100fe:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:112
  blt  t1, t2, 1b
20010100:	fe734ae3          	blt	t1,t2,200100f4 <_start+0x76>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:124
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
20010104:	0000100f          	fence.i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:127

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20010108:	5fff1317          	auipc	t1,0x5fff1
2001010c:	19030313          	addi	t1,t1,400 # 80001298 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:128
  la t2, metal_segment_bss_target_end
20010110:	bf418393          	addi	t2,gp,-1036 # 8000164c <metal_segment_bss_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:130

  bge t1, t2, 2f
20010114:	00735763          	bge	t1,t2,20010122 <_start+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:134

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20010118:	00032023          	sw	zero,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:135
  addi t1, t1, 4
2001011c:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:136
  blt  t1, t2, 1b
2001011e:	fe734de3          	blt	t1,t2,20010118 <_start+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:147
2:

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010122:	c211                	beqz	a2,20010126 <_start+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:148
  jalr a2
20010124:	9602                	jalr	a2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:152
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010126:	00004517          	auipc	a0,0x4
2001012a:	14e50513          	addi	a0,a0,334 # 20014274 <__libc_fini_array>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:153
  call atexit
2001012e:	104040ef          	jal	ra,20014232 <atexit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:154
  call __libc_init_array
20010132:	17a040ef          	jal	ra,200142ac <__libc_init_array>

20010136 <_skip_init>:
_skip_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:160

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010136:	3f2d                	jal	20010070 <__metal_synchronize_harts>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:163

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  csrr a5, misa
20010138:	301027f3          	csrr	a5,misa
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:164
  li   a4, 0x10028
2001013c:	00010737          	lui	a4,0x10
20010140:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:165
  and  a5, a5, a4
20010144:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:166
  beqz a5, 1f
20010146:	cb89                	beqz	a5,20010158 <_skip_init+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  csrr a5, mstatus
20010148:	300027f3          	csrr	a5,mstatus
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:168
  lui  a4, 0x2
2001014c:	6709                	lui	a4,0x2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:169
  or   a5, a5, a4
2001014e:	8fd9                	or	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:170
  csrw mstatus, a5
20010150:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:171
  csrwi fcsr, 0
20010154:	00305073          	csrwi	fcsr,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:177
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20010158:	4505                	li	a0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  la a1, argv  /* argv = {"libgloss", NULL} */
2001015a:	00009597          	auipc	a1,0x9
2001015e:	a5e58593          	addi	a1,a1,-1442 # 20018bb8 <argv>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  la a2, envp  /* envp = {NULL} */
20010162:	00009617          	auipc	a2,0x9
20010166:	a5a60613          	addi	a2,a2,-1446 # 20018bbc <envp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:180
  call secondary_main
2001016a:	2031                	jal	20010176 <secondary_main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:186

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2001016c:	0dc040ef          	jal	ra,20014248 <exit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:191

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
20010170:	80a2                	mv	ra,s0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:192
  ret
20010172:	8082                	ret

20010174 <_fini>:
_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:204
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
20010174:	8082                	ret

20010176 <secondary_main>:
secondary_main():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:215
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
20010176:	1141                	addi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:217
#if __riscv_xlen == 32
  sw ra, 4(sp)
20010178:	c206                	sw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:221
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
2001017a:	f14022f3          	csrr	t0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  la t1, __metal_boot_hart
2001017e:	00000313          	li	t1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  beq t0, t1, 2f
20010182:	00628563          	beq	t0,t1,2001018c <secondary_main+0x16>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:225
1:
  wfi
20010186:	10500073          	wfi
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  j 1b
2001018a:	bff5                	j	20010186 <secondary_main+0x10>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:228
2:
  call main
2001018c:	2849                	jal	2001021e <main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:230
#if __riscv_xlen == 32
  lw ra, 4(sp)
2001018e:	4092                	lw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:234
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
20010190:	0141                	addi	sp,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  ret
20010192:	8082                	ret

Disassembly of section .text:

20010200 <rdcycle>:
rdcycle():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/csr.h:50
#define rdtime() read_csr(time)
// #define rdcycle() read_csr(cycle)
#define rdinstret() read_csr(instret)


unsigned rdcycle() {
20010200:	1101                	addi	sp,sp,-32
20010202:	ce22                	sw	s0,28(sp)
20010204:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/csr.h:51
  unsigned mcycle = 0;
20010206:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/csr.h:53

  asm volatile ("csrr %0,mcycle"   : "=r" (mcycle)  );
2001020a:	b00027f3          	csrr	a5,mcycle
2001020e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/csr.h:55

  return mcycle;
20010212:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/csr.h:56
}
20010216:	853e                	mv	a0,a5
20010218:	4472                	lw	s0,28(sp)
2001021a:	6105                	addi	sp,sp,32
2001021c:	8082                	ret

2001021e <main>:
main():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:6

#include "aead.h"
#include "printf.h"
#include "csr.h"

int main(void) {
2001021e:	7179                	addi	sp,sp,-48
20010220:	d606                	sw	ra,44(sp)
20010222:	d422                	sw	s0,40(sp)
20010224:	1800                	addi	s0,sp,48
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:7
    u32 plain_len =  1000;
20010226:	3e800793          	li	a5,1000
2001022a:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:13

    static u32 plain_text[500] = {0x11121314, 0x25262728, 0x393a3b3c, 0x0d0e0f00,
                                       0x41424344, 0x55565758, 0x696a6b6c, 0x7d7e7f70};
    static  u32 performance[100] = {0};
    static u32 hash[100] = {0};
    u32 rd = 0;
2001022e:	fe042023          	sw	zero,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:33

    start = rdcycle();
    rd = plain_text[10];
    end = rdcycle();
    printf("simple load   SW = %d cycles\n",end-start);*/
  for(int i= 0 ; i < 100 ; i ++){
20010232:	fe042623          	sw	zero,-20(s0)
20010236:	a89d                	j	200102ac <main+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:34 (discriminator 3)
     start = rdcycle();
20010238:	37e1                	jal	20010200 <rdcycle>
2001023a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:36 (discriminator 3)
    //crypto_hash(plain_text,plain_len,hash,0);
    rd = plain_text[i] + 1;
2001023e:	800007b7          	lui	a5,0x80000
20010242:	00078713          	mv	a4,a5
20010246:	fec42783          	lw	a5,-20(s0)
2001024a:	078a                	slli	a5,a5,0x2
2001024c:	97ba                	add	a5,a5,a4
2001024e:	439c                	lw	a5,0(a5)
20010250:	0785                	addi	a5,a5,1
20010252:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:38 (discriminator 3)

   rd = rd +2;
20010256:	fe042783          	lw	a5,-32(s0)
2001025a:	0789                	addi	a5,a5,2
2001025c:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:39 (discriminator 3)
   rd = rd + 5;
20010260:	fe042783          	lw	a5,-32(s0)
20010264:	0795                	addi	a5,a5,5
20010266:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:40 (discriminator 3)
   hash[i] = rd;
2001026a:	800017b7          	lui	a5,0x80001
2001026e:	29c78713          	addi	a4,a5,668 # 8000129c <metal_segment_heap_target_end+0xfffff050>
20010272:	fec42783          	lw	a5,-20(s0)
20010276:	078a                	slli	a5,a5,0x2
20010278:	97ba                	add	a5,a5,a4
2001027a:	fe042703          	lw	a4,-32(s0)
2001027e:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:41 (discriminator 3)
    end = rdcycle();
20010280:	3741                	jal	20010200 <rdcycle>
20010282:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:42 (discriminator 3)
    performance[i] = end-start;
20010286:	fd842703          	lw	a4,-40(s0)
2001028a:	fdc42783          	lw	a5,-36(s0)
2001028e:	8f1d                	sub	a4,a4,a5
20010290:	800017b7          	lui	a5,0x80001
20010294:	42c78693          	addi	a3,a5,1068 # 8000142c <metal_segment_heap_target_end+0xfffff1e0>
20010298:	fec42783          	lw	a5,-20(s0)
2001029c:	078a                	slli	a5,a5,0x2
2001029e:	97b6                	add	a5,a5,a3
200102a0:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:33 (discriminator 3)
  for(int i= 0 ; i < 100 ; i ++){
200102a2:	fec42783          	lw	a5,-20(s0)
200102a6:	0785                	addi	a5,a5,1
200102a8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:33 (discriminator 1)
200102ac:	fec42703          	lw	a4,-20(s0)
200102b0:	06300793          	li	a5,99
200102b4:	f8e7d2e3          	bge	a5,a4,20010238 <main+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:45

  }
  printf_("SW Hash \n");
200102b8:	200187b7          	lui	a5,0x20018
200102bc:	74878513          	addi	a0,a5,1864 # 20018748 <_exit+0x18>
200102c0:	6fd010ef          	jal	ra,200121bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:46
  for(int i = 0 ; i < 100 ; i ++){
200102c4:	fe042423          	sw	zero,-24(s0)
200102c8:	a805                	j	200102f8 <main+0xda>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:47 (discriminator 3)
      printf_("%d:   %u\n", i, performance[i]);
200102ca:	800017b7          	lui	a5,0x80001
200102ce:	42c78713          	addi	a4,a5,1068 # 8000142c <metal_segment_heap_target_end+0xfffff1e0>
200102d2:	fe842783          	lw	a5,-24(s0)
200102d6:	078a                	slli	a5,a5,0x2
200102d8:	97ba                	add	a5,a5,a4
200102da:	439c                	lw	a5,0(a5)
200102dc:	863e                	mv	a2,a5
200102de:	fe842583          	lw	a1,-24(s0)
200102e2:	200187b7          	lui	a5,0x20018
200102e6:	75478513          	addi	a0,a5,1876 # 20018754 <_exit+0x24>
200102ea:	6d3010ef          	jal	ra,200121bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:46 (discriminator 3)
  for(int i = 0 ; i < 100 ; i ++){
200102ee:	fe842783          	lw	a5,-24(s0)
200102f2:	0785                	addi	a5,a5,1
200102f4:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:46 (discriminator 1)
200102f8:	fe842703          	lw	a4,-24(s0)
200102fc:	06300793          	li	a5,99
20010300:	fce7d5e3          	bge	a5,a4,200102ca <main+0xac>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:51
  }


    return 0;
20010304:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/AHashClean.c:54


20010306:	853e                	mv	a0,a5
20010308:	50b2                	lw	ra,44(sp)
2001030a:	5422                	lw	s0,40(sp)
2001030c:	6145                	addi	sp,sp,48
2001030e:	8082                	ret

20010310 <_putchar>:
_putchar():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:120
// import float.h for DBL_MAX
#if defined(PRINTF_SUPPORT_FLOAT)
#include <float.h>
#endif

void _putchar(char character){
20010310:	1101                	addi	sp,sp,-32
20010312:	ce06                	sw	ra,28(sp)
20010314:	cc22                	sw	s0,24(sp)
20010316:	1000                	addi	s0,sp,32
20010318:	87aa                	mv	a5,a0
2001031a:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:121
    write(1, &character, 1);
2001031e:	fef40793          	addi	a5,s0,-17
20010322:	4605                	li	a2,1
20010324:	85be                	mv	a1,a5
20010326:	4505                	li	a0,1
20010328:	6eb010ef          	jal	ra,20012212 <write>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:122
}
2001032c:	0001                	nop
2001032e:	40f2                	lw	ra,28(sp)
20010330:	4462                	lw	s0,24(sp)
20010332:	6105                	addi	sp,sp,32
20010334:	8082                	ret

20010336 <_out_null>:
_out_null():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:146
}


// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
20010336:	1101                	addi	sp,sp,-32
20010338:	ce22                	sw	s0,28(sp)
2001033a:	1000                	addi	s0,sp,32
2001033c:	87aa                	mv	a5,a0
2001033e:	feb42423          	sw	a1,-24(s0)
20010342:	fec42223          	sw	a2,-28(s0)
20010346:	fed42023          	sw	a3,-32(s0)
2001034a:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:148
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
2001034e:	0001                	nop
20010350:	4472                	lw	s0,28(sp)
20010352:	6105                	addi	sp,sp,32
20010354:	8082                	ret

20010356 <_out_char>:
_out_char():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:153


// internal _putchar wrapper
static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
{
20010356:	1101                	addi	sp,sp,-32
20010358:	ce06                	sw	ra,28(sp)
2001035a:	cc22                	sw	s0,24(sp)
2001035c:	1000                	addi	s0,sp,32
2001035e:	87aa                	mv	a5,a0
20010360:	feb42423          	sw	a1,-24(s0)
20010364:	fec42223          	sw	a2,-28(s0)
20010368:	fed42023          	sw	a3,-32(s0)
2001036c:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:155
  (void)buffer; (void)idx; (void)maxlen;
  if (character) {
20010370:	fef44783          	lbu	a5,-17(s0)
20010374:	c789                	beqz	a5,2001037e <_out_char+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:156
    _putchar(character);
20010376:	fef44783          	lbu	a5,-17(s0)
2001037a:	853e                	mv	a0,a5
2001037c:	3f51                	jal	20010310 <_putchar>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:158
  }
}
2001037e:	0001                	nop
20010380:	40f2                	lw	ra,28(sp)
20010382:	4462                	lw	s0,24(sp)
20010384:	6105                	addi	sp,sp,32
20010386:	8082                	ret

20010388 <_strnlen_s>:
_strnlen_s():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:175


// internal secure strlen
// \return The length of the string (excluding the terminating 0) limited by 'maxsize'
static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
{
20010388:	7179                	addi	sp,sp,-48
2001038a:	d622                	sw	s0,44(sp)
2001038c:	1800                	addi	s0,sp,48
2001038e:	fca42e23          	sw	a0,-36(s0)
20010392:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:177
  const char* s;
  for (s = str; *s && maxsize--; ++s);
20010396:	fdc42783          	lw	a5,-36(s0)
2001039a:	fef42623          	sw	a5,-20(s0)
2001039e:	a031                	j	200103aa <_strnlen_s+0x22>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:177 (discriminator 4)
200103a0:	fec42783          	lw	a5,-20(s0)
200103a4:	0785                	addi	a5,a5,1
200103a6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:177 (discriminator 1)
200103aa:	fec42783          	lw	a5,-20(s0)
200103ae:	0007c783          	lbu	a5,0(a5)
200103b2:	cb81                	beqz	a5,200103c2 <_strnlen_s+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:177 (discriminator 3)
200103b4:	fd842783          	lw	a5,-40(s0)
200103b8:	fff78713          	addi	a4,a5,-1
200103bc:	fce42c23          	sw	a4,-40(s0)
200103c0:	f3e5                	bnez	a5,200103a0 <_strnlen_s+0x18>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:178
  return (unsigned int)(s - str);
200103c2:	fec42703          	lw	a4,-20(s0)
200103c6:	fdc42783          	lw	a5,-36(s0)
200103ca:	40f707b3          	sub	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:179
}
200103ce:	853e                	mv	a0,a5
200103d0:	5432                	lw	s0,44(sp)
200103d2:	6145                	addi	sp,sp,48
200103d4:	8082                	ret

200103d6 <_is_digit>:
_is_digit():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:185


// internal test if char is a digit (0-9)
// \return true if char is a digit
static inline bool _is_digit(char ch)
{
200103d6:	1101                	addi	sp,sp,-32
200103d8:	ce22                	sw	s0,28(sp)
200103da:	1000                	addi	s0,sp,32
200103dc:	87aa                	mv	a5,a0
200103de:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:186
  return (ch >= '0') && (ch <= '9');
200103e2:	fef44703          	lbu	a4,-17(s0)
200103e6:	02f00793          	li	a5,47
200103ea:	00e7fa63          	bgeu	a5,a4,200103fe <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:186 (discriminator 1)
200103ee:	fef44703          	lbu	a4,-17(s0)
200103f2:	03900793          	li	a5,57
200103f6:	00e7e463          	bltu	a5,a4,200103fe <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:186 (discriminator 3)
200103fa:	4785                	li	a5,1
200103fc:	a011                	j	20010400 <_is_digit+0x2a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:186 (discriminator 4)
200103fe:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:186 (discriminator 6)
20010400:	8b85                	andi	a5,a5,1
20010402:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:187 (discriminator 6)
}
20010406:	853e                	mv	a0,a5
20010408:	4472                	lw	s0,28(sp)
2001040a:	6105                	addi	sp,sp,32
2001040c:	8082                	ret

2001040e <_atoi>:
_atoi():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:192


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
2001040e:	7179                	addi	sp,sp,-48
20010410:	d606                	sw	ra,44(sp)
20010412:	d422                	sw	s0,40(sp)
20010414:	1800                	addi	s0,sp,48
20010416:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:193
  unsigned int i = 0U;
2001041a:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:194
  while (_is_digit(**str)) {
2001041e:	a03d                	j	2001044c <_atoi+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:195
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
20010420:	fec42703          	lw	a4,-20(s0)
20010424:	87ba                	mv	a5,a4
20010426:	078a                	slli	a5,a5,0x2
20010428:	97ba                	add	a5,a5,a4
2001042a:	0786                	slli	a5,a5,0x1
2001042c:	863e                	mv	a2,a5
2001042e:	fdc42783          	lw	a5,-36(s0)
20010432:	439c                	lw	a5,0(a5)
20010434:	00178693          	addi	a3,a5,1
20010438:	fdc42703          	lw	a4,-36(s0)
2001043c:	c314                	sw	a3,0(a4)
2001043e:	0007c783          	lbu	a5,0(a5)
20010442:	97b2                	add	a5,a5,a2
20010444:	fd078793          	addi	a5,a5,-48
20010448:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:194
  while (_is_digit(**str)) {
2001044c:	fdc42783          	lw	a5,-36(s0)
20010450:	439c                	lw	a5,0(a5)
20010452:	0007c783          	lbu	a5,0(a5)
20010456:	853e                	mv	a0,a5
20010458:	3fbd                	jal	200103d6 <_is_digit>
2001045a:	87aa                	mv	a5,a0
2001045c:	f3f1                	bnez	a5,20010420 <_atoi+0x12>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:197
  }
  return i;
2001045e:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:198
}
20010462:	853e                	mv	a0,a5
20010464:	50b2                	lw	ra,44(sp)
20010466:	5422                	lw	s0,40(sp)
20010468:	6145                	addi	sp,sp,48
2001046a:	8082                	ret

2001046c <_out_rev>:
_out_rev():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:203


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
2001046c:	7139                	addi	sp,sp,-64
2001046e:	de06                	sw	ra,60(sp)
20010470:	dc22                	sw	s0,56(sp)
20010472:	0080                	addi	s0,sp,64
20010474:	fca42e23          	sw	a0,-36(s0)
20010478:	fcb42c23          	sw	a1,-40(s0)
2001047c:	fcc42a23          	sw	a2,-44(s0)
20010480:	fcd42823          	sw	a3,-48(s0)
20010484:	fce42623          	sw	a4,-52(s0)
20010488:	fcf42423          	sw	a5,-56(s0)
2001048c:	fd042223          	sw	a6,-60(s0)
20010490:	fd142023          	sw	a7,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:204
  const size_t start_idx = idx;
20010494:	fd442783          	lw	a5,-44(s0)
20010498:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:207

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
2001049c:	fc042783          	lw	a5,-64(s0)
200104a0:	8b89                	andi	a5,a5,2
200104a2:	e3c1                	bnez	a5,20010522 <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:207 (discriminator 1)
200104a4:	fc042783          	lw	a5,-64(s0)
200104a8:	8b85                	andi	a5,a5,1
200104aa:	efa5                	bnez	a5,20010522 <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:208
    for (size_t i = len; i < width; i++) {
200104ac:	fc842783          	lw	a5,-56(s0)
200104b0:	fef42623          	sw	a5,-20(s0)
200104b4:	a035                	j	200104e0 <_out_rev+0x74>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:209 (discriminator 3)
      out(' ', buffer, idx++, maxlen);
200104b6:	fd442783          	lw	a5,-44(s0)
200104ba:	00178713          	addi	a4,a5,1
200104be:	fce42a23          	sw	a4,-44(s0)
200104c2:	fdc42703          	lw	a4,-36(s0)
200104c6:	fd042683          	lw	a3,-48(s0)
200104ca:	863e                	mv	a2,a5
200104cc:	fd842583          	lw	a1,-40(s0)
200104d0:	02000513          	li	a0,32
200104d4:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:208 (discriminator 3)
    for (size_t i = len; i < width; i++) {
200104d6:	fec42783          	lw	a5,-20(s0)
200104da:	0785                	addi	a5,a5,1
200104dc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:208 (discriminator 1)
200104e0:	fec42703          	lw	a4,-20(s0)
200104e4:	fc442783          	lw	a5,-60(s0)
200104e8:	fcf767e3          	bltu	a4,a5,200104b6 <_out_rev+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:214
    }
  }

  // reverse string
  while (len) {
200104ec:	a81d                	j	20010522 <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:215
    out(buf[--len], buffer, idx++, maxlen);
200104ee:	fc842783          	lw	a5,-56(s0)
200104f2:	17fd                	addi	a5,a5,-1
200104f4:	fcf42423          	sw	a5,-56(s0)
200104f8:	fcc42703          	lw	a4,-52(s0)
200104fc:	fc842783          	lw	a5,-56(s0)
20010500:	97ba                	add	a5,a5,a4
20010502:	0007c503          	lbu	a0,0(a5)
20010506:	fd442783          	lw	a5,-44(s0)
2001050a:	00178713          	addi	a4,a5,1
2001050e:	fce42a23          	sw	a4,-44(s0)
20010512:	fdc42703          	lw	a4,-36(s0)
20010516:	fd042683          	lw	a3,-48(s0)
2001051a:	863e                	mv	a2,a5
2001051c:	fd842583          	lw	a1,-40(s0)
20010520:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:214
  while (len) {
20010522:	fc842783          	lw	a5,-56(s0)
20010526:	f7e1                	bnez	a5,200104ee <_out_rev+0x82>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:219
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
20010528:	fc042783          	lw	a5,-64(s0)
2001052c:	8b89                	andi	a5,a5,2
2001052e:	cf85                	beqz	a5,20010566 <_out_rev+0xfa>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:220
    while (idx - start_idx < width) {
20010530:	a00d                	j	20010552 <_out_rev+0xe6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:221
      out(' ', buffer, idx++, maxlen);
20010532:	fd442783          	lw	a5,-44(s0)
20010536:	00178713          	addi	a4,a5,1
2001053a:	fce42a23          	sw	a4,-44(s0)
2001053e:	fdc42703          	lw	a4,-36(s0)
20010542:	fd042683          	lw	a3,-48(s0)
20010546:	863e                	mv	a2,a5
20010548:	fd842583          	lw	a1,-40(s0)
2001054c:	02000513          	li	a0,32
20010550:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:220
    while (idx - start_idx < width) {
20010552:	fd442703          	lw	a4,-44(s0)
20010556:	fe842783          	lw	a5,-24(s0)
2001055a:	40f707b3          	sub	a5,a4,a5
2001055e:	fc442703          	lw	a4,-60(s0)
20010562:	fce7e8e3          	bltu	a5,a4,20010532 <_out_rev+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:225
    }
  }

  return idx;
20010566:	fd442783          	lw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:226
}
2001056a:	853e                	mv	a0,a5
2001056c:	50f2                	lw	ra,60(sp)
2001056e:	5462                	lw	s0,56(sp)
20010570:	6121                	addi	sp,sp,64
20010572:	8082                	ret

20010574 <_ntoa_format>:
_ntoa_format():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:231


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
20010574:	7179                	addi	sp,sp,-48
20010576:	d606                	sw	ra,44(sp)
20010578:	d422                	sw	s0,40(sp)
2001057a:	1800                	addi	s0,sp,48
2001057c:	fea42623          	sw	a0,-20(s0)
20010580:	feb42423          	sw	a1,-24(s0)
20010584:	fec42223          	sw	a2,-28(s0)
20010588:	fed42023          	sw	a3,-32(s0)
2001058c:	fce42e23          	sw	a4,-36(s0)
20010590:	fcf42c23          	sw	a5,-40(s0)
20010594:	87c2                	mv	a5,a6
20010596:	fd142823          	sw	a7,-48(s0)
2001059a:	fcf40ba3          	sb	a5,-41(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:233
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
2001059e:	441c                	lw	a5,8(s0)
200105a0:	8b89                	andi	a5,a5,2
200105a2:	e3d1                	bnez	a5,20010626 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:234
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
200105a4:	405c                	lw	a5,4(s0)
200105a6:	cb9d                	beqz	a5,200105dc <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:234 (discriminator 1)
200105a8:	441c                	lw	a5,8(s0)
200105aa:	8b85                	andi	a5,a5,1
200105ac:	cb85                	beqz	a5,200105dc <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:234 (discriminator 2)
200105ae:	fd744783          	lbu	a5,-41(s0)
200105b2:	e781                	bnez	a5,200105ba <_ntoa_format+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:234 (discriminator 3)
200105b4:	441c                	lw	a5,8(s0)
200105b6:	8bb1                	andi	a5,a5,12
200105b8:	c395                	beqz	a5,200105dc <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:235
      width--;
200105ba:	405c                	lw	a5,4(s0)
200105bc:	17fd                	addi	a5,a5,-1
200105be:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:237
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
200105c0:	a831                	j	200105dc <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:238
      buf[len++] = '0';
200105c2:	fd842783          	lw	a5,-40(s0)
200105c6:	00178713          	addi	a4,a5,1
200105ca:	fce42c23          	sw	a4,-40(s0)
200105ce:	fdc42703          	lw	a4,-36(s0)
200105d2:	97ba                	add	a5,a5,a4
200105d4:	03000713          	li	a4,48
200105d8:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:237
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
200105dc:	fd842703          	lw	a4,-40(s0)
200105e0:	401c                	lw	a5,0(s0)
200105e2:	02f77563          	bgeu	a4,a5,2001060c <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:237 (discriminator 1)
200105e6:	fd842703          	lw	a4,-40(s0)
200105ea:	47fd                	li	a5,31
200105ec:	fce7fbe3          	bgeu	a5,a4,200105c2 <_ntoa_format+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:240
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
200105f0:	a831                	j	2001060c <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:241
      buf[len++] = '0';
200105f2:	fd842783          	lw	a5,-40(s0)
200105f6:	00178713          	addi	a4,a5,1
200105fa:	fce42c23          	sw	a4,-40(s0)
200105fe:	fdc42703          	lw	a4,-36(s0)
20010602:	97ba                	add	a5,a5,a4
20010604:	03000713          	li	a4,48
20010608:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:240
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
2001060c:	441c                	lw	a5,8(s0)
2001060e:	8b85                	andi	a5,a5,1
20010610:	cb99                	beqz	a5,20010626 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:240 (discriminator 1)
20010612:	fd842703          	lw	a4,-40(s0)
20010616:	405c                	lw	a5,4(s0)
20010618:	00f77763          	bgeu	a4,a5,20010626 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:240 (discriminator 2)
2001061c:	fd842703          	lw	a4,-40(s0)
20010620:	47fd                	li	a5,31
20010622:	fce7f8e3          	bgeu	a5,a4,200105f2 <_ntoa_format+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:246
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
20010626:	441c                	lw	a5,8(s0)
20010628:	8bc1                	andi	a5,a5,16
2001062a:	10078663          	beqz	a5,20010736 <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:247
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
2001062e:	441c                	lw	a5,8(s0)
20010630:	4007f793          	andi	a5,a5,1024
20010634:	e3a1                	bnez	a5,20010674 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:247 (discriminator 1)
20010636:	fd842783          	lw	a5,-40(s0)
2001063a:	cf8d                	beqz	a5,20010674 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:247 (discriminator 2)
2001063c:	fd842703          	lw	a4,-40(s0)
20010640:	401c                	lw	a5,0(s0)
20010642:	00f70763          	beq	a4,a5,20010650 <_ntoa_format+0xdc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:247 (discriminator 3)
20010646:	fd842703          	lw	a4,-40(s0)
2001064a:	405c                	lw	a5,4(s0)
2001064c:	02f71463          	bne	a4,a5,20010674 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:248
      len--;
20010650:	fd842783          	lw	a5,-40(s0)
20010654:	17fd                	addi	a5,a5,-1
20010656:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:249
      if (len && (base == 16U)) {
2001065a:	fd842783          	lw	a5,-40(s0)
2001065e:	cb99                	beqz	a5,20010674 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:249 (discriminator 1)
20010660:	fd042703          	lw	a4,-48(s0)
20010664:	47c1                	li	a5,16
20010666:	00f71763          	bne	a4,a5,20010674 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:250
        len--;
2001066a:	fd842783          	lw	a5,-40(s0)
2001066e:	17fd                	addi	a5,a5,-1
20010670:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:253
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20010674:	fd042703          	lw	a4,-48(s0)
20010678:	47c1                	li	a5,16
2001067a:	02f71963          	bne	a4,a5,200106ac <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:253 (discriminator 1)
2001067e:	441c                	lw	a5,8(s0)
20010680:	0207f793          	andi	a5,a5,32
20010684:	e785                	bnez	a5,200106ac <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:253 (discriminator 2)
20010686:	fd842703          	lw	a4,-40(s0)
2001068a:	47fd                	li	a5,31
2001068c:	02e7e063          	bltu	a5,a4,200106ac <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:254
      buf[len++] = 'x';
20010690:	fd842783          	lw	a5,-40(s0)
20010694:	00178713          	addi	a4,a5,1
20010698:	fce42c23          	sw	a4,-40(s0)
2001069c:	fdc42703          	lw	a4,-36(s0)
200106a0:	97ba                	add	a5,a5,a4
200106a2:	07800713          	li	a4,120
200106a6:	00e78023          	sb	a4,0(a5)
200106aa:	a0a5                	j	20010712 <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:256
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
200106ac:	fd042703          	lw	a4,-48(s0)
200106b0:	47c1                	li	a5,16
200106b2:	02f71963          	bne	a4,a5,200106e4 <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:256 (discriminator 1)
200106b6:	441c                	lw	a5,8(s0)
200106b8:	0207f793          	andi	a5,a5,32
200106bc:	c785                	beqz	a5,200106e4 <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:256 (discriminator 2)
200106be:	fd842703          	lw	a4,-40(s0)
200106c2:	47fd                	li	a5,31
200106c4:	02e7e063          	bltu	a5,a4,200106e4 <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:257
      buf[len++] = 'X';
200106c8:	fd842783          	lw	a5,-40(s0)
200106cc:	00178713          	addi	a4,a5,1
200106d0:	fce42c23          	sw	a4,-40(s0)
200106d4:	fdc42703          	lw	a4,-36(s0)
200106d8:	97ba                	add	a5,a5,a4
200106da:	05800713          	li	a4,88
200106de:	00e78023          	sb	a4,0(a5)
200106e2:	a805                	j	20010712 <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:259
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
200106e4:	fd042703          	lw	a4,-48(s0)
200106e8:	4789                	li	a5,2
200106ea:	02f71463          	bne	a4,a5,20010712 <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:259 (discriminator 1)
200106ee:	fd842703          	lw	a4,-40(s0)
200106f2:	47fd                	li	a5,31
200106f4:	00e7ef63          	bltu	a5,a4,20010712 <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:260
      buf[len++] = 'b';
200106f8:	fd842783          	lw	a5,-40(s0)
200106fc:	00178713          	addi	a4,a5,1
20010700:	fce42c23          	sw	a4,-40(s0)
20010704:	fdc42703          	lw	a4,-36(s0)
20010708:	97ba                	add	a5,a5,a4
2001070a:	06200713          	li	a4,98
2001070e:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:262
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
20010712:	fd842703          	lw	a4,-40(s0)
20010716:	47fd                	li	a5,31
20010718:	00e7ef63          	bltu	a5,a4,20010736 <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:263
      buf[len++] = '0';
2001071c:	fd842783          	lw	a5,-40(s0)
20010720:	00178713          	addi	a4,a5,1
20010724:	fce42c23          	sw	a4,-40(s0)
20010728:	fdc42703          	lw	a4,-36(s0)
2001072c:	97ba                	add	a5,a5,a4
2001072e:	03000713          	li	a4,48
20010732:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:267
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
20010736:	fd842703          	lw	a4,-40(s0)
2001073a:	47fd                	li	a5,31
2001073c:	06e7e463          	bltu	a5,a4,200107a4 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:268
    if (negative) {
20010740:	fd744783          	lbu	a5,-41(s0)
20010744:	cf99                	beqz	a5,20010762 <_ntoa_format+0x1ee>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:269
      buf[len++] = '-';
20010746:	fd842783          	lw	a5,-40(s0)
2001074a:	00178713          	addi	a4,a5,1
2001074e:	fce42c23          	sw	a4,-40(s0)
20010752:	fdc42703          	lw	a4,-36(s0)
20010756:	97ba                	add	a5,a5,a4
20010758:	02d00713          	li	a4,45
2001075c:	00e78023          	sb	a4,0(a5)
20010760:	a091                	j	200107a4 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:271
    }
    else if (flags & FLAGS_PLUS) {
20010762:	441c                	lw	a5,8(s0)
20010764:	8b91                	andi	a5,a5,4
20010766:	cf99                	beqz	a5,20010784 <_ntoa_format+0x210>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:272
      buf[len++] = '+';  // ignore the space if the '+' exists
20010768:	fd842783          	lw	a5,-40(s0)
2001076c:	00178713          	addi	a4,a5,1
20010770:	fce42c23          	sw	a4,-40(s0)
20010774:	fdc42703          	lw	a4,-36(s0)
20010778:	97ba                	add	a5,a5,a4
2001077a:	02b00713          	li	a4,43
2001077e:	00e78023          	sb	a4,0(a5)
20010782:	a00d                	j	200107a4 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:274
    }
    else if (flags & FLAGS_SPACE) {
20010784:	441c                	lw	a5,8(s0)
20010786:	8ba1                	andi	a5,a5,8
20010788:	cf91                	beqz	a5,200107a4 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:275
      buf[len++] = ' ';
2001078a:	fd842783          	lw	a5,-40(s0)
2001078e:	00178713          	addi	a4,a5,1
20010792:	fce42c23          	sw	a4,-40(s0)
20010796:	fdc42703          	lw	a4,-36(s0)
2001079a:	97ba                	add	a5,a5,a4
2001079c:	02000713          	li	a4,32
200107a0:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:279
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
200107a4:	00842883          	lw	a7,8(s0)
200107a8:	00442803          	lw	a6,4(s0)
200107ac:	fd842783          	lw	a5,-40(s0)
200107b0:	fdc42703          	lw	a4,-36(s0)
200107b4:	fe042683          	lw	a3,-32(s0)
200107b8:	fe442603          	lw	a2,-28(s0)
200107bc:	fe842583          	lw	a1,-24(s0)
200107c0:	fec42503          	lw	a0,-20(s0)
200107c4:	3165                	jal	2001046c <_out_rev>
200107c6:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:280
}
200107c8:	853e                	mv	a0,a5
200107ca:	50b2                	lw	ra,44(sp)
200107cc:	5422                	lw	s0,40(sp)
200107ce:	6145                	addi	sp,sp,48
200107d0:	8082                	ret

200107d2 <_ntoa_long>:
_ntoa_long():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:285


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
200107d2:	7159                	addi	sp,sp,-112
200107d4:	d686                	sw	ra,108(sp)
200107d6:	d4a2                	sw	s0,104(sp)
200107d8:	1880                	addi	s0,sp,112
200107da:	faa42e23          	sw	a0,-68(s0)
200107de:	fab42c23          	sw	a1,-72(s0)
200107e2:	fac42a23          	sw	a2,-76(s0)
200107e6:	fad42823          	sw	a3,-80(s0)
200107ea:	fae42623          	sw	a4,-84(s0)
200107ee:	fb042223          	sw	a6,-92(s0)
200107f2:	fb142023          	sw	a7,-96(s0)
200107f6:	faf405a3          	sb	a5,-85(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:287
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
200107fa:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:290

  // no hash for 0 values
  if (!value) {
200107fe:	fac42783          	lw	a5,-84(s0)
20010802:	e781                	bnez	a5,2001080a <_ntoa_long+0x38>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:291
    flags &= ~FLAGS_HASH;
20010804:	405c                	lw	a5,4(s0)
20010806:	9bbd                	andi	a5,a5,-17
20010808:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:295
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
2001080a:	405c                	lw	a5,4(s0)
2001080c:	4007f793          	andi	a5,a5,1024
20010810:	c781                	beqz	a5,20010818 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:295 (discriminator 1)
20010812:	fac42783          	lw	a5,-84(s0)
20010816:	c3c9                	beqz	a5,20010898 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:297
    do {
      const char digit = (char)(value % base);
20010818:	fac42703          	lw	a4,-84(s0)
2001081c:	fa442783          	lw	a5,-92(s0)
20010820:	02f777b3          	remu	a5,a4,a5
20010824:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:298
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
20010828:	feb44703          	lbu	a4,-21(s0)
2001082c:	47a5                	li	a5,9
2001082e:	00e7e963          	bltu	a5,a4,20010840 <_ntoa_long+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:298 (discriminator 1)
20010832:	feb44783          	lbu	a5,-21(s0)
20010836:	03078793          	addi	a5,a5,48
2001083a:	0ff7f793          	andi	a5,a5,255
2001083e:	a015                	j	20010862 <_ntoa_long+0x90>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:298 (discriminator 2)
20010840:	405c                	lw	a5,4(s0)
20010842:	0207f793          	andi	a5,a5,32
20010846:	c781                	beqz	a5,2001084e <_ntoa_long+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:298 (discriminator 4)
20010848:	04100793          	li	a5,65
2001084c:	a019                	j	20010852 <_ntoa_long+0x80>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:298 (discriminator 5)
2001084e:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:298 (discriminator 7)
20010852:	feb44703          	lbu	a4,-21(s0)
20010856:	97ba                	add	a5,a5,a4
20010858:	0ff7f793          	andi	a5,a5,255
2001085c:	17d9                	addi	a5,a5,-10
2001085e:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:298 (discriminator 8)
20010862:	fec42703          	lw	a4,-20(s0)
20010866:	00170693          	addi	a3,a4,1 # 2001 <__heap_size+0x1801>
2001086a:	fed42623          	sw	a3,-20(s0)
2001086e:	ff040693          	addi	a3,s0,-16
20010872:	9736                	add	a4,a4,a3
20010874:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:299 (discriminator 8)
      value /= base;
20010878:	fac42703          	lw	a4,-84(s0)
2001087c:	fa442783          	lw	a5,-92(s0)
20010880:	02f757b3          	divu	a5,a4,a5
20010884:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:300 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
20010888:	fac42783          	lw	a5,-84(s0)
2001088c:	c791                	beqz	a5,20010898 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:300 (discriminator 1)
2001088e:	fec42703          	lw	a4,-20(s0)
20010892:	47fd                	li	a5,31
20010894:	f8e7f2e3          	bgeu	a5,a4,20010818 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:303
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20010898:	fab44683          	lbu	a3,-85(s0)
2001089c:	fc840713          	addi	a4,s0,-56
200108a0:	405c                	lw	a5,4(s0)
200108a2:	c43e                	sw	a5,8(sp)
200108a4:	401c                	lw	a5,0(s0)
200108a6:	c23e                	sw	a5,4(sp)
200108a8:	fa042783          	lw	a5,-96(s0)
200108ac:	c03e                	sw	a5,0(sp)
200108ae:	fa442883          	lw	a7,-92(s0)
200108b2:	8836                	mv	a6,a3
200108b4:	fec42783          	lw	a5,-20(s0)
200108b8:	fb042683          	lw	a3,-80(s0)
200108bc:	fb442603          	lw	a2,-76(s0)
200108c0:	fb842583          	lw	a1,-72(s0)
200108c4:	fbc42503          	lw	a0,-68(s0)
200108c8:	3175                	jal	20010574 <_ntoa_format>
200108ca:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:304
}
200108cc:	853e                	mv	a0,a5
200108ce:	50b6                	lw	ra,108(sp)
200108d0:	5426                	lw	s0,104(sp)
200108d2:	6165                	addi	sp,sp,112
200108d4:	8082                	ret

200108d6 <_ntoa_long_long>:
_ntoa_long_long():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:310


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
200108d6:	7119                	addi	sp,sp,-128
200108d8:	d686                	sw	ra,108(sp)
200108da:	d4a2                	sw	s0,104(sp)
200108dc:	1880                	addi	s0,sp,112
200108de:	faa42e23          	sw	a0,-68(s0)
200108e2:	fab42c23          	sw	a1,-72(s0)
200108e6:	fac42a23          	sw	a2,-76(s0)
200108ea:	fad42823          	sw	a3,-80(s0)
200108ee:	fae42423          	sw	a4,-88(s0)
200108f2:	faf42623          	sw	a5,-84(s0)
200108f6:	87c2                	mv	a5,a6
200108f8:	01142623          	sw	a7,12(s0)
200108fc:	faf403a3          	sb	a5,-89(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:312
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
20010900:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:315

  // no hash for 0 values
  if (!value) {
20010904:	fa842783          	lw	a5,-88(s0)
20010908:	fac42703          	lw	a4,-84(s0)
2001090c:	8fd9                	or	a5,a5,a4
2001090e:	e781                	bnez	a5,20010916 <_ntoa_long_long+0x40>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:316
    flags &= ~FLAGS_HASH;
20010910:	4c5c                	lw	a5,28(s0)
20010912:	9bbd                	andi	a5,a5,-17
20010914:	cc5c                	sw	a5,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:320
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
20010916:	4c5c                	lw	a5,28(s0)
20010918:	4007f793          	andi	a5,a5,1024
2001091c:	c799                	beqz	a5,2001092a <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:320 (discriminator 1)
2001091e:	fa842783          	lw	a5,-88(s0)
20010922:	fac42703          	lw	a4,-84(s0)
20010926:	8fd9                	or	a5,a5,a4
20010928:	c3c5                	beqz	a5,200109c8 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:322
    do {
      const char digit = (char)(value % base);
2001092a:	fa842783          	lw	a5,-88(s0)
2001092e:	fac42803          	lw	a6,-84(s0)
20010932:	4450                	lw	a2,12(s0)
20010934:	4814                	lw	a3,16(s0)
20010936:	853e                	mv	a0,a5
20010938:	85c2                	mv	a1,a6
2001093a:	477010ef          	jal	ra,200125b0 <__umoddi3>
2001093e:	87aa                	mv	a5,a0
20010940:	882e                	mv	a6,a1
20010942:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:323
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
20010946:	feb44703          	lbu	a4,-21(s0)
2001094a:	47a5                	li	a5,9
2001094c:	00e7e963          	bltu	a5,a4,2001095e <_ntoa_long_long+0x88>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:323 (discriminator 1)
20010950:	feb44783          	lbu	a5,-21(s0)
20010954:	03078793          	addi	a5,a5,48
20010958:	0ff7f793          	andi	a5,a5,255
2001095c:	a015                	j	20010980 <_ntoa_long_long+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:323 (discriminator 2)
2001095e:	4c5c                	lw	a5,28(s0)
20010960:	0207f793          	andi	a5,a5,32
20010964:	c781                	beqz	a5,2001096c <_ntoa_long_long+0x96>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:323 (discriminator 4)
20010966:	04100793          	li	a5,65
2001096a:	a019                	j	20010970 <_ntoa_long_long+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:323 (discriminator 5)
2001096c:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:323 (discriminator 7)
20010970:	feb44703          	lbu	a4,-21(s0)
20010974:	97ba                	add	a5,a5,a4
20010976:	0ff7f793          	andi	a5,a5,255
2001097a:	17d9                	addi	a5,a5,-10
2001097c:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:323 (discriminator 8)
20010980:	fec42703          	lw	a4,-20(s0)
20010984:	00170693          	addi	a3,a4,1
20010988:	fed42623          	sw	a3,-20(s0)
2001098c:	ff040693          	addi	a3,s0,-16
20010990:	9736                	add	a4,a4,a3
20010992:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:324 (discriminator 8)
      value /= base;
20010996:	4450                	lw	a2,12(s0)
20010998:	4814                	lw	a3,16(s0)
2001099a:	fa842503          	lw	a0,-88(s0)
2001099e:	fac42583          	lw	a1,-84(s0)
200109a2:	0b1010ef          	jal	ra,20012252 <__udivdi3>
200109a6:	87aa                	mv	a5,a0
200109a8:	882e                	mv	a6,a1
200109aa:	faf42423          	sw	a5,-88(s0)
200109ae:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:325 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
200109b2:	fa842783          	lw	a5,-88(s0)
200109b6:	fac42703          	lw	a4,-84(s0)
200109ba:	8fd9                	or	a5,a5,a4
200109bc:	c791                	beqz	a5,200109c8 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:325 (discriminator 1)
200109be:	fec42703          	lw	a4,-20(s0)
200109c2:	47fd                	li	a5,31
200109c4:	f6e7f3e3          	bgeu	a5,a4,2001092a <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:328
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
200109c8:	4450                	lw	a2,12(s0)
200109ca:	fa744683          	lbu	a3,-89(s0)
200109ce:	fc840713          	addi	a4,s0,-56
200109d2:	4c5c                	lw	a5,28(s0)
200109d4:	c43e                	sw	a5,8(sp)
200109d6:	4c1c                	lw	a5,24(s0)
200109d8:	c23e                	sw	a5,4(sp)
200109da:	485c                	lw	a5,20(s0)
200109dc:	c03e                	sw	a5,0(sp)
200109de:	88b2                	mv	a7,a2
200109e0:	8836                	mv	a6,a3
200109e2:	fec42783          	lw	a5,-20(s0)
200109e6:	fb042683          	lw	a3,-80(s0)
200109ea:	fb442603          	lw	a2,-76(s0)
200109ee:	fb842583          	lw	a1,-72(s0)
200109f2:	fbc42503          	lw	a0,-68(s0)
200109f6:	3ebd                	jal	20010574 <_ntoa_format>
200109f8:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:329
}
200109fa:	853e                	mv	a0,a5
200109fc:	50b6                	lw	ra,108(sp)
200109fe:	5426                	lw	s0,104(sp)
20010a00:	6109                	addi	sp,sp,128
20010a02:	8082                	ret

20010a04 <_ftoa>:
_ftoa():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:343
#endif


// internal ftoa for fixed decimal floating point
static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
20010a04:	7175                	addi	sp,sp,-144
20010a06:	c706                	sw	ra,140(sp)
20010a08:	c522                	sw	s0,136(sp)
20010a0a:	c326                	sw	s1,132(sp)
20010a0c:	0900                	addi	s0,sp,144
20010a0e:	f8a42e23          	sw	a0,-100(s0)
20010a12:	f8b42c23          	sw	a1,-104(s0)
20010a16:	f8c42a23          	sw	a2,-108(s0)
20010a1a:	f8d42823          	sw	a3,-112(s0)
20010a1e:	f8e42423          	sw	a4,-120(s0)
20010a22:	f8f42623          	sw	a5,-116(s0)
20010a26:	f9042223          	sw	a6,-124(s0)
20010a2a:	f9142023          	sw	a7,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:345
  char buf[PRINTF_FTOA_BUFFER_SIZE];
  size_t len  = 0U;
20010a2e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:346
  double diff = 0.0;
20010a32:	fc042823          	sw	zero,-48(s0)
20010a36:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:352

  // powers of 10
  static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };

  // test for special values
  if (value != value)
20010a3a:	f8842603          	lw	a2,-120(s0)
20010a3e:	f8c42683          	lw	a3,-116(s0)
20010a42:	f8842503          	lw	a0,-120(s0)
20010a46:	f8c42583          	lw	a1,-116(s0)
20010a4a:	1e1020ef          	jal	ra,2001342a <__eqdf2>
20010a4e:	87aa                	mv	a5,a0
20010a50:	c78d                	beqz	a5,20010a7a <_ftoa+0x76>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:353
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
20010a52:	00042883          	lw	a7,0(s0)
20010a56:	f8042803          	lw	a6,-128(s0)
20010a5a:	478d                	li	a5,3
20010a5c:	20018737          	lui	a4,0x20018
20010a60:	76070713          	addi	a4,a4,1888 # 20018760 <_exit+0x30>
20010a64:	f9042683          	lw	a3,-112(s0)
20010a68:	f9442603          	lw	a2,-108(s0)
20010a6c:	f9842583          	lw	a1,-104(s0)
20010a70:	f9c42503          	lw	a0,-100(s0)
20010a74:	3ae5                	jal	2001046c <_out_rev>
20010a76:	87aa                	mv	a5,a0
20010a78:	ab81                	j	20010fc8 <_ftoa+0x5c4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:354
  if (value < -DBL_MAX)
20010a7a:	200187b7          	lui	a5,0x20018
20010a7e:	7787a603          	lw	a2,1912(a5) # 20018778 <_exit+0x48>
20010a82:	77c7a683          	lw	a3,1916(a5)
20010a86:	f8842503          	lw	a0,-120(s0)
20010a8a:	f8c42583          	lw	a1,-116(s0)
20010a8e:	2ab020ef          	jal	ra,20013538 <__ledf2>
20010a92:	87aa                	mv	a5,a0
20010a94:	0207d663          	bgez	a5,20010ac0 <_ftoa+0xbc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:355
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
20010a98:	00042883          	lw	a7,0(s0)
20010a9c:	f8042803          	lw	a6,-128(s0)
20010aa0:	4791                	li	a5,4
20010aa2:	20018737          	lui	a4,0x20018
20010aa6:	76470713          	addi	a4,a4,1892 # 20018764 <_exit+0x34>
20010aaa:	f9042683          	lw	a3,-112(s0)
20010aae:	f9442603          	lw	a2,-108(s0)
20010ab2:	f9842583          	lw	a1,-104(s0)
20010ab6:	f9c42503          	lw	a0,-100(s0)
20010aba:	3a4d                	jal	2001046c <_out_rev>
20010abc:	87aa                	mv	a5,a0
20010abe:	a329                	j	20010fc8 <_ftoa+0x5c4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:356
  if (value > DBL_MAX)
20010ac0:	200187b7          	lui	a5,0x20018
20010ac4:	7807a603          	lw	a2,1920(a5) # 20018780 <_exit+0x50>
20010ac8:	7847a683          	lw	a3,1924(a5)
20010acc:	f8842503          	lw	a0,-120(s0)
20010ad0:	f8c42583          	lw	a1,-116(s0)
20010ad4:	1c1020ef          	jal	ra,20013494 <__gedf2>
20010ad8:	87aa                	mv	a5,a0
20010ada:	04f05363          	blez	a5,20010b20 <_ftoa+0x11c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:357
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
20010ade:	401c                	lw	a5,0(s0)
20010ae0:	8b91                	andi	a5,a5,4
20010ae2:	c791                	beqz	a5,20010aee <_ftoa+0xea>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:357 (discriminator 1)
20010ae4:	200187b7          	lui	a5,0x20018
20010ae8:	76c78713          	addi	a4,a5,1900 # 2001876c <_exit+0x3c>
20010aec:	a029                	j	20010af6 <_ftoa+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:357 (discriminator 2)
20010aee:	200187b7          	lui	a5,0x20018
20010af2:	77478713          	addi	a4,a5,1908 # 20018774 <_exit+0x44>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:357 (discriminator 4)
20010af6:	401c                	lw	a5,0(s0)
20010af8:	8b91                	andi	a5,a5,4
20010afa:	c399                	beqz	a5,20010b00 <_ftoa+0xfc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:357 (discriminator 5)
20010afc:	4791                	li	a5,4
20010afe:	a011                	j	20010b02 <_ftoa+0xfe>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:357 (discriminator 6)
20010b00:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:357 (discriminator 8)
20010b02:	00042883          	lw	a7,0(s0)
20010b06:	f8042803          	lw	a6,-128(s0)
20010b0a:	f9042683          	lw	a3,-112(s0)
20010b0e:	f9442603          	lw	a2,-108(s0)
20010b12:	f9842583          	lw	a1,-104(s0)
20010b16:	f9c42503          	lw	a0,-100(s0)
20010b1a:	3a89                	jal	2001046c <_out_rev>
20010b1c:	87aa                	mv	a5,a0
20010b1e:	a16d                	j	20010fc8 <_ftoa+0x5c4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:361

  // test for very large values
  // standard printf behavior is to print EVERY whole number digit -- which could be 100s of characters overflowing your buffers == bad
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
20010b20:	200187b7          	lui	a5,0x20018
20010b24:	7887a603          	lw	a2,1928(a5) # 20018788 <_exit+0x58>
20010b28:	78c7a683          	lw	a3,1932(a5)
20010b2c:	f8842503          	lw	a0,-120(s0)
20010b30:	f8c42583          	lw	a1,-116(s0)
20010b34:	161020ef          	jal	ra,20013494 <__gedf2>
20010b38:	87aa                	mv	a5,a0
20010b3a:	02f04163          	bgtz	a5,20010b5c <_ftoa+0x158>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:361 (discriminator 1)
20010b3e:	200187b7          	lui	a5,0x20018
20010b42:	7907a603          	lw	a2,1936(a5) # 20018790 <_exit+0x60>
20010b46:	7947a683          	lw	a3,1940(a5)
20010b4a:	f8842503          	lw	a0,-120(s0)
20010b4e:	f8c42583          	lw	a1,-116(s0)
20010b52:	1e7020ef          	jal	ra,20013538 <__ledf2>
20010b56:	87aa                	mv	a5,a0
20010b58:	0207d763          	bgez	a5,20010b86 <_ftoa+0x182>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:363
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
20010b5c:	401c                	lw	a5,0(s0)
20010b5e:	c03e                	sw	a5,0(sp)
20010b60:	f8042883          	lw	a7,-128(s0)
20010b64:	f8442803          	lw	a6,-124(s0)
20010b68:	f8842703          	lw	a4,-120(s0)
20010b6c:	f8c42783          	lw	a5,-116(s0)
20010b70:	f9042683          	lw	a3,-112(s0)
20010b74:	f9442603          	lw	a2,-108(s0)
20010b78:	f9842583          	lw	a1,-104(s0)
20010b7c:	f9c42503          	lw	a0,-100(s0)
20010b80:	2991                	jal	20010fd4 <_etoa>
20010b82:	87aa                	mv	a5,a0
20010b84:	a191                	j	20010fc8 <_ftoa+0x5c4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:370
    return 0U;
#endif
  }

  // test for negative
  bool negative = false;
20010b86:	fe0405a3          	sb	zero,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:371
  if (value < 0) {
20010b8a:	4601                	li	a2,0
20010b8c:	4681                	li	a3,0
20010b8e:	f8842503          	lw	a0,-120(s0)
20010b92:	f8c42583          	lw	a1,-116(s0)
20010b96:	1a3020ef          	jal	ra,20013538 <__ledf2>
20010b9a:	87aa                	mv	a5,a0
20010b9c:	0207d363          	bgez	a5,20010bc2 <_ftoa+0x1be>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:372
    negative = true;
20010ba0:	4785                	li	a5,1
20010ba2:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:373
    value = 0 - value;
20010ba6:	f8842603          	lw	a2,-120(s0)
20010baa:	f8c42683          	lw	a3,-116(s0)
20010bae:	4501                	li	a0,0
20010bb0:	4581                	li	a1,0
20010bb2:	667020ef          	jal	ra,20013a18 <__subdf3>
20010bb6:	87aa                	mv	a5,a0
20010bb8:	882e                	mv	a6,a1
20010bba:	f8f42423          	sw	a5,-120(s0)
20010bbe:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:377
  }

  // set default precision, if not set explicitly
  if (!(flags & FLAGS_PRECISION)) {
20010bc2:	401c                	lw	a5,0(s0)
20010bc4:	4007f793          	andi	a5,a5,1024
20010bc8:	e79d                	bnez	a5,20010bf6 <_ftoa+0x1f2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:378
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
20010bca:	4799                	li	a5,6
20010bcc:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:381
  }
  // limit precision to 9, cause a prec >= 10 can lead to overflow errors
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20010bd0:	a01d                	j	20010bf6 <_ftoa+0x1f2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:382
    buf[len++] = '0';
20010bd2:	fec42783          	lw	a5,-20(s0)
20010bd6:	00178713          	addi	a4,a5,1
20010bda:	fee42623          	sw	a4,-20(s0)
20010bde:	ff040713          	addi	a4,s0,-16
20010be2:	97ba                	add	a5,a5,a4
20010be4:	03000713          	li	a4,48
20010be8:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:383
    prec--;
20010bec:	f8442783          	lw	a5,-124(s0)
20010bf0:	17fd                	addi	a5,a5,-1
20010bf2:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:381
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20010bf6:	fec42703          	lw	a4,-20(s0)
20010bfa:	47fd                	li	a5,31
20010bfc:	00e7e763          	bltu	a5,a4,20010c0a <_ftoa+0x206>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:381 (discriminator 1)
20010c00:	f8442703          	lw	a4,-124(s0)
20010c04:	47a5                	li	a5,9
20010c06:	fce7e6e3          	bltu	a5,a4,20010bd2 <_ftoa+0x1ce>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:386
  }

  int whole = (int)value;
20010c0a:	f8842503          	lw	a0,-120(s0)
20010c0e:	f8c42583          	lw	a1,-116(s0)
20010c12:	3fc030ef          	jal	ra,2001400e <__fixdfsi>
20010c16:	87aa                	mv	a5,a0
20010c18:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:387
  double tmp = (value - whole) * pow10[prec];
20010c1c:	fe442503          	lw	a0,-28(s0)
20010c20:	4ae030ef          	jal	ra,200140ce <__floatsidf>
20010c24:	87aa                	mv	a5,a0
20010c26:	882e                	mv	a6,a1
20010c28:	863e                	mv	a2,a5
20010c2a:	86c2                	mv	a3,a6
20010c2c:	f8842503          	lw	a0,-120(s0)
20010c30:	f8c42583          	lw	a1,-116(s0)
20010c34:	5e5020ef          	jal	ra,20013a18 <__subdf3>
20010c38:	87aa                	mv	a5,a0
20010c3a:	882e                	mv	a6,a1
20010c3c:	853e                	mv	a0,a5
20010c3e:	85c2                	mv	a1,a6
20010c40:	200197b7          	lui	a5,0x20019
20010c44:	9f078713          	addi	a4,a5,-1552 # 200189f0 <pow10.2193>
20010c48:	f8442783          	lw	a5,-124(s0)
20010c4c:	078e                	slli	a5,a5,0x3
20010c4e:	97ba                	add	a5,a5,a4
20010c50:	0047a803          	lw	a6,4(a5)
20010c54:	439c                	lw	a5,0(a5)
20010c56:	863e                	mv	a2,a5
20010c58:	86c2                	mv	a3,a6
20010c5a:	183020ef          	jal	ra,200135dc <__muldf3>
20010c5e:	87aa                	mv	a5,a0
20010c60:	882e                	mv	a6,a1
20010c62:	fcf42423          	sw	a5,-56(s0)
20010c66:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:388
  unsigned long frac = (unsigned long)tmp;
20010c6a:	fc842503          	lw	a0,-56(s0)
20010c6e:	fcc42583          	lw	a1,-52(s0)
20010c72:	400030ef          	jal	ra,20014072 <__fixunsdfsi>
20010c76:	87aa                	mv	a5,a0
20010c78:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:389
  diff = tmp - frac;
20010c7c:	fe042503          	lw	a0,-32(s0)
20010c80:	4b8030ef          	jal	ra,20014138 <__floatunsidf>
20010c84:	87aa                	mv	a5,a0
20010c86:	882e                	mv	a6,a1
20010c88:	863e                	mv	a2,a5
20010c8a:	86c2                	mv	a3,a6
20010c8c:	fc842503          	lw	a0,-56(s0)
20010c90:	fcc42583          	lw	a1,-52(s0)
20010c94:	585020ef          	jal	ra,20013a18 <__subdf3>
20010c98:	87aa                	mv	a5,a0
20010c9a:	882e                	mv	a6,a1
20010c9c:	fcf42823          	sw	a5,-48(s0)
20010ca0:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:391

  if (diff > 0.5) {
20010ca4:	200187b7          	lui	a5,0x20018
20010ca8:	7987a603          	lw	a2,1944(a5) # 20018798 <_exit+0x68>
20010cac:	79c7a683          	lw	a3,1948(a5)
20010cb0:	fd042503          	lw	a0,-48(s0)
20010cb4:	fd442583          	lw	a1,-44(s0)
20010cb8:	7dc020ef          	jal	ra,20013494 <__gedf2>
20010cbc:	87aa                	mv	a5,a0
20010cbe:	04f05563          	blez	a5,20010d08 <_ftoa+0x304>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:392
    ++frac;
20010cc2:	fe042783          	lw	a5,-32(s0)
20010cc6:	0785                	addi	a5,a5,1
20010cc8:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:394
    // handle rollover, e.g. case 0.99 with prec 1 is 1.0
    if (frac >= pow10[prec]) {
20010ccc:	fe042503          	lw	a0,-32(s0)
20010cd0:	468030ef          	jal	ra,20014138 <__floatunsidf>
20010cd4:	200197b7          	lui	a5,0x20019
20010cd8:	9f078713          	addi	a4,a5,-1552 # 200189f0 <pow10.2193>
20010cdc:	f8442783          	lw	a5,-124(s0)
20010ce0:	078e                	slli	a5,a5,0x3
20010ce2:	97ba                	add	a5,a5,a4
20010ce4:	0047a803          	lw	a6,4(a5)
20010ce8:	439c                	lw	a5,0(a5)
20010cea:	863e                	mv	a2,a5
20010cec:	86c2                	mv	a3,a6
20010cee:	7a6020ef          	jal	ra,20013494 <__gedf2>
20010cf2:	87aa                	mv	a5,a0
20010cf4:	0407c563          	bltz	a5,20010d3e <_ftoa+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:395
      frac = 0;
20010cf8:	fe042023          	sw	zero,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:396
      ++whole;
20010cfc:	fe442783          	lw	a5,-28(s0)
20010d00:	0785                	addi	a5,a5,1
20010d02:	fef42223          	sw	a5,-28(s0)
20010d06:	a825                	j	20010d3e <_ftoa+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:399
    }
  }
  else if (diff < 0.5) {
20010d08:	200187b7          	lui	a5,0x20018
20010d0c:	7987a603          	lw	a2,1944(a5) # 20018798 <_exit+0x68>
20010d10:	79c7a683          	lw	a3,1948(a5)
20010d14:	fd042503          	lw	a0,-48(s0)
20010d18:	fd442583          	lw	a1,-44(s0)
20010d1c:	01d020ef          	jal	ra,20013538 <__ledf2>
20010d20:	87aa                	mv	a5,a0
20010d22:	0007ce63          	bltz	a5,20010d3e <_ftoa+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:401
  }
  else if ((frac == 0U) || (frac & 1U)) {
20010d26:	fe042783          	lw	a5,-32(s0)
20010d2a:	c789                	beqz	a5,20010d34 <_ftoa+0x330>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:401 (discriminator 1)
20010d2c:	fe042783          	lw	a5,-32(s0)
20010d30:	8b85                	andi	a5,a5,1
20010d32:	c791                	beqz	a5,20010d3e <_ftoa+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:403
    // if halfway, round up if odd OR if last digit is 0
    ++frac;
20010d34:	fe042783          	lw	a5,-32(s0)
20010d38:	0785                	addi	a5,a5,1
20010d3a:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:406
  }

  if (prec == 0U) {
20010d3e:	f8442783          	lw	a5,-124(s0)
20010d42:	e7d9                	bnez	a5,20010dd0 <_ftoa+0x3cc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:407
    diff = value - (double)whole;
20010d44:	fe442503          	lw	a0,-28(s0)
20010d48:	386030ef          	jal	ra,200140ce <__floatsidf>
20010d4c:	87aa                	mv	a5,a0
20010d4e:	882e                	mv	a6,a1
20010d50:	863e                	mv	a2,a5
20010d52:	86c2                	mv	a3,a6
20010d54:	f8842503          	lw	a0,-120(s0)
20010d58:	f8c42583          	lw	a1,-116(s0)
20010d5c:	4bd020ef          	jal	ra,20013a18 <__subdf3>
20010d60:	87aa                	mv	a5,a0
20010d62:	882e                	mv	a6,a1
20010d64:	fcf42823          	sw	a5,-48(s0)
20010d68:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:408
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
20010d6c:	4485                	li	s1,1
20010d6e:	200187b7          	lui	a5,0x20018
20010d72:	7987a603          	lw	a2,1944(a5) # 20018798 <_exit+0x68>
20010d76:	79c7a683          	lw	a3,1948(a5)
20010d7a:	fd042503          	lw	a0,-48(s0)
20010d7e:	fd442583          	lw	a1,-44(s0)
20010d82:	7b6020ef          	jal	ra,20013538 <__ledf2>
20010d86:	87aa                	mv	a5,a0
20010d88:	0007c363          	bltz	a5,20010d8e <_ftoa+0x38a>
20010d8c:	4481                	li	s1,0
20010d8e:	0ff4f793          	andi	a5,s1,255
20010d92:	0017c793          	xori	a5,a5,1
20010d96:	0ff7f793          	andi	a5,a5,255
20010d9a:	e385                	bnez	a5,20010dba <_ftoa+0x3b6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:408 (discriminator 2)
20010d9c:	200187b7          	lui	a5,0x20018
20010da0:	7987a603          	lw	a2,1944(a5) # 20018798 <_exit+0x68>
20010da4:	79c7a683          	lw	a3,1948(a5)
20010da8:	fd042503          	lw	a0,-48(s0)
20010dac:	fd442583          	lw	a1,-44(s0)
20010db0:	6e4020ef          	jal	ra,20013494 <__gedf2>
20010db4:	87aa                	mv	a5,a0
20010db6:	0cf05a63          	blez	a5,20010e8a <_ftoa+0x486>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:408 (discriminator 3)
20010dba:	fe442783          	lw	a5,-28(s0)
20010dbe:	8b85                	andi	a5,a5,1
20010dc0:	10078663          	beqz	a5,20010ecc <_ftoa+0x4c8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:411
      // exactly 0.5 and ODD, then round up
      // 1.5 -> 2, but 2.5 -> 2
      ++whole;
20010dc4:	fe442783          	lw	a5,-28(s0)
20010dc8:	0785                	addi	a5,a5,1
20010dca:	fef42223          	sw	a5,-28(s0)
20010dce:	a8fd                	j	20010ecc <_ftoa+0x4c8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:415
    }
  }
  else {
    unsigned int count = prec;
20010dd0:	f8442783          	lw	a5,-124(s0)
20010dd4:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:417
    // now do fractional part, as an unsigned number
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20010dd8:	a0b1                	j	20010e24 <_ftoa+0x420>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:418
      --count;
20010dda:	fdc42783          	lw	a5,-36(s0)
20010dde:	17fd                	addi	a5,a5,-1
20010de0:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:419
      buf[len++] = (char)(48U + (frac % 10U));
20010de4:	fe042703          	lw	a4,-32(s0)
20010de8:	47a9                	li	a5,10
20010dea:	02f777b3          	remu	a5,a4,a5
20010dee:	0ff7f713          	andi	a4,a5,255
20010df2:	fec42783          	lw	a5,-20(s0)
20010df6:	00178693          	addi	a3,a5,1
20010dfa:	fed42623          	sw	a3,-20(s0)
20010dfe:	03070713          	addi	a4,a4,48
20010e02:	0ff77713          	andi	a4,a4,255
20010e06:	ff040693          	addi	a3,s0,-16
20010e0a:	97b6                	add	a5,a5,a3
20010e0c:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:420
      if (!(frac /= 10U)) {
20010e10:	fe042703          	lw	a4,-32(s0)
20010e14:	47a9                	li	a5,10
20010e16:	02f757b3          	divu	a5,a4,a5
20010e1a:	fef42023          	sw	a5,-32(s0)
20010e1e:	fe042783          	lw	a5,-32(s0)
20010e22:	c799                	beqz	a5,20010e30 <_ftoa+0x42c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:417
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20010e24:	fec42703          	lw	a4,-20(s0)
20010e28:	47fd                	li	a5,31
20010e2a:	fae7f8e3          	bgeu	a5,a4,20010dda <_ftoa+0x3d6>
20010e2e:	a005                	j	20010e4e <_ftoa+0x44a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:421
        break;
20010e30:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:425
      }
    }
    // add extra 0s
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20010e32:	a831                	j	20010e4e <_ftoa+0x44a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:426
      buf[len++] = '0';
20010e34:	fec42783          	lw	a5,-20(s0)
20010e38:	00178713          	addi	a4,a5,1
20010e3c:	fee42623          	sw	a4,-20(s0)
20010e40:	ff040713          	addi	a4,s0,-16
20010e44:	97ba                	add	a5,a5,a4
20010e46:	03000713          	li	a4,48
20010e4a:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:425
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20010e4e:	fec42703          	lw	a4,-20(s0)
20010e52:	47fd                	li	a5,31
20010e54:	00e7e963          	bltu	a5,a4,20010e66 <_ftoa+0x462>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:425 (discriminator 1)
20010e58:	fdc42783          	lw	a5,-36(s0)
20010e5c:	fff78713          	addi	a4,a5,-1
20010e60:	fce42e23          	sw	a4,-36(s0)
20010e64:	fbe1                	bnez	a5,20010e34 <_ftoa+0x430>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:428
    }
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
20010e66:	fec42703          	lw	a4,-20(s0)
20010e6a:	47fd                	li	a5,31
20010e6c:	06e7e063          	bltu	a5,a4,20010ecc <_ftoa+0x4c8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:430
      // add decimal
      buf[len++] = '.';
20010e70:	fec42783          	lw	a5,-20(s0)
20010e74:	00178713          	addi	a4,a5,1
20010e78:	fee42623          	sw	a4,-20(s0)
20010e7c:	ff040713          	addi	a4,s0,-16
20010e80:	97ba                	add	a5,a5,a4
20010e82:	02e00713          	li	a4,46
20010e86:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:435 (discriminator 1)
    }
  }

  // do whole part, number is reversed
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20010e8a:	a089                	j	20010ecc <_ftoa+0x4c8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:436
    buf[len++] = (char)(48 + (whole % 10));
20010e8c:	fe442703          	lw	a4,-28(s0)
20010e90:	47a9                	li	a5,10
20010e92:	02f767b3          	rem	a5,a4,a5
20010e96:	0ff7f713          	andi	a4,a5,255
20010e9a:	fec42783          	lw	a5,-20(s0)
20010e9e:	00178693          	addi	a3,a5,1
20010ea2:	fed42623          	sw	a3,-20(s0)
20010ea6:	03070713          	addi	a4,a4,48
20010eaa:	0ff77713          	andi	a4,a4,255
20010eae:	ff040693          	addi	a3,s0,-16
20010eb2:	97b6                	add	a5,a5,a3
20010eb4:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:437
    if (!(whole /= 10)) {
20010eb8:	fe442703          	lw	a4,-28(s0)
20010ebc:	47a9                	li	a5,10
20010ebe:	02f747b3          	div	a5,a4,a5
20010ec2:	fef42223          	sw	a5,-28(s0)
20010ec6:	fe442783          	lw	a5,-28(s0)
20010eca:	c799                	beqz	a5,20010ed8 <_ftoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:435
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20010ecc:	fec42703          	lw	a4,-20(s0)
20010ed0:	47fd                	li	a5,31
20010ed2:	fae7fde3          	bgeu	a5,a4,20010e8c <_ftoa+0x488>
20010ed6:	a011                	j	20010eda <_ftoa+0x4d6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:438
      break;
20010ed8:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:443
    }
  }

  // pad leading zeros
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
20010eda:	401c                	lw	a5,0(s0)
20010edc:	8b89                	andi	a5,a5,2
20010ede:	ebb9                	bnez	a5,20010f34 <_ftoa+0x530>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:443 (discriminator 1)
20010ee0:	401c                	lw	a5,0(s0)
20010ee2:	8b85                	andi	a5,a5,1
20010ee4:	cba1                	beqz	a5,20010f34 <_ftoa+0x530>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:444
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
20010ee6:	f8042783          	lw	a5,-128(s0)
20010eea:	cb95                	beqz	a5,20010f1e <_ftoa+0x51a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:444 (discriminator 1)
20010eec:	feb44783          	lbu	a5,-21(s0)
20010ef0:	e781                	bnez	a5,20010ef8 <_ftoa+0x4f4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:444 (discriminator 2)
20010ef2:	401c                	lw	a5,0(s0)
20010ef4:	8bb1                	andi	a5,a5,12
20010ef6:	c785                	beqz	a5,20010f1e <_ftoa+0x51a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:445
      width--;
20010ef8:	f8042783          	lw	a5,-128(s0)
20010efc:	17fd                	addi	a5,a5,-1
20010efe:	f8f42023          	sw	a5,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:447
    }
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20010f02:	a831                	j	20010f1e <_ftoa+0x51a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:448
      buf[len++] = '0';
20010f04:	fec42783          	lw	a5,-20(s0)
20010f08:	00178713          	addi	a4,a5,1
20010f0c:	fee42623          	sw	a4,-20(s0)
20010f10:	ff040713          	addi	a4,s0,-16
20010f14:	97ba                	add	a5,a5,a4
20010f16:	03000713          	li	a4,48
20010f1a:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:447
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20010f1e:	fec42703          	lw	a4,-20(s0)
20010f22:	f8042783          	lw	a5,-128(s0)
20010f26:	00f77763          	bgeu	a4,a5,20010f34 <_ftoa+0x530>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:447 (discriminator 1)
20010f2a:	fec42703          	lw	a4,-20(s0)
20010f2e:	47fd                	li	a5,31
20010f30:	fce7fae3          	bgeu	a5,a4,20010f04 <_ftoa+0x500>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:452
    }
  }

  if (len < PRINTF_FTOA_BUFFER_SIZE) {
20010f34:	fec42703          	lw	a4,-20(s0)
20010f38:	47fd                	li	a5,31
20010f3a:	06e7e463          	bltu	a5,a4,20010fa2 <_ftoa+0x59e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:453
    if (negative) {
20010f3e:	feb44783          	lbu	a5,-21(s0)
20010f42:	cf99                	beqz	a5,20010f60 <_ftoa+0x55c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:454
      buf[len++] = '-';
20010f44:	fec42783          	lw	a5,-20(s0)
20010f48:	00178713          	addi	a4,a5,1
20010f4c:	fee42623          	sw	a4,-20(s0)
20010f50:	ff040713          	addi	a4,s0,-16
20010f54:	97ba                	add	a5,a5,a4
20010f56:	02d00713          	li	a4,45
20010f5a:	fae78c23          	sb	a4,-72(a5)
20010f5e:	a091                	j	20010fa2 <_ftoa+0x59e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:456
    }
    else if (flags & FLAGS_PLUS) {
20010f60:	401c                	lw	a5,0(s0)
20010f62:	8b91                	andi	a5,a5,4
20010f64:	cf99                	beqz	a5,20010f82 <_ftoa+0x57e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:457
      buf[len++] = '+';  // ignore the space if the '+' exists
20010f66:	fec42783          	lw	a5,-20(s0)
20010f6a:	00178713          	addi	a4,a5,1
20010f6e:	fee42623          	sw	a4,-20(s0)
20010f72:	ff040713          	addi	a4,s0,-16
20010f76:	97ba                	add	a5,a5,a4
20010f78:	02b00713          	li	a4,43
20010f7c:	fae78c23          	sb	a4,-72(a5)
20010f80:	a00d                	j	20010fa2 <_ftoa+0x59e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:459
    }
    else if (flags & FLAGS_SPACE) {
20010f82:	401c                	lw	a5,0(s0)
20010f84:	8ba1                	andi	a5,a5,8
20010f86:	cf91                	beqz	a5,20010fa2 <_ftoa+0x59e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:460
      buf[len++] = ' ';
20010f88:	fec42783          	lw	a5,-20(s0)
20010f8c:	00178713          	addi	a4,a5,1
20010f90:	fee42623          	sw	a4,-20(s0)
20010f94:	ff040713          	addi	a4,s0,-16
20010f98:	97ba                	add	a5,a5,a4
20010f9a:	02000713          	li	a4,32
20010f9e:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:464
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
20010fa2:	fa840713          	addi	a4,s0,-88
20010fa6:	00042883          	lw	a7,0(s0)
20010faa:	f8042803          	lw	a6,-128(s0)
20010fae:	fec42783          	lw	a5,-20(s0)
20010fb2:	f9042683          	lw	a3,-112(s0)
20010fb6:	f9442603          	lw	a2,-108(s0)
20010fba:	f9842583          	lw	a1,-104(s0)
20010fbe:	f9c42503          	lw	a0,-100(s0)
20010fc2:	caaff0ef          	jal	ra,2001046c <_out_rev>
20010fc6:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:465 (discriminator 3)
}
20010fc8:	853e                	mv	a0,a5
20010fca:	40ba                	lw	ra,140(sp)
20010fcc:	442a                	lw	s0,136(sp)
20010fce:	449a                	lw	s1,132(sp)
20010fd0:	6149                	addi	sp,sp,144
20010fd2:	8082                	ret

20010fd4 <_etoa>:
_etoa():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:471


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
20010fd4:	7131                	addi	sp,sp,-192
20010fd6:	df06                	sw	ra,188(sp)
20010fd8:	dd22                	sw	s0,184(sp)
20010fda:	db26                	sw	s1,180(sp)
20010fdc:	d94a                	sw	s2,176(sp)
20010fde:	d74e                	sw	s3,172(sp)
20010fe0:	d552                	sw	s4,168(sp)
20010fe2:	d356                	sw	s5,164(sp)
20010fe4:	d15a                	sw	s6,160(sp)
20010fe6:	cf5e                	sw	s7,156(sp)
20010fe8:	cd62                	sw	s8,152(sp)
20010fea:	cb66                	sw	s9,148(sp)
20010fec:	c96a                	sw	s10,144(sp)
20010fee:	c76e                	sw	s11,140(sp)
20010ff0:	0180                	addi	s0,sp,192
20010ff2:	f6a42e23          	sw	a0,-132(s0)
20010ff6:	f6b42c23          	sw	a1,-136(s0)
20010ffa:	f6c42a23          	sw	a2,-140(s0)
20010ffe:	f6d42823          	sw	a3,-144(s0)
20011002:	f6e42423          	sw	a4,-152(s0)
20011006:	f6f42623          	sw	a5,-148(s0)
2001100a:	f7042223          	sw	a6,-156(s0)
2001100e:	f7142023          	sw	a7,-160(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:473
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
20011012:	f6842603          	lw	a2,-152(s0)
20011016:	f6c42683          	lw	a3,-148(s0)
2001101a:	f6842503          	lw	a0,-152(s0)
2001101e:	f6c42583          	lw	a1,-148(s0)
20011022:	408020ef          	jal	ra,2001342a <__eqdf2>
20011026:	87aa                	mv	a5,a0
20011028:	ef9d                	bnez	a5,20011066 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:473 (discriminator 1)
2001102a:	200187b7          	lui	a5,0x20018
2001102e:	7807a603          	lw	a2,1920(a5) # 20018780 <_exit+0x50>
20011032:	7847a683          	lw	a3,1924(a5)
20011036:	f6842503          	lw	a0,-152(s0)
2001103a:	f6c42583          	lw	a1,-148(s0)
2001103e:	456020ef          	jal	ra,20013494 <__gedf2>
20011042:	87aa                	mv	a5,a0
20011044:	02f04163          	bgtz	a5,20011066 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:473 (discriminator 2)
20011048:	200187b7          	lui	a5,0x20018
2001104c:	7787a603          	lw	a2,1912(a5) # 20018778 <_exit+0x48>
20011050:	77c7a683          	lw	a3,1916(a5)
20011054:	f6842503          	lw	a0,-152(s0)
20011058:	f6c42583          	lw	a1,-148(s0)
2001105c:	4dc020ef          	jal	ra,20013538 <__ledf2>
20011060:	87aa                	mv	a5,a0
20011062:	0207d763          	bgez	a5,20011090 <_etoa+0xbc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:474
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
20011066:	401c                	lw	a5,0(s0)
20011068:	c03e                	sw	a5,0(sp)
2001106a:	f6042883          	lw	a7,-160(s0)
2001106e:	f6442803          	lw	a6,-156(s0)
20011072:	f6842703          	lw	a4,-152(s0)
20011076:	f6c42783          	lw	a5,-148(s0)
2001107a:	f7042683          	lw	a3,-144(s0)
2001107e:	f7442603          	lw	a2,-140(s0)
20011082:	f7842583          	lw	a1,-136(s0)
20011086:	f7c42503          	lw	a0,-132(s0)
2001108a:	3aad                	jal	20010a04 <_ftoa>
2001108c:	87aa                	mv	a5,a0
2001108e:	ab49                	j	20011620 <_etoa+0x64c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:478
  }

  // determine the sign
  const bool negative = value < 0;
20011090:	4485                	li	s1,1
20011092:	4601                	li	a2,0
20011094:	4681                	li	a3,0
20011096:	f6842503          	lw	a0,-152(s0)
2001109a:	f6c42583          	lw	a1,-148(s0)
2001109e:	49a020ef          	jal	ra,20013538 <__ledf2>
200110a2:	87aa                	mv	a5,a0
200110a4:	0007c363          	bltz	a5,200110aa <_etoa+0xd6>
200110a8:	4481                	li	s1,0
200110aa:	fa9409a3          	sb	s1,-77(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:479
  if (negative) {
200110ae:	fb344783          	lbu	a5,-77(s0)
200110b2:	cf81                	beqz	a5,200110ca <_etoa+0xf6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:480
    value = -value;
200110b4:	f6842783          	lw	a5,-152(s0)
200110b8:	f6f42423          	sw	a5,-152(s0)
200110bc:	f6c42703          	lw	a4,-148(s0)
200110c0:	800007b7          	lui	a5,0x80000
200110c4:	8fb9                	xor	a5,a5,a4
200110c6:	f6f42623          	sw	a5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:484
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
200110ca:	401c                	lw	a5,0(s0)
200110cc:	4007f793          	andi	a5,a5,1024
200110d0:	e781                	bnez	a5,200110d8 <_etoa+0x104>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:485
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
200110d2:	4799                	li	a5,6
200110d4:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:495
  union {
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
200110d8:	f6842783          	lw	a5,-152(s0)
200110dc:	f6c42803          	lw	a6,-148(s0)
200110e0:	f8f42423          	sw	a5,-120(s0)
200110e4:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:496
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
200110e8:	f8842783          	lw	a5,-120(s0)
200110ec:	f8c42803          	lw	a6,-116(s0)
200110f0:	01485793          	srli	a5,a6,0x14
200110f4:	f4f42c23          	sw	a5,-168(s0)
200110f8:	f4042e23          	sw	zero,-164(s0)
200110fc:	f5842783          	lw	a5,-168(s0)
20011100:	7ff7f793          	andi	a5,a5,2047
20011104:	c0178793          	addi	a5,a5,-1023 # 7ffffc01 <metal_segment_heap_target_end+0xffffd9b5>
20011108:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:497
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
2001110c:	f8842783          	lw	a5,-120(s0)
20011110:	f8c42803          	lw	a6,-116(s0)
20011114:	fff7f913          	andi	s2,a5,-1
20011118:	00100737          	lui	a4,0x100
2001111c:	177d                	addi	a4,a4,-1
2001111e:	00e879b3          	and	s3,a6,a4
20011122:	00096b13          	ori	s6,s2,0
20011126:	3ff007b7          	lui	a5,0x3ff00
2001112a:	00f9ebb3          	or	s7,s3,a5
2001112e:	f9642423          	sw	s6,-120(s0)
20011132:	f9742623          	sw	s7,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:499
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
20011136:	fac42503          	lw	a0,-84(s0)
2001113a:	795020ef          	jal	ra,200140ce <__floatsidf>
2001113e:	200187b7          	lui	a5,0x20018
20011142:	7a07a603          	lw	a2,1952(a5) # 200187a0 <_exit+0x70>
20011146:	7a47a683          	lw	a3,1956(a5)
2001114a:	492020ef          	jal	ra,200135dc <__muldf3>
2001114e:	87aa                	mv	a5,a0
20011150:	882e                	mv	a6,a1
20011152:	853e                	mv	a0,a5
20011154:	85c2                	mv	a1,a6
20011156:	200187b7          	lui	a5,0x20018
2001115a:	7a87a603          	lw	a2,1960(a5) # 200187a8 <_exit+0x78>
2001115e:	7ac7a683          	lw	a3,1964(a5)
20011162:	7a0010ef          	jal	ra,20012902 <__adddf3>
20011166:	87aa                	mv	a5,a0
20011168:	882e                	mv	a6,a1
2001116a:	893e                	mv	s2,a5
2001116c:	89c2                	mv	s3,a6
2001116e:	f8842783          	lw	a5,-120(s0)
20011172:	f8c42803          	lw	a6,-116(s0)
20011176:	20018737          	lui	a4,0x20018
2001117a:	7b072603          	lw	a2,1968(a4) # 200187b0 <_exit+0x80>
2001117e:	7b472683          	lw	a3,1972(a4)
20011182:	853e                	mv	a0,a5
20011184:	85c2                	mv	a1,a6
20011186:	093020ef          	jal	ra,20013a18 <__subdf3>
2001118a:	87aa                	mv	a5,a0
2001118c:	882e                	mv	a6,a1
2001118e:	853e                	mv	a0,a5
20011190:	85c2                	mv	a1,a6
20011192:	200187b7          	lui	a5,0x20018
20011196:	7b87a603          	lw	a2,1976(a5) # 200187b8 <_exit+0x88>
2001119a:	7bc7a683          	lw	a3,1980(a5)
2001119e:	43e020ef          	jal	ra,200135dc <__muldf3>
200111a2:	87aa                	mv	a5,a0
200111a4:	882e                	mv	a6,a1
200111a6:	863e                	mv	a2,a5
200111a8:	86c2                	mv	a3,a6
200111aa:	854a                	mv	a0,s2
200111ac:	85ce                	mv	a1,s3
200111ae:	754010ef          	jal	ra,20012902 <__adddf3>
200111b2:	87aa                	mv	a5,a0
200111b4:	882e                	mv	a6,a1
200111b6:	853e                	mv	a0,a5
200111b8:	85c2                	mv	a1,a6
200111ba:	655020ef          	jal	ra,2001400e <__fixdfsi>
200111be:	87aa                	mv	a5,a0
200111c0:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:501
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
200111c4:	fbc42503          	lw	a0,-68(s0)
200111c8:	707020ef          	jal	ra,200140ce <__floatsidf>
200111cc:	200187b7          	lui	a5,0x20018
200111d0:	7c07a603          	lw	a2,1984(a5) # 200187c0 <_exit+0x90>
200111d4:	7c47a683          	lw	a3,1988(a5)
200111d8:	404020ef          	jal	ra,200135dc <__muldf3>
200111dc:	87aa                	mv	a5,a0
200111de:	882e                	mv	a6,a1
200111e0:	853e                	mv	a0,a5
200111e2:	85c2                	mv	a1,a6
200111e4:	200187b7          	lui	a5,0x20018
200111e8:	7987a603          	lw	a2,1944(a5) # 20018798 <_exit+0x68>
200111ec:	79c7a683          	lw	a3,1948(a5)
200111f0:	712010ef          	jal	ra,20012902 <__adddf3>
200111f4:	87aa                	mv	a5,a0
200111f6:	882e                	mv	a6,a1
200111f8:	853e                	mv	a0,a5
200111fa:	85c2                	mv	a1,a6
200111fc:	613020ef          	jal	ra,2001400e <__fixdfsi>
20011200:	87aa                	mv	a5,a0
20011202:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:502
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
20011206:	fbc42503          	lw	a0,-68(s0)
2001120a:	6c5020ef          	jal	ra,200140ce <__floatsidf>
2001120e:	200187b7          	lui	a5,0x20018
20011212:	7c87a603          	lw	a2,1992(a5) # 200187c8 <_exit+0x98>
20011216:	7cc7a683          	lw	a3,1996(a5)
2001121a:	3c2020ef          	jal	ra,200135dc <__muldf3>
2001121e:	87aa                	mv	a5,a0
20011220:	882e                	mv	a6,a1
20011222:	893e                	mv	s2,a5
20011224:	89c2                	mv	s3,a6
20011226:	fac42503          	lw	a0,-84(s0)
2001122a:	6a5020ef          	jal	ra,200140ce <__floatsidf>
2001122e:	200187b7          	lui	a5,0x20018
20011232:	7d07a603          	lw	a2,2000(a5) # 200187d0 <_exit+0xa0>
20011236:	7d47a683          	lw	a3,2004(a5)
2001123a:	3a2020ef          	jal	ra,200135dc <__muldf3>
2001123e:	87aa                	mv	a5,a0
20011240:	882e                	mv	a6,a1
20011242:	863e                	mv	a2,a5
20011244:	86c2                	mv	a3,a6
20011246:	854a                	mv	a0,s2
20011248:	85ce                	mv	a1,s3
2001124a:	7ce020ef          	jal	ra,20013a18 <__subdf3>
2001124e:	87aa                	mv	a5,a0
20011250:	882e                	mv	a6,a1
20011252:	faf42023          	sw	a5,-96(s0)
20011256:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:503
  const double z2 = z * z;
2001125a:	fa042603          	lw	a2,-96(s0)
2001125e:	fa442683          	lw	a3,-92(s0)
20011262:	fa042503          	lw	a0,-96(s0)
20011266:	fa442583          	lw	a1,-92(s0)
2001126a:	372020ef          	jal	ra,200135dc <__muldf3>
2001126e:	87aa                	mv	a5,a0
20011270:	882e                	mv	a6,a1
20011272:	f8f42c23          	sw	a5,-104(s0)
20011276:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:504
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
2001127a:	fac42783          	lw	a5,-84(s0)
2001127e:	3ff78793          	addi	a5,a5,1023
20011282:	8d3e                	mv	s10,a5
20011284:	87fd                	srai	a5,a5,0x1f
20011286:	8dbe                	mv	s11,a5
20011288:	014d1c93          	slli	s9,s10,0x14
2001128c:	4c01                	li	s8,0
2001128e:	f9842423          	sw	s8,-120(s0)
20011292:	f9942623          	sw	s9,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:506
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
20011296:	f8842903          	lw	s2,-120(s0)
2001129a:	f8c42983          	lw	s3,-116(s0)
2001129e:	fa042783          	lw	a5,-96(s0)
200112a2:	fa442803          	lw	a6,-92(s0)
200112a6:	863e                	mv	a2,a5
200112a8:	86c2                	mv	a3,a6
200112aa:	853e                	mv	a0,a5
200112ac:	85c2                	mv	a1,a6
200112ae:	654010ef          	jal	ra,20012902 <__adddf3>
200112b2:	87aa                	mv	a5,a0
200112b4:	882e                	mv	a6,a1
200112b6:	8b3e                	mv	s6,a5
200112b8:	8bc2                	mv	s7,a6
200112ba:	200187b7          	lui	a5,0x20018
200112be:	fa042603          	lw	a2,-96(s0)
200112c2:	fa442683          	lw	a3,-92(s0)
200112c6:	7d87a503          	lw	a0,2008(a5) # 200187d8 <_exit+0xa8>
200112ca:	7dc7a583          	lw	a1,2012(a5)
200112ce:	74a020ef          	jal	ra,20013a18 <__subdf3>
200112d2:	87aa                	mv	a5,a0
200112d4:	882e                	mv	a6,a1
200112d6:	8c3e                	mv	s8,a5
200112d8:	8cc2                	mv	s9,a6
200112da:	200187b7          	lui	a5,0x20018
200112de:	7e07a603          	lw	a2,2016(a5) # 200187e0 <_exit+0xb0>
200112e2:	7e47a683          	lw	a3,2020(a5)
200112e6:	f9842503          	lw	a0,-104(s0)
200112ea:	f9c42583          	lw	a1,-100(s0)
200112ee:	407010ef          	jal	ra,20012ef4 <__divdf3>
200112f2:	87aa                	mv	a5,a0
200112f4:	882e                	mv	a6,a1
200112f6:	853e                	mv	a0,a5
200112f8:	85c2                	mv	a1,a6
200112fa:	200187b7          	lui	a5,0x20018
200112fe:	7e87a603          	lw	a2,2024(a5) # 200187e8 <_exit+0xb8>
20011302:	7ec7a683          	lw	a3,2028(a5)
20011306:	5fc010ef          	jal	ra,20012902 <__adddf3>
2001130a:	87aa                	mv	a5,a0
2001130c:	882e                	mv	a6,a1
2001130e:	863e                	mv	a2,a5
20011310:	86c2                	mv	a3,a6
20011312:	f9842503          	lw	a0,-104(s0)
20011316:	f9c42583          	lw	a1,-100(s0)
2001131a:	3db010ef          	jal	ra,20012ef4 <__divdf3>
2001131e:	87aa                	mv	a5,a0
20011320:	882e                	mv	a6,a1
20011322:	853e                	mv	a0,a5
20011324:	85c2                	mv	a1,a6
20011326:	200187b7          	lui	a5,0x20018
2001132a:	7f07a603          	lw	a2,2032(a5) # 200187f0 <_exit+0xc0>
2001132e:	7f47a683          	lw	a3,2036(a5)
20011332:	5d0010ef          	jal	ra,20012902 <__adddf3>
20011336:	87aa                	mv	a5,a0
20011338:	882e                	mv	a6,a1
2001133a:	863e                	mv	a2,a5
2001133c:	86c2                	mv	a3,a6
2001133e:	f9842503          	lw	a0,-104(s0)
20011342:	f9c42583          	lw	a1,-100(s0)
20011346:	3af010ef          	jal	ra,20012ef4 <__divdf3>
2001134a:	87aa                	mv	a5,a0
2001134c:	882e                	mv	a6,a1
2001134e:	863e                	mv	a2,a5
20011350:	86c2                	mv	a3,a6
20011352:	8562                	mv	a0,s8
20011354:	85e6                	mv	a1,s9
20011356:	5ac010ef          	jal	ra,20012902 <__adddf3>
2001135a:	87aa                	mv	a5,a0
2001135c:	882e                	mv	a6,a1
2001135e:	863e                	mv	a2,a5
20011360:	86c2                	mv	a3,a6
20011362:	855a                	mv	a0,s6
20011364:	85de                	mv	a1,s7
20011366:	38f010ef          	jal	ra,20012ef4 <__divdf3>
2001136a:	87aa                	mv	a5,a0
2001136c:	882e                	mv	a6,a1
2001136e:	853e                	mv	a0,a5
20011370:	85c2                	mv	a1,a6
20011372:	200187b7          	lui	a5,0x20018
20011376:	7f87a603          	lw	a2,2040(a5) # 200187f8 <_exit+0xc8>
2001137a:	7fc7a683          	lw	a3,2044(a5)
2001137e:	584010ef          	jal	ra,20012902 <__adddf3>
20011382:	87aa                	mv	a5,a0
20011384:	882e                	mv	a6,a1
20011386:	863e                	mv	a2,a5
20011388:	86c2                	mv	a3,a6
2001138a:	854a                	mv	a0,s2
2001138c:	85ce                	mv	a1,s3
2001138e:	24e020ef          	jal	ra,200135dc <__muldf3>
20011392:	87aa                	mv	a5,a0
20011394:	882e                	mv	a6,a1
20011396:	f8f42423          	sw	a5,-120(s0)
2001139a:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:508
  // correct for rounding errors
  if (value < conv.F) {
2001139e:	f8842783          	lw	a5,-120(s0)
200113a2:	f8c42803          	lw	a6,-116(s0)
200113a6:	863e                	mv	a2,a5
200113a8:	86c2                	mv	a3,a6
200113aa:	f6842503          	lw	a0,-152(s0)
200113ae:	f6c42583          	lw	a1,-148(s0)
200113b2:	186020ef          	jal	ra,20013538 <__ledf2>
200113b6:	87aa                	mv	a5,a0
200113b8:	0207db63          	bgez	a5,200113ee <_etoa+0x41a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:509
    expval--;
200113bc:	fbc42783          	lw	a5,-68(s0)
200113c0:	17fd                	addi	a5,a5,-1
200113c2:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:510
    conv.F /= 10;
200113c6:	f8842783          	lw	a5,-120(s0)
200113ca:	f8c42803          	lw	a6,-116(s0)
200113ce:	20018737          	lui	a4,0x20018
200113d2:	7e872603          	lw	a2,2024(a4) # 200187e8 <_exit+0xb8>
200113d6:	7ec72683          	lw	a3,2028(a4)
200113da:	853e                	mv	a0,a5
200113dc:	85c2                	mv	a1,a6
200113de:	317010ef          	jal	ra,20012ef4 <__divdf3>
200113e2:	87aa                	mv	a5,a0
200113e4:	882e                	mv	a6,a1
200113e6:	f8f42423          	sw	a5,-120(s0)
200113ea:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:514
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
200113ee:	fbc42703          	lw	a4,-68(s0)
200113f2:	06300793          	li	a5,99
200113f6:	00e7ca63          	blt	a5,a4,2001140a <_etoa+0x436>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:514 (discriminator 1)
200113fa:	fbc42703          	lw	a4,-68(s0)
200113fe:	f9d00793          	li	a5,-99
20011402:	00f74463          	blt	a4,a5,2001140a <_etoa+0x436>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:514 (discriminator 3)
20011406:	4791                	li	a5,4
20011408:	a011                	j	2001140c <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:514 (discriminator 4)
2001140a:	4795                	li	a5,5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:514 (discriminator 6)
2001140c:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:517 (discriminator 6)

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
20011410:	4018                	lw	a4,0(s0)
20011412:	6785                	lui	a5,0x1
20011414:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011418:	8ff9                	and	a5,a5,a4
2001141a:	c7d1                	beqz	a5,200114a6 <_etoa+0x4d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:519
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
2001141c:	200197b7          	lui	a5,0x20019
20011420:	8007a603          	lw	a2,-2048(a5) # 20018800 <_exit+0xd0>
20011424:	8047a683          	lw	a3,-2044(a5)
20011428:	f6842503          	lw	a0,-152(s0)
2001142c:	f6c42583          	lw	a1,-148(s0)
20011430:	064020ef          	jal	ra,20013494 <__gedf2>
20011434:	87aa                	mv	a5,a0
20011436:	0407cc63          	bltz	a5,2001148e <_etoa+0x4ba>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:519 (discriminator 1)
2001143a:	200197b7          	lui	a5,0x20019
2001143e:	8087a603          	lw	a2,-2040(a5) # 20018808 <_exit+0xd8>
20011442:	80c7a683          	lw	a3,-2036(a5)
20011446:	f6842503          	lw	a0,-152(s0)
2001144a:	f6c42583          	lw	a1,-148(s0)
2001144e:	0ea020ef          	jal	ra,20013538 <__ledf2>
20011452:	87aa                	mv	a5,a0
20011454:	0207dd63          	bgez	a5,2001148e <_etoa+0x4ba>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:520
      if ((int)prec > expval) {
20011458:	f6442783          	lw	a5,-156(s0)
2001145c:	fbc42703          	lw	a4,-68(s0)
20011460:	00f75c63          	bge	a4,a5,20011478 <_etoa+0x4a4>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:521
        prec = (unsigned)((int)prec - expval - 1);
20011464:	f6442703          	lw	a4,-156(s0)
20011468:	fbc42783          	lw	a5,-68(s0)
2001146c:	40f707b3          	sub	a5,a4,a5
20011470:	17fd                	addi	a5,a5,-1
20011472:	f6f42223          	sw	a5,-156(s0)
20011476:	a019                	j	2001147c <_etoa+0x4a8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:524
      }
      else {
        prec = 0;
20011478:	f6042223          	sw	zero,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:526
      }
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
2001147c:	401c                	lw	a5,0(s0)
2001147e:	4007e793          	ori	a5,a5,1024
20011482:	c01c                	sw	a5,0(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:528
      // no characters in exponent
      minwidth = 0U;
20011484:	fa042c23          	sw	zero,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:529
      expval   = 0;
20011488:	fa042e23          	sw	zero,-68(s0)
2001148c:	a829                	j	200114a6 <_etoa+0x4d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:533
    }
    else {
      // we use one sigfig for the whole part
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
2001148e:	f6442783          	lw	a5,-156(s0)
20011492:	cb91                	beqz	a5,200114a6 <_etoa+0x4d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:533 (discriminator 1)
20011494:	401c                	lw	a5,0(s0)
20011496:	4007f793          	andi	a5,a5,1024
2001149a:	c791                	beqz	a5,200114a6 <_etoa+0x4d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:534
        --prec;
2001149c:	f6442783          	lw	a5,-156(s0)
200114a0:	17fd                	addi	a5,a5,-1
200114a2:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:540
      }
    }
  }

  // will everything fit?
  unsigned int fwidth = width;
200114a6:	f6042783          	lw	a5,-160(s0)
200114aa:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:541
  if (width > minwidth) {
200114ae:	f6042703          	lw	a4,-160(s0)
200114b2:	fb842783          	lw	a5,-72(s0)
200114b6:	00e7fb63          	bgeu	a5,a4,200114cc <_etoa+0x4f8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:543
    // we didn't fall-back so subtract the characters required for the exponent
    fwidth -= minwidth;
200114ba:	fb442703          	lw	a4,-76(s0)
200114be:	fb842783          	lw	a5,-72(s0)
200114c2:	40f707b3          	sub	a5,a4,a5
200114c6:	faf42a23          	sw	a5,-76(s0)
200114ca:	a019                	j	200114d0 <_etoa+0x4fc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:546
  } else {
    // not enough characters, so go back to default sizing
    fwidth = 0U;
200114cc:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:548
  }
  if ((flags & FLAGS_LEFT) && minwidth) {
200114d0:	401c                	lw	a5,0(s0)
200114d2:	8b89                	andi	a5,a5,2
200114d4:	c791                	beqz	a5,200114e0 <_etoa+0x50c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:548 (discriminator 1)
200114d6:	fb842783          	lw	a5,-72(s0)
200114da:	c399                	beqz	a5,200114e0 <_etoa+0x50c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:550
    // if we're padding on the right, DON'T pad the floating part
    fwidth = 0U;
200114dc:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:554
  }

  // rescale the float value
  if (expval) {
200114e0:	fbc42783          	lw	a5,-68(s0)
200114e4:	c39d                	beqz	a5,2001150a <_etoa+0x536>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:555
    value /= conv.F;
200114e6:	f8842783          	lw	a5,-120(s0)
200114ea:	f8c42803          	lw	a6,-116(s0)
200114ee:	863e                	mv	a2,a5
200114f0:	86c2                	mv	a3,a6
200114f2:	f6842503          	lw	a0,-152(s0)
200114f6:	f6c42583          	lw	a1,-148(s0)
200114fa:	1fb010ef          	jal	ra,20012ef4 <__divdf3>
200114fe:	87aa                	mv	a5,a0
20011500:	882e                	mv	a6,a1
20011502:	f6f42423          	sw	a5,-152(s0)
20011506:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:559
  }

  // output the floating part
  const size_t start_idx = idx;
2001150a:	f7442783          	lw	a5,-140(s0)
2001150e:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:560
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
20011512:	fb344783          	lbu	a5,-77(s0)
20011516:	cb91                	beqz	a5,2001152a <_etoa+0x556>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:560 (discriminator 1)
20011518:	f6842a03          	lw	s4,-152(s0)
2001151c:	f6c42703          	lw	a4,-148(s0)
20011520:	800007b7          	lui	a5,0x80000
20011524:	00f74ab3          	xor	s5,a4,a5
20011528:	a029                	j	20011532 <_etoa+0x55e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:560 (discriminator 2)
2001152a:	f6842a03          	lw	s4,-152(s0)
2001152e:	f6c42a83          	lw	s5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:560 (discriminator 4)
20011532:	4018                	lw	a4,0(s0)
20011534:	77fd                	lui	a5,0xfffff
20011536:	7ff78793          	addi	a5,a5,2047 # fffff7ff <metal_segment_heap_target_end+0x7fffd5b3>
2001153a:	8ff9                	and	a5,a5,a4
2001153c:	c03e                	sw	a5,0(sp)
2001153e:	fb442883          	lw	a7,-76(s0)
20011542:	f6442803          	lw	a6,-156(s0)
20011546:	8752                	mv	a4,s4
20011548:	87d6                	mv	a5,s5
2001154a:	f7042683          	lw	a3,-144(s0)
2001154e:	f7442603          	lw	a2,-140(s0)
20011552:	f7842583          	lw	a1,-136(s0)
20011556:	f7c42503          	lw	a0,-132(s0)
2001155a:	caaff0ef          	jal	ra,20010a04 <_ftoa>
2001155e:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:563 (discriminator 4)

  // output the exponent part
  if (minwidth) {
20011562:	fb842783          	lw	a5,-72(s0)
20011566:	cbdd                	beqz	a5,2001161c <_etoa+0x648>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:565
    // output the exponential symbol
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
20011568:	401c                	lw	a5,0(s0)
2001156a:	0207f793          	andi	a5,a5,32
2001156e:	c781                	beqz	a5,20011576 <_etoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:565 (discriminator 1)
20011570:	04500793          	li	a5,69
20011574:	a019                	j	2001157a <_etoa+0x5a6>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:565 (discriminator 2)
20011576:	06500793          	li	a5,101
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:565 (discriminator 4)
2001157a:	f7442703          	lw	a4,-140(s0)
2001157e:	00170693          	addi	a3,a4,1
20011582:	f6d42a23          	sw	a3,-140(s0)
20011586:	f7c42803          	lw	a6,-132(s0)
2001158a:	f7042683          	lw	a3,-144(s0)
2001158e:	863a                	mv	a2,a4
20011590:	f7842583          	lw	a1,-136(s0)
20011594:	853e                	mv	a0,a5
20011596:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:567 (discriminator 4)
    // output the exponent value
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
20011598:	fbc42783          	lw	a5,-68(s0)
2001159c:	41f7d713          	srai	a4,a5,0x1f
200115a0:	fbc42783          	lw	a5,-68(s0)
200115a4:	8fb9                	xor	a5,a5,a4
200115a6:	8f99                	sub	a5,a5,a4
200115a8:	863e                	mv	a2,a5
200115aa:	fbc42783          	lw	a5,-68(s0)
200115ae:	83fd                	srli	a5,a5,0x1f
200115b0:	0ff7f693          	andi	a3,a5,255
200115b4:	fb842783          	lw	a5,-72(s0)
200115b8:	17fd                	addi	a5,a5,-1
200115ba:	4715                	li	a4,5
200115bc:	c23a                	sw	a4,4(sp)
200115be:	c03e                	sw	a5,0(sp)
200115c0:	4881                	li	a7,0
200115c2:	4829                	li	a6,10
200115c4:	87b6                	mv	a5,a3
200115c6:	8732                	mv	a4,a2
200115c8:	f7042683          	lw	a3,-144(s0)
200115cc:	f7442603          	lw	a2,-140(s0)
200115d0:	f7842583          	lw	a1,-136(s0)
200115d4:	f7c42503          	lw	a0,-132(s0)
200115d8:	9faff0ef          	jal	ra,200107d2 <_ntoa_long>
200115dc:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:569 (discriminator 4)
    // might need to right-pad spaces
    if (flags & FLAGS_LEFT) {
200115e0:	401c                	lw	a5,0(s0)
200115e2:	8b89                	andi	a5,a5,2
200115e4:	cf85                	beqz	a5,2001161c <_etoa+0x648>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:570
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
200115e6:	a00d                	j	20011608 <_etoa+0x634>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:570 (discriminator 2)
200115e8:	f7442783          	lw	a5,-140(s0)
200115ec:	00178713          	addi	a4,a5,1
200115f0:	f6e42a23          	sw	a4,-140(s0)
200115f4:	f7c42703          	lw	a4,-132(s0)
200115f8:	f7042683          	lw	a3,-144(s0)
200115fc:	863e                	mv	a2,a5
200115fe:	f7842583          	lw	a1,-136(s0)
20011602:	02000513          	li	a0,32
20011606:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:570 (discriminator 1)
20011608:	f7442703          	lw	a4,-140(s0)
2001160c:	f9442783          	lw	a5,-108(s0)
20011610:	40f707b3          	sub	a5,a4,a5
20011614:	f6042703          	lw	a4,-160(s0)
20011618:	fce7e8e3          	bltu	a5,a4,200115e8 <_etoa+0x614>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:573
    }
  }
  return idx;
2001161c:	f7442783          	lw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:574 (discriminator 1)
}
20011620:	853e                	mv	a0,a5
20011622:	50fa                	lw	ra,188(sp)
20011624:	546a                	lw	s0,184(sp)
20011626:	54da                	lw	s1,180(sp)
20011628:	594a                	lw	s2,176(sp)
2001162a:	59ba                	lw	s3,172(sp)
2001162c:	5a2a                	lw	s4,168(sp)
2001162e:	5a9a                	lw	s5,164(sp)
20011630:	5b0a                	lw	s6,160(sp)
20011632:	4bfa                	lw	s7,156(sp)
20011634:	4c6a                	lw	s8,152(sp)
20011636:	4cda                	lw	s9,148(sp)
20011638:	4d4a                	lw	s10,144(sp)
2001163a:	4dba                	lw	s11,140(sp)
2001163c:	6129                	addi	sp,sp,192
2001163e:	8082                	ret

20011640 <_vsnprintf>:
_vsnprintf():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:581
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
20011640:	7171                	addi	sp,sp,-176
20011642:	d706                	sw	ra,172(sp)
20011644:	d522                	sw	s0,168(sp)
20011646:	d34a                	sw	s2,164(sp)
20011648:	d14e                	sw	s3,160(sp)
2001164a:	cf52                	sw	s4,156(sp)
2001164c:	cd56                	sw	s5,152(sp)
2001164e:	cb5a                	sw	s6,148(sp)
20011650:	c95e                	sw	s7,144(sp)
20011652:	c762                	sw	s8,140(sp)
20011654:	c566                	sw	s9,136(sp)
20011656:	c36a                	sw	s10,132(sp)
20011658:	c16e                	sw	s11,128(sp)
2001165a:	1900                	addi	s0,sp,176
2001165c:	f6a42e23          	sw	a0,-132(s0)
20011660:	f6b42c23          	sw	a1,-136(s0)
20011664:	f6c42a23          	sw	a2,-140(s0)
20011668:	f6d42823          	sw	a3,-144(s0)
2001166c:	f6e42623          	sw	a4,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:583
  unsigned int flags, width, precision, n;
  size_t idx = 0U;
20011670:	fa042e23          	sw	zero,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:585

  if (!buffer) {
20011674:	f7842783          	lw	a5,-136(s0)
20011678:	2e0796e3          	bnez	a5,20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:587
    // use null output function
    out = _out_null;
2001167c:	200107b7          	lui	a5,0x20010
20011680:	33678793          	addi	a5,a5,822 # 20010336 <_out_null>
20011684:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:590
  }

  while (*format)
20011688:	2dd0006f          	j	20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:593
  {
    // format specifier?  %[flags][width][.precision][length]
    if (*format != '%') {
2001168c:	f7042783          	lw	a5,-144(s0)
20011690:	0007c703          	lbu	a4,0(a5)
20011694:	02500793          	li	a5,37
20011698:	02f70b63          	beq	a4,a5,200116ce <_vsnprintf+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:595
      // no
      out(*format, buffer, idx++, maxlen);
2001169c:	f7042783          	lw	a5,-144(s0)
200116a0:	0007c503          	lbu	a0,0(a5)
200116a4:	fbc42783          	lw	a5,-68(s0)
200116a8:	00178713          	addi	a4,a5,1
200116ac:	fae42e23          	sw	a4,-68(s0)
200116b0:	f7c42703          	lw	a4,-132(s0)
200116b4:	f7442683          	lw	a3,-140(s0)
200116b8:	863e                	mv	a2,a5
200116ba:	f7842583          	lw	a1,-136(s0)
200116be:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:596
      format++;
200116c0:	f7042783          	lw	a5,-144(s0)
200116c4:	0785                	addi	a5,a5,1
200116c6:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:597
      continue;
200116ca:	29b0006f          	j	20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:601
    }
    else {
      // yes, evaluate it
      format++;
200116ce:	f7042783          	lw	a5,-144(s0)
200116d2:	0785                	addi	a5,a5,1
200116d4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:605
    }

    // evaluate flags
    flags = 0U;
200116d8:	fc042623          	sw	zero,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:607
    do {
      switch (*format) {
200116dc:	f7042783          	lw	a5,-144(s0)
200116e0:	0007c783          	lbu	a5,0(a5)
200116e4:	1781                	addi	a5,a5,-32
200116e6:	4741                	li	a4,16
200116e8:	0af76663          	bltu	a4,a5,20011794 <_vsnprintf+0x154>
200116ec:	00279713          	slli	a4,a5,0x2
200116f0:	200197b7          	lui	a5,0x20019
200116f4:	81078793          	addi	a5,a5,-2032 # 20018810 <_exit+0xe0>
200116f8:	97ba                	add	a5,a5,a4
200116fa:	439c                	lw	a5,0(a5)
200116fc:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:608
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
200116fe:	fcc42783          	lw	a5,-52(s0)
20011702:	0017e793          	ori	a5,a5,1
20011706:	fcf42623          	sw	a5,-52(s0)
2001170a:	f7042783          	lw	a5,-144(s0)
2001170e:	0785                	addi	a5,a5,1
20011710:	f6f42823          	sw	a5,-144(s0)
20011714:	4785                	li	a5,1
20011716:	fcf42023          	sw	a5,-64(s0)
2001171a:	a041                	j	2001179a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:609
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
2001171c:	fcc42783          	lw	a5,-52(s0)
20011720:	0027e793          	ori	a5,a5,2
20011724:	fcf42623          	sw	a5,-52(s0)
20011728:	f7042783          	lw	a5,-144(s0)
2001172c:	0785                	addi	a5,a5,1
2001172e:	f6f42823          	sw	a5,-144(s0)
20011732:	4785                	li	a5,1
20011734:	fcf42023          	sw	a5,-64(s0)
20011738:	a08d                	j	2001179a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:610
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
2001173a:	fcc42783          	lw	a5,-52(s0)
2001173e:	0047e793          	ori	a5,a5,4
20011742:	fcf42623          	sw	a5,-52(s0)
20011746:	f7042783          	lw	a5,-144(s0)
2001174a:	0785                	addi	a5,a5,1
2001174c:	f6f42823          	sw	a5,-144(s0)
20011750:	4785                	li	a5,1
20011752:	fcf42023          	sw	a5,-64(s0)
20011756:	a091                	j	2001179a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:611
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
20011758:	fcc42783          	lw	a5,-52(s0)
2001175c:	0087e793          	ori	a5,a5,8
20011760:	fcf42623          	sw	a5,-52(s0)
20011764:	f7042783          	lw	a5,-144(s0)
20011768:	0785                	addi	a5,a5,1
2001176a:	f6f42823          	sw	a5,-144(s0)
2001176e:	4785                	li	a5,1
20011770:	fcf42023          	sw	a5,-64(s0)
20011774:	a01d                	j	2001179a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:612
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
20011776:	fcc42783          	lw	a5,-52(s0)
2001177a:	0107e793          	ori	a5,a5,16
2001177e:	fcf42623          	sw	a5,-52(s0)
20011782:	f7042783          	lw	a5,-144(s0)
20011786:	0785                	addi	a5,a5,1
20011788:	f6f42823          	sw	a5,-144(s0)
2001178c:	4785                	li	a5,1
2001178e:	fcf42023          	sw	a5,-64(s0)
20011792:	a021                	j	2001179a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:613
        default :                                   n = 0U; break;
20011794:	fc042023          	sw	zero,-64(s0)
20011798:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:615
      }
    } while (n);
2001179a:	fc042783          	lw	a5,-64(s0)
2001179e:	ff9d                	bnez	a5,200116dc <_vsnprintf+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:618

    // evaluate width field
    width = 0U;
200117a0:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:619
    if (_is_digit(*format)) {
200117a4:	f7042783          	lw	a5,-144(s0)
200117a8:	0007c783          	lbu	a5,0(a5)
200117ac:	853e                	mv	a0,a5
200117ae:	c29fe0ef          	jal	ra,200103d6 <_is_digit>
200117b2:	87aa                	mv	a5,a0
200117b4:	cb89                	beqz	a5,200117c6 <_vsnprintf+0x186>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:620
      width = _atoi(&format);
200117b6:	f7040793          	addi	a5,s0,-144
200117ba:	853e                	mv	a0,a5
200117bc:	c53fe0ef          	jal	ra,2001040e <_atoi>
200117c0:	fca42423          	sw	a0,-56(s0)
200117c4:	a8a1                	j	2001181c <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:622
    }
    else if (*format == '*') {
200117c6:	f7042783          	lw	a5,-144(s0)
200117ca:	0007c703          	lbu	a4,0(a5)
200117ce:	02a00793          	li	a5,42
200117d2:	04f71563          	bne	a4,a5,2001181c <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:623
      const int w = va_arg(va, int);
200117d6:	f6c42783          	lw	a5,-148(s0)
200117da:	00478713          	addi	a4,a5,4
200117de:	f6e42623          	sw	a4,-148(s0)
200117e2:	439c                	lw	a5,0(a5)
200117e4:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:624
      if (w < 0) {
200117e8:	fa842783          	lw	a5,-88(s0)
200117ec:	0007df63          	bgez	a5,2001180a <_vsnprintf+0x1ca>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:625
        flags |= FLAGS_LEFT;    // reverse padding
200117f0:	fcc42783          	lw	a5,-52(s0)
200117f4:	0027e793          	ori	a5,a5,2
200117f8:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:626
        width = (unsigned int)-w;
200117fc:	fa842783          	lw	a5,-88(s0)
20011800:	40f007b3          	neg	a5,a5
20011804:	fcf42423          	sw	a5,-56(s0)
20011808:	a029                	j	20011812 <_vsnprintf+0x1d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:629
      }
      else {
        width = (unsigned int)w;
2001180a:	fa842783          	lw	a5,-88(s0)
2001180e:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:631
      }
      format++;
20011812:	f7042783          	lw	a5,-144(s0)
20011816:	0785                	addi	a5,a5,1
20011818:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:635
    }

    // evaluate precision field
    precision = 0U;
2001181c:	fc042223          	sw	zero,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:636
    if (*format == '.') {
20011820:	f7042783          	lw	a5,-144(s0)
20011824:	0007c703          	lbu	a4,0(a5)
20011828:	02e00793          	li	a5,46
2001182c:	06f71b63          	bne	a4,a5,200118a2 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:637
      flags |= FLAGS_PRECISION;
20011830:	fcc42783          	lw	a5,-52(s0)
20011834:	4007e793          	ori	a5,a5,1024
20011838:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:638
      format++;
2001183c:	f7042783          	lw	a5,-144(s0)
20011840:	0785                	addi	a5,a5,1
20011842:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:639
      if (_is_digit(*format)) {
20011846:	f7042783          	lw	a5,-144(s0)
2001184a:	0007c783          	lbu	a5,0(a5)
2001184e:	853e                	mv	a0,a5
20011850:	b87fe0ef          	jal	ra,200103d6 <_is_digit>
20011854:	87aa                	mv	a5,a0
20011856:	cb89                	beqz	a5,20011868 <_vsnprintf+0x228>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:640
        precision = _atoi(&format);
20011858:	f7040793          	addi	a5,s0,-144
2001185c:	853e                	mv	a0,a5
2001185e:	bb1fe0ef          	jal	ra,2001040e <_atoi>
20011862:	fca42223          	sw	a0,-60(s0)
20011866:	a835                	j	200118a2 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:642
      }
      else if (*format == '*') {
20011868:	f7042783          	lw	a5,-144(s0)
2001186c:	0007c703          	lbu	a4,0(a5)
20011870:	02a00793          	li	a5,42
20011874:	02f71763          	bne	a4,a5,200118a2 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:643
        const int prec = (int)va_arg(va, int);
20011878:	f6c42783          	lw	a5,-148(s0)
2001187c:	00478713          	addi	a4,a5,4
20011880:	f6e42623          	sw	a4,-148(s0)
20011884:	439c                	lw	a5,0(a5)
20011886:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:644
        precision = prec > 0 ? (unsigned int)prec : 0U;
2001188a:	fa442783          	lw	a5,-92(s0)
2001188e:	0007d363          	bgez	a5,20011894 <_vsnprintf+0x254>
20011892:	4781                	li	a5,0
20011894:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:645
        format++;
20011898:	f7042783          	lw	a5,-144(s0)
2001189c:	0785                	addi	a5,a5,1
2001189e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:650
      }
    }

    // evaluate length field
    switch (*format) {
200118a2:	f7042783          	lw	a5,-144(s0)
200118a6:	0007c783          	lbu	a5,0(a5)
200118aa:	f9878793          	addi	a5,a5,-104
200118ae:	4749                	li	a4,18
200118b0:	0cf76d63          	bltu	a4,a5,2001198a <_vsnprintf+0x34a>
200118b4:	00279713          	slli	a4,a5,0x2
200118b8:	200197b7          	lui	a5,0x20019
200118bc:	85478793          	addi	a5,a5,-1964 # 20018854 <_exit+0x124>
200118c0:	97ba                	add	a5,a5,a4
200118c2:	439c                	lw	a5,0(a5)
200118c4:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:652
      case 'l' :
        flags |= FLAGS_LONG;
200118c6:	fcc42783          	lw	a5,-52(s0)
200118ca:	1007e793          	ori	a5,a5,256
200118ce:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:653
        format++;
200118d2:	f7042783          	lw	a5,-144(s0)
200118d6:	0785                	addi	a5,a5,1
200118d8:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:654
        if (*format == 'l') {
200118dc:	f7042783          	lw	a5,-144(s0)
200118e0:	0007c703          	lbu	a4,0(a5)
200118e4:	06c00793          	li	a5,108
200118e8:	0af71363          	bne	a4,a5,2001198e <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:655
          flags |= FLAGS_LONG_LONG;
200118ec:	fcc42783          	lw	a5,-52(s0)
200118f0:	2007e793          	ori	a5,a5,512
200118f4:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:656
          format++;
200118f8:	f7042783          	lw	a5,-144(s0)
200118fc:	0785                	addi	a5,a5,1
200118fe:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:658
        }
        break;
20011902:	a071                	j	2001198e <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:660
      case 'h' :
        flags |= FLAGS_SHORT;
20011904:	fcc42783          	lw	a5,-52(s0)
20011908:	0807e793          	ori	a5,a5,128
2001190c:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:661
        format++;
20011910:	f7042783          	lw	a5,-144(s0)
20011914:	0785                	addi	a5,a5,1
20011916:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:662
        if (*format == 'h') {
2001191a:	f7042783          	lw	a5,-144(s0)
2001191e:	0007c703          	lbu	a4,0(a5)
20011922:	06800793          	li	a5,104
20011926:	06f71663          	bne	a4,a5,20011992 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:663
          flags |= FLAGS_CHAR;
2001192a:	fcc42783          	lw	a5,-52(s0)
2001192e:	0407e793          	ori	a5,a5,64
20011932:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:664
          format++;
20011936:	f7042783          	lw	a5,-144(s0)
2001193a:	0785                	addi	a5,a5,1
2001193c:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:666
        }
        break;
20011940:	a889                	j	20011992 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:669
#if defined(PRINTF_SUPPORT_PTRDIFF_T)
      case 't' :
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
20011942:	fcc42783          	lw	a5,-52(s0)
20011946:	1007e793          	ori	a5,a5,256
2001194a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:670
        format++;
2001194e:	f7042783          	lw	a5,-144(s0)
20011952:	0785                	addi	a5,a5,1
20011954:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:671
        break;
20011958:	a835                	j	20011994 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:674
#endif
      case 'j' :
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
2001195a:	fcc42783          	lw	a5,-52(s0)
2001195e:	2007e793          	ori	a5,a5,512
20011962:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:675
        format++;
20011966:	f7042783          	lw	a5,-144(s0)
2001196a:	0785                	addi	a5,a5,1
2001196c:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:676
        break;
20011970:	a015                	j	20011994 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:678
      case 'z' :
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
20011972:	fcc42783          	lw	a5,-52(s0)
20011976:	1007e793          	ori	a5,a5,256
2001197a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:679
        format++;
2001197e:	f7042783          	lw	a5,-144(s0)
20011982:	0785                	addi	a5,a5,1
20011984:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:680
        break;
20011988:	a031                	j	20011994 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:682
      default :
        break;
2001198a:	0001                	nop
2001198c:	a021                	j	20011994 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:658
        break;
2001198e:	0001                	nop
20011990:	a011                	j	20011994 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:666
        break;
20011992:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:686
    }

    // evaluate specifier
    switch (*format) {
20011994:	f7042783          	lw	a5,-144(s0)
20011998:	0007c783          	lbu	a5,0(a5)
2001199c:	fdb78793          	addi	a5,a5,-37
200119a0:	05300713          	li	a4,83
200119a4:	78f76863          	bltu	a4,a5,20012134 <_vsnprintf+0xaf4>
200119a8:	00279713          	slli	a4,a5,0x2
200119ac:	200197b7          	lui	a5,0x20019
200119b0:	8a078793          	addi	a5,a5,-1888 # 200188a0 <_exit+0x170>
200119b4:	97ba                	add	a5,a5,a4
200119b6:	439c                	lw	a5,0(a5)
200119b8:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:696
      case 'X' :
      case 'o' :
      case 'b' : {
        // set the base
        unsigned int base;
        if (*format == 'x' || *format == 'X') {
200119ba:	f7042783          	lw	a5,-144(s0)
200119be:	0007c703          	lbu	a4,0(a5)
200119c2:	07800793          	li	a5,120
200119c6:	00f70a63          	beq	a4,a5,200119da <_vsnprintf+0x39a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:696 (discriminator 1)
200119ca:	f7042783          	lw	a5,-144(s0)
200119ce:	0007c703          	lbu	a4,0(a5)
200119d2:	05800793          	li	a5,88
200119d6:	00f71663          	bne	a4,a5,200119e2 <_vsnprintf+0x3a2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:697
          base = 16U;
200119da:	47c1                	li	a5,16
200119dc:	faf42c23          	sw	a5,-72(s0)
200119e0:	a089                	j	20011a22 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:699
        }
        else if (*format == 'o') {
200119e2:	f7042783          	lw	a5,-144(s0)
200119e6:	0007c703          	lbu	a4,0(a5)
200119ea:	06f00793          	li	a5,111
200119ee:	00f71663          	bne	a4,a5,200119fa <_vsnprintf+0x3ba>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:700
          base =  8U;
200119f2:	47a1                	li	a5,8
200119f4:	faf42c23          	sw	a5,-72(s0)
200119f8:	a02d                	j	20011a22 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:702
        }
        else if (*format == 'b') {
200119fa:	f7042783          	lw	a5,-144(s0)
200119fe:	0007c703          	lbu	a4,0(a5)
20011a02:	06200793          	li	a5,98
20011a06:	00f71663          	bne	a4,a5,20011a12 <_vsnprintf+0x3d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:703
          base =  2U;
20011a0a:	4789                	li	a5,2
20011a0c:	faf42c23          	sw	a5,-72(s0)
20011a10:	a809                	j	20011a22 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:706
        }
        else {
          base = 10U;
20011a12:	47a9                	li	a5,10
20011a14:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:707
          flags &= ~FLAGS_HASH;   // no hash for dec format
20011a18:	fcc42783          	lw	a5,-52(s0)
20011a1c:	9bbd                	andi	a5,a5,-17
20011a1e:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:710
        }
        // uppercase
        if (*format == 'X') {
20011a22:	f7042783          	lw	a5,-144(s0)
20011a26:	0007c703          	lbu	a4,0(a5)
20011a2a:	05800793          	li	a5,88
20011a2e:	00f71863          	bne	a4,a5,20011a3e <_vsnprintf+0x3fe>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:711
          flags |= FLAGS_UPPERCASE;
20011a32:	fcc42783          	lw	a5,-52(s0)
20011a36:	0207e793          	ori	a5,a5,32
20011a3a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:715
        }

        // no plus or space flag for u, x, X, o, b
        if ((*format != 'i') && (*format != 'd')) {
20011a3e:	f7042783          	lw	a5,-144(s0)
20011a42:	0007c703          	lbu	a4,0(a5)
20011a46:	06900793          	li	a5,105
20011a4a:	00f70f63          	beq	a4,a5,20011a68 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:715 (discriminator 1)
20011a4e:	f7042783          	lw	a5,-144(s0)
20011a52:	0007c703          	lbu	a4,0(a5)
20011a56:	06400793          	li	a5,100
20011a5a:	00f70763          	beq	a4,a5,20011a68 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:716
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
20011a5e:	fcc42783          	lw	a5,-52(s0)
20011a62:	9bcd                	andi	a5,a5,-13
20011a64:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:720
        }

        // ignore '0' flag when precision is given
        if (flags & FLAGS_PRECISION) {
20011a68:	fcc42783          	lw	a5,-52(s0)
20011a6c:	4007f793          	andi	a5,a5,1024
20011a70:	c791                	beqz	a5,20011a7c <_vsnprintf+0x43c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:721
          flags &= ~FLAGS_ZEROPAD;
20011a72:	fcc42783          	lw	a5,-52(s0)
20011a76:	9bf9                	andi	a5,a5,-2
20011a78:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:725
        }

        // convert the integer
        if ((*format == 'i') || (*format == 'd')) {
20011a7c:	f7042783          	lw	a5,-144(s0)
20011a80:	0007c703          	lbu	a4,0(a5)
20011a84:	06900793          	li	a5,105
20011a88:	00f70a63          	beq	a4,a5,20011a9c <_vsnprintf+0x45c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:725 (discriminator 1)
20011a8c:	f7042783          	lw	a5,-144(s0)
20011a90:	0007c703          	lbu	a4,0(a5)
20011a94:	06400793          	li	a5,100
20011a98:	1af71b63          	bne	a4,a5,20011c4e <_vsnprintf+0x60e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:727
          // signed
          if (flags & FLAGS_LONG_LONG) {
20011a9c:	fcc42783          	lw	a5,-52(s0)
20011aa0:	2007f793          	andi	a5,a5,512
20011aa4:	c3d5                	beqz	a5,20011b48 <_vsnprintf+0x508>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:729
#if defined(PRINTF_SUPPORT_LONG_LONG)
            const long long value = va_arg(va, long long);
20011aa6:	f6c42783          	lw	a5,-148(s0)
20011aaa:	079d                	addi	a5,a5,7
20011aac:	9be1                	andi	a5,a5,-8
20011aae:	00878713          	addi	a4,a5,8
20011ab2:	f6e42623          	sw	a4,-148(s0)
20011ab6:	0047a803          	lw	a6,4(a5)
20011aba:	439c                	lw	a5,0(a5)
20011abc:	f8f42c23          	sw	a5,-104(s0)
20011ac0:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:730
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20011ac4:	f9c42783          	lw	a5,-100(s0)
20011ac8:	41f7d913          	srai	s2,a5,0x1f
20011acc:	f9c42783          	lw	a5,-100(s0)
20011ad0:	41f7d993          	srai	s3,a5,0x1f
20011ad4:	f9842783          	lw	a5,-104(s0)
20011ad8:	0127ca33          	xor	s4,a5,s2
20011adc:	f9c42783          	lw	a5,-100(s0)
20011ae0:	0137cab3          	xor	s5,a5,s3
20011ae4:	412a07b3          	sub	a5,s4,s2
20011ae8:	873e                	mv	a4,a5
20011aea:	00ea3733          	sltu	a4,s4,a4
20011aee:	413a8833          	sub	a6,s5,s3
20011af2:	40e80733          	sub	a4,a6,a4
20011af6:	883a                	mv	a6,a4
20011af8:	8a3e                	mv	s4,a5
20011afa:	8ac2                	mv	s5,a6
20011afc:	8652                	mv	a2,s4
20011afe:	86d6                	mv	a3,s5
20011b00:	f9c42783          	lw	a5,-100(s0)
20011b04:	83fd                	srli	a5,a5,0x1f
20011b06:	0ff7f713          	andi	a4,a5,255
20011b0a:	fb842783          	lw	a5,-72(s0)
20011b0e:	8b3e                	mv	s6,a5
20011b10:	4b81                	li	s7,0
20011b12:	fcc42783          	lw	a5,-52(s0)
20011b16:	c63e                	sw	a5,12(sp)
20011b18:	fc842783          	lw	a5,-56(s0)
20011b1c:	c43e                	sw	a5,8(sp)
20011b1e:	fc442783          	lw	a5,-60(s0)
20011b22:	c23e                	sw	a5,4(sp)
20011b24:	c05e                	sw	s7,0(sp)
20011b26:	88da                	mv	a7,s6
20011b28:	883a                	mv	a6,a4
20011b2a:	8732                	mv	a4,a2
20011b2c:	87b6                	mv	a5,a3
20011b2e:	f7442683          	lw	a3,-140(s0)
20011b32:	fbc42603          	lw	a2,-68(s0)
20011b36:	f7842583          	lw	a1,-136(s0)
20011b3a:	f7c42503          	lw	a0,-132(s0)
20011b3e:	d99fe0ef          	jal	ra,200108d6 <_ntoa_long_long>
20011b42:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20011b46:	a425                	j	20011d6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:733
#endif
          }
          else if (flags & FLAGS_LONG) {
20011b48:	fcc42783          	lw	a5,-52(s0)
20011b4c:	1007f793          	andi	a5,a5,256
20011b50:	c3ad                	beqz	a5,20011bb2 <_vsnprintf+0x572>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:734
            const long value = va_arg(va, long);
20011b52:	f6c42783          	lw	a5,-148(s0)
20011b56:	00478713          	addi	a4,a5,4
20011b5a:	f6e42623          	sw	a4,-148(s0)
20011b5e:	439c                	lw	a5,0(a5)
20011b60:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:735
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20011b64:	f9442783          	lw	a5,-108(s0)
20011b68:	41f7d713          	srai	a4,a5,0x1f
20011b6c:	f9442783          	lw	a5,-108(s0)
20011b70:	8fb9                	xor	a5,a5,a4
20011b72:	8f99                	sub	a5,a5,a4
20011b74:	86be                	mv	a3,a5
20011b76:	f9442783          	lw	a5,-108(s0)
20011b7a:	83fd                	srli	a5,a5,0x1f
20011b7c:	0ff7f713          	andi	a4,a5,255
20011b80:	fcc42783          	lw	a5,-52(s0)
20011b84:	c23e                	sw	a5,4(sp)
20011b86:	fc842783          	lw	a5,-56(s0)
20011b8a:	c03e                	sw	a5,0(sp)
20011b8c:	fc442883          	lw	a7,-60(s0)
20011b90:	fb842803          	lw	a6,-72(s0)
20011b94:	87ba                	mv	a5,a4
20011b96:	8736                	mv	a4,a3
20011b98:	f7442683          	lw	a3,-140(s0)
20011b9c:	fbc42603          	lw	a2,-68(s0)
20011ba0:	f7842583          	lw	a1,-136(s0)
20011ba4:	f7c42503          	lw	a0,-132(s0)
20011ba8:	c2bfe0ef          	jal	ra,200107d2 <_ntoa_long>
20011bac:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20011bb0:	aa7d                	j	20011d6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:738
          }
          else {
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
20011bb2:	fcc42783          	lw	a5,-52(s0)
20011bb6:	0407f793          	andi	a5,a5,64
20011bba:	cb99                	beqz	a5,20011bd0 <_vsnprintf+0x590>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:738 (discriminator 1)
20011bbc:	f6c42783          	lw	a5,-148(s0)
20011bc0:	00478713          	addi	a4,a5,4
20011bc4:	f6e42623          	sw	a4,-148(s0)
20011bc8:	439c                	lw	a5,0(a5)
20011bca:	0ff7f793          	andi	a5,a5,255
20011bce:	a03d                	j	20011bfc <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:738 (discriminator 2)
20011bd0:	fcc42783          	lw	a5,-52(s0)
20011bd4:	0807f793          	andi	a5,a5,128
20011bd8:	cb99                	beqz	a5,20011bee <_vsnprintf+0x5ae>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:738 (discriminator 4)
20011bda:	f6c42783          	lw	a5,-148(s0)
20011bde:	00478713          	addi	a4,a5,4
20011be2:	f6e42623          	sw	a4,-148(s0)
20011be6:	439c                	lw	a5,0(a5)
20011be8:	07c2                	slli	a5,a5,0x10
20011bea:	87c1                	srai	a5,a5,0x10
20011bec:	a801                	j	20011bfc <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:738 (discriminator 5)
20011bee:	f6c42783          	lw	a5,-148(s0)
20011bf2:	00478713          	addi	a4,a5,4
20011bf6:	f6e42623          	sw	a4,-148(s0)
20011bfa:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:738 (discriminator 8)
20011bfc:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:739 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20011c00:	f9042783          	lw	a5,-112(s0)
20011c04:	41f7d713          	srai	a4,a5,0x1f
20011c08:	f9042783          	lw	a5,-112(s0)
20011c0c:	8fb9                	xor	a5,a5,a4
20011c0e:	8f99                	sub	a5,a5,a4
20011c10:	86be                	mv	a3,a5
20011c12:	f9042783          	lw	a5,-112(s0)
20011c16:	83fd                	srli	a5,a5,0x1f
20011c18:	0ff7f713          	andi	a4,a5,255
20011c1c:	fcc42783          	lw	a5,-52(s0)
20011c20:	c23e                	sw	a5,4(sp)
20011c22:	fc842783          	lw	a5,-56(s0)
20011c26:	c03e                	sw	a5,0(sp)
20011c28:	fc442883          	lw	a7,-60(s0)
20011c2c:	fb842803          	lw	a6,-72(s0)
20011c30:	87ba                	mv	a5,a4
20011c32:	8736                	mv	a4,a3
20011c34:	f7442683          	lw	a3,-140(s0)
20011c38:	fbc42603          	lw	a2,-68(s0)
20011c3c:	f7842583          	lw	a1,-136(s0)
20011c40:	f7c42503          	lw	a0,-132(s0)
20011c44:	b8ffe0ef          	jal	ra,200107d2 <_ntoa_long>
20011c48:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:727 (discriminator 8)
          if (flags & FLAGS_LONG_LONG) {
20011c4c:	a20d                	j	20011d6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:744
          }
        }
        else {
          // unsigned
          if (flags & FLAGS_LONG_LONG) {
20011c4e:	fcc42783          	lw	a5,-52(s0)
20011c52:	2007f793          	andi	a5,a5,512
20011c56:	cba1                	beqz	a5,20011ca6 <_vsnprintf+0x666>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:746
#if defined(PRINTF_SUPPORT_LONG_LONG)
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
20011c58:	f6c42783          	lw	a5,-148(s0)
20011c5c:	079d                	addi	a5,a5,7
20011c5e:	9be1                	andi	a5,a5,-8
20011c60:	00878713          	addi	a4,a5,8
20011c64:	f6e42623          	sw	a4,-148(s0)
20011c68:	4398                	lw	a4,0(a5)
20011c6a:	43dc                	lw	a5,4(a5)
20011c6c:	fb842683          	lw	a3,-72(s0)
20011c70:	8c36                	mv	s8,a3
20011c72:	4c81                	li	s9,0
20011c74:	fcc42683          	lw	a3,-52(s0)
20011c78:	c636                	sw	a3,12(sp)
20011c7a:	fc842683          	lw	a3,-56(s0)
20011c7e:	c436                	sw	a3,8(sp)
20011c80:	fc442683          	lw	a3,-60(s0)
20011c84:	c236                	sw	a3,4(sp)
20011c86:	c066                	sw	s9,0(sp)
20011c88:	88e2                	mv	a7,s8
20011c8a:	4801                	li	a6,0
20011c8c:	f7442683          	lw	a3,-140(s0)
20011c90:	fbc42603          	lw	a2,-68(s0)
20011c94:	f7842583          	lw	a1,-136(s0)
20011c98:	f7c42503          	lw	a0,-132(s0)
20011c9c:	c3bfe0ef          	jal	ra,200108d6 <_ntoa_long_long>
20011ca0:	faa42e23          	sw	a0,-68(s0)
20011ca4:	a0e9                	j	20011d6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:749
#endif
          }
          else if (flags & FLAGS_LONG) {
20011ca6:	fcc42783          	lw	a5,-52(s0)
20011caa:	1007f793          	andi	a5,a5,256
20011cae:	c3a1                	beqz	a5,20011cee <_vsnprintf+0x6ae>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:750
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
20011cb0:	f6c42783          	lw	a5,-148(s0)
20011cb4:	00478713          	addi	a4,a5,4
20011cb8:	f6e42623          	sw	a4,-148(s0)
20011cbc:	4398                	lw	a4,0(a5)
20011cbe:	fcc42783          	lw	a5,-52(s0)
20011cc2:	c23e                	sw	a5,4(sp)
20011cc4:	fc842783          	lw	a5,-56(s0)
20011cc8:	c03e                	sw	a5,0(sp)
20011cca:	fc442883          	lw	a7,-60(s0)
20011cce:	fb842803          	lw	a6,-72(s0)
20011cd2:	4781                	li	a5,0
20011cd4:	f7442683          	lw	a3,-140(s0)
20011cd8:	fbc42603          	lw	a2,-68(s0)
20011cdc:	f7842583          	lw	a1,-136(s0)
20011ce0:	f7c42503          	lw	a0,-132(s0)
20011ce4:	aeffe0ef          	jal	ra,200107d2 <_ntoa_long>
20011ce8:	faa42e23          	sw	a0,-68(s0)
20011cec:	a049                	j	20011d6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:753
          }
          else {
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
20011cee:	fcc42783          	lw	a5,-52(s0)
20011cf2:	0407f793          	andi	a5,a5,64
20011cf6:	cb99                	beqz	a5,20011d0c <_vsnprintf+0x6cc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:753 (discriminator 1)
20011cf8:	f6c42783          	lw	a5,-148(s0)
20011cfc:	00478713          	addi	a4,a5,4
20011d00:	f6e42623          	sw	a4,-148(s0)
20011d04:	439c                	lw	a5,0(a5)
20011d06:	0ff7f793          	andi	a5,a5,255
20011d0a:	a03d                	j	20011d38 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:753 (discriminator 2)
20011d0c:	fcc42783          	lw	a5,-52(s0)
20011d10:	0807f793          	andi	a5,a5,128
20011d14:	cb99                	beqz	a5,20011d2a <_vsnprintf+0x6ea>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:753 (discriminator 4)
20011d16:	f6c42783          	lw	a5,-148(s0)
20011d1a:	00478713          	addi	a4,a5,4
20011d1e:	f6e42623          	sw	a4,-148(s0)
20011d22:	439c                	lw	a5,0(a5)
20011d24:	07c2                	slli	a5,a5,0x10
20011d26:	83c1                	srli	a5,a5,0x10
20011d28:	a801                	j	20011d38 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:753 (discriminator 5)
20011d2a:	f6c42783          	lw	a5,-148(s0)
20011d2e:	00478713          	addi	a4,a5,4
20011d32:	f6e42623          	sw	a4,-148(s0)
20011d36:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:753 (discriminator 8)
20011d38:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:754 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
20011d3c:	fcc42783          	lw	a5,-52(s0)
20011d40:	c23e                	sw	a5,4(sp)
20011d42:	fc842783          	lw	a5,-56(s0)
20011d46:	c03e                	sw	a5,0(sp)
20011d48:	fc442883          	lw	a7,-60(s0)
20011d4c:	fb842803          	lw	a6,-72(s0)
20011d50:	4781                	li	a5,0
20011d52:	fa042703          	lw	a4,-96(s0)
20011d56:	f7442683          	lw	a3,-140(s0)
20011d5a:	fbc42603          	lw	a2,-68(s0)
20011d5e:	f7842583          	lw	a1,-136(s0)
20011d62:	f7c42503          	lw	a0,-132(s0)
20011d66:	a6dfe0ef          	jal	ra,200107d2 <_ntoa_long>
20011d6a:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:757
          }
        }
        format++;
20011d6e:	f7042783          	lw	a5,-144(s0)
20011d72:	0785                	addi	a5,a5,1
20011d74:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:758
        break;
20011d78:	a6f5                	j	20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:763
      }
#if defined(PRINTF_SUPPORT_FLOAT)
      case 'f' :
      case 'F' :
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
20011d7a:	f7042783          	lw	a5,-144(s0)
20011d7e:	0007c703          	lbu	a4,0(a5)
20011d82:	04600793          	li	a5,70
20011d86:	00f71863          	bne	a4,a5,20011d96 <_vsnprintf+0x756>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:763 (discriminator 1)
20011d8a:	fcc42783          	lw	a5,-52(s0)
20011d8e:	0207e793          	ori	a5,a5,32
20011d92:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:764
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20011d96:	f6c42783          	lw	a5,-148(s0)
20011d9a:	079d                	addi	a5,a5,7
20011d9c:	9be1                	andi	a5,a5,-8
20011d9e:	00878713          	addi	a4,a5,8
20011da2:	f6e42623          	sw	a4,-148(s0)
20011da6:	4398                	lw	a4,0(a5)
20011da8:	43dc                	lw	a5,4(a5)
20011daa:	fcc42683          	lw	a3,-52(s0)
20011dae:	c036                	sw	a3,0(sp)
20011db0:	fc842883          	lw	a7,-56(s0)
20011db4:	fc442803          	lw	a6,-60(s0)
20011db8:	f7442683          	lw	a3,-140(s0)
20011dbc:	fbc42603          	lw	a2,-68(s0)
20011dc0:	f7842583          	lw	a1,-136(s0)
20011dc4:	f7c42503          	lw	a0,-132(s0)
20011dc8:	c3dfe0ef          	jal	ra,20010a04 <_ftoa>
20011dcc:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:765
        format++;
20011dd0:	f7042783          	lw	a5,-144(s0)
20011dd4:	0785                	addi	a5,a5,1
20011dd6:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:766
        break;
20011dda:	a669                	j	20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:772
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
      case 'e':
      case 'E':
      case 'g':
      case 'G':
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
20011ddc:	f7042783          	lw	a5,-144(s0)
20011de0:	0007c703          	lbu	a4,0(a5)
20011de4:	06700793          	li	a5,103
20011de8:	00f70a63          	beq	a4,a5,20011dfc <_vsnprintf+0x7bc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:772 (discriminator 2)
20011dec:	f7042783          	lw	a5,-144(s0)
20011df0:	0007c703          	lbu	a4,0(a5)
20011df4:	04700793          	li	a5,71
20011df8:	00f71a63          	bne	a4,a5,20011e0c <_vsnprintf+0x7cc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:772 (discriminator 3)
20011dfc:	fcc42703          	lw	a4,-52(s0)
20011e00:	6785                	lui	a5,0x1
20011e02:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011e06:	8fd9                	or	a5,a5,a4
20011e08:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:773
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
20011e0c:	f7042783          	lw	a5,-144(s0)
20011e10:	0007c703          	lbu	a4,0(a5)
20011e14:	04500793          	li	a5,69
20011e18:	00f70a63          	beq	a4,a5,20011e2c <_vsnprintf+0x7ec>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:773 (discriminator 2)
20011e1c:	f7042783          	lw	a5,-144(s0)
20011e20:	0007c703          	lbu	a4,0(a5)
20011e24:	04700793          	li	a5,71
20011e28:	00f71863          	bne	a4,a5,20011e38 <_vsnprintf+0x7f8>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:773 (discriminator 3)
20011e2c:	fcc42783          	lw	a5,-52(s0)
20011e30:	0207e793          	ori	a5,a5,32
20011e34:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:774
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20011e38:	f6c42783          	lw	a5,-148(s0)
20011e3c:	079d                	addi	a5,a5,7
20011e3e:	9be1                	andi	a5,a5,-8
20011e40:	00878713          	addi	a4,a5,8
20011e44:	f6e42623          	sw	a4,-148(s0)
20011e48:	4398                	lw	a4,0(a5)
20011e4a:	43dc                	lw	a5,4(a5)
20011e4c:	fcc42683          	lw	a3,-52(s0)
20011e50:	c036                	sw	a3,0(sp)
20011e52:	fc842883          	lw	a7,-56(s0)
20011e56:	fc442803          	lw	a6,-60(s0)
20011e5a:	f7442683          	lw	a3,-140(s0)
20011e5e:	fbc42603          	lw	a2,-68(s0)
20011e62:	f7842583          	lw	a1,-136(s0)
20011e66:	f7c42503          	lw	a0,-132(s0)
20011e6a:	96aff0ef          	jal	ra,20010fd4 <_etoa>
20011e6e:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:775
        format++;
20011e72:	f7042783          	lw	a5,-144(s0)
20011e76:	0785                	addi	a5,a5,1
20011e78:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:776
        break;
20011e7c:	a4e5                	j	20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:780
#endif  // PRINTF_SUPPORT_EXPONENTIAL
#endif  // PRINTF_SUPPORT_FLOAT
      case 'c' : {
        unsigned int l = 1U;
20011e7e:	4785                	li	a5,1
20011e80:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:782
        // pre padding
        if (!(flags & FLAGS_LEFT)) {
20011e84:	fcc42783          	lw	a5,-52(s0)
20011e88:	8b89                	andi	a5,a5,2
20011e8a:	ef85                	bnez	a5,20011ec2 <_vsnprintf+0x882>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:783
          while (l++ < width) {
20011e8c:	a00d                	j	20011eae <_vsnprintf+0x86e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:784
            out(' ', buffer, idx++, maxlen);
20011e8e:	fbc42783          	lw	a5,-68(s0)
20011e92:	00178713          	addi	a4,a5,1
20011e96:	fae42e23          	sw	a4,-68(s0)
20011e9a:	f7c42703          	lw	a4,-132(s0)
20011e9e:	f7442683          	lw	a3,-140(s0)
20011ea2:	863e                	mv	a2,a5
20011ea4:	f7842583          	lw	a1,-136(s0)
20011ea8:	02000513          	li	a0,32
20011eac:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:783
          while (l++ < width) {
20011eae:	fb442783          	lw	a5,-76(s0)
20011eb2:	00178713          	addi	a4,a5,1
20011eb6:	fae42a23          	sw	a4,-76(s0)
20011eba:	fc842703          	lw	a4,-56(s0)
20011ebe:	fce7e8e3          	bltu	a5,a4,20011e8e <_vsnprintf+0x84e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:788
          }
        }
        // char output
        out((char)va_arg(va, int), buffer, idx++, maxlen);
20011ec2:	f6c42783          	lw	a5,-148(s0)
20011ec6:	00478713          	addi	a4,a5,4
20011eca:	f6e42623          	sw	a4,-148(s0)
20011ece:	439c                	lw	a5,0(a5)
20011ed0:	0ff7f513          	andi	a0,a5,255
20011ed4:	fbc42783          	lw	a5,-68(s0)
20011ed8:	00178713          	addi	a4,a5,1
20011edc:	fae42e23          	sw	a4,-68(s0)
20011ee0:	f7c42703          	lw	a4,-132(s0)
20011ee4:	f7442683          	lw	a3,-140(s0)
20011ee8:	863e                	mv	a2,a5
20011eea:	f7842583          	lw	a1,-136(s0)
20011eee:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:790
        // post padding
        if (flags & FLAGS_LEFT) {
20011ef0:	fcc42783          	lw	a5,-52(s0)
20011ef4:	8b89                	andi	a5,a5,2
20011ef6:	cf85                	beqz	a5,20011f2e <_vsnprintf+0x8ee>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:791
          while (l++ < width) {
20011ef8:	a00d                	j	20011f1a <_vsnprintf+0x8da>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:792
            out(' ', buffer, idx++, maxlen);
20011efa:	fbc42783          	lw	a5,-68(s0)
20011efe:	00178713          	addi	a4,a5,1
20011f02:	fae42e23          	sw	a4,-68(s0)
20011f06:	f7c42703          	lw	a4,-132(s0)
20011f0a:	f7442683          	lw	a3,-140(s0)
20011f0e:	863e                	mv	a2,a5
20011f10:	f7842583          	lw	a1,-136(s0)
20011f14:	02000513          	li	a0,32
20011f18:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:791
          while (l++ < width) {
20011f1a:	fb442783          	lw	a5,-76(s0)
20011f1e:	00178713          	addi	a4,a5,1
20011f22:	fae42a23          	sw	a4,-76(s0)
20011f26:	fc842703          	lw	a4,-56(s0)
20011f2a:	fce7e8e3          	bltu	a5,a4,20011efa <_vsnprintf+0x8ba>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:795
          }
        }
        format++;
20011f2e:	f7042783          	lw	a5,-144(s0)
20011f32:	0785                	addi	a5,a5,1
20011f34:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:796
        break;
20011f38:	a435                	j	20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:800
      }

      case 's' : {
        const char* p = va_arg(va, char*);
20011f3a:	f6c42783          	lw	a5,-148(s0)
20011f3e:	00478713          	addi	a4,a5,4
20011f42:	f6e42623          	sw	a4,-148(s0)
20011f46:	439c                	lw	a5,0(a5)
20011f48:	faf42823          	sw	a5,-80(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:801
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
20011f4c:	fc442783          	lw	a5,-60(s0)
20011f50:	c781                	beqz	a5,20011f58 <_vsnprintf+0x918>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:801 (discriminator 1)
20011f52:	fc442783          	lw	a5,-60(s0)
20011f56:	a011                	j	20011f5a <_vsnprintf+0x91a>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:801 (discriminator 2)
20011f58:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:801 (discriminator 4)
20011f5a:	85be                	mv	a1,a5
20011f5c:	fb042503          	lw	a0,-80(s0)
20011f60:	c28fe0ef          	jal	ra,20010388 <_strnlen_s>
20011f64:	faa42623          	sw	a0,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:803 (discriminator 4)
        // pre padding
        if (flags & FLAGS_PRECISION) {
20011f68:	fcc42783          	lw	a5,-52(s0)
20011f6c:	4007f793          	andi	a5,a5,1024
20011f70:	cb91                	beqz	a5,20011f84 <_vsnprintf+0x944>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:804
          l = (l < precision ? l : precision);
20011f72:	fac42703          	lw	a4,-84(s0)
20011f76:	fc442783          	lw	a5,-60(s0)
20011f7a:	00f77363          	bgeu	a4,a5,20011f80 <_vsnprintf+0x940>
20011f7e:	87ba                	mv	a5,a4
20011f80:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:806
        }
        if (!(flags & FLAGS_LEFT)) {
20011f84:	fcc42783          	lw	a5,-52(s0)
20011f88:	8b89                	andi	a5,a5,2
20011f8a:	e3bd                	bnez	a5,20011ff0 <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:807
          while (l++ < width) {
20011f8c:	a00d                	j	20011fae <_vsnprintf+0x96e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:808
            out(' ', buffer, idx++, maxlen);
20011f8e:	fbc42783          	lw	a5,-68(s0)
20011f92:	00178713          	addi	a4,a5,1
20011f96:	fae42e23          	sw	a4,-68(s0)
20011f9a:	f7c42703          	lw	a4,-132(s0)
20011f9e:	f7442683          	lw	a3,-140(s0)
20011fa2:	863e                	mv	a2,a5
20011fa4:	f7842583          	lw	a1,-136(s0)
20011fa8:	02000513          	li	a0,32
20011fac:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:807
          while (l++ < width) {
20011fae:	fac42783          	lw	a5,-84(s0)
20011fb2:	00178713          	addi	a4,a5,1
20011fb6:	fae42623          	sw	a4,-84(s0)
20011fba:	fc842703          	lw	a4,-56(s0)
20011fbe:	fce7e8e3          	bltu	a5,a4,20011f8e <_vsnprintf+0x94e>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:812
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20011fc2:	a03d                	j	20011ff0 <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:813
          out(*(p++), buffer, idx++, maxlen);
20011fc4:	fb042783          	lw	a5,-80(s0)
20011fc8:	00178713          	addi	a4,a5,1
20011fcc:	fae42823          	sw	a4,-80(s0)
20011fd0:	0007c503          	lbu	a0,0(a5)
20011fd4:	fbc42783          	lw	a5,-68(s0)
20011fd8:	00178713          	addi	a4,a5,1
20011fdc:	fae42e23          	sw	a4,-68(s0)
20011fe0:	f7c42703          	lw	a4,-132(s0)
20011fe4:	f7442683          	lw	a3,-140(s0)
20011fe8:	863e                	mv	a2,a5
20011fea:	f7842583          	lw	a1,-136(s0)
20011fee:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:812
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20011ff0:	fb042783          	lw	a5,-80(s0)
20011ff4:	0007c783          	lbu	a5,0(a5)
20011ff8:	cf89                	beqz	a5,20012012 <_vsnprintf+0x9d2>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:812 (discriminator 1)
20011ffa:	fcc42783          	lw	a5,-52(s0)
20011ffe:	4007f793          	andi	a5,a5,1024
20012002:	d3e9                	beqz	a5,20011fc4 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:812 (discriminator 2)
20012004:	fc442783          	lw	a5,-60(s0)
20012008:	fff78713          	addi	a4,a5,-1
2001200c:	fce42223          	sw	a4,-60(s0)
20012010:	fbd5                	bnez	a5,20011fc4 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:816
        }
        // post padding
        if (flags & FLAGS_LEFT) {
20012012:	fcc42783          	lw	a5,-52(s0)
20012016:	8b89                	andi	a5,a5,2
20012018:	cf85                	beqz	a5,20012050 <_vsnprintf+0xa10>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:817
          while (l++ < width) {
2001201a:	a00d                	j	2001203c <_vsnprintf+0x9fc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:818
            out(' ', buffer, idx++, maxlen);
2001201c:	fbc42783          	lw	a5,-68(s0)
20012020:	00178713          	addi	a4,a5,1
20012024:	fae42e23          	sw	a4,-68(s0)
20012028:	f7c42703          	lw	a4,-132(s0)
2001202c:	f7442683          	lw	a3,-140(s0)
20012030:	863e                	mv	a2,a5
20012032:	f7842583          	lw	a1,-136(s0)
20012036:	02000513          	li	a0,32
2001203a:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:817
          while (l++ < width) {
2001203c:	fac42783          	lw	a5,-84(s0)
20012040:	00178713          	addi	a4,a5,1
20012044:	fae42623          	sw	a4,-84(s0)
20012048:	fc842703          	lw	a4,-56(s0)
2001204c:	fce7e8e3          	bltu	a5,a4,2001201c <_vsnprintf+0x9dc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:821
          }
        }
        format++;
20012050:	f7042783          	lw	a5,-144(s0)
20012054:	0785                	addi	a5,a5,1
20012056:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:822
        break;
2001205a:	a229                	j	20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:826
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
2001205c:	47a1                	li	a5,8
2001205e:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:827
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
20012062:	fcc42783          	lw	a5,-52(s0)
20012066:	0217e793          	ori	a5,a5,33
2001206a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:829
#if defined(PRINTF_SUPPORT_LONG_LONG)
        const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
2001206e:	f80407a3          	sb	zero,-113(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:830
        if (is_ll) {
20012072:	f8f44783          	lbu	a5,-113(s0)
20012076:	c7a9                	beqz	a5,200120c0 <_vsnprintf+0xa80>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:831
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
20012078:	f6c42783          	lw	a5,-148(s0)
2001207c:	00478713          	addi	a4,a5,4
20012080:	f6e42623          	sw	a4,-148(s0)
20012084:	439c                	lw	a5,0(a5)
20012086:	8d3e                	mv	s10,a5
20012088:	4d81                	li	s11,0
2001208a:	fcc42783          	lw	a5,-52(s0)
2001208e:	c63e                	sw	a5,12(sp)
20012090:	fc842783          	lw	a5,-56(s0)
20012094:	c43e                	sw	a5,8(sp)
20012096:	fc442783          	lw	a5,-60(s0)
2001209a:	c23e                	sw	a5,4(sp)
2001209c:	c002                	sw	zero,0(sp)
2001209e:	48c1                	li	a7,16
200120a0:	4801                	li	a6,0
200120a2:	876a                	mv	a4,s10
200120a4:	87ee                	mv	a5,s11
200120a6:	f7442683          	lw	a3,-140(s0)
200120aa:	fbc42603          	lw	a2,-68(s0)
200120ae:	f7842583          	lw	a1,-136(s0)
200120b2:	f7c42503          	lw	a0,-132(s0)
200120b6:	821fe0ef          	jal	ra,200108d6 <_ntoa_long_long>
200120ba:	faa42e23          	sw	a0,-68(s0)
200120be:	a83d                	j	200120fc <_vsnprintf+0xabc>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:835
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
200120c0:	f6c42783          	lw	a5,-148(s0)
200120c4:	00478713          	addi	a4,a5,4
200120c8:	f6e42623          	sw	a4,-148(s0)
200120cc:	439c                	lw	a5,0(a5)
200120ce:	873e                	mv	a4,a5
200120d0:	fcc42783          	lw	a5,-52(s0)
200120d4:	c23e                	sw	a5,4(sp)
200120d6:	fc842783          	lw	a5,-56(s0)
200120da:	c03e                	sw	a5,0(sp)
200120dc:	fc442883          	lw	a7,-60(s0)
200120e0:	4841                	li	a6,16
200120e2:	4781                	li	a5,0
200120e4:	f7442683          	lw	a3,-140(s0)
200120e8:	fbc42603          	lw	a2,-68(s0)
200120ec:	f7842583          	lw	a1,-136(s0)
200120f0:	f7c42503          	lw	a0,-132(s0)
200120f4:	edefe0ef          	jal	ra,200107d2 <_ntoa_long>
200120f8:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:839
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
200120fc:	f7042783          	lw	a5,-144(s0)
20012100:	0785                	addi	a5,a5,1
20012102:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:840
        break;
20012106:	a8b9                	j	20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:844
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
20012108:	fbc42783          	lw	a5,-68(s0)
2001210c:	00178713          	addi	a4,a5,1
20012110:	fae42e23          	sw	a4,-68(s0)
20012114:	f7c42703          	lw	a4,-132(s0)
20012118:	f7442683          	lw	a3,-140(s0)
2001211c:	863e                	mv	a2,a5
2001211e:	f7842583          	lw	a1,-136(s0)
20012122:	02500513          	li	a0,37
20012126:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:845
        format++;
20012128:	f7042783          	lw	a5,-144(s0)
2001212c:	0785                	addi	a5,a5,1
2001212e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:846
        break;
20012132:	a80d                	j	20012164 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:849

      default :
        out(*format, buffer, idx++, maxlen);
20012134:	f7042783          	lw	a5,-144(s0)
20012138:	0007c503          	lbu	a0,0(a5)
2001213c:	fbc42783          	lw	a5,-68(s0)
20012140:	00178713          	addi	a4,a5,1
20012144:	fae42e23          	sw	a4,-68(s0)
20012148:	f7c42703          	lw	a4,-132(s0)
2001214c:	f7442683          	lw	a3,-140(s0)
20012150:	863e                	mv	a2,a5
20012152:	f7842583          	lw	a1,-136(s0)
20012156:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:850
        format++;
20012158:	f7042783          	lw	a5,-144(s0)
2001215c:	0785                	addi	a5,a5,1
2001215e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:851
        break;
20012162:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:590
  while (*format)
20012164:	f7042783          	lw	a5,-144(s0)
20012168:	0007c783          	lbu	a5,0(a5)
2001216c:	d2079063          	bnez	a5,2001168c <_vsnprintf+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:856
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
20012170:	fbc42703          	lw	a4,-68(s0)
20012174:	f7442783          	lw	a5,-140(s0)
20012178:	00f76663          	bltu	a4,a5,20012184 <_vsnprintf+0xb44>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:856 (discriminator 1)
2001217c:	f7442783          	lw	a5,-140(s0)
20012180:	17fd                	addi	a5,a5,-1
20012182:	a019                	j	20012188 <_vsnprintf+0xb48>
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:856 (discriminator 2)
20012184:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:856 (discriminator 4)
20012188:	f7c42703          	lw	a4,-132(s0)
2001218c:	f7442683          	lw	a3,-140(s0)
20012190:	863e                	mv	a2,a5
20012192:	f7842583          	lw	a1,-136(s0)
20012196:	4501                	li	a0,0
20012198:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:859 (discriminator 4)

  // return written chars without terminating \0
  return (int)idx;
2001219a:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:860 (discriminator 4)
}
2001219e:	853e                	mv	a0,a5
200121a0:	50ba                	lw	ra,172(sp)
200121a2:	542a                	lw	s0,168(sp)
200121a4:	591a                	lw	s2,164(sp)
200121a6:	598a                	lw	s3,160(sp)
200121a8:	4a7a                	lw	s4,156(sp)
200121aa:	4aea                	lw	s5,152(sp)
200121ac:	4b5a                	lw	s6,148(sp)
200121ae:	4bca                	lw	s7,144(sp)
200121b0:	4c3a                	lw	s8,140(sp)
200121b2:	4caa                	lw	s9,136(sp)
200121b4:	4d1a                	lw	s10,132(sp)
200121b6:	4d8a                	lw	s11,128(sp)
200121b8:	614d                	addi	sp,sp,176
200121ba:	8082                	ret

200121bc <printf_>:
printf_():
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:866


///////////////////////////////////////////////////////////////////////////////

int printf_(const char* format, ...)
{
200121bc:	715d                	addi	sp,sp,-80
200121be:	d606                	sw	ra,44(sp)
200121c0:	d422                	sw	s0,40(sp)
200121c2:	1800                	addi	s0,sp,48
200121c4:	fca42e23          	sw	a0,-36(s0)
200121c8:	c04c                	sw	a1,4(s0)
200121ca:	c410                	sw	a2,8(s0)
200121cc:	c454                	sw	a3,12(s0)
200121ce:	c818                	sw	a4,16(s0)
200121d0:	c85c                	sw	a5,20(s0)
200121d2:	01042c23          	sw	a6,24(s0)
200121d6:	01142e23          	sw	a7,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:868
  va_list va;
  va_start(va, format);
200121da:	02040793          	addi	a5,s0,32
200121de:	1791                	addi	a5,a5,-28
200121e0:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:870
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
200121e4:	fe842703          	lw	a4,-24(s0)
200121e8:	fe440793          	addi	a5,s0,-28
200121ec:	fdc42683          	lw	a3,-36(s0)
200121f0:	567d                	li	a2,-1
200121f2:	85be                	mv	a1,a5
200121f4:	200107b7          	lui	a5,0x20010
200121f8:	35678513          	addi	a0,a5,854 # 20010356 <_out_char>
200121fc:	c44ff0ef          	jal	ra,20011640 <_vsnprintf>
20012200:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:872
  va_end(va);
  return ret;
20012204:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/AHashClean/printf.c:873
}
20012208:	853e                	mv	a0,a5
2001220a:	50b2                	lw	ra,44(sp)
2001220c:	5422                	lw	s0,40(sp)
2001220e:	6161                	addi	sp,sp,80
20012210:	8082                	ret

20012212 <write>:
write():
20012212:	5ffef797          	auipc	a5,0x5ffef
20012216:	04678793          	addi	a5,a5,70 # 80001258 <_impure_ptr>
2001221a:	86b2                	mv	a3,a2
2001221c:	862e                	mv	a2,a1
2001221e:	85aa                	mv	a1,a0
20012220:	4388                	lw	a0,0(a5)
20012222:	a009                	j	20012224 <_write_r>

20012224 <_write_r>:
_write_r():
20012224:	1141                	addi	sp,sp,-16
20012226:	c422                	sw	s0,8(sp)
20012228:	842a                	mv	s0,a0
2001222a:	852e                	mv	a0,a1
2001222c:	85b2                	mv	a1,a2
2001222e:	8636                	mv	a2,a3
20012230:	be01a823          	sw	zero,-1040(gp) # 80001648 <errno>
20012234:	c606                	sw	ra,12(sp)
20012236:	78f010ef          	jal	ra,200141c4 <_write>
2001223a:	57fd                	li	a5,-1
2001223c:	00f51763          	bne	a0,a5,2001224a <_write_r+0x26>
20012240:	bf018793          	addi	a5,gp,-1040 # 80001648 <errno>
20012244:	439c                	lw	a5,0(a5)
20012246:	c391                	beqz	a5,2001224a <_write_r+0x26>
20012248:	c01c                	sw	a5,0(s0)
2001224a:	40b2                	lw	ra,12(sp)
2001224c:	4422                	lw	s0,8(sp)
2001224e:	0141                	addi	sp,sp,16
20012250:	8082                	ret

20012252 <__udivdi3>:
__udivdi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
20012252:	87ae                	mv	a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20012254:	8832                	mv	a6,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20012256:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20012258:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
2001225a:	20069663          	bnez	a3,20012466 <__udivdi3+0x214>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
2001225e:	00007897          	auipc	a7,0x7
20012262:	85a88893          	addi	a7,a7,-1958 # 20018ab8 <__clz_tab>
20012266:	0ac5fe63          	bgeu	a1,a2,20012322 <__udivdi3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
2001226a:	6741                	lui	a4,0x10
2001226c:	0ae67463          	bgeu	a2,a4,20012314 <__udivdi3+0xc2>
20012270:	0ff00713          	li	a4,255
20012274:	00c73733          	sltu	a4,a4,a2
20012278:	070e                	slli	a4,a4,0x3
2001227a:	00e656b3          	srl	a3,a2,a4
2001227e:	98b6                	add	a7,a7,a3
20012280:	0008c683          	lbu	a3,0(a7)
20012284:	9736                	add	a4,a4,a3
20012286:	02000693          	li	a3,32
2001228a:	8e99                	sub	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
2001228c:	ca99                	beqz	a3,200122a2 <__udivdi3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2001228e:	00d797b3          	sll	a5,a5,a3
20012292:	00e55733          	srl	a4,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20012296:	00d61833          	sll	a6,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2001229a:	00f765b3          	or	a1,a4,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2001229e:	00d51333          	sll	t1,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
200122a2:	01085513          	srli	a0,a6,0x10
200122a6:	02a5f733          	remu	a4,a1,a0
200122aa:	01081613          	slli	a2,a6,0x10
200122ae:	8241                	srli	a2,a2,0x10
200122b0:	01035693          	srli	a3,t1,0x10
200122b4:	02a5d5b3          	divu	a1,a1,a0
200122b8:	0742                	slli	a4,a4,0x10
200122ba:	8ed9                	or	a3,a3,a4
200122bc:	02b607b3          	mul	a5,a2,a1
200122c0:	872e                	mv	a4,a1
200122c2:	00f6fc63          	bgeu	a3,a5,200122da <__udivdi3+0x88>
200122c6:	96c2                	add	a3,a3,a6
200122c8:	fff58713          	addi	a4,a1,-1
200122cc:	0106e763          	bltu	a3,a6,200122da <__udivdi3+0x88>
200122d0:	00f6f563          	bgeu	a3,a5,200122da <__udivdi3+0x88>
200122d4:	ffe58713          	addi	a4,a1,-2
200122d8:	96c2                	add	a3,a3,a6
200122da:	8e9d                	sub	a3,a3,a5
200122dc:	02a6f7b3          	remu	a5,a3,a0
200122e0:	0342                	slli	t1,t1,0x10
200122e2:	01035313          	srli	t1,t1,0x10
200122e6:	02a6d6b3          	divu	a3,a3,a0
200122ea:	07c2                	slli	a5,a5,0x10
200122ec:	0067e333          	or	t1,a5,t1
200122f0:	02d605b3          	mul	a1,a2,a3
200122f4:	8536                	mv	a0,a3
200122f6:	00b37b63          	bgeu	t1,a1,2001230c <__udivdi3+0xba>
200122fa:	9342                	add	t1,t1,a6
200122fc:	fff68513          	addi	a0,a3,-1
20012300:	01036663          	bltu	t1,a6,2001230c <__udivdi3+0xba>
20012304:	00b37463          	bgeu	t1,a1,2001230c <__udivdi3+0xba>
20012308:	ffe68513          	addi	a0,a3,-2
2001230c:	0742                	slli	a4,a4,0x10
2001230e:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20012310:	4581                	li	a1,0
20012312:	a84d                	j	200123c4 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20012314:	010006b7          	lui	a3,0x1000
20012318:	4741                	li	a4,16
2001231a:	f6d660e3          	bltu	a2,a3,2001227a <__udivdi3+0x28>
2001231e:	4761                	li	a4,24
20012320:	bfa9                	j	2001227a <__udivdi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20012322:	e601                	bnez	a2,2001232a <__udivdi3+0xd8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20012324:	4685                	li	a3,1
20012326:	02c6d833          	divu	a6,a3,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
2001232a:	66c1                	lui	a3,0x10
2001232c:	08d87e63          	bgeu	a6,a3,200123c8 <__udivdi3+0x176>
20012330:	0ff00693          	li	a3,255
20012334:	0106f363          	bgeu	a3,a6,2001233a <__udivdi3+0xe8>
20012338:	4721                	li	a4,8
2001233a:	00e856b3          	srl	a3,a6,a4
2001233e:	98b6                	add	a7,a7,a3
20012340:	0008c683          	lbu	a3,0(a7)
20012344:	96ba                	add	a3,a3,a4
20012346:	02000713          	li	a4,32
2001234a:	8f15                	sub	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
2001234c:	e749                	bnez	a4,200123d6 <__udivdi3+0x184>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
2001234e:	410787b3          	sub	a5,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
20012352:	4585                	li	a1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20012354:	01085613          	srli	a2,a6,0x10
20012358:	01081893          	slli	a7,a6,0x10
2001235c:	0108d893          	srli	a7,a7,0x10
20012360:	01035693          	srli	a3,t1,0x10
20012364:	02c7f733          	remu	a4,a5,a2
20012368:	02c7d7b3          	divu	a5,a5,a2
2001236c:	0742                	slli	a4,a4,0x10
2001236e:	8ed9                	or	a3,a3,a4
20012370:	02f88533          	mul	a0,a7,a5
20012374:	873e                	mv	a4,a5
20012376:	00a6fc63          	bgeu	a3,a0,2001238e <__udivdi3+0x13c>
2001237a:	96c2                	add	a3,a3,a6
2001237c:	fff78713          	addi	a4,a5,-1
20012380:	0106e763          	bltu	a3,a6,2001238e <__udivdi3+0x13c>
20012384:	00a6f563          	bgeu	a3,a0,2001238e <__udivdi3+0x13c>
20012388:	ffe78713          	addi	a4,a5,-2
2001238c:	96c2                	add	a3,a3,a6
2001238e:	8e89                	sub	a3,a3,a0
20012390:	02c6f7b3          	remu	a5,a3,a2
20012394:	0342                	slli	t1,t1,0x10
20012396:	01035313          	srli	t1,t1,0x10
2001239a:	02c6d6b3          	divu	a3,a3,a2
2001239e:	07c2                	slli	a5,a5,0x10
200123a0:	0067e333          	or	t1,a5,t1
200123a4:	02d888b3          	mul	a7,a7,a3
200123a8:	8536                	mv	a0,a3
200123aa:	01137b63          	bgeu	t1,a7,200123c0 <__udivdi3+0x16e>
200123ae:	9342                	add	t1,t1,a6
200123b0:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
200123b4:	01036663          	bltu	t1,a6,200123c0 <__udivdi3+0x16e>
200123b8:	01137463          	bgeu	t1,a7,200123c0 <__udivdi3+0x16e>
200123bc:	ffe68513          	addi	a0,a3,-2
200123c0:	0742                	slli	a4,a4,0x10
200123c2:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
200123c4:	853a                	mv	a0,a4
200123c6:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
200123c8:	010006b7          	lui	a3,0x1000
200123cc:	4741                	li	a4,16
200123ce:	f6d866e3          	bltu	a6,a3,2001233a <__udivdi3+0xe8>
200123d2:	4761                	li	a4,24
200123d4:	b79d                	j	2001233a <__udivdi3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
200123d6:	00e81833          	sll	a6,a6,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
200123da:	00d7d5b3          	srl	a1,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
200123de:	00e51333          	sll	t1,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
200123e2:	00d556b3          	srl	a3,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200123e6:	01085513          	srli	a0,a6,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
200123ea:	00e797b3          	sll	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200123ee:	02a5f733          	remu	a4,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
200123f2:	00f6e8b3          	or	a7,a3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200123f6:	01081793          	slli	a5,a6,0x10
200123fa:	83c1                	srli	a5,a5,0x10
200123fc:	0108d613          	srli	a2,a7,0x10
20012400:	02a5d5b3          	divu	a1,a1,a0
20012404:	0742                	slli	a4,a4,0x10
20012406:	8f51                	or	a4,a4,a2
20012408:	02b786b3          	mul	a3,a5,a1
2001240c:	862e                	mv	a2,a1
2001240e:	00d77c63          	bgeu	a4,a3,20012426 <__udivdi3+0x1d4>
20012412:	9742                	add	a4,a4,a6
20012414:	fff58613          	addi	a2,a1,-1
20012418:	01076763          	bltu	a4,a6,20012426 <__udivdi3+0x1d4>
2001241c:	00d77563          	bgeu	a4,a3,20012426 <__udivdi3+0x1d4>
20012420:	ffe58613          	addi	a2,a1,-2
20012424:	9742                	add	a4,a4,a6
20012426:	40d706b3          	sub	a3,a4,a3
2001242a:	02a6f733          	remu	a4,a3,a0
2001242e:	08c2                	slli	a7,a7,0x10
20012430:	0108d893          	srli	a7,a7,0x10
20012434:	02a6d6b3          	divu	a3,a3,a0
20012438:	0742                	slli	a4,a4,0x10
2001243a:	02d785b3          	mul	a1,a5,a3
2001243e:	011767b3          	or	a5,a4,a7
20012442:	8736                	mv	a4,a3
20012444:	00b7fc63          	bgeu	a5,a1,2001245c <__udivdi3+0x20a>
20012448:	97c2                	add	a5,a5,a6
2001244a:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
2001244e:	0107e763          	bltu	a5,a6,2001245c <__udivdi3+0x20a>
20012452:	00b7f563          	bgeu	a5,a1,2001245c <__udivdi3+0x20a>
20012456:	ffe68713          	addi	a4,a3,-2
2001245a:	97c2                	add	a5,a5,a6
2001245c:	8f8d                	sub	a5,a5,a1
2001245e:	01061593          	slli	a1,a2,0x10
20012462:	8dd9                	or	a1,a1,a4
20012464:	bdc5                	j	20012354 <__udivdi3+0x102>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20012466:	14d5e263          	bltu	a1,a3,200125aa <__udivdi3+0x358>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
2001246a:	6741                	lui	a4,0x10
2001246c:	02e6fe63          	bgeu	a3,a4,200124a8 <__udivdi3+0x256>
20012470:	0ff00813          	li	a6,255
20012474:	00d83733          	sltu	a4,a6,a3
20012478:	070e                	slli	a4,a4,0x3
2001247a:	00e6d833          	srl	a6,a3,a4
2001247e:	00006597          	auipc	a1,0x6
20012482:	63a58593          	addi	a1,a1,1594 # 20018ab8 <__clz_tab>
20012486:	95c2                	add	a1,a1,a6
20012488:	0005c803          	lbu	a6,0(a1)
2001248c:	02000593          	li	a1,32
20012490:	983a                	add	a6,a6,a4
20012492:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20012496:	e185                	bnez	a1,200124b6 <__udivdi3+0x264>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20012498:	4705                	li	a4,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
2001249a:	f2f6e5e3          	bltu	a3,a5,200123c4 <__udivdi3+0x172>
2001249e:	00c53533          	sltu	a0,a0,a2
200124a2:	00154713          	xori	a4,a0,1
200124a6:	bf39                	j	200123c4 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200124a8:	010005b7          	lui	a1,0x1000
200124ac:	4741                	li	a4,16
200124ae:	fcb6e6e3          	bltu	a3,a1,2001247a <__udivdi3+0x228>
200124b2:	4761                	li	a4,24
200124b4:	b7d9                	j	2001247a <__udivdi3+0x228>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
200124b6:	01065733          	srl	a4,a2,a6
200124ba:	00b696b3          	sll	a3,a3,a1
200124be:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200124c0:	0106de93          	srli	t4,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
200124c4:	0107d733          	srl	a4,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200124c8:	03d778b3          	remu	a7,a4,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
200124cc:	00b797b3          	sll	a5,a5,a1
200124d0:	01055833          	srl	a6,a0,a6
200124d4:	00f86333          	or	t1,a6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200124d8:	01069793          	slli	a5,a3,0x10
200124dc:	83c1                	srli	a5,a5,0x10
200124de:	01035813          	srli	a6,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
200124e2:	00b61633          	sll	a2,a2,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200124e6:	03d75733          	divu	a4,a4,t4
200124ea:	08c2                	slli	a7,a7,0x10
200124ec:	0108e833          	or	a6,a7,a6
200124f0:	02e78f33          	mul	t5,a5,a4
200124f4:	8e3a                	mv	t3,a4
200124f6:	01e87c63          	bgeu	a6,t5,2001250e <__udivdi3+0x2bc>
200124fa:	9836                	add	a6,a6,a3
200124fc:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
20012500:	00d86763          	bltu	a6,a3,2001250e <__udivdi3+0x2bc>
20012504:	01e87563          	bgeu	a6,t5,2001250e <__udivdi3+0x2bc>
20012508:	ffe70e13          	addi	t3,a4,-2
2001250c:	9836                	add	a6,a6,a3
2001250e:	41e80833          	sub	a6,a6,t5
20012512:	03d878b3          	remu	a7,a6,t4
20012516:	03d85833          	divu	a6,a6,t4
2001251a:	08c2                	slli	a7,a7,0x10
2001251c:	03078eb3          	mul	t4,a5,a6
20012520:	01031793          	slli	a5,t1,0x10
20012524:	83c1                	srli	a5,a5,0x10
20012526:	00f8e7b3          	or	a5,a7,a5
2001252a:	8742                	mv	a4,a6
2001252c:	01d7fc63          	bgeu	a5,t4,20012544 <__udivdi3+0x2f2>
20012530:	97b6                	add	a5,a5,a3
20012532:	fff80713          	addi	a4,a6,-1
20012536:	00d7e763          	bltu	a5,a3,20012544 <__udivdi3+0x2f2>
2001253a:	01d7f563          	bgeu	a5,t4,20012544 <__udivdi3+0x2f2>
2001253e:	ffe80713          	addi	a4,a6,-2
20012542:	97b6                	add	a5,a5,a3
20012544:	0e42                	slli	t3,t3,0x10
20012546:	41d787b3          	sub	a5,a5,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001254a:	6ec1                	lui	t4,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001254c:	00ee6733          	or	a4,t3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20012550:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
20012554:	01077333          	and	t1,a4,a6
20012558:	01075893          	srli	a7,a4,0x10
2001255c:	01067833          	and	a6,a2,a6
20012560:	8241                	srli	a2,a2,0x10
20012562:	03030e33          	mul	t3,t1,a6
20012566:	03088833          	mul	a6,a7,a6
2001256a:	010e5693          	srli	a3,t3,0x10
2001256e:	02c30333          	mul	t1,t1,a2
20012572:	9342                	add	t1,t1,a6
20012574:	969a                	add	a3,a3,t1
20012576:	02c888b3          	mul	a7,a7,a2
2001257a:	0106f363          	bgeu	a3,a6,20012580 <__udivdi3+0x32e>
2001257e:	98f6                	add	a7,a7,t4
20012580:	0106d613          	srli	a2,a3,0x10
20012584:	98b2                	add	a7,a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20012586:	0317e063          	bltu	a5,a7,200125a6 <__udivdi3+0x354>
2001258a:	d91793e3          	bne	a5,a7,20012310 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001258e:	67c1                	lui	a5,0x10
20012590:	17fd                	addi	a5,a5,-1
20012592:	8efd                	and	a3,a3,a5
20012594:	06c2                	slli	a3,a3,0x10
20012596:	00fe7e33          	and	t3,t3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
2001259a:	00b51533          	sll	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001259e:	96f2                	add	a3,a3,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
200125a0:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
200125a2:	e2d571e3          	bgeu	a0,a3,200123c4 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
200125a6:	177d                	addi	a4,a4,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
200125a8:	b3a5                	j	20012310 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
200125aa:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
200125ac:	4701                	li	a4,0
200125ae:	bd19                	j	200123c4 <__udivdi3+0x172>

200125b0 <__umoddi3>:
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
200125b0:	88b2                	mv	a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
200125b2:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
200125b4:	87aa                	mv	a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
200125b6:	882e                	mv	a6,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
200125b8:	1c069863          	bnez	a3,20012788 <__umoddi3+0x1d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
200125bc:	00006697          	auipc	a3,0x6
200125c0:	4fc68693          	addi	a3,a3,1276 # 20018ab8 <__clz_tab>
200125c4:	0ac5f863          	bgeu	a1,a2,20012674 <__umoddi3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
200125c8:	6341                	lui	t1,0x10
200125ca:	08667e63          	bgeu	a2,t1,20012666 <__umoddi3+0xb6>
200125ce:	0ff00313          	li	t1,255
200125d2:	00c37363          	bgeu	t1,a2,200125d8 <__umoddi3+0x28>
200125d6:	4721                	li	a4,8
200125d8:	00e65333          	srl	t1,a2,a4
200125dc:	969a                	add	a3,a3,t1
200125de:	0006ce03          	lbu	t3,0(a3)
200125e2:	02000313          	li	t1,32
200125e6:	9e3a                	add	t3,t3,a4
200125e8:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
200125ec:	00030c63          	beqz	t1,20012604 <__umoddi3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
200125f0:	006595b3          	sll	a1,a1,t1
200125f4:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
200125f8:	006618b3          	sll	a7,a2,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
200125fc:	00be6833          	or	a6,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20012600:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20012604:	0108d613          	srli	a2,a7,0x10
20012608:	02c87733          	remu	a4,a6,a2
2001260c:	01089513          	slli	a0,a7,0x10
20012610:	8141                	srli	a0,a0,0x10
20012612:	0107d693          	srli	a3,a5,0x10
20012616:	02c85833          	divu	a6,a6,a2
2001261a:	0742                	slli	a4,a4,0x10
2001261c:	8ed9                	or	a3,a3,a4
2001261e:	03050833          	mul	a6,a0,a6
20012622:	0106f863          	bgeu	a3,a6,20012632 <__umoddi3+0x82>
20012626:	96c6                	add	a3,a3,a7
20012628:	0116e563          	bltu	a3,a7,20012632 <__umoddi3+0x82>
2001262c:	0106f363          	bgeu	a3,a6,20012632 <__umoddi3+0x82>
20012630:	96c6                	add	a3,a3,a7
20012632:	410686b3          	sub	a3,a3,a6
20012636:	02c6f733          	remu	a4,a3,a2
2001263a:	07c2                	slli	a5,a5,0x10
2001263c:	83c1                	srli	a5,a5,0x10
2001263e:	02c6d6b3          	divu	a3,a3,a2
20012642:	02d506b3          	mul	a3,a0,a3
20012646:	01071513          	slli	a0,a4,0x10
2001264a:	8fc9                	or	a5,a5,a0
2001264c:	00d7f863          	bgeu	a5,a3,2001265c <__umoddi3+0xac>
20012650:	97c6                	add	a5,a5,a7
20012652:	0117e563          	bltu	a5,a7,2001265c <__umoddi3+0xac>
20012656:	00d7f363          	bgeu	a5,a3,2001265c <__umoddi3+0xac>
2001265a:	97c6                	add	a5,a5,a7
2001265c:	8f95                	sub	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
2001265e:	0067d533          	srl	a0,a5,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
20012662:	4581                	li	a1,0
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
20012664:	8082                	ret
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20012666:	01000337          	lui	t1,0x1000
2001266a:	4741                	li	a4,16
2001266c:	f66666e3          	bltu	a2,t1,200125d8 <__umoddi3+0x28>
20012670:	4761                	li	a4,24
20012672:	b79d                	j	200125d8 <__umoddi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20012674:	e601                	bnez	a2,2001267c <__umoddi3+0xcc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20012676:	4605                	li	a2,1
20012678:	031658b3          	divu	a7,a2,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
2001267c:	6641                	lui	a2,0x10
2001267e:	08c8f363          	bgeu	a7,a2,20012704 <__umoddi3+0x154>
20012682:	0ff00613          	li	a2,255
20012686:	01167363          	bgeu	a2,a7,2001268c <__umoddi3+0xdc>
2001268a:	4721                	li	a4,8
2001268c:	00e8d633          	srl	a2,a7,a4
20012690:	96b2                	add	a3,a3,a2
20012692:	0006ce03          	lbu	t3,0(a3)
20012696:	02000313          	li	t1,32
2001269a:	9e3a                	add	t3,t3,a4
2001269c:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
200126a0:	06031963          	bnez	t1,20012712 <__umoddi3+0x162>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
200126a4:	411585b3          	sub	a1,a1,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
200126a8:	0108d713          	srli	a4,a7,0x10
200126ac:	01089513          	slli	a0,a7,0x10
200126b0:	8141                	srli	a0,a0,0x10
200126b2:	0107d613          	srli	a2,a5,0x10
200126b6:	02e5f6b3          	remu	a3,a1,a4
200126ba:	02e5d5b3          	divu	a1,a1,a4
200126be:	06c2                	slli	a3,a3,0x10
200126c0:	8ed1                	or	a3,a3,a2
200126c2:	02b505b3          	mul	a1,a0,a1
200126c6:	00b6f863          	bgeu	a3,a1,200126d6 <__umoddi3+0x126>
200126ca:	96c6                	add	a3,a3,a7
200126cc:	0116e563          	bltu	a3,a7,200126d6 <__umoddi3+0x126>
200126d0:	00b6f363          	bgeu	a3,a1,200126d6 <__umoddi3+0x126>
200126d4:	96c6                	add	a3,a3,a7
200126d6:	40b685b3          	sub	a1,a3,a1
200126da:	02e5f6b3          	remu	a3,a1,a4
200126de:	07c2                	slli	a5,a5,0x10
200126e0:	83c1                	srli	a5,a5,0x10
200126e2:	02e5d5b3          	divu	a1,a1,a4
200126e6:	02b505b3          	mul	a1,a0,a1
200126ea:	01069513          	slli	a0,a3,0x10
200126ee:	8fc9                	or	a5,a5,a0
200126f0:	00b7f863          	bgeu	a5,a1,20012700 <__umoddi3+0x150>
200126f4:	97c6                	add	a5,a5,a7
200126f6:	0117e563          	bltu	a5,a7,20012700 <__umoddi3+0x150>
200126fa:	00b7f363          	bgeu	a5,a1,20012700 <__umoddi3+0x150>
200126fe:	97c6                	add	a5,a5,a7
20012700:	8f8d                	sub	a5,a5,a1
20012702:	bfb1                	j	2001265e <__umoddi3+0xae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20012704:	01000637          	lui	a2,0x1000
20012708:	4741                	li	a4,16
2001270a:	f8c8e1e3          	bltu	a7,a2,2001268c <__umoddi3+0xdc>
2001270e:	4761                	li	a4,24
20012710:	bfb5                	j	2001268c <__umoddi3+0xdc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20012712:	006898b3          	sll	a7,a7,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20012716:	01c5d733          	srl	a4,a1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
2001271a:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001271e:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20012722:	0108d513          	srli	a0,a7,0x10
20012726:	02a776b3          	remu	a3,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001272a:	006595b3          	sll	a1,a1,t1
2001272e:	00be6e33          	or	t3,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20012732:	01089593          	slli	a1,a7,0x10
20012736:	81c1                	srli	a1,a1,0x10
20012738:	010e5613          	srli	a2,t3,0x10
2001273c:	02a75733          	divu	a4,a4,a0
20012740:	06c2                	slli	a3,a3,0x10
20012742:	8ed1                	or	a3,a3,a2
20012744:	02e58733          	mul	a4,a1,a4
20012748:	00e6f863          	bgeu	a3,a4,20012758 <__umoddi3+0x1a8>
2001274c:	96c6                	add	a3,a3,a7
2001274e:	0116e563          	bltu	a3,a7,20012758 <__umoddi3+0x1a8>
20012752:	00e6f363          	bgeu	a3,a4,20012758 <__umoddi3+0x1a8>
20012756:	96c6                	add	a3,a3,a7
20012758:	40e68633          	sub	a2,a3,a4
2001275c:	02a676b3          	remu	a3,a2,a0
20012760:	0e42                	slli	t3,t3,0x10
20012762:	010e5e13          	srli	t3,t3,0x10
20012766:	02a65633          	divu	a2,a2,a0
2001276a:	06c2                	slli	a3,a3,0x10
2001276c:	02c58633          	mul	a2,a1,a2
20012770:	01c6e5b3          	or	a1,a3,t3
20012774:	00c5f863          	bgeu	a1,a2,20012784 <__umoddi3+0x1d4>
20012778:	95c6                	add	a1,a1,a7
2001277a:	0115e563          	bltu	a1,a7,20012784 <__umoddi3+0x1d4>
2001277e:	00c5f363          	bgeu	a1,a2,20012784 <__umoddi3+0x1d4>
20012782:	95c6                	add	a1,a1,a7
20012784:	8d91                	sub	a1,a1,a2
20012786:	b70d                	j	200126a8 <__umoddi3+0xf8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20012788:	ecd5eee3          	bltu	a1,a3,20012664 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
2001278c:	6741                	lui	a4,0x10
2001278e:	04e6f563          	bgeu	a3,a4,200127d8 <__umoddi3+0x228>
20012792:	0ff00e93          	li	t4,255
20012796:	00deb733          	sltu	a4,t4,a3
2001279a:	070e                	slli	a4,a4,0x3
2001279c:	00e6d333          	srl	t1,a3,a4
200127a0:	00006897          	auipc	a7,0x6
200127a4:	31888893          	addi	a7,a7,792 # 20018ab8 <__clz_tab>
200127a8:	989a                	add	a7,a7,t1
200127aa:	0008ce83          	lbu	t4,0(a7)
200127ae:	02000e13          	li	t3,32
200127b2:	9eba                	add	t4,t4,a4
200127b4:	41de0e33          	sub	t3,t3,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
200127b8:	020e1763          	bnez	t3,200127e6 <__umoddi3+0x236>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
200127bc:	00b6e463          	bltu	a3,a1,200127c4 <__umoddi3+0x214>
200127c0:	00c56963          	bltu	a0,a2,200127d2 <__umoddi3+0x222>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
200127c4:	40c507b3          	sub	a5,a0,a2
200127c8:	8d95                	sub	a1,a1,a3
200127ca:	00f53533          	sltu	a0,a0,a5
200127ce:	40a58833          	sub	a6,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
200127d2:	853e                	mv	a0,a5
200127d4:	85c2                	mv	a1,a6
200127d6:	b579                	j	20012664 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200127d8:	010008b7          	lui	a7,0x1000
200127dc:	4741                	li	a4,16
200127de:	fb16efe3          	bltu	a3,a7,2001279c <__umoddi3+0x1ec>
200127e2:	4761                	li	a4,24
200127e4:	bf65                	j	2001279c <__umoddi3+0x1ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
200127e6:	01d65733          	srl	a4,a2,t4
200127ea:	01c696b3          	sll	a3,a3,t3
200127ee:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200127f0:	0106d813          	srli	a6,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
200127f4:	01d5d733          	srl	a4,a1,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200127f8:	03077333          	remu	t1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
200127fc:	01c595b3          	sll	a1,a1,t3
20012800:	01d557b3          	srl	a5,a0,t4
20012804:	8fcd                	or	a5,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20012806:	01069593          	slli	a1,a3,0x10
2001280a:	81c1                	srli	a1,a1,0x10
2001280c:	0107d893          	srli	a7,a5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20012810:	01c61633          	sll	a2,a2,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20012814:	01c51533          	sll	a0,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20012818:	03075733          	divu	a4,a4,a6
2001281c:	0342                	slli	t1,t1,0x10
2001281e:	011368b3          	or	a7,t1,a7
20012822:	02e58f33          	mul	t5,a1,a4
20012826:	833a                	mv	t1,a4
20012828:	01e8fc63          	bgeu	a7,t5,20012840 <__umoddi3+0x290>
2001282c:	98b6                	add	a7,a7,a3
2001282e:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
20012832:	00d8e763          	bltu	a7,a3,20012840 <__umoddi3+0x290>
20012836:	01e8f563          	bgeu	a7,t5,20012840 <__umoddi3+0x290>
2001283a:	ffe70313          	addi	t1,a4,-2
2001283e:	98b6                	add	a7,a7,a3
20012840:	41e888b3          	sub	a7,a7,t5
20012844:	0308ff33          	remu	t5,a7,a6
20012848:	0308d8b3          	divu	a7,a7,a6
2001284c:	0f42                	slli	t5,t5,0x10
2001284e:	03158833          	mul	a6,a1,a7
20012852:	01079593          	slli	a1,a5,0x10
20012856:	81c1                	srli	a1,a1,0x10
20012858:	00bf65b3          	or	a1,t5,a1
2001285c:	87c6                	mv	a5,a7
2001285e:	0105fc63          	bgeu	a1,a6,20012876 <__umoddi3+0x2c6>
20012862:	95b6                	add	a1,a1,a3
20012864:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
20012868:	00d5e763          	bltu	a1,a3,20012876 <__umoddi3+0x2c6>
2001286c:	0105f563          	bgeu	a1,a6,20012876 <__umoddi3+0x2c6>
20012870:	ffe88793          	addi	a5,a7,-2
20012874:	95b6                	add	a1,a1,a3
20012876:	0342                	slli	t1,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20012878:	6f41                	lui	t5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001287a:	00f36333          	or	t1,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001287e:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
20012882:	00f378b3          	and	a7,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20012886:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001288a:	01035313          	srli	t1,t1,0x10
2001288e:	01065813          	srli	a6,a2,0x10
20012892:	8ff1                	and	a5,a5,a2
20012894:	02f88733          	mul	a4,a7,a5
20012898:	02f307b3          	mul	a5,t1,a5
2001289c:	030888b3          	mul	a7,a7,a6
200128a0:	03030333          	mul	t1,t1,a6
200128a4:	98be                	add	a7,a7,a5
200128a6:	01075813          	srli	a6,a4,0x10
200128aa:	9846                	add	a6,a6,a7
200128ac:	00f87363          	bgeu	a6,a5,200128b2 <__umoddi3+0x302>
200128b0:	937a                	add	t1,t1,t5
200128b2:	01085793          	srli	a5,a6,0x10
200128b6:	933e                	add	t1,t1,a5
200128b8:	67c1                	lui	a5,0x10
200128ba:	17fd                	addi	a5,a5,-1
200128bc:	00f87833          	and	a6,a6,a5
200128c0:	0842                	slli	a6,a6,0x10
200128c2:	8f7d                	and	a4,a4,a5
200128c4:	9742                	add	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
200128c6:	0065e663          	bltu	a1,t1,200128d2 <__umoddi3+0x322>
200128ca:	00659c63          	bne	a1,t1,200128e2 <__umoddi3+0x332>
200128ce:	00e57a63          	bgeu	a0,a4,200128e2 <__umoddi3+0x332>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
200128d2:	40c70633          	sub	a2,a4,a2
200128d6:	00c73733          	sltu	a4,a4,a2
200128da:	9736                	add	a4,a4,a3
200128dc:	40e30333          	sub	t1,t1,a4
200128e0:	8732                	mv	a4,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
200128e2:	40e50733          	sub	a4,a0,a4
200128e6:	00e53533          	sltu	a0,a0,a4
200128ea:	406585b3          	sub	a1,a1,t1
200128ee:	8d89                	sub	a1,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
200128f0:	01d597b3          	sll	a5,a1,t4
200128f4:	01c75733          	srl	a4,a4,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
200128f8:	00e7e533          	or	a0,a5,a4
200128fc:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
20012900:	b395                	j	20012664 <__umoddi3+0xb4>

20012902 <__adddf3>:
__adddf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20012902:	00100837          	lui	a6,0x100
20012906:	187d                	addi	a6,a6,-1
20012908:	00b878b3          	and	a7,a6,a1
2001290c:	088e                	slli	a7,a7,0x3
2001290e:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20012912:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20012914:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012918:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2001291c:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012920:	0146d893          	srli	a7,a3,0x14
20012924:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20012926:	ca26                	sw	s1,20(sp)
20012928:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2001292a:	7ff77493          	andi	s1,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2001292e:	7ff8f893          	andi	a7,a7,2047
20012932:	01d65713          	srli	a4,a2,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20012936:	ce06                	sw	ra,28(sp)
20012938:	cc22                	sw	s0,24(sp)
2001293a:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2001293c:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012940:	82fd                	srli	a3,a3,0x1f
20012942:	01076733          	or	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20012946:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012948:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
2001294a:	41148833          	sub	a6,s1,a7
2001294e:	22d91663          	bne	s2,a3,20012b7a <__adddf3+0x278>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 7)
20012952:	0f005163          	blez	a6,20012a34 <__adddf3+0x132>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 9)
20012956:	02089863          	bnez	a7,20012986 <__adddf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 11)
2001295a:	00c766b3          	or	a3,a4,a2
2001295e:	56068763          	beqz	a3,20012ecc <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 14)
20012962:	fff80593          	addi	a1,a6,-1 # fffff <__heap_size+0xff7ff>
20012966:	e989                	bnez	a1,20012978 <__adddf3+0x76>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 23)
20012968:	962a                	add	a2,a2,a0
2001296a:	00a63533          	sltu	a0,a2,a0
2001296e:	97ba                	add	a5,a5,a4
20012970:	97aa                	add	a5,a5,a0
20012972:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 80)
20012974:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
20012976:	a8b1                	j	200129d2 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 24)
20012978:	7ff00693          	li	a3,2047
2001297c:	00d81d63          	bne	a6,a3,20012996 <__adddf3+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20012980:	7ff00493          	li	s1,2047
20012984:	aa79                	j	20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 12)
20012986:	7ff00693          	li	a3,2047
2001298a:	18d48c63          	beq	s1,a3,20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 38)
2001298e:	008006b7          	lui	a3,0x800
20012992:	8f55                	or	a4,a4,a3
20012994:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 47)
20012996:	03800693          	li	a3,56
2001299a:	08b6c963          	blt	a3,a1,20012a2c <__adddf3+0x12a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 48)
2001299e:	46fd                	li	a3,31
200129a0:	06b6c063          	blt	a3,a1,20012a00 <__adddf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 50)
200129a4:	02000813          	li	a6,32
200129a8:	40b80833          	sub	a6,a6,a1
200129ac:	010716b3          	sll	a3,a4,a6
200129b0:	00b658b3          	srl	a7,a2,a1
200129b4:	01061633          	sll	a2,a2,a6
200129b8:	0116e6b3          	or	a3,a3,a7
200129bc:	00c03633          	snez	a2,a2
200129c0:	8e55                	or	a2,a2,a3
200129c2:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 64)
200129c6:	962a                	add	a2,a2,a0
200129c8:	973e                	add	a4,a4,a5
200129ca:	00a637b3          	sltu	a5,a2,a0
200129ce:	97ba                	add	a5,a5,a4
200129d0:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 122)
200129d2:	00879713          	slli	a4,a5,0x8
200129d6:	14075663          	bgez	a4,20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 182)
200129da:	0485                	addi	s1,s1,1
200129dc:	7ff00713          	li	a4,2047
200129e0:	48e48563          	beq	s1,a4,20012e6a <__adddf3+0x568>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
200129e4:	ff8006b7          	lui	a3,0xff800
200129e8:	16fd                	addi	a3,a3,-1
200129ea:	8efd                	and	a3,a3,a5
200129ec:	00155593          	srli	a1,a0,0x1
200129f0:	8905                	andi	a0,a0,1
200129f2:	01f69793          	slli	a5,a3,0x1f
200129f6:	8d4d                	or	a0,a0,a1
200129f8:	8d5d                	or	a0,a0,a5
200129fa:	0016d793          	srli	a5,a3,0x1
200129fe:	a215                	j	20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 51)
20012a00:	fe058693          	addi	a3,a1,-32 # ffffe0 <__heap_size+0xfff7e0>
20012a04:	02000893          	li	a7,32
20012a08:	00d756b3          	srl	a3,a4,a3
20012a0c:	4801                	li	a6,0
20012a0e:	01158863          	beq	a1,a7,20012a1e <__adddf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 58)
20012a12:	04000813          	li	a6,64
20012a16:	40b805b3          	sub	a1,a6,a1
20012a1a:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 61)
20012a1e:	00c86633          	or	a2,a6,a2
20012a22:	00c03633          	snez	a2,a2
20012a26:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 49)
20012a28:	4701                	li	a4,0
20012a2a:	bf71                	j	200129c6 <__adddf3+0xc4>
20012a2c:	8e59                	or	a2,a2,a4
20012a2e:	00c03633          	snez	a2,a2
20012a32:	bfdd                	j	20012a28 <__adddf3+0x126>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 10)
20012a34:	0a080b63          	beqz	a6,20012aea <__adddf3+0x1e8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 66)
20012a38:	409885b3          	sub	a1,a7,s1
20012a3c:	e48d                	bnez	s1,20012a66 <__adddf3+0x164>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 68)
20012a3e:	00a7e6b3          	or	a3,a5,a0
20012a42:	40068b63          	beqz	a3,20012e58 <__adddf3+0x556>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 71)
20012a46:	fff58693          	addi	a3,a1,-1
20012a4a:	e699                	bnez	a3,20012a58 <__adddf3+0x156>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
20012a4c:	9532                	add	a0,a0,a2
20012a4e:	97ba                	add	a5,a5,a4
20012a50:	00c53633          	sltu	a2,a0,a2
20012a54:	97b2                	add	a5,a5,a2
20012a56:	bf39                	j	20012974 <__adddf3+0x72>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 81)
20012a58:	7ff00813          	li	a6,2047
20012a5c:	01059d63          	bne	a1,a6,20012a76 <__adddf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012a60:	87ba                	mv	a5,a4
20012a62:	8532                	mv	a0,a2
20012a64:	bf31                	j	20012980 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 69)
20012a66:	7ff00693          	li	a3,2047
20012a6a:	fed88be3          	beq	a7,a3,20012a60 <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 95)
20012a6e:	008006b7          	lui	a3,0x800
20012a72:	8fd5                	or	a5,a5,a3
20012a74:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 104)
20012a76:	03800593          	li	a1,56
20012a7a:	06d5c463          	blt	a1,a3,20012ae2 <__adddf3+0x1e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 105)
20012a7e:	45fd                	li	a1,31
20012a80:	02d5cb63          	blt	a1,a3,20012ab6 <__adddf3+0x1b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 107)
20012a84:	02000813          	li	a6,32
20012a88:	40d80833          	sub	a6,a6,a3
20012a8c:	00d55333          	srl	t1,a0,a3
20012a90:	010795b3          	sll	a1,a5,a6
20012a94:	01051533          	sll	a0,a0,a6
20012a98:	0065e5b3          	or	a1,a1,t1
20012a9c:	00a03533          	snez	a0,a0
20012aa0:	8d4d                	or	a0,a0,a1
20012aa2:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 121)
20012aa6:	9532                	add	a0,a0,a2
20012aa8:	00e687b3          	add	a5,a3,a4
20012aac:	00c53633          	sltu	a2,a0,a2
20012ab0:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 121)
20012ab2:	84c6                	mv	s1,a7
20012ab4:	bf39                	j	200129d2 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 108)
20012ab6:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20012aba:	02000313          	li	t1,32
20012abe:	00b7d5b3          	srl	a1,a5,a1
20012ac2:	4801                	li	a6,0
20012ac4:	00668863          	beq	a3,t1,20012ad4 <__adddf3+0x1d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 115)
20012ac8:	04000813          	li	a6,64
20012acc:	40d806b3          	sub	a3,a6,a3
20012ad0:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 118)
20012ad4:	00a86533          	or	a0,a6,a0
20012ad8:	00a03533          	snez	a0,a0
20012adc:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 106)
20012ade:	4681                	li	a3,0
20012ae0:	b7d9                	j	20012aa6 <__adddf3+0x1a4>
20012ae2:	8d5d                	or	a0,a0,a5
20012ae4:	00a03533          	snez	a0,a0
20012ae8:	bfdd                	j	20012ade <__adddf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 67)
20012aea:	00148693          	addi	a3,s1,1
20012aee:	7fe6f593          	andi	a1,a3,2046
20012af2:	e1bd                	bnez	a1,20012b58 <__adddf3+0x256>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 123)
20012af4:	00a7e6b3          	or	a3,a5,a0
20012af8:	e4a9                	bnez	s1,20012b42 <__adddf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 125)
20012afa:	36068363          	beqz	a3,20012e60 <__adddf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 128)
20012afe:	00c766b3          	or	a3,a4,a2
20012b02:	c285                	beqz	a3,20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 134)
20012b04:	962a                	add	a2,a2,a0
20012b06:	97ba                	add	a5,a5,a4
20012b08:	00a63533          	sltu	a0,a2,a0
20012b0c:	97aa                	add	a5,a5,a0
20012b0e:	00879713          	slli	a4,a5,0x8
20012b12:	8532                	mv	a0,a2
20012b14:	00075763          	bgez	a4,20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 136)
20012b18:	ff800737          	lui	a4,0xff800
20012b1c:	177d                	addi	a4,a4,-1
20012b1e:	8ff9                	and	a5,a5,a4
20012b20:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 417)
20012b22:	00757713          	andi	a4,a0,7
20012b26:	34070463          	beqz	a4,20012e6e <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 37)
20012b2a:	00f57713          	andi	a4,a0,15
20012b2e:	4691                	li	a3,4
20012b30:	32d70f63          	beq	a4,a3,20012e6e <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 44)
20012b34:	00450693          	addi	a3,a0,4
20012b38:	00a6b533          	sltu	a0,a3,a0
20012b3c:	97aa                	add	a5,a5,a0
20012b3e:	8536                	mv	a0,a3
20012b40:	a63d                	j	20012e6e <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 153)
20012b42:	de99                	beqz	a3,20012a60 <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 155)
20012b44:	8e59                	or	a2,a2,a4
20012b46:	e2060de3          	beqz	a2,20012980 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20012b4a:	4901                	li	s2,0
20012b4c:	004007b7          	lui	a5,0x400
20012b50:	4501                	li	a0,0
20012b52:	7ff00493          	li	s1,2047
20012b56:	ae21                	j	20012e6e <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 124)
20012b58:	7ff00593          	li	a1,2047
20012b5c:	30b68563          	beq	a3,a1,20012e66 <__adddf3+0x564>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20012b60:	962a                	add	a2,a2,a0
20012b62:	973e                	add	a4,a4,a5
20012b64:	00a637b3          	sltu	a5,a2,a0
20012b68:	973e                	add	a4,a4,a5
20012b6a:	01f71513          	slli	a0,a4,0x1f
20012b6e:	8205                	srli	a2,a2,0x1
20012b70:	8d51                	or	a0,a0,a2
20012b72:	00175793          	srli	a5,a4,0x1
20012b76:	84b6                	mv	s1,a3
20012b78:	b76d                	j	20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 8)
20012b7a:	0d005663          	blez	a6,20012c46 <__adddf3+0x344>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 200)
20012b7e:	08089163          	bnez	a7,20012c00 <__adddf3+0x2fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 202)
20012b82:	00c766b3          	or	a3,a4,a2
20012b86:	34068363          	beqz	a3,20012ecc <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 205)
20012b8a:	fff80593          	addi	a1,a6,-1
20012b8e:	e991                	bnez	a1,20012ba2 <__adddf3+0x2a0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 214)
20012b90:	40c50633          	sub	a2,a0,a2
20012b94:	00c53533          	sltu	a0,a0,a2
20012b98:	8f99                	sub	a5,a5,a4
20012b9a:	8f89                	sub	a5,a5,a0
20012b9c:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 271)
20012b9e:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20012ba0:	a0b1                	j	20012bec <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 215)
20012ba2:	7ff00693          	li	a3,2047
20012ba6:	dcd80de3          	beq	a6,a3,20012980 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 238)
20012baa:	03800693          	li	a3,56
20012bae:	08b6c863          	blt	a3,a1,20012c3e <__adddf3+0x33c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 239)
20012bb2:	46fd                	li	a3,31
20012bb4:	04b6cf63          	blt	a3,a1,20012c12 <__adddf3+0x310>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 241)
20012bb8:	02000813          	li	a6,32
20012bbc:	40b80833          	sub	a6,a6,a1
20012bc0:	010716b3          	sll	a3,a4,a6
20012bc4:	00b658b3          	srl	a7,a2,a1
20012bc8:	01061633          	sll	a2,a2,a6
20012bcc:	0116e6b3          	or	a3,a3,a7
20012bd0:	00c03633          	snez	a2,a2
20012bd4:	8e55                	or	a2,a2,a3
20012bd6:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 255)
20012bda:	40c50633          	sub	a2,a0,a2
20012bde:	40e78733          	sub	a4,a5,a4
20012be2:	00c537b3          	sltu	a5,a0,a2
20012be6:	40f707b3          	sub	a5,a4,a5
20012bea:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 313)
20012bec:	00879713          	slli	a4,a5,0x8
20012bf0:	f20759e3          	bgez	a4,20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 373)
20012bf4:	00800437          	lui	s0,0x800
20012bf8:	147d                	addi	s0,s0,-1
20012bfa:	8c7d                	and	s0,s0,a5
20012bfc:	89aa                	mv	s3,a0
20012bfe:	a275                	j	20012daa <__adddf3+0x4a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 203)
20012c00:	7ff00693          	li	a3,2047
20012c04:	f0d48fe3          	beq	s1,a3,20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 229)
20012c08:	008006b7          	lui	a3,0x800
20012c0c:	8f55                	or	a4,a4,a3
20012c0e:	85c2                	mv	a1,a6
20012c10:	bf69                	j	20012baa <__adddf3+0x2a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 242)
20012c12:	fe058693          	addi	a3,a1,-32
20012c16:	02000893          	li	a7,32
20012c1a:	00d756b3          	srl	a3,a4,a3
20012c1e:	4801                	li	a6,0
20012c20:	01158863          	beq	a1,a7,20012c30 <__adddf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 249)
20012c24:	04000813          	li	a6,64
20012c28:	40b805b3          	sub	a1,a6,a1
20012c2c:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 252)
20012c30:	00c86633          	or	a2,a6,a2
20012c34:	00c03633          	snez	a2,a2
20012c38:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 240)
20012c3a:	4701                	li	a4,0
20012c3c:	bf79                	j	20012bda <__adddf3+0x2d8>
20012c3e:	8e59                	or	a2,a2,a4
20012c40:	00c03633          	snez	a2,a2
20012c44:	bfdd                	j	20012c3a <__adddf3+0x338>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 201)
20012c46:	0c080463          	beqz	a6,20012d0e <__adddf3+0x40c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 257)
20012c4a:	40988833          	sub	a6,a7,s1
20012c4e:	e895                	bnez	s1,20012c82 <__adddf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 259)
20012c50:	00a7e5b3          	or	a1,a5,a0
20012c54:	26058e63          	beqz	a1,20012ed0 <__adddf3+0x5ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 262)
20012c58:	fff80593          	addi	a1,a6,-1
20012c5c:	e991                	bnez	a1,20012c70 <__adddf3+0x36e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20012c5e:	40a60533          	sub	a0,a2,a0
20012c62:	40f707b3          	sub	a5,a4,a5
20012c66:	00a63633          	sltu	a2,a2,a0
20012c6a:	8f91                	sub	a5,a5,a2
20012c6c:	8936                	mv	s2,a3
20012c6e:	bf05                	j	20012b9e <__adddf3+0x29c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 272)
20012c70:	7ff00313          	li	t1,2047
20012c74:	00681f63          	bne	a6,t1,20012c92 <__adddf3+0x390>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012c78:	87ba                	mv	a5,a4
20012c7a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20012c7c:	7ff00493          	li	s1,2047
20012c80:	a07d                	j	20012d2e <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 260)
20012c82:	7ff00593          	li	a1,2047
20012c86:	feb889e3          	beq	a7,a1,20012c78 <__adddf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 286)
20012c8a:	008005b7          	lui	a1,0x800
20012c8e:	8fcd                	or	a5,a5,a1
20012c90:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 295)
20012c92:	03800813          	li	a6,56
20012c96:	06b84863          	blt	a6,a1,20012d06 <__adddf3+0x404>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 296)
20012c9a:	487d                	li	a6,31
20012c9c:	02b84e63          	blt	a6,a1,20012cd8 <__adddf3+0x3d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 298)
20012ca0:	02000313          	li	t1,32
20012ca4:	40b30333          	sub	t1,t1,a1
20012ca8:	00b55e33          	srl	t3,a0,a1
20012cac:	00679833          	sll	a6,a5,t1
20012cb0:	00651533          	sll	a0,a0,t1
20012cb4:	01c86833          	or	a6,a6,t3
20012cb8:	00a03533          	snez	a0,a0
20012cbc:	00a86533          	or	a0,a6,a0
20012cc0:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 312)
20012cc4:	40a60533          	sub	a0,a2,a0
20012cc8:	40b707b3          	sub	a5,a4,a1
20012ccc:	00a63633          	sltu	a2,a2,a0
20012cd0:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 312)
20012cd2:	84c6                	mv	s1,a7
20012cd4:	8936                	mv	s2,a3
20012cd6:	bf19                	j	20012bec <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 299)
20012cd8:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20012cdc:	02000e13          	li	t3,32
20012ce0:	0107d833          	srl	a6,a5,a6
20012ce4:	4301                	li	t1,0
20012ce6:	01c58863          	beq	a1,t3,20012cf6 <__adddf3+0x3f4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 306)
20012cea:	04000313          	li	t1,64
20012cee:	40b305b3          	sub	a1,t1,a1
20012cf2:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 309)
20012cf6:	00a36533          	or	a0,t1,a0
20012cfa:	00a03533          	snez	a0,a0
20012cfe:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 297)
20012d02:	4581                	li	a1,0
20012d04:	b7c1                	j	20012cc4 <__adddf3+0x3c2>
20012d06:	8d5d                	or	a0,a0,a5
20012d08:	00a03533          	snez	a0,a0
20012d0c:	bfdd                	j	20012d02 <__adddf3+0x400>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 258)
20012d0e:	00148593          	addi	a1,s1,1
20012d12:	7fe5f593          	andi	a1,a1,2046
20012d16:	e5b5                	bnez	a1,20012d82 <__adddf3+0x480>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 314)
20012d18:	00a7e833          	or	a6,a5,a0
20012d1c:	00c765b3          	or	a1,a4,a2
20012d20:	e4b1                	bnez	s1,20012d6c <__adddf3+0x46a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 316)
20012d22:	00081863          	bnez	a6,20012d32 <__adddf3+0x430>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 318)
20012d26:	1a058963          	beqz	a1,20012ed8 <__adddf3+0x5d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012d2a:	87ba                	mv	a5,a4
20012d2c:	8532                	mv	a0,a2
20012d2e:	8936                	mv	s2,a3
20012d30:	bbcd                	j	20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 319)
20012d32:	de0588e3          	beqz	a1,20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 326)
20012d36:	40c50833          	sub	a6,a0,a2
20012d3a:	40e785b3          	sub	a1,a5,a4
20012d3e:	010538b3          	sltu	a7,a0,a6
20012d42:	411585b3          	sub	a1,a1,a7
20012d46:	00859413          	slli	s0,a1,0x8
20012d4a:	00045a63          	bgez	s0,20012d5e <__adddf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 328)
20012d4e:	40a60533          	sub	a0,a2,a0
20012d52:	40f707b3          	sub	a5,a4,a5
20012d56:	00a63633          	sltu	a2,a2,a0
20012d5a:	8f91                	sub	a5,a5,a2
20012d5c:	bfc9                	j	20012d2e <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 329)
20012d5e:	00b86533          	or	a0,a6,a1
20012d62:	16050f63          	beqz	a0,20012ee0 <__adddf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20012d66:	87ae                	mv	a5,a1
20012d68:	8542                	mv	a0,a6
20012d6a:	bb65                	j	20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 348)
20012d6c:	00081863          	bnez	a6,20012d7c <__adddf3+0x47a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 349)
20012d70:	16058a63          	beqz	a1,20012ee4 <__adddf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012d74:	87ba                	mv	a5,a4
20012d76:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20012d78:	8936                	mv	s2,a3
20012d7a:	b119                	j	20012980 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 350)
20012d7c:	c00582e3          	beqz	a1,20012980 <__adddf3+0x7e>
20012d80:	b3e9                	j	20012b4a <__adddf3+0x248>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 315)
20012d82:	40c509b3          	sub	s3,a0,a2
20012d86:	013535b3          	sltu	a1,a0,s3
20012d8a:	40e78433          	sub	s0,a5,a4
20012d8e:	8c0d                	sub	s0,s0,a1
20012d90:	00841593          	slli	a1,s0,0x8
20012d94:	0605d763          	bgez	a1,20012e02 <__adddf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 366)
20012d98:	40a609b3          	sub	s3,a2,a0
20012d9c:	40f707b3          	sub	a5,a4,a5
20012da0:	01363633          	sltu	a2,a2,s3
20012da4:	40c78433          	sub	s0,a5,a2
20012da8:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 375)
20012daa:	c035                	beqz	s0,20012e0e <__adddf3+0x50c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 378)
20012dac:	8522                	mv	a0,s0
20012dae:	3da010ef          	jal	ra,20014188 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 389)
20012db2:	ff850713          	addi	a4,a0,-8
20012db6:	47fd                	li	a5,31
20012db8:	06e7c163          	blt	a5,a4,20012e1a <__adddf3+0x518>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 390)
20012dbc:	02000793          	li	a5,32
20012dc0:	8f99                	sub	a5,a5,a4
20012dc2:	00e41433          	sll	s0,s0,a4
20012dc6:	00f9d7b3          	srl	a5,s3,a5
20012dca:	8c5d                	or	s0,s0,a5
20012dcc:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 399)
20012dd0:	06974e63          	blt	a4,s1,20012e4c <__adddf3+0x54a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 400)
20012dd4:	8f05                	sub	a4,a4,s1
20012dd6:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7fddb5>
20012dda:	46fd                	li	a3,31
20012ddc:	04f6c563          	blt	a3,a5,20012e26 <__adddf3+0x524>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 402)
20012de0:	02000713          	li	a4,32
20012de4:	8f1d                	sub	a4,a4,a5
20012de6:	00f55633          	srl	a2,a0,a5
20012dea:	00e416b3          	sll	a3,s0,a4
20012dee:	00e51533          	sll	a0,a0,a4
20012df2:	8ed1                	or	a3,a3,a2
20012df4:	00a03533          	snez	a0,a0
20012df8:	8d55                	or	a0,a0,a3
20012dfa:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20012dfe:	4481                	li	s1,0
20012e00:	b30d                	j	20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 367)
20012e02:	0089e533          	or	a0,s3,s0
20012e06:	f155                	bnez	a0,20012daa <__adddf3+0x4a8>
20012e08:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20012e0a:	4481                	li	s1,0
20012e0c:	a8c1                	j	20012edc <__adddf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 382)
20012e0e:	854e                	mv	a0,s3
20012e10:	378010ef          	jal	ra,20014188 <__clzsi2>
20012e14:	02050513          	addi	a0,a0,32
20012e18:	bf69                	j	20012db2 <__adddf3+0x4b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 391)
20012e1a:	fd850413          	addi	s0,a0,-40
20012e1e:	00899433          	sll	s0,s3,s0
20012e22:	4501                	li	a0,0
20012e24:	b775                	j	20012dd0 <__adddf3+0x4ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 403)
20012e26:	1705                	addi	a4,a4,-31
20012e28:	02000613          	li	a2,32
20012e2c:	00e45733          	srl	a4,s0,a4
20012e30:	4681                	li	a3,0
20012e32:	00c78763          	beq	a5,a2,20012e40 <__adddf3+0x53e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 411)
20012e36:	04000693          	li	a3,64
20012e3a:	8e9d                	sub	a3,a3,a5
20012e3c:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20012e40:	8d55                	or	a0,a0,a3
20012e42:	00a03533          	snez	a0,a0
20012e46:	8d59                	or	a0,a0,a4
20012e48:	4781                	li	a5,0
20012e4a:	bf55                	j	20012dfe <__adddf3+0x4fc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 401)
20012e4c:	ff8007b7          	lui	a5,0xff800
20012e50:	17fd                	addi	a5,a5,-1
20012e52:	8c99                	sub	s1,s1,a4
20012e54:	8fe1                	and	a5,a5,s0
20012e56:	b1f1                	j	20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012e58:	87ba                	mv	a5,a4
20012e5a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20012e5c:	84ae                	mv	s1,a1
20012e5e:	b1d1                	j	20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012e60:	87ba                	mv	a5,a4
20012e62:	8532                	mv	a0,a2
20012e64:	b97d                	j	20012b22 <__adddf3+0x220>
20012e66:	7ff00493          	li	s1,2047
20012e6a:	4781                	li	a5,0
20012e6c:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 47)
20012e6e:	00879713          	slli	a4,a5,0x8
20012e72:	00075b63          	bgez	a4,20012e88 <__adddf3+0x586>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 63)
20012e76:	0485                	addi	s1,s1,1
20012e78:	7ff00713          	li	a4,2047
20012e7c:	06e48963          	beq	s1,a4,20012eee <__adddf3+0x5ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20012e80:	ff800737          	lui	a4,0xff800
20012e84:	177d                	addi	a4,a4,-1
20012e86:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 79)
20012e88:	01d79713          	slli	a4,a5,0x1d
20012e8c:	810d                	srli	a0,a0,0x3
20012e8e:	8d59                	or	a0,a0,a4
20012e90:	7ff00713          	li	a4,2047
20012e94:	838d                	srli	a5,a5,0x3
20012e96:	00e49963          	bne	s1,a4,20012ea8 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 80)
20012e9a:	8d5d                	or	a0,a0,a5
20012e9c:	4781                	li	a5,0
20012e9e:	c509                	beqz	a0,20012ea8 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20012ea0:	000807b7          	lui	a5,0x80
20012ea4:	4501                	li	a0,0
20012ea6:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20012ea8:	7ff4f713          	andi	a4,s1,2047
20012eac:	07b2                	slli	a5,a5,0xc
20012eae:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20012eb0:	40f2                	lw	ra,28(sp)
20012eb2:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20012eb4:	83b1                	srli	a5,a5,0xc
20012eb6:	01f91593          	slli	a1,s2,0x1f
20012eba:	8fd9                	or	a5,a5,a4
20012ebc:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20012ec0:	44d2                	lw	s1,20(sp)
20012ec2:	4942                	lw	s2,16(sp)
20012ec4:	49b2                	lw	s3,12(sp)
20012ec6:	85ba                	mv	a1,a4
20012ec8:	6105                	addi	sp,sp,32
20012eca:	8082                	ret
20012ecc:	84c2                	mv	s1,a6
20012ece:	b991                	j	20012b22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20012ed0:	87ba                	mv	a5,a4
20012ed2:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20012ed4:	84c2                	mv	s1,a6
20012ed6:	bda1                	j	20012d2e <__adddf3+0x42c>
20012ed8:	4781                	li	a5,0
20012eda:	4501                	li	a0,0
20012edc:	4901                	li	s2,0
20012ede:	bf41                	j	20012e6e <__adddf3+0x56c>
20012ee0:	4781                	li	a5,0
20012ee2:	bfed                	j	20012edc <__adddf3+0x5da>
20012ee4:	4501                	li	a0,0
20012ee6:	4901                	li	s2,0
20012ee8:	004007b7          	lui	a5,0x400
20012eec:	b19d                	j	20012b52 <__adddf3+0x250>
20012eee:	4781                	li	a5,0
20012ef0:	4501                	li	a0,0
20012ef2:	bf59                	j	20012e88 <__adddf3+0x586>

20012ef4 <__divdf3>:
__divdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20012ef4:	7179                	addi	sp,sp,-48
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20012ef6:	0145d813          	srli	a6,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20012efa:	d226                	sw	s1,36(sp)
20012efc:	ce4e                	sw	s3,28(sp)
20012efe:	cc52                	sw	s4,24(sp)
20012f00:	c85a                	sw	s6,16(sp)
20012f02:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20012f04:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20012f08:	d606                	sw	ra,44(sp)
20012f0a:	d422                	sw	s0,40(sp)
20012f0c:	d04a                	sw	s2,32(sp)
20012f0e:	ca56                	sw	s5,20(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20012f10:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20012f14:	8b2a                	mv	s6,a0
20012f16:	8bb2                	mv	s7,a2
20012f18:	8a36                	mv	s4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20012f1a:	80b1                	srli	s1,s1,0xc
20012f1c:	01f5d993          	srli	s3,a1,0x1f
20012f20:	08080463          	beqz	a6,20012fa8 <__divdf3+0xb4>
20012f24:	7ff00793          	li	a5,2047
20012f28:	0cf80a63          	beq	a6,a5,20012ffc <__divdf3+0x108>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 1)
20012f2c:	01d55a93          	srli	s5,a0,0x1d
20012f30:	048e                	slli	s1,s1,0x3
20012f32:	009ae4b3          	or	s1,s5,s1
20012f36:	00800ab7          	lui	s5,0x800
20012f3a:	0154eab3          	or	s5,s1,s5
20012f3e:	00351413          	slli	s0,a0,0x3
20012f42:	c0180913          	addi	s2,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20012f46:	4b01                	li	s6,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20012f48:	014a5513          	srli	a0,s4,0x14
20012f4c:	00ca1493          	slli	s1,s4,0xc
20012f50:	7ff57813          	andi	a6,a0,2047
20012f54:	80b1                	srli	s1,s1,0xc
20012f56:	01fa5a13          	srli	s4,s4,0x1f
20012f5a:	0c080463          	beqz	a6,20013022 <__divdf3+0x12e>
20012f5e:	7ff00793          	li	a5,2047
20012f62:	10f80963          	beq	a6,a5,20013074 <__divdf3+0x180>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 1)
20012f66:	00349513          	slli	a0,s1,0x3
20012f6a:	01dbd793          	srli	a5,s7,0x1d
20012f6e:	8d5d                	or	a0,a0,a5
20012f70:	008004b7          	lui	s1,0x800
20012f74:	8cc9                	or	s1,s1,a0
20012f76:	003b9f13          	slli	t5,s7,0x3
20012f7a:	c0180513          	addi	a0,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20012f7e:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20012f80:	002b1713          	slli	a4,s6,0x2
20012f84:	8f5d                	or	a4,a4,a5
20012f86:	177d                	addi	a4,a4,-1
20012f88:	46b9                	li	a3,14
20012f8a:	0149c633          	xor	a2,s3,s4
20012f8e:	40a90833          	sub	a6,s2,a0
20012f92:	10e6e363          	bltu	a3,a4,20013098 <__divdf3+0x1a4>
20012f96:	00006697          	auipc	a3,0x6
20012f9a:	aaa68693          	addi	a3,a3,-1366 # 20018a40 <pow10.2193+0x50>
20012f9e:	070a                	slli	a4,a4,0x2
20012fa0:	9736                	add	a4,a4,a3
20012fa2:	4318                	lw	a4,0(a4)
20012fa4:	9736                	add	a4,a4,a3
20012fa6:	8702                	jr	a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 2)
20012fa8:	00a4eab3          	or	s5,s1,a0
20012fac:	060a8263          	beqz	s5,20013010 <__divdf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 12)
20012fb0:	c89d                	beqz	s1,20012fe6 <__divdf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 16)
20012fb2:	8526                	mv	a0,s1
20012fb4:	1d4010ef          	jal	ra,20014188 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 27)
20012fb8:	ff550793          	addi	a5,a0,-11
20012fbc:	4771                	li	a4,28
20012fbe:	02f74963          	blt	a4,a5,20012ff0 <__divdf3+0xfc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 28)
20012fc2:	4af5                	li	s5,29
20012fc4:	ff850413          	addi	s0,a0,-8
20012fc8:	40fa8ab3          	sub	s5,s5,a5
20012fcc:	008494b3          	sll	s1,s1,s0
20012fd0:	015b5ab3          	srl	s5,s6,s5
20012fd4:	009aeab3          	or	s5,s5,s1
20012fd8:	008b1433          	sll	s0,s6,s0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20012fdc:	c0d00813          	li	a6,-1011
20012fe0:	40a80933          	sub	s2,a6,a0
20012fe4:	b78d                	j	20012f46 <__divdf3+0x52>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 20)
20012fe6:	1a2010ef          	jal	ra,20014188 <__clzsi2>
20012fea:	02050513          	addi	a0,a0,32
20012fee:	b7e9                	j	20012fb8 <__divdf3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 29)
20012ff0:	fd850493          	addi	s1,a0,-40
20012ff4:	009b1ab3          	sll	s5,s6,s1
20012ff8:	4401                	li	s0,0
20012ffa:	b7cd                	j	20012fdc <__divdf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 3)
20012ffc:	00a4eab3          	or	s5,s1,a0
20013000:	000a8c63          	beqz	s5,20013018 <__divdf3+0x124>
20013004:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20013006:	8aa6                	mv	s5,s1
20013008:	7ff00913          	li	s2,2047
2001300c:	4b0d                	li	s6,3
2001300e:	bf2d                	j	20012f48 <__divdf3+0x54>
20013010:	4401                	li	s0,0
20013012:	4901                	li	s2,0
20013014:	4b05                	li	s6,1
20013016:	bf0d                	j	20012f48 <__divdf3+0x54>
20013018:	4401                	li	s0,0
2001301a:	7ff00913          	li	s2,2047
2001301e:	4b09                	li	s6,2
20013020:	b725                	j	20012f48 <__divdf3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 2)
20013022:	0174ef33          	or	t5,s1,s7
20013026:	060f0063          	beqz	t5,20013086 <__divdf3+0x192>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 12)
2001302a:	c88d                	beqz	s1,2001305c <__divdf3+0x168>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 16)
2001302c:	8526                	mv	a0,s1
2001302e:	15a010ef          	jal	ra,20014188 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 27)
20013032:	ff550793          	addi	a5,a0,-11
20013036:	4771                	li	a4,28
20013038:	02f74863          	blt	a4,a5,20013068 <__divdf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 28)
2001303c:	4775                	li	a4,29
2001303e:	ff850f13          	addi	t5,a0,-8
20013042:	8f1d                	sub	a4,a4,a5
20013044:	01e494b3          	sll	s1,s1,t5
20013048:	00ebd733          	srl	a4,s7,a4
2001304c:	8cd9                	or	s1,s1,a4
2001304e:	01eb9f33          	sll	t5,s7,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20013052:	c0d00613          	li	a2,-1011
20013056:	40a60533          	sub	a0,a2,a0
2001305a:	b715                	j	20012f7e <__divdf3+0x8a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 20)
2001305c:	855e                	mv	a0,s7
2001305e:	12a010ef          	jal	ra,20014188 <__clzsi2>
20013062:	02050513          	addi	a0,a0,32
20013066:	b7f1                	j	20013032 <__divdf3+0x13e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 29)
20013068:	fd850493          	addi	s1,a0,-40
2001306c:	009b94b3          	sll	s1,s7,s1
20013070:	4f01                	li	t5,0
20013072:	b7c5                	j	20013052 <__divdf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 3)
20013074:	0174ef33          	or	t5,s1,s7
20013078:	000f0b63          	beqz	t5,2001308e <__divdf3+0x19a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
2001307c:	8f5e                	mv	t5,s7
2001307e:	7ff00513          	li	a0,2047
20013082:	478d                	li	a5,3
20013084:	bdf5                	j	20012f80 <__divdf3+0x8c>
20013086:	4481                	li	s1,0
20013088:	4501                	li	a0,0
2001308a:	4785                	li	a5,1
2001308c:	bdd5                	j	20012f80 <__divdf3+0x8c>
2001308e:	4481                	li	s1,0
20013090:	7ff00513          	li	a0,2047
20013094:	4789                	li	a5,2
20013096:	b5ed                	j	20012f80 <__divdf3+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 2)
20013098:	0154e663          	bltu	s1,s5,200130a4 <__divdf3+0x1b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 11)
2001309c:	2a9a9363          	bne	s5,s1,20013342 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 12)
200130a0:	2be46163          	bltu	s0,t5,20013342 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 14)
200130a4:	01fa9693          	slli	a3,s5,0x1f
200130a8:	00145713          	srli	a4,s0,0x1
200130ac:	01f41793          	slli	a5,s0,0x1f
200130b0:	001ada93          	srli	s5,s5,0x1
200130b4:	00e6e433          	or	s0,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 19)
200130b8:	00849513          	slli	a0,s1,0x8
200130bc:	018f5493          	srli	s1,t5,0x18
200130c0:	8d45                	or	a0,a0,s1
200130c2:	01055e13          	srli	t3,a0,0x10
200130c6:	03cad8b3          	divu	a7,s5,t3
200130ca:	01051313          	slli	t1,a0,0x10
200130ce:	01035313          	srli	t1,t1,0x10
200130d2:	01045713          	srli	a4,s0,0x10
200130d6:	008f1593          	slli	a1,t5,0x8
200130da:	03caf4b3          	remu	s1,s5,t3
200130de:	8fc6                	mv	t6,a7
200130e0:	031306b3          	mul	a3,t1,a7
200130e4:	01049a93          	slli	s5,s1,0x10
200130e8:	01576733          	or	a4,a4,s5
200130ec:	00d77c63          	bgeu	a4,a3,20013104 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 22)
200130f0:	972a                	add	a4,a4,a0
200130f2:	fff88f93          	addi	t6,a7,-1
200130f6:	00a76763          	bltu	a4,a0,20013104 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 24)
200130fa:	00d77563          	bgeu	a4,a3,20013104 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 26)
200130fe:	ffe88f93          	addi	t6,a7,-2
20013102:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 28)
20013104:	8f15                	sub	a4,a4,a3
20013106:	03c75eb3          	divu	t4,a4,t3
2001310a:	0442                	slli	s0,s0,0x10
2001310c:	8041                	srli	s0,s0,0x10
2001310e:	03c77733          	remu	a4,a4,t3
20013112:	86f6                	mv	a3,t4
20013114:	03d308b3          	mul	a7,t1,t4
20013118:	0742                	slli	a4,a4,0x10
2001311a:	8f41                	or	a4,a4,s0
2001311c:	01177c63          	bgeu	a4,a7,20013134 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 29)
20013120:	972a                	add	a4,a4,a0
20013122:	fffe8693          	addi	a3,t4,-1
20013126:	00a76763          	bltu	a4,a0,20013134 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 31)
2001312a:	01177563          	bgeu	a4,a7,20013134 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 33)
2001312e:	ffee8693          	addi	a3,t4,-2
20013132:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 35)
20013134:	0fc2                	slli	t6,t6,0x10
20013136:	00dfefb3          	or	t6,t6,a3
2001313a:	66c1                	lui	a3,0x10
2001313c:	41170433          	sub	s0,a4,a7
20013140:	fff68893          	addi	a7,a3,-1 # ffff <__heap_size+0xf7ff>
20013144:	010fdf13          	srli	t5,t6,0x10
20013148:	011ff733          	and	a4,t6,a7
2001314c:	0105de93          	srli	t4,a1,0x10
20013150:	0115f8b3          	and	a7,a1,a7
20013154:	031703b3          	mul	t2,a4,a7
20013158:	031f04b3          	mul	s1,t5,a7
2001315c:	02ee8733          	mul	a4,t4,a4
20013160:	03df02b3          	mul	t0,t5,t4
20013164:	00970f33          	add	t5,a4,s1
20013168:	0103d713          	srli	a4,t2,0x10
2001316c:	977a                	add	a4,a4,t5
2001316e:	00977363          	bgeu	a4,s1,20013174 <__divdf3+0x280>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 36)
20013172:	92b6                	add	t0,t0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 38)
20013174:	01075f13          	srli	t5,a4,0x10
20013178:	9f16                	add	t5,t5,t0
2001317a:	62c1                	lui	t0,0x10
2001317c:	12fd                	addi	t0,t0,-1
2001317e:	005776b3          	and	a3,a4,t0
20013182:	06c2                	slli	a3,a3,0x10
20013184:	0053f3b3          	and	t2,t2,t0
20013188:	969e                	add	a3,a3,t2
2001318a:	01e46763          	bltu	s0,t5,20013198 <__divdf3+0x2a4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 40)
2001318e:	84fe                	mv	s1,t6
20013190:	03e41e63          	bne	s0,t5,200131cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 41)
20013194:	02d7fc63          	bgeu	a5,a3,200131cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 43)
20013198:	97ae                	add	a5,a5,a1
2001319a:	00b7b733          	sltu	a4,a5,a1
2001319e:	972a                	add	a4,a4,a0
200131a0:	943a                	add	s0,s0,a4
200131a2:	ffff8493          	addi	s1,t6,-1
200131a6:	00856663          	bltu	a0,s0,200131b2 <__divdf3+0x2be>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 46)
200131aa:	02851163          	bne	a0,s0,200131cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 47)
200131ae:	00b7ef63          	bltu	a5,a1,200131cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 49)
200131b2:	01e46663          	bltu	s0,t5,200131be <__divdf3+0x2ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 52)
200131b6:	008f1b63          	bne	t5,s0,200131cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 53)
200131ba:	00d7f963          	bgeu	a5,a3,200131cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 55)
200131be:	97ae                	add	a5,a5,a1
200131c0:	00b7b733          	sltu	a4,a5,a1
200131c4:	972a                	add	a4,a4,a0
200131c6:	ffef8493          	addi	s1,t6,-2
200131ca:	943a                	add	s0,s0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 57)
200131cc:	40d786b3          	sub	a3,a5,a3
200131d0:	41e40433          	sub	s0,s0,t5
200131d4:	00d7b7b3          	sltu	a5,a5,a3
200131d8:	8c1d                	sub	s0,s0,a5
200131da:	5f7d                	li	t5,-1
200131dc:	0e850563          	beq	a0,s0,200132c6 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 59)
200131e0:	03c45f33          	divu	t5,s0,t3
200131e4:	0106d713          	srli	a4,a3,0x10
200131e8:	03c47433          	remu	s0,s0,t3
200131ec:	03e307b3          	mul	a5,t1,t5
200131f0:	0442                	slli	s0,s0,0x10
200131f2:	8c59                	or	s0,s0,a4
200131f4:	877a                	mv	a4,t5
200131f6:	00f47c63          	bgeu	s0,a5,2001320e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 61)
200131fa:	942a                	add	s0,s0,a0
200131fc:	ffff0713          	addi	a4,t5,-1
20013200:	00a46763          	bltu	s0,a0,2001320e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 63)
20013204:	00f47563          	bgeu	s0,a5,2001320e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 65)
20013208:	ffef0713          	addi	a4,t5,-2
2001320c:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 67)
2001320e:	8c1d                	sub	s0,s0,a5
20013210:	03c45f33          	divu	t5,s0,t3
20013214:	06c2                	slli	a3,a3,0x10
20013216:	82c1                	srli	a3,a3,0x10
20013218:	03c47433          	remu	s0,s0,t3
2001321c:	87fa                	mv	a5,t5
2001321e:	03e30333          	mul	t1,t1,t5
20013222:	0442                	slli	s0,s0,0x10
20013224:	8c55                	or	s0,s0,a3
20013226:	00647c63          	bgeu	s0,t1,2001323e <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 68)
2001322a:	942a                	add	s0,s0,a0
2001322c:	ffff0793          	addi	a5,t5,-1
20013230:	00a46763          	bltu	s0,a0,2001323e <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 70)
20013234:	00647563          	bgeu	s0,t1,2001323e <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 72)
20013238:	ffef0793          	addi	a5,t5,-2
2001323c:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 74)
2001323e:	0742                	slli	a4,a4,0x10
20013240:	8f5d                	or	a4,a4,a5
20013242:	01071793          	slli	a5,a4,0x10
20013246:	83c1                	srli	a5,a5,0x10
20013248:	40640433          	sub	s0,s0,t1
2001324c:	01075313          	srli	t1,a4,0x10
20013250:	03178e33          	mul	t3,a5,a7
20013254:	031308b3          	mul	a7,t1,a7
20013258:	026e8333          	mul	t1,t4,t1
2001325c:	02fe8eb3          	mul	t4,t4,a5
20013260:	010e5793          	srli	a5,t3,0x10
20013264:	9ec6                	add	t4,t4,a7
20013266:	97f6                	add	a5,a5,t4
20013268:	0117f463          	bgeu	a5,a7,20013270 <__divdf3+0x37c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 75)
2001326c:	66c1                	lui	a3,0x10
2001326e:	9336                	add	t1,t1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 77)
20013270:	0107d893          	srli	a7,a5,0x10
20013274:	989a                	add	a7,a7,t1
20013276:	6341                	lui	t1,0x10
20013278:	137d                	addi	t1,t1,-1
2001327a:	0067f6b3          	and	a3,a5,t1
2001327e:	06c2                	slli	a3,a3,0x10
20013280:	006e7e33          	and	t3,t3,t1
20013284:	96f2                	add	a3,a3,t3
20013286:	01146663          	bltu	s0,a7,20013292 <__divdf3+0x39e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 79)
2001328a:	19141e63          	bne	s0,a7,20013426 <__divdf3+0x532>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 80)
2001328e:	8f3a                	mv	t5,a4
20013290:	ca9d                	beqz	a3,200132c6 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 82)
20013292:	942a                	add	s0,s0,a0
20013294:	fff70f13          	addi	t5,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7fddb3>
20013298:	02a46163          	bltu	s0,a0,200132ba <__divdf3+0x3c6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 88)
2001329c:	01146663          	bltu	s0,a7,200132a8 <__divdf3+0x3b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 91)
200132a0:	19141263          	bne	s0,a7,20013424 <__divdf3+0x530>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 92)
200132a4:	00d5fd63          	bgeu	a1,a3,200132be <__divdf3+0x3ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 94)
200132a8:	00159793          	slli	a5,a1,0x1
200132ac:	00b7b5b3          	sltu	a1,a5,a1
200132b0:	952e                	add	a0,a0,a1
200132b2:	ffe70f13          	addi	t5,a4,-2
200132b6:	942a                	add	s0,s0,a0
200132b8:	85be                	mv	a1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 96)
200132ba:	01141463          	bne	s0,a7,200132c2 <__divdf3+0x3ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 98)
200132be:	00b68463          	beq	a3,a1,200132c6 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 99)
200132c2:	001f6f13          	ori	t5,t5,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 2)
200132c6:	3ff80713          	addi	a4,a6,1023
200132ca:	0ae05763          	blez	a4,20013378 <__divdf3+0x484>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 6)
200132ce:	007f7793          	andi	a5,t5,7
200132d2:	cf81                	beqz	a5,200132ea <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 8)
200132d4:	00ff7793          	andi	a5,t5,15
200132d8:	4691                	li	a3,4
200132da:	00d78863          	beq	a5,a3,200132ea <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 10)
200132de:	004f0693          	addi	a3,t5,4
200132e2:	01e6bf33          	sltu	t5,a3,t5
200132e6:	94fa                	add	s1,s1,t5
200132e8:	8f36                	mv	t5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 9)
200132ea:	00749793          	slli	a5,s1,0x7
200132ee:	0007d863          	bgez	a5,200132fe <__divdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 24)
200132f2:	ff0007b7          	lui	a5,0xff000
200132f6:	17fd                	addi	a5,a5,-1
200132f8:	8cfd                	and	s1,s1,a5
200132fa:	40080713          	addi	a4,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 26)
200132fe:	7fe00793          	li	a5,2046
20013302:	10e7c863          	blt	a5,a4,20013412 <__divdf3+0x51e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20013306:	003f5f13          	srli	t5,t5,0x3
2001330a:	01d49793          	slli	a5,s1,0x1d
2001330e:	01e7e7b3          	or	a5,a5,t5
20013312:	0034d513          	srli	a0,s1,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20013316:	0532                	slli	a0,a0,0xc
20013318:	7ff77713          	andi	a4,a4,2047
2001331c:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
2001331e:	50b2                	lw	ra,44(sp)
20013320:	5422                	lw	s0,40(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20013322:	8131                	srli	a0,a0,0xc
20013324:	8d59                	or	a0,a0,a4
20013326:	067e                	slli	a2,a2,0x1f
20013328:	00c56733          	or	a4,a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
2001332c:	5492                	lw	s1,36(sp)
2001332e:	5902                	lw	s2,32(sp)
20013330:	49f2                	lw	s3,28(sp)
20013332:	4a62                	lw	s4,24(sp)
20013334:	4ad2                	lw	s5,20(sp)
20013336:	4b42                	lw	s6,16(sp)
20013338:	4bb2                	lw	s7,12(sp)
2001333a:	853e                	mv	a0,a5
2001333c:	85ba                	mv	a1,a4
2001333e:	6145                	addi	sp,sp,48
20013340:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 15)
20013342:	187d                	addi	a6,a6,-1
20013344:	4781                	li	a5,0
20013346:	bb8d                	j	200130b8 <__divdf3+0x1c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 8)
20013348:	864e                	mv	a2,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 8)
2001334a:	84d6                	mv	s1,s5
2001334c:	8f22                	mv	t5,s0
2001334e:	87da                	mv	a5,s6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20013350:	4709                	li	a4,2
20013352:	0ce78063          	beq	a5,a4,20013412 <__divdf3+0x51e>
20013356:	470d                	li	a4,3
20013358:	0ae78663          	beq	a5,a4,20013404 <__divdf3+0x510>
2001335c:	4705                	li	a4,1
2001335e:	f6e794e3          	bne	a5,a4,200132c6 <__divdf3+0x3d2>
20013362:	4501                	li	a0,0
20013364:	4781                	li	a5,0
20013366:	a885                	j	200133d6 <__divdf3+0x4e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 5)
20013368:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 5)
2001336a:	b7dd                	j	20013350 <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
2001336c:	000804b7          	lui	s1,0x80
20013370:	4f01                	li	t5,0
20013372:	4601                	li	a2,0
20013374:	478d                	li	a5,3
20013376:	bfe9                	j	20013350 <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 59)
20013378:	4505                	li	a0,1
2001337a:	8d19                	sub	a0,a0,a4
2001337c:	03800793          	li	a5,56
20013380:	fea7c1e3          	blt	a5,a0,20013362 <__divdf3+0x46e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 60)
20013384:	47fd                	li	a5,31
20013386:	04a7ca63          	blt	a5,a0,200133da <__divdf3+0x4e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 62)
2001338a:	41e80813          	addi	a6,a6,1054
2001338e:	010497b3          	sll	a5,s1,a6
20013392:	00af5733          	srl	a4,t5,a0
20013396:	010f1833          	sll	a6,t5,a6
2001339a:	8fd9                	or	a5,a5,a4
2001339c:	01003833          	snez	a6,a6
200133a0:	0107e7b3          	or	a5,a5,a6
200133a4:	00a4d533          	srl	a0,s1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 75)
200133a8:	0077f713          	andi	a4,a5,7
200133ac:	cf01                	beqz	a4,200133c4 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 76)
200133ae:	00f7f713          	andi	a4,a5,15
200133b2:	4691                	li	a3,4
200133b4:	00d70863          	beq	a4,a3,200133c4 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 78)
200133b8:	00478713          	addi	a4,a5,4 # ff000004 <metal_segment_heap_target_end+0x7effddb8>
200133bc:	00f737b3          	sltu	a5,a4,a5
200133c0:	953e                	add	a0,a0,a5
200133c2:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 77)
200133c4:	00851713          	slli	a4,a0,0x8
200133c8:	04074a63          	bltz	a4,2001341c <__divdf3+0x528>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 93)
200133cc:	01d51713          	slli	a4,a0,0x1d
200133d0:	838d                	srli	a5,a5,0x3
200133d2:	8fd9                	or	a5,a5,a4
200133d4:	810d                	srli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
200133d6:	4701                	li	a4,0
200133d8:	bf3d                	j	20013316 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 63)
200133da:	5785                	li	a5,-31
200133dc:	8f99                	sub	a5,a5,a4
200133de:	02000693          	li	a3,32
200133e2:	00f4d7b3          	srl	a5,s1,a5
200133e6:	4701                	li	a4,0
200133e8:	00d50663          	beq	a0,a3,200133f4 <__divdf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 71)
200133ec:	43e80813          	addi	a6,a6,1086
200133f0:	01049733          	sll	a4,s1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 74)
200133f4:	01e76f33          	or	t5,a4,t5
200133f8:	01e03f33          	snez	t5,t5
200133fc:	01e7e7b3          	or	a5,a5,t5
20013400:	4501                	li	a0,0
20013402:	b75d                	j	200133a8 <__divdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20013404:	00080537          	lui	a0,0x80
20013408:	4781                	li	a5,0
2001340a:	7ff00713          	li	a4,2047
2001340e:	4601                	li	a2,0
20013410:	b719                	j	20013316 <__divdf3+0x422>
20013412:	4501                	li	a0,0
20013414:	4781                	li	a5,0
20013416:	7ff00713          	li	a4,2047
2001341a:	bdf5                	j	20013316 <__divdf3+0x422>
2001341c:	4501                	li	a0,0
2001341e:	4781                	li	a5,0
20013420:	4705                	li	a4,1
20013422:	bdd5                	j	20013316 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20013424:	877a                	mv	a4,t5
20013426:	8f3a                	mv	t5,a4
20013428:	bd69                	j	200132c2 <__divdf3+0x3ce>

2001342a <__eqdf2>:
__eqdf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
2001342a:	0145d713          	srli	a4,a1,0x14
2001342e:	001007b7          	lui	a5,0x100
20013432:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
20013434:	0146d813          	srli	a6,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:36
20013438:	832a                	mv	t1,a0
2001343a:	8eaa                	mv	t4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
2001343c:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20013440:	7ff00513          	li	a0,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
20013444:	00b7f8b3          	and	a7,a5,a1
20013448:	8f32                	mv	t5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
2001344a:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
2001344c:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
2001344e:	7ff87813          	andi	a6,a6,2047
20013452:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20013454:	00a71a63          	bne	a4,a0,20013468 <__eqdf2+0x3e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 18)
20013458:	0068ee33          	or	t3,a7,t1
2001345c:	4505                	li	a0,1
2001345e:	000e1463          	bnez	t3,20013466 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20013462:	00e80563          	beq	a6,a4,2001346c <__eqdf2+0x42>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:49
20013466:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 21)
20013468:	00a81563          	bne	a6,a0,20013472 <__eqdf2+0x48>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 22)
2001346c:	8e5d                	or	a2,a2,a5
2001346e:	4505                	li	a0,1
20013470:	fa7d                	bnez	a2,20013466 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 73)
20013472:	4505                	li	a0,1
20013474:	ff0719e3          	bne	a4,a6,20013466 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 75)
20013478:	fef897e3          	bne	a7,a5,20013466 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 77)
2001347c:	ffee95e3          	bne	t4,t5,20013466 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 79)
20013480:	00d58863          	beq	a1,a3,20013490 <__eqdf2+0x66>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 80)
20013484:	f36d                	bnez	a4,20013466 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 83)
20013486:	0068e533          	or	a0,a7,t1
2001348a:	00a03533          	snez	a0,a0
2001348e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20013490:	4501                	li	a0,0
20013492:	8082                	ret

20013494 <__gedf2>:
__gedf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20013494:	0145d813          	srli	a6,a1,0x14
20013498:	001007b7          	lui	a5,0x100
2001349c:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
2001349e:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
200134a2:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
200134a6:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
200134aa:	00b7f8b3          	and	a7,a5,a1
200134ae:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
200134b0:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
200134b2:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
200134b4:	8e32                	mv	t3,a2
200134b6:	7ff77713          	andi	a4,a4,2047
200134ba:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
200134bc:	01d81863          	bne	a6,t4,200134cc <__gedf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 18)
200134c0:	00a8eeb3          	or	t4,a7,a0
200134c4:	060e8563          	beqz	t4,2001352e <__gedf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
200134c8:	55f9                	li	a1,-2
200134ca:	a80d                	j	200134fc <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 21)
200134cc:	01d71663          	bne	a4,t4,200134d8 <__gedf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 22)
200134d0:	00c7eeb3          	or	t4,a5,a2
200134d4:	fe0e9ae3          	bnez	t4,200134c8 <__gedf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 57)
200134d8:	04081d63          	bnez	a6,20013532 <__gedf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 58)
200134dc:	00a8e533          	or	a0,a7,a0
200134e0:	00153513          	seqz	a0,a0
200134e4:	e319                	bnez	a4,200134ea <__gedf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 64)
200134e6:	8e5d                	or	a2,a2,a5
200134e8:	ce15                	beqz	a2,20013524 <__gedf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
200134ea:	e511                	bnez	a0,200134f6 <__gedf2+0x62>
200134ec:	00d58a63          	beq	a1,a3,20013500 <__gedf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 108)
200134f0:	c985                	beqz	a1,20013520 <__gedf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
200134f2:	55fd                	li	a1,-1
200134f4:	a021                	j	200134fc <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 74)
200134f6:	55fd                	li	a1,-1
200134f8:	c291                	beqz	a3,200134fc <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
200134fa:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:49
200134fc:	852e                	mv	a0,a1
200134fe:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 87)
20013500:	ff0748e3          	blt	a4,a6,200134f0 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 93)
20013504:	00e85463          	bge	a6,a4,2001350c <__gedf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 118)
20013508:	f9f5                	bnez	a1,200134fc <__gedf2+0x68>
2001350a:	b7e5                	j	200134f2 <__gedf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 99)
2001350c:	ff17e2e3          	bltu	a5,a7,200134f0 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 105)
20013510:	00f89c63          	bne	a7,a5,20013528 <__gedf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 106)
20013514:	fc6e6ee3          	bltu	t3,t1,200134f0 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 116)
20013518:	ffc368e3          	bltu	t1,t3,20013508 <__gedf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
2001351c:	4581                	li	a1,0
2001351e:	bff9                	j	200134fc <__gedf2+0x68>
20013520:	4585                	li	a1,1
20013522:	bfe9                	j	200134fc <__gedf2+0x68>
20013524:	fd65                	bnez	a0,2001351c <__gedf2+0x88>
20013526:	b7e9                	j	200134f0 <__gedf2+0x5c>
20013528:	fef8e0e3          	bltu	a7,a5,20013508 <__gedf2+0x74>
2001352c:	bfc5                	j	2001351c <__gedf2+0x88>
2001352e:	fb0701e3          	beq	a4,a6,200134d0 <__gedf2+0x3c>
20013532:	ff4d                	bnez	a4,200134ec <__gedf2+0x58>
20013534:	4501                	li	a0,0
20013536:	bf45                	j	200134e6 <__gedf2+0x52>

20013538 <__ledf2>:
__ledf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20013538:	0145d813          	srli	a6,a1,0x14
2001353c:	001007b7          	lui	a5,0x100
20013540:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20013542:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20013546:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2001354a:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
2001354e:	00b7f8b3          	and	a7,a5,a1
20013552:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20013554:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20013556:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20013558:	8e32                	mv	t3,a2
2001355a:	7ff77713          	andi	a4,a4,2047
2001355e:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20013560:	01d81863          	bne	a6,t4,20013570 <__ledf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 18)
20013564:	00a8eeb3          	or	t4,a7,a0
20013568:	060e8563          	beqz	t4,200135d2 <__ledf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2001356c:	4589                	li	a1,2
2001356e:	a80d                	j	200135a0 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 21)
20013570:	01d71663          	bne	a4,t4,2001357c <__ledf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 22)
20013574:	00c7eeb3          	or	t4,a5,a2
20013578:	fe0e9ae3          	bnez	t4,2001356c <__ledf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 57)
2001357c:	04081d63          	bnez	a6,200135d6 <__ledf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 58)
20013580:	00a8e533          	or	a0,a7,a0
20013584:	00153513          	seqz	a0,a0
20013588:	e319                	bnez	a4,2001358e <__ledf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 64)
2001358a:	8e5d                	or	a2,a2,a5
2001358c:	ce15                	beqz	a2,200135c8 <__ledf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2001358e:	e511                	bnez	a0,2001359a <__ledf2+0x62>
20013590:	00d58a63          	beq	a1,a3,200135a4 <__ledf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 108)
20013594:	c985                	beqz	a1,200135c4 <__ledf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20013596:	55fd                	li	a1,-1
20013598:	a021                	j	200135a0 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 74)
2001359a:	55fd                	li	a1,-1
2001359c:	c291                	beqz	a3,200135a0 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2001359e:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:49
200135a0:	852e                	mv	a0,a1
200135a2:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 87)
200135a4:	ff0748e3          	blt	a4,a6,20013594 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 93)
200135a8:	00e85463          	bge	a6,a4,200135b0 <__ledf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 118)
200135ac:	f9f5                	bnez	a1,200135a0 <__ledf2+0x68>
200135ae:	b7e5                	j	20013596 <__ledf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 99)
200135b0:	ff17e2e3          	bltu	a5,a7,20013594 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 105)
200135b4:	00f89c63          	bne	a7,a5,200135cc <__ledf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 106)
200135b8:	fc6e6ee3          	bltu	t3,t1,20013594 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 116)
200135bc:	ffc368e3          	bltu	t1,t3,200135ac <__ledf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
200135c0:	4581                	li	a1,0
200135c2:	bff9                	j	200135a0 <__ledf2+0x68>
200135c4:	4585                	li	a1,1
200135c6:	bfe9                	j	200135a0 <__ledf2+0x68>
200135c8:	fd65                	bnez	a0,200135c0 <__ledf2+0x88>
200135ca:	b7e9                	j	20013594 <__ledf2+0x5c>
200135cc:	fef8e0e3          	bltu	a7,a5,200135ac <__ledf2+0x74>
200135d0:	bfc5                	j	200135c0 <__ledf2+0x88>
200135d2:	fb0701e3          	beq	a4,a6,20013574 <__ledf2+0x3c>
200135d6:	ff4d                	bnez	a4,20013590 <__ledf2+0x58>
200135d8:	4501                	li	a0,0
200135da:	bf45                	j	2001358a <__ledf2+0x52>

200135dc <__muldf3>:
__muldf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
200135dc:	7179                	addi	sp,sp,-48
200135de:	ce4e                	sw	s3,28(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
200135e0:	0145d993          	srli	s3,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
200135e4:	d422                	sw	s0,40(sp)
200135e6:	d226                	sw	s1,36(sp)
200135e8:	cc52                	sw	s4,24(sp)
200135ea:	ca56                	sw	s5,20(sp)
200135ec:	c85a                	sw	s6,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
200135ee:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
200135f2:	d606                	sw	ra,44(sp)
200135f4:	d04a                	sw	s2,32(sp)
200135f6:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
200135f8:	7ff9f993          	andi	s3,s3,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
200135fc:	842a                	mv	s0,a0
200135fe:	8b32                	mv	s6,a2
20013600:	8ab6                	mv	s5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20013602:	80b1                	srli	s1,s1,0xc
20013604:	01f5da13          	srli	s4,a1,0x1f
20013608:	08098163          	beqz	s3,2001368a <__muldf3+0xae>
2001360c:	7ff00793          	li	a5,2047
20013610:	0cf98563          	beq	s3,a5,200136da <__muldf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 1)
20013614:	01d55793          	srli	a5,a0,0x1d
20013618:	048e                	slli	s1,s1,0x3
2001361a:	8cdd                	or	s1,s1,a5
2001361c:	008007b7          	lui	a5,0x800
20013620:	8cdd                	or	s1,s1,a5
20013622:	00351913          	slli	s2,a0,0x3
20013626:	c0198993          	addi	s3,s3,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
2001362a:	4b81                	li	s7,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
2001362c:	014ad513          	srli	a0,s5,0x14
20013630:	00ca9413          	slli	s0,s5,0xc
20013634:	7ff57513          	andi	a0,a0,2047
20013638:	8031                	srli	s0,s0,0xc
2001363a:	01fada93          	srli	s5,s5,0x1f
2001363e:	c161                	beqz	a0,200136fe <__muldf3+0x122>
20013640:	7ff00793          	li	a5,2047
20013644:	10f50563          	beq	a0,a5,2001374e <__muldf3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 1)
20013648:	01db5793          	srli	a5,s6,0x1d
2001364c:	040e                	slli	s0,s0,0x3
2001364e:	8c5d                	or	s0,s0,a5
20013650:	008007b7          	lui	a5,0x800
20013654:	8c5d                	or	s0,s0,a5
20013656:	c0150513          	addi	a0,a0,-1023 # 7fc01 <__heap_size+0x7f401>
2001365a:	003b1793          	slli	a5,s6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
2001365e:	4701                	li	a4,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
20013660:	002b9693          	slli	a3,s7,0x2
20013664:	8ed9                	or	a3,a3,a4
20013666:	954e                	add	a0,a0,s3
20013668:	16fd                	addi	a3,a3,-1
2001366a:	45b9                	li	a1,14
2001366c:	015a4633          	xor	a2,s4,s5
20013670:	00150813          	addi	a6,a0,1
20013674:	0ed5ee63          	bltu	a1,a3,20013770 <__muldf3+0x194>
20013678:	00005597          	auipc	a1,0x5
2001367c:	40458593          	addi	a1,a1,1028 # 20018a7c <pow10.2193+0x8c>
20013680:	068a                	slli	a3,a3,0x2
20013682:	96ae                	add	a3,a3,a1
20013684:	4294                	lw	a3,0(a3)
20013686:	96ae                	add	a3,a3,a1
20013688:	8682                	jr	a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 2)
2001368a:	00a4e933          	or	s2,s1,a0
2001368e:	04090f63          	beqz	s2,200136ec <__muldf3+0x110>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 12)
20013692:	c88d                	beqz	s1,200136c4 <__muldf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 16)
20013694:	8526                	mv	a0,s1
20013696:	2f3000ef          	jal	ra,20014188 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 27)
2001369a:	ff550713          	addi	a4,a0,-11
2001369e:	47f1                	li	a5,28
200136a0:	02e7c763          	blt	a5,a4,200136ce <__muldf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 28)
200136a4:	47f5                	li	a5,29
200136a6:	ff850913          	addi	s2,a0,-8
200136aa:	8f99                	sub	a5,a5,a4
200136ac:	012494b3          	sll	s1,s1,s2
200136b0:	00f457b3          	srl	a5,s0,a5
200136b4:	8cdd                	or	s1,s1,a5
200136b6:	01241933          	sll	s2,s0,s2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
200136ba:	c0d00993          	li	s3,-1011
200136be:	40a989b3          	sub	s3,s3,a0
200136c2:	b7a5                	j	2001362a <__muldf3+0x4e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 20)
200136c4:	2c5000ef          	jal	ra,20014188 <__clzsi2>
200136c8:	02050513          	addi	a0,a0,32
200136cc:	b7f9                	j	2001369a <__muldf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 29)
200136ce:	fd850493          	addi	s1,a0,-40
200136d2:	009414b3          	sll	s1,s0,s1
200136d6:	4901                	li	s2,0
200136d8:	b7cd                	j	200136ba <__muldf3+0xde>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 3)
200136da:	00a4e933          	or	s2,s1,a0
200136de:	00090b63          	beqz	s2,200136f4 <__muldf3+0x118>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
200136e2:	892a                	mv	s2,a0
200136e4:	7ff00993          	li	s3,2047
200136e8:	4b8d                	li	s7,3
200136ea:	b789                	j	2001362c <__muldf3+0x50>
200136ec:	4481                	li	s1,0
200136ee:	4981                	li	s3,0
200136f0:	4b85                	li	s7,1
200136f2:	bf2d                	j	2001362c <__muldf3+0x50>
200136f4:	4481                	li	s1,0
200136f6:	7ff00993          	li	s3,2047
200136fa:	4b89                	li	s7,2
200136fc:	bf05                	j	2001362c <__muldf3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 2)
200136fe:	016467b3          	or	a5,s0,s6
20013702:	cfb1                	beqz	a5,2001375e <__muldf3+0x182>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 12)
20013704:	c80d                	beqz	s0,20013736 <__muldf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 16)
20013706:	8522                	mv	a0,s0
20013708:	281000ef          	jal	ra,20014188 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 27)
2001370c:	ff550693          	addi	a3,a0,-11
20013710:	47f1                	li	a5,28
20013712:	02d7c863          	blt	a5,a3,20013742 <__muldf3+0x166>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 28)
20013716:	4775                	li	a4,29
20013718:	ff850793          	addi	a5,a0,-8
2001371c:	8f15                	sub	a4,a4,a3
2001371e:	00f41433          	sll	s0,s0,a5
20013722:	00eb5733          	srl	a4,s6,a4
20013726:	8c59                	or	s0,s0,a4
20013728:	00fb17b3          	sll	a5,s6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
2001372c:	c0d00713          	li	a4,-1011
20013730:	40a70533          	sub	a0,a4,a0
20013734:	b72d                	j	2001365e <__muldf3+0x82>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 20)
20013736:	855a                	mv	a0,s6
20013738:	251000ef          	jal	ra,20014188 <__clzsi2>
2001373c:	02050513          	addi	a0,a0,32
20013740:	b7f1                	j	2001370c <__muldf3+0x130>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 29)
20013742:	fd850413          	addi	s0,a0,-40
20013746:	008b1433          	sll	s0,s6,s0
2001374a:	4781                	li	a5,0
2001374c:	b7c5                	j	2001372c <__muldf3+0x150>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 3)
2001374e:	016467b3          	or	a5,s0,s6
20013752:	cb91                	beqz	a5,20013766 <__muldf3+0x18a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
20013754:	87da                	mv	a5,s6
20013756:	7ff00513          	li	a0,2047
2001375a:	470d                	li	a4,3
2001375c:	b711                	j	20013660 <__muldf3+0x84>
2001375e:	4401                	li	s0,0
20013760:	4501                	li	a0,0
20013762:	4705                	li	a4,1
20013764:	bdf5                	j	20013660 <__muldf3+0x84>
20013766:	4401                	li	s0,0
20013768:	7ff00513          	li	a0,2047
2001376c:	4709                	li	a4,2
2001376e:	bdcd                	j	20013660 <__muldf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 2)
20013770:	6f41                	lui	t5,0x10
20013772:	ffff0e93          	addi	t4,t5,-1 # ffff <__heap_size+0xf7ff>
20013776:	01095713          	srli	a4,s2,0x10
2001377a:	0107d893          	srli	a7,a5,0x10
2001377e:	01d97933          	and	s2,s2,t4
20013782:	01d7f7b3          	and	a5,a5,t4
20013786:	032885b3          	mul	a1,a7,s2
2001378a:	032786b3          	mul	a3,a5,s2
2001378e:	02f70fb3          	mul	t6,a4,a5
20013792:	01f58333          	add	t1,a1,t6
20013796:	0106d593          	srli	a1,a3,0x10
2001379a:	959a                	add	a1,a1,t1
2001379c:	03170e33          	mul	t3,a4,a7
200137a0:	01f5f363          	bgeu	a1,t6,200137a6 <__muldf3+0x1ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 9)
200137a4:	9e7a                	add	t3,t3,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 11)
200137a6:	0105d393          	srli	t2,a1,0x10
200137aa:	01d5f5b3          	and	a1,a1,t4
200137ae:	01d6f6b3          	and	a3,a3,t4
200137b2:	01045f13          	srli	t5,s0,0x10
200137b6:	01d472b3          	and	t0,s0,t4
200137ba:	05c2                	slli	a1,a1,0x10
200137bc:	95b6                	add	a1,a1,a3
200137be:	02570eb3          	mul	t4,a4,t0
200137c2:	032286b3          	mul	a3,t0,s2
200137c6:	032f0933          	mul	s2,t5,s2
200137ca:	01d90333          	add	t1,s2,t4
200137ce:	0106d913          	srli	s2,a3,0x10
200137d2:	991a                	add	s2,s2,t1
200137d4:	03e70733          	mul	a4,a4,t5
200137d8:	01d97463          	bgeu	s2,t4,200137e0 <__muldf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 12)
200137dc:	6341                	lui	t1,0x10
200137de:	971a                	add	a4,a4,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 14)
200137e0:	01095e93          	srli	t4,s2,0x10
200137e4:	69c1                	lui	s3,0x10
200137e6:	9eba                	add	t4,t4,a4
200137e8:	fff98713          	addi	a4,s3,-1 # ffff <__heap_size+0xf7ff>
200137ec:	00e97933          	and	s2,s2,a4
200137f0:	8ef9                	and	a3,a3,a4
200137f2:	0104d413          	srli	s0,s1,0x10
200137f6:	0942                	slli	s2,s2,0x10
200137f8:	8cf9                	and	s1,s1,a4
200137fa:	9936                	add	s2,s2,a3
200137fc:	02978733          	mul	a4,a5,s1
20013800:	93ca                	add	t2,t2,s2
20013802:	02f40333          	mul	t1,s0,a5
20013806:	029886b3          	mul	a3,a7,s1
2001380a:	028887b3          	mul	a5,a7,s0
2001380e:	006688b3          	add	a7,a3,t1
20013812:	01075693          	srli	a3,a4,0x10
20013816:	96c6                	add	a3,a3,a7
20013818:	0066f363          	bgeu	a3,t1,2001381e <__muldf3+0x242>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 15)
2001381c:	97ce                	add	a5,a5,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 17)
2001381e:	0106d893          	srli	a7,a3,0x10
20013822:	69c1                	lui	s3,0x10
20013824:	00f88fb3          	add	t6,a7,a5
20013828:	fff98793          	addi	a5,s3,-1 # ffff <__heap_size+0xf7ff>
2001382c:	8efd                	and	a3,a3,a5
2001382e:	8f7d                	and	a4,a4,a5
20013830:	029288b3          	mul	a7,t0,s1
20013834:	06c2                	slli	a3,a3,0x10
20013836:	96ba                	add	a3,a3,a4
20013838:	025407b3          	mul	a5,s0,t0
2001383c:	029f04b3          	mul	s1,t5,s1
20013840:	028f0333          	mul	t1,t5,s0
20013844:	94be                	add	s1,s1,a5
20013846:	0108d413          	srli	s0,a7,0x10
2001384a:	94a2                	add	s1,s1,s0
2001384c:	00f4f363          	bgeu	s1,a5,20013852 <__muldf3+0x276>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 18)
20013850:	934e                	add	t1,t1,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 20)
20013852:	67c1                	lui	a5,0x10
20013854:	17fd                	addi	a5,a5,-1
20013856:	00f4f733          	and	a4,s1,a5
2001385a:	00f8f8b3          	and	a7,a7,a5
2001385e:	0742                	slli	a4,a4,0x10
20013860:	9e1e                	add	t3,t3,t2
20013862:	9746                	add	a4,a4,a7
20013864:	012e3933          	sltu	s2,t3,s2
20013868:	9776                	add	a4,a4,t4
2001386a:	01270433          	add	s0,a4,s2
2001386e:	9e36                	add	t3,t3,a3
20013870:	00de36b3          	sltu	a3,t3,a3
20013874:	01f408b3          	add	a7,s0,t6
20013878:	00d88f33          	add	t5,a7,a3
2001387c:	01d73733          	sltu	a4,a4,t4
20013880:	01243433          	sltu	s0,s0,s2
20013884:	8c59                	or	s0,s0,a4
20013886:	80c1                	srli	s1,s1,0x10
20013888:	01f8b8b3          	sltu	a7,a7,t6
2001388c:	00df36b3          	sltu	a3,t5,a3
20013890:	9426                	add	s0,s0,s1
20013892:	00d8e6b3          	or	a3,a7,a3
20013896:	9436                	add	s0,s0,a3
20013898:	941a                	add	s0,s0,t1
2001389a:	017f5793          	srli	a5,t5,0x17
2001389e:	0426                	slli	s0,s0,0x9
200138a0:	8c5d                	or	s0,s0,a5
200138a2:	009e1793          	slli	a5,t3,0x9
200138a6:	8fcd                	or	a5,a5,a1
200138a8:	00f037b3          	snez	a5,a5
200138ac:	017e5e13          	srli	t3,t3,0x17
200138b0:	009f1713          	slli	a4,t5,0x9
200138b4:	01c7e7b3          	or	a5,a5,t3
200138b8:	8fd9                	or	a5,a5,a4
200138ba:	00741713          	slli	a4,s0,0x7
200138be:	0a075863          	bgez	a4,2001396e <__muldf3+0x392>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 38)
200138c2:	0017d713          	srli	a4,a5,0x1
200138c6:	8b85                	andi	a5,a5,1
200138c8:	8fd9                	or	a5,a5,a4
200138ca:	01f41713          	slli	a4,s0,0x1f
200138ce:	8fd9                	or	a5,a5,a4
200138d0:	8005                	srli	s0,s0,0x1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 2)
200138d2:	3ff80693          	addi	a3,a6,1023
200138d6:	08d05e63          	blez	a3,20013972 <__muldf3+0x396>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 6)
200138da:	0077f713          	andi	a4,a5,7
200138de:	cf01                	beqz	a4,200138f6 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 8)
200138e0:	00f7f713          	andi	a4,a5,15
200138e4:	4591                	li	a1,4
200138e6:	00b70863          	beq	a4,a1,200138f6 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 10)
200138ea:	00478713          	addi	a4,a5,4 # 10004 <__heap_size+0xf804>
200138ee:	00f737b3          	sltu	a5,a4,a5
200138f2:	943e                	add	s0,s0,a5
200138f4:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 9)
200138f6:	00741713          	slli	a4,s0,0x7
200138fa:	00075863          	bgez	a4,2001390a <__muldf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 24)
200138fe:	ff000737          	lui	a4,0xff000
20013902:	177d                	addi	a4,a4,-1
20013904:	8c79                	and	s0,s0,a4
20013906:	40080693          	addi	a3,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 26)
2001390a:	7fe00713          	li	a4,2046
2001390e:	0ed74c63          	blt	a4,a3,20013a06 <__muldf3+0x42a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20013912:	0037d713          	srli	a4,a5,0x3
20013916:	01d41793          	slli	a5,s0,0x1d
2001391a:	8fd9                	or	a5,a5,a4
2001391c:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 120)
2001391e:	0432                	slli	s0,s0,0xc
20013920:	7ff6f713          	andi	a4,a3,2047
20013924:	0752                	slli	a4,a4,0x14
20013926:	8031                	srli	s0,s0,0xc
20013928:	8c59                	or	s0,s0,a4
2001392a:	067e                	slli	a2,a2,0x1f
2001392c:	00c46733          	or	a4,s0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:51 (discriminator 120)
20013930:	50b2                	lw	ra,44(sp)
20013932:	5422                	lw	s0,40(sp)
20013934:	5492                	lw	s1,36(sp)
20013936:	5902                	lw	s2,32(sp)
20013938:	49f2                	lw	s3,28(sp)
2001393a:	4a62                	lw	s4,24(sp)
2001393c:	4ad2                	lw	s5,20(sp)
2001393e:	4b42                	lw	s6,16(sp)
20013940:	4bb2                	lw	s7,12(sp)
20013942:	853e                	mv	a0,a5
20013944:	85ba                	mv	a1,a4
20013946:	6145                	addi	sp,sp,48
20013948:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 7)
2001394a:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 7)
2001394c:	8426                	mv	s0,s1
2001394e:	87ca                	mv	a5,s2
20013950:	875e                	mv	a4,s7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20013952:	4689                	li	a3,2
20013954:	0ad70963          	beq	a4,a3,20013a06 <__muldf3+0x42a>
20013958:	468d                	li	a3,3
2001395a:	08d70f63          	beq	a4,a3,200139f8 <__muldf3+0x41c>
2001395e:	4685                	li	a3,1
20013960:	f6d719e3          	bne	a4,a3,200138d2 <__muldf3+0x2f6>
20013964:	4401                	li	s0,0
20013966:	4781                	li	a5,0
20013968:	a09d                	j	200139ce <__muldf3+0x3f2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 4)
2001396a:	8656                	mv	a2,s5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 4)
2001396c:	b7dd                	j	20013952 <__muldf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
2001396e:	882a                	mv	a6,a0
20013970:	b78d                	j	200138d2 <__muldf3+0x2f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 59)
20013972:	4585                	li	a1,1
20013974:	8d95                	sub	a1,a1,a3
20013976:	03800713          	li	a4,56
2001397a:	feb745e3          	blt	a4,a1,20013964 <__muldf3+0x388>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 60)
2001397e:	477d                	li	a4,31
20013980:	04b74963          	blt	a4,a1,200139d2 <__muldf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 62)
20013984:	41e80813          	addi	a6,a6,1054
20013988:	01041733          	sll	a4,s0,a6
2001398c:	00b7d6b3          	srl	a3,a5,a1
20013990:	010797b3          	sll	a5,a5,a6
20013994:	8f55                	or	a4,a4,a3
20013996:	00f037b3          	snez	a5,a5
2001399a:	8fd9                	or	a5,a5,a4
2001399c:	00b45433          	srl	s0,s0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 75)
200139a0:	0077f713          	andi	a4,a5,7
200139a4:	cf01                	beqz	a4,200139bc <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 76)
200139a6:	00f7f713          	andi	a4,a5,15
200139aa:	4691                	li	a3,4
200139ac:	00d70863          	beq	a4,a3,200139bc <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 78)
200139b0:	00478713          	addi	a4,a5,4
200139b4:	00f737b3          	sltu	a5,a4,a5
200139b8:	943e                	add	s0,s0,a5
200139ba:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 77)
200139bc:	00841713          	slli	a4,s0,0x8
200139c0:	04074863          	bltz	a4,20013a10 <__muldf3+0x434>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 93)
200139c4:	01d41713          	slli	a4,s0,0x1d
200139c8:	838d                	srli	a5,a5,0x3
200139ca:	8fd9                	or	a5,a5,a4
200139cc:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
200139ce:	4681                	li	a3,0
200139d0:	b7b9                	j	2001391e <__muldf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 63)
200139d2:	5705                	li	a4,-31
200139d4:	8f15                	sub	a4,a4,a3
200139d6:	02000513          	li	a0,32
200139da:	00e45733          	srl	a4,s0,a4
200139de:	4681                	li	a3,0
200139e0:	00a58663          	beq	a1,a0,200139ec <__muldf3+0x410>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 71)
200139e4:	43e80813          	addi	a6,a6,1086
200139e8:	010416b3          	sll	a3,s0,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 74)
200139ec:	8fd5                	or	a5,a5,a3
200139ee:	00f037b3          	snez	a5,a5
200139f2:	8fd9                	or	a5,a5,a4
200139f4:	4401                	li	s0,0
200139f6:	b76d                	j	200139a0 <__muldf3+0x3c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
200139f8:	00080437          	lui	s0,0x80
200139fc:	4781                	li	a5,0
200139fe:	7ff00693          	li	a3,2047
20013a02:	4601                	li	a2,0
20013a04:	bf29                	j	2001391e <__muldf3+0x342>
20013a06:	4401                	li	s0,0
20013a08:	4781                	li	a5,0
20013a0a:	7ff00693          	li	a3,2047
20013a0e:	bf01                	j	2001391e <__muldf3+0x342>
20013a10:	4401                	li	s0,0
20013a12:	4781                	li	a5,0
20013a14:	4685                	li	a3,1
20013a16:	b721                	j	2001391e <__muldf3+0x342>

20013a18 <__subdf3>:
__subdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20013a18:	00100837          	lui	a6,0x100
20013a1c:	187d                	addi	a6,a6,-1
20013a1e:	00b878b3          	and	a7,a6,a1
20013a22:	088e                	slli	a7,a7,0x3
20013a24:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20013a28:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20013a2a:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013a2e:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20013a32:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013a36:	0146d893          	srli	a7,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20013a3a:	ca26                	sw	s1,20(sp)
20013a3c:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20013a3e:	7ff77493          	andi	s1,a4,2047
20013a42:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013a46:	01d65713          	srli	a4,a2,0x1d
20013a4a:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20013a4c:	ce06                	sw	ra,28(sp)
20013a4e:	cc22                	sw	s0,24(sp)
20013a50:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013a52:	7ff8f893          	andi	a7,a7,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013a56:	7ff00593          	li	a1,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20013a5a:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013a5c:	82fd                	srli	a3,a3,0x1f
20013a5e:	01076733          	or	a4,a4,a6
20013a62:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013a64:	00b89563          	bne	a7,a1,20013a6e <__subdf3+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 2)
20013a68:	00c765b3          	or	a1,a4,a2
20013a6c:	e199                	bnez	a1,20013a72 <__subdf3+0x5a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 3)
20013a6e:	0016c693          	xori	a3,a3,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 11)
20013a72:	41148833          	sub	a6,s1,a7
20013a76:	23269363          	bne	a3,s2,20013c9c <__subdf3+0x284>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 12)
20013a7a:	0f005c63          	blez	a6,20013b72 <__subdf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 14)
20013a7e:	04089563          	bnez	a7,20013ac8 <__subdf3+0xb0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 16)
20013a82:	00c766b3          	or	a3,a4,a2
20013a86:	c28d                	beqz	a3,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 19)
20013a88:	fff48813          	addi	a6,s1,-1 # 7ffff <__heap_size+0x7f7ff>
20013a8c:	00081a63          	bnez	a6,20013aa0 <__subdf3+0x88>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 28)
20013a90:	962a                	add	a2,a2,a0
20013a92:	00a63533          	sltu	a0,a2,a0
20013a96:	97ba                	add	a5,a5,a4
20013a98:	97aa                	add	a5,a5,a0
20013a9a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 85)
20013a9c:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
20013a9e:	a895                	j	20013b12 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 29)
20013aa0:	7ff00693          	li	a3,2047
20013aa4:	02d49963          	bne	s1,a3,20013ad6 <__subdf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 422)
20013aa8:	00757713          	andi	a4,a0,7
20013aac:	4e070063          	beqz	a4,20013f8c <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 37)
20013ab0:	00f57713          	andi	a4,a0,15
20013ab4:	4691                	li	a3,4
20013ab6:	4cd70b63          	beq	a4,a3,20013f8c <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 44)
20013aba:	00450693          	addi	a3,a0,4
20013abe:	00a6b533          	sltu	a0,a3,a0
20013ac2:	97aa                	add	a5,a5,a0
20013ac4:	8536                	mv	a0,a3
20013ac6:	a1d9                	j	20013f8c <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 17)
20013ac8:	7ff00693          	li	a3,2047
20013acc:	fcd48ee3          	beq	s1,a3,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 43)
20013ad0:	008006b7          	lui	a3,0x800
20013ad4:	8f55                	or	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 52)
20013ad6:	03800693          	li	a3,56
20013ada:	0906c863          	blt	a3,a6,20013b6a <__subdf3+0x152>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 53)
20013ade:	46fd                	li	a3,31
20013ae0:	0706c063          	blt	a3,a6,20013b40 <__subdf3+0x128>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 55)
20013ae4:	02000593          	li	a1,32
20013ae8:	410585b3          	sub	a1,a1,a6
20013aec:	00b716b3          	sll	a3,a4,a1
20013af0:	010658b3          	srl	a7,a2,a6
20013af4:	00b61633          	sll	a2,a2,a1
20013af8:	0116e6b3          	or	a3,a3,a7
20013afc:	00c03633          	snez	a2,a2
20013b00:	8e55                	or	a2,a2,a3
20013b02:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 69)
20013b06:	962a                	add	a2,a2,a0
20013b08:	973e                	add	a4,a4,a5
20013b0a:	00a637b3          	sltu	a5,a2,a0
20013b0e:	97ba                	add	a5,a5,a4
20013b10:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 127)
20013b12:	00879713          	slli	a4,a5,0x8
20013b16:	f80759e3          	bgez	a4,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 187)
20013b1a:	0485                	addi	s1,s1,1
20013b1c:	7ff00713          	li	a4,2047
20013b20:	46e48463          	beq	s1,a4,20013f88 <__subdf3+0x570>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013b24:	ff8006b7          	lui	a3,0xff800
20013b28:	16fd                	addi	a3,a3,-1
20013b2a:	8efd                	and	a3,a3,a5
20013b2c:	00155593          	srli	a1,a0,0x1
20013b30:	8905                	andi	a0,a0,1
20013b32:	01f69793          	slli	a5,a3,0x1f
20013b36:	8d4d                	or	a0,a0,a1
20013b38:	8d5d                	or	a0,a0,a5
20013b3a:	0016d793          	srli	a5,a3,0x1
20013b3e:	b7ad                	j	20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 56)
20013b40:	fe080693          	addi	a3,a6,-32 # fffe0 <__heap_size+0xff7e0>
20013b44:	02000893          	li	a7,32
20013b48:	00d756b3          	srl	a3,a4,a3
20013b4c:	4581                	li	a1,0
20013b4e:	01180863          	beq	a6,a7,20013b5e <__subdf3+0x146>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 63)
20013b52:	04000593          	li	a1,64
20013b56:	41058833          	sub	a6,a1,a6
20013b5a:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 66)
20013b5e:	8e4d                	or	a2,a2,a1
20013b60:	00c03633          	snez	a2,a2
20013b64:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 54)
20013b66:	4701                	li	a4,0
20013b68:	bf79                	j	20013b06 <__subdf3+0xee>
20013b6a:	8e59                	or	a2,a2,a4
20013b6c:	00c03633          	snez	a2,a2
20013b70:	bfdd                	j	20013b66 <__subdf3+0x14e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 15)
20013b72:	0a080b63          	beqz	a6,20013c28 <__subdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 71)
20013b76:	409885b3          	sub	a1,a7,s1
20013b7a:	e48d                	bnez	s1,20013ba4 <__subdf3+0x18c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 73)
20013b7c:	00a7e6b3          	or	a3,a5,a0
20013b80:	3e068b63          	beqz	a3,20013f76 <__subdf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 76)
20013b84:	fff58693          	addi	a3,a1,-1
20013b88:	e699                	bnez	a3,20013b96 <__subdf3+0x17e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
20013b8a:	9532                	add	a0,a0,a2
20013b8c:	97ba                	add	a5,a5,a4
20013b8e:	00c53633          	sltu	a2,a0,a2
20013b92:	97b2                	add	a5,a5,a2
20013b94:	b721                	j	20013a9c <__subdf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 86)
20013b96:	7ff00813          	li	a6,2047
20013b9a:	01059d63          	bne	a1,a6,20013bb4 <__subdf3+0x19c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013b9e:	87ba                	mv	a5,a4
20013ba0:	8532                	mv	a0,a2
20013ba2:	ace5                	j	20013e9a <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 74)
20013ba4:	7ff00693          	li	a3,2047
20013ba8:	fed88be3          	beq	a7,a3,20013b9e <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 100)
20013bac:	008006b7          	lui	a3,0x800
20013bb0:	8fd5                	or	a5,a5,a3
20013bb2:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 109)
20013bb4:	03800593          	li	a1,56
20013bb8:	06d5c463          	blt	a1,a3,20013c20 <__subdf3+0x208>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 110)
20013bbc:	45fd                	li	a1,31
20013bbe:	02d5cb63          	blt	a1,a3,20013bf4 <__subdf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 112)
20013bc2:	02000813          	li	a6,32
20013bc6:	40d80833          	sub	a6,a6,a3
20013bca:	00d55333          	srl	t1,a0,a3
20013bce:	010795b3          	sll	a1,a5,a6
20013bd2:	01051533          	sll	a0,a0,a6
20013bd6:	0065e5b3          	or	a1,a1,t1
20013bda:	00a03533          	snez	a0,a0
20013bde:	8d4d                	or	a0,a0,a1
20013be0:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 126)
20013be4:	9532                	add	a0,a0,a2
20013be6:	00e687b3          	add	a5,a3,a4
20013bea:	00c53633          	sltu	a2,a0,a2
20013bee:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 126)
20013bf0:	84c6                	mv	s1,a7
20013bf2:	b705                	j	20013b12 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 113)
20013bf4:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20013bf8:	02000313          	li	t1,32
20013bfc:	00b7d5b3          	srl	a1,a5,a1
20013c00:	4801                	li	a6,0
20013c02:	00668863          	beq	a3,t1,20013c12 <__subdf3+0x1fa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 120)
20013c06:	04000813          	li	a6,64
20013c0a:	40d806b3          	sub	a3,a6,a3
20013c0e:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 123)
20013c12:	00a86533          	or	a0,a6,a0
20013c16:	00a03533          	snez	a0,a0
20013c1a:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 111)
20013c1c:	4681                	li	a3,0
20013c1e:	b7d9                	j	20013be4 <__subdf3+0x1cc>
20013c20:	8d5d                	or	a0,a0,a5
20013c22:	00a03533          	snez	a0,a0
20013c26:	bfdd                	j	20013c1c <__subdf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 72)
20013c28:	00148693          	addi	a3,s1,1
20013c2c:	7fe6f593          	andi	a1,a3,2046
20013c30:	e5a9                	bnez	a1,20013c7a <__subdf3+0x262>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 128)
20013c32:	00a7e6b3          	or	a3,a5,a0
20013c36:	e49d                	bnez	s1,20013c64 <__subdf3+0x24c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 130)
20013c38:	34068363          	beqz	a3,20013f7e <__subdf3+0x566>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 133)
20013c3c:	00c766b3          	or	a3,a4,a2
20013c40:	e60684e3          	beqz	a3,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 139)
20013c44:	962a                	add	a2,a2,a0
20013c46:	97ba                	add	a5,a5,a4
20013c48:	00a63533          	sltu	a0,a2,a0
20013c4c:	97aa                	add	a5,a5,a0
20013c4e:	00879713          	slli	a4,a5,0x8
20013c52:	8532                	mv	a0,a2
20013c54:	e4075ae3          	bgez	a4,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 141)
20013c58:	ff800737          	lui	a4,0xff800
20013c5c:	177d                	addi	a4,a4,-1
20013c5e:	8ff9                	and	a5,a5,a4
20013c60:	4485                	li	s1,1
20013c62:	b599                	j	20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 158)
20013c64:	de8d                	beqz	a3,20013b9e <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 160)
20013c66:	8e59                	or	a2,a2,a4
20013c68:	22060963          	beqz	a2,20013e9a <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013c6c:	4901                	li	s2,0
20013c6e:	004007b7          	lui	a5,0x400
20013c72:	4501                	li	a0,0
20013c74:	7ff00493          	li	s1,2047
20013c78:	ae11                	j	20013f8c <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 129)
20013c7a:	7ff00593          	li	a1,2047
20013c7e:	30b68363          	beq	a3,a1,20013f84 <__subdf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013c82:	962a                	add	a2,a2,a0
20013c84:	973e                	add	a4,a4,a5
20013c86:	00a637b3          	sltu	a5,a2,a0
20013c8a:	973e                	add	a4,a4,a5
20013c8c:	01f71513          	slli	a0,a4,0x1f
20013c90:	8205                	srli	a2,a2,0x1
20013c92:	8d51                	or	a0,a0,a2
20013c94:	00175793          	srli	a5,a4,0x1
20013c98:	84b6                	mv	s1,a3
20013c9a:	b539                	j	20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 13)
20013c9c:	0d005563          	blez	a6,20013d66 <__subdf3+0x34e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 205)
20013ca0:	08089263          	bnez	a7,20013d24 <__subdf3+0x30c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 207)
20013ca4:	00c766b3          	or	a3,a4,a2
20013ca8:	e00680e3          	beqz	a3,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 210)
20013cac:	fff48813          	addi	a6,s1,-1
20013cb0:	00081b63          	bnez	a6,20013cc6 <__subdf3+0x2ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 219)
20013cb4:	40c50633          	sub	a2,a0,a2
20013cb8:	00c53533          	sltu	a0,a0,a2
20013cbc:	8f99                	sub	a5,a5,a4
20013cbe:	8f89                	sub	a5,a5,a0
20013cc0:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 276)
20013cc2:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20013cc4:	a0b1                	j	20013d10 <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 220)
20013cc6:	7ff00693          	li	a3,2047
20013cca:	dcd48fe3          	beq	s1,a3,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 243)
20013cce:	03800693          	li	a3,56
20013cd2:	0906c663          	blt	a3,a6,20013d5e <__subdf3+0x346>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 244)
20013cd6:	46fd                	li	a3,31
20013cd8:	0506ce63          	blt	a3,a6,20013d34 <__subdf3+0x31c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 246)
20013cdc:	02000593          	li	a1,32
20013ce0:	410585b3          	sub	a1,a1,a6
20013ce4:	00b716b3          	sll	a3,a4,a1
20013ce8:	010658b3          	srl	a7,a2,a6
20013cec:	00b61633          	sll	a2,a2,a1
20013cf0:	0116e6b3          	or	a3,a3,a7
20013cf4:	00c03633          	snez	a2,a2
20013cf8:	8e55                	or	a2,a2,a3
20013cfa:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 260)
20013cfe:	40c50633          	sub	a2,a0,a2
20013d02:	40e78733          	sub	a4,a5,a4
20013d06:	00c537b3          	sltu	a5,a0,a2
20013d0a:	40f707b3          	sub	a5,a4,a5
20013d0e:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 318)
20013d10:	00879713          	slli	a4,a5,0x8
20013d14:	d8075ae3          	bgez	a4,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 378)
20013d18:	00800437          	lui	s0,0x800
20013d1c:	147d                	addi	s0,s0,-1
20013d1e:	8c7d                	and	s0,s0,a5
20013d20:	89aa                	mv	s3,a0
20013d22:	a26d                	j	20013ecc <__subdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 208)
20013d24:	7ff00693          	li	a3,2047
20013d28:	d8d480e3          	beq	s1,a3,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 234)
20013d2c:	008006b7          	lui	a3,0x800
20013d30:	8f55                	or	a4,a4,a3
20013d32:	bf71                	j	20013cce <__subdf3+0x2b6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 247)
20013d34:	fe080693          	addi	a3,a6,-32
20013d38:	02000893          	li	a7,32
20013d3c:	00d756b3          	srl	a3,a4,a3
20013d40:	4581                	li	a1,0
20013d42:	01180863          	beq	a6,a7,20013d52 <__subdf3+0x33a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 254)
20013d46:	04000593          	li	a1,64
20013d4a:	41058833          	sub	a6,a1,a6
20013d4e:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 257)
20013d52:	8e4d                	or	a2,a2,a1
20013d54:	00c03633          	snez	a2,a2
20013d58:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 245)
20013d5a:	4701                	li	a4,0
20013d5c:	b74d                	j	20013cfe <__subdf3+0x2e6>
20013d5e:	8e59                	or	a2,a2,a4
20013d60:	00c03633          	snez	a2,a2
20013d64:	bfdd                	j	20013d5a <__subdf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 206)
20013d66:	0c080463          	beqz	a6,20013e2e <__subdf3+0x416>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 262)
20013d6a:	40988833          	sub	a6,a7,s1
20013d6e:	e895                	bnez	s1,20013da2 <__subdf3+0x38a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 264)
20013d70:	00a7e5b3          	or	a1,a5,a0
20013d74:	26058b63          	beqz	a1,20013fea <__subdf3+0x5d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 267)
20013d78:	fff80593          	addi	a1,a6,-1
20013d7c:	e991                	bnez	a1,20013d90 <__subdf3+0x378>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20013d7e:	40a60533          	sub	a0,a2,a0
20013d82:	40f707b3          	sub	a5,a4,a5
20013d86:	00a63633          	sltu	a2,a2,a0
20013d8a:	8f91                	sub	a5,a5,a2
20013d8c:	8936                	mv	s2,a3
20013d8e:	bf15                	j	20013cc2 <__subdf3+0x2aa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 277)
20013d90:	7ff00313          	li	t1,2047
20013d94:	00681f63          	bne	a6,t1,20013db2 <__subdf3+0x39a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013d98:	87ba                	mv	a5,a4
20013d9a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013d9c:	7ff00493          	li	s1,2047
20013da0:	a07d                	j	20013e4e <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 265)
20013da2:	7ff00593          	li	a1,2047
20013da6:	feb889e3          	beq	a7,a1,20013d98 <__subdf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 291)
20013daa:	008005b7          	lui	a1,0x800
20013dae:	8fcd                	or	a5,a5,a1
20013db0:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 300)
20013db2:	03800813          	li	a6,56
20013db6:	06b84863          	blt	a6,a1,20013e26 <__subdf3+0x40e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 301)
20013dba:	487d                	li	a6,31
20013dbc:	02b84e63          	blt	a6,a1,20013df8 <__subdf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 303)
20013dc0:	02000313          	li	t1,32
20013dc4:	40b30333          	sub	t1,t1,a1
20013dc8:	00b55e33          	srl	t3,a0,a1
20013dcc:	00679833          	sll	a6,a5,t1
20013dd0:	00651533          	sll	a0,a0,t1
20013dd4:	01c86833          	or	a6,a6,t3
20013dd8:	00a03533          	snez	a0,a0
20013ddc:	00a86533          	or	a0,a6,a0
20013de0:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 317)
20013de4:	40a60533          	sub	a0,a2,a0
20013de8:	40b707b3          	sub	a5,a4,a1
20013dec:	00a63633          	sltu	a2,a2,a0
20013df0:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 317)
20013df2:	84c6                	mv	s1,a7
20013df4:	8936                	mv	s2,a3
20013df6:	bf29                	j	20013d10 <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 304)
20013df8:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20013dfc:	02000e13          	li	t3,32
20013e00:	0107d833          	srl	a6,a5,a6
20013e04:	4301                	li	t1,0
20013e06:	01c58863          	beq	a1,t3,20013e16 <__subdf3+0x3fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 311)
20013e0a:	04000313          	li	t1,64
20013e0e:	40b305b3          	sub	a1,t1,a1
20013e12:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 314)
20013e16:	00a36533          	or	a0,t1,a0
20013e1a:	00a03533          	snez	a0,a0
20013e1e:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 302)
20013e22:	4581                	li	a1,0
20013e24:	b7c1                	j	20013de4 <__subdf3+0x3cc>
20013e26:	8d5d                	or	a0,a0,a5
20013e28:	00a03533          	snez	a0,a0
20013e2c:	bfdd                	j	20013e22 <__subdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 263)
20013e2e:	00148593          	addi	a1,s1,1
20013e32:	7fe5f593          	andi	a1,a1,2046
20013e36:	e5bd                	bnez	a1,20013ea4 <__subdf3+0x48c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 319)
20013e38:	00a7e833          	or	a6,a5,a0
20013e3c:	00c765b3          	or	a1,a4,a2
20013e40:	e4b1                	bnez	s1,20013e8c <__subdf3+0x474>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 321)
20013e42:	00081863          	bnez	a6,20013e52 <__subdf3+0x43a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 323)
20013e46:	1a058663          	beqz	a1,20013ff2 <__subdf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013e4a:	87ba                	mv	a5,a4
20013e4c:	8532                	mv	a0,a2
20013e4e:	8936                	mv	s2,a3
20013e50:	b9a1                	j	20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 324)
20013e52:	c4058be3          	beqz	a1,20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 331)
20013e56:	40c50833          	sub	a6,a0,a2
20013e5a:	40e785b3          	sub	a1,a5,a4
20013e5e:	010538b3          	sltu	a7,a0,a6
20013e62:	411585b3          	sub	a1,a1,a7
20013e66:	00859413          	slli	s0,a1,0x8
20013e6a:	00045a63          	bgez	s0,20013e7e <__subdf3+0x466>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 333)
20013e6e:	40a60533          	sub	a0,a2,a0
20013e72:	40f707b3          	sub	a5,a4,a5
20013e76:	00a63633          	sltu	a2,a2,a0
20013e7a:	8f91                	sub	a5,a5,a2
20013e7c:	bfc9                	j	20013e4e <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 334)
20013e7e:	00b86533          	or	a0,a6,a1
20013e82:	16050c63          	beqz	a0,20013ffa <__subdf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013e86:	87ae                	mv	a5,a1
20013e88:	8542                	mv	a0,a6
20013e8a:	b939                	j	20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 353)
20013e8c:	00081a63          	bnez	a6,20013ea0 <__subdf3+0x488>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 354)
20013e90:	16058763          	beqz	a1,20013ffe <__subdf3+0x5e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013e94:	87ba                	mv	a5,a4
20013e96:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013e98:	8936                	mv	s2,a3
20013e9a:	7ff00493          	li	s1,2047
20013e9e:	b129                	j	20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 355)
20013ea0:	dded                	beqz	a1,20013e9a <__subdf3+0x482>
20013ea2:	b3e9                	j	20013c6c <__subdf3+0x254>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 320)
20013ea4:	40c509b3          	sub	s3,a0,a2
20013ea8:	013535b3          	sltu	a1,a0,s3
20013eac:	40e78433          	sub	s0,a5,a4
20013eb0:	8c0d                	sub	s0,s0,a1
20013eb2:	00841593          	slli	a1,s0,0x8
20013eb6:	0605d663          	bgez	a1,20013f22 <__subdf3+0x50a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 371)
20013eba:	40a609b3          	sub	s3,a2,a0
20013ebe:	40f707b3          	sub	a5,a4,a5
20013ec2:	01363633          	sltu	a2,a2,s3
20013ec6:	40c78433          	sub	s0,a5,a2
20013eca:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 380)
20013ecc:	c02d                	beqz	s0,20013f2e <__subdf3+0x516>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 383)
20013ece:	8522                	mv	a0,s0
20013ed0:	2c65                	jal	20014188 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 394)
20013ed2:	ff850713          	addi	a4,a0,-8
20013ed6:	47fd                	li	a5,31
20013ed8:	06e7c063          	blt	a5,a4,20013f38 <__subdf3+0x520>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 395)
20013edc:	02000793          	li	a5,32
20013ee0:	8f99                	sub	a5,a5,a4
20013ee2:	00e41433          	sll	s0,s0,a4
20013ee6:	00f9d7b3          	srl	a5,s3,a5
20013eea:	8c5d                	or	s0,s0,a5
20013eec:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 404)
20013ef0:	06974d63          	blt	a4,s1,20013f6a <__subdf3+0x552>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 405)
20013ef4:	8f05                	sub	a4,a4,s1
20013ef6:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7fddb5>
20013efa:	46fd                	li	a3,31
20013efc:	04f6c463          	blt	a3,a5,20013f44 <__subdf3+0x52c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 407)
20013f00:	02000713          	li	a4,32
20013f04:	8f1d                	sub	a4,a4,a5
20013f06:	00f55633          	srl	a2,a0,a5
20013f0a:	00e416b3          	sll	a3,s0,a4
20013f0e:	00e51533          	sll	a0,a0,a4
20013f12:	8ed1                	or	a3,a3,a2
20013f14:	00a03533          	snez	a0,a0
20013f18:	8d55                	or	a0,a0,a3
20013f1a:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
20013f1e:	4481                	li	s1,0
20013f20:	b661                	j	20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 372)
20013f22:	0089e533          	or	a0,s3,s0
20013f26:	f15d                	bnez	a0,20013ecc <__subdf3+0x4b4>
20013f28:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013f2a:	4481                	li	s1,0
20013f2c:	a0e9                	j	20013ff6 <__subdf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 387)
20013f2e:	854e                	mv	a0,s3
20013f30:	2ca1                	jal	20014188 <__clzsi2>
20013f32:	02050513          	addi	a0,a0,32
20013f36:	bf71                	j	20013ed2 <__subdf3+0x4ba>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 396)
20013f38:	fd850413          	addi	s0,a0,-40
20013f3c:	00899433          	sll	s0,s3,s0
20013f40:	4501                	li	a0,0
20013f42:	b77d                	j	20013ef0 <__subdf3+0x4d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 408)
20013f44:	1705                	addi	a4,a4,-31
20013f46:	02000613          	li	a2,32
20013f4a:	00e45733          	srl	a4,s0,a4
20013f4e:	4681                	li	a3,0
20013f50:	00c78763          	beq	a5,a2,20013f5e <__subdf3+0x546>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 416)
20013f54:	04000693          	li	a3,64
20013f58:	8e9d                	sub	a3,a3,a5
20013f5a:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
20013f5e:	8d55                	or	a0,a0,a3
20013f60:	00a03533          	snez	a0,a0
20013f64:	8d59                	or	a0,a0,a4
20013f66:	4781                	li	a5,0
20013f68:	bf5d                	j	20013f1e <__subdf3+0x506>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 406)
20013f6a:	ff8007b7          	lui	a5,0xff800
20013f6e:	17fd                	addi	a5,a5,-1
20013f70:	8c99                	sub	s1,s1,a4
20013f72:	8fe1                	and	a5,a5,s0
20013f74:	be15                	j	20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013f76:	87ba                	mv	a5,a4
20013f78:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013f7a:	84ae                	mv	s1,a1
20013f7c:	b635                	j	20013aa8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013f7e:	87ba                	mv	a5,a4
20013f80:	8532                	mv	a0,a2
20013f82:	b61d                	j	20013aa8 <__subdf3+0x90>
20013f84:	7ff00493          	li	s1,2047
20013f88:	4781                	li	a5,0
20013f8a:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 47)
20013f8c:	00879713          	slli	a4,a5,0x8
20013f90:	00075b63          	bgez	a4,20013fa6 <__subdf3+0x58e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 63)
20013f94:	0485                	addi	s1,s1,1
20013f96:	7ff00713          	li	a4,2047
20013f9a:	06e48763          	beq	s1,a4,20014008 <__subdf3+0x5f0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
20013f9e:	ff800737          	lui	a4,0xff800
20013fa2:	177d                	addi	a4,a4,-1
20013fa4:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 79)
20013fa6:	01d79713          	slli	a4,a5,0x1d
20013faa:	810d                	srli	a0,a0,0x3
20013fac:	8d59                	or	a0,a0,a4
20013fae:	7ff00713          	li	a4,2047
20013fb2:	838d                	srli	a5,a5,0x3
20013fb4:	00e49963          	bne	s1,a4,20013fc6 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 80)
20013fb8:	8d5d                	or	a0,a0,a5
20013fba:	4781                	li	a5,0
20013fbc:	c509                	beqz	a0,20013fc6 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
20013fbe:	000807b7          	lui	a5,0x80
20013fc2:	4501                	li	a0,0
20013fc4:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20013fc6:	7ff4f713          	andi	a4,s1,2047
20013fca:	07b2                	slli	a5,a5,0xc
20013fcc:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
20013fce:	40f2                	lw	ra,28(sp)
20013fd0:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20013fd2:	83b1                	srli	a5,a5,0xc
20013fd4:	01f91593          	slli	a1,s2,0x1f
20013fd8:	8fd9                	or	a5,a5,a4
20013fda:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
20013fde:	44d2                	lw	s1,20(sp)
20013fe0:	4942                	lw	s2,16(sp)
20013fe2:	49b2                	lw	s3,12(sp)
20013fe4:	85ba                	mv	a1,a4
20013fe6:	6105                	addi	sp,sp,32
20013fe8:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20013fea:	87ba                	mv	a5,a4
20013fec:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20013fee:	84c2                	mv	s1,a6
20013ff0:	bdb9                	j	20013e4e <__subdf3+0x436>
20013ff2:	4781                	li	a5,0
20013ff4:	4501                	li	a0,0
20013ff6:	4901                	li	s2,0
20013ff8:	bf51                	j	20013f8c <__subdf3+0x574>
20013ffa:	4781                	li	a5,0
20013ffc:	bfed                	j	20013ff6 <__subdf3+0x5de>
20013ffe:	4501                	li	a0,0
20014000:	4901                	li	s2,0
20014002:	004007b7          	lui	a5,0x400
20014006:	b1bd                	j	20013c74 <__subdf3+0x25c>
20014008:	4781                	li	a5,0
2001400a:	4501                	li	a0,0
2001400c:	bf69                	j	20013fa6 <__subdf3+0x58e>

2001400e <__fixdfsi>:
__fixdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
2001400e:	0145d713          	srli	a4,a1,0x14
20014012:	001006b7          	lui	a3,0x100
20014016:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
2001401a:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
2001401e:	3fe00613          	li	a2,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
20014022:	8fed                	and	a5,a5,a1
20014024:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20014026:	04e65463          	bge	a2,a4,2001406e <__fixdfsi+0x60>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 10)
2001402a:	41d00613          	li	a2,1053
2001402e:	00e65863          	bge	a2,a4,2001403e <__fixdfsi+0x30>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 13)
20014032:	80000537          	lui	a0,0x80000
20014036:	fff54513          	not	a0,a0
2001403a:	952e                	add	a0,a0,a1
2001403c:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 12)
2001403e:	8fd5                	or	a5,a5,a3
20014040:	43300693          	li	a3,1075
20014044:	8e99                	sub	a3,a3,a4
20014046:	467d                	li	a2,31
20014048:	00d64d63          	blt	a2,a3,20014062 <__fixdfsi+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 29)
2001404c:	bed70713          	addi	a4,a4,-1043 # ff7ffbed <metal_segment_heap_target_end+0x7f7fd9a1>
20014050:	00e797b3          	sll	a5,a5,a4
20014054:	00d55533          	srl	a0,a0,a3
20014058:	8d5d                	or	a0,a0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 42)
2001405a:	c999                	beqz	a1,20014070 <__fixdfsi+0x62>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 44)
2001405c:	40a00533          	neg	a0,a0
20014060:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 41)
20014062:	41300513          	li	a0,1043
20014066:	8d19                	sub	a0,a0,a4
20014068:	00a7d533          	srl	a0,a5,a0
2001406c:	b7fd                	j	2001405a <__fixdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
2001406e:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:47
20014070:	8082                	ret

20014072 <__fixunsdfsi>:
__fixunsdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20014072:	0145d713          	srli	a4,a1,0x14
20014076:	001006b7          	lui	a3,0x100
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:36
2001407a:	862a                	mv	a2,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
2001407c:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
20014080:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20014084:	3fe00513          	li	a0,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20014088:	8fed                	and	a5,a5,a1
2001408a:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
2001408c:	02e55f63          	bge	a0,a4,200140ca <__fixunsdfsi+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 10)
20014090:	4501                	li	a0,0
20014092:	e591                	bnez	a1,2001409e <__fixunsdfsi+0x2c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20014094:	41e00593          	li	a1,1054
20014098:	557d                	li	a0,-1
2001409a:	00e5d363          	bge	a1,a4,200140a0 <__fixunsdfsi+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:47
2001409e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 18)
200140a0:	8fd5                	or	a5,a5,a3
200140a2:	43300693          	li	a3,1075
200140a6:	8e99                	sub	a3,a3,a4
200140a8:	45fd                	li	a1,31
200140aa:	00d5ca63          	blt	a1,a3,200140be <__fixunsdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 33)
200140ae:	bed70713          	addi	a4,a4,-1043
200140b2:	00e797b3          	sll	a5,a5,a4
200140b6:	00d65533          	srl	a0,a2,a3
200140ba:	8d5d                	or	a0,a0,a5
200140bc:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 45)
200140be:	41300513          	li	a0,1043
200140c2:	8d19                	sub	a0,a0,a4
200140c4:	00a7d533          	srl	a0,a5,a0
200140c8:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
200140ca:	4501                	li	a0,0
200140cc:	8082                	ret

200140ce <__floatsidf>:
__floatsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:37
200140ce:	1141                	addi	sp,sp,-16
200140d0:	c606                	sw	ra,12(sp)
200140d2:	c422                	sw	s0,8(sp)
200140d4:	c226                	sw	s1,4(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
200140d6:	cd31                	beqz	a0,20014132 <__floatsidf+0x64>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 1)
200140d8:	41f55793          	srai	a5,a0,0x1f
200140dc:	00a7c433          	xor	s0,a5,a0
200140e0:	8c1d                	sub	s0,s0,a5
200140e2:	01f55493          	srli	s1,a0,0x1f
200140e6:	8522                	mv	a0,s0
200140e8:	2045                	jal	20014188 <__clzsi2>
200140ea:	41e00713          	li	a4,1054
200140ee:	47a9                	li	a5,10
200140f0:	8f09                	sub	a4,a4,a0
200140f2:	02a7ca63          	blt	a5,a0,20014126 <__floatsidf+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 23)
200140f6:	47ad                	li	a5,11
200140f8:	8f89                	sub	a5,a5,a0
200140fa:	0555                	addi	a0,a0,21
200140fc:	00f457b3          	srl	a5,s0,a5
20014100:	00a41433          	sll	s0,s0,a0
20014104:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:42
20014106:	07b2                	slli	a5,a5,0xc
20014108:	7ff77713          	andi	a4,a4,2047
2001410c:	0752                	slli	a4,a4,0x14
2001410e:	83b1                	srli	a5,a5,0xc
20014110:	057e                	slli	a0,a0,0x1f
20014112:	8fd9                	or	a5,a5,a4
20014114:	00a7e733          	or	a4,a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:45
20014118:	40b2                	lw	ra,12(sp)
2001411a:	8522                	mv	a0,s0
2001411c:	4422                	lw	s0,8(sp)
2001411e:	4492                	lw	s1,4(sp)
20014120:	85ba                	mv	a1,a4
20014122:	0141                	addi	sp,sp,16
20014124:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 24)
20014126:	1555                	addi	a0,a0,-11
20014128:	00a417b3          	sll	a5,s0,a0
2001412c:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
2001412e:	4401                	li	s0,0
20014130:	bfd9                	j	20014106 <__floatsidf+0x38>
20014132:	4701                	li	a4,0
20014134:	4781                	li	a5,0
20014136:	bfe5                	j	2001412e <__floatsidf+0x60>

20014138 <__floatunsidf>:
__floatunsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:37
20014138:	1141                	addi	sp,sp,-16
2001413a:	c422                	sw	s0,8(sp)
2001413c:	c606                	sw	ra,12(sp)
2001413e:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
20014140:	c129                	beqz	a0,20014182 <__floatunsidf+0x4a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 6)
20014142:	2099                	jal	20014188 <__clzsi2>
20014144:	41e00713          	li	a4,1054
20014148:	47a9                	li	a5,10
2001414a:	8f09                	sub	a4,a4,a0
2001414c:	02a7c663          	blt	a5,a0,20014178 <__floatunsidf+0x40>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 23)
20014150:	47ad                	li	a5,11
20014152:	8f89                	sub	a5,a5,a0
20014154:	0555                	addi	a0,a0,21
20014156:	00f457b3          	srl	a5,s0,a5
2001415a:	00a41433          	sll	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
2001415e:	8522                	mv	a0,s0
20014160:	40b2                	lw	ra,12(sp)
20014162:	4422                	lw	s0,8(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:42
20014164:	07b2                	slli	a5,a5,0xc
20014166:	7ff77713          	andi	a4,a4,2047
2001416a:	0752                	slli	a4,a4,0x14
2001416c:	83b1                	srli	a5,a5,0xc
2001416e:	00e7e6b3          	or	a3,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
20014172:	85b6                	mv	a1,a3
20014174:	0141                	addi	sp,sp,16
20014176:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 24)
20014178:	1555                	addi	a0,a0,-11
2001417a:	00a417b3          	sll	a5,s0,a0
2001417e:	4401                	li	s0,0
20014180:	bff9                	j	2001415e <__floatunsidf+0x26>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
20014182:	4781                	li	a5,0
20014184:	4701                	li	a4,0
20014186:	bfe1                	j	2001415e <__floatunsidf+0x26>

20014188 <__clzsi2>:
__clzsi2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
20014188:	67c1                	lui	a5,0x10
2001418a:	02f57663          	bgeu	a0,a5,200141b6 <__clzsi2+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 3)
2001418e:	0ff00793          	li	a5,255
20014192:	00a7b7b3          	sltu	a5,a5,a0
20014196:	078e                	slli	a5,a5,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 14)
20014198:	02000713          	li	a4,32
2001419c:	8f1d                	sub	a4,a4,a5
2001419e:	00f557b3          	srl	a5,a0,a5
200141a2:	00005517          	auipc	a0,0x5
200141a6:	91650513          	addi	a0,a0,-1770 # 20018ab8 <__clz_tab>
200141aa:	97aa                	add	a5,a5,a0
200141ac:	0007c503          	lbu	a0,0(a5) # 10000 <__heap_size+0xf800>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:713 (discriminator 14)
200141b0:	40a70533          	sub	a0,a4,a0
200141b4:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 4)
200141b6:	01000737          	lui	a4,0x1000
200141ba:	47c1                	li	a5,16
200141bc:	fce56ee3          	bltu	a0,a4,20014198 <__clzsi2+0x10>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
200141c0:	47e1                	li	a5,24
200141c2:	bfd9                	j	20014198 <__clzsi2+0x10>

200141c4 <_write>:
_write():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:9
#include <unistd.h>

/* Write to a file.  */
ssize_t
_write(int file, const void *ptr, size_t len)
{
200141c4:	7179                	addi	sp,sp,-48
200141c6:	d606                	sw	ra,44(sp)
200141c8:	d422                	sw	s0,40(sp)
200141ca:	1800                	addi	s0,sp,48
200141cc:	fca42e23          	sw	a0,-36(s0) # 7fffdc <__heap_size+0x7ff7dc>
200141d0:	fcb42c23          	sw	a1,-40(s0)
200141d4:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:10
  if (file != STDOUT_FILENO) {
200141d8:	fdc42703          	lw	a4,-36(s0)
200141dc:	4785                	li	a5,1
200141de:	00f70963          	beq	a4,a5,200141f0 <_write+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:11
    errno = ENOSYS;
200141e2:	28a9                	jal	2001423c <__errno>
200141e4:	872a                	mv	a4,a0
200141e6:	05800793          	li	a5,88
200141ea:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:12
    return -1;
200141ec:	57fd                	li	a5,-1
200141ee:	a82d                	j	20014228 <_write+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:15
  }

  const char *bptr = ptr;
200141f0:	fd842783          	lw	a5,-40(s0)
200141f4:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16
  for (size_t i = 0; i < len; ++i)
200141f8:	fe042623          	sw	zero,-20(s0)
200141fc:	a839                	j	2001421a <_write+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:17 (discriminator 3)
    metal_tty_putc(bptr[i]);
200141fe:	fe842703          	lw	a4,-24(s0)
20014202:	fec42783          	lw	a5,-20(s0)
20014206:	97ba                	add	a5,a5,a4
20014208:	0007c783          	lbu	a5,0(a5)
2001420c:	853e                	mv	a0,a5
2001420e:	2c91                	jal	20014462 <metal_tty_putc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 3)
  for (size_t i = 0; i < len; ++i)
20014210:	fec42783          	lw	a5,-20(s0)
20014214:	0785                	addi	a5,a5,1
20014216:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 1)
2001421a:	fec42703          	lw	a4,-20(s0)
2001421e:	fd442783          	lw	a5,-44(s0)
20014222:	fcf76ee3          	bltu	a4,a5,200141fe <_write+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:18
  return 0;
20014226:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:19
}
20014228:	853e                	mv	a0,a5
2001422a:	50b2                	lw	ra,44(sp)
2001422c:	5422                	lw	s0,40(sp)
2001422e:	6145                	addi	sp,sp,48
20014230:	8082                	ret

20014232 <atexit>:
atexit():
20014232:	85aa                	mv	a1,a0
20014234:	4681                	li	a3,0
20014236:	4601                	li	a2,0
20014238:	4501                	li	a0,0
2001423a:	a8f1                	j	20014316 <__register_exitproc>

2001423c <__errno>:
__errno():
2001423c:	5ffed797          	auipc	a5,0x5ffed
20014240:	01c78793          	addi	a5,a5,28 # 80001258 <_impure_ptr>
20014244:	4388                	lw	a0,0(a5)
20014246:	8082                	ret

20014248 <exit>:
exit():
20014248:	1141                	addi	sp,sp,-16
2001424a:	c422                	sw	s0,8(sp)
2001424c:	c606                	sw	ra,12(sp)
2001424e:	00000797          	auipc	a5,0x0
20014252:	14c78793          	addi	a5,a5,332 # 2001439a <__call_exitprocs>
20014256:	842a                	mv	s0,a0
20014258:	c399                	beqz	a5,2001425e <exit+0x16>
2001425a:	4581                	li	a1,0
2001425c:	2a3d                	jal	2001439a <__call_exitprocs>
2001425e:	5ffed797          	auipc	a5,0x5ffed
20014262:	ffe78793          	addi	a5,a5,-2 # 8000125c <_global_impure_ptr>
20014266:	4388                	lw	a0,0(a5)
20014268:	551c                	lw	a5,40(a0)
2001426a:	c391                	beqz	a5,2001426e <exit+0x26>
2001426c:	9782                	jalr	a5
2001426e:	8522                	mv	a0,s0
20014270:	4c0040ef          	jal	ra,20018730 <_exit>

20014274 <__libc_fini_array>:
__libc_fini_array():
20014274:	1141                	addi	sp,sp,-16
20014276:	00005797          	auipc	a5,0x5
2001427a:	52e78793          	addi	a5,a5,1326 # 200197a4 <__fini_array_end>
2001427e:	c422                	sw	s0,8(sp)
20014280:	00005417          	auipc	s0,0x5
20014284:	52440413          	addi	s0,s0,1316 # 200197a4 <__fini_array_end>
20014288:	8c1d                	sub	s0,s0,a5
2001428a:	c226                	sw	s1,4(sp)
2001428c:	c606                	sw	ra,12(sp)
2001428e:	8409                	srai	s0,s0,0x2
20014290:	84be                	mv	s1,a5
20014292:	e411                	bnez	s0,2001429e <__libc_fini_array+0x2a>
20014294:	40b2                	lw	ra,12(sp)
20014296:	4422                	lw	s0,8(sp)
20014298:	4492                	lw	s1,4(sp)
2001429a:	0141                	addi	sp,sp,16
2001429c:	8082                	ret
2001429e:	147d                	addi	s0,s0,-1
200142a0:	00241793          	slli	a5,s0,0x2
200142a4:	97a6                	add	a5,a5,s1
200142a6:	439c                	lw	a5,0(a5)
200142a8:	9782                	jalr	a5
200142aa:	b7e5                	j	20014292 <__libc_fini_array+0x1e>

200142ac <__libc_init_array>:
__libc_init_array():
200142ac:	1141                	addi	sp,sp,-16
200142ae:	00005797          	auipc	a5,0x5
200142b2:	4ea78793          	addi	a5,a5,1258 # 20019798 <__init_array_start>
200142b6:	c422                	sw	s0,8(sp)
200142b8:	00005417          	auipc	s0,0x5
200142bc:	4e040413          	addi	s0,s0,1248 # 20019798 <__init_array_start>
200142c0:	8c1d                	sub	s0,s0,a5
200142c2:	c226                	sw	s1,4(sp)
200142c4:	c04a                	sw	s2,0(sp)
200142c6:	c606                	sw	ra,12(sp)
200142c8:	8409                	srai	s0,s0,0x2
200142ca:	4481                	li	s1,0
200142cc:	893e                	mv	s2,a5
200142ce:	02849663          	bne	s1,s0,200142fa <__libc_init_array+0x4e>
200142d2:	00005797          	auipc	a5,0x5
200142d6:	4c678793          	addi	a5,a5,1222 # 20019798 <__init_array_start>
200142da:	00005417          	auipc	s0,0x5
200142de:	4ca40413          	addi	s0,s0,1226 # 200197a4 <__fini_array_end>
200142e2:	8c1d                	sub	s0,s0,a5
200142e4:	8409                	srai	s0,s0,0x2
200142e6:	4481                	li	s1,0
200142e8:	893e                	mv	s2,a5
200142ea:	00849f63          	bne	s1,s0,20014308 <__libc_init_array+0x5c>
200142ee:	40b2                	lw	ra,12(sp)
200142f0:	4422                	lw	s0,8(sp)
200142f2:	4492                	lw	s1,4(sp)
200142f4:	4902                	lw	s2,0(sp)
200142f6:	0141                	addi	sp,sp,16
200142f8:	8082                	ret
200142fa:	00249793          	slli	a5,s1,0x2
200142fe:	97ca                	add	a5,a5,s2
20014300:	439c                	lw	a5,0(a5)
20014302:	0485                	addi	s1,s1,1
20014304:	9782                	jalr	a5
20014306:	b7e1                	j	200142ce <__libc_init_array+0x22>
20014308:	00249793          	slli	a5,s1,0x2
2001430c:	97ca                	add	a5,a5,s2
2001430e:	439c                	lw	a5,0(a5)
20014310:	0485                	addi	s1,s1,1
20014312:	9782                	jalr	a5
20014314:	bfd9                	j	200142ea <__libc_init_array+0x3e>

20014316 <__register_exitproc>:
__register_exitproc():
20014316:	5ffed797          	auipc	a5,0x5ffed
2001431a:	f8278793          	addi	a5,a5,-126 # 80001298 <metal_segment_data_target_end>
2001431e:	439c                	lw	a5,0(a5)
20014320:	8e2a                	mv	t3,a0
20014322:	e38d                	bnez	a5,20014344 <__register_exitproc+0x2e>
20014324:	b6418713          	addi	a4,gp,-1180 # 800015bc <_global_atexit0>
20014328:	5ffed797          	auipc	a5,0x5ffed
2001432c:	f6e7a823          	sw	a4,-144(a5) # 80001298 <metal_segment_data_target_end>
20014330:	dffec517          	auipc	a0,0xdffec
20014334:	cd050513          	addi	a0,a0,-816 # 0 <__metal_boot_hart>
20014338:	87ba                	mv	a5,a4
2001433a:	c509                	beqz	a0,20014344 <__register_exitproc+0x2e>
2001433c:	411c                	lw	a5,0(a0)
2001433e:	bef1a623          	sw	a5,-1044(gp) # 80001644 <_global_atexit0+0x88>
20014342:	87ba                	mv	a5,a4
20014344:	43d8                	lw	a4,4(a5)
20014346:	487d                	li	a6,31
20014348:	557d                	li	a0,-1
2001434a:	04e84763          	blt	a6,a4,20014398 <__register_exitproc+0x82>
2001434e:	020e0e63          	beqz	t3,2001438a <__register_exitproc+0x74>
20014352:	0887a803          	lw	a6,136(a5)
20014356:	04080163          	beqz	a6,20014398 <__register_exitproc+0x82>
2001435a:	00271893          	slli	a7,a4,0x2
2001435e:	98c2                	add	a7,a7,a6
20014360:	00c8a023          	sw	a2,0(a7)
20014364:	10082303          	lw	t1,256(a6)
20014368:	4605                	li	a2,1
2001436a:	00e61633          	sll	a2,a2,a4
2001436e:	00c36333          	or	t1,t1,a2
20014372:	10682023          	sw	t1,256(a6)
20014376:	08d8a023          	sw	a3,128(a7)
2001437a:	4689                	li	a3,2
2001437c:	00de1763          	bne	t3,a3,2001438a <__register_exitproc+0x74>
20014380:	10482683          	lw	a3,260(a6)
20014384:	8e55                	or	a2,a2,a3
20014386:	10c82223          	sw	a2,260(a6)
2001438a:	00170693          	addi	a3,a4,1 # 1000001 <__heap_size+0xfff801>
2001438e:	070a                	slli	a4,a4,0x2
20014390:	c3d4                	sw	a3,4(a5)
20014392:	97ba                	add	a5,a5,a4
20014394:	c78c                	sw	a1,8(a5)
20014396:	4501                	li	a0,0
20014398:	8082                	ret

2001439a <__call_exitprocs>:
__call_exitprocs():
2001439a:	7179                	addi	sp,sp,-48
2001439c:	cc52                	sw	s4,24(sp)
2001439e:	ca56                	sw	s5,20(sp)
200143a0:	c85a                	sw	s6,16(sp)
200143a2:	c65e                	sw	s7,12(sp)
200143a4:	d606                	sw	ra,44(sp)
200143a6:	d422                	sw	s0,40(sp)
200143a8:	d226                	sw	s1,36(sp)
200143aa:	d04a                	sw	s2,32(sp)
200143ac:	ce4e                	sw	s3,28(sp)
200143ae:	c462                	sw	s8,8(sp)
200143b0:	8b2a                	mv	s6,a0
200143b2:	8a2e                	mv	s4,a1
200143b4:	5ffeda97          	auipc	s5,0x5ffed
200143b8:	ee4a8a93          	addi	s5,s5,-284 # 80001298 <metal_segment_data_target_end>
200143bc:	4b85                	li	s7,1
200143be:	000aa403          	lw	s0,0(s5)
200143c2:	c811                	beqz	s0,200143d6 <__call_exitprocs+0x3c>
200143c4:	4044                	lw	s1,4(s0)
200143c6:	08842983          	lw	s3,136(s0)
200143ca:	fff48913          	addi	s2,s1,-1
200143ce:	048a                	slli	s1,s1,0x2
200143d0:	94a2                	add	s1,s1,s0
200143d2:	00095e63          	bgez	s2,200143ee <__call_exitprocs+0x54>
200143d6:	50b2                	lw	ra,44(sp)
200143d8:	5422                	lw	s0,40(sp)
200143da:	5492                	lw	s1,36(sp)
200143dc:	5902                	lw	s2,32(sp)
200143de:	49f2                	lw	s3,28(sp)
200143e0:	4a62                	lw	s4,24(sp)
200143e2:	4ad2                	lw	s5,20(sp)
200143e4:	4b42                	lw	s6,16(sp)
200143e6:	4bb2                	lw	s7,12(sp)
200143e8:	4c22                	lw	s8,8(sp)
200143ea:	6145                	addi	sp,sp,48
200143ec:	8082                	ret
200143ee:	000a0e63          	beqz	s4,2001440a <__call_exitprocs+0x70>
200143f2:	00099563          	bnez	s3,200143fc <__call_exitprocs+0x62>
200143f6:	197d                	addi	s2,s2,-1
200143f8:	14f1                	addi	s1,s1,-4
200143fa:	bfe1                	j	200143d2 <__call_exitprocs+0x38>
200143fc:	00291793          	slli	a5,s2,0x2
20014400:	97ce                	add	a5,a5,s3
20014402:	0807a783          	lw	a5,128(a5)
20014406:	ff4798e3          	bne	a5,s4,200143f6 <__call_exitprocs+0x5c>
2001440a:	4058                	lw	a4,4(s0)
2001440c:	40dc                	lw	a5,4(s1)
2001440e:	177d                	addi	a4,a4,-1
20014410:	03271863          	bne	a4,s2,20014440 <__call_exitprocs+0xa6>
20014414:	01242223          	sw	s2,4(s0)
20014418:	dff9                	beqz	a5,200143f6 <__call_exitprocs+0x5c>
2001441a:	00442c03          	lw	s8,4(s0)
2001441e:	00098863          	beqz	s3,2001442e <__call_exitprocs+0x94>
20014422:	1009a683          	lw	a3,256(s3)
20014426:	012b9733          	sll	a4,s7,s2
2001442a:	8ef9                	and	a3,a3,a4
2001442c:	ee89                	bnez	a3,20014446 <__call_exitprocs+0xac>
2001442e:	9782                	jalr	a5
20014430:	4058                	lw	a4,4(s0)
20014432:	000aa783          	lw	a5,0(s5)
20014436:	f98714e3          	bne	a4,s8,200143be <__call_exitprocs+0x24>
2001443a:	faf40ee3          	beq	s0,a5,200143f6 <__call_exitprocs+0x5c>
2001443e:	b741                	j	200143be <__call_exitprocs+0x24>
20014440:	0004a223          	sw	zero,4(s1)
20014444:	bfd1                	j	20014418 <__call_exitprocs+0x7e>
20014446:	00291693          	slli	a3,s2,0x2
2001444a:	96ce                	add	a3,a3,s3
2001444c:	428c                	lw	a1,0(a3)
2001444e:	1049a683          	lw	a3,260(s3)
20014452:	8f75                	and	a4,a4,a3
20014454:	e701                	bnez	a4,2001445c <__call_exitprocs+0xc2>
20014456:	855a                	mv	a0,s6
20014458:	9782                	jalr	a5
2001445a:	bfd9                	j	20014430 <__call_exitprocs+0x96>
2001445c:	852e                	mv	a0,a1
2001445e:	9782                	jalr	a5
20014460:	bfc1                	j	20014430 <__call_exitprocs+0x96>

20014462 <metal_tty_putc>:
metal_tty_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:12

#if defined(__METAL_DT_STDOUT_UART_HANDLE)
/* This implementation serves as a small shim that interfaces with the first
 * UART on a system. */
int metal_tty_putc(int c)
{
20014462:	1101                	addi	sp,sp,-32
20014464:	ce06                	sw	ra,28(sp)
20014466:	cc22                	sw	s0,24(sp)
20014468:	1000                	addi	s0,sp,32
2001446a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:13
    if (c == '\n') {
2001446e:	fec42703          	lw	a4,-20(s0)
20014472:	47a9                	li	a5,10
20014474:	00f71463          	bne	a4,a5,2001447c <metal_tty_putc+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:14
        metal_tty_putc_raw( '\r' );
20014478:	4535                	li	a0,13
2001447a:	2811                	jal	2001448e <metal_tty_putc_raw>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:16
    }
    return metal_tty_putc_raw( c );
2001447c:	fec42503          	lw	a0,-20(s0)
20014480:	2039                	jal	2001448e <metal_tty_putc_raw>
20014482:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:17
}
20014484:	853e                	mv	a0,a5
20014486:	40f2                	lw	ra,28(sp)
20014488:	4462                	lw	s0,24(sp)
2001448a:	6105                	addi	sp,sp,32
2001448c:	8082                	ret

2001448e <metal_tty_putc_raw>:
metal_tty_putc_raw():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:20

int metal_tty_putc_raw(int c)
{
2001448e:	1101                	addi	sp,sp,-32
20014490:	ce06                	sw	ra,28(sp)
20014492:	cc22                	sw	s0,24(sp)
20014494:	1000                	addi	s0,sp,32
20014496:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:21
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
2001449a:	fec42583          	lw	a1,-20(s0)
2001449e:	800017b7          	lui	a5,0x80001
200144a2:	1f078513          	addi	a0,a5,496 # 800011f0 <metal_segment_heap_target_end+0xffffefa4>
200144a6:	28b1                	jal	20014502 <metal_uart_putc>
200144a8:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:22
}
200144aa:	853e                	mv	a0,a5
200144ac:	40f2                	lw	ra,28(sp)
200144ae:	4462                	lw	s0,24(sp)
200144b0:	6105                	addi	sp,sp,32
200144b2:	8082                	ret

200144b4 <metal_tty_init>:
metal_tty_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:40
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

static void metal_tty_init(void) __attribute__((constructor));
static void metal_tty_init(void)
{
200144b4:	1141                	addi	sp,sp,-16
200144b6:	c606                	sw	ra,12(sp)
200144b8:	c422                	sw	s0,8(sp)
200144ba:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:41
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
200144bc:	67f1                	lui	a5,0x1c
200144be:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
200144c2:	800017b7          	lui	a5,0x80001
200144c6:	1f078513          	addi	a0,a5,496 # 800011f0 <metal_segment_heap_target_end+0xffffefa4>
200144ca:	2031                	jal	200144d6 <metal_uart_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:42
}
200144cc:	0001                	nop
200144ce:	40b2                	lw	ra,12(sp)
200144d0:	4422                	lw	s0,8(sp)
200144d2:	0141                	addi	sp,sp,16
200144d4:	8082                	ret

200144d6 <metal_uart_init>:
metal_uart_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:44
 * other method on the UART can be invoked. It is invalid to initialize a UART more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) { uart->vtable->init(uart, baud_rate); }
200144d6:	1101                	addi	sp,sp,-32
200144d8:	ce06                	sw	ra,28(sp)
200144da:	cc22                	sw	s0,24(sp)
200144dc:	1000                	addi	s0,sp,32
200144de:	fea42623          	sw	a0,-20(s0)
200144e2:	feb42423          	sw	a1,-24(s0)
200144e6:	fec42783          	lw	a5,-20(s0)
200144ea:	439c                	lw	a5,0(a5)
200144ec:	439c                	lw	a5,0(a5)
200144ee:	fe842583          	lw	a1,-24(s0)
200144f2:	fec42503          	lw	a0,-20(s0)
200144f6:	9782                	jalr	a5
200144f8:	0001                	nop
200144fa:	40f2                	lw	ra,28(sp)
200144fc:	4462                	lw	s0,24(sp)
200144fe:	6105                	addi	sp,sp,32
20014500:	8082                	ret

20014502 <metal_uart_putc>:
metal_uart_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:52
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) { return uart->vtable->putc(uart, c); }
20014502:	1101                	addi	sp,sp,-32
20014504:	ce06                	sw	ra,28(sp)
20014506:	cc22                	sw	s0,24(sp)
20014508:	1000                	addi	s0,sp,32
2001450a:	fea42623          	sw	a0,-20(s0)
2001450e:	feb42423          	sw	a1,-24(s0)
20014512:	fec42783          	lw	a5,-20(s0)
20014516:	439c                	lw	a5,0(a5)
20014518:	43dc                	lw	a5,4(a5)
2001451a:	fe842583          	lw	a1,-24(s0)
2001451e:	fec42503          	lw	a0,-20(s0)
20014522:	9782                	jalr	a5
20014524:	87aa                	mv	a5,a0
20014526:	853e                	mv	a0,a5
20014528:	40f2                	lw	ra,28(sp)
2001452a:	4462                	lw	s0,24(sp)
2001452c:	6105                	addi	sp,sp,32
2001452e:	8082                	ret

20014530 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:85
 * @brief Set the baud rate of the UART peripheral
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart, int baud_rate) { return uart->vtable->set_baud_rate(uart, baud_rate); }
20014530:	1101                	addi	sp,sp,-32
20014532:	ce06                	sw	ra,28(sp)
20014534:	cc22                	sw	s0,24(sp)
20014536:	1000                	addi	s0,sp,32
20014538:	fea42623          	sw	a0,-20(s0)
2001453c:	feb42423          	sw	a1,-24(s0)
20014540:	fec42783          	lw	a5,-20(s0)
20014544:	439c                	lw	a5,0(a5)
20014546:	4bdc                	lw	a5,20(a5)
20014548:	fe842583          	lw	a1,-24(s0)
2001454c:	fec42503          	lw	a0,-20(s0)
20014550:	9782                	jalr	a5
20014552:	87aa                	mv	a5,a0
20014554:	853e                	mv	a0,a5
20014556:	40f2                	lw	ra,28(sp)
20014558:	4462                	lw	s0,24(sp)
2001455a:	6105                	addi	sp,sp,32
2001455c:	8082                	ret

2001455e <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:203
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
2001455e:	1101                	addi	sp,sp,-32
20014560:	ce22                	sw	s0,28(sp)
20014562:	1000                	addi	s0,sp,32
20014564:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:204
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20014568:	fec42703          	lw	a4,-20(s0)
2001456c:	800017b7          	lui	a5,0x80001
20014570:	26478793          	addi	a5,a5,612 # 80001264 <metal_segment_heap_target_end+0xfffff018>
20014574:	00f71563          	bne	a4,a5,2001457e <__metal_driver_sifive_clint0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:205
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20014578:	020007b7          	lui	a5,0x2000
2001457c:	a011                	j	20014580 <__metal_driver_sifive_clint0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:208
	}
	else {
		return 0;
2001457e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:210
	}
}
20014580:	853e                	mv	a0,a5
20014582:	4472                	lw	s0,28(sp)
20014584:	6105                	addi	sp,sp,32
20014586:	8082                	ret

20014588 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:223
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20014588:	1101                	addi	sp,sp,-32
2001458a:	ce22                	sw	s0,28(sp)
2001458c:	1000                	addi	s0,sp,32
2001458e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:224
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20014592:	fec42703          	lw	a4,-20(s0)
20014596:	800017b7          	lui	a5,0x80001
2001459a:	26478793          	addi	a5,a5,612 # 80001264 <metal_segment_heap_target_end+0xfffff018>
2001459e:	00f71463          	bne	a4,a5,200145a6 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:225
		return METAL_MAX_CLINT_INTERRUPTS;
200145a2:	4789                	li	a5,2
200145a4:	a011                	j	200145a8 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:228
	}
	else {
		return 0;
200145a6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:230
	}
}
200145a8:	853e                	mv	a0,a5
200145aa:	4472                	lw	s0,28(sp)
200145ac:	6105                	addi	sp,sp,32
200145ae:	8082                	ret

200145b0 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:233

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200145b0:	1101                	addi	sp,sp,-32
200145b2:	ce22                	sw	s0,28(sp)
200145b4:	1000                	addi	s0,sp,32
200145b6:	fea42623          	sw	a0,-20(s0)
200145ba:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:234
	if (idx == 0) {
200145be:	fe842783          	lw	a5,-24(s0)
200145c2:	e791                	bnez	a5,200145ce <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:235
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200145c4:	800017b7          	lui	a5,0x80001
200145c8:	86078793          	addi	a5,a5,-1952 # 80000860 <metal_segment_heap_target_end+0xffffe614>
200145cc:	a821                	j	200145e4 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:237
	}
	else if (idx == 1) {
200145ce:	fe842703          	lw	a4,-24(s0)
200145d2:	4785                	li	a5,1
200145d4:	00f71763          	bne	a4,a5,200145e2 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:238
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200145d8:	800017b7          	lui	a5,0x80001
200145dc:	86078793          	addi	a5,a5,-1952 # 80000860 <metal_segment_heap_target_end+0xffffe614>
200145e0:	a011                	j	200145e4 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:241
	}
	else {
		return NULL;
200145e2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:243
	}
}
200145e4:	853e                	mv	a0,a5
200145e6:	4472                	lw	s0,28(sp)
200145e8:	6105                	addi	sp,sp,32
200145ea:	8082                	ret

200145ec <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:246

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
200145ec:	1101                	addi	sp,sp,-32
200145ee:	ce22                	sw	s0,28(sp)
200145f0:	1000                	addi	s0,sp,32
200145f2:	fea42623          	sw	a0,-20(s0)
200145f6:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:247
	if (idx == 0) {
200145fa:	fe842783          	lw	a5,-24(s0)
200145fe:	e399                	bnez	a5,20014604 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:248
		return 3;
20014600:	478d                	li	a5,3
20014602:	a809                	j	20014614 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:250
	}
	else if (idx == 1) {
20014604:	fe842703          	lw	a4,-24(s0)
20014608:	4785                	li	a5,1
2001460a:	00f71463          	bne	a4,a5,20014612 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:251
		return 7;
2001460e:	479d                	li	a5,7
20014610:	a011                	j	20014614 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:254
	}
	else {
		return 0;
20014612:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:256
	}
}
20014614:	853e                	mv	a0,a5
20014616:	4472                	lw	s0,28(sp)
20014618:	6105                	addi	sp,sp,32
2001461a:	8082                	ret

2001461c <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/cpu.h>
#include <metal/drivers/riscv_clint0.h>
#include <metal/machine.h>

unsigned long long __metal_clint0_mtime_get (struct __metal_driver_riscv_clint0 *clint)
{
2001461c:	715d                	addi	sp,sp,-80
2001461e:	c686                	sw	ra,76(sp)
20014620:	c4a2                	sw	s0,72(sp)
20014622:	c2ca                	sw	s2,68(sp)
20014624:	c0ce                	sw	s3,64(sp)
20014626:	de52                	sw	s4,60(sp)
20014628:	dc56                	sw	s5,56(sp)
2001462a:	da5a                	sw	s6,52(sp)
2001462c:	d85e                	sw	s7,48(sp)
2001462e:	d662                	sw	s8,44(sp)
20014630:	d466                	sw	s9,40(sp)
20014632:	0880                	addi	s0,sp,80
20014634:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:16
    __metal_io_u32 lo, hi;
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
20014638:	fbc42783          	lw	a5,-68(s0)
2001463c:	853e                	mv	a0,a5
2001463e:	3705                	jal	2001455e <__metal_driver_sifive_clint0_control_base>
20014640:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:20 (discriminator 1)

    /* Guard against rollover when reading */
    do {
	hi = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
20014644:	fcc42703          	lw	a4,-52(s0)
20014648:	67b1                	lui	a5,0xc
2001464a:	17f1                	addi	a5,a5,-4
2001464c:	97ba                	add	a5,a5,a4
2001464e:	439c                	lw	a5,0(a5)
20014650:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)
	lo = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
20014654:	fcc42703          	lw	a4,-52(s0)
20014658:	67b1                	lui	a5,0xc
2001465a:	17e1                	addi	a5,a5,-8
2001465c:	97ba                	add	a5,a5,a4
2001465e:	439c                	lw	a5,0(a5)
20014660:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:22 (discriminator 1)
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4)) != hi);
20014664:	fcc42703          	lw	a4,-52(s0)
20014668:	67b1                	lui	a5,0xc
2001466a:	17f1                	addi	a5,a5,-4
2001466c:	97ba                	add	a5,a5,a4
2001466e:	439c                	lw	a5,0(a5)
20014670:	fc842703          	lw	a4,-56(s0)
20014674:	fcf718e3          	bne	a4,a5,20014644 <__metal_clint0_mtime_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:24

    return (((unsigned long long)hi) << 32) | lo;
20014678:	fc842783          	lw	a5,-56(s0)
2001467c:	8c3e                	mv	s8,a5
2001467e:	4c81                	li	s9,0
20014680:	000c1993          	slli	s3,s8,0x0
20014684:	4901                	li	s2,0
20014686:	fc442783          	lw	a5,-60(s0)
2001468a:	8a3e                	mv	s4,a5
2001468c:	4a81                	li	s5,0
2001468e:	01496b33          	or	s6,s2,s4
20014692:	0159ebb3          	or	s7,s3,s5
20014696:	87da                	mv	a5,s6
20014698:	885e                	mv	a6,s7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25
}
2001469a:	853e                	mv	a0,a5
2001469c:	85c2                	mv	a1,a6
2001469e:	40b6                	lw	ra,76(sp)
200146a0:	4426                	lw	s0,72(sp)
200146a2:	4916                	lw	s2,68(sp)
200146a4:	4986                	lw	s3,64(sp)
200146a6:	5a72                	lw	s4,60(sp)
200146a8:	5ae2                	lw	s5,56(sp)
200146aa:	5b52                	lw	s6,52(sp)
200146ac:	5bc2                	lw	s7,48(sp)
200146ae:	5c32                	lw	s8,44(sp)
200146b0:	5ca2                	lw	s9,40(sp)
200146b2:	6161                	addi	sp,sp,80
200146b4:	8082                	ret

200146b6 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time)
{   
200146b6:	7179                	addi	sp,sp,-48
200146b8:	d606                	sw	ra,44(sp)
200146ba:	d422                	sw	s0,40(sp)
200146bc:	d24a                	sw	s2,36(sp)
200146be:	d04e                	sw	s3,32(sp)
200146c0:	1800                	addi	s0,sp,48
200146c2:	fca42e23          	sw	a0,-36(s0)
200146c6:	fcb42c23          	sw	a1,-40(s0)
200146ca:	fcc42823          	sw	a2,-48(s0)
200146ce:	fcd42a23          	sw	a3,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:31
    struct __metal_driver_riscv_clint0 *clint =
200146d2:	fdc42783          	lw	a5,-36(s0)
200146d6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:33
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
200146da:	fec42783          	lw	a5,-20(s0)
200146de:	853e                	mv	a0,a5
200146e0:	3dbd                	jal	2001455e <__metal_driver_sifive_clint0_control_base>
200146e2:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:40
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = 0xFFFFFFFF;
200146e6:	fd842783          	lw	a5,-40(s0)
200146ea:	078e                	slli	a5,a5,0x3
200146ec:	873e                	mv	a4,a5
200146ee:	fe842783          	lw	a5,-24(s0)
200146f2:	973e                	add	a4,a4,a5
200146f4:	6791                	lui	a5,0x4
200146f6:	0791                	addi	a5,a5,4
200146f8:	97ba                	add	a5,a5,a4
200146fa:	873e                	mv	a4,a5
200146fc:	57fd                	li	a5,-1
200146fe:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:41
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE)) = (__metal_io_u32)time;
20014700:	fd842783          	lw	a5,-40(s0)
20014704:	078e                	slli	a5,a5,0x3
20014706:	873e                	mv	a4,a5
20014708:	fe842783          	lw	a5,-24(s0)
2001470c:	973e                	add	a4,a4,a5
2001470e:	6791                	lui	a5,0x4
20014710:	97ba                	add	a5,a5,a4
20014712:	873e                	mv	a4,a5
20014714:	fd042783          	lw	a5,-48(s0)
20014718:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:42
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = (__metal_io_u32)(time >> 32);
2001471a:	fd442783          	lw	a5,-44(s0)
2001471e:	0007d913          	srli	s2,a5,0x0
20014722:	4981                	li	s3,0
20014724:	fd842783          	lw	a5,-40(s0)
20014728:	078e                	slli	a5,a5,0x3
2001472a:	873e                	mv	a4,a5
2001472c:	fe842783          	lw	a5,-24(s0)
20014730:	973e                	add	a4,a4,a5
20014732:	6791                	lui	a5,0x4
20014734:	0791                	addi	a5,a5,4
20014736:	97ba                	add	a5,a5,a4
20014738:	874a                	mv	a4,s2
2001473a:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:43
    return 0;
2001473c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:44
}
2001473e:	853e                	mv	a0,a5
20014740:	50b2                	lw	ra,44(sp)
20014742:	5422                	lw	s0,40(sp)
20014744:	5912                	lw	s2,36(sp)
20014746:	5982                	lw	s3,32(sp)
20014748:	6145                	addi	sp,sp,48
2001474a:	8082                	ret

2001474c <_get_cpu_intc>:
_get_cpu_intc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47

static struct metal_interrupt *_get_cpu_intc()
{
2001474c:	1101                	addi	sp,sp,-32
2001474e:	ce06                	sw	ra,28(sp)
20014750:	cc22                	sw	s0,24(sp)
20014752:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    int hartid = 0;
20014754:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
    __asm__ volatile("csrr %[hartid], mhartid"
20014758:	f14027f3          	csrr	a5,mhartid
2001475c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:52
                     : [hartid] "=r" (hartid) :: "memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20014760:	fec42783          	lw	a5,-20(s0)
20014764:	853e                	mv	a0,a5
20014766:	63d030ef          	jal	ra,200185a2 <metal_cpu_get>
2001476a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54

    return metal_cpu_interrupt_controller(cpu);
2001476e:	fe842503          	lw	a0,-24(s0)
20014772:	60b030ef          	jal	ra,2001857c <metal_cpu_interrupt_controller>
20014776:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
20014778:	853e                	mv	a0,a5
2001477a:	40f2                	lw	ra,28(sp)
2001477c:	4462                	lw	s0,24(sp)
2001477e:	6105                	addi	sp,sp,32
20014780:	8082                	ret

20014782 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58

void __metal_driver_riscv_clint0_init (struct metal_interrupt *controller)
{
20014782:	7139                	addi	sp,sp,-64
20014784:	de06                	sw	ra,60(sp)
20014786:	dc22                	sw	s0,56(sp)
20014788:	0080                	addi	s0,sp,64
2001478a:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
2001478e:	fcc42503          	lw	a0,-52(s0)
20014792:	3bdd                	jal	20014588 <__metal_driver_sifive_clint0_num_interrupts>
20014794:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:60
    struct __metal_driver_riscv_clint0 *clint =
20014798:	fcc42783          	lw	a5,-52(s0)
2001479c:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:63
                              (struct __metal_driver_riscv_clint0 *)(controller);

    if ( !clint->init_done ) {
200147a0:	fe442783          	lw	a5,-28(s0)
200147a4:	43dc                	lw	a5,4(a5)
200147a6:	efa9                	bnez	a5,20014800 <__metal_driver_riscv_clint0_init+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
	/* Register its interrupts with with parent controller, aka sw and timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
200147a8:	fe042623          	sw	zero,-20(s0)
200147ac:	a081                	j	200147ec <__metal_driver_riscv_clint0_init+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:66 (discriminator 3)
	  struct metal_interrupt *intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200147ae:	fec42583          	lw	a1,-20(s0)
200147b2:	fcc42503          	lw	a0,-52(s0)
200147b6:	3bed                	jal	200145b0 <__metal_driver_sifive_clint0_interrupt_parents>
200147b8:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67 (discriminator 3)
	  int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200147bc:	fec42583          	lw	a1,-20(s0)
200147c0:	fcc42503          	lw	a0,-52(s0)
200147c4:	3525                	jal	200145ec <__metal_driver_sifive_clint0_interrupt_lines>
200147c6:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:68 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
200147ca:	fe042783          	lw	a5,-32(s0)
200147ce:	439c                	lw	a5,0(a5)
200147d0:	4fdc                	lw	a5,28(a5)
200147d2:	fcc42683          	lw	a3,-52(s0)
200147d6:	4601                	li	a2,0
200147d8:	fdc42583          	lw	a1,-36(s0)
200147dc:	fe042503          	lw	a0,-32(s0)
200147e0:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
200147e2:	fec42783          	lw	a5,-20(s0)
200147e6:	0785                	addi	a5,a5,1
200147e8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 1)
200147ec:	fec42703          	lw	a4,-20(s0)
200147f0:	fe842783          	lw	a5,-24(s0)
200147f4:	faf74de3          	blt	a4,a5,200147ae <__metal_driver_riscv_clint0_init+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
	}
	clint->init_done = 1;
200147f8:	fe442783          	lw	a5,-28(s0)
200147fc:	4705                	li	a4,1
200147fe:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:72
    }	
}
20014800:	0001                	nop
20014802:	50f2                	lw	ra,60(sp)
20014804:	5462                	lw	s0,56(sp)
20014806:	6121                	addi	sp,sp,64
20014808:	8082                	ret

2001480a <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:77

int __metal_driver_riscv_clint0_register (struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv)
{
2001480a:	7139                	addi	sp,sp,-64
2001480c:	de06                	sw	ra,60(sp)
2001480e:	dc22                	sw	s0,56(sp)
20014810:	0080                	addi	s0,sp,64
20014812:	fca42623          	sw	a0,-52(s0)
20014816:	fcb42423          	sw	a1,-56(s0)
2001481a:	fcc42223          	sw	a2,-60(s0)
2001481e:	fcd42023          	sw	a3,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78
    int rc = -1;
20014822:	57fd                	li	a5,-1
20014824:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:79
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20014828:	3b0010ef          	jal	ra,20015bd8 <__metal_controller_interrupt_vector_mode>
2001482c:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80
    struct metal_interrupt *intc = NULL;
20014830:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20014834:	3f21                	jal	2001474c <_get_cpu_intc>
20014836:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:82
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
2001483a:	fcc42503          	lw	a0,-52(s0)
2001483e:	33a9                	jal	20014588 <__metal_driver_sifive_clint0_num_interrupts>
20014840:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84

    if ( (mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE) ) {
20014844:	fe042703          	lw	a4,-32(s0)
20014848:	4785                	li	a5,1
2001484a:	00f70863          	beq	a4,a5,2001485a <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84 (discriminator 1)
2001484e:	fe042783          	lw	a5,-32(s0)
20014852:	c781                	beqz	a5,2001485a <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
        return rc;
20014854:	fec42783          	lw	a5,-20(s0)
20014858:	a049                	j	200148da <__metal_driver_riscv_clint0_register+0xd0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88
    }

    for(int i = 0; i < num_interrupts; i++) {
2001485a:	fe042223          	sw	zero,-28(s0)
2001485e:	a091                	j	200148a2 <__metal_driver_riscv_clint0_register+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89
	int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20014860:	fe442583          	lw	a1,-28(s0)
20014864:	fcc42503          	lw	a0,-52(s0)
20014868:	3351                	jal	200145ec <__metal_driver_sifive_clint0_interrupt_lines>
2001486a:	fca42a23          	sw	a0,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001486e:	fe442583          	lw	a1,-28(s0)
20014872:	fcc42503          	lw	a0,-52(s0)
20014876:	3b2d                	jal	200145b0 <__metal_driver_sifive_clint0_interrupt_parents>
20014878:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
        if (cpu_intc == intc && id == line) {
2001487c:	fdc42703          	lw	a4,-36(s0)
20014880:	fe842783          	lw	a5,-24(s0)
20014884:	00f71863          	bne	a4,a5,20014894 <__metal_driver_riscv_clint0_register+0x8a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91 (discriminator 1)
20014888:	fc842703          	lw	a4,-56(s0)
2001488c:	fd442783          	lw	a5,-44(s0)
20014890:	02f70063          	beq	a4,a5,200148b0 <__metal_driver_riscv_clint0_register+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:94 (discriminator 2)
            break;
        }
	intc = NULL;
20014894:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 2)
    for(int i = 0; i < num_interrupts; i++) {
20014898:	fe442783          	lw	a5,-28(s0)
2001489c:	0785                	addi	a5,a5,1
2001489e:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 1)
200148a2:	fe442703          	lw	a4,-28(s0)
200148a6:	fd842783          	lw	a5,-40(s0)
200148aa:	faf74be3          	blt	a4,a5,20014860 <__metal_driver_riscv_clint0_register+0x56>
200148ae:	a011                	j	200148b2 <__metal_driver_riscv_clint0_register+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
            break;
200148b0:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
    }

    /* Register its interrupts with parent controller */
    if (intc) {
200148b2:	fe842783          	lw	a5,-24(s0)
200148b6:	c385                	beqz	a5,200148d6 <__metal_driver_riscv_clint0_register+0xcc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:99
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
200148b8:	fe842783          	lw	a5,-24(s0)
200148bc:	439c                	lw	a5,0(a5)
200148be:	4fdc                	lw	a5,28(a5)
200148c0:	fc042683          	lw	a3,-64(s0)
200148c4:	fc442603          	lw	a2,-60(s0)
200148c8:	fc842583          	lw	a1,-56(s0)
200148cc:	fe842503          	lw	a0,-24(s0)
200148d0:	9782                	jalr	a5
200148d2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }
    return rc;
200148d6:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
}
200148da:	853e                	mv	a0,a5
200148dc:	50f2                	lw	ra,60(sp)
200148de:	5462                	lw	s0,56(sp)
200148e0:	6121                	addi	sp,sp,64
200148e2:	8082                	ret

200148e4 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107

int __metal_driver_riscv_clint0_vector_register (struct metal_interrupt *controller,
                                                 int id, metal_interrupt_vector_handler_t isr,
                                                 void *priv)
{   
200148e4:	7179                	addi	sp,sp,-48
200148e6:	d622                	sw	s0,44(sp)
200148e8:	1800                	addi	s0,sp,48
200148ea:	fca42e23          	sw	a0,-36(s0)
200148ee:	fcb42c23          	sw	a1,-40(s0)
200148f2:	fcc42a23          	sw	a2,-44(s0)
200148f6:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:109
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
200148fa:	57fd                	li	a5,-1
200148fc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:110
    return rc;
20014900:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
}
20014904:	853e                	mv	a0,a5
20014906:	5432                	lw	s0,44(sp)
20014908:	6145                	addi	sp,sp,48
2001490a:	8082                	ret

2001490c <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode (struct metal_interrupt *controller)
{
2001490c:	1101                	addi	sp,sp,-32
2001490e:	ce06                	sw	ra,28(sp)
20014910:	cc22                	sw	s0,24(sp)
20014912:	1000                	addi	s0,sp,32
20014914:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
    return __metal_controller_interrupt_vector_mode();
20014918:	2c0010ef          	jal	ra,20015bd8 <__metal_controller_interrupt_vector_mode>
2001491c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:116
}
2001491e:	853e                	mv	a0,a5
20014920:	40f2                	lw	ra,28(sp)
20014922:	4462                	lw	s0,24(sp)
20014924:	6105                	addi	sp,sp,32
20014926:	8082                	ret

20014928 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_set_vector_mode (struct metal_interrupt *controller, metal_vector_mode mode)
{
20014928:	7179                	addi	sp,sp,-48
2001492a:	d606                	sw	ra,44(sp)
2001492c:	d422                	sw	s0,40(sp)
2001492e:	1800                	addi	s0,sp,48
20014930:	fca42e23          	sw	a0,-36(s0)
20014934:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:120
    int rc = -1;
20014938:	57fd                	li	a5,-1
2001493a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    struct metal_interrupt *intc = _get_cpu_intc();
2001493e:	3539                	jal	2001474c <_get_cpu_intc>
20014940:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123

    if (intc) {
20014944:	fe842783          	lw	a5,-24(s0)
20014948:	c395                	beqz	a5,2001496c <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:125
	/* Valid vector modes are VECTOR and DIRECT, anything else is invalid (-1) */
        switch (mode) {
2001494a:	fd842703          	lw	a4,-40(s0)
2001494e:	4785                	li	a5,1
20014950:	00e7ef63          	bltu	a5,a4,2001496e <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20014954:	fe842783          	lw	a5,-24(s0)
20014958:	439c                	lw	a5,0(a5)
2001495a:	43dc                	lw	a5,4(a5)
2001495c:	fd842583          	lw	a1,-40(s0)
20014960:	fe842503          	lw	a0,-24(s0)
20014964:	9782                	jalr	a5
20014966:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:129
            break;
2001496a:	a011                	j	2001496e <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131
        }
    }
2001496c:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    return rc;
2001496e:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
}
20014972:	853e                	mv	a0,a5
20014974:	50b2                	lw	ra,44(sp)
20014976:	5422                	lw	s0,40(sp)
20014978:	6145                	addi	sp,sp,48
2001497a:	8082                	ret

2001497c <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:136

int __metal_driver_riscv_clint0_enable (struct metal_interrupt *controller, int id)
{
2001497c:	7139                	addi	sp,sp,-64
2001497e:	de06                	sw	ra,60(sp)
20014980:	dc22                	sw	s0,56(sp)
20014982:	0080                	addi	s0,sp,64
20014984:	fca42623          	sw	a0,-52(s0)
20014988:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:137
    int rc = -1;
2001498c:	57fd                	li	a5,-1
2001498e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:139

    if ( id ) {
20014992:	fc842783          	lw	a5,-56(s0)
20014996:	c7c9                	beqz	a5,20014a20 <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:140
        struct metal_interrupt *intc = NULL;
20014998:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2001499c:	3b45                	jal	2001474c <_get_cpu_intc>
2001499e:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
200149a2:	fcc42503          	lw	a0,-52(s0)
200149a6:	36cd                	jal	20014588 <__metal_driver_sifive_clint0_num_interrupts>
200149a8:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144

        for(int i = 0; i < num_interrupts; i++) {
200149ac:	fe042223          	sw	zero,-28(s0)
200149b0:	a091                	j	200149f4 <__metal_driver_riscv_clint0_enable+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:145
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200149b2:	fe442583          	lw	a1,-28(s0)
200149b6:	fcc42503          	lw	a0,-52(s0)
200149ba:	390d                	jal	200145ec <__metal_driver_sifive_clint0_interrupt_lines>
200149bc:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200149c0:	fe442583          	lw	a1,-28(s0)
200149c4:	fcc42503          	lw	a0,-52(s0)
200149c8:	36e5                	jal	200145b0 <__metal_driver_sifive_clint0_interrupt_parents>
200149ca:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
            if(cpu_intc == intc && id == line) {
200149ce:	fe042703          	lw	a4,-32(s0)
200149d2:	fe842783          	lw	a5,-24(s0)
200149d6:	00f71863          	bne	a4,a5,200149e6 <__metal_driver_riscv_clint0_enable+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147 (discriminator 1)
200149da:	fc842703          	lw	a4,-56(s0)
200149de:	fd842783          	lw	a5,-40(s0)
200149e2:	02f70063          	beq	a4,a5,20014a02 <__metal_driver_riscv_clint0_enable+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:150 (discriminator 2)
                break;
            }
	    intc = NULL;
200149e6:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
200149ea:	fe442783          	lw	a5,-28(s0)
200149ee:	0785                	addi	a5,a5,1
200149f0:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 1)
200149f4:	fe442703          	lw	a4,-28(s0)
200149f8:	fdc42783          	lw	a5,-36(s0)
200149fc:	faf74be3          	blt	a4,a5,200149b2 <__metal_driver_riscv_clint0_enable+0x36>
20014a00:	a011                	j	20014a04 <__metal_driver_riscv_clint0_enable+0x88>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
                break;
20014a02:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154
        }
        
        /* Enable its interrupts with parent controller */
        if (intc) {
20014a04:	fe842783          	lw	a5,-24(s0)
20014a08:	cf81                	beqz	a5,20014a20 <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
            rc = intc->vtable->interrupt_enable(intc, id);
20014a0a:	fe842783          	lw	a5,-24(s0)
20014a0e:	439c                	lw	a5,0(a5)
20014a10:	53dc                	lw	a5,36(a5)
20014a12:	fc842583          	lw	a1,-56(s0)
20014a16:	fe842503          	lw	a0,-24(s0)
20014a1a:	9782                	jalr	a5
20014a1c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:159
        }
    }

    return rc;
20014a20:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160
}
20014a24:	853e                	mv	a0,a5
20014a26:	50f2                	lw	ra,60(sp)
20014a28:	5462                	lw	s0,56(sp)
20014a2a:	6121                	addi	sp,sp,64
20014a2c:	8082                	ret

20014a2e <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:163

int __metal_driver_riscv_clint0_disable (struct metal_interrupt *controller, int id)
{
20014a2e:	7139                	addi	sp,sp,-64
20014a30:	de06                	sw	ra,60(sp)
20014a32:	dc22                	sw	s0,56(sp)
20014a34:	0080                	addi	s0,sp,64
20014a36:	fca42623          	sw	a0,-52(s0)
20014a3a:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
    int rc = -1;
20014a3e:	57fd                	li	a5,-1
20014a40:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166

    if ( id ) {
20014a44:	fc842783          	lw	a5,-56(s0)
20014a48:	c7c9                	beqz	a5,20014ad2 <__metal_driver_riscv_clint0_disable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:167
        struct metal_interrupt *intc = NULL;
20014a4a:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20014a4e:	39fd                	jal	2001474c <_get_cpu_intc>
20014a50:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:169
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20014a54:	fcc42503          	lw	a0,-52(s0)
20014a58:	3e05                	jal	20014588 <__metal_driver_sifive_clint0_num_interrupts>
20014a5a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171

        for(int i = 0; i < num_interrupts; i++) {
20014a5e:	fe042223          	sw	zero,-28(s0)
20014a62:	a091                	j	20014aa6 <__metal_driver_riscv_clint0_disable+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20014a64:	fe442583          	lw	a1,-28(s0)
20014a68:	fcc42503          	lw	a0,-52(s0)
20014a6c:	3641                	jal	200145ec <__metal_driver_sifive_clint0_interrupt_lines>
20014a6e:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20014a72:	fe442583          	lw	a1,-28(s0)
20014a76:	fcc42503          	lw	a0,-52(s0)
20014a7a:	3e1d                	jal	200145b0 <__metal_driver_sifive_clint0_interrupt_parents>
20014a7c:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174
            if(cpu_intc == intc && id == line) {
20014a80:	fe042703          	lw	a4,-32(s0)
20014a84:	fe842783          	lw	a5,-24(s0)
20014a88:	00f71863          	bne	a4,a5,20014a98 <__metal_driver_riscv_clint0_disable+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174 (discriminator 1)
20014a8c:	fc842703          	lw	a4,-56(s0)
20014a90:	fd842783          	lw	a5,-40(s0)
20014a94:	02f70063          	beq	a4,a5,20014ab4 <__metal_driver_riscv_clint0_disable+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177 (discriminator 2)
                break;
            }
	    intc = NULL;
20014a98:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
20014a9c:	fe442783          	lw	a5,-28(s0)
20014aa0:	0785                	addi	a5,a5,1
20014aa2:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 1)
20014aa6:	fe442703          	lw	a4,-28(s0)
20014aaa:	fdc42783          	lw	a5,-36(s0)
20014aae:	faf74be3          	blt	a4,a5,20014a64 <__metal_driver_riscv_clint0_disable+0x36>
20014ab2:	a011                	j	20014ab6 <__metal_driver_riscv_clint0_disable+0x88>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:175
                break;
20014ab4:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181
        }
        
        /* Disable its interrupts with parent controller */
        if (intc) {
20014ab6:	fe842783          	lw	a5,-24(s0)
20014aba:	cf81                	beqz	a5,20014ad2 <__metal_driver_riscv_clint0_disable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
            rc = intc->vtable->interrupt_disable(intc, id);
20014abc:	fe842783          	lw	a5,-24(s0)
20014ac0:	439c                	lw	a5,0(a5)
20014ac2:	579c                	lw	a5,40(a5)
20014ac4:	fc842583          	lw	a1,-56(s0)
20014ac8:	fe842503          	lw	a0,-24(s0)
20014acc:	9782                	jalr	a5
20014ace:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        }
    }

    return rc;
20014ad2:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:187
}
20014ad6:	853e                	mv	a0,a5
20014ad8:	50f2                	lw	ra,60(sp)
20014ada:	5462                	lw	s0,56(sp)
20014adc:	6121                	addi	sp,sp,64
20014ade:	8082                	ret

20014ae0 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:191

int __metal_driver_riscv_clint0_command_request (struct metal_interrupt *controller,
                                               int command, void *data)
{
20014ae0:	7179                	addi	sp,sp,-48
20014ae2:	d606                	sw	ra,44(sp)
20014ae4:	d422                	sw	s0,40(sp)
20014ae6:	1800                	addi	s0,sp,48
20014ae8:	fca42e23          	sw	a0,-36(s0)
20014aec:	fcb42c23          	sw	a1,-40(s0)
20014af0:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:193
    int hartid;
    int rc = -1;
20014af4:	57fd                	li	a5,-1
20014af6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
    struct __metal_driver_riscv_clint0 *clint =
20014afa:	fdc42783          	lw	a5,-36(s0)
20014afe:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(controller);
20014b02:	fdc42503          	lw	a0,-36(s0)
20014b06:	a59ff0ef          	jal	ra,2001455e <__metal_driver_sifive_clint0_control_base>
20014b0a:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198

    switch (command) {
20014b0e:	fd842703          	lw	a4,-40(s0)
20014b12:	4789                	li	a5,2
20014b14:	04f70863          	beq	a4,a5,20014b64 <__metal_driver_riscv_clint0_command_request+0x84>
20014b18:	fd842703          	lw	a4,-40(s0)
20014b1c:	4789                	li	a5,2
20014b1e:	00e7c863          	blt	a5,a4,20014b2e <__metal_driver_riscv_clint0_command_request+0x4e>
20014b22:	fd842703          	lw	a4,-40(s0)
20014b26:	4785                	li	a5,1
20014b28:	00f70e63          	beq	a4,a5,20014b44 <__metal_driver_riscv_clint0_command_request+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
						    (hartid * 4)));
        }
        break;
    default:
	break;
20014b2c:	a8e9                	j	20014c06 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198
    switch (command) {
20014b2e:	fd842703          	lw	a4,-40(s0)
20014b32:	478d                	li	a5,3
20014b34:	04f70c63          	beq	a4,a5,20014b8c <__metal_driver_riscv_clint0_command_request+0xac>
20014b38:	fd842703          	lw	a4,-40(s0)
20014b3c:	4791                	li	a5,4
20014b3e:	08f70863          	beq	a4,a5,20014bce <__metal_driver_riscv_clint0_command_request+0xee>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
	break;
20014b42:	a0d1                	j	20014c06 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:200
        if (data) {
20014b44:	fd442783          	lw	a5,-44(s0)
20014b48:	cbc5                	beqz	a5,20014bf8 <__metal_driver_riscv_clint0_command_request+0x118>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:201
	    *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20014b4a:	fe842503          	lw	a0,-24(s0)
20014b4e:	34f9                	jal	2001461c <__metal_clint0_mtime_get>
20014b50:	87aa                	mv	a5,a0
20014b52:	882e                	mv	a6,a1
20014b54:	fd442703          	lw	a4,-44(s0)
20014b58:	c31c                	sw	a5,0(a4)
20014b5a:	01072223          	sw	a6,4(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
            rc = 0;
20014b5e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20014b62:	a859                	j	20014bf8 <__metal_driver_riscv_clint0_command_request+0x118>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:206
	if (data) {
20014b64:	fd442783          	lw	a5,-44(s0)
20014b68:	cbd1                	beqz	a5,20014bfc <__metal_driver_riscv_clint0_command_request+0x11c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
	    hartid = *(int *)data;
20014b6a:	fd442783          	lw	a5,-44(s0)
20014b6e:	439c                	lw	a5,0(a5)
20014b70:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20014b74:	fe042783          	lw	a5,-32(s0)
20014b78:	078a                	slli	a5,a5,0x2
20014b7a:	873e                	mv	a4,a5
20014b7c:	fe442783          	lw	a5,-28(s0)
20014b80:	97ba                	add	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:209
					       (hartid * 4))) = METAL_DISABLE;
20014b82:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:210
            rc = 0;
20014b86:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20014b8a:	a88d                	j	20014bfc <__metal_driver_riscv_clint0_command_request+0x11c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
	if (data) {
20014b8c:	fd442783          	lw	a5,-44(s0)
20014b90:	cba5                	beqz	a5,20014c00 <__metal_driver_riscv_clint0_command_request+0x120>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:215
	    hartid = *(int *)data;
20014b92:	fd442783          	lw	a5,-44(s0)
20014b96:	439c                	lw	a5,0(a5)
20014b98:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:216
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20014b9c:	fe042783          	lw	a5,-32(s0)
20014ba0:	078a                	slli	a5,a5,0x2
20014ba2:	873e                	mv	a4,a5
20014ba4:	fe442783          	lw	a5,-28(s0)
20014ba8:	97ba                	add	a5,a5,a4
20014baa:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
					       (hartid * 4))) = METAL_ENABLE;
20014bac:	4785                	li	a5,1
20014bae:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
	    __METAL_IO_FENCE(o,i);
20014bb0:	0480000f          	fence	o,i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20014bb4:	fe042783          	lw	a5,-32(s0)
20014bb8:	078a                	slli	a5,a5,0x2
20014bba:	873e                	mv	a4,a5
20014bbc:	fe442783          	lw	a5,-28(s0)
20014bc0:	97ba                	add	a5,a5,a4
20014bc2:	439c                	lw	a5,0(a5)
20014bc4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
            rc = 0;
20014bc8:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20014bcc:	a815                	j	20014c00 <__metal_driver_riscv_clint0_command_request+0x120>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:234
        rc = 0;
20014bce:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
	if (data) {
20014bd2:	fd442783          	lw	a5,-44(s0)
20014bd6:	c79d                	beqz	a5,20014c04 <__metal_driver_riscv_clint0_command_request+0x124>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
	    hartid = *(int *)data;
20014bd8:	fd442783          	lw	a5,-44(s0)
20014bdc:	439c                	lw	a5,0(a5)
20014bde:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20014be2:	fe042783          	lw	a5,-32(s0)
20014be6:	078a                	slli	a5,a5,0x2
20014be8:	873e                	mv	a4,a5
20014bea:	fe442783          	lw	a5,-28(s0)
20014bee:	97ba                	add	a5,a5,a4
20014bf0:	439c                	lw	a5,0(a5)
20014bf2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20014bf6:	a039                	j	20014c04 <__metal_driver_riscv_clint0_command_request+0x124>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20014bf8:	0001                	nop
20014bfa:	a031                	j	20014c06 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20014bfc:	0001                	nop
20014bfe:	a021                	j	20014c06 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20014c00:	0001                	nop
20014c02:	a011                	j	20014c06 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20014c04:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:245
    }

    return rc;
20014c06:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:246
}
20014c0a:	853e                	mv	a0,a5
20014c0c:	50b2                	lw	ra,44(sp)
20014c0e:	5422                	lw	s0,40(sp)
20014c10:	6145                	addi	sp,sp,48
20014c12:	8082                	ret

20014c14 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249

int __metal_driver_riscv_clint0_clear_interrupt (struct metal_interrupt *controller, int id)
{
20014c14:	7179                	addi	sp,sp,-48
20014c16:	d606                	sw	ra,44(sp)
20014c18:	d422                	sw	s0,40(sp)
20014c1a:	1800                	addi	s0,sp,48
20014c1c:	fca42e23          	sw	a0,-36(s0)
20014c20:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:250
    int hartid = metal_cpu_get_current_hartid();
20014c24:	1ad030ef          	jal	ra,200185d0 <metal_cpu_get_current_hartid>
20014c28:	87aa                	mv	a5,a0
20014c2a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
    return __metal_driver_riscv_clint0_command_request(controller,
20014c2e:	fec40793          	addi	a5,s0,-20
20014c32:	863e                	mv	a2,a5
20014c34:	4589                	li	a1,2
20014c36:	fdc42503          	lw	a0,-36(s0)
20014c3a:	355d                	jal	20014ae0 <__metal_driver_riscv_clint0_command_request>
20014c3c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
						METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20014c3e:	853e                	mv	a0,a5
20014c40:	50b2                	lw	ra,44(sp)
20014c42:	5422                	lw	s0,40(sp)
20014c44:	6145                	addi	sp,sp,48
20014c46:	8082                	ret

20014c48 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256

int __metal_driver_riscv_clint0_set_interrupt (struct metal_interrupt *controller, int id)
{
20014c48:	7179                	addi	sp,sp,-48
20014c4a:	d606                	sw	ra,44(sp)
20014c4c:	d422                	sw	s0,40(sp)
20014c4e:	1800                	addi	s0,sp,48
20014c50:	fca42e23          	sw	a0,-36(s0)
20014c54:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
    int hartid = metal_cpu_get_current_hartid();
20014c58:	179030ef          	jal	ra,200185d0 <metal_cpu_get_current_hartid>
20014c5c:	87aa                	mv	a5,a0
20014c5e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
    return __metal_driver_riscv_clint0_command_request(controller,
20014c62:	fec40793          	addi	a5,s0,-20
20014c66:	863e                	mv	a2,a5
20014c68:	458d                	li	a1,3
20014c6a:	fdc42503          	lw	a0,-36(s0)
20014c6e:	3d8d                	jal	20014ae0 <__metal_driver_riscv_clint0_command_request>
20014c70:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:260
						METAL_SOFTWARE_IPI_SET, &hartid);
}
20014c72:	853e                	mv	a0,a5
20014c74:	50b2                	lw	ra,44(sp)
20014c76:	5422                	lw	s0,40(sp)
20014c78:	6145                	addi	sp,sp,48
20014c7a:	8082                	ret

20014c7c <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:262



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20014c7c:	1101                	addi	sp,sp,-32
20014c7e:	ce22                	sw	s0,28(sp)
20014c80:	1000                	addi	s0,sp,32
20014c82:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:263
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20014c86:	fec42703          	lw	a4,-20(s0)
20014c8a:	81418793          	addi	a5,gp,-2028 # 8000126c <__metal_dt_cpu_0>
20014c8e:	00f71463          	bne	a4,a5,20014c96 <__metal_driver_cpu_hartid+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:264
		return 0;
20014c92:	4781                	li	a5,0
20014c94:	a011                	j	20014c98 <__metal_driver_cpu_hartid+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:267
	}
	else {
		return -1;
20014c96:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:269
	}
}
20014c98:	853e                	mv	a0,a5
20014c9a:	4472                	lw	s0,28(sp)
20014c9c:	6105                	addi	sp,sp,32
20014c9e:	8082                	ret

20014ca0 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:272

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20014ca0:	1101                	addi	sp,sp,-32
20014ca2:	ce22                	sw	s0,28(sp)
20014ca4:	1000                	addi	s0,sp,32
20014ca6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:273
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20014caa:	fec42703          	lw	a4,-20(s0)
20014cae:	81418793          	addi	a5,gp,-2028 # 8000126c <__metal_dt_cpu_0>
20014cb2:	00f71763          	bne	a4,a5,20014cc0 <__metal_driver_cpu_timebase+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:274
		return 16000000;
20014cb6:	00f427b7          	lui	a5,0xf42
20014cba:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20014cbe:	a011                	j	20014cc2 <__metal_driver_cpu_timebase+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:277
	}
	else {
		return 0;
20014cc0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:279
	}
}
20014cc2:	853e                	mv	a0,a5
20014cc4:	4472                	lw	s0,28(sp)
20014cc6:	6105                	addi	sp,sp,32
20014cc8:	8082                	ret

20014cca <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:282

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20014cca:	1101                	addi	sp,sp,-32
20014ccc:	ce22                	sw	s0,28(sp)
20014cce:	1000                	addi	s0,sp,32
20014cd0:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:283
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20014cd4:	fec42703          	lw	a4,-20(s0)
20014cd8:	81418793          	addi	a5,gp,-2028 # 8000126c <__metal_dt_cpu_0>
20014cdc:	00f71763          	bne	a4,a5,20014cea <__metal_driver_cpu_interrupt_controller+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:284
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20014ce0:	800017b7          	lui	a5,0x80001
20014ce4:	86078793          	addi	a5,a5,-1952 # 80000860 <metal_segment_heap_target_end+0xffffe614>
20014ce8:	a011                	j	20014cec <__metal_driver_cpu_interrupt_controller+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:287
	}
	else {
		return NULL;
20014cea:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:289
	}
}
20014cec:	853e                	mv	a0,a5
20014cee:	4472                	lw	s0,28(sp)
20014cf0:	6105                	addi	sp,sp,32
20014cf2:	8082                	ret

20014cf4 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:14
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu, unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid)
{
20014cf4:	1101                	addi	sp,sp,-32
20014cf6:	ce22                	sw	s0,28(sp)
20014cf8:	1000                	addi	s0,sp,32
20014cfa:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:15
    if (hartid < __METAL_DT_MAX_HARTS) {
20014cfe:	fec42783          	lw	a5,-20(s0)
20014d02:	00f04c63          	bgtz	a5,20014d1a <__metal_driver_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:16
        return &(__metal_cpu_table[hartid]->cpu);
20014d06:	800017b7          	lui	a5,0x80001
20014d0a:	fec42703          	lw	a4,-20(s0)
20014d0e:	070a                	slli	a4,a4,0x2
20014d10:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20014d14:	97ba                	add	a5,a5,a4
20014d16:	439c                	lw	a5,0(a5)
20014d18:	a011                	j	20014d1c <__metal_driver_cpu_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:18
    }
    return (struct metal_cpu *)NULL;
20014d1a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:19
}
20014d1c:	853e                	mv	a0,a5
20014d1e:	4472                	lw	s0,28(sp)
20014d20:	6105                	addi	sp,sp,32
20014d22:	8082                	ret

20014d24 <__metal_myhart_id>:
__metal_myhart_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:22

uintptr_t __metal_myhart_id (void)
{
20014d24:	1101                	addi	sp,sp,-32
20014d26:	ce22                	sw	s0,28(sp)
20014d28:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:24
    uintptr_t myhart;
    __asm__ volatile ("csrr %0, mhartid" : "=r"(myhart));
20014d2a:	f14027f3          	csrr	a5,mhartid
20014d2e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
    return myhart;
20014d32:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
}
20014d36:	853e                	mv	a0,a5
20014d38:	4472                	lw	s0,28(sp)
20014d3a:	6105                	addi	sp,sp,32
20014d3c:	8082                	ret

20014d3e <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
    for (ptr = base; ptr < (base + size); ptr++){
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable (void) {
20014d3e:	1101                	addi	sp,sp,-32
20014d40:	ce22                	sw	s0,28(sp)
20014d42:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:38
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20014d44:	47a1                	li	a5,8
20014d46:	3007a7f3          	csrrs	a5,mstatus,a5
20014d4a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:39
}
20014d4e:	0001                	nop
20014d50:	4472                	lw	s0,28(sp)
20014d52:	6105                	addi	sp,sp,32
20014d54:	8082                	ret

20014d56 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:41

void __metal_interrupt_global_disable (void) {
20014d56:	1101                	addi	sp,sp,-32
20014d58:	ce22                	sw	s0,28(sp)
20014d5a:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:43
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20014d5c:	47a1                	li	a5,8
20014d5e:	3007b7f3          	csrrc	a5,mstatus,a5
20014d62:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:44
}
20014d66:	0001                	nop
20014d68:	4472                	lw	s0,28(sp)
20014d6a:	6105                	addi	sp,sp,32
20014d6c:	8082                	ret

20014d6e <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:46

void __metal_interrupt_software_enable (void) {
20014d6e:	1101                	addi	sp,sp,-32
20014d70:	ce22                	sw	s0,28(sp)
20014d72:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:48
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20014d74:	47a1                	li	a5,8
20014d76:	3047a7f3          	csrrs	a5,mie,a5
20014d7a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:49
}
20014d7e:	0001                	nop
20014d80:	4472                	lw	s0,28(sp)
20014d82:	6105                	addi	sp,sp,32
20014d84:	8082                	ret

20014d86 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:51

void __metal_interrupt_software_disable (void) {
20014d86:	1101                	addi	sp,sp,-32
20014d88:	ce22                	sw	s0,28(sp)
20014d8a:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:53
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20014d8c:	47a1                	li	a5,8
20014d8e:	3047b7f3          	csrrc	a5,mie,a5
20014d92:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
}
20014d96:	0001                	nop
20014d98:	4472                	lw	s0,28(sp)
20014d9a:	6105                	addi	sp,sp,32
20014d9c:	8082                	ret

20014d9e <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:56

void __metal_interrupt_timer_enable (void) {
20014d9e:	1101                	addi	sp,sp,-32
20014da0:	ce22                	sw	s0,28(sp)
20014da2:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:58
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20014da4:	08000793          	li	a5,128
20014da8:	3047a7f3          	csrrs	a5,mie,a5
20014dac:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59
}
20014db0:	0001                	nop
20014db2:	4472                	lw	s0,28(sp)
20014db4:	6105                	addi	sp,sp,32
20014db6:	8082                	ret

20014db8 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61

void __metal_interrupt_timer_disable (void) {
20014db8:	1101                	addi	sp,sp,-32
20014dba:	ce22                	sw	s0,28(sp)
20014dbc:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:63
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20014dbe:	08000793          	li	a5,128
20014dc2:	3047b7f3          	csrrc	a5,mie,a5
20014dc6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
}
20014dca:	0001                	nop
20014dcc:	4472                	lw	s0,28(sp)
20014dce:	6105                	addi	sp,sp,32
20014dd0:	8082                	ret

20014dd2 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_external_enable (void) {
20014dd2:	1101                	addi	sp,sp,-32
20014dd4:	ce22                	sw	s0,28(sp)
20014dd6:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20014dd8:	6785                	lui	a5,0x1
20014dda:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20014dde:	3047a7f3          	csrrs	a5,mie,a5
20014de2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:69
}
20014de6:	0001                	nop
20014de8:	4472                	lw	s0,28(sp)
20014dea:	6105                	addi	sp,sp,32
20014dec:	8082                	ret

20014dee <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71

void __metal_interrupt_external_disable (void) {
20014dee:	1101                	addi	sp,sp,-32
20014df0:	ce22                	sw	s0,28(sp)
20014df2:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73
    unsigned long m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20014df4:	6785                	lui	a5,0x1
20014df6:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20014dfa:	3047b7f3          	csrrc	a5,mie,a5
20014dfe:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:74
}
20014e02:	0001                	nop
20014e04:	4472                	lw	s0,28(sp)
20014e06:	6105                	addi	sp,sp,32
20014e08:	8082                	ret

20014e0a <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:76

void __metal_interrupt_local_enable (int id) {
20014e0a:	7179                	addi	sp,sp,-48
20014e0c:	d622                	sw	s0,44(sp)
20014e0e:	1800                	addi	s0,sp,48
20014e10:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:77
    uintptr_t b = 1 << id;
20014e14:	fdc42783          	lw	a5,-36(s0)
20014e18:	4705                	li	a4,1
20014e1a:	00f717b3          	sll	a5,a4,a5
20014e1e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:79
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20014e22:	fec42783          	lw	a5,-20(s0)
20014e26:	3047a7f3          	csrrs	a5,mie,a5
20014e2a:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80
}
20014e2e:	0001                	nop
20014e30:	5432                	lw	s0,44(sp)
20014e32:	6145                	addi	sp,sp,48
20014e34:	8082                	ret

20014e36 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82

void __metal_interrupt_local_disable (int id) {
20014e36:	7179                	addi	sp,sp,-48
20014e38:	d622                	sw	s0,44(sp)
20014e3a:	1800                	addi	s0,sp,48
20014e3c:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:83
    uintptr_t b = 1 << id;
20014e40:	fdc42783          	lw	a5,-36(s0)
20014e44:	4705                	li	a4,1
20014e46:	00f717b3          	sll	a5,a4,a5
20014e4a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20014e4e:	fec42783          	lw	a5,-20(s0)
20014e52:	3047b7f3          	csrrc	a5,mie,a5
20014e56:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:86
}
20014e5a:	0001                	nop
20014e5c:	5432                	lw	s0,44(sp)
20014e5e:	6145                	addi	sp,sp,48
20014e60:	8082                	ret

20014e62 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:88

void __metal_default_exception_handler (struct metal_cpu *cpu, int ecode) {
20014e62:	1101                	addi	sp,sp,-32
20014e64:	ce06                	sw	ra,28(sp)
20014e66:	cc22                	sw	s0,24(sp)
20014e68:	1000                	addi	s0,sp,32
20014e6a:	fea42623          	sw	a0,-20(s0)
20014e6e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    metal_shutdown(100);
20014e72:	06400513          	li	a0,100
20014e76:	774030ef          	jal	ra,200185ea <metal_shutdown>

20014e7a <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
}

void __metal_default_interrupt_handler (int id, void *priv) {
20014e7a:	1101                	addi	sp,sp,-32
20014e7c:	ce06                	sw	ra,28(sp)
20014e7e:	cc22                	sw	s0,24(sp)
20014e80:	1000                	addi	s0,sp,32
20014e82:	fea42623          	sw	a0,-20(s0)
20014e86:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:93
    metal_shutdown(200);
20014e8a:	0c800513          	li	a0,200
20014e8e:	75c030ef          	jal	ra,200185ea <metal_shutdown>

20014e92 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:97
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler (void) {
20014e92:	715d                	addi	sp,sp,-80
20014e94:	c686                	sw	ra,76(sp)
20014e96:	c496                	sw	t0,72(sp)
20014e98:	c29a                	sw	t1,68(sp)
20014e9a:	c09e                	sw	t2,64(sp)
20014e9c:	de22                	sw	s0,60(sp)
20014e9e:	dc2a                	sw	a0,56(sp)
20014ea0:	da2e                	sw	a1,52(sp)
20014ea2:	d832                	sw	a2,48(sp)
20014ea4:	d636                	sw	a3,44(sp)
20014ea6:	d43a                	sw	a4,40(sp)
20014ea8:	d23e                	sw	a5,36(sp)
20014eaa:	d042                	sw	a6,32(sp)
20014eac:	ce46                	sw	a7,28(sp)
20014eae:	cc72                	sw	t3,24(sp)
20014eb0:	ca76                	sw	t4,20(sp)
20014eb2:	c87a                	sw	t5,16(sp)
20014eb4:	c67e                	sw	t6,12(sp)
20014eb6:	0880                	addi	s0,sp,80
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:98
    metal_shutdown(300);
20014eb8:	12c00513          	li	a0,300
20014ebc:	72e030ef          	jal	ra,200185ea <metal_shutdown>

20014ec0 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_software_interrupt_vector_handler (void) {
20014ec0:	711d                	addi	sp,sp,-96
20014ec2:	ce86                	sw	ra,92(sp)
20014ec4:	cc96                	sw	t0,88(sp)
20014ec6:	ca9a                	sw	t1,84(sp)
20014ec8:	c89e                	sw	t2,80(sp)
20014eca:	c6a2                	sw	s0,76(sp)
20014ecc:	c4aa                	sw	a0,72(sp)
20014ece:	c2ae                	sw	a1,68(sp)
20014ed0:	c0b2                	sw	a2,64(sp)
20014ed2:	de36                	sw	a3,60(sp)
20014ed4:	dc3a                	sw	a4,56(sp)
20014ed6:	da3e                	sw	a5,52(sp)
20014ed8:	d842                	sw	a6,48(sp)
20014eda:	d646                	sw	a7,44(sp)
20014edc:	d472                	sw	t3,40(sp)
20014ede:	d276                	sw	t4,36(sp)
20014ee0:	d07a                	sw	t5,32(sp)
20014ee2:	ce7e                	sw	t6,28(sp)
20014ee4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20014ee6:	3d3d                	jal	20014d24 <__metal_myhart_id>
20014ee8:	872a                	mv	a4,a0
20014eea:	800017b7          	lui	a5,0x80001
20014eee:	070a                	slli	a4,a4,0x2
20014ef0:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20014ef4:	97ba                	add	a5,a5,a4
20014ef6:	439c                	lw	a5,0(a5)
20014ef8:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

    if ( cpu ) {
20014efc:	fac42783          	lw	a5,-84(s0)
20014f00:	c785                	beqz	a5,20014f28 <metal_software_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:109
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20014f02:	fac42503          	lw	a0,-84(s0)
20014f06:	33d1                	jal	20014cca <__metal_driver_cpu_interrupt_controller>
20014f08:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].exint_data;
20014f0c:	fa842783          	lw	a5,-88(s0)
20014f10:	0e07a783          	lw	a5,224(a5)
20014f14:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
        intc->metal_int_table[METAL_INTERRUPT_ID_SW].handler(METAL_INTERRUPT_ID_SW, priv);
20014f18:	fa842783          	lw	a5,-88(s0)
20014f1c:	0d87a783          	lw	a5,216(a5)
20014f20:	fa442583          	lw	a1,-92(s0)
20014f24:	450d                	li	a0,3
20014f26:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113
    }
}
20014f28:	0001                	nop
20014f2a:	40f6                	lw	ra,92(sp)
20014f2c:	42e6                	lw	t0,88(sp)
20014f2e:	4356                	lw	t1,84(sp)
20014f30:	43c6                	lw	t2,80(sp)
20014f32:	4436                	lw	s0,76(sp)
20014f34:	4526                	lw	a0,72(sp)
20014f36:	4596                	lw	a1,68(sp)
20014f38:	4606                	lw	a2,64(sp)
20014f3a:	56f2                	lw	a3,60(sp)
20014f3c:	5762                	lw	a4,56(sp)
20014f3e:	57d2                	lw	a5,52(sp)
20014f40:	5842                	lw	a6,48(sp)
20014f42:	58b2                	lw	a7,44(sp)
20014f44:	5e22                	lw	t3,40(sp)
20014f46:	5e92                	lw	t4,36(sp)
20014f48:	5f02                	lw	t5,32(sp)
20014f4a:	4ff2                	lw	t6,28(sp)
20014f4c:	6125                	addi	sp,sp,96
20014f4e:	30200073          	mret

20014f52 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:115

void __metal_default_sw_handler (int id, void *priv) {
20014f52:	7179                	addi	sp,sp,-48
20014f54:	d606                	sw	ra,44(sp)
20014f56:	d422                	sw	s0,40(sp)
20014f58:	1800                	addi	s0,sp,48
20014f5a:	fca42e23          	sw	a0,-36(s0)
20014f5e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20014f62:	33c9                	jal	20014d24 <__metal_myhart_id>
20014f64:	872a                	mv	a4,a0
20014f66:	800017b7          	lui	a5,0x80001
20014f6a:	070a                	slli	a4,a4,0x2
20014f6c:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20014f70:	97ba                	add	a5,a5,a4
20014f72:	439c                	lw	a5,0(a5)
20014f74:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:120

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
20014f78:	342027f3          	csrr	a5,mcause
20014f7c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:121
    if ( cpu ) {
20014f80:	fec42783          	lw	a5,-20(s0)
20014f84:	c795                	beqz	a5,20014fb0 <__metal_default_sw_handler+0x5e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20014f86:	fec42503          	lw	a0,-20(s0)
20014f8a:	3381                	jal	20014cca <__metal_driver_cpu_interrupt_controller>
20014f8c:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:124
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE]((struct metal_cpu *)cpu, id);
20014f90:	fe842783          	lw	a5,-24(s0)
20014f94:	3ff7f793          	andi	a5,a5,1023
20014f98:	fe442703          	lw	a4,-28(s0)
20014f9c:	0e078793          	addi	a5,a5,224
20014fa0:	078a                	slli	a5,a5,0x2
20014fa2:	97ba                	add	a5,a5,a4
20014fa4:	479c                	lw	a5,8(a5)
20014fa6:	fdc42583          	lw	a1,-36(s0)
20014faa:	fec42503          	lw	a0,-20(s0)
20014fae:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:126
    }
}
20014fb0:	0001                	nop
20014fb2:	50b2                	lw	ra,44(sp)
20014fb4:	5422                	lw	s0,40(sp)
20014fb6:	6145                	addi	sp,sp,48
20014fb8:	8082                	ret

20014fba <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_timer_interrupt_vector_handler (void) {
20014fba:	711d                	addi	sp,sp,-96
20014fbc:	ce86                	sw	ra,92(sp)
20014fbe:	cc96                	sw	t0,88(sp)
20014fc0:	ca9a                	sw	t1,84(sp)
20014fc2:	c89e                	sw	t2,80(sp)
20014fc4:	c6a2                	sw	s0,76(sp)
20014fc6:	c4aa                	sw	a0,72(sp)
20014fc8:	c2ae                	sw	a1,68(sp)
20014fca:	c0b2                	sw	a2,64(sp)
20014fcc:	de36                	sw	a3,60(sp)
20014fce:	dc3a                	sw	a4,56(sp)
20014fd0:	da3e                	sw	a5,52(sp)
20014fd2:	d842                	sw	a6,48(sp)
20014fd4:	d646                	sw	a7,44(sp)
20014fd6:	d472                	sw	t3,40(sp)
20014fd8:	d276                	sw	t4,36(sp)
20014fda:	d07a                	sw	t5,32(sp)
20014fdc:	ce7e                	sw	t6,28(sp)
20014fde:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20014fe0:	3391                	jal	20014d24 <__metal_myhart_id>
20014fe2:	872a                	mv	a4,a0
20014fe4:	800017b7          	lui	a5,0x80001
20014fe8:	070a                	slli	a4,a4,0x2
20014fea:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20014fee:	97ba                	add	a5,a5,a4
20014ff0:	439c                	lw	a5,0(a5)
20014ff2:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:134

    if ( cpu ) {
20014ff6:	fac42783          	lw	a5,-84(s0)
20014ffa:	c785                	beqz	a5,20015022 <metal_timer_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:136
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20014ffc:	fac42503          	lw	a0,-84(s0)
20015000:	31e9                	jal	20014cca <__metal_driver_cpu_interrupt_controller>
20015002:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].exint_data;
20015006:	fa842783          	lw	a5,-88(s0)
2001500a:	1407a783          	lw	a5,320(a5)
2001500e:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
        intc->metal_int_table[METAL_INTERRUPT_ID_TMR].handler(METAL_INTERRUPT_ID_TMR, priv);
20015012:	fa842783          	lw	a5,-88(s0)
20015016:	1387a783          	lw	a5,312(a5)
2001501a:	fa442583          	lw	a1,-92(s0)
2001501e:	451d                	li	a0,7
20015020:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
    }
}
20015022:	0001                	nop
20015024:	40f6                	lw	ra,92(sp)
20015026:	42e6                	lw	t0,88(sp)
20015028:	4356                	lw	t1,84(sp)
2001502a:	43c6                	lw	t2,80(sp)
2001502c:	4436                	lw	s0,76(sp)
2001502e:	4526                	lw	a0,72(sp)
20015030:	4596                	lw	a1,68(sp)
20015032:	4606                	lw	a2,64(sp)
20015034:	56f2                	lw	a3,60(sp)
20015036:	5762                	lw	a4,56(sp)
20015038:	57d2                	lw	a5,52(sp)
2001503a:	5842                	lw	a6,48(sp)
2001503c:	58b2                	lw	a7,44(sp)
2001503e:	5e22                	lw	t3,40(sp)
20015040:	5e92                	lw	t4,36(sp)
20015042:	5f02                	lw	t5,32(sp)
20015044:	4ff2                	lw	t6,28(sp)
20015046:	6125                	addi	sp,sp,96
20015048:	30200073          	mret

2001504c <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:142

void __metal_default_timer_handler (int id, void *priv) {
2001504c:	7179                	addi	sp,sp,-48
2001504e:	d606                	sw	ra,44(sp)
20015050:	d422                	sw	s0,40(sp)
20015052:	1800                	addi	s0,sp,48
20015054:	fca42e23          	sw	a0,-36(s0)
20015058:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:143
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
2001505c:	31e1                	jal	20014d24 <__metal_myhart_id>
2001505e:	87aa                	mv	a5,a0
20015060:	853e                	mv	a0,a5
20015062:	3949                	jal	20014cf4 <__metal_driver_cpu_get>
20015064:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20015068:	fec42503          	lw	a0,-20(s0)
2001506c:	1c2010ef          	jal	ra,2001622e <__metal_driver_cpu_mtime_get>
20015070:	fea42023          	sw	a0,-32(s0)
20015074:	feb42223          	sw	a1,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:147

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20015078:	fe042783          	lw	a5,-32(s0)
2001507c:	fe442803          	lw	a6,-28(s0)
20015080:	45a9                	li	a1,10
20015082:	4601                	li	a2,0
20015084:	00b786b3          	add	a3,a5,a1
20015088:	8536                	mv	a0,a3
2001508a:	00f53533          	sltu	a0,a0,a5
2001508e:	00c80733          	add	a4,a6,a2
20015092:	00e507b3          	add	a5,a0,a4
20015096:	873e                	mv	a4,a5
20015098:	87b6                	mv	a5,a3
2001509a:	883a                	mv	a6,a4
2001509c:	85be                	mv	a1,a5
2001509e:	8642                	mv	a2,a6
200150a0:	fec42503          	lw	a0,-20(s0)
200150a4:	1f0010ef          	jal	ra,20016294 <__metal_driver_cpu_mtimecmp_set>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148
}
200150a8:	0001                	nop
200150aa:	50b2                	lw	ra,44(sp)
200150ac:	5422                	lw	s0,40(sp)
200150ae:	6145                	addi	sp,sp,48
200150b0:	8082                	ret
	...

20015100 <__metal_exception_handler>:
__metal_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:165
        intc->metal_int_table[METAL_INTERRUPT_ID_EXT].handler(METAL_INTERRUPT_ID_EXT, priv);
    }
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler (void) {
20015100:	7119                	addi	sp,sp,-128
20015102:	de86                	sw	ra,124(sp)
20015104:	dc96                	sw	t0,120(sp)
20015106:	da9a                	sw	t1,116(sp)
20015108:	d89e                	sw	t2,112(sp)
2001510a:	d6a2                	sw	s0,108(sp)
2001510c:	d4aa                	sw	a0,104(sp)
2001510e:	d2ae                	sw	a1,100(sp)
20015110:	d0b2                	sw	a2,96(sp)
20015112:	ceb6                	sw	a3,92(sp)
20015114:	ccba                	sw	a4,88(sp)
20015116:	cabe                	sw	a5,84(sp)
20015118:	c8c2                	sw	a6,80(sp)
2001511a:	c6c6                	sw	a7,76(sp)
2001511c:	c4f2                	sw	t3,72(sp)
2001511e:	c2f6                	sw	t4,68(sp)
20015120:	c0fa                	sw	t5,64(sp)
20015122:	de7e                	sw	t6,60(sp)
20015124:	0100                	addi	s0,sp,128
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:170
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015126:	3efd                	jal	20014d24 <__metal_myhart_id>
20015128:	872a                	mv	a4,a0
2001512a:	800017b7          	lui	a5,0x80001
2001512e:	070a                	slli	a4,a4,0x2
20015130:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20015134:	97ba                	add	a5,a5,a4
20015136:	439c                	lw	a5,0(a5)
20015138:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:172

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
2001513c:	342027f3          	csrr	a5,mcause
20015140:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:173
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
20015144:	341027f3          	csrr	a5,mepc
20015148:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    __asm__ volatile ("csrr %0, mtval" : "=r"(mtval));
2001514c:	343027f3          	csrr	a5,mtval
20015150:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:175
    __asm__ volatile ("csrr %0, mtvec" : "=r"(mtvec));
20015154:	305027f3          	csrr	a5,mtvec
20015158:	f8f42e23          	sw	a5,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177

    if ( cpu ) {
2001515c:	fac42783          	lw	a5,-84(s0)
20015160:	c7e9                	beqz	a5,2001522a <__metal_exception_handler+0x12a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015162:	fac42503          	lw	a0,-84(s0)
20015166:	b65ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
2001516a:	f8a42c23          	sw	a0,-104(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:180
        id = mcause & METAL_MCAUSE_CAUSE;
2001516e:	fa842783          	lw	a5,-88(s0)
20015172:	3ff7f793          	andi	a5,a5,1023
20015176:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181
        if (mcause & METAL_MCAUSE_INTR) {
2001517a:	fa842783          	lw	a5,-88(s0)
2001517e:	0807d863          	bgez	a5,2001520e <__metal_exception_handler+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20015182:	f9442703          	lw	a4,-108(s0)
20015186:	47ad                	li	a5,11
20015188:	00e7d763          	bge	a5,a4,20015196 <__metal_exception_handler+0x96>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183 (discriminator 1)
               ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
2001518c:	f9c42783          	lw	a5,-100(s0)
20015190:	03f7f793          	andi	a5,a5,63
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20015194:	ef9d                	bnez	a5,200151d2 <__metal_exception_handler+0xd2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
                priv = intc->metal_int_table[id].exint_data;
20015196:	f9842683          	lw	a3,-104(s0)
2001519a:	f9442703          	lw	a4,-108(s0)
2001519e:	87ba                	mv	a5,a4
200151a0:	0786                	slli	a5,a5,0x1
200151a2:	97ba                	add	a5,a5,a4
200151a4:	078e                	slli	a5,a5,0x3
200151a6:	97b6                	add	a5,a5,a3
200151a8:	0987a783          	lw	a5,152(a5)
200151ac:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
                intc->metal_int_table[id].handler(id, priv);
200151b0:	f9842683          	lw	a3,-104(s0)
200151b4:	f9442703          	lw	a4,-108(s0)
200151b8:	87ba                	mv	a5,a4
200151ba:	0786                	slli	a5,a5,0x1
200151bc:	97ba                	add	a5,a5,a4
200151be:	078e                	slli	a5,a5,0x3
200151c0:	97b6                	add	a5,a5,a3
200151c2:	0907a783          	lw	a5,144(a5)
200151c6:	f8c42583          	lw	a1,-116(s0)
200151ca:	f9442503          	lw	a0,-108(s0)
200151ce:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
		return;
200151d0:	a8a9                	j	2001522a <__metal_exception_handler+0x12a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
200151d2:	f9c42783          	lw	a5,-100(s0)
200151d6:	03f7f713          	andi	a4,a5,63
200151da:	4789                	li	a5,2
200151dc:	04f71763          	bne	a4,a5,2001522a <__metal_exception_handler+0x12a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192
    		uintptr_t mtvt;
    		metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile ("csrr %0, 0x307" : "=r"(mtvt));
200151e0:	307027f3          	csrr	a5,mtvt
200151e4:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
               	priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200151e8:	f9842783          	lw	a5,-104(s0)
200151ec:	0dc7a783          	lw	a5,220(a5)
200151f0:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
               	mtvt_handler = (metal_interrupt_handler_t)*(uintptr_t *)mtvt;
200151f4:	f9042783          	lw	a5,-112(s0)
200151f8:	439c                	lw	a5,0(a5)
200151fa:	f8f42423          	sw	a5,-120(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
               	mtvt_handler(id, priv);
200151fe:	f8842783          	lw	a5,-120(s0)
20015202:	f8c42583          	lw	a1,-116(s0)
20015206:	f9442503          	lw	a0,-108(s0)
2001520a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:196
		return;
2001520c:	a839                	j	2001522a <__metal_exception_handler+0x12a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:199
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
2001520e:	f9842703          	lw	a4,-104(s0)
20015212:	f9442783          	lw	a5,-108(s0)
20015216:	0e078793          	addi	a5,a5,224
2001521a:	078a                	slli	a5,a5,0x2
2001521c:	97ba                	add	a5,a5,a4
2001521e:	479c                	lw	a5,8(a5)
20015220:	f9442583          	lw	a1,-108(s0)
20015224:	fac42503          	lw	a0,-84(s0)
20015228:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
        }
    }
}
2001522a:	50f6                	lw	ra,124(sp)
2001522c:	52e6                	lw	t0,120(sp)
2001522e:	5356                	lw	t1,116(sp)
20015230:	53c6                	lw	t2,112(sp)
20015232:	5436                	lw	s0,108(sp)
20015234:	5526                	lw	a0,104(sp)
20015236:	5596                	lw	a1,100(sp)
20015238:	5606                	lw	a2,96(sp)
2001523a:	46f6                	lw	a3,92(sp)
2001523c:	4766                	lw	a4,88(sp)
2001523e:	47d6                	lw	a5,84(sp)
20015240:	4846                	lw	a6,80(sp)
20015242:	48b6                	lw	a7,76(sp)
20015244:	4e26                	lw	t3,72(sp)
20015246:	4e96                	lw	t4,68(sp)
20015248:	4f06                	lw	t5,64(sp)
2001524a:	5ff2                	lw	t6,60(sp)
2001524c:	6109                	addi	sp,sp,128
2001524e:	30200073          	mret
	...

20015278 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler (void) {
20015278:	711d                	addi	sp,sp,-96
2001527a:	ce86                	sw	ra,92(sp)
2001527c:	cc96                	sw	t0,88(sp)
2001527e:	ca9a                	sw	t1,84(sp)
20015280:	c89e                	sw	t2,80(sp)
20015282:	c6a2                	sw	s0,76(sp)
20015284:	c4aa                	sw	a0,72(sp)
20015286:	c2ae                	sw	a1,68(sp)
20015288:	c0b2                	sw	a2,64(sp)
2001528a:	de36                	sw	a3,60(sp)
2001528c:	dc3a                	sw	a4,56(sp)
2001528e:	da3e                	sw	a5,52(sp)
20015290:	d842                	sw	a6,48(sp)
20015292:	d646                	sw	a7,44(sp)
20015294:	d472                	sw	t3,40(sp)
20015296:	d276                	sw	t4,36(sp)
20015298:	d07a                	sw	t5,32(sp)
2001529a:	ce7e                	sw	t6,28(sp)
2001529c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001529e:	a87ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
200152a2:	872a                	mv	a4,a0
200152a4:	800017b7          	lui	a5,0x80001
200152a8:	070a                	slli	a4,a4,0x2
200152aa:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
200152ae:	97ba                	add	a5,a5,a4
200152b0:	439c                	lw	a5,0(a5)
200152b2:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:210

    if ( cpu ) {
200152b6:	fac42783          	lw	a5,-84(s0)
200152ba:	c78d                	beqz	a5,200152e4 <metal_lc0_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:212
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200152bc:	fac42503          	lw	a0,-84(s0)
200152c0:	a0bff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
200152c4:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:213
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC0].exint_data;
200152c8:	fa842783          	lw	a5,-88(s0)
200152cc:	2187a783          	lw	a5,536(a5)
200152d0:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214
        intc->metal_int_table[METAL_INTERRUPT_ID_LC0].handler(METAL_INTERRUPT_ID_LC0, priv);
200152d4:	fa842783          	lw	a5,-88(s0)
200152d8:	2107a783          	lw	a5,528(a5)
200152dc:	fa442583          	lw	a1,-92(s0)
200152e0:	4541                	li	a0,16
200152e2:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
    }
}
200152e4:	0001                	nop
200152e6:	40f6                	lw	ra,92(sp)
200152e8:	42e6                	lw	t0,88(sp)
200152ea:	4356                	lw	t1,84(sp)
200152ec:	43c6                	lw	t2,80(sp)
200152ee:	4436                	lw	s0,76(sp)
200152f0:	4526                	lw	a0,72(sp)
200152f2:	4596                	lw	a1,68(sp)
200152f4:	4606                	lw	a2,64(sp)
200152f6:	56f2                	lw	a3,60(sp)
200152f8:	5762                	lw	a4,56(sp)
200152fa:	57d2                	lw	a5,52(sp)
200152fc:	5842                	lw	a6,48(sp)
200152fe:	58b2                	lw	a7,44(sp)
20015300:	5e22                	lw	t3,40(sp)
20015302:	5e92                	lw	t4,36(sp)
20015304:	5f02                	lw	t5,32(sp)
20015306:	4ff2                	lw	t6,28(sp)
20015308:	6125                	addi	sp,sp,96
2001530a:	30200073          	mret

2001530e <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler (void) {
2001530e:	711d                	addi	sp,sp,-96
20015310:	ce86                	sw	ra,92(sp)
20015312:	cc96                	sw	t0,88(sp)
20015314:	ca9a                	sw	t1,84(sp)
20015316:	c89e                	sw	t2,80(sp)
20015318:	c6a2                	sw	s0,76(sp)
2001531a:	c4aa                	sw	a0,72(sp)
2001531c:	c2ae                	sw	a1,68(sp)
2001531e:	c0b2                	sw	a2,64(sp)
20015320:	de36                	sw	a3,60(sp)
20015322:	dc3a                	sw	a4,56(sp)
20015324:	da3e                	sw	a5,52(sp)
20015326:	d842                	sw	a6,48(sp)
20015328:	d646                	sw	a7,44(sp)
2001532a:	d472                	sw	t3,40(sp)
2001532c:	d276                	sw	t4,36(sp)
2001532e:	d07a                	sw	t5,32(sp)
20015330:	ce7e                	sw	t6,28(sp)
20015332:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:222
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015334:	9f1ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
20015338:	872a                	mv	a4,a0
2001533a:	800017b7          	lui	a5,0x80001
2001533e:	070a                	slli	a4,a4,0x2
20015340:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20015344:	97ba                	add	a5,a5,a4
20015346:	439c                	lw	a5,0(a5)
20015348:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

    if ( cpu ) {
2001534c:	fac42783          	lw	a5,-84(s0)
20015350:	c78d                	beqz	a5,2001537a <metal_lc1_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015352:	fac42503          	lw	a0,-84(s0)
20015356:	975ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
2001535a:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:227
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC1].exint_data;
2001535e:	fa842783          	lw	a5,-88(s0)
20015362:	2307a783          	lw	a5,560(a5)
20015366:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:228
        intc->metal_int_table[METAL_INTERRUPT_ID_LC1].handler(METAL_INTERRUPT_ID_LC1, priv);
2001536a:	fa842783          	lw	a5,-88(s0)
2001536e:	2287a783          	lw	a5,552(a5)
20015372:	fa442583          	lw	a1,-92(s0)
20015376:	4545                	li	a0,17
20015378:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    }
}
2001537a:	0001                	nop
2001537c:	40f6                	lw	ra,92(sp)
2001537e:	42e6                	lw	t0,88(sp)
20015380:	4356                	lw	t1,84(sp)
20015382:	43c6                	lw	t2,80(sp)
20015384:	4436                	lw	s0,76(sp)
20015386:	4526                	lw	a0,72(sp)
20015388:	4596                	lw	a1,68(sp)
2001538a:	4606                	lw	a2,64(sp)
2001538c:	56f2                	lw	a3,60(sp)
2001538e:	5762                	lw	a4,56(sp)
20015390:	57d2                	lw	a5,52(sp)
20015392:	5842                	lw	a6,48(sp)
20015394:	58b2                	lw	a7,44(sp)
20015396:	5e22                	lw	t3,40(sp)
20015398:	5e92                	lw	t4,36(sp)
2001539a:	5f02                	lw	t5,32(sp)
2001539c:	4ff2                	lw	t6,28(sp)
2001539e:	6125                	addi	sp,sp,96
200153a0:	30200073          	mret

200153a4 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:233

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler (void) {
200153a4:	711d                	addi	sp,sp,-96
200153a6:	ce86                	sw	ra,92(sp)
200153a8:	cc96                	sw	t0,88(sp)
200153aa:	ca9a                	sw	t1,84(sp)
200153ac:	c89e                	sw	t2,80(sp)
200153ae:	c6a2                	sw	s0,76(sp)
200153b0:	c4aa                	sw	a0,72(sp)
200153b2:	c2ae                	sw	a1,68(sp)
200153b4:	c0b2                	sw	a2,64(sp)
200153b6:	de36                	sw	a3,60(sp)
200153b8:	dc3a                	sw	a4,56(sp)
200153ba:	da3e                	sw	a5,52(sp)
200153bc:	d842                	sw	a6,48(sp)
200153be:	d646                	sw	a7,44(sp)
200153c0:	d472                	sw	t3,40(sp)
200153c2:	d276                	sw	t4,36(sp)
200153c4:	d07a                	sw	t5,32(sp)
200153c6:	ce7e                	sw	t6,28(sp)
200153c8:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200153ca:	95bff0ef          	jal	ra,20014d24 <__metal_myhart_id>
200153ce:	872a                	mv	a4,a0
200153d0:	800017b7          	lui	a5,0x80001
200153d4:	070a                	slli	a4,a4,0x2
200153d6:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
200153da:	97ba                	add	a5,a5,a4
200153dc:	439c                	lw	a5,0(a5)
200153de:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:238

    if ( cpu ) {
200153e2:	fac42783          	lw	a5,-84(s0)
200153e6:	c78d                	beqz	a5,20015410 <metal_lc2_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200153e8:	fac42503          	lw	a0,-84(s0)
200153ec:	8dfff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
200153f0:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC2].exint_data;
200153f4:	fa842783          	lw	a5,-88(s0)
200153f8:	2487a783          	lw	a5,584(a5)
200153fc:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:242
        intc->metal_int_table[METAL_INTERRUPT_ID_LC2].handler(METAL_INTERRUPT_ID_LC2, priv);
20015400:	fa842783          	lw	a5,-88(s0)
20015404:	2407a783          	lw	a5,576(a5)
20015408:	fa442583          	lw	a1,-92(s0)
2001540c:	4549                	li	a0,18
2001540e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244
    }
}
20015410:	0001                	nop
20015412:	40f6                	lw	ra,92(sp)
20015414:	42e6                	lw	t0,88(sp)
20015416:	4356                	lw	t1,84(sp)
20015418:	43c6                	lw	t2,80(sp)
2001541a:	4436                	lw	s0,76(sp)
2001541c:	4526                	lw	a0,72(sp)
2001541e:	4596                	lw	a1,68(sp)
20015420:	4606                	lw	a2,64(sp)
20015422:	56f2                	lw	a3,60(sp)
20015424:	5762                	lw	a4,56(sp)
20015426:	57d2                	lw	a5,52(sp)
20015428:	5842                	lw	a6,48(sp)
2001542a:	58b2                	lw	a7,44(sp)
2001542c:	5e22                	lw	t3,40(sp)
2001542e:	5e92                	lw	t4,36(sp)
20015430:	5f02                	lw	t5,32(sp)
20015432:	4ff2                	lw	t6,28(sp)
20015434:	6125                	addi	sp,sp,96
20015436:	30200073          	mret

2001543a <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:247

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler (void) {
2001543a:	711d                	addi	sp,sp,-96
2001543c:	ce86                	sw	ra,92(sp)
2001543e:	cc96                	sw	t0,88(sp)
20015440:	ca9a                	sw	t1,84(sp)
20015442:	c89e                	sw	t2,80(sp)
20015444:	c6a2                	sw	s0,76(sp)
20015446:	c4aa                	sw	a0,72(sp)
20015448:	c2ae                	sw	a1,68(sp)
2001544a:	c0b2                	sw	a2,64(sp)
2001544c:	de36                	sw	a3,60(sp)
2001544e:	dc3a                	sw	a4,56(sp)
20015450:	da3e                	sw	a5,52(sp)
20015452:	d842                	sw	a6,48(sp)
20015454:	d646                	sw	a7,44(sp)
20015456:	d472                	sw	t3,40(sp)
20015458:	d276                	sw	t4,36(sp)
2001545a:	d07a                	sw	t5,32(sp)
2001545c:	ce7e                	sw	t6,28(sp)
2001545e:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015460:	8c5ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
20015464:	872a                	mv	a4,a0
20015466:	800017b7          	lui	a5,0x80001
2001546a:	070a                	slli	a4,a4,0x2
2001546c:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20015470:	97ba                	add	a5,a5,a4
20015472:	439c                	lw	a5,0(a5)
20015474:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:252

    if ( cpu ) {
20015478:	fac42783          	lw	a5,-84(s0)
2001547c:	c78d                	beqz	a5,200154a6 <metal_lc3_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001547e:	fac42503          	lw	a0,-84(s0)
20015482:	849ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
20015486:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC3].exint_data;
2001548a:	fa842783          	lw	a5,-88(s0)
2001548e:	2607a783          	lw	a5,608(a5)
20015492:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
        intc->metal_int_table[METAL_INTERRUPT_ID_LC3].handler(METAL_INTERRUPT_ID_LC3, priv);
20015496:	fa842783          	lw	a5,-88(s0)
2001549a:	2587a783          	lw	a5,600(a5)
2001549e:	fa442583          	lw	a1,-92(s0)
200154a2:	454d                	li	a0,19
200154a4:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:258
    }
}
200154a6:	0001                	nop
200154a8:	40f6                	lw	ra,92(sp)
200154aa:	42e6                	lw	t0,88(sp)
200154ac:	4356                	lw	t1,84(sp)
200154ae:	43c6                	lw	t2,80(sp)
200154b0:	4436                	lw	s0,76(sp)
200154b2:	4526                	lw	a0,72(sp)
200154b4:	4596                	lw	a1,68(sp)
200154b6:	4606                	lw	a2,64(sp)
200154b8:	56f2                	lw	a3,60(sp)
200154ba:	5762                	lw	a4,56(sp)
200154bc:	57d2                	lw	a5,52(sp)
200154be:	5842                	lw	a6,48(sp)
200154c0:	58b2                	lw	a7,44(sp)
200154c2:	5e22                	lw	t3,40(sp)
200154c4:	5e92                	lw	t4,36(sp)
200154c6:	5f02                	lw	t5,32(sp)
200154c8:	4ff2                	lw	t6,28(sp)
200154ca:	6125                	addi	sp,sp,96
200154cc:	30200073          	mret

200154d0 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler (void) {
200154d0:	711d                	addi	sp,sp,-96
200154d2:	ce86                	sw	ra,92(sp)
200154d4:	cc96                	sw	t0,88(sp)
200154d6:	ca9a                	sw	t1,84(sp)
200154d8:	c89e                	sw	t2,80(sp)
200154da:	c6a2                	sw	s0,76(sp)
200154dc:	c4aa                	sw	a0,72(sp)
200154de:	c2ae                	sw	a1,68(sp)
200154e0:	c0b2                	sw	a2,64(sp)
200154e2:	de36                	sw	a3,60(sp)
200154e4:	dc3a                	sw	a4,56(sp)
200154e6:	da3e                	sw	a5,52(sp)
200154e8:	d842                	sw	a6,48(sp)
200154ea:	d646                	sw	a7,44(sp)
200154ec:	d472                	sw	t3,40(sp)
200154ee:	d276                	sw	t4,36(sp)
200154f0:	d07a                	sw	t5,32(sp)
200154f2:	ce7e                	sw	t6,28(sp)
200154f4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:264
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200154f6:	82fff0ef          	jal	ra,20014d24 <__metal_myhart_id>
200154fa:	872a                	mv	a4,a0
200154fc:	800017b7          	lui	a5,0x80001
20015500:	070a                	slli	a4,a4,0x2
20015502:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20015506:	97ba                	add	a5,a5,a4
20015508:	439c                	lw	a5,0(a5)
2001550a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266

    if ( cpu ) {
2001550e:	fac42783          	lw	a5,-84(s0)
20015512:	c78d                	beqz	a5,2001553c <metal_lc4_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:268
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015514:	fac42503          	lw	a0,-84(s0)
20015518:	fb2ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
2001551c:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:269
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC4].exint_data;
20015520:	fa842783          	lw	a5,-88(s0)
20015524:	2787a783          	lw	a5,632(a5)
20015528:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:270
        intc->metal_int_table[METAL_INTERRUPT_ID_LC4].handler(METAL_INTERRUPT_ID_LC4, priv);
2001552c:	fa842783          	lw	a5,-88(s0)
20015530:	2707a783          	lw	a5,624(a5)
20015534:	fa442583          	lw	a1,-92(s0)
20015538:	4551                	li	a0,20
2001553a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    }
}
2001553c:	0001                	nop
2001553e:	40f6                	lw	ra,92(sp)
20015540:	42e6                	lw	t0,88(sp)
20015542:	4356                	lw	t1,84(sp)
20015544:	43c6                	lw	t2,80(sp)
20015546:	4436                	lw	s0,76(sp)
20015548:	4526                	lw	a0,72(sp)
2001554a:	4596                	lw	a1,68(sp)
2001554c:	4606                	lw	a2,64(sp)
2001554e:	56f2                	lw	a3,60(sp)
20015550:	5762                	lw	a4,56(sp)
20015552:	57d2                	lw	a5,52(sp)
20015554:	5842                	lw	a6,48(sp)
20015556:	58b2                	lw	a7,44(sp)
20015558:	5e22                	lw	t3,40(sp)
2001555a:	5e92                	lw	t4,36(sp)
2001555c:	5f02                	lw	t5,32(sp)
2001555e:	4ff2                	lw	t6,28(sp)
20015560:	6125                	addi	sp,sp,96
20015562:	30200073          	mret

20015566 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:275

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler (void) {
20015566:	711d                	addi	sp,sp,-96
20015568:	ce86                	sw	ra,92(sp)
2001556a:	cc96                	sw	t0,88(sp)
2001556c:	ca9a                	sw	t1,84(sp)
2001556e:	c89e                	sw	t2,80(sp)
20015570:	c6a2                	sw	s0,76(sp)
20015572:	c4aa                	sw	a0,72(sp)
20015574:	c2ae                	sw	a1,68(sp)
20015576:	c0b2                	sw	a2,64(sp)
20015578:	de36                	sw	a3,60(sp)
2001557a:	dc3a                	sw	a4,56(sp)
2001557c:	da3e                	sw	a5,52(sp)
2001557e:	d842                	sw	a6,48(sp)
20015580:	d646                	sw	a7,44(sp)
20015582:	d472                	sw	t3,40(sp)
20015584:	d276                	sw	t4,36(sp)
20015586:	d07a                	sw	t5,32(sp)
20015588:	ce7e                	sw	t6,28(sp)
2001558a:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001558c:	f98ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
20015590:	872a                	mv	a4,a0
20015592:	800017b7          	lui	a5,0x80001
20015596:	070a                	slli	a4,a4,0x2
20015598:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
2001559c:	97ba                	add	a5,a5,a4
2001559e:	439c                	lw	a5,0(a5)
200155a0:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:280

    if ( cpu ) {
200155a4:	fac42783          	lw	a5,-84(s0)
200155a8:	c78d                	beqz	a5,200155d2 <metal_lc5_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:282
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200155aa:	fac42503          	lw	a0,-84(s0)
200155ae:	f1cff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
200155b2:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC5].exint_data;
200155b6:	fa842783          	lw	a5,-88(s0)
200155ba:	2907a783          	lw	a5,656(a5)
200155be:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
        intc->metal_int_table[METAL_INTERRUPT_ID_LC5].handler(METAL_INTERRUPT_ID_LC5, priv);
200155c2:	fa842783          	lw	a5,-88(s0)
200155c6:	2887a783          	lw	a5,648(a5)
200155ca:	fa442583          	lw	a1,-92(s0)
200155ce:	4555                	li	a0,21
200155d0:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:286
    }
}
200155d2:	0001                	nop
200155d4:	40f6                	lw	ra,92(sp)
200155d6:	42e6                	lw	t0,88(sp)
200155d8:	4356                	lw	t1,84(sp)
200155da:	43c6                	lw	t2,80(sp)
200155dc:	4436                	lw	s0,76(sp)
200155de:	4526                	lw	a0,72(sp)
200155e0:	4596                	lw	a1,68(sp)
200155e2:	4606                	lw	a2,64(sp)
200155e4:	56f2                	lw	a3,60(sp)
200155e6:	5762                	lw	a4,56(sp)
200155e8:	57d2                	lw	a5,52(sp)
200155ea:	5842                	lw	a6,48(sp)
200155ec:	58b2                	lw	a7,44(sp)
200155ee:	5e22                	lw	t3,40(sp)
200155f0:	5e92                	lw	t4,36(sp)
200155f2:	5f02                	lw	t5,32(sp)
200155f4:	4ff2                	lw	t6,28(sp)
200155f6:	6125                	addi	sp,sp,96
200155f8:	30200073          	mret

200155fc <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler (void) {
200155fc:	711d                	addi	sp,sp,-96
200155fe:	ce86                	sw	ra,92(sp)
20015600:	cc96                	sw	t0,88(sp)
20015602:	ca9a                	sw	t1,84(sp)
20015604:	c89e                	sw	t2,80(sp)
20015606:	c6a2                	sw	s0,76(sp)
20015608:	c4aa                	sw	a0,72(sp)
2001560a:	c2ae                	sw	a1,68(sp)
2001560c:	c0b2                	sw	a2,64(sp)
2001560e:	de36                	sw	a3,60(sp)
20015610:	dc3a                	sw	a4,56(sp)
20015612:	da3e                	sw	a5,52(sp)
20015614:	d842                	sw	a6,48(sp)
20015616:	d646                	sw	a7,44(sp)
20015618:	d472                	sw	t3,40(sp)
2001561a:	d276                	sw	t4,36(sp)
2001561c:	d07a                	sw	t5,32(sp)
2001561e:	ce7e                	sw	t6,28(sp)
20015620:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:292
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015622:	f02ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
20015626:	872a                	mv	a4,a0
20015628:	800017b7          	lui	a5,0x80001
2001562c:	070a                	slli	a4,a4,0x2
2001562e:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20015632:	97ba                	add	a5,a5,a4
20015634:	439c                	lw	a5,0(a5)
20015636:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:294

    if ( cpu ) {
2001563a:	fac42783          	lw	a5,-84(s0)
2001563e:	c78d                	beqz	a5,20015668 <metal_lc6_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015640:	fac42503          	lw	a0,-84(s0)
20015644:	e86ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
20015648:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC6].exint_data;
2001564c:	fa842783          	lw	a5,-88(s0)
20015650:	2a87a783          	lw	a5,680(a5)
20015654:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:298
        intc->metal_int_table[METAL_INTERRUPT_ID_LC6].handler(METAL_INTERRUPT_ID_LC6, priv);
20015658:	fa842783          	lw	a5,-88(s0)
2001565c:	2a07a783          	lw	a5,672(a5)
20015660:	fa442583          	lw	a1,-92(s0)
20015664:	4559                	li	a0,22
20015666:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:300
    }
}
20015668:	0001                	nop
2001566a:	40f6                	lw	ra,92(sp)
2001566c:	42e6                	lw	t0,88(sp)
2001566e:	4356                	lw	t1,84(sp)
20015670:	43c6                	lw	t2,80(sp)
20015672:	4436                	lw	s0,76(sp)
20015674:	4526                	lw	a0,72(sp)
20015676:	4596                	lw	a1,68(sp)
20015678:	4606                	lw	a2,64(sp)
2001567a:	56f2                	lw	a3,60(sp)
2001567c:	5762                	lw	a4,56(sp)
2001567e:	57d2                	lw	a5,52(sp)
20015680:	5842                	lw	a6,48(sp)
20015682:	58b2                	lw	a7,44(sp)
20015684:	5e22                	lw	t3,40(sp)
20015686:	5e92                	lw	t4,36(sp)
20015688:	5f02                	lw	t5,32(sp)
2001568a:	4ff2                	lw	t6,28(sp)
2001568c:	6125                	addi	sp,sp,96
2001568e:	30200073          	mret

20015692 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler (void) {
20015692:	711d                	addi	sp,sp,-96
20015694:	ce86                	sw	ra,92(sp)
20015696:	cc96                	sw	t0,88(sp)
20015698:	ca9a                	sw	t1,84(sp)
2001569a:	c89e                	sw	t2,80(sp)
2001569c:	c6a2                	sw	s0,76(sp)
2001569e:	c4aa                	sw	a0,72(sp)
200156a0:	c2ae                	sw	a1,68(sp)
200156a2:	c0b2                	sw	a2,64(sp)
200156a4:	de36                	sw	a3,60(sp)
200156a6:	dc3a                	sw	a4,56(sp)
200156a8:	da3e                	sw	a5,52(sp)
200156aa:	d842                	sw	a6,48(sp)
200156ac:	d646                	sw	a7,44(sp)
200156ae:	d472                	sw	t3,40(sp)
200156b0:	d276                	sw	t4,36(sp)
200156b2:	d07a                	sw	t5,32(sp)
200156b4:	ce7e                	sw	t6,28(sp)
200156b6:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:306
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200156b8:	e6cff0ef          	jal	ra,20014d24 <__metal_myhart_id>
200156bc:	872a                	mv	a4,a0
200156be:	800017b7          	lui	a5,0x80001
200156c2:	070a                	slli	a4,a4,0x2
200156c4:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
200156c8:	97ba                	add	a5,a5,a4
200156ca:	439c                	lw	a5,0(a5)
200156cc:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:308

    if ( cpu ) {
200156d0:	fac42783          	lw	a5,-84(s0)
200156d4:	c78d                	beqz	a5,200156fe <metal_lc7_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:310
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200156d6:	fac42503          	lw	a0,-84(s0)
200156da:	df0ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
200156de:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC7].exint_data;
200156e2:	fa842783          	lw	a5,-88(s0)
200156e6:	2c07a783          	lw	a5,704(a5)
200156ea:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:312
        intc->metal_int_table[METAL_INTERRUPT_ID_LC7].handler(METAL_INTERRUPT_ID_LC7, priv);
200156ee:	fa842783          	lw	a5,-88(s0)
200156f2:	2b87a783          	lw	a5,696(a5)
200156f6:	fa442583          	lw	a1,-92(s0)
200156fa:	455d                	li	a0,23
200156fc:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
    }
}
200156fe:	0001                	nop
20015700:	40f6                	lw	ra,92(sp)
20015702:	42e6                	lw	t0,88(sp)
20015704:	4356                	lw	t1,84(sp)
20015706:	43c6                	lw	t2,80(sp)
20015708:	4436                	lw	s0,76(sp)
2001570a:	4526                	lw	a0,72(sp)
2001570c:	4596                	lw	a1,68(sp)
2001570e:	4606                	lw	a2,64(sp)
20015710:	56f2                	lw	a3,60(sp)
20015712:	5762                	lw	a4,56(sp)
20015714:	57d2                	lw	a5,52(sp)
20015716:	5842                	lw	a6,48(sp)
20015718:	58b2                	lw	a7,44(sp)
2001571a:	5e22                	lw	t3,40(sp)
2001571c:	5e92                	lw	t4,36(sp)
2001571e:	5f02                	lw	t5,32(sp)
20015720:	4ff2                	lw	t6,28(sp)
20015722:	6125                	addi	sp,sp,96
20015724:	30200073          	mret

20015728 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler (void) {
20015728:	711d                	addi	sp,sp,-96
2001572a:	ce86                	sw	ra,92(sp)
2001572c:	cc96                	sw	t0,88(sp)
2001572e:	ca9a                	sw	t1,84(sp)
20015730:	c89e                	sw	t2,80(sp)
20015732:	c6a2                	sw	s0,76(sp)
20015734:	c4aa                	sw	a0,72(sp)
20015736:	c2ae                	sw	a1,68(sp)
20015738:	c0b2                	sw	a2,64(sp)
2001573a:	de36                	sw	a3,60(sp)
2001573c:	dc3a                	sw	a4,56(sp)
2001573e:	da3e                	sw	a5,52(sp)
20015740:	d842                	sw	a6,48(sp)
20015742:	d646                	sw	a7,44(sp)
20015744:	d472                	sw	t3,40(sp)
20015746:	d276                	sw	t4,36(sp)
20015748:	d07a                	sw	t5,32(sp)
2001574a:	ce7e                	sw	t6,28(sp)
2001574c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001574e:	dd6ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
20015752:	872a                	mv	a4,a0
20015754:	800017b7          	lui	a5,0x80001
20015758:	070a                	slli	a4,a4,0x2
2001575a:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
2001575e:	97ba                	add	a5,a5,a4
20015760:	439c                	lw	a5,0(a5)
20015762:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322

    if ( cpu ) {
20015766:	fac42783          	lw	a5,-84(s0)
2001576a:	c78d                	beqz	a5,20015794 <metal_lc8_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001576c:	fac42503          	lw	a0,-84(s0)
20015770:	d5aff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
20015774:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:325
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC8].exint_data;
20015778:	fa842783          	lw	a5,-88(s0)
2001577c:	2d87a783          	lw	a5,728(a5)
20015780:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:326
        intc->metal_int_table[METAL_INTERRUPT_ID_LC8].handler(METAL_INTERRUPT_ID_LC8, priv);
20015784:	fa842783          	lw	a5,-88(s0)
20015788:	2d07a783          	lw	a5,720(a5)
2001578c:	fa442583          	lw	a1,-92(s0)
20015790:	4561                	li	a0,24
20015792:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
    }
}
20015794:	0001                	nop
20015796:	40f6                	lw	ra,92(sp)
20015798:	42e6                	lw	t0,88(sp)
2001579a:	4356                	lw	t1,84(sp)
2001579c:	43c6                	lw	t2,80(sp)
2001579e:	4436                	lw	s0,76(sp)
200157a0:	4526                	lw	a0,72(sp)
200157a2:	4596                	lw	a1,68(sp)
200157a4:	4606                	lw	a2,64(sp)
200157a6:	56f2                	lw	a3,60(sp)
200157a8:	5762                	lw	a4,56(sp)
200157aa:	57d2                	lw	a5,52(sp)
200157ac:	5842                	lw	a6,48(sp)
200157ae:	58b2                	lw	a7,44(sp)
200157b0:	5e22                	lw	t3,40(sp)
200157b2:	5e92                	lw	t4,36(sp)
200157b4:	5f02                	lw	t5,32(sp)
200157b6:	4ff2                	lw	t6,28(sp)
200157b8:	6125                	addi	sp,sp,96
200157ba:	30200073          	mret

200157be <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler (void) {
200157be:	711d                	addi	sp,sp,-96
200157c0:	ce86                	sw	ra,92(sp)
200157c2:	cc96                	sw	t0,88(sp)
200157c4:	ca9a                	sw	t1,84(sp)
200157c6:	c89e                	sw	t2,80(sp)
200157c8:	c6a2                	sw	s0,76(sp)
200157ca:	c4aa                	sw	a0,72(sp)
200157cc:	c2ae                	sw	a1,68(sp)
200157ce:	c0b2                	sw	a2,64(sp)
200157d0:	de36                	sw	a3,60(sp)
200157d2:	dc3a                	sw	a4,56(sp)
200157d4:	da3e                	sw	a5,52(sp)
200157d6:	d842                	sw	a6,48(sp)
200157d8:	d646                	sw	a7,44(sp)
200157da:	d472                	sw	t3,40(sp)
200157dc:	d276                	sw	t4,36(sp)
200157de:	d07a                	sw	t5,32(sp)
200157e0:	ce7e                	sw	t6,28(sp)
200157e2:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200157e4:	d40ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
200157e8:	872a                	mv	a4,a0
200157ea:	800017b7          	lui	a5,0x80001
200157ee:	070a                	slli	a4,a4,0x2
200157f0:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
200157f4:	97ba                	add	a5,a5,a4
200157f6:	439c                	lw	a5,0(a5)
200157f8:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336

    if ( cpu ) {
200157fc:	fac42783          	lw	a5,-84(s0)
20015800:	c78d                	beqz	a5,2001582a <metal_lc9_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015802:	fac42503          	lw	a0,-84(s0)
20015806:	cc4ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
2001580a:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:339
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC9].exint_data;
2001580e:	fa842783          	lw	a5,-88(s0)
20015812:	2f07a783          	lw	a5,752(a5)
20015816:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        intc->metal_int_table[METAL_INTERRUPT_ID_LC9].handler(METAL_INTERRUPT_ID_LC9, priv);
2001581a:	fa842783          	lw	a5,-88(s0)
2001581e:	2e87a783          	lw	a5,744(a5)
20015822:	fa442583          	lw	a1,-92(s0)
20015826:	4565                	li	a0,25
20015828:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
    }
}
2001582a:	0001                	nop
2001582c:	40f6                	lw	ra,92(sp)
2001582e:	42e6                	lw	t0,88(sp)
20015830:	4356                	lw	t1,84(sp)
20015832:	43c6                	lw	t2,80(sp)
20015834:	4436                	lw	s0,76(sp)
20015836:	4526                	lw	a0,72(sp)
20015838:	4596                	lw	a1,68(sp)
2001583a:	4606                	lw	a2,64(sp)
2001583c:	56f2                	lw	a3,60(sp)
2001583e:	5762                	lw	a4,56(sp)
20015840:	57d2                	lw	a5,52(sp)
20015842:	5842                	lw	a6,48(sp)
20015844:	58b2                	lw	a7,44(sp)
20015846:	5e22                	lw	t3,40(sp)
20015848:	5e92                	lw	t4,36(sp)
2001584a:	5f02                	lw	t5,32(sp)
2001584c:	4ff2                	lw	t6,28(sp)
2001584e:	6125                	addi	sp,sp,96
20015850:	30200073          	mret

20015854 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:345

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc10_interrupt_vector_handler (void) {
20015854:	711d                	addi	sp,sp,-96
20015856:	ce86                	sw	ra,92(sp)
20015858:	cc96                	sw	t0,88(sp)
2001585a:	ca9a                	sw	t1,84(sp)
2001585c:	c89e                	sw	t2,80(sp)
2001585e:	c6a2                	sw	s0,76(sp)
20015860:	c4aa                	sw	a0,72(sp)
20015862:	c2ae                	sw	a1,68(sp)
20015864:	c0b2                	sw	a2,64(sp)
20015866:	de36                	sw	a3,60(sp)
20015868:	dc3a                	sw	a4,56(sp)
2001586a:	da3e                	sw	a5,52(sp)
2001586c:	d842                	sw	a6,48(sp)
2001586e:	d646                	sw	a7,44(sp)
20015870:	d472                	sw	t3,40(sp)
20015872:	d276                	sw	t4,36(sp)
20015874:	d07a                	sw	t5,32(sp)
20015876:	ce7e                	sw	t6,28(sp)
20015878:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:348
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001587a:	caaff0ef          	jal	ra,20014d24 <__metal_myhart_id>
2001587e:	872a                	mv	a4,a0
20015880:	800017b7          	lui	a5,0x80001
20015884:	070a                	slli	a4,a4,0x2
20015886:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
2001588a:	97ba                	add	a5,a5,a4
2001588c:	439c                	lw	a5,0(a5)
2001588e:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:350

    if ( cpu ) {
20015892:	fac42783          	lw	a5,-84(s0)
20015896:	c78d                	beqz	a5,200158c0 <metal_lc10_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:352
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015898:	fac42503          	lw	a0,-84(s0)
2001589c:	c2eff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
200158a0:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:353
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC10].exint_data;
200158a4:	fa842783          	lw	a5,-88(s0)
200158a8:	3087a783          	lw	a5,776(a5)
200158ac:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:354
        intc->metal_int_table[METAL_INTERRUPT_ID_LC10].handler(METAL_INTERRUPT_ID_LC10, priv);
200158b0:	fa842783          	lw	a5,-88(s0)
200158b4:	3007a783          	lw	a5,768(a5)
200158b8:	fa442583          	lw	a1,-92(s0)
200158bc:	4569                	li	a0,26
200158be:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:356
    }
}
200158c0:	0001                	nop
200158c2:	40f6                	lw	ra,92(sp)
200158c4:	42e6                	lw	t0,88(sp)
200158c6:	4356                	lw	t1,84(sp)
200158c8:	43c6                	lw	t2,80(sp)
200158ca:	4436                	lw	s0,76(sp)
200158cc:	4526                	lw	a0,72(sp)
200158ce:	4596                	lw	a1,68(sp)
200158d0:	4606                	lw	a2,64(sp)
200158d2:	56f2                	lw	a3,60(sp)
200158d4:	5762                	lw	a4,56(sp)
200158d6:	57d2                	lw	a5,52(sp)
200158d8:	5842                	lw	a6,48(sp)
200158da:	58b2                	lw	a7,44(sp)
200158dc:	5e22                	lw	t3,40(sp)
200158de:	5e92                	lw	t4,36(sp)
200158e0:	5f02                	lw	t5,32(sp)
200158e2:	4ff2                	lw	t6,28(sp)
200158e4:	6125                	addi	sp,sp,96
200158e6:	30200073          	mret

200158ea <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:359

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc11_interrupt_vector_handler (void) {
200158ea:	711d                	addi	sp,sp,-96
200158ec:	ce86                	sw	ra,92(sp)
200158ee:	cc96                	sw	t0,88(sp)
200158f0:	ca9a                	sw	t1,84(sp)
200158f2:	c89e                	sw	t2,80(sp)
200158f4:	c6a2                	sw	s0,76(sp)
200158f6:	c4aa                	sw	a0,72(sp)
200158f8:	c2ae                	sw	a1,68(sp)
200158fa:	c0b2                	sw	a2,64(sp)
200158fc:	de36                	sw	a3,60(sp)
200158fe:	dc3a                	sw	a4,56(sp)
20015900:	da3e                	sw	a5,52(sp)
20015902:	d842                	sw	a6,48(sp)
20015904:	d646                	sw	a7,44(sp)
20015906:	d472                	sw	t3,40(sp)
20015908:	d276                	sw	t4,36(sp)
2001590a:	d07a                	sw	t5,32(sp)
2001590c:	ce7e                	sw	t6,28(sp)
2001590e:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:362
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015910:	c14ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
20015914:	872a                	mv	a4,a0
20015916:	800017b7          	lui	a5,0x80001
2001591a:	070a                	slli	a4,a4,0x2
2001591c:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20015920:	97ba                	add	a5,a5,a4
20015922:	439c                	lw	a5,0(a5)
20015924:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:364

    if ( cpu ) {
20015928:	fac42783          	lw	a5,-84(s0)
2001592c:	c78d                	beqz	a5,20015956 <metal_lc11_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:366
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001592e:	fac42503          	lw	a0,-84(s0)
20015932:	b98ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
20015936:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:367
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC11].exint_data;
2001593a:	fa842783          	lw	a5,-88(s0)
2001593e:	3207a783          	lw	a5,800(a5)
20015942:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        intc->metal_int_table[METAL_INTERRUPT_ID_LC11].handler(METAL_INTERRUPT_ID_LC11, priv);
20015946:	fa842783          	lw	a5,-88(s0)
2001594a:	3187a783          	lw	a5,792(a5)
2001594e:	fa442583          	lw	a1,-92(s0)
20015952:	456d                	li	a0,27
20015954:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    }
}
20015956:	0001                	nop
20015958:	40f6                	lw	ra,92(sp)
2001595a:	42e6                	lw	t0,88(sp)
2001595c:	4356                	lw	t1,84(sp)
2001595e:	43c6                	lw	t2,80(sp)
20015960:	4436                	lw	s0,76(sp)
20015962:	4526                	lw	a0,72(sp)
20015964:	4596                	lw	a1,68(sp)
20015966:	4606                	lw	a2,64(sp)
20015968:	56f2                	lw	a3,60(sp)
2001596a:	5762                	lw	a4,56(sp)
2001596c:	57d2                	lw	a5,52(sp)
2001596e:	5842                	lw	a6,48(sp)
20015970:	58b2                	lw	a7,44(sp)
20015972:	5e22                	lw	t3,40(sp)
20015974:	5e92                	lw	t4,36(sp)
20015976:	5f02                	lw	t5,32(sp)
20015978:	4ff2                	lw	t6,28(sp)
2001597a:	6125                	addi	sp,sp,96
2001597c:	30200073          	mret

20015980 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc12_interrupt_vector_handler (void) {
20015980:	711d                	addi	sp,sp,-96
20015982:	ce86                	sw	ra,92(sp)
20015984:	cc96                	sw	t0,88(sp)
20015986:	ca9a                	sw	t1,84(sp)
20015988:	c89e                	sw	t2,80(sp)
2001598a:	c6a2                	sw	s0,76(sp)
2001598c:	c4aa                	sw	a0,72(sp)
2001598e:	c2ae                	sw	a1,68(sp)
20015990:	c0b2                	sw	a2,64(sp)
20015992:	de36                	sw	a3,60(sp)
20015994:	dc3a                	sw	a4,56(sp)
20015996:	da3e                	sw	a5,52(sp)
20015998:	d842                	sw	a6,48(sp)
2001599a:	d646                	sw	a7,44(sp)
2001599c:	d472                	sw	t3,40(sp)
2001599e:	d276                	sw	t4,36(sp)
200159a0:	d07a                	sw	t5,32(sp)
200159a2:	ce7e                	sw	t6,28(sp)
200159a4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:376
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200159a6:	b7eff0ef          	jal	ra,20014d24 <__metal_myhart_id>
200159aa:	872a                	mv	a4,a0
200159ac:	800017b7          	lui	a5,0x80001
200159b0:	070a                	slli	a4,a4,0x2
200159b2:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
200159b6:	97ba                	add	a5,a5,a4
200159b8:	439c                	lw	a5,0(a5)
200159ba:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378

    if ( cpu ) {
200159be:	fac42783          	lw	a5,-84(s0)
200159c2:	c78d                	beqz	a5,200159ec <metal_lc12_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200159c4:	fac42503          	lw	a0,-84(s0)
200159c8:	b02ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
200159cc:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC12].exint_data;
200159d0:	fa842783          	lw	a5,-88(s0)
200159d4:	3387a783          	lw	a5,824(a5)
200159d8:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:382
        intc->metal_int_table[METAL_INTERRUPT_ID_LC12].handler(METAL_INTERRUPT_ID_LC12, priv);
200159dc:	fa842783          	lw	a5,-88(s0)
200159e0:	3307a783          	lw	a5,816(a5)
200159e4:	fa442583          	lw	a1,-92(s0)
200159e8:	4571                	li	a0,28
200159ea:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }
}
200159ec:	0001                	nop
200159ee:	40f6                	lw	ra,92(sp)
200159f0:	42e6                	lw	t0,88(sp)
200159f2:	4356                	lw	t1,84(sp)
200159f4:	43c6                	lw	t2,80(sp)
200159f6:	4436                	lw	s0,76(sp)
200159f8:	4526                	lw	a0,72(sp)
200159fa:	4596                	lw	a1,68(sp)
200159fc:	4606                	lw	a2,64(sp)
200159fe:	56f2                	lw	a3,60(sp)
20015a00:	5762                	lw	a4,56(sp)
20015a02:	57d2                	lw	a5,52(sp)
20015a04:	5842                	lw	a6,48(sp)
20015a06:	58b2                	lw	a7,44(sp)
20015a08:	5e22                	lw	t3,40(sp)
20015a0a:	5e92                	lw	t4,36(sp)
20015a0c:	5f02                	lw	t5,32(sp)
20015a0e:	4ff2                	lw	t6,28(sp)
20015a10:	6125                	addi	sp,sp,96
20015a12:	30200073          	mret

20015a16 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc13_interrupt_vector_handler (void) {
20015a16:	711d                	addi	sp,sp,-96
20015a18:	ce86                	sw	ra,92(sp)
20015a1a:	cc96                	sw	t0,88(sp)
20015a1c:	ca9a                	sw	t1,84(sp)
20015a1e:	c89e                	sw	t2,80(sp)
20015a20:	c6a2                	sw	s0,76(sp)
20015a22:	c4aa                	sw	a0,72(sp)
20015a24:	c2ae                	sw	a1,68(sp)
20015a26:	c0b2                	sw	a2,64(sp)
20015a28:	de36                	sw	a3,60(sp)
20015a2a:	dc3a                	sw	a4,56(sp)
20015a2c:	da3e                	sw	a5,52(sp)
20015a2e:	d842                	sw	a6,48(sp)
20015a30:	d646                	sw	a7,44(sp)
20015a32:	d472                	sw	t3,40(sp)
20015a34:	d276                	sw	t4,36(sp)
20015a36:	d07a                	sw	t5,32(sp)
20015a38:	ce7e                	sw	t6,28(sp)
20015a3a:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:390
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015a3c:	ae8ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
20015a40:	872a                	mv	a4,a0
20015a42:	800017b7          	lui	a5,0x80001
20015a46:	070a                	slli	a4,a4,0x2
20015a48:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20015a4c:	97ba                	add	a5,a5,a4
20015a4e:	439c                	lw	a5,0(a5)
20015a50:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:392

    if ( cpu ) {
20015a54:	fac42783          	lw	a5,-84(s0)
20015a58:	c78d                	beqz	a5,20015a82 <metal_lc13_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015a5a:	fac42503          	lw	a0,-84(s0)
20015a5e:	a6cff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
20015a62:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:395
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC13].exint_data;
20015a66:	fa842783          	lw	a5,-88(s0)
20015a6a:	3507a783          	lw	a5,848(a5)
20015a6e:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
        intc->metal_int_table[METAL_INTERRUPT_ID_LC13].handler(METAL_INTERRUPT_ID_LC13, priv);
20015a72:	fa842783          	lw	a5,-88(s0)
20015a76:	3487a783          	lw	a5,840(a5)
20015a7a:	fa442583          	lw	a1,-92(s0)
20015a7e:	4575                	li	a0,29
20015a80:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
    }
}
20015a82:	0001                	nop
20015a84:	40f6                	lw	ra,92(sp)
20015a86:	42e6                	lw	t0,88(sp)
20015a88:	4356                	lw	t1,84(sp)
20015a8a:	43c6                	lw	t2,80(sp)
20015a8c:	4436                	lw	s0,76(sp)
20015a8e:	4526                	lw	a0,72(sp)
20015a90:	4596                	lw	a1,68(sp)
20015a92:	4606                	lw	a2,64(sp)
20015a94:	56f2                	lw	a3,60(sp)
20015a96:	5762                	lw	a4,56(sp)
20015a98:	57d2                	lw	a5,52(sp)
20015a9a:	5842                	lw	a6,48(sp)
20015a9c:	58b2                	lw	a7,44(sp)
20015a9e:	5e22                	lw	t3,40(sp)
20015aa0:	5e92                	lw	t4,36(sp)
20015aa2:	5f02                	lw	t5,32(sp)
20015aa4:	4ff2                	lw	t6,28(sp)
20015aa6:	6125                	addi	sp,sp,96
20015aa8:	30200073          	mret

20015aac <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc14_interrupt_vector_handler (void) {
20015aac:	711d                	addi	sp,sp,-96
20015aae:	ce86                	sw	ra,92(sp)
20015ab0:	cc96                	sw	t0,88(sp)
20015ab2:	ca9a                	sw	t1,84(sp)
20015ab4:	c89e                	sw	t2,80(sp)
20015ab6:	c6a2                	sw	s0,76(sp)
20015ab8:	c4aa                	sw	a0,72(sp)
20015aba:	c2ae                	sw	a1,68(sp)
20015abc:	c0b2                	sw	a2,64(sp)
20015abe:	de36                	sw	a3,60(sp)
20015ac0:	dc3a                	sw	a4,56(sp)
20015ac2:	da3e                	sw	a5,52(sp)
20015ac4:	d842                	sw	a6,48(sp)
20015ac6:	d646                	sw	a7,44(sp)
20015ac8:	d472                	sw	t3,40(sp)
20015aca:	d276                	sw	t4,36(sp)
20015acc:	d07a                	sw	t5,32(sp)
20015ace:	ce7e                	sw	t6,28(sp)
20015ad0:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:404
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015ad2:	a52ff0ef          	jal	ra,20014d24 <__metal_myhart_id>
20015ad6:	872a                	mv	a4,a0
20015ad8:	800017b7          	lui	a5,0x80001
20015adc:	070a                	slli	a4,a4,0x2
20015ade:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20015ae2:	97ba                	add	a5,a5,a4
20015ae4:	439c                	lw	a5,0(a5)
20015ae6:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:406

    if ( cpu ) {
20015aea:	fac42783          	lw	a5,-84(s0)
20015aee:	c78d                	beqz	a5,20015b18 <metal_lc14_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015af0:	fac42503          	lw	a0,-84(s0)
20015af4:	9d6ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
20015af8:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:409
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC14].exint_data;
20015afc:	fa842783          	lw	a5,-88(s0)
20015b00:	3687a783          	lw	a5,872(a5)
20015b04:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
        intc->metal_int_table[METAL_INTERRUPT_ID_LC14].handler(METAL_INTERRUPT_ID_LC14, priv);
20015b08:	fa842783          	lw	a5,-88(s0)
20015b0c:	3607a783          	lw	a5,864(a5)
20015b10:	fa442583          	lw	a1,-92(s0)
20015b14:	4579                	li	a0,30
20015b16:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
    }
}
20015b18:	0001                	nop
20015b1a:	40f6                	lw	ra,92(sp)
20015b1c:	42e6                	lw	t0,88(sp)
20015b1e:	4356                	lw	t1,84(sp)
20015b20:	43c6                	lw	t2,80(sp)
20015b22:	4436                	lw	s0,76(sp)
20015b24:	4526                	lw	a0,72(sp)
20015b26:	4596                	lw	a1,68(sp)
20015b28:	4606                	lw	a2,64(sp)
20015b2a:	56f2                	lw	a3,60(sp)
20015b2c:	5762                	lw	a4,56(sp)
20015b2e:	57d2                	lw	a5,52(sp)
20015b30:	5842                	lw	a6,48(sp)
20015b32:	58b2                	lw	a7,44(sp)
20015b34:	5e22                	lw	t3,40(sp)
20015b36:	5e92                	lw	t4,36(sp)
20015b38:	5f02                	lw	t5,32(sp)
20015b3a:	4ff2                	lw	t6,28(sp)
20015b3c:	6125                	addi	sp,sp,96
20015b3e:	30200073          	mret

20015b42 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:415

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc15_interrupt_vector_handler (void) {
20015b42:	711d                	addi	sp,sp,-96
20015b44:	ce86                	sw	ra,92(sp)
20015b46:	cc96                	sw	t0,88(sp)
20015b48:	ca9a                	sw	t1,84(sp)
20015b4a:	c89e                	sw	t2,80(sp)
20015b4c:	c6a2                	sw	s0,76(sp)
20015b4e:	c4aa                	sw	a0,72(sp)
20015b50:	c2ae                	sw	a1,68(sp)
20015b52:	c0b2                	sw	a2,64(sp)
20015b54:	de36                	sw	a3,60(sp)
20015b56:	dc3a                	sw	a4,56(sp)
20015b58:	da3e                	sw	a5,52(sp)
20015b5a:	d842                	sw	a6,48(sp)
20015b5c:	d646                	sw	a7,44(sp)
20015b5e:	d472                	sw	t3,40(sp)
20015b60:	d276                	sw	t4,36(sp)
20015b62:	d07a                	sw	t5,32(sp)
20015b64:	ce7e                	sw	t6,28(sp)
20015b66:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:418
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015b68:	9bcff0ef          	jal	ra,20014d24 <__metal_myhart_id>
20015b6c:	872a                	mv	a4,a0
20015b6e:	800017b7          	lui	a5,0x80001
20015b72:	070a                	slli	a4,a4,0x2
20015b74:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
20015b78:	97ba                	add	a5,a5,a4
20015b7a:	439c                	lw	a5,0(a5)
20015b7c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:420

    if ( cpu ) {
20015b80:	fac42783          	lw	a5,-84(s0)
20015b84:	c78d                	beqz	a5,20015bae <metal_lc15_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:422
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015b86:	fac42503          	lw	a0,-84(s0)
20015b8a:	940ff0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
20015b8e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:423
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC15].exint_data;
20015b92:	fa842783          	lw	a5,-88(s0)
20015b96:	3807a783          	lw	a5,896(a5)
20015b9a:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:424
        intc->metal_int_table[METAL_INTERRUPT_ID_LC15].handler(METAL_INTERRUPT_ID_LC15, priv);
20015b9e:	fa842783          	lw	a5,-88(s0)
20015ba2:	3787a783          	lw	a5,888(a5)
20015ba6:	fa442583          	lw	a1,-92(s0)
20015baa:	457d                	li	a0,31
20015bac:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:426
    }
}
20015bae:	0001                	nop
20015bb0:	40f6                	lw	ra,92(sp)
20015bb2:	42e6                	lw	t0,88(sp)
20015bb4:	4356                	lw	t1,84(sp)
20015bb6:	43c6                	lw	t2,80(sp)
20015bb8:	4436                	lw	s0,76(sp)
20015bba:	4526                	lw	a0,72(sp)
20015bbc:	4596                	lw	a1,68(sp)
20015bbe:	4606                	lw	a2,64(sp)
20015bc0:	56f2                	lw	a3,60(sp)
20015bc2:	5762                	lw	a4,56(sp)
20015bc4:	57d2                	lw	a5,52(sp)
20015bc6:	5842                	lw	a6,48(sp)
20015bc8:	58b2                	lw	a7,44(sp)
20015bca:	5e22                	lw	t3,40(sp)
20015bcc:	5e92                	lw	t4,36(sp)
20015bce:	5f02                	lw	t5,32(sp)
20015bd0:	4ff2                	lw	t6,28(sp)
20015bd2:	6125                	addi	sp,sp,96
20015bd4:	30200073          	mret

20015bd8 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429

metal_vector_mode __metal_controller_interrupt_vector_mode (void)
{
20015bd8:	1101                	addi	sp,sp,-32
20015bda:	ce22                	sw	s0,28(sp)
20015bdc:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
    uintptr_t val;

    asm volatile ("csrr %0, mtvec" : "=r"(val));
20015bde:	305027f3          	csrr	a5,mtvec
20015be2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:433
    val &= METAL_MTVEC_MASK;
20015be6:	fec42783          	lw	a5,-20(s0)
20015bea:	03f7f793          	andi	a5,a5,63
20015bee:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:435

    switch (val) {
20015bf2:	fec42703          	lw	a4,-20(s0)
20015bf6:	4789                	li	a5,2
20015bf8:	00f70d63          	beq	a4,a5,20015c12 <__metal_controller_interrupt_vector_mode+0x3a>
20015bfc:	fec42703          	lw	a4,-20(s0)
20015c00:	478d                	li	a5,3
20015c02:	00f70a63          	beq	a4,a5,20015c16 <__metal_controller_interrupt_vector_mode+0x3e>
20015c06:	fec42703          	lw	a4,-20(s0)
20015c0a:	4785                	li	a5,1
20015c0c:	00f70763          	beq	a4,a5,20015c1a <__metal_controller_interrupt_vector_mode+0x42>
20015c10:	a039                	j	20015c1e <__metal_controller_interrupt_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:437
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20015c12:	478d                	li	a5,3
20015c14:	a031                	j	20015c20 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20015c16:	4791                	li	a5,4
20015c18:	a021                	j	20015c20 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:441
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20015c1a:	4785                	li	a5,1
20015c1c:	a011                	j	20015c20 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    }
    return METAL_DIRECT_MODE;
20015c1e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:444
}
20015c20:	853e                	mv	a0,a5
20015c22:	4472                	lw	s0,28(sp)
20015c24:	6105                	addi	sp,sp,32
20015c26:	8082                	ret

20015c28 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447

void __metal_controller_interrupt_vector (metal_vector_mode mode, void *vec_table)
{  
20015c28:	7179                	addi	sp,sp,-48
20015c2a:	d622                	sw	s0,44(sp)
20015c2c:	1800                	addi	s0,sp,48
20015c2e:	fca42e23          	sw	a0,-36(s0)
20015c32:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
    uintptr_t trap_entry, val;

    __asm__ volatile ("csrr %0, mtvec" : "=r"(val));
20015c36:	305027f3          	csrr	a5,mtvec
20015c3a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:451
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20015c3e:	fec42783          	lw	a5,-20(s0)
20015c42:	fc07f793          	andi	a5,a5,-64
20015c46:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:452
    trap_entry = (uintptr_t)vec_table;
20015c4a:	fd842783          	lw	a5,-40(s0)
20015c4e:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

    switch (mode) {
20015c52:	fdc42703          	lw	a4,-36(s0)
20015c56:	4791                	li	a5,4
20015c58:	06e7e063          	bltu	a5,a4,20015cb8 <__metal_controller_interrupt_vector+0x90>
20015c5c:	fdc42783          	lw	a5,-36(s0)
20015c60:	00279713          	slli	a4,a5,0x2
20015c64:	200197b7          	lui	a5,0x20019
20015c68:	c1878793          	addi	a5,a5,-1000 # 20018c18 <__metal_driver_vtable_riscv_clint0+0x4c>
20015c6c:	97ba                	add	a5,a5,a4
20015c6e:	439c                	lw	a5,0(a5)
20015c70:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20015c72:	fe842783          	lw	a5,-24(s0)
20015c76:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:458
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC));
20015c7a:	fec42783          	lw	a5,-20(s0)
20015c7e:	0027e793          	ori	a5,a5,2
20015c82:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        break;
20015c86:	a80d                	j	20015cb8 <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20015c88:	fe842783          	lw	a5,-24(s0)
20015c8c:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC_VECTORED));
20015c90:	fec42783          	lw	a5,-20(s0)
20015c94:	0037e793          	ori	a5,a5,3
20015c98:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:463
        break;
20015c9c:	a831                	j	20015cb8 <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
    case METAL_VECTOR_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry | METAL_MTVEC_VECTORED));
20015c9e:	fe842783          	lw	a5,-24(s0)
20015ca2:	0017e793          	ori	a5,a5,1
20015ca6:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466
        break;
20015caa:	a039                	j	20015cb8 <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:468
    case METAL_DIRECT_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20015cac:	fe842783          	lw	a5,-24(s0)
20015cb0:	9bf1                	andi	a5,a5,-4
20015cb2:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:469
        break;
20015cb6:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:471
    }
}
20015cb8:	0001                	nop
20015cba:	5432                	lw	s0,44(sp)
20015cbc:	6145                	addi	sp,sp,48
20015cbe:	8082                	ret

20015cc0 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:474

int __metal_valid_interrupt_id (int id)
{
20015cc0:	1101                	addi	sp,sp,-32
20015cc2:	ce22                	sw	s0,28(sp)
20015cc4:	1000                	addi	s0,sp,32
20015cc6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
    switch (id) {
20015cca:	fec42783          	lw	a5,-20(s0)
20015cce:	17f5                	addi	a5,a5,-3
20015cd0:	4771                	li	a4,28
20015cd2:	00f76d63          	bltu	a4,a5,20015cec <__metal_valid_interrupt_id+0x2c>
20015cd6:	00279713          	slli	a4,a5,0x2
20015cda:	200197b7          	lui	a5,0x20019
20015cde:	c2c78793          	addi	a5,a5,-980 # 20018c2c <__metal_driver_vtable_riscv_clint0+0x60>
20015ce2:	97ba                	add	a5,a5,a4
20015ce4:	439c                	lw	a5,0(a5)
20015ce6:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        return 1;
20015ce8:	4785                	li	a5,1
20015cea:	a019                	j	20015cf0 <__metal_valid_interrupt_id+0x30>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:497
    default:
        break;
20015cec:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:500
    }

    return 0;
20015cee:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
}
20015cf0:	853e                	mv	a0,a5
20015cf2:	4472                	lw	s0,28(sp)
20015cf4:	6105                	addi	sp,sp,32
20015cf6:	8082                	ret

20015cf8 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506

 
int __metal_local_interrupt_enable (struct metal_interrupt *controller,
				  metal_interrupt_id_e id, int enable)
{
20015cf8:	7179                	addi	sp,sp,-48
20015cfa:	d606                	sw	ra,44(sp)
20015cfc:	d422                	sw	s0,40(sp)
20015cfe:	1800                	addi	s0,sp,48
20015d00:	fca42e23          	sw	a0,-36(s0)
20015d04:	fcb42c23          	sw	a1,-40(s0)
20015d08:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
    int rc = 0;
20015d0c:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:509
  
    if ( !controller) {
20015d10:	fdc42783          	lw	a5,-36(s0)
20015d14:	e399                	bnez	a5,20015d1a <__metal_local_interrupt_enable+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        return -1;
20015d16:	57fd                	li	a5,-1
20015d18:	a849                	j	20015daa <__metal_local_interrupt_enable+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
    }

    switch (id) {
20015d1a:	fd842703          	lw	a4,-40(s0)
20015d1e:	47fd                	li	a5,31
20015d20:	08e7e063          	bltu	a5,a4,20015da0 <__metal_local_interrupt_enable+0xa8>
20015d24:	fd842783          	lw	a5,-40(s0)
20015d28:	00279713          	slli	a4,a5,0x2
20015d2c:	200197b7          	lui	a5,0x20019
20015d30:	ca078793          	addi	a5,a5,-864 # 20018ca0 <__metal_driver_vtable_riscv_clint0+0xd4>
20015d34:	97ba                	add	a5,a5,a4
20015d36:	439c                	lw	a5,0(a5)
20015d38:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:515
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20015d3a:	fd442783          	lw	a5,-44(s0)
20015d3e:	c781                	beqz	a5,20015d46 <__metal_local_interrupt_enable+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
            __metal_interrupt_global_enable();
20015d40:	ffffe0ef          	jal	ra,20014d3e <__metal_interrupt_global_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20015d44:	a08d                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            __metal_interrupt_global_disable();
20015d46:	810ff0ef          	jal	ra,20014d56 <__metal_interrupt_global_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        break;
20015d4a:	a8b1                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20015d4c:	fd442783          	lw	a5,-44(s0)
20015d50:	c781                	beqz	a5,20015d58 <__metal_local_interrupt_enable+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:523
            __metal_interrupt_software_enable();
20015d52:	81cff0ef          	jal	ra,20014d6e <__metal_interrupt_software_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20015d56:	a881                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:525
            __metal_interrupt_software_disable();
20015d58:	82eff0ef          	jal	ra,20014d86 <__metal_interrupt_software_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        break;
20015d5c:	a0a9                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:529
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20015d5e:	fd442783          	lw	a5,-44(s0)
20015d62:	c781                	beqz	a5,20015d6a <__metal_local_interrupt_enable+0x72>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:530
	    __metal_interrupt_timer_enable();
20015d64:	83aff0ef          	jal	ra,20014d9e <__metal_interrupt_timer_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	} else {
	    __metal_interrupt_timer_disable();
	}
	break;
20015d68:	a83d                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:532
	    __metal_interrupt_timer_disable();
20015d6a:	84eff0ef          	jal	ra,20014db8 <__metal_interrupt_timer_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	break;
20015d6e:	a825                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:536
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20015d70:	fd442783          	lw	a5,-44(s0)
20015d74:	c781                	beqz	a5,20015d7c <__metal_local_interrupt_enable+0x84>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:537
            __metal_interrupt_external_enable();
20015d76:	85cff0ef          	jal	ra,20014dd2 <__metal_interrupt_external_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20015d7a:	a035                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:539
            __metal_interrupt_external_disable();
20015d7c:	872ff0ef          	jal	ra,20014dee <__metal_interrupt_external_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        break;
20015d80:	a01d                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20015d82:	fd442783          	lw	a5,-44(s0)
20015d86:	c799                	beqz	a5,20015d94 <__metal_local_interrupt_enable+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
            __metal_interrupt_local_enable(id);
20015d88:	fd842783          	lw	a5,-40(s0)
20015d8c:	853e                	mv	a0,a5
20015d8e:	87cff0ef          	jal	ra,20014e0a <__metal_interrupt_local_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20015d92:	a811                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:561
            __metal_interrupt_local_disable(id);
20015d94:	fd842783          	lw	a5,-40(s0)
20015d98:	853e                	mv	a0,a5
20015d9a:	89cff0ef          	jal	ra,20014e36 <__metal_interrupt_local_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        break;
20015d9e:	a021                	j	20015da6 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:565
    default:
        rc = -1;
20015da0:	57fd                	li	a5,-1
20015da2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:567
    }
    return rc;
20015da6:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:568
}
20015daa:	853e                	mv	a0,a5
20015dac:	50b2                	lw	ra,44(sp)
20015dae:	5422                	lw	s0,40(sp)
20015db0:	6145                	addi	sp,sp,48
20015db2:	8082                	ret

20015db4 <__metal_exception_register>:
__metal_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:572

int __metal_exception_register (struct metal_interrupt *controller,
                              int ecode, metal_exception_handler_t isr)
{
20015db4:	7179                	addi	sp,sp,-48
20015db6:	d622                	sw	s0,44(sp)
20015db8:	1800                	addi	s0,sp,48
20015dba:	fca42e23          	sw	a0,-36(s0)
20015dbe:	fcb42c23          	sw	a1,-40(s0)
20015dc2:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:573
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20015dc6:	fdc42783          	lw	a5,-36(s0)
20015dca:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20015dce:	fd842703          	lw	a4,-40(s0)
20015dd2:	47ad                	li	a5,11
20015dd4:	02e7c263          	blt	a5,a4,20015df8 <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575 (discriminator 1)
20015dd8:	fd442783          	lw	a5,-44(s0)
20015ddc:	cf91                	beqz	a5,20015df8 <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:576
        intc->metal_exception_table[ecode] = isr;
20015dde:	fec42703          	lw	a4,-20(s0)
20015de2:	fd842783          	lw	a5,-40(s0)
20015de6:	0e078793          	addi	a5,a5,224
20015dea:	078a                	slli	a5,a5,0x2
20015dec:	97ba                	add	a5,a5,a4
20015dee:	fd442703          	lw	a4,-44(s0)
20015df2:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:577
        return 0;
20015df4:	4781                	li	a5,0
20015df6:	a011                	j	20015dfa <__metal_exception_register+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:579
    }
    return -1;
20015df8:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:580
}
20015dfa:	853e                	mv	a0,a5
20015dfc:	5432                	lw	s0,44(sp)
20015dfe:	6145                	addi	sp,sp,48
20015e00:	8082                	ret

20015e02 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:583

void __metal_driver_riscv_cpu_controller_interrupt_init (struct metal_interrupt *controller)
{
20015e02:	7139                	addi	sp,sp,-64
20015e04:	de06                	sw	ra,60(sp)
20015e06:	dc22                	sw	s0,56(sp)
20015e08:	0080                	addi	s0,sp,64
20015e0a:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:584
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20015e0e:	fcc42783          	lw	a5,-52(s0)
20015e12:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:587
    uintptr_t val;

    if ( !intc->init_done ) {
20015e16:	fe442783          	lw	a5,-28(s0)
20015e1a:	43dc                	lw	a5,4(a5)
20015e1c:	10079d63          	bnez	a5,20015f36 <__metal_driver_riscv_cpu_controller_interrupt_init+0x134>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:589
        /* Disable and clear all interrupt sources */
        __asm__ volatile ("csrc mie, %0" :: "r"(-1));
20015e20:	57fd                	li	a5,-1
20015e22:	3047b073          	csrc	mie,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:590
        __asm__ volatile ("csrc mip, %0" :: "r"(-1));
20015e26:	57fd                	li	a5,-1
20015e28:	3447b073          	csrc	mip,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:594

        /* Read the misa CSR to determine if the delegation registers exist */
        uintptr_t misa;
        __asm__ volatile ("csrr %0, misa" : "=r" (misa));
20015e2c:	301027f3          	csrr	a5,misa
20015e30:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

        /* The delegation CSRs exist if user mode interrupts (N extension) or
         * supervisor mode (S extension) are supported */
        if((misa & METAL_ISA_N_EXTENSIONS) || (misa & METAL_ISA_S_EXTENSIONS)) {
20015e34:	fe042703          	lw	a4,-32(s0)
20015e38:	6789                	lui	a5,0x2
20015e3a:	8ff9                	and	a5,a5,a4
20015e3c:	e799                	bnez	a5,20015e4a <__metal_driver_riscv_cpu_controller_interrupt_init+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598 (discriminator 1)
20015e3e:	fe042703          	lw	a4,-32(s0)
20015e42:	000407b7          	lui	a5,0x40
20015e46:	8ff9                	and	a5,a5,a4
20015e48:	c799                	beqz	a5,20015e56 <__metal_driver_riscv_cpu_controller_interrupt_init+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:600
            /* Disable interrupt and exception delegation */
            __asm__ volatile ("csrc mideleg, %0" :: "r"(-1));
20015e4a:	57fd                	li	a5,-1
20015e4c:	3037b073          	csrc	mideleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            __asm__ volatile ("csrc medeleg, %0" :: "r"(-1));
20015e50:	57fd                	li	a5,-1
20015e52:	3027b073          	csrc	medeleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:605
        }

        /* The satp CSR exists if supervisor mode (S extension) is supported */
        if(misa & METAL_ISA_S_EXTENSIONS) {
20015e56:	fe042703          	lw	a4,-32(s0)
20015e5a:	000407b7          	lui	a5,0x40
20015e5e:	8ff9                	and	a5,a5,a4
20015e60:	c781                	beqz	a5,20015e68 <__metal_driver_riscv_cpu_controller_interrupt_init+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:607
            /* Clear the entire CSR to make sure that satp.MODE = 0 */
            __asm__ volatile ("csrc satp, %0" :: "r"(-1));
20015e62:	57fd                	li	a5,-1
20015e64:	1807b073          	csrc	satp,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611
        }

        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20015e68:	fe042623          	sw	zero,-20(s0)
20015e6c:	a0b9                	j	20015eba <__metal_driver_riscv_cpu_controller_interrupt_init+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20015e6e:	fe442683          	lw	a3,-28(s0)
20015e72:	fec42703          	lw	a4,-20(s0)
20015e76:	87ba                	mv	a5,a4
20015e78:	0786                	slli	a5,a5,0x1
20015e7a:	97ba                	add	a5,a5,a4
20015e7c:	078e                	slli	a5,a5,0x3
20015e7e:	97b6                	add	a5,a5,a3
20015e80:	0807a823          	sw	zero,144(a5) # 40090 <__heap_size+0x3f890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:613 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20015e84:	fe442683          	lw	a3,-28(s0)
20015e88:	fec42703          	lw	a4,-20(s0)
20015e8c:	87ba                	mv	a5,a4
20015e8e:	0786                	slli	a5,a5,0x1
20015e90:	97ba                	add	a5,a5,a4
20015e92:	078e                	slli	a5,a5,0x3
20015e94:	97b6                	add	a5,a5,a3
20015e96:	0807aa23          	sw	zero,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:614 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20015e9a:	fe442683          	lw	a3,-28(s0)
20015e9e:	fec42703          	lw	a4,-20(s0)
20015ea2:	87ba                	mv	a5,a4
20015ea4:	0786                	slli	a5,a5,0x1
20015ea6:	97ba                	add	a5,a5,a4
20015ea8:	078e                	slli	a5,a5,0x3
20015eaa:	97b6                	add	a5,a5,a3
20015eac:	0807ac23          	sw	zero,152(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20015eb0:	fec42783          	lw	a5,-20(s0)
20015eb4:	0785                	addi	a5,a5,1
20015eb6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 1)
20015eba:	fec42703          	lw	a4,-20(s0)
20015ebe:	47fd                	li	a5,31
20015ec0:	fae7d7e3          	bge	a5,a4,20015e6e <__metal_driver_riscv_cpu_controller_interrupt_init+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
	}
	for (int i = 0; i < METAL_MAX_ME; i++) {
20015ec4:	fe042423          	sw	zero,-24(s0)
20015ec8:	a01d                	j	20015eee <__metal_driver_riscv_cpu_controller_interrupt_init+0xec>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:617 (discriminator 3)
	    intc->metal_exception_table[i] = __metal_default_exception_handler;
20015eca:	fe442703          	lw	a4,-28(s0)
20015ece:	fe842783          	lw	a5,-24(s0)
20015ed2:	0e078793          	addi	a5,a5,224
20015ed6:	078a                	slli	a5,a5,0x2
20015ed8:	97ba                	add	a5,a5,a4
20015eda:	20015737          	lui	a4,0x20015
20015ede:	e6270713          	addi	a4,a4,-414 # 20014e62 <__metal_default_exception_handler>
20015ee2:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 3)
	for (int i = 0; i < METAL_MAX_ME; i++) {
20015ee4:	fe842783          	lw	a5,-24(s0)
20015ee8:	0785                	addi	a5,a5,1
20015eea:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 1)
20015eee:	fe842703          	lw	a4,-24(s0)
20015ef2:	47ad                	li	a5,11
20015ef4:	fce7dbe3          	bge	a5,a4,20015eca <__metal_driver_riscv_cpu_controller_interrupt_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:619
	}
        __metal_controller_interrupt_vector(METAL_DIRECT_MODE, (void *)(uintptr_t)&__metal_exception_handler);
20015ef8:	200157b7          	lui	a5,0x20015
20015efc:	10078593          	addi	a1,a5,256 # 20015100 <__metal_exception_handler>
20015f00:	4501                	li	a0,0
20015f02:	331d                	jal	20015c28 <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620
	__asm__ volatile ("csrr %0, misa" : "=r"(val));
20015f04:	301027f3          	csrr	a5,misa
20015f08:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
	if (val & (METAL_ISA_D_EXTENSIONS | METAL_ISA_F_EXTENSIONS | METAL_ISA_Q_EXTENSIONS)) {
20015f0c:	fdc42703          	lw	a4,-36(s0)
20015f10:	67c1                	lui	a5,0x10
20015f12:	02878793          	addi	a5,a5,40 # 10028 <__heap_size+0xf828>
20015f16:	8ff9                	and	a5,a5,a4
20015f18:	cb99                	beqz	a5,20015f2e <__metal_driver_riscv_cpu_controller_interrupt_init+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:623
	    /* Floating point architecture, so turn on FP register saving*/
	    __asm__ volatile ("csrr %0, mstatus" : "=r"(val));
20015f1a:	300027f3          	csrr	a5,mstatus
20015f1e:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:624
	    __asm__ volatile ("csrw mstatus, %0" :: "r"(val | METAL_MSTATUS_FS_INIT));
20015f22:	fdc42703          	lw	a4,-36(s0)
20015f26:	6789                	lui	a5,0x2
20015f28:	8fd9                	or	a5,a5,a4
20015f2a:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:626
	}
	intc->init_done = 1;
20015f2e:	fe442783          	lw	a5,-28(s0)
20015f32:	4705                	li	a4,1
20015f34:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628
    }
}
20015f36:	0001                	nop
20015f38:	50f2                	lw	ra,60(sp)
20015f3a:	5462                	lw	s0,56(sp)
20015f3c:	6121                	addi	sp,sp,64
20015f3e:	8082                	ret

20015f40 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:633

int __metal_driver_riscv_cpu_controller_interrupt_register(struct metal_interrupt *controller,
							 int id, metal_interrupt_handler_t isr,
							 void *priv)
{
20015f40:	7179                	addi	sp,sp,-48
20015f42:	d606                	sw	ra,44(sp)
20015f44:	d422                	sw	s0,40(sp)
20015f46:	1800                	addi	s0,sp,48
20015f48:	fca42e23          	sw	a0,-36(s0)
20015f4c:	fcb42c23          	sw	a1,-40(s0)
20015f50:	fcc42a23          	sw	a2,-44(s0)
20015f54:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634
    int rc = 0;
20015f58:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:635
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20015f5c:	fdc42783          	lw	a5,-36(s0)
20015f60:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:637
 
    if ( !__metal_valid_interrupt_id(id) ) {
20015f64:	fd842503          	lw	a0,-40(s0)
20015f68:	3ba1                	jal	20015cc0 <__metal_valid_interrupt_id>
20015f6a:	87aa                	mv	a5,a0
20015f6c:	e399                	bnez	a5,20015f72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:638
        return -11;
20015f6e:	57d5                	li	a5,-11
20015f70:	aa11                	j	20016084 <__metal_driver_riscv_cpu_controller_interrupt_register+0x144>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:641
    }

    if (isr) {
20015f72:	fd442783          	lw	a5,-44(s0)
20015f76:	cf85                	beqz	a5,20015fae <__metal_driver_riscv_cpu_controller_interrupt_register+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642
        intc->metal_int_table[id].handler = isr;
20015f78:	fe842683          	lw	a3,-24(s0)
20015f7c:	fd842703          	lw	a4,-40(s0)
20015f80:	87ba                	mv	a5,a4
20015f82:	0786                	slli	a5,a5,0x1
20015f84:	97ba                	add	a5,a5,a4
20015f86:	078e                	slli	a5,a5,0x3
20015f88:	97b6                	add	a5,a5,a3
20015f8a:	fd442703          	lw	a4,-44(s0)
20015f8e:	08e7a823          	sw	a4,144(a5) # 2090 <__heap_size+0x1890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:643
        intc->metal_int_table[id].exint_data = priv;
20015f92:	fe842683          	lw	a3,-24(s0)
20015f96:	fd842703          	lw	a4,-40(s0)
20015f9a:	87ba                	mv	a5,a4
20015f9c:	0786                	slli	a5,a5,0x1
20015f9e:	97ba                	add	a5,a5,a4
20015fa0:	078e                	slli	a5,a5,0x3
20015fa2:	97b6                	add	a5,a5,a3
20015fa4:	fd042703          	lw	a4,-48(s0)
20015fa8:	08e7ac23          	sw	a4,152(a5)
20015fac:	a8d1                	j	20016080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
    } else {
	switch (id) {
20015fae:	fd842783          	lw	a5,-40(s0)
20015fb2:	17f5                	addi	a5,a5,-3
20015fb4:	4771                	li	a4,28
20015fb6:	0cf76263          	bltu	a4,a5,2001607a <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20015fba:	00279713          	slli	a4,a5,0x2
20015fbe:	200197b7          	lui	a5,0x20019
20015fc2:	d2078793          	addi	a5,a5,-736 # 20018d20 <__metal_driver_vtable_riscv_clint0+0x154>
20015fc6:	97ba                	add	a5,a5,a4
20015fc8:	439c                	lw	a5,0(a5)
20015fca:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:647
	case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20015fcc:	fe842683          	lw	a3,-24(s0)
20015fd0:	fd842703          	lw	a4,-40(s0)
20015fd4:	87ba                	mv	a5,a4
20015fd6:	0786                	slli	a5,a5,0x1
20015fd8:	97ba                	add	a5,a5,a4
20015fda:	078e                	slli	a5,a5,0x3
20015fdc:	97b6                	add	a5,a5,a3
20015fde:	20015737          	lui	a4,0x20015
20015fe2:	f5270713          	addi	a4,a4,-174 # 20014f52 <__metal_default_sw_handler>
20015fe6:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
            intc->metal_int_table[id].sub_int = priv;
20015fea:	fe842683          	lw	a3,-24(s0)
20015fee:	fd842703          	lw	a4,-40(s0)
20015ff2:	87ba                	mv	a5,a4
20015ff4:	0786                	slli	a5,a5,0x1
20015ff6:	97ba                	add	a5,a5,a4
20015ff8:	078e                	slli	a5,a5,0x3
20015ffa:	97b6                	add	a5,a5,a3
20015ffc:	fd042703          	lw	a4,-48(s0)
20016000:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
	  break;
20016004:	a8b5                	j	20016080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:651
	case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20016006:	fe842683          	lw	a3,-24(s0)
2001600a:	fd842703          	lw	a4,-40(s0)
2001600e:	87ba                	mv	a5,a4
20016010:	0786                	slli	a5,a5,0x1
20016012:	97ba                	add	a5,a5,a4
20016014:	078e                	slli	a5,a5,0x3
20016016:	97b6                	add	a5,a5,a3
20016018:	20015737          	lui	a4,0x20015
2001601c:	04c70713          	addi	a4,a4,76 # 2001504c <__metal_default_timer_handler>
20016020:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652
            intc->metal_int_table[id].sub_int = priv;
20016024:	fe842683          	lw	a3,-24(s0)
20016028:	fd842703          	lw	a4,-40(s0)
2001602c:	87ba                	mv	a5,a4
2001602e:	0786                	slli	a5,a5,0x1
20016030:	97ba                	add	a5,a5,a4
20016032:	078e                	slli	a5,a5,0x3
20016034:	97b6                	add	a5,a5,a3
20016036:	fd042703          	lw	a4,-48(s0)
2001603a:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
	  break;
2001603e:	a089                	j	20016080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
	case METAL_INTERRUPT_ID_LC11:
	case METAL_INTERRUPT_ID_LC12:
	case METAL_INTERRUPT_ID_LC13:
	case METAL_INTERRUPT_ID_LC14:
	case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler = __metal_default_interrupt_handler;
20016040:	fe842683          	lw	a3,-24(s0)
20016044:	fd842703          	lw	a4,-40(s0)
20016048:	87ba                	mv	a5,a4
2001604a:	0786                	slli	a5,a5,0x1
2001604c:	97ba                	add	a5,a5,a4
2001604e:	078e                	slli	a5,a5,0x3
20016050:	97b6                	add	a5,a5,a3
20016052:	20015737          	lui	a4,0x20015
20016056:	e7a70713          	addi	a4,a4,-390 # 20014e7a <__metal_default_interrupt_handler>
2001605a:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:672
            intc->metal_int_table[id].sub_int = priv;
2001605e:	fe842683          	lw	a3,-24(s0)
20016062:	fd842703          	lw	a4,-40(s0)
20016066:	87ba                	mv	a5,a4
20016068:	0786                	slli	a5,a5,0x1
2001606a:	97ba                	add	a5,a5,a4
2001606c:	078e                	slli	a5,a5,0x3
2001606e:	97b6                	add	a5,a5,a3
20016070:	fd042703          	lw	a4,-48(s0)
20016074:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:673
	  break;
20016078:	a021                	j	20016080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
	default:
	  rc = -12;
2001607a:	57d1                	li	a5,-12
2001607c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
	}
    }
    return rc;
20016080:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
}
20016084:	853e                	mv	a0,a5
20016086:	50b2                	lw	ra,44(sp)
20016088:	5422                	lw	s0,40(sp)
2001608a:	6145                	addi	sp,sp,48
2001608c:	8082                	ret

2001608e <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:683

int __metal_driver_riscv_cpu_controller_interrupt_enable (struct metal_interrupt *controller,
                                                        int id)
{
2001608e:	1101                	addi	sp,sp,-32
20016090:	ce06                	sw	ra,28(sp)
20016092:	cc22                	sw	s0,24(sp)
20016094:	1000                	addi	s0,sp,32
20016096:	fea42623          	sw	a0,-20(s0)
2001609a:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
2001609e:	fe842783          	lw	a5,-24(s0)
200160a2:	4605                	li	a2,1
200160a4:	85be                	mv	a1,a5
200160a6:	fec42503          	lw	a0,-20(s0)
200160aa:	31b9                	jal	20015cf8 <__metal_local_interrupt_enable>
200160ac:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
200160ae:	853e                	mv	a0,a5
200160b0:	40f2                	lw	ra,28(sp)
200160b2:	4462                	lw	s0,24(sp)
200160b4:	6105                	addi	sp,sp,32
200160b6:	8082                	ret

200160b8 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:689

int __metal_driver_riscv_cpu_controller_interrupt_disable (struct metal_interrupt *controller,
                                                         int id)
{   
200160b8:	1101                	addi	sp,sp,-32
200160ba:	ce06                	sw	ra,28(sp)
200160bc:	cc22                	sw	s0,24(sp)
200160be:	1000                	addi	s0,sp,32
200160c0:	fea42623          	sw	a0,-20(s0)
200160c4:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
200160c8:	fe842783          	lw	a5,-24(s0)
200160cc:	4601                	li	a2,0
200160ce:	85be                	mv	a1,a5
200160d0:	fec42503          	lw	a0,-20(s0)
200160d4:	3115                	jal	20015cf8 <__metal_local_interrupt_enable>
200160d6:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:691
}
200160d8:	853e                	mv	a0,a5
200160da:	40f2                	lw	ra,28(sp)
200160dc:	4462                	lw	s0,24(sp)
200160de:	6105                	addi	sp,sp,32
200160e0:	8082                	ret

200160e2 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:722
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode (struct metal_interrupt *controller)
{   
200160e2:	1101                	addi	sp,sp,-32
200160e4:	ce06                	sw	ra,28(sp)
200160e6:	cc22                	sw	s0,24(sp)
200160e8:	1000                	addi	s0,sp,32
200160ea:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723
    return __metal_controller_interrupt_vector_mode();
200160ee:	aebff0ef          	jal	ra,20015bd8 <__metal_controller_interrupt_vector_mode>
200160f2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
}
200160f4:	853e                	mv	a0,a5
200160f6:	40f2                	lw	ra,28(sp)
200160f8:	4462                	lw	s0,24(sp)
200160fa:	6105                	addi	sp,sp,32
200160fc:	8082                	ret

200160fe <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728

int __metal_driver_riscv_cpu_controller_set_vector_mode (struct metal_interrupt *controller,
                                                         metal_vector_mode mode)
{   
200160fe:	7179                	addi	sp,sp,-48
20016100:	d606                	sw	ra,44(sp)
20016102:	d422                	sw	s0,40(sp)
20016104:	1800                	addi	s0,sp,48
20016106:	fca42e23          	sw	a0,-36(s0)
2001610a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:729
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2001610e:	fdc42783          	lw	a5,-36(s0)
20016112:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731

    if (mode == METAL_DIRECT_MODE) {
20016116:	fd842783          	lw	a5,-40(s0)
2001611a:	eb99                	bnez	a5,20016130 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        __metal_controller_interrupt_vector(mode, (void *)(uintptr_t)&__metal_exception_handler);
2001611c:	200157b7          	lui	a5,0x20015
20016120:	10078593          	addi	a1,a5,256 # 20015100 <__metal_exception_handler>
20016124:	fd842503          	lw	a0,-40(s0)
20016128:	b01ff0ef          	jal	ra,20015c28 <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            return 0;
2001612c:	4781                	li	a5,0
2001612e:	a00d                	j	20016150 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:735
    }
    if (mode == METAL_VECTOR_MODE) {
20016130:	fd842703          	lw	a4,-40(s0)
20016134:	4785                	li	a5,1
20016136:	00f71c63          	bne	a4,a5,2001614e <__metal_driver_riscv_cpu_controller_set_vector_mode+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:736
        __metal_controller_interrupt_vector(mode, (void *)__metal_vector_table);
2001613a:	200187b7          	lui	a5,0x20018
2001613e:	60078593          	addi	a1,a5,1536 # 20018600 <__metal_vector_table>
20016142:	fd842503          	lw	a0,-40(s0)
20016146:	ae3ff0ef          	jal	ra,20015c28 <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
        return 0;
2001614a:	4781                	li	a5,0
2001614c:	a011                	j	20016150 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:739
    }
    return -1;
2001614e:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740
}
20016150:	853e                	mv	a0,a5
20016152:	50b2                	lw	ra,44(sp)
20016154:	5422                	lw	s0,40(sp)
20016156:	6145                	addi	sp,sp,48
20016158:	8082                	ret

2001615a <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:744

int __metal_driver_riscv_cpu_controller_command_request (struct metal_interrupt *controller,
						       int cmd, void *data)
{
2001615a:	1101                	addi	sp,sp,-32
2001615c:	ce22                	sw	s0,28(sp)
2001615e:	1000                	addi	s0,sp,32
20016160:	fea42623          	sw	a0,-20(s0)
20016164:	feb42423          	sw	a1,-24(s0)
20016168:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:746
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic */
    return 0;
2001616c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747
}
2001616e:	853e                	mv	a0,a5
20016170:	4472                	lw	s0,28(sp)
20016172:	6105                	addi	sp,sp,32
20016174:	8082                	ret

20016176 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:752

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu)
{
20016176:	7139                	addi	sp,sp,-64
20016178:	de22                	sw	s0,60(sp)
2001617a:	0080                	addi	s0,sp,64
2001617c:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:753
    unsigned long long val = 0;
20016180:	4301                	li	t1,0
20016182:	4381                	li	t2,0
20016184:	fe642423          	sw	t1,-24(s0)
20016188:	fe742623          	sw	t2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi));
2001618c:	b8002573          	csrr	a0,mcycleh
20016190:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:759
    __asm__ volatile ("csrr %0, mcycle" : "=r"(lo));
20016194:	b0002573          	csrr	a0,mcycle
20016198:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:760
    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi1));
2001619c:	b8002573          	csrr	a0,mcycleh
200161a0:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:761
    if (hi == hi1) {
200161a4:	fe442883          	lw	a7,-28(s0)
200161a8:	fdc42503          	lw	a0,-36(s0)
200161ac:	02a89563          	bne	a7,a0,200161d6 <__metal_driver_cpu_mcycle_get+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
        val = ((unsigned long long)hi << 32) | lo;
200161b0:	fe442503          	lw	a0,-28(s0)
200161b4:	85aa                	mv	a1,a0
200161b6:	4601                	li	a2,0
200161b8:	00059813          	slli	a6,a1,0x0
200161bc:	4781                	li	a5,0
200161be:	fe042603          	lw	a2,-32(s0)
200161c2:	86b2                	mv	a3,a2
200161c4:	4701                	li	a4,0
200161c6:	00d7e633          	or	a2,a5,a3
200161ca:	fec42423          	sw	a2,-24(s0)
200161ce:	00e867b3          	or	a5,a6,a4
200161d2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:768
    }
#else
    __asm__ volatile ("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
200161d6:	fe842783          	lw	a5,-24(s0)
200161da:	fec42803          	lw	a6,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:769
}
200161de:	853e                	mv	a0,a5
200161e0:	85c2                	mv	a1,a6
200161e2:	5472                	lw	s0,60(sp)
200161e4:	6121                	addi	sp,sp,64
200161e6:	8082                	ret

200161e8 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu)
{
200161e8:	7179                	addi	sp,sp,-48
200161ea:	d606                	sw	ra,44(sp)
200161ec:	d422                	sw	s0,40(sp)
200161ee:	d24a                	sw	s2,36(sp)
200161f0:	d04e                	sw	s3,32(sp)
200161f2:	1800                	addi	s0,sp,48
200161f4:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:774
  int timebase;
    if (!cpu) {
200161f8:	fdc42783          	lw	a5,-36(s0)
200161fc:	e781                	bnez	a5,20016204 <__metal_driver_cpu_timebase_get+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775
        return 0;
200161fe:	4901                	li	s2,0
20016200:	4981                	li	s3,0
20016202:	a821                	j	2001621a <__metal_driver_cpu_timebase_get+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:778
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20016204:	fdc42503          	lw	a0,-36(s0)
20016208:	a99fe0ef          	jal	ra,20014ca0 <__metal_driver_cpu_timebase>
2001620c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:779
    return timebase;
20016210:	fec42783          	lw	a5,-20(s0)
20016214:	893e                	mv	s2,a5
20016216:	87fd                	srai	a5,a5,0x1f
20016218:	89be                	mv	s3,a5
2001621a:	87ca                	mv	a5,s2
2001621c:	884e                	mv	a6,s3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:780
}
2001621e:	853e                	mv	a0,a5
20016220:	85c2                	mv	a1,a6
20016222:	50b2                	lw	ra,44(sp)
20016224:	5422                	lw	s0,40(sp)
20016226:	5912                	lw	s2,36(sp)
20016228:	5982                	lw	s3,32(sp)
2001622a:	6145                	addi	sp,sp,48
2001622c:	8082                	ret

2001622e <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:783

unsigned long long  __metal_driver_cpu_mtime_get (struct metal_cpu *cpu)
{
2001622e:	7179                	addi	sp,sp,-48
20016230:	d606                	sw	ra,44(sp)
20016232:	d422                	sw	s0,40(sp)
20016234:	1800                	addi	s0,sp,48
20016236:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:784
    unsigned long long time = 0;
2001623a:	4781                	li	a5,0
2001623c:	4801                	li	a6,0
2001623e:	fef42023          	sw	a5,-32(s0)
20016242:	ff042223          	sw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:787
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20016246:	fdc42503          	lw	a0,-36(s0)
2001624a:	a81fe0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
2001624e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:789

    if (intc) {
20016252:	fec42783          	lw	a5,-20(s0)
20016256:	c78d                	beqz	a5,20016280 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:790
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20016258:	fec42783          	lw	a5,-20(s0)
2001625c:	13c7a783          	lw	a5,316(a5)
20016260:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:791
        if (tmr_intc) {
20016264:	fe842783          	lw	a5,-24(s0)
20016268:	cf81                	beqz	a5,20016280 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:792
            tmr_intc->vtable->command_request(tmr_intc,
2001626a:	fe842783          	lw	a5,-24(s0)
2001626e:	439c                	lw	a5,0(a5)
20016270:	43f8                	lw	a4,68(a5)
20016272:	fe040793          	addi	a5,s0,-32
20016276:	863e                	mv	a2,a5
20016278:	4585                	li	a1,1
2001627a:	fe842503          	lw	a0,-24(s0)
2001627e:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:796
                                              METAL_TIMER_MTIME_GET, &time);
        }
    }
    return time;
20016280:	fe042783          	lw	a5,-32(s0)
20016284:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:797
}
20016288:	853e                	mv	a0,a5
2001628a:	85c2                	mv	a1,a6
2001628c:	50b2                	lw	ra,44(sp)
2001628e:	5422                	lw	s0,40(sp)
20016290:	6145                	addi	sp,sp,48
20016292:	8082                	ret

20016294 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:800

int __metal_driver_cpu_mtimecmp_set (struct metal_cpu *cpu, unsigned long long time)
{
20016294:	7179                	addi	sp,sp,-48
20016296:	d606                	sw	ra,44(sp)
20016298:	d422                	sw	s0,40(sp)
2001629a:	d226                	sw	s1,36(sp)
2001629c:	1800                	addi	s0,sp,48
2001629e:	fca42e23          	sw	a0,-36(s0)
200162a2:	fcb42823          	sw	a1,-48(s0)
200162a6:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    int rc = -1;
200162aa:	57fd                	li	a5,-1
200162ac:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
200162b0:	fdc42503          	lw	a0,-36(s0)
200162b4:	a17fe0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
200162b8:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:806

    if (intc) {
200162bc:	fe842783          	lw	a5,-24(s0)
200162c0:	cf8d                	beqz	a5,200162fa <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
200162c2:	fe842783          	lw	a5,-24(s0)
200162c6:	13c7a783          	lw	a5,316(a5)
200162ca:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
        if (tmr_intc) {
200162ce:	fe442783          	lw	a5,-28(s0)
200162d2:	c785                	beqz	a5,200162fa <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:809
            rc = tmr_intc->vtable->mtimecmp_set(tmr_intc,
200162d4:	fe442783          	lw	a5,-28(s0)
200162d8:	439c                	lw	a5,0(a5)
200162da:	47a4                	lw	s1,72(a5)
200162dc:	fdc42503          	lw	a0,-36(s0)
200162e0:	99dfe0ef          	jal	ra,20014c7c <__metal_driver_cpu_hartid>
200162e4:	87aa                	mv	a5,a0
200162e6:	fd042603          	lw	a2,-48(s0)
200162ea:	fd442683          	lw	a3,-44(s0)
200162ee:	85be                	mv	a1,a5
200162f0:	fe442503          	lw	a0,-28(s0)
200162f4:	9482                	jalr	s1
200162f6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:814
                                                __metal_driver_cpu_hartid(cpu),
                                                time);
        }
    }
    return rc;
200162fa:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:815
}
200162fe:	853e                	mv	a0,a5
20016300:	50b2                	lw	ra,44(sp)
20016302:	5422                	lw	s0,40(sp)
20016304:	5492                	lw	s1,36(sp)
20016306:	6145                	addi	sp,sp,48
20016308:	8082                	ret

2001630a <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:819

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu)
{
2001630a:	1101                	addi	sp,sp,-32
2001630c:	ce22                	sw	s0,28(sp)
2001630e:	1000                	addi	s0,sp,32
20016310:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20016314:	800017b7          	lui	a5,0x80001
20016318:	26478793          	addi	a5,a5,612 # 80001264 <metal_segment_heap_target_end+0xfffff018>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
2001631c:	853e                	mv	a0,a5
2001631e:	4472                	lw	s0,28(sp)
20016320:	6105                	addi	sp,sp,32
20016322:	8082                	ret

20016324 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:833

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu)
{
20016324:	1101                	addi	sp,sp,-32
20016326:	ce22                	sw	s0,28(sp)
20016328:	1000                	addi	s0,sp,32
2001632a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834
    return METAL_INTERRUPT_ID_TMR;
2001632e:	479d                	li	a5,7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
}
20016330:	853e                	mv	a0,a5
20016332:	4472                	lw	s0,28(sp)
20016334:	6105                	addi	sp,sp,32
20016336:	8082                	ret

20016338 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:839

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu)
{
20016338:	1101                	addi	sp,sp,-32
2001633a:	ce22                	sw	s0,28(sp)
2001633c:	1000                	addi	s0,sp,32
2001633e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:841
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20016342:	800017b7          	lui	a5,0x80001
20016346:	26478793          	addi	a5,a5,612 # 80001264 <metal_segment_heap_target_end+0xfffff018>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:850
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
2001634a:	853e                	mv	a0,a5
2001634c:	4472                	lw	s0,28(sp)
2001634e:	6105                	addi	sp,sp,32
20016350:	8082                	ret

20016352 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:853

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu)
{
20016352:	1101                	addi	sp,sp,-32
20016354:	ce22                	sw	s0,28(sp)
20016356:	1000                	addi	s0,sp,32
20016358:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:854
    return METAL_INTERRUPT_ID_SW;
2001635c:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:855
}
2001635e:	853e                	mv	a0,a5
20016360:	4472                	lw	s0,28(sp)
20016362:	6105                	addi	sp,sp,32
20016364:	8082                	ret

20016366 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:858

int __metal_driver_cpu_set_sw_ipi (struct metal_cpu *cpu, int hartid)
{
20016366:	7179                	addi	sp,sp,-48
20016368:	d606                	sw	ra,44(sp)
2001636a:	d422                	sw	s0,40(sp)
2001636c:	1800                	addi	s0,sp,48
2001636e:	fca42e23          	sw	a0,-36(s0)
20016372:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:859
    int rc = -1;
20016376:	57fd                	li	a5,-1
20016378:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:862
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc = 
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
2001637c:	fdc42503          	lw	a0,-36(s0)
20016380:	94bfe0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
20016384:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:864

    if (intc) {
20016388:	fe842783          	lw	a5,-24(s0)
2001638c:	c79d                	beqz	a5,200163ba <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:865
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2001638e:	fe842783          	lw	a5,-24(s0)
20016392:	0dc7a783          	lw	a5,220(a5)
20016396:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:866
        if (sw_intc) {
2001639a:	fe442783          	lw	a5,-28(s0)
2001639e:	cf91                	beqz	a5,200163ba <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:867
            rc = sw_intc->vtable->command_request(sw_intc,
200163a0:	fe442783          	lw	a5,-28(s0)
200163a4:	439c                	lw	a5,0(a5)
200163a6:	43f8                	lw	a4,68(a5)
200163a8:	fd840793          	addi	a5,s0,-40
200163ac:	863e                	mv	a2,a5
200163ae:	458d                	li	a1,3
200163b0:	fe442503          	lw	a0,-28(s0)
200163b4:	9702                	jalr	a4
200163b6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:871
                                                  METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
200163ba:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:872
}
200163be:	853e                	mv	a0,a5
200163c0:	50b2                	lw	ra,44(sp)
200163c2:	5422                	lw	s0,40(sp)
200163c4:	6145                	addi	sp,sp,48
200163c6:	8082                	ret

200163c8 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:875

int __metal_driver_cpu_clear_sw_ipi (struct metal_cpu *cpu, int hartid)
{
200163c8:	7179                	addi	sp,sp,-48
200163ca:	d606                	sw	ra,44(sp)
200163cc:	d422                	sw	s0,40(sp)
200163ce:	1800                	addi	s0,sp,48
200163d0:	fca42e23          	sw	a0,-36(s0)
200163d4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:876
    int rc = -1;
200163d8:	57fd                	li	a5,-1
200163da:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:879
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
200163de:	fdc42503          	lw	a0,-36(s0)
200163e2:	8e9fe0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
200163e6:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:881

    if (intc) {
200163ea:	fe842783          	lw	a5,-24(s0)
200163ee:	c79d                	beqz	a5,2001641c <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:882
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200163f0:	fe842783          	lw	a5,-24(s0)
200163f4:	0dc7a783          	lw	a5,220(a5)
200163f8:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:883
        if (sw_intc) {
200163fc:	fe442783          	lw	a5,-28(s0)
20016400:	cf91                	beqz	a5,2001641c <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:884
            rc = sw_intc->vtable->command_request(sw_intc,
20016402:	fe442783          	lw	a5,-28(s0)
20016406:	439c                	lw	a5,0(a5)
20016408:	43f8                	lw	a4,68(a5)
2001640a:	fd840793          	addi	a5,s0,-40
2001640e:	863e                	mv	a2,a5
20016410:	4589                	li	a1,2
20016412:	fe442503          	lw	a0,-28(s0)
20016416:	9702                	jalr	a4
20016418:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:888
                                                  METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
2001641c:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:889
}
20016420:	853e                	mv	a0,a5
20016422:	50b2                	lw	ra,44(sp)
20016424:	5422                	lw	s0,40(sp)
20016426:	6145                	addi	sp,sp,48
20016428:	8082                	ret

2001642a <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:892

int __metal_driver_cpu_get_msip (struct metal_cpu *cpu, int hartid)
{
2001642a:	7179                	addi	sp,sp,-48
2001642c:	d606                	sw	ra,44(sp)
2001642e:	d422                	sw	s0,40(sp)
20016430:	1800                	addi	s0,sp,48
20016432:	fca42e23          	sw	a0,-36(s0)
20016436:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:893
    int rc = 0;
2001643a:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:896
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
2001643e:	fdc42503          	lw	a0,-36(s0)
20016442:	889fe0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
20016446:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:898

    if (intc) {
2001644a:	fe842783          	lw	a5,-24(s0)
2001644e:	c79d                	beqz	a5,2001647c <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:899
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20016450:	fe842783          	lw	a5,-24(s0)
20016454:	0dc7a783          	lw	a5,220(a5)
20016458:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:900
        if (sw_intc) {
2001645c:	fe442783          	lw	a5,-28(s0)
20016460:	cf91                	beqz	a5,2001647c <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:901
            rc = sw_intc->vtable->command_request(sw_intc,
20016462:	fe442783          	lw	a5,-28(s0)
20016466:	439c                	lw	a5,0(a5)
20016468:	43f8                	lw	a4,68(a5)
2001646a:	fd840793          	addi	a5,s0,-40
2001646e:	863e                	mv	a2,a5
20016470:	4591                	li	a1,4
20016472:	fe442503          	lw	a0,-28(s0)
20016476:	9702                	jalr	a4
20016478:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:905
                                                  METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
2001647c:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:906
}
20016480:	853e                	mv	a0,a5
20016482:	50b2                	lw	ra,44(sp)
20016484:	5422                	lw	s0,40(sp)
20016486:	6145                	addi	sp,sp,48
20016488:	8082                	ret

2001648a <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:910

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu)
{
2001648a:	1101                	addi	sp,sp,-32
2001648c:	ce06                	sw	ra,28(sp)
2001648e:	cc22                	sw	s0,24(sp)
20016490:	1000                	addi	s0,sp,32
20016492:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:911
    return __metal_driver_cpu_interrupt_controller(cpu);
20016496:	fec42503          	lw	a0,-20(s0)
2001649a:	831fe0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
2001649e:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:912
}
200164a0:	853e                	mv	a0,a5
200164a2:	40f2                	lw	ra,28(sp)
200164a4:	4462                	lw	s0,24(sp)
200164a6:	6105                	addi	sp,sp,32
200164a8:	8082                	ret

200164aa <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:936
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
				        metal_exception_handler_t isr)
{
200164aa:	7179                	addi	sp,sp,-48
200164ac:	d606                	sw	ra,44(sp)
200164ae:	d422                	sw	s0,40(sp)
200164b0:	1800                	addi	s0,sp,48
200164b2:	fca42e23          	sw	a0,-36(s0)
200164b6:	fcb42c23          	sw	a1,-40(s0)
200164ba:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:938
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
200164be:	fdc42503          	lw	a0,-36(s0)
200164c2:	809fe0ef          	jal	ra,20014cca <__metal_driver_cpu_interrupt_controller>
200164c6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:940

    if (intc) {
200164ca:	fec42783          	lw	a5,-20(s0)
200164ce:	cb99                	beqz	a5,200164e4 <__metal_driver_cpu_exception_register+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:941
        return __metal_exception_register((struct metal_interrupt *)intc, ecode, isr);
200164d0:	fd442603          	lw	a2,-44(s0)
200164d4:	fd842583          	lw	a1,-40(s0)
200164d8:	fec42503          	lw	a0,-20(s0)
200164dc:	8d9ff0ef          	jal	ra,20015db4 <__metal_exception_register>
200164e0:	87aa                	mv	a5,a0
200164e2:	a011                	j	200164e6 <__metal_driver_cpu_exception_register+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:943
    }
    return -1;
200164e4:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:944
}
200164e6:	853e                	mv	a0,a5
200164e8:	50b2                	lw	ra,44(sp)
200164ea:	5422                	lw	s0,40(sp)
200164ec:	6145                	addi	sp,sp,48
200164ee:	8082                	ret

200164f0 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:947

int  __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu, uintptr_t epc)
{
200164f0:	1101                	addi	sp,sp,-32
200164f2:	ce22                	sw	s0,28(sp)
200164f4:	1000                	addi	s0,sp,32
200164f6:	fea42623          	sw	a0,-20(s0)
200164fa:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:953
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short*)epc & METAL_INSN_LENGTH_MASK)
200164fe:	fe842783          	lw	a5,-24(s0)
20016502:	0007d783          	lhu	a5,0(a5)
20016506:	0037f713          	andi	a4,a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954
            == METAL_INSN_NOT_COMPRESSED) ? 4 : 2;
2001650a:	478d                	li	a5,3
2001650c:	00f71463          	bne	a4,a5,20016514 <__metal_driver_cpu_get_instruction_length+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 1)
20016510:	4791                	li	a5,4
20016512:	a011                	j	20016516 <__metal_driver_cpu_get_instruction_length+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 2)
20016514:	4789                	li	a5,2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:955 (discriminator 5)
}
20016516:	853e                	mv	a0,a5
20016518:	4472                	lw	s0,28(sp)
2001651a:	6105                	addi	sp,sp,32
2001651c:	8082                	ret

2001651e <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:958

uintptr_t  __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu)
{
2001651e:	7179                	addi	sp,sp,-48
20016520:	d622                	sw	s0,44(sp)
20016522:	1800                	addi	s0,sp,48
20016524:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:960
    uintptr_t mepc;
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
20016528:	341027f3          	csrr	a5,mepc
2001652c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:961
    return mepc;
20016530:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:962
}
20016534:	853e                	mv	a0,a5
20016536:	5432                	lw	s0,44(sp)
20016538:	6145                	addi	sp,sp,48
2001653a:	8082                	ret

2001653c <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:965

int  __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc)
{
2001653c:	1101                	addi	sp,sp,-32
2001653e:	ce22                	sw	s0,28(sp)
20016540:	1000                	addi	s0,sp,32
20016542:	fea42623          	sw	a0,-20(s0)
20016546:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:966
    __asm__ volatile ("csrw mepc, %0" :: "r"(mepc));
2001654a:	fe842783          	lw	a5,-24(s0)
2001654e:	34179073          	csrw	mepc,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:967
    return 0;
20016552:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:968
}
20016554:	853e                	mv	a0,a5
20016556:	4472                	lw	s0,28(sp)
20016558:	6105                	addi	sp,sp,32
2001655a:	8082                	ret

2001655c <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:305



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
2001655c:	1101                	addi	sp,sp,-32
2001655e:	ce22                	sw	s0,28(sp)
20016560:	1000                	addi	s0,sp,32
20016562:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:306
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20016566:	fec42703          	lw	a4,-20(s0)
2001656a:	800017b7          	lui	a5,0x80001
2001656e:	c1878793          	addi	a5,a5,-1000 # 80000c18 <metal_segment_heap_target_end+0xffffe9cc>
20016572:	00f71563          	bne	a4,a5,2001657c <__metal_driver_sifive_plic0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:307
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20016576:	0c0007b7          	lui	a5,0xc000
2001657a:	a011                	j	2001657e <__metal_driver_sifive_plic0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:310
	}
	else {
		return 0;
2001657c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:312
	}
}
2001657e:	853e                	mv	a0,a5
20016580:	4472                	lw	s0,28(sp)
20016582:	6105                	addi	sp,sp,32
20016584:	8082                	ret

20016586 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:325
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20016586:	1101                	addi	sp,sp,-32
20016588:	ce22                	sw	s0,28(sp)
2001658a:	1000                	addi	s0,sp,32
2001658c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:326
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20016590:	fec42703          	lw	a4,-20(s0)
20016594:	800017b7          	lui	a5,0x80001
20016598:	c1878793          	addi	a5,a5,-1000 # 80000c18 <metal_segment_heap_target_end+0xffffe9cc>
2001659c:	00f71563          	bne	a4,a5,200165a6 <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:327
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
200165a0:	03500793          	li	a5,53
200165a4:	a011                	j	200165a8 <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:330
	}
	else {
		return 0;
200165a6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:332
	}
}
200165a8:	853e                	mv	a0,a5
200165aa:	4472                	lw	s0,28(sp)
200165ac:	6105                	addi	sp,sp,32
200165ae:	8082                	ret

200165b0 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:335

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
200165b0:	1101                	addi	sp,sp,-32
200165b2:	ce22                	sw	s0,28(sp)
200165b4:	1000                	addi	s0,sp,32
200165b6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:336
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200165ba:	fec42703          	lw	a4,-20(s0)
200165be:	800017b7          	lui	a5,0x80001
200165c2:	c1878793          	addi	a5,a5,-1000 # 80000c18 <metal_segment_heap_target_end+0xffffe9cc>
200165c6:	00f71463          	bne	a4,a5,200165ce <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:337
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
200165ca:	479d                	li	a5,7
200165cc:	a011                	j	200165d0 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:340
	}
	else {
		return 0;
200165ce:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:342
	}
}
200165d0:	853e                	mv	a0,a5
200165d2:	4472                	lw	s0,28(sp)
200165d4:	6105                	addi	sp,sp,32
200165d6:	8082                	ret

200165d8 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:345

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200165d8:	1101                	addi	sp,sp,-32
200165da:	ce22                	sw	s0,28(sp)
200165dc:	1000                	addi	s0,sp,32
200165de:	fea42623          	sw	a0,-20(s0)
200165e2:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:346
	if (idx == 0) {
200165e6:	fe842783          	lw	a5,-24(s0)
200165ea:	e791                	bnez	a5,200165f6 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:347
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200165ec:	800017b7          	lui	a5,0x80001
200165f0:	86078793          	addi	a5,a5,-1952 # 80000860 <metal_segment_heap_target_end+0xffffe614>
200165f4:	a011                	j	200165f8 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:350
	}
	else {
		return NULL;
200165f6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:352
	}
}
200165f8:	853e                	mv	a0,a5
200165fa:	4472                	lw	s0,28(sp)
200165fc:	6105                	addi	sp,sp,32
200165fe:	8082                	ret

20016600 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:355

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20016600:	1101                	addi	sp,sp,-32
20016602:	ce22                	sw	s0,28(sp)
20016604:	1000                	addi	s0,sp,32
20016606:	fea42623          	sw	a0,-20(s0)
2001660a:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:356
	if (idx == 0) {
2001660e:	fe842783          	lw	a5,-24(s0)
20016612:	e399                	bnez	a5,20016618 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:357
		return 11;
20016614:	47ad                	li	a5,11
20016616:	a011                	j	2001661a <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:360
	}
	else {
		return 0;
20016618:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:362
	}
}
2001661a:	853e                	mv	a0,a5
2001661c:	4472                	lw	s0,28(sp)
2001661e:	6105                	addi	sp,sp,32
20016620:	8082                	ret

20016622 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:14
#include <metal/shutdown.h>
#include <metal/drivers/riscv_plic0.h>
#include <metal/machine.h>

unsigned int __metal_plic0_claim_interrupt (struct __metal_driver_riscv_plic0 *plic)
{
20016622:	7179                	addi	sp,sp,-48
20016624:	d606                	sw	ra,44(sp)
20016626:	d422                	sw	s0,40(sp)
20016628:	1800                	addi	s0,sp,48
2001662a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:15
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
2001662e:	fdc42503          	lw	a0,-36(s0)
20016632:	372d                	jal	2001655c <__metal_driver_sifive_plic0_control_base>
20016634:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:16
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20016638:	fec42703          	lw	a4,-20(s0)
2001663c:	002007b7          	lui	a5,0x200
20016640:	0791                	addi	a5,a5,4
20016642:	97ba                	add	a5,a5,a4
20016644:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
					      METAL_RISCV_PLIC0_CLAIM));
}
20016646:	853e                	mv	a0,a5
20016648:	50b2                	lw	ra,44(sp)
2001664a:	5422                	lw	s0,40(sp)
2001664c:	6145                	addi	sp,sp,48
2001664e:	8082                	ret

20016650 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:22

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
				    unsigned int id)
{
20016650:	7179                	addi	sp,sp,-48
20016652:	d606                	sw	ra,44(sp)
20016654:	d422                	sw	s0,40(sp)
20016656:	1800                	addi	s0,sp,48
20016658:	fca42e23          	sw	a0,-36(s0)
2001665c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:23
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20016660:	fdc42503          	lw	a0,-36(s0)
20016664:	3de5                	jal	2001655c <__metal_driver_sifive_plic0_control_base>
20016666:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:24
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001666a:	fec42703          	lw	a4,-20(s0)
2001666e:	002007b7          	lui	a5,0x200
20016672:	0791                	addi	a5,a5,4
20016674:	97ba                	add	a5,a5,a4
20016676:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
				       METAL_RISCV_PLIC0_CLAIM)) = id;
20016678:	fd842783          	lw	a5,-40(s0)
2001667c:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:26
}
2001667e:	0001                	nop
20016680:	50b2                	lw	ra,44(sp)
20016682:	5422                	lw	s0,40(sp)
20016684:	6145                	addi	sp,sp,48
20016686:	8082                	ret

20016688 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29

int __metal_plic0_set_threshold(struct metal_interrupt *controller, unsigned int threshold)
{
20016688:	7179                	addi	sp,sp,-48
2001668a:	d606                	sw	ra,44(sp)
2001668c:	d422                	sw	s0,40(sp)
2001668e:	1800                	addi	s0,sp,48
20016690:	fca42e23          	sw	a0,-36(s0)
20016694:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:30
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
20016698:	fdc42503          	lw	a0,-36(s0)
2001669c:	35c1                	jal	2001655c <__metal_driver_sifive_plic0_control_base>
2001669e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200166a2:	fec42703          	lw	a4,-20(s0)
200166a6:	002007b7          	lui	a5,0x200
200166aa:	97ba                	add	a5,a5,a4
200166ac:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:32
				       METAL_RISCV_PLIC0_THRESHOLD)) = threshold;
200166ae:	fd842783          	lw	a5,-40(s0)
200166b2:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:33
    return 0;
200166b4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
}
200166b6:	853e                	mv	a0,a5
200166b8:	50b2                	lw	ra,44(sp)
200166ba:	5422                	lw	s0,40(sp)
200166bc:	6145                	addi	sp,sp,48
200166be:	8082                	ret

200166c0 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:37

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller)
{
200166c0:	7179                	addi	sp,sp,-48
200166c2:	d606                	sw	ra,44(sp)
200166c4:	d422                	sw	s0,40(sp)
200166c6:	1800                	addi	s0,sp,48
200166c8:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
200166cc:	fdc42503          	lw	a0,-36(s0)
200166d0:	3571                	jal	2001655c <__metal_driver_sifive_plic0_control_base>
200166d2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200166d6:	fec42703          	lw	a4,-20(s0)
200166da:	002007b7          	lui	a5,0x200
200166de:	97ba                	add	a5,a5,a4
200166e0:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:42
				       METAL_RISCV_PLIC0_THRESHOLD));
}
200166e2:	853e                	mv	a0,a5
200166e4:	50b2                	lw	ra,44(sp)
200166e6:	5422                	lw	s0,40(sp)
200166e8:	6145                	addi	sp,sp,48
200166ea:	8082                	ret

200166ec <__metal_plic0_set_priority>:
__metal_plic0_set_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45

int __metal_plic0_set_priority(struct metal_interrupt *controller, int id, unsigned int priority)
{
200166ec:	7179                	addi	sp,sp,-48
200166ee:	d606                	sw	ra,44(sp)
200166f0:	d422                	sw	s0,40(sp)
200166f2:	1800                	addi	s0,sp,48
200166f4:	fca42e23          	sw	a0,-36(s0)
200166f8:	fcb42c23          	sw	a1,-40(s0)
200166fc:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)controller);
20016700:	fdc42503          	lw	a0,-36(s0)
20016704:	3da1                	jal	2001655c <__metal_driver_sifive_plic0_control_base>
20016706:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:47
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority((struct metal_interrupt *)controller);
2001670a:	fdc42503          	lw	a0,-36(s0)
2001670e:	354d                	jal	200165b0 <__metal_driver_sifive_plic0_max_priority>
20016710:	87aa                	mv	a5,a0
20016712:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48
    if ( (max_priority) && (priority < max_priority) ) {
20016716:	fe842783          	lw	a5,-24(s0)
2001671a:	c785                	beqz	a5,20016742 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48 (discriminator 1)
2001671c:	fd442703          	lw	a4,-44(s0)
20016720:	fe842783          	lw	a5,-24(s0)
20016724:	00f77f63          	bgeu	a4,a5,20016742 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49
        __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20016728:	fd842783          	lw	a5,-40(s0)
2001672c:	078a                	slli	a5,a5,0x2
2001672e:	873e                	mv	a4,a5
20016730:	fec42783          	lw	a5,-20(s0)
20016734:	97ba                	add	a5,a5,a4
20016736:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) = priority;
20016738:	fd442783          	lw	a5,-44(s0)
2001673c:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
        return 0;
2001673e:	4781                	li	a5,0
20016740:	a011                	j	20016744 <__metal_plic0_set_priority+0x58>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:54
    }
    return -1;
20016742:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:55
}
20016744:	853e                	mv	a0,a5
20016746:	50b2                	lw	ra,44(sp)
20016748:	5422                	lw	s0,40(sp)
2001674a:	6145                	addi	sp,sp,48
2001674c:	8082                	ret

2001674e <__metal_plic0_get_priority>:
__metal_plic0_get_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:58

unsigned int __metal_plic0_get_priority(struct metal_interrupt *controller, int id)
{
2001674e:	7179                	addi	sp,sp,-48
20016750:	d606                	sw	ra,44(sp)
20016752:	d422                	sw	s0,40(sp)
20016754:	1800                	addi	s0,sp,48
20016756:	fca42e23          	sw	a0,-36(s0)
2001675a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
2001675e:	fdc42503          	lw	a0,-36(s0)
20016762:	3bed                	jal	2001655c <__metal_driver_sifive_plic0_control_base>
20016764:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:61

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20016768:	fd842783          	lw	a5,-40(s0)
2001676c:	078a                	slli	a5,a5,0x2
2001676e:	873e                	mv	a4,a5
20016770:	fec42783          	lw	a5,-20(s0)
20016774:	97ba                	add	a5,a5,a4
20016776:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20016778:	853e                	mv	a0,a5
2001677a:	50b2                	lw	ra,44(sp)
2001677c:	5422                	lw	s0,40(sp)
2001677e:	6145                	addi	sp,sp,48
20016780:	8082                	ret

20016782 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67

void __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic, int id, int enable)
{
20016782:	7179                	addi	sp,sp,-48
20016784:	d606                	sw	ra,44(sp)
20016786:	d422                	sw	s0,40(sp)
20016788:	1800                	addi	s0,sp,48
2001678a:	fca42e23          	sw	a0,-36(s0)
2001678e:	fcb42c23          	sw	a1,-40(s0)
20016792:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20016796:	fdc42503          	lw	a0,-36(s0)
2001679a:	33c9                	jal	2001655c <__metal_driver_sifive_plic0_control_base>
2001679c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71

    current = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200167a0:	fd842783          	lw	a5,-40(s0)
200167a4:	8795                	srai	a5,a5,0x5
200167a6:	078a                	slli	a5,a5,0x2
200167a8:	873e                	mv	a4,a5
200167aa:	fec42783          	lw	a5,-20(s0)
200167ae:	973e                	add	a4,a4,a5
200167b0:	6789                	lui	a5,0x2
200167b2:	97ba                	add	a5,a5,a4
200167b4:	439c                	lw	a5,0(a5)
200167b6:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
						(id >> METAL_PLIC_SOURCE_SHIFT) * 4));
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
					METAL_RISCV_PLIC0_ENABLE_BASE +
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
200167ba:	fd442783          	lw	a5,-44(s0)
200167be:	cf81                	beqz	a5,200167d6 <__metal_plic0_enable+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:77 (discriminator 1)
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
200167c0:	fd842783          	lw	a5,-40(s0)
200167c4:	8bfd                	andi	a5,a5,31
200167c6:	4705                	li	a4,1
200167c8:	00f717b3          	sll	a5,a4,a5
200167cc:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 1)
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
200167ce:	fe842783          	lw	a5,-24(s0)
200167d2:	8fd9                	or	a5,a5,a4
200167d4:	a829                	j	200167ee <__metal_plic0_enable+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 2)
200167d6:	fd842783          	lw	a5,-40(s0)
200167da:	8bfd                	andi	a5,a5,31
200167dc:	4705                	li	a4,1
200167de:	00f717b3          	sll	a5,a4,a5
200167e2:	fff7c793          	not	a5,a5
200167e6:	873e                	mv	a4,a5
200167e8:	fe842783          	lw	a5,-24(s0)
200167ec:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:74
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200167ee:	fd842703          	lw	a4,-40(s0)
200167f2:	8715                	srai	a4,a4,0x5
200167f4:	070a                	slli	a4,a4,0x2
200167f6:	86ba                	mv	a3,a4
200167f8:	fec42703          	lw	a4,-20(s0)
200167fc:	96ba                	add	a3,a3,a4
200167fe:	6709                	lui	a4,0x2
20016800:	9736                	add	a4,a4,a3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20016802:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:79
}
20016804:	0001                	nop
20016806:	50b2                	lw	ra,44(sp)
20016808:	5422                	lw	s0,40(sp)
2001680a:	6145                	addi	sp,sp,48
2001680c:	8082                	ret

2001680e <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:81

void __metal_plic0_default_handler (int id, void *priv) {
2001680e:	1101                	addi	sp,sp,-32
20016810:	ce06                	sw	ra,28(sp)
20016812:	cc22                	sw	s0,24(sp)
20016814:	1000                	addi	s0,sp,32
20016816:	fea42623          	sw	a0,-20(s0)
2001681a:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:82
    metal_shutdown(300);
2001681e:	12c00513          	li	a0,300
20016822:	5c9010ef          	jal	ra,200185ea <metal_shutdown>

20016826 <__metal_plic0_handler>:
__metal_plic0_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86
}

void __metal_plic0_handler (int id, void *priv)
{
20016826:	7179                	addi	sp,sp,-48
20016828:	d606                	sw	ra,44(sp)
2001682a:	d422                	sw	s0,40(sp)
2001682c:	1800                	addi	s0,sp,48
2001682e:	fca42e23          	sw	a0,-36(s0)
20016832:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:87
    struct __metal_driver_riscv_plic0 *plic = priv;
20016836:	fd842783          	lw	a5,-40(s0)
2001683a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int idx = __metal_plic0_claim_interrupt(plic);
2001683e:	fec42503          	lw	a0,-20(s0)
20016842:	33c5                	jal	20016622 <__metal_plic0_claim_interrupt>
20016844:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:89
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts((struct metal_interrupt *)plic);
20016848:	fec42503          	lw	a0,-20(s0)
2001684c:	3b2d                	jal	20016586 <__metal_driver_sifive_plic0_num_interrupts>
2001684e:	87aa                	mv	a5,a0
20016850:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91

    if ( (idx < num_interrupts) && (plic->metal_exint_table[idx]) ) {
20016854:	fe842703          	lw	a4,-24(s0)
20016858:	fe442783          	lw	a5,-28(s0)
2001685c:	04f77263          	bgeu	a4,a5,200168a0 <__metal_plic0_handler+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91 (discriminator 1)
20016860:	fec42703          	lw	a4,-20(s0)
20016864:	fe842783          	lw	a5,-24(s0)
20016868:	078a                	slli	a5,a5,0x2
2001686a:	97ba                	add	a5,a5,a4
2001686c:	479c                	lw	a5,8(a5)
2001686e:	cb8d                	beqz	a5,200168a0 <__metal_plic0_handler+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:92
	plic->metal_exint_table[idx](idx,
20016870:	fec42703          	lw	a4,-20(s0)
20016874:	fe842783          	lw	a5,-24(s0)
20016878:	078a                	slli	a5,a5,0x2
2001687a:	97ba                	add	a5,a5,a4
2001687c:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20016880:	fe842603          	lw	a2,-24(s0)
20016884:	fec42683          	lw	a3,-20(s0)
20016888:	fe842703          	lw	a4,-24(s0)
2001688c:	87ba                	mv	a5,a4
2001688e:	0786                	slli	a5,a5,0x1
20016890:	97ba                	add	a5,a5,a4
20016892:	078e                	slli	a5,a5,0x3
20016894:	97b6                	add	a5,a5,a3
20016896:	0f07a783          	lw	a5,240(a5)
2001689a:	85be                	mv	a1,a5
2001689c:	8532                	mv	a0,a2
2001689e:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:96
				  plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, idx);
200168a0:	fe842583          	lw	a1,-24(s0)
200168a4:	fec42503          	lw	a0,-20(s0)
200168a8:	3365                	jal	20016650 <__metal_plic0_complete_interrupt>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:97
}
200168aa:	0001                	nop
200168ac:	50b2                	lw	ra,44(sp)
200168ae:	5422                	lw	s0,40(sp)
200168b0:	6145                	addi	sp,sp,48
200168b2:	8082                	ret

200168b4 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100

void __metal_driver_riscv_plic0_init (struct metal_interrupt *controller)
{
200168b4:	7139                	addi	sp,sp,-64
200168b6:	de06                	sw	ra,60(sp)
200168b8:	dc22                	sw	s0,56(sp)
200168ba:	0080                	addi	s0,sp,64
200168bc:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:101
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200168c0:	fcc42783          	lw	a5,-52(s0)
200168c4:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103

    if ( !plic->init_done ) {
200168c8:	fe442783          	lw	a5,-28(s0)
200168cc:	43dc                	lw	a5,4(a5)
200168ce:	10079c63          	bnez	a5,200169e6 <__metal_driver_riscv_plic0_init+0x132>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107
        int num_interrupts, line;
        struct metal_interrupt *intc;

	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
200168d2:	fe042623          	sw	zero,-20(s0)
200168d6:	a201                	j	200169d6 <__metal_driver_riscv_plic0_init+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
	    num_interrupts = __metal_driver_sifive_plic0_num_interrupts(controller);
200168d8:	fcc42503          	lw	a0,-52(s0)
200168dc:	316d                	jal	20016586 <__metal_driver_sifive_plic0_num_interrupts>
200168de:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:109
	    intc = __metal_driver_sifive_plic0_interrupt_parents(controller, parent);
200168e2:	fec42583          	lw	a1,-20(s0)
200168e6:	fcc42503          	lw	a0,-52(s0)
200168ea:	31fd                	jal	200165d8 <__metal_driver_sifive_plic0_interrupt_parents>
200168ec:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
	    line = __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
200168f0:	fec42583          	lw	a1,-20(s0)
200168f4:	fcc42503          	lw	a0,-52(s0)
200168f8:	3321                	jal	20016600 <__metal_driver_sifive_plic0_interrupt_lines>
200168fa:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:113

	    /* Initialize ist parent controller, aka cpu_intc. */
	    intc->vtable->interrupt_init(intc);
200168fe:	fdc42783          	lw	a5,-36(s0)
20016902:	439c                	lw	a5,0(a5)
20016904:	439c                	lw	a5,0(a5)
20016906:	fdc42503          	lw	a0,-36(s0)
2001690a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115

	    for (int i = 0; i < num_interrupts; i++) {
2001690c:	fe042423          	sw	zero,-24(s0)
20016910:	a085                	j	20016970 <__metal_driver_riscv_plic0_init+0xbc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116 (discriminator 3)
		__metal_plic0_enable(plic, i, METAL_DISABLE);
20016912:	4601                	li	a2,0
20016914:	fe842583          	lw	a1,-24(s0)
20016918:	fe442503          	lw	a0,-28(s0)
2001691c:	359d                	jal	20016782 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:117 (discriminator 3)
		__metal_plic0_set_priority(controller, i, 0);
2001691e:	4601                	li	a2,0
20016920:	fe842583          	lw	a1,-24(s0)
20016924:	fcc42503          	lw	a0,-52(s0)
20016928:	33d1                	jal	200166ec <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:118 (discriminator 3)
		plic->metal_exint_table[i] = NULL;
2001692a:	fe442703          	lw	a4,-28(s0)
2001692e:	fe842783          	lw	a5,-24(s0)
20016932:	078a                	slli	a5,a5,0x2
20016934:	97ba                	add	a5,a5,a4
20016936:	0007a423          	sw	zero,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:119 (discriminator 3)
		plic->metal_exdata_table[i].sub_int = NULL;
2001693a:	fe442683          	lw	a3,-28(s0)
2001693e:	fe842703          	lw	a4,-24(s0)
20016942:	87ba                	mv	a5,a4
20016944:	0786                	slli	a5,a5,0x1
20016946:	97ba                	add	a5,a5,a4
20016948:	078e                	slli	a5,a5,0x3
2001694a:	97b6                	add	a5,a5,a3
2001694c:	0e07a623          	sw	zero,236(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120 (discriminator 3)
		plic->metal_exdata_table[i].exint_data = NULL;
20016950:	fe442683          	lw	a3,-28(s0)
20016954:	fe842703          	lw	a4,-24(s0)
20016958:	87ba                	mv	a5,a4
2001695a:	0786                	slli	a5,a5,0x1
2001695c:	97ba                	add	a5,a5,a4
2001695e:	078e                	slli	a5,a5,0x3
20016960:	97b6                	add	a5,a5,a3
20016962:	0e07a823          	sw	zero,240(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 3)
	    for (int i = 0; i < num_interrupts; i++) {
20016966:	fe842783          	lw	a5,-24(s0)
2001696a:	0785                	addi	a5,a5,1
2001696c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20016970:	fe842703          	lw	a4,-24(s0)
20016974:	fe042783          	lw	a5,-32(s0)
20016978:	f8f74de3          	blt	a4,a5,20016912 <__metal_driver_riscv_plic0_init+0x5e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123 (discriminator 2)
	    }

	    __metal_plic0_set_threshold(controller, 0);
2001697c:	4581                	li	a1,0
2001697e:	fcc42503          	lw	a0,-52(s0)
20016982:	3319                	jal	20016688 <__metal_plic0_set_threshold>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126 (discriminator 2)

	    /* Register plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_register(intc, line, NULL, plic);
20016984:	fdc42783          	lw	a5,-36(s0)
20016988:	439c                	lw	a5,0(a5)
2001698a:	4fdc                	lw	a5,28(a5)
2001698c:	fe442683          	lw	a3,-28(s0)
20016990:	4601                	li	a2,0
20016992:	fd842583          	lw	a1,-40(s0)
20016996:	fdc42503          	lw	a0,-36(s0)
2001699a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:128 (discriminator 2)
	    /* Register plic handler for dispatching its device interrupts */
	    intc->vtable->interrupt_register(intc, line, __metal_plic0_handler, plic);
2001699c:	fdc42783          	lw	a5,-36(s0)
200169a0:	439c                	lw	a5,0(a5)
200169a2:	4fd8                	lw	a4,28(a5)
200169a4:	fe442683          	lw	a3,-28(s0)
200169a8:	200177b7          	lui	a5,0x20017
200169ac:	82678613          	addi	a2,a5,-2010 # 20016826 <__metal_plic0_handler>
200169b0:	fd842583          	lw	a1,-40(s0)
200169b4:	fdc42503          	lw	a0,-36(s0)
200169b8:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
	    /* Enable plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_enable(intc, line);
200169ba:	fdc42783          	lw	a5,-36(s0)
200169be:	439c                	lw	a5,0(a5)
200169c0:	53dc                	lw	a5,36(a5)
200169c2:	fd842583          	lw	a1,-40(s0)
200169c6:	fdc42503          	lw	a0,-36(s0)
200169ca:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 2)
	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
200169cc:	fec42783          	lw	a5,-20(s0)
200169d0:	0785                	addi	a5,a5,1
200169d2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 1)
200169d6:	fec42783          	lw	a5,-20(s0)
200169da:	eef05fe3          	blez	a5,200168d8 <__metal_driver_riscv_plic0_init+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
	}
        plic->init_done = 1;
200169de:	fe442783          	lw	a5,-28(s0)
200169e2:	4705                	li	a4,1
200169e4:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:134
    }
}
200169e6:	0001                	nop
200169e8:	50f2                	lw	ra,60(sp)
200169ea:	5462                	lw	s0,56(sp)
200169ec:	6121                	addi	sp,sp,64
200169ee:	8082                	ret

200169f0 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

int __metal_driver_riscv_plic0_register (struct metal_interrupt *controller,
			               int id, metal_interrupt_handler_t isr,
			               void *priv)
{
200169f0:	7179                	addi	sp,sp,-48
200169f2:	d606                	sw	ra,44(sp)
200169f4:	d422                	sw	s0,40(sp)
200169f6:	1800                	addi	s0,sp,48
200169f8:	fca42e23          	sw	a0,-36(s0)
200169fc:	fcb42c23          	sw	a1,-40(s0)
20016a00:	fcc42a23          	sw	a2,-44(s0)
20016a04:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:140
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20016a08:	fdc42783          	lw	a5,-36(s0)
20016a0c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20016a10:	fdc42503          	lw	a0,-36(s0)
20016a14:	b73ff0ef          	jal	ra,20016586 <__metal_driver_sifive_plic0_num_interrupts>
20016a18:	872a                	mv	a4,a0
20016a1a:	fd842783          	lw	a5,-40(s0)
20016a1e:	00e7c463          	blt	a5,a4,20016a26 <__metal_driver_riscv_plic0_register+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
        return -1;
20016a22:	57fd                	li	a5,-1
20016a24:	a041                	j	20016aa4 <__metal_driver_riscv_plic0_register+0xb4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
    }
 
    if (isr) {
20016a26:	fd442783          	lw	a5,-44(s0)
20016a2a:	cf95                	beqz	a5,20016a66 <__metal_driver_riscv_plic0_register+0x76>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
        __metal_plic0_set_priority(controller, id, 2);
20016a2c:	4609                	li	a2,2
20016a2e:	fd842583          	lw	a1,-40(s0)
20016a32:	fdc42503          	lw	a0,-36(s0)
20016a36:	395d                	jal	200166ec <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:148
	plic->metal_exint_table[id] = isr;
20016a38:	fec42703          	lw	a4,-20(s0)
20016a3c:	fd842783          	lw	a5,-40(s0)
20016a40:	078a                	slli	a5,a5,0x2
20016a42:	97ba                	add	a5,a5,a4
20016a44:	fd442703          	lw	a4,-44(s0)
20016a48:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:149
	plic->metal_exdata_table[id].exint_data = priv;
20016a4a:	fec42683          	lw	a3,-20(s0)
20016a4e:	fd842703          	lw	a4,-40(s0)
20016a52:	87ba                	mv	a5,a4
20016a54:	0786                	slli	a5,a5,0x1
20016a56:	97ba                	add	a5,a5,a4
20016a58:	078e                	slli	a5,a5,0x3
20016a5a:	97b6                	add	a5,a5,a3
20016a5c:	fd042703          	lw	a4,-48(s0)
20016a60:	0ee7a823          	sw	a4,240(a5)
20016a64:	a83d                	j	20016aa2 <__metal_driver_riscv_plic0_register+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151
    } else {
        __metal_plic0_set_priority(controller, id, 1);
20016a66:	4605                	li	a2,1
20016a68:	fd842583          	lw	a1,-40(s0)
20016a6c:	fdc42503          	lw	a0,-36(s0)
20016a70:	39b5                	jal	200166ec <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:152
	plic->metal_exint_table[id] = __metal_plic0_default_handler;
20016a72:	fec42703          	lw	a4,-20(s0)
20016a76:	fd842783          	lw	a5,-40(s0)
20016a7a:	078a                	slli	a5,a5,0x2
20016a7c:	97ba                	add	a5,a5,a4
20016a7e:	20017737          	lui	a4,0x20017
20016a82:	80e70713          	addi	a4,a4,-2034 # 2001680e <__metal_plic0_default_handler>
20016a86:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:153
	plic->metal_exdata_table[id].sub_int = priv;
20016a88:	fec42683          	lw	a3,-20(s0)
20016a8c:	fd842703          	lw	a4,-40(s0)
20016a90:	87ba                	mv	a5,a4
20016a92:	0786                	slli	a5,a5,0x1
20016a94:	97ba                	add	a5,a5,a4
20016a96:	078e                	slli	a5,a5,0x3
20016a98:	97b6                	add	a5,a5,a3
20016a9a:	fd042703          	lw	a4,-48(s0)
20016a9e:	0ee7a623          	sw	a4,236(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156
    }

    return 0;
20016aa2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:157
}
20016aa4:	853e                	mv	a0,a5
20016aa6:	50b2                	lw	ra,44(sp)
20016aa8:	5422                	lw	s0,40(sp)
20016aaa:	6145                	addi	sp,sp,48
20016aac:	8082                	ret

20016aae <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:160

int __metal_driver_riscv_plic0_enable (struct metal_interrupt *controller, int id)
{
20016aae:	7179                	addi	sp,sp,-48
20016ab0:	d606                	sw	ra,44(sp)
20016ab2:	d422                	sw	s0,40(sp)
20016ab4:	1800                	addi	s0,sp,48
20016ab6:	fca42e23          	sw	a0,-36(s0)
20016aba:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20016abe:	fdc42783          	lw	a5,-36(s0)
20016ac2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20016ac6:	fdc42503          	lw	a0,-36(s0)
20016aca:	abdff0ef          	jal	ra,20016586 <__metal_driver_sifive_plic0_num_interrupts>
20016ace:	872a                	mv	a4,a0
20016ad0:	fd842783          	lw	a5,-40(s0)
20016ad4:	00e7c463          	blt	a5,a4,20016adc <__metal_driver_riscv_plic0_enable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:164
        return -1;
20016ad8:	57fd                	li	a5,-1
20016ada:	a801                	j	20016aea <__metal_driver_riscv_plic0_enable+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167
    }

    __metal_plic0_enable(plic, id, METAL_ENABLE);
20016adc:	4605                	li	a2,1
20016ade:	fd842583          	lw	a1,-40(s0)
20016ae2:	fec42503          	lw	a0,-20(s0)
20016ae6:	3971                	jal	20016782 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    return 0;
20016ae8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:169
}
20016aea:	853e                	mv	a0,a5
20016aec:	50b2                	lw	ra,44(sp)
20016aee:	5422                	lw	s0,40(sp)
20016af0:	6145                	addi	sp,sp,48
20016af2:	8082                	ret

20016af4 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:172

int __metal_driver_riscv_plic0_disable (struct metal_interrupt *controller, int id)
{
20016af4:	7179                	addi	sp,sp,-48
20016af6:	d606                	sw	ra,44(sp)
20016af8:	d422                	sw	s0,40(sp)
20016afa:	1800                	addi	s0,sp,48
20016afc:	fca42e23          	sw	a0,-36(s0)
20016b00:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:173
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20016b04:	fdc42783          	lw	a5,-36(s0)
20016b08:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20016b0c:	fdc42503          	lw	a0,-36(s0)
20016b10:	a77ff0ef          	jal	ra,20016586 <__metal_driver_sifive_plic0_num_interrupts>
20016b14:	872a                	mv	a4,a0
20016b16:	fd842783          	lw	a5,-40(s0)
20016b1a:	00e7c463          	blt	a5,a4,20016b22 <__metal_driver_riscv_plic0_disable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        return -1;
20016b1e:	57fd                	li	a5,-1
20016b20:	a809                	j	20016b32 <__metal_driver_riscv_plic0_disable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:178
    }
    __metal_plic0_enable(plic, id, METAL_DISABLE);
20016b22:	4601                	li	a2,0
20016b24:	fd842583          	lw	a1,-40(s0)
20016b28:	fec42503          	lw	a0,-20(s0)
20016b2c:	c57ff0ef          	jal	ra,20016782 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    return 0;
20016b30:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
}
20016b32:	853e                	mv	a0,a5
20016b34:	50b2                	lw	ra,44(sp)
20016b36:	5422                	lw	s0,40(sp)
20016b38:	6145                	addi	sp,sp,48
20016b3a:	8082                	ret

20016b3c <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:911



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20016b3c:	1101                	addi	sp,sp,-32
20016b3e:	ce22                	sw	s0,28(sp)
20016b40:	1000                	addi	s0,sp,32
20016b42:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:912
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20016b46:	800017b7          	lui	a5,0x80001
20016b4a:	83c78793          	addi	a5,a5,-1988 # 8000083c <metal_segment_heap_target_end+0xffffe5f0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:913
}
20016b4e:	853e                	mv	a0,a5
20016b50:	4472                	lw	s0,28(sp)
20016b52:	6105                	addi	sp,sp,32
20016b54:	8082                	ret

20016b56 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:916

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20016b56:	1101                	addi	sp,sp,-32
20016b58:	ce22                	sw	s0,28(sp)
20016b5a:	1000                	addi	s0,sp,32
20016b5c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:917
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20016b60:	81c18793          	addi	a5,gp,-2020 # 80001274 <__metal_dt_prci_10008000>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:918
}
20016b64:	853e                	mv	a0,a5
20016b66:	4472                	lw	s0,28(sp)
20016b68:	6105                	addi	sp,sp,32
20016b6a:	8082                	ret

20016b6c <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:926
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20016b6c:	1101                	addi	sp,sp,-32
20016b6e:	ce22                	sw	s0,28(sp)
20016b70:	1000                	addi	s0,sp,32
20016b72:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:927
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20016b76:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:928
}
20016b78:	853e                	mv	a0,a5
20016b7a:	4472                	lw	s0,28(sp)
20016b7c:	6105                	addi	sp,sp,32
20016b7e:	8082                	ret

20016b80 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1043
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20016b80:	1141                	addi	sp,sp,-16
20016b82:	c622                	sw	s0,12(sp)
20016b84:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1044
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20016b86:	83018793          	addi	a5,gp,-2000 # 80001288 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1045
}
20016b8a:	853e                	mv	a0,a5
20016b8c:	4432                	lw	s0,12(sp)
20016b8e:	0141                	addi	sp,sp,16
20016b90:	8082                	ret

20016b92 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM    0x001F0000UL
#define CONFIG_ENABLE  0x40000000UL
#define CONFIG_READY   0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(const struct metal_clock *clock)
{
20016b92:	7139                	addi	sp,sp,-64
20016b94:	de06                	sw	ra,60(sp)
20016b96:	dc22                	sw	s0,56(sp)
20016b98:	0080                	addi	s0,sp,64
20016b9a:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:18
    struct metal_clock *ref = __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20016b9e:	fcc42503          	lw	a0,-52(s0)
20016ba2:	3f69                	jal	20016b3c <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20016ba4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    long config_offset = __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20016ba8:	fcc42503          	lw	a0,-52(s0)
20016bac:	37c1                	jal	20016b6c <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20016bae:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20016bb2:	fcc42503          	lw	a0,-52(s0)
20016bb6:	3745                	jal	20016b56 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20016bb8:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20016bbc:	37d1                	jal	20016b80 <__metal_driver_sifive_fe310_g000_prci_vtable>
20016bbe:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20016bc2:	fe042783          	lw	a5,-32(s0)
20016bc6:	439c                	lw	a5,0(a5)
20016bc8:	fe842583          	lw	a1,-24(s0)
20016bcc:	fe442503          	lw	a0,-28(s0)
20016bd0:	9782                	jalr	a5
20016bd2:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20016bd6:	fdc42703          	lw	a4,-36(s0)
20016bda:	400007b7          	lui	a5,0x40000
20016bde:	8ff9                	and	a5,a5,a4
20016be0:	e399                	bnez	a5,20016be6 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:27
        return -1;
20016be2:	57fd                	li	a5,-1
20016be4:	a025                	j	20016c0c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20016be6:	fdc42783          	lw	a5,-36(s0)
20016bea:	0007c463          	bltz	a5,20016bf2 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20016bee:	57fd                	li	a5,-1
20016bf0:	a831                	j	20016c0c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20016bf2:	fec42503          	lw	a0,-20(s0)
20016bf6:	0b9010ef          	jal	ra,200184ae <metal_clock_get_rate_hz>
20016bfa:	87aa                	mv	a5,a0
20016bfc:	873e                	mv	a4,a5
20016bfe:	fdc42783          	lw	a5,-36(s0)
20016c02:	03f7f793          	andi	a5,a5,63
20016c06:	0785                	addi	a5,a5,1
20016c08:	02f757b3          	divu	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
}
20016c0c:	853e                	mv	a0,a5
20016c0e:	50f2                	lw	ra,60(sp)
20016c10:	5462                	lw	s0,56(sp)
20016c12:	6121                	addi	sp,sp,64
20016c14:	8082                	ret

20016c16 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:34

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(struct metal_clock *clock, long rate)
{
20016c16:	1101                	addi	sp,sp,-32
20016c18:	ce06                	sw	ra,28(sp)
20016c1a:	cc22                	sw	s0,24(sp)
20016c1c:	1000                	addi	s0,sp,32
20016c1e:	fea42623          	sw	a0,-20(s0)
20016c22:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:35
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20016c26:	fec42503          	lw	a0,-20(s0)
20016c2a:	37a5                	jal	20016b92 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20016c2c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36
}
20016c2e:	853e                	mv	a0,a5
20016c30:	40f2                	lw	ra,28(sp)
20016c32:	4462                	lw	s0,24(sp)
20016c34:	6105                	addi	sp,sp,32
20016c36:	8082                	ret

20016c38 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:934
{
20016c38:	1101                	addi	sp,sp,-32
20016c3a:	ce22                	sw	s0,28(sp)
20016c3c:	1000                	addi	s0,sp,32
20016c3e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:935
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20016c42:	800017b7          	lui	a5,0x80001
20016c46:	83078793          	addi	a5,a5,-2000 # 80000830 <metal_segment_heap_target_end+0xffffe5e4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:936
}
20016c4a:	853e                	mv	a0,a5
20016c4c:	4472                	lw	s0,28(sp)
20016c4e:	6105                	addi	sp,sp,32
20016c50:	8082                	ret

20016c52 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:939
{
20016c52:	1101                	addi	sp,sp,-32
20016c54:	ce22                	sw	s0,28(sp)
20016c56:	1000                	addi	s0,sp,32
20016c58:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:940
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20016c5c:	81c18793          	addi	a5,gp,-2020 # 80001274 <__metal_dt_prci_10008000>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:941
}
20016c60:	853e                	mv	a0,a5
20016c62:	4472                	lw	s0,28(sp)
20016c64:	6105                	addi	sp,sp,32
20016c66:	8082                	ret

20016c68 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:944
{
20016c68:	1101                	addi	sp,sp,-32
20016c6a:	ce22                	sw	s0,28(sp)
20016c6c:	1000                	addi	s0,sp,32
20016c6e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:945
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20016c72:	4791                	li	a5,4
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:946
}
20016c74:	853e                	mv	a0,a5
20016c76:	4472                	lw	s0,28(sp)
20016c78:	6105                	addi	sp,sp,32
20016c7a:	8082                	ret

20016c7c <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1043
{
20016c7c:	1141                	addi	sp,sp,-16
20016c7e:	c622                	sw	s0,12(sp)
20016c80:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1044
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20016c82:	83018793          	addi	a5,gp,-2000 # 80001288 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1045
}
20016c86:	853e                	mv	a0,a5
20016c88:	4432                	lw	s0,12(sp)
20016c8a:	0141                	addi	sp,sp,16
20016c8c:	8082                	ret

20016c8e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE  0x40000000UL
#define CONFIG_READY   0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(const struct metal_clock *clock)
{
20016c8e:	7139                	addi	sp,sp,-64
20016c90:	de06                	sw	ra,60(sp)
20016c92:	dc22                	sw	s0,56(sp)
20016c94:	0080                	addi	s0,sp,64
20016c96:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:16
    struct metal_clock *ref = __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20016c9a:	fcc42503          	lw	a0,-52(s0)
20016c9e:	3f69                	jal	20016c38 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20016ca0:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    long config_offset = __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20016ca4:	fcc42503          	lw	a0,-52(s0)
20016ca8:	37c1                	jal	20016c68 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20016caa:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20016cae:	fcc42503          	lw	a0,-52(s0)
20016cb2:	3745                	jal	20016c52 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20016cb4:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20016cb8:	37d1                	jal	20016c7c <__metal_driver_sifive_fe310_g000_prci_vtable>
20016cba:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:22
    long cfg = vtable->get_reg(config_base, config_offset);
20016cbe:	fe042783          	lw	a5,-32(s0)
20016cc2:	439c                	lw	a5,0(a5)
20016cc4:	fe842583          	lw	a1,-24(s0)
20016cc8:	fe442503          	lw	a0,-28(s0)
20016ccc:	9782                	jalr	a5
20016cce:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24

    if ((cfg & CONFIG_ENABLE) == 0)
20016cd2:	fdc42703          	lw	a4,-36(s0)
20016cd6:	400007b7          	lui	a5,0x40000
20016cda:	8ff9                	and	a5,a5,a4
20016cdc:	e399                	bnez	a5,20016ce2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:25
        return -1;
20016cde:	57fd                	li	a5,-1
20016ce0:	a821                	j	20016cf8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26
    if ((cfg & CONFIG_READY) == 0)
20016ce2:	fdc42783          	lw	a5,-36(s0)
20016ce6:	0007c463          	bltz	a5,20016cee <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20016cea:	57fd                	li	a5,-1
20016cec:	a031                	j	20016cf8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    return metal_clock_get_rate_hz(ref);
20016cee:	fec42503          	lw	a0,-20(s0)
20016cf2:	7bc010ef          	jal	ra,200184ae <metal_clock_get_rate_hz>
20016cf6:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
}
20016cf8:	853e                	mv	a0,a5
20016cfa:	50f2                	lw	ra,60(sp)
20016cfc:	5462                	lw	s0,56(sp)
20016cfe:	6121                	addi	sp,sp,64
20016d00:	8082                	ret

20016d02 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:32

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(struct metal_clock *clock, long rate)
{
20016d02:	1101                	addi	sp,sp,-32
20016d04:	ce06                	sw	ra,28(sp)
20016d06:	cc22                	sw	s0,24(sp)
20016d08:	1000                	addi	s0,sp,32
20016d0a:	fea42623          	sw	a0,-20(s0)
20016d0e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:33
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20016d12:	fec42503          	lw	a0,-20(s0)
20016d16:	3fa5                	jal	20016c8e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20016d18:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34
}
20016d1a:	853e                	mv	a0,a5
20016d1c:	40f2                	lw	ra,28(sp)
20016d1e:	4462                	lw	s0,24(sp)
20016d20:	6105                	addi	sp,sp,32
20016d22:	8082                	ret

20016d24 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:995
{
20016d24:	1101                	addi	sp,sp,-32
20016d26:	ce22                	sw	s0,28(sp)
20016d28:	1000                	addi	s0,sp,32
20016d2a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:996
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20016d2e:	800017b7          	lui	a5,0x80001
20016d32:	23078793          	addi	a5,a5,560 # 80001230 <metal_segment_heap_target_end+0xffffefe4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:997
}
20016d36:	853e                	mv	a0,a5
20016d38:	4472                	lw	s0,28(sp)
20016d3a:	6105                	addi	sp,sp,32
20016d3c:	8082                	ret

20016d3e <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1000
{
20016d3e:	1101                	addi	sp,sp,-32
20016d40:	ce22                	sw	s0,28(sp)
20016d42:	1000                	addi	s0,sp,32
20016d44:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1001
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20016d48:	800017b7          	lui	a5,0x80001
20016d4c:	23c78793          	addi	a5,a5,572 # 8000123c <metal_segment_heap_target_end+0xffffeff0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1002
}
20016d50:	853e                	mv	a0,a5
20016d52:	4472                	lw	s0,28(sp)
20016d54:	6105                	addi	sp,sp,32
20016d56:	8082                	ret

20016d58 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1005
{
20016d58:	1101                	addi	sp,sp,-32
20016d5a:	ce22                	sw	s0,28(sp)
20016d5c:	1000                	addi	s0,sp,32
20016d5e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1006
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20016d62:	81c18793          	addi	a5,gp,-2020 # 80001274 <__metal_dt_prci_10008000>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1007
}
20016d66:	853e                	mv	a0,a5
20016d68:	4472                	lw	s0,28(sp)
20016d6a:	6105                	addi	sp,sp,32
20016d6c:	8082                	ret

20016d6e <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1010
{
20016d6e:	1101                	addi	sp,sp,-32
20016d70:	ce22                	sw	s0,28(sp)
20016d72:	1000                	addi	s0,sp,32
20016d74:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1011
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20016d78:	47b1                	li	a5,12
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1012
}
20016d7a:	853e                	mv	a0,a5
20016d7c:	4472                	lw	s0,28(sp)
20016d7e:	6105                	addi	sp,sp,32
20016d80:	8082                	ret

20016d82 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1015
{
20016d82:	1141                	addi	sp,sp,-16
20016d84:	c622                	sw	s0,12(sp)
20016d86:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1016
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20016d88:	81c18793          	addi	a5,gp,-2020 # 80001274 <__metal_dt_prci_10008000>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1017
}
20016d8c:	853e                	mv	a0,a5
20016d8e:	4432                	lw	s0,12(sp)
20016d90:	0141                	addi	sp,sp,16
20016d92:	8082                	ret

20016d94 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1020
{
20016d94:	1141                	addi	sp,sp,-16
20016d96:	c622                	sw	s0,12(sp)
20016d98:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1021
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20016d9a:	47a1                	li	a5,8
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1022
}
20016d9c:	853e                	mv	a0,a5
20016d9e:	4432                	lw	s0,12(sp)
20016da0:	0141                	addi	sp,sp,16
20016da2:	8082                	ret

20016da4 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1025
{
20016da4:	1141                	addi	sp,sp,-16
20016da6:	c622                	sw	s0,12(sp)
20016da8:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1026
		return 16000000;
20016daa:	00f427b7          	lui	a5,0xf42
20016dae:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1027
}
20016db2:	853e                	mv	a0,a5
20016db4:	4432                	lw	s0,12(sp)
20016db6:	0141                	addi	sp,sp,16
20016db8:	8082                	ret

20016dba <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1033
{
20016dba:	1141                	addi	sp,sp,-16
20016dbc:	c622                	sw	s0,12(sp)
20016dbe:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1034
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20016dc0:	100087b7          	lui	a5,0x10008
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1035
}
20016dc4:	853e                	mv	a0,a5
20016dc6:	4432                	lw	s0,12(sp)
20016dc8:	0141                	addi	sp,sp,16
20016dca:	8082                	ret

20016dcc <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1043
{
20016dcc:	1141                	addi	sp,sp,-16
20016dce:	c622                	sw	s0,12(sp)
20016dd0:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1044
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20016dd2:	83018793          	addi	a5,gp,-2000 # 80001288 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1045
}
20016dd6:	853e                	mv	a0,a5
20016dd8:	4432                	lw	s0,12(sp)
20016dda:	0141                	addi	sp,sp,16
20016ddc:	8082                	ret

20016dde <get_pll_config_freq>:
get_pll_config_freq():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:137
 *  - config the PLL configuration
 * Returns:
 *  - PLL_CONFIG_NOT_VALID if the configuration is not valid for the input frequency
 *  - the output frequency, in hertz */
static long get_pll_config_freq(unsigned long pll_input_rate, const struct pll_config_t *config)
{
20016dde:	1101                	addi	sp,sp,-32
20016de0:	ce22                	sw	s0,28(sp)
20016de2:	1000                	addi	s0,sp,32
20016de4:	fea42623          	sw	a0,-20(s0)
20016de8:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:138
    if(pll_input_rate < config->min_input_rate || pll_input_rate > config->max_input_rate)
20016dec:	fe842783          	lw	a5,-24(s0)
20016df0:	479c                	lw	a5,8(a5)
20016df2:	fec42703          	lw	a4,-20(s0)
20016df6:	00f76963          	bltu	a4,a5,20016e08 <get_pll_config_freq+0x2a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:138 (discriminator 1)
20016dfa:	fe842783          	lw	a5,-24(s0)
20016dfe:	47dc                	lw	a5,12(a5)
20016e00:	fec42703          	lw	a4,-20(s0)
20016e04:	00e7f463          	bgeu	a5,a4,20016e0c <get_pll_config_freq+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:139
        return PLL_CONFIG_NOT_VALID;
20016e08:	57fd                	li	a5,-1
20016e0a:	a829                	j	20016e24 <get_pll_config_freq+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141

    return pll_input_rate * config->multiplier / config->divisor;
20016e0c:	fe842783          	lw	a5,-24(s0)
20016e10:	4398                	lw	a4,0(a5)
20016e12:	fec42783          	lw	a5,-20(s0)
20016e16:	02f70733          	mul	a4,a4,a5
20016e1a:	fe842783          	lw	a5,-24(s0)
20016e1e:	43dc                	lw	a5,4(a5)
20016e20:	02f757b3          	divu	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
}
20016e24:	853e                	mv	a0,a5
20016e26:	4472                	lw	s0,28(sp)
20016e28:	6105                	addi	sp,sp,32
20016e2a:	8082                	ret

20016e2c <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

static void metal_sifive_fe310_g000_pll_init(void) __attribute__((constructor));
static void metal_sifive_fe310_g000_pll_init(void) {
20016e2c:	1101                	addi	sp,sp,-32
20016e2e:	ce06                	sw	ra,28(sp)
20016e30:	cc22                	sw	s0,24(sp)
20016e32:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:148
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20016e34:	3f85                	jal	20016da4 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20016e36:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:150
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if(init_rate != 0)
20016e3a:	fec42783          	lw	a5,-20(s0)
20016e3e:	c791                	beqz	a5,20016e4a <metal_sifive_fe310_g000_pll_init+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
        __metal_driver_sifive_fe310_g000_pll_init(__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
20016e40:	800017b7          	lui	a5,0x80001
20016e44:	24878513          	addi	a0,a5,584 # 80001248 <metal_segment_heap_target_end+0xffffeffc>
20016e48:	2031                	jal	20016e54 <__metal_driver_sifive_fe310_g000_pll_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
}
20016e4a:	0001                	nop
20016e4c:	40f2                	lw	ra,28(sp)
20016e4e:	4462                	lw	s0,24(sp)
20016e50:	6105                	addi	sp,sp,32
20016e52:	8082                	ret

20016e54 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:156

#endif /* __METAL_DT_SIFIVE_FE310_G000__PLL_HANDLE */

void __metal_driver_sifive_fe310_g000_pll_init(struct __metal_driver_sifive_fe310_g000_pll *pll) {
20016e54:	7139                	addi	sp,sp,-64
20016e56:	de06                	sw	ra,60(sp)
20016e58:	dc22                	sw	s0,56(sp)
20016e5a:	0080                	addi	s0,sp,64
20016e5c:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20016e60:	fcc42783          	lw	a5,-52(s0)
20016e64:	853e                	mv	a0,a5
20016e66:	3de1                	jal	20016d3e <__metal_driver_sifive_fe310_g000_pll_pllref>
20016e68:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:158
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20016e6c:	3f25                	jal	20016da4 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20016e6e:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:159
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20016e72:	370d                	jal	20016d94 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20016e74:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:160
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20016e78:	3789                	jal	20016dba <__metal_driver_sifive_fe310_g000_prci_base>
20016e7a:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162

    __metal_io_u32 *pllcfg = (__metal_io_u32 *) (base + config_offset);
20016e7e:	fe042703          	lw	a4,-32(s0)
20016e82:	fe442783          	lw	a5,-28(s0)
20016e86:	97ba                	add	a5,a5,a4
20016e88:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165

    /* If the PLL clock has had a _pre_rate_change_callback configured, call it */
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20016e8c:	fcc42783          	lw	a5,-52(s0)
20016e90:	43dc                	lw	a5,4(a5)
20016e92:	853e                	mv	a0,a5
20016e94:	586010ef          	jal	ra,2001841a <_metal_clock_call_all_callbacks>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:168

    /* If we're running off of the PLL, switch off before we start configuring it*/
    if((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) == 0)
20016e98:	fdc42783          	lw	a5,-36(s0)
20016e9c:	4398                	lw	a4,0(a5)
20016e9e:	67c1                	lui	a5,0x10
20016ea0:	8ff9                	and	a5,a5,a4
20016ea2:	eb91                	bnez	a5,20016eb6 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20016ea4:	fdc42783          	lw	a5,-36(s0)
20016ea8:	4398                	lw	a4,0(a5)
20016eaa:	77c1                	lui	a5,0xffff0
20016eac:	17fd                	addi	a5,a5,-1
20016eae:	8f7d                	and	a4,a4,a5
20016eb0:	fdc42783          	lw	a5,-36(s0)
20016eb4:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:172

    /* Make sure we're running off of the external oscillator for stability */
    if(pllref != NULL)
20016eb6:	fec42783          	lw	a5,-20(s0)
20016eba:	cb91                	beqz	a5,20016ece <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20016ebc:	fdc42783          	lw	a5,-36(s0)
20016ec0:	4398                	lw	a4,0(a5)
20016ec2:	000207b7          	lui	a5,0x20
20016ec6:	8f5d                	or	a4,a4,a5
20016ec8:	fdc42783          	lw	a5,-36(s0)
20016ecc:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178

    /* Configure the PLL to run at the requested init frequency.
     * Using the vtable instead of the user API because we want to control
     * when the callbacks occur. */
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20016ece:	fcc42783          	lw	a5,-52(s0)
20016ed2:	439c                	lw	a5,0(a5)
20016ed4:	43d8                	lw	a4,4(a5)
20016ed6:	fcc42783          	lw	a5,-52(s0)
20016eda:	fe842583          	lw	a1,-24(s0)
20016ede:	853e                	mv	a0,a5
20016ee0:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181

    /* If the PLL clock has had a rate_change_callback configured, call it */
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20016ee2:	fcc42783          	lw	a5,-52(s0)
20016ee6:	479c                	lw	a5,8(a5)
20016ee8:	853e                	mv	a0,a5
20016eea:	530010ef          	jal	ra,2001841a <_metal_clock_call_all_callbacks>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
}
20016eee:	0001                	nop
20016ef0:	50f2                	lw	ra,60(sp)
20016ef2:	5462                	lw	s0,56(sp)
20016ef4:	6121                	addi	sp,sp,64
20016ef6:	8082                	ret

20016ef8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:185

long __metal_driver_sifive_fe310_g000_pll_get_rate_hz(const struct metal_clock *clock)
{
20016ef8:	711d                	addi	sp,sp,-96
20016efa:	ce86                	sw	ra,92(sp)
20016efc:	cca2                	sw	s0,88(sp)
20016efe:	1080                	addi	s0,sp,96
20016f00:	faa42623          	sw	a0,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:186
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20016f04:	fac42503          	lw	a0,-84(s0)
20016f08:	3d1d                	jal	20016d3e <__metal_driver_sifive_fe310_g000_pll_pllref>
20016f0a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    struct metal_clock *pllsel0 = __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20016f0e:	fac42503          	lw	a0,-84(s0)
20016f12:	3d09                	jal	20016d24 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20016f14:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:188
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20016f18:	fac42503          	lw	a0,-84(s0)
20016f1c:	3da5                	jal	20016d94 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20016f1e:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20016f22:	fac42503          	lw	a0,-84(s0)
20016f26:	3db1                	jal	20016d82 <__metal_driver_sifive_fe310_g000_pll_config_base>
20016f28:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
    long divider_offset = __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20016f2c:	fac42503          	lw	a0,-84(s0)
20016f30:	3d3d                	jal	20016d6e <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20016f32:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:193
    struct __metal_driver_sifive_fe310_g000_prci *divider_base =
      __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20016f36:	fac42503          	lw	a0,-84(s0)
20016f3a:	3d39                	jal	20016d58 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20016f3c:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:195
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20016f40:	3571                	jal	20016dcc <__metal_driver_sifive_fe310_g000_prci_vtable>
20016f42:	fca42a23          	sw	a0,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:197

    long cfg = vtable->get_reg(config_base, config_offset);
20016f46:	fd442783          	lw	a5,-44(s0)
20016f4a:	439c                	lw	a5,0(a5)
20016f4c:	fe442583          	lw	a1,-28(s0)
20016f50:	fe042503          	lw	a0,-32(s0)
20016f54:	9782                	jalr	a5
20016f56:	fca42823          	sw	a0,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
    long div = vtable->get_reg(divider_base, divider_offset);
20016f5a:	fd442783          	lw	a5,-44(s0)
20016f5e:	439c                	lw	a5,0(a5)
20016f60:	fdc42583          	lw	a1,-36(s0)
20016f64:	fd842503          	lw	a0,-40(s0)
20016f68:	9782                	jalr	a5
20016f6a:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202

    /* At the end of the PLL there's one big mux: it either selects the HFROSC
     * (bypassing the PLL entirely) or uses the PLL. */
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20016f6e:	fd042703          	lw	a4,-48(s0)
20016f72:	67c1                	lui	a5,0x10
20016f74:	8f7d                	and	a4,a4,a5
20016f76:	67c1                	lui	a5,0x10
20016f78:	00f77863          	bgeu	a4,a5,20016f88 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:203
        return metal_clock_get_rate_hz(pllsel0);
20016f7c:	fe842503          	lw	a0,-24(s0)
20016f80:	52e010ef          	jal	ra,200184ae <metal_clock_get_rate_hz>
20016f84:	87aa                	mv	a5,a0
20016f86:	a8e1                	j	2001705e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207

    /* There's a clock mux before the PLL that selects between the HFROSC adn
     * the HFXOSC as the PLL's input clock. */
    long ref_hz = metal_clock_get_rate_hz(__METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20016f88:	fd042703          	lw	a4,-48(s0)
20016f8c:	000207b7          	lui	a5,0x20
20016f90:	8f7d                	and	a4,a4,a5
20016f92:	000207b7          	lui	a5,0x20
20016f96:	00f76563          	bltu	a4,a5,20016fa0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207 (discriminator 1)
20016f9a:	fec42783          	lw	a5,-20(s0)
20016f9e:	a019                	j	20016fa4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207 (discriminator 2)
20016fa0:	fe842783          	lw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207 (discriminator 4)
20016fa4:	853e                	mv	a0,a5
20016fa6:	508010ef          	jal	ra,200184ae <metal_clock_get_rate_hz>
20016faa:	fca42423          	sw	a0,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211 (discriminator 4)

    /* It's possible to bypass the PLL, which is an internal bpyass.  This
     * still obays the PLL's input clock mu. */
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20016fae:	fd042703          	lw	a4,-48(s0)
20016fb2:	000407b7          	lui	a5,0x40
20016fb6:	8f7d                	and	a4,a4,a5
20016fb8:	000407b7          	lui	a5,0x40
20016fbc:	00f76563          	bltu	a4,a5,20016fc6 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:212
        return ref_hz;
20016fc0:	fc842783          	lw	a5,-56(s0)
20016fc4:	a869                	j	2001705e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215

    /* Logically the PLL is a three stage div-mul-div. */
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20016fc6:	fd042783          	lw	a5,-48(s0)
20016fca:	8b9d                	andi	a5,a5,7
20016fcc:	0785                	addi	a5,a5,1
20016fce:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20016fd2:	fd042783          	lw	a5,-48(s0)
20016fd6:	3f07f793          	andi	a5,a5,1008
20016fda:	8391                	srli	a5,a5,0x4
20016fdc:	0785                	addi	a5,a5,1
20016fde:	0786                	slli	a5,a5,0x1
20016fe0:	fcf42023          	sw	a5,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:217
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20016fe4:	fd042703          	lw	a4,-48(s0)
20016fe8:	6785                	lui	a5,0x1
20016fea:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20016fee:	8f7d                	and	a4,a4,a5
20016ff0:	3ff00793          	li	a5,1023
20016ff4:	00e7e463          	bltu	a5,a4,20016ffc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:218
        return -1;
20016ff8:	57fd                	li	a5,-1
20016ffa:	a095                	j	2001705e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:219
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20016ffc:	fd042703          	lw	a4,-48(s0)
20017000:	6785                	lui	a5,0x1
20017002:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20017006:	8ff9                	and	a5,a5,a4
20017008:	83a9                	srli	a5,a5,0xa
2001700a:	4705                	li	a4,1
2001700c:	00f717b3          	sll	a5,a4,a5
20017010:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:224

    /* In addition to the dividers inherent in the PLL, there's an additional
     * clock divider that lives after the PLL and lets us pick a more
     * interesting range of frequencies. */
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20017014:	fc842703          	lw	a4,-56(s0)
20017018:	fc442783          	lw	a5,-60(s0)
2001701c:	02f74733          	div	a4,a4,a5
20017020:	fc042783          	lw	a5,-64(s0)
20017024:	02f70733          	mul	a4,a4,a5
20017028:	fbc42783          	lw	a5,-68(s0)
2001702c:	02f747b3          	div	a5,a4,a5
20017030:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225
    if (__METAL_GET_FIELD(div, DIV_1))
20017034:	fcc42783          	lw	a5,-52(s0)
20017038:	1007f713          	andi	a4,a5,256
2001703c:	0ff00793          	li	a5,255
20017040:	00e7f563          	bgeu	a5,a4,2001704a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return pllout;
20017044:	fb842783          	lw	a5,-72(s0)
20017048:	a819                	j	2001705e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:228

    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
2001704a:	fb842703          	lw	a4,-72(s0)
2001704e:	fcc42783          	lw	a5,-52(s0)
20017052:	03f7f793          	andi	a5,a5,63
20017056:	0785                	addi	a5,a5,1
20017058:	0786                	slli	a5,a5,0x1
2001705a:	02f757b3          	divu	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
}
2001705e:	853e                	mv	a0,a5
20017060:	40f6                	lw	ra,92(sp)
20017062:	4466                	lw	s0,88(sp)
20017064:	6125                	addi	sp,sp,96
20017066:	8082                	ret

20017068 <find_closest_config>:
find_closest_config():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
 *  - rate desired PLL output frequency
 * Returns:
 *  -1 if no valid configuration is available
 *  the index into pll_configs of a valid configuration */
static int find_closest_config(long ref_hz, long rate)
{
20017068:	7139                	addi	sp,sp,-64
2001706a:	de06                	sw	ra,60(sp)
2001706c:	dc22                	sw	s0,56(sp)
2001706e:	0080                	addi	s0,sp,64
20017070:	fca42623          	sw	a0,-52(s0)
20017074:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:241
    int closest_index = -1;
20017078:	57fd                	li	a5,-1
2001707a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    long closest_diff = LONG_MAX;
2001707e:	800007b7          	lui	a5,0x80000
20017082:	fff7c793          	not	a5,a5
20017086:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:246

    /* We're probably trying for a fast output frequency, so start from
     * the high end of the configs. */
    for(int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0; i--)
2001708a:	04300793          	li	a5,67
2001708e:	fef42223          	sw	a5,-28(s0)
20017092:	a0b5                	j	200170fe <find_closest_config+0x96>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:248
    {
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20017094:	fcc42683          	lw	a3,-52(s0)
20017098:	fe442783          	lw	a5,-28(s0)
2001709c:	00579713          	slli	a4,a5,0x5
200170a0:	200197b7          	lui	a5,0x20019
200170a4:	e6c78793          	addi	a5,a5,-404 # 20018e6c <pll_configs>
200170a8:	97ba                	add	a5,a5,a4
200170aa:	85be                	mv	a1,a5
200170ac:	8536                	mv	a0,a3
200170ae:	d31ff0ef          	jal	ra,20016dde <get_pll_config_freq>
200170b2:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:249
        if(config_freq != PLL_CONFIG_NOT_VALID)
200170b6:	fe042703          	lw	a4,-32(s0)
200170ba:	57fd                	li	a5,-1
200170bc:	02f70c63          	beq	a4,a5,200170f4 <find_closest_config+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:251
        {
            long freq_diff = abs(config_freq - rate);
200170c0:	fe042703          	lw	a4,-32(s0)
200170c4:	fc842783          	lw	a5,-56(s0)
200170c8:	8f1d                	sub	a4,a4,a5
200170ca:	41f75793          	srai	a5,a4,0x1f
200170ce:	8f3d                	xor	a4,a4,a5
200170d0:	40f707b3          	sub	a5,a4,a5
200170d4:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:252
            if(freq_diff < closest_diff)
200170d8:	fdc42703          	lw	a4,-36(s0)
200170dc:	fe842783          	lw	a5,-24(s0)
200170e0:	00f75a63          	bge	a4,a5,200170f4 <find_closest_config+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
            {
                closest_index = i;
200170e4:	fe442783          	lw	a5,-28(s0)
200170e8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
                closest_diff = freq_diff;
200170ec:	fdc42783          	lw	a5,-36(s0)
200170f0:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:246 (discriminator 2)
    for(int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0; i--)
200170f4:	fe442783          	lw	a5,-28(s0)
200170f8:	17fd                	addi	a5,a5,-1
200170fa:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:246 (discriminator 1)
200170fe:	fe442783          	lw	a5,-28(s0)
20017102:	f807d9e3          	bgez	a5,20017094 <find_closest_config+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
            }
        }
    }

    return closest_index;
20017106:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
}
2001710a:	853e                	mv	a0,a5
2001710c:	50f2                	lw	ra,60(sp)
2001710e:	5462                	lw	s0,56(sp)
20017110:	6121                	addi	sp,sp,64
20017112:	8082                	ret

20017114 <configure_pll>:
configure_pll():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265

/* Configure the PLL and wait for it to lock */
static void configure_pll(__metal_io_u32 *pllcfg, __metal_io_u32 *plloutdiv, const struct pll_config_t *config)
{
20017114:	1101                	addi	sp,sp,-32
20017116:	ce22                	sw	s0,28(sp)
20017118:	1000                	addi	s0,sp,32
2001711a:	fea42623          	sw	a0,-20(s0)
2001711e:	feb42423          	sw	a1,-24(s0)
20017122:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20017126:	fec42783          	lw	a5,-20(s0)
2001712a:	439c                	lw	a5,0(a5)
2001712c:	ff87f713          	andi	a4,a5,-8
20017130:	fec42783          	lw	a5,-20(s0)
20017134:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20017136:	fec42783          	lw	a5,-20(s0)
2001713a:	4398                	lw	a4,0(a5)
2001713c:	fe442783          	lw	a5,-28(s0)
20017140:	4b9c                	lw	a5,16(a5)
20017142:	8b9d                	andi	a5,a5,7
20017144:	8f5d                	or	a4,a4,a5
20017146:	fec42783          	lw	a5,-20(s0)
2001714a:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:269

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
2001714c:	fec42783          	lw	a5,-20(s0)
20017150:	439c                	lw	a5,0(a5)
20017152:	c0f7f713          	andi	a4,a5,-1009
20017156:	fec42783          	lw	a5,-20(s0)
2001715a:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:270
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
2001715c:	fec42783          	lw	a5,-20(s0)
20017160:	4398                	lw	a4,0(a5)
20017162:	fe442783          	lw	a5,-28(s0)
20017166:	4bdc                	lw	a5,20(a5)
20017168:	0792                	slli	a5,a5,0x4
2001716a:	3f07f793          	andi	a5,a5,1008
2001716e:	8f5d                	or	a4,a4,a5
20017170:	fec42783          	lw	a5,-20(s0)
20017174:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20017176:	fec42783          	lw	a5,-20(s0)
2001717a:	4398                	lw	a4,0(a5)
2001717c:	77fd                	lui	a5,0xfffff
2001717e:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffd1b3>
20017182:	8f7d                	and	a4,a4,a5
20017184:	fec42783          	lw	a5,-20(s0)
20017188:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
2001718a:	fec42783          	lw	a5,-20(s0)
2001718e:	4398                	lw	a4,0(a5)
20017190:	fe442783          	lw	a5,-28(s0)
20017194:	4f9c                	lw	a5,24(a5)
20017196:	00a79693          	slli	a3,a5,0xa
2001719a:	6785                	lui	a5,0x1
2001719c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200171a0:	8ff5                	and	a5,a5,a3
200171a2:	8f5d                	or	a4,a4,a5
200171a4:	fec42783          	lw	a5,-20(s0)
200171a8:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:275

    if(config->d < 0)
200171aa:	fe442783          	lw	a5,-28(s0)
200171ae:	4fdc                	lw	a5,28(a5)
200171b0:	0207db63          	bgez	a5,200171e6 <configure_pll+0xd2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:278
    {
        /* disable final divider */
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
200171b4:	fe842783          	lw	a5,-24(s0)
200171b8:	439c                	lw	a5,0(a5)
200171ba:	1007e713          	ori	a4,a5,256
200171be:	fe842783          	lw	a5,-24(s0)
200171c2:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:280

        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200171c4:	fe842783          	lw	a5,-24(s0)
200171c8:	439c                	lw	a5,0(a5)
200171ca:	fc07f713          	andi	a4,a5,-64
200171ce:	fe842783          	lw	a5,-24(s0)
200171d2:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:281
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
200171d4:	fe842783          	lw	a5,-24(s0)
200171d8:	439c                	lw	a5,0(a5)
200171da:	0017e713          	ori	a4,a5,1
200171de:	fe842783          	lw	a5,-24(s0)
200171e2:	c398                	sw	a4,0(a5)
200171e4:	a82d                	j	2001721e <configure_pll+0x10a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:285
    }
    else
    {
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
200171e6:	fe842783          	lw	a5,-24(s0)
200171ea:	439c                	lw	a5,0(a5)
200171ec:	eff7f713          	andi	a4,a5,-257
200171f0:	fe842783          	lw	a5,-24(s0)
200171f4:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:287

        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200171f6:	fe842783          	lw	a5,-24(s0)
200171fa:	439c                	lw	a5,0(a5)
200171fc:	fc07f713          	andi	a4,a5,-64
20017200:	fe842783          	lw	a5,-24(s0)
20017204:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:288
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20017206:	fe842783          	lw	a5,-24(s0)
2001720a:	4398                	lw	a4,0(a5)
2001720c:	fe442783          	lw	a5,-28(s0)
20017210:	4fdc                	lw	a5,28(a5)
20017212:	03f7f793          	andi	a5,a5,63
20017216:	8f5d                	or	a4,a4,a5
20017218:	fe842783          	lw	a5,-24(s0)
2001721c:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    }

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
2001721e:	fec42783          	lw	a5,-20(s0)
20017222:	4398                	lw	a4,0(a5)
20017224:	fffc07b7          	lui	a5,0xfffc0
20017228:	17fd                	addi	a5,a5,-1
2001722a:	8f7d                	and	a4,a4,a5
2001722c:	fec42783          	lw	a5,-20(s0)
20017230:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294

    /* Wait for PLL to lock */
    while((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0) ;
20017232:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294 (discriminator 1)
20017234:	fec42783          	lw	a5,-20(s0)
20017238:	439c                	lw	a5,0(a5)
2001723a:	fe07dde3          	bgez	a5,20017234 <configure_pll+0x120>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
}
2001723e:	0001                	nop
20017240:	4472                	lw	s0,28(sp)
20017242:	6105                	addi	sp,sp,32
20017244:	8082                	ret

20017246 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298

long __metal_driver_sifive_fe310_g000_pll_set_rate_hz(struct metal_clock *clock, long rate)
{
20017246:	715d                	addi	sp,sp,-80
20017248:	c686                	sw	ra,76(sp)
2001724a:	c4a2                	sw	s0,72(sp)
2001724c:	0880                	addi	s0,sp,80
2001724e:	faa42e23          	sw	a0,-68(s0)
20017252:	fab42c23          	sw	a1,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:299
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20017256:	fbc42503          	lw	a0,-68(s0)
2001725a:	ae5ff0ef          	jal	ra,20016d3e <__metal_driver_sifive_fe310_g000_pll_pllref>
2001725e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    struct metal_clock *pllsel0 = __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20017262:	fbc42503          	lw	a0,-68(s0)
20017266:	abfff0ef          	jal	ra,20016d24 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2001726a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:301
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2001726e:	fbc42503          	lw	a0,-68(s0)
20017272:	b23ff0ef          	jal	ra,20016d94 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20017276:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
    long divider_offset = __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
2001727a:	fbc42503          	lw	a0,-68(s0)
2001727e:	af1ff0ef          	jal	ra,20016d6e <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20017282:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:303
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20017286:	b35ff0ef          	jal	ra,20016dba <__metal_driver_sifive_fe310_g000_prci_base>
2001728a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305

    __metal_io_u32 *pllcfg = (__metal_io_u32 *) (base + config_offset);
2001728e:	fdc42703          	lw	a4,-36(s0)
20017292:	fe442783          	lw	a5,-28(s0)
20017296:	97ba                	add	a5,a5,a4
20017298:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:306
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *) (base + divider_offset);
2001729c:	fdc42703          	lw	a4,-36(s0)
200172a0:	fe042783          	lw	a5,-32(s0)
200172a4:	97ba                	add	a5,a5,a4
200172a6:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309

    /* We can't modify the PLL if coreclk is driven by it, so switch it off */
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
200172aa:	fd842783          	lw	a5,-40(s0)
200172ae:	4398                	lw	a4,0(a5)
200172b0:	67c1                	lui	a5,0x10
200172b2:	8ff9                	and	a5,a5,a4
200172b4:	cb91                	beqz	a5,200172c8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
200172b6:	fd842783          	lw	a5,-40(s0)
200172ba:	4398                	lw	a4,0(a5)
200172bc:	77c1                	lui	a5,0xffff0
200172be:	17fd                	addi	a5,a5,-1
200172c0:	8f7d                	and	a4,a4,a5
200172c2:	fd842783          	lw	a5,-40(s0)
200172c6:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314

    /* There's a clock mux before the PLL that selects between the HFROSC and
     * the HFXOSC as the PLL's input clock. */
    long ref_hz = metal_clock_get_rate_hz(__METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
200172c8:	fd842783          	lw	a5,-40(s0)
200172cc:	4398                	lw	a4,0(a5)
200172ce:	000207b7          	lui	a5,0x20
200172d2:	8ff9                	and	a5,a5,a4
200172d4:	c781                	beqz	a5,200172dc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314 (discriminator 1)
200172d6:	fec42783          	lw	a5,-20(s0)
200172da:	a019                	j	200172e0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314 (discriminator 2)
200172dc:	fe842783          	lw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314 (discriminator 4)
200172e0:	853e                	mv	a0,a5
200172e2:	1cc010ef          	jal	ra,200184ae <metal_clock_get_rate_hz>
200172e6:	fca42823          	sw	a0,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:317 (discriminator 4)

    /* if the desired rate is within 75%-125% of the input clock, bypass the PLL */
    if((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate)
200172ea:	fd042703          	lw	a4,-48(s0)
200172ee:	87ba                	mv	a5,a4
200172f0:	0786                	slli	a5,a5,0x1
200172f2:	97ba                	add	a5,a5,a4
200172f4:	41f7d713          	srai	a4,a5,0x1f
200172f8:	8b0d                	andi	a4,a4,3
200172fa:	97ba                	add	a5,a5,a4
200172fc:	8789                	srai	a5,a5,0x2
200172fe:	873e                	mv	a4,a5
20017300:	fb842783          	lw	a5,-72(s0)
20017304:	02e7cb63          	blt	a5,a4,2001733a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:317 (discriminator 1)
20017308:	fd042703          	lw	a4,-48(s0)
2001730c:	87ba                	mv	a5,a4
2001730e:	078a                	slli	a5,a5,0x2
20017310:	97ba                	add	a5,a5,a4
20017312:	41f7d713          	srai	a4,a5,0x1f
20017316:	8b0d                	andi	a4,a4,3
20017318:	97ba                	add	a5,a5,a4
2001731a:	8789                	srai	a5,a5,0x2
2001731c:	873e                	mv	a4,a5
2001731e:	fb842783          	lw	a5,-72(s0)
20017322:	00f74c63          	blt	a4,a5,2001733a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:319
    {
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20017326:	fd842783          	lw	a5,-40(s0)
2001732a:	4398                	lw	a4,0(a5)
2001732c:	000407b7          	lui	a5,0x40
20017330:	8f5d                	or	a4,a4,a5
20017332:	fd842783          	lw	a5,-40(s0)
20017336:	c398                	sw	a4,0(a5)
20017338:	a0b9                	j	20017386 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:323
    }
    else
    {
        int config_index = find_closest_config(ref_hz, rate);
2001733a:	fb842583          	lw	a1,-72(s0)
2001733e:	fd042503          	lw	a0,-48(s0)
20017342:	d27ff0ef          	jal	ra,20017068 <find_closest_config>
20017346:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:324
        if(config_index != -1)
2001734a:	fcc42703          	lw	a4,-52(s0)
2001734e:	57fd                	li	a5,-1
20017350:	02f70263          	beq	a4,a5,20017374 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x12e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:326
        {
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20017354:	fcc42783          	lw	a5,-52(s0)
20017358:	00579713          	slli	a4,a5,0x5
2001735c:	200197b7          	lui	a5,0x20019
20017360:	e6c78793          	addi	a5,a5,-404 # 20018e6c <pll_configs>
20017364:	97ba                	add	a5,a5,a4
20017366:	863e                	mv	a2,a5
20017368:	fd442583          	lw	a1,-44(s0)
2001736c:	fd842503          	lw	a0,-40(s0)
20017370:	3355                	jal	20017114 <configure_pll>
20017372:	a811                	j	20017386 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:331
        }
        else
        {
            /* unable to find a valid configuration */
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20017374:	fd842783          	lw	a5,-40(s0)
20017378:	4398                	lw	a4,0(a5)
2001737a:	000407b7          	lui	a5,0x40
2001737e:	8f5d                	or	a4,a4,a5
20017380:	fd842783          	lw	a5,-40(s0)
20017384:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:336
        }
    }

    /* Enable the PLL */
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20017386:	fd842783          	lw	a5,-40(s0)
2001738a:	4398                	lw	a4,0(a5)
2001738c:	67c1                	lui	a5,0x10
2001738e:	8f5d                	or	a4,a4,a5
20017390:	fd842783          	lw	a5,-40(s0)
20017394:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:338

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20017396:	fbc42503          	lw	a0,-68(s0)
2001739a:	b5fff0ef          	jal	ra,20016ef8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
2001739e:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:339
}
200173a0:	853e                	mv	a0,a5
200173a2:	40b6                	lw	ra,76(sp)
200173a4:	4426                	lw	s0,72(sp)
200173a6:	6161                	addi	sp,sp,80
200173a8:	8082                	ret

200173aa <use_hfxosc>:
use_hfxosc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:344

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
static void use_hfxosc(void) __attribute__((constructor));
static void use_hfxosc(void)
{
200173aa:	1101                	addi	sp,sp,-32
200173ac:	ce06                	sw	ra,28(sp)
200173ae:	cc22                	sw	s0,24(sp)
200173b0:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200173b2:	9f3ff0ef          	jal	ra,20016da4 <__metal_driver_sifive_fe310_g000_pll_init_rate>
200173b6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:346
    metal_clock_set_rate_hz(
200173ba:	fec42583          	lw	a1,-20(s0)
200173be:	800017b7          	lui	a5,0x80001
200173c2:	24878513          	addi	a0,a5,584 # 80001248 <metal_segment_heap_target_end+0xffffeffc>
200173c6:	10e010ef          	jal	ra,200184d4 <metal_clock_set_rate_hz>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        &__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock, init_rate
    );
}
200173ca:	0001                	nop
200173cc:	40f2                	lw	ra,28(sp)
200173ce:	4462                	lw	s0,24(sp)
200173d0:	6105                	addi	sp,sp,32
200173d2:	8082                	ret

200173d4 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1033
{
200173d4:	1141                	addi	sp,sp,-16
200173d6:	c622                	sw	s0,12(sp)
200173d8:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1034
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
200173da:	100087b7          	lui	a5,0x10008
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1035
}
200173de:	853e                	mv	a0,a5
200173e0:	4432                	lw	s0,12(sp)
200173e2:	0141                	addi	sp,sp,16
200173e4:	8082                	ret

200173e6 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:11
#ifdef METAL_SIFIVE_FE310_G000_PRCI

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
200173e6:	7179                	addi	sp,sp,-48
200173e8:	d606                	sw	ra,44(sp)
200173ea:	d422                	sw	s0,40(sp)
200173ec:	1800                	addi	s0,sp,48
200173ee:	fca42e23          	sw	a0,-36(s0)
200173f2:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
200173f6:	3ff9                	jal	200173d4 <__metal_driver_sifive_fe310_g000_prci_base>
200173f8:	87aa                	mv	a5,a0
200173fa:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
200173fe:	fd842703          	lw	a4,-40(s0)
20017402:	fec42783          	lw	a5,-20(s0)
20017406:	97ba                	add	a5,a5,a4
20017408:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
}
2001740a:	853e                	mv	a0,a5
2001740c:	50b2                	lw	ra,44(sp)
2001740e:	5422                	lw	s0,40(sp)
20017410:	6145                	addi	sp,sp,48
20017412:	8082                	ret

20017414 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:16

long __metal_driver_sifive_fe310_g000_prci_set_reg(const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset, long value) {
20017414:	7179                	addi	sp,sp,-48
20017416:	d606                	sw	ra,44(sp)
20017418:	d422                	sw	s0,40(sp)
2001741a:	1800                	addi	s0,sp,48
2001741c:	fca42e23          	sw	a0,-36(s0)
20017420:	fcb42c23          	sw	a1,-40(s0)
20017424:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:17
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20017428:	3775                	jal	200173d4 <__metal_driver_sifive_fe310_g000_prci_base>
2001742a:	87aa                	mv	a5,a0
2001742c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:18
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20017430:	fd842703          	lw	a4,-40(s0)
20017434:	fec42783          	lw	a5,-20(s0)
20017438:	97ba                	add	a5,a5,a4
2001743a:	873e                	mv	a4,a5
2001743c:	fd442783          	lw	a5,-44(s0)
20017440:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19
}
20017442:	853e                	mv	a0,a5
20017444:	50b2                	lw	ra,44(sp)
20017446:	5422                	lw	s0,40(sp)
20017448:	6145                	addi	sp,sp,48
2001744a:	8082                	ret

2001744c <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:380
{
2001744c:	1101                	addi	sp,sp,-32
2001744e:	ce22                	sw	s0,28(sp)
20017450:	1000                	addi	s0,sp,32
20017452:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:381
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20017456:	fec42703          	lw	a4,-20(s0)
2001745a:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
2001745e:	00f71563          	bne	a4,a5,20017468 <__metal_driver_sifive_gpio0_base+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:382
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20017462:	100127b7          	lui	a5,0x10012
20017466:	a011                	j	2001746a <__metal_driver_sifive_gpio0_base+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:385
		return 0;
20017468:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:387
}
2001746a:	853e                	mv	a0,a5
2001746c:	4472                	lw	s0,28(sp)
2001746e:	6105                	addi	sp,sp,32
20017470:	8082                	ret

20017472 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:410
{
20017472:	1101                	addi	sp,sp,-32
20017474:	ce22                	sw	s0,28(sp)
20017476:	1000                	addi	s0,sp,32
20017478:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:411
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
2001747c:	fec42703          	lw	a4,-20(s0)
20017480:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017484:	00f71763          	bne	a4,a5,20017492 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:412
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20017488:	800017b7          	lui	a5,0x80001
2001748c:	c1878793          	addi	a5,a5,-1000 # 80000c18 <metal_segment_heap_target_end+0xffffe9cc>
20017490:	a011                	j	20017494 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:415
		return 0;
20017492:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:417
}
20017494:	853e                	mv	a0,a5
20017496:	4472                	lw	s0,28(sp)
20017498:	6105                	addi	sp,sp,32
2001749a:	8082                	ret

2001749c <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:420
{
2001749c:	1101                	addi	sp,sp,-32
2001749e:	ce22                	sw	s0,28(sp)
200174a0:	1000                	addi	s0,sp,32
200174a2:	fea42623          	sw	a0,-20(s0)
200174a6:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:421
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
200174aa:	fec42703          	lw	a4,-20(s0)
200174ae:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200174b2:	00f71763          	bne	a4,a5,200174c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:421 (discriminator 1)
200174b6:	fe842783          	lw	a5,-24(s0)
200174ba:	e399                	bnez	a5,200174c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:422
		return 8;
200174bc:	47a1                	li	a5,8
200174be:	ae15                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:424
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
200174c0:	fec42703          	lw	a4,-20(s0)
200174c4:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200174c8:	00f71963          	bne	a4,a5,200174da <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:424 (discriminator 1)
200174cc:	fe842703          	lw	a4,-24(s0)
200174d0:	4785                	li	a5,1
200174d2:	00f71463          	bne	a4,a5,200174da <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:425
		return 9;
200174d6:	47a5                	li	a5,9
200174d8:	ae29                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:427
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
200174da:	fec42703          	lw	a4,-20(s0)
200174de:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200174e2:	00f71963          	bne	a4,a5,200174f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:427 (discriminator 1)
200174e6:	fe842703          	lw	a4,-24(s0)
200174ea:	4789                	li	a5,2
200174ec:	00f71463          	bne	a4,a5,200174f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:428
		return 10;
200174f0:	47a9                	li	a5,10
200174f2:	a601                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:430
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
200174f4:	fec42703          	lw	a4,-20(s0)
200174f8:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200174fc:	00f71963          	bne	a4,a5,2001750e <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:430 (discriminator 1)
20017500:	fe842703          	lw	a4,-24(s0)
20017504:	478d                	li	a5,3
20017506:	00f71463          	bne	a4,a5,2001750e <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:431
		return 11;
2001750a:	47ad                	li	a5,11
2001750c:	a4dd                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:433
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
2001750e:	fec42703          	lw	a4,-20(s0)
20017512:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017516:	00f71963          	bne	a4,a5,20017528 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:433 (discriminator 1)
2001751a:	fe842703          	lw	a4,-24(s0)
2001751e:	4791                	li	a5,4
20017520:	00f71463          	bne	a4,a5,20017528 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:434
		return 12;
20017524:	47b1                	li	a5,12
20017526:	a4f1                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:436
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20017528:	fec42703          	lw	a4,-20(s0)
2001752c:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017530:	00f71963          	bne	a4,a5,20017542 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:436 (discriminator 1)
20017534:	fe842703          	lw	a4,-24(s0)
20017538:	4795                	li	a5,5
2001753a:	00f71463          	bne	a4,a5,20017542 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:437
		return 13;
2001753e:	47b5                	li	a5,13
20017540:	ac4d                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:439
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20017542:	fec42703          	lw	a4,-20(s0)
20017546:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
2001754a:	00f71963          	bne	a4,a5,2001755c <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:439 (discriminator 1)
2001754e:	fe842703          	lw	a4,-24(s0)
20017552:	4799                	li	a5,6
20017554:	00f71463          	bne	a4,a5,2001755c <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:440
		return 14;
20017558:	47b9                	li	a5,14
2001755a:	ac61                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:442
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
2001755c:	fec42703          	lw	a4,-20(s0)
20017560:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017564:	00f71963          	bne	a4,a5,20017576 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:442 (discriminator 1)
20017568:	fe842703          	lw	a4,-24(s0)
2001756c:	479d                	li	a5,7
2001756e:	00f71463          	bne	a4,a5,20017576 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:443
		return 15;
20017572:	47bd                	li	a5,15
20017574:	acbd                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:445
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20017576:	fec42703          	lw	a4,-20(s0)
2001757a:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
2001757e:	00f71963          	bne	a4,a5,20017590 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:445 (discriminator 1)
20017582:	fe842703          	lw	a4,-24(s0)
20017586:	47a1                	li	a5,8
20017588:	00f71463          	bne	a4,a5,20017590 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:446
		return 16;
2001758c:	47c1                	li	a5,16
2001758e:	a495                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:448
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20017590:	fec42703          	lw	a4,-20(s0)
20017594:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017598:	00f71963          	bne	a4,a5,200175aa <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:448 (discriminator 1)
2001759c:	fe842703          	lw	a4,-24(s0)
200175a0:	47a5                	li	a5,9
200175a2:	00f71463          	bne	a4,a5,200175aa <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:449
		return 17;
200175a6:	47c5                	li	a5,17
200175a8:	a4a9                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:451
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
200175aa:	fec42703          	lw	a4,-20(s0)
200175ae:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200175b2:	00f71963          	bne	a4,a5,200175c4 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:451 (discriminator 1)
200175b6:	fe842703          	lw	a4,-24(s0)
200175ba:	47a9                	li	a5,10
200175bc:	00f71463          	bne	a4,a5,200175c4 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:452
		return 18;
200175c0:	47c9                	li	a5,18
200175c2:	ac05                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:454
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
200175c4:	fec42703          	lw	a4,-20(s0)
200175c8:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200175cc:	00f71963          	bne	a4,a5,200175de <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:454 (discriminator 1)
200175d0:	fe842703          	lw	a4,-24(s0)
200175d4:	47ad                	li	a5,11
200175d6:	00f71463          	bne	a4,a5,200175de <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:455
		return 19;
200175da:	47cd                	li	a5,19
200175dc:	ac19                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:457
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
200175de:	fec42703          	lw	a4,-20(s0)
200175e2:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200175e6:	00f71963          	bne	a4,a5,200175f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:457 (discriminator 1)
200175ea:	fe842703          	lw	a4,-24(s0)
200175ee:	47b1                	li	a5,12
200175f0:	00f71463          	bne	a4,a5,200175f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:458
		return 20;
200175f4:	47d1                	li	a5,20
200175f6:	aaf5                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:460
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
200175f8:	fec42703          	lw	a4,-20(s0)
200175fc:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017600:	00f71963          	bne	a4,a5,20017612 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:460 (discriminator 1)
20017604:	fe842703          	lw	a4,-24(s0)
20017608:	47b5                	li	a5,13
2001760a:	00f71463          	bne	a4,a5,20017612 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:461
		return 21;
2001760e:	47d5                	li	a5,21
20017610:	a2cd                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:463
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20017612:	fec42703          	lw	a4,-20(s0)
20017616:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
2001761a:	00f71963          	bne	a4,a5,2001762c <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:463 (discriminator 1)
2001761e:	fe842703          	lw	a4,-24(s0)
20017622:	47b9                	li	a5,14
20017624:	00f71463          	bne	a4,a5,2001762c <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:464
		return 22;
20017628:	47d9                	li	a5,22
2001762a:	a2e1                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:466
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
2001762c:	fec42703          	lw	a4,-20(s0)
20017630:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017634:	00f71963          	bne	a4,a5,20017646 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:466 (discriminator 1)
20017638:	fe842703          	lw	a4,-24(s0)
2001763c:	47bd                	li	a5,15
2001763e:	00f71463          	bne	a4,a5,20017646 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:467
		return 23;
20017642:	47dd                	li	a5,23
20017644:	a27d                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:469
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
20017646:	fec42703          	lw	a4,-20(s0)
2001764a:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
2001764e:	00f71963          	bne	a4,a5,20017660 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:469 (discriminator 1)
20017652:	fe842703          	lw	a4,-24(s0)
20017656:	47c1                	li	a5,16
20017658:	00f71463          	bne	a4,a5,20017660 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:470
		return 24;
2001765c:	47e1                	li	a5,24
2001765e:	aa51                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:472
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
20017660:	fec42703          	lw	a4,-20(s0)
20017664:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017668:	00f71963          	bne	a4,a5,2001767a <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:472 (discriminator 1)
2001766c:	fe842703          	lw	a4,-24(s0)
20017670:	47c5                	li	a5,17
20017672:	00f71463          	bne	a4,a5,2001767a <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:473
		return 25;
20017676:	47e5                	li	a5,25
20017678:	aaad                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:475
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
2001767a:	fec42703          	lw	a4,-20(s0)
2001767e:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017682:	00f71963          	bne	a4,a5,20017694 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:475 (discriminator 1)
20017686:	fe842703          	lw	a4,-24(s0)
2001768a:	47c9                	li	a5,18
2001768c:	00f71463          	bne	a4,a5,20017694 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:476
		return 26;
20017690:	47e9                	li	a5,26
20017692:	a285                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:478
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
20017694:	fec42703          	lw	a4,-20(s0)
20017698:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
2001769c:	00f71963          	bne	a4,a5,200176ae <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:478 (discriminator 1)
200176a0:	fe842703          	lw	a4,-24(s0)
200176a4:	47cd                	li	a5,19
200176a6:	00f71463          	bne	a4,a5,200176ae <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:479
		return 27;
200176aa:	47ed                	li	a5,27
200176ac:	a299                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:481
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
200176ae:	fec42703          	lw	a4,-20(s0)
200176b2:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200176b6:	00f71963          	bne	a4,a5,200176c8 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:481 (discriminator 1)
200176ba:	fe842703          	lw	a4,-24(s0)
200176be:	47d1                	li	a5,20
200176c0:	00f71463          	bne	a4,a5,200176c8 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:482
		return 28;
200176c4:	47f1                	li	a5,28
200176c6:	a235                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:484
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
200176c8:	fec42703          	lw	a4,-20(s0)
200176cc:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200176d0:	00f71963          	bne	a4,a5,200176e2 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:484 (discriminator 1)
200176d4:	fe842703          	lw	a4,-24(s0)
200176d8:	47d5                	li	a5,21
200176da:	00f71463          	bne	a4,a5,200176e2 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:485
		return 29;
200176de:	47f5                	li	a5,29
200176e0:	aa09                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:487
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
200176e2:	fec42703          	lw	a4,-20(s0)
200176e6:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200176ea:	00f71963          	bne	a4,a5,200176fc <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:487 (discriminator 1)
200176ee:	fe842703          	lw	a4,-24(s0)
200176f2:	47d9                	li	a5,22
200176f4:	00f71463          	bne	a4,a5,200176fc <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:488
		return 30;
200176f8:	47f9                	li	a5,30
200176fa:	a8e5                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:490
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
200176fc:	fec42703          	lw	a4,-20(s0)
20017700:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017704:	00f71963          	bne	a4,a5,20017716 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:490 (discriminator 1)
20017708:	fe842703          	lw	a4,-24(s0)
2001770c:	47dd                	li	a5,23
2001770e:	00f71463          	bne	a4,a5,20017716 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:491
		return 31;
20017712:	47fd                	li	a5,31
20017714:	a8f9                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:493
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20017716:	fec42703          	lw	a4,-20(s0)
2001771a:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
2001771e:	00f71a63          	bne	a4,a5,20017732 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:493 (discriminator 1)
20017722:	fe842703          	lw	a4,-24(s0)
20017726:	47e1                	li	a5,24
20017728:	00f71563          	bne	a4,a5,20017732 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:494
		return 32;
2001772c:	02000793          	li	a5,32
20017730:	a0c9                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:496
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
20017732:	fec42703          	lw	a4,-20(s0)
20017736:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
2001773a:	00f71a63          	bne	a4,a5,2001774e <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:496 (discriminator 1)
2001773e:	fe842703          	lw	a4,-24(s0)
20017742:	47e5                	li	a5,25
20017744:	00f71563          	bne	a4,a5,2001774e <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:497
		return 33;
20017748:	02100793          	li	a5,33
2001774c:	a05d                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:499
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
2001774e:	fec42703          	lw	a4,-20(s0)
20017752:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017756:	00f71a63          	bne	a4,a5,2001776a <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:499 (discriminator 1)
2001775a:	fe842703          	lw	a4,-24(s0)
2001775e:	47e9                	li	a5,26
20017760:	00f71563          	bne	a4,a5,2001776a <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:500
		return 34;
20017764:	02200793          	li	a5,34
20017768:	a069                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:502
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
2001776a:	fec42703          	lw	a4,-20(s0)
2001776e:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017772:	00f71a63          	bne	a4,a5,20017786 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:502 (discriminator 1)
20017776:	fe842703          	lw	a4,-24(s0)
2001777a:	47ed                	li	a5,27
2001777c:	00f71563          	bne	a4,a5,20017786 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:503
		return 35;
20017780:	02300793          	li	a5,35
20017784:	a0bd                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:505
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
20017786:	fec42703          	lw	a4,-20(s0)
2001778a:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
2001778e:	00f71a63          	bne	a4,a5,200177a2 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:505 (discriminator 1)
20017792:	fe842703          	lw	a4,-24(s0)
20017796:	47f1                	li	a5,28
20017798:	00f71563          	bne	a4,a5,200177a2 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:506
		return 36;
2001779c:	02400793          	li	a5,36
200177a0:	a889                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:508
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
200177a2:	fec42703          	lw	a4,-20(s0)
200177a6:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200177aa:	00f71963          	bne	a4,a5,200177bc <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:508 (discriminator 1)
200177ae:	fe842703          	lw	a4,-24(s0)
200177b2:	47f5                	li	a5,29
200177b4:	00f71463          	bne	a4,a5,200177bc <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:509
		return 27;
200177b8:	47ed                	li	a5,27
200177ba:	a825                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:511
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
200177bc:	fec42703          	lw	a4,-20(s0)
200177c0:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200177c4:	00f71963          	bne	a4,a5,200177d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:511 (discriminator 1)
200177c8:	fe842703          	lw	a4,-24(s0)
200177cc:	47f9                	li	a5,30
200177ce:	00f71463          	bne	a4,a5,200177d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:512
		return 28;
200177d2:	47f1                	li	a5,28
200177d4:	a839                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:514
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
200177d6:	fec42703          	lw	a4,-20(s0)
200177da:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
200177de:	00f71963          	bne	a4,a5,200177f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:514 (discriminator 1)
200177e2:	fe842703          	lw	a4,-24(s0)
200177e6:	47fd                	li	a5,31
200177e8:	00f71463          	bne	a4,a5,200177f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:515
		return 29;
200177ec:	47f5                	li	a5,29
200177ee:	a011                	j	200177f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:518
		return 0;
200177f0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:520
}
200177f2:	853e                	mv	a0,a5
200177f4:	4472                	lw	s0,28(sp)
200177f6:	6105                	addi	sp,sp,32
200177f8:	8082                	ret

200177fa <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio, long source)
{
200177fa:	7179                	addi	sp,sp,-48
200177fc:	d606                	sw	ra,44(sp)
200177fe:	d422                	sw	s0,40(sp)
20017800:	1800                	addi	s0,sp,48
20017802:	fca42e23          	sw	a0,-36(s0)
20017806:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001780a:	fdc42503          	lw	a0,-36(s0)
2001780e:	c3fff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
20017812:	87aa                	mv	a5,a0
20017814:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  |= source;
20017818:	fec42783          	lw	a5,-20(s0)
2001781c:	0791                	addi	a5,a5,4
2001781e:	4398                	lw	a4,0(a5)
20017820:	fd842783          	lw	a5,-40(s0)
20017824:	fec42683          	lw	a3,-20(s0)
20017828:	0691                	addi	a3,a3,4
2001782a:	8fd9                	or	a5,a5,a4
2001782c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:18

    return 0;
2001782e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19
}
20017830:	853e                	mv	a0,a5
20017832:	50b2                	lw	ra,44(sp)
20017834:	5422                	lw	s0,40(sp)
20017836:	6145                	addi	sp,sp,48
20017838:	8082                	ret

2001783a <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:22

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio, long source)
{
2001783a:	7179                	addi	sp,sp,-48
2001783c:	d606                	sw	ra,44(sp)
2001783e:	d422                	sw	s0,40(sp)
20017840:	1800                	addi	s0,sp,48
20017842:	fca42e23          	sw	a0,-36(s0)
20017846:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001784a:	fdc42503          	lw	a0,-36(s0)
2001784e:	bffff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
20017852:	87aa                	mv	a5,a0
20017854:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:25

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  &= ~source;
20017858:	fec42783          	lw	a5,-20(s0)
2001785c:	0791                	addi	a5,a5,4
2001785e:	439c                	lw	a5,0(a5)
20017860:	fd842703          	lw	a4,-40(s0)
20017864:	fff74713          	not	a4,a4
20017868:	86ba                	mv	a3,a4
2001786a:	fec42703          	lw	a4,-20(s0)
2001786e:	0711                	addi	a4,a4,4
20017870:	8ff5                	and	a5,a5,a3
20017872:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    return 0;
20017874:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:28
}
20017876:	853e                	mv	a0,a5
20017878:	50b2                	lw	ra,44(sp)
2001787a:	5422                	lw	s0,40(sp)
2001787c:	6145                	addi	sp,sp,48
2001787e:	8082                	ret

20017880 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:31

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio)
{
20017880:	7179                	addi	sp,sp,-48
20017882:	d606                	sw	ra,44(sp)
20017884:	d422                	sw	s0,40(sp)
20017886:	1800                	addi	s0,sp,48
20017888:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001788c:	fdc42503          	lw	a0,-36(s0)
20017890:	bbdff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
20017894:	87aa                	mv	a5,a0
20017896:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:34

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
2001789a:	fec42783          	lw	a5,-20(s0)
2001789e:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35
}
200178a0:	853e                	mv	a0,a5
200178a2:	50b2                	lw	ra,44(sp)
200178a4:	5422                	lw	s0,40(sp)
200178a6:	6145                	addi	sp,sp,48
200178a8:	8082                	ret

200178aa <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:38

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio)
{
200178aa:	7179                	addi	sp,sp,-48
200178ac:	d606                	sw	ra,44(sp)
200178ae:	d422                	sw	s0,40(sp)
200178b0:	1800                	addi	s0,sp,48
200178b2:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200178b6:	fdc42503          	lw	a0,-36(s0)
200178ba:	b93ff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
200178be:	87aa                	mv	a5,a0
200178c0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:41

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
200178c4:	fec42783          	lw	a5,-20(s0)
200178c8:	07b1                	addi	a5,a5,12
200178ca:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42
}
200178cc:	853e                	mv	a0,a5
200178ce:	50b2                	lw	ra,44(sp)
200178d0:	5422                	lw	s0,40(sp)
200178d2:	6145                	addi	sp,sp,48
200178d4:	8082                	ret

200178d6 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:46


int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio, long source)
{
200178d6:	7179                	addi	sp,sp,-48
200178d8:	d606                	sw	ra,44(sp)
200178da:	d422                	sw	s0,40(sp)
200178dc:	1800                	addi	s0,sp,48
200178de:	fca42e23          	sw	a0,-36(s0)
200178e2:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200178e6:	fdc42503          	lw	a0,-36(s0)
200178ea:	b63ff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
200178ee:	87aa                	mv	a5,a0
200178f0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:49

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  &= ~source;
200178f4:	fec42783          	lw	a5,-20(s0)
200178f8:	07a1                	addi	a5,a5,8
200178fa:	439c                	lw	a5,0(a5)
200178fc:	fd842703          	lw	a4,-40(s0)
20017900:	fff74713          	not	a4,a4
20017904:	86ba                	mv	a3,a4
20017906:	fec42703          	lw	a4,-20(s0)
2001790a:	0721                	addi	a4,a4,8
2001790c:	8ff5                	and	a5,a5,a3
2001790e:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    return 0;
20017910:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:52
}
20017912:	853e                	mv	a0,a5
20017914:	50b2                	lw	ra,44(sp)
20017916:	5422                	lw	s0,40(sp)
20017918:	6145                	addi	sp,sp,48
2001791a:	8082                	ret

2001791c <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:55

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio, long source)
{
2001791c:	7179                	addi	sp,sp,-48
2001791e:	d606                	sw	ra,44(sp)
20017920:	d422                	sw	s0,40(sp)
20017922:	1800                	addi	s0,sp,48
20017924:	fca42e23          	sw	a0,-36(s0)
20017928:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:56
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001792c:	fdc42503          	lw	a0,-36(s0)
20017930:	b1dff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
20017934:	87aa                	mv	a5,a0
20017936:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  |= source;
2001793a:	fec42783          	lw	a5,-20(s0)
2001793e:	07a1                	addi	a5,a5,8
20017940:	4398                	lw	a4,0(a5)
20017942:	fd842783          	lw	a5,-40(s0)
20017946:	fec42683          	lw	a3,-20(s0)
2001794a:	06a1                	addi	a3,a3,8
2001794c:	8fd9                	or	a5,a5,a4
2001794e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:60

    return 0;
20017950:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61
}
20017952:	853e                	mv	a0,a5
20017954:	50b2                	lw	ra,44(sp)
20017956:	5422                	lw	s0,40(sp)
20017958:	6145                	addi	sp,sp,48
2001795a:	8082                	ret

2001795c <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio, long value)
{
2001795c:	7179                	addi	sp,sp,-48
2001795e:	d606                	sw	ra,44(sp)
20017960:	d422                	sw	s0,40(sp)
20017962:	1800                	addi	s0,sp,48
20017964:	fca42e23          	sw	a0,-36(s0)
20017968:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:65
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001796c:	fdc42503          	lw	a0,-36(s0)
20017970:	addff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
20017974:	87aa                	mv	a5,a0
20017976:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |= value;
2001797a:	fec42783          	lw	a5,-20(s0)
2001797e:	07b1                	addi	a5,a5,12
20017980:	4398                	lw	a4,0(a5)
20017982:	fd842783          	lw	a5,-40(s0)
20017986:	fec42683          	lw	a3,-20(s0)
2001798a:	06b1                	addi	a3,a3,12
2001798c:	8fd9                	or	a5,a5,a4
2001798e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:69

    return 0;
20017990:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70
}
20017992:	853e                	mv	a0,a5
20017994:	50b2                	lw	ra,44(sp)
20017996:	5422                	lw	s0,40(sp)
20017998:	6145                	addi	sp,sp,48
2001799a:	8082                	ret

2001799c <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio, long value)
{
2001799c:	7179                	addi	sp,sp,-48
2001799e:	d606                	sw	ra,44(sp)
200179a0:	d422                	sw	s0,40(sp)
200179a2:	1800                	addi	s0,sp,48
200179a4:	fca42e23          	sw	a0,-36(s0)
200179a8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200179ac:	fdc42503          	lw	a0,-36(s0)
200179b0:	a9dff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
200179b4:	87aa                	mv	a5,a0
200179b6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:76

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &= ~value;
200179ba:	fec42783          	lw	a5,-20(s0)
200179be:	07b1                	addi	a5,a5,12
200179c0:	439c                	lw	a5,0(a5)
200179c2:	fd842703          	lw	a4,-40(s0)
200179c6:	fff74713          	not	a4,a4
200179ca:	86ba                	mv	a3,a4
200179cc:	fec42703          	lw	a4,-20(s0)
200179d0:	0731                	addi	a4,a4,12
200179d2:	8ff5                	and	a5,a5,a3
200179d4:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78

    return 0;
200179d6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:79
}
200179d8:	853e                	mv	a0,a5
200179da:	50b2                	lw	ra,44(sp)
200179dc:	5422                	lw	s0,40(sp)
200179de:	6145                	addi	sp,sp,48
200179e0:	8082                	ret

200179e2 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:82

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio, long value)
{
200179e2:	7179                	addi	sp,sp,-48
200179e4:	d606                	sw	ra,44(sp)
200179e6:	d422                	sw	s0,40(sp)
200179e8:	1800                	addi	s0,sp,48
200179ea:	fca42e23          	sw	a0,-36(s0)
200179ee:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200179f2:	fdc42503          	lw	a0,-36(s0)
200179f6:	a57ff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
200179fa:	87aa                	mv	a5,a0
200179fc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
20017a00:	fec42783          	lw	a5,-20(s0)
20017a04:	07b1                	addi	a5,a5,12
20017a06:	4398                	lw	a4,0(a5)
20017a08:	fd842783          	lw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20017a0c:	fec42683          	lw	a3,-20(s0)
20017a10:	06b1                	addi	a3,a3,12
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
20017a12:	8fb9                	xor	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20017a14:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88

    return 0;
20017a16:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:89
}
20017a18:	853e                	mv	a0,a5
20017a1a:	50b2                	lw	ra,44(sp)
20017a1c:	5422                	lw	s0,40(sp)
20017a1e:	6145                	addi	sp,sp,48
20017a20:	8082                	ret

20017a22 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source, long dest)
{
20017a22:	7179                	addi	sp,sp,-48
20017a24:	d606                	sw	ra,44(sp)
20017a26:	d422                	sw	s0,40(sp)
20017a28:	1800                	addi	s0,sp,48
20017a2a:	fca42e23          	sw	a0,-36(s0)
20017a2e:	fcb42c23          	sw	a1,-40(s0)
20017a32:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:93
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20017a36:	fdc42503          	lw	a0,-36(s0)
20017a3a:	a13ff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
20017a3e:	87aa                	mv	a5,a0
20017a40:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) &= ~source;
20017a44:	fec42783          	lw	a5,-20(s0)
20017a48:	03c78793          	addi	a5,a5,60
20017a4c:	439c                	lw	a5,0(a5)
20017a4e:	fd842703          	lw	a4,-40(s0)
20017a52:	fff74713          	not	a4,a4
20017a56:	86ba                	mv	a3,a4
20017a58:	fec42703          	lw	a4,-20(s0)
20017a5c:	03c70713          	addi	a4,a4,60
20017a60:	8ff5                	and	a5,a5,a3
20017a62:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  |= dest;
20017a64:	fec42783          	lw	a5,-20(s0)
20017a68:	03878793          	addi	a5,a5,56
20017a6c:	4398                	lw	a4,0(a5)
20017a6e:	fd442783          	lw	a5,-44(s0)
20017a72:	fec42683          	lw	a3,-20(s0)
20017a76:	03868693          	addi	a3,a3,56
20017a7a:	8fd9                	or	a5,a5,a4
20017a7c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:98

    return 0;
20017a7e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99
}
20017a80:	853e                	mv	a0,a5
20017a82:	50b2                	lw	ra,44(sp)
20017a84:	5422                	lw	s0,40(sp)
20017a86:	6145                	addi	sp,sp,48
20017a88:	8082                	ret

20017a8a <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:102

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio, long source)
{
20017a8a:	7179                	addi	sp,sp,-48
20017a8c:	d606                	sw	ra,44(sp)
20017a8e:	d422                	sw	s0,40(sp)
20017a90:	1800                	addi	s0,sp,48
20017a92:	fca42e23          	sw	a0,-36(s0)
20017a96:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20017a9a:	fdc42503          	lw	a0,-36(s0)
20017a9e:	9afff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
20017aa2:	87aa                	mv	a5,a0
20017aa4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:105

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  &= ~source;
20017aa8:	fec42783          	lw	a5,-20(s0)
20017aac:	03878793          	addi	a5,a5,56
20017ab0:	439c                	lw	a5,0(a5)
20017ab2:	fd842703          	lw	a4,-40(s0)
20017ab6:	fff74713          	not	a4,a4
20017aba:	86ba                	mv	a3,a4
20017abc:	fec42703          	lw	a4,-20(s0)
20017ac0:	03870713          	addi	a4,a4,56
20017ac4:	8ff5                	and	a5,a5,a3
20017ac6:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107

    return 0;
20017ac8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20017aca:	853e                	mv	a0,a5
20017acc:	50b2                	lw	ra,44(sp)
20017ace:	5422                	lw	s0,40(sp)
20017ad0:	6145                	addi	sp,sp,48
20017ad2:	8082                	ret

20017ad4 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio, long source, int intr_type)
{
20017ad4:	7179                	addi	sp,sp,-48
20017ad6:	d606                	sw	ra,44(sp)
20017ad8:	d422                	sw	s0,40(sp)
20017ada:	1800                	addi	s0,sp,48
20017adc:	fca42e23          	sw	a0,-36(s0)
20017ae0:	fcb42c23          	sw	a1,-40(s0)
20017ae4:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20017ae8:	fdc42503          	lw	a0,-36(s0)
20017aec:	961ff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
20017af0:	87aa                	mv	a5,a0
20017af2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    switch (intr_type)
20017af6:	fd442703          	lw	a4,-44(s0)
20017afa:	479d                	li	a5,7
20017afc:	1ce7e963          	bltu	a5,a4,20017cce <__metal_driver_sifive_gpio0_config_int+0x1fa>
20017b00:	fd442783          	lw	a5,-44(s0)
20017b04:	00279713          	slli	a4,a5,0x2
20017b08:	200197b7          	lui	a5,0x20019
20017b0c:	6f878793          	addi	a5,a5,1784 # 200196f8 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20017b10:	97ba                	add	a5,a5,a4
20017b12:	439c                	lw	a5,0(a5)
20017b14:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117
    {
        case METAL_GPIO_INT_DISABLE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  &= ~source;
20017b16:	fec42783          	lw	a5,-20(s0)
20017b1a:	07e1                	addi	a5,a5,24
20017b1c:	439c                	lw	a5,0(a5)
20017b1e:	fd842703          	lw	a4,-40(s0)
20017b22:	fff74713          	not	a4,a4
20017b26:	86ba                	mv	a3,a4
20017b28:	fec42703          	lw	a4,-20(s0)
20017b2c:	0761                	addi	a4,a4,24
20017b2e:	8ff5                	and	a5,a5,a3
20017b30:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  &= ~source;
20017b32:	fec42783          	lw	a5,-20(s0)
20017b36:	02078793          	addi	a5,a5,32
20017b3a:	439c                	lw	a5,0(a5)
20017b3c:	fd842703          	lw	a4,-40(s0)
20017b40:	fff74713          	not	a4,a4
20017b44:	86ba                	mv	a3,a4
20017b46:	fec42703          	lw	a4,-20(s0)
20017b4a:	02070713          	addi	a4,a4,32
20017b4e:	8ff5                	and	a5,a5,a3
20017b50:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:119
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  &= ~source;
20017b52:	fec42783          	lw	a5,-20(s0)
20017b56:	02878793          	addi	a5,a5,40
20017b5a:	439c                	lw	a5,0(a5)
20017b5c:	fd842703          	lw	a4,-40(s0)
20017b60:	fff74713          	not	a4,a4
20017b64:	86ba                	mv	a3,a4
20017b66:	fec42703          	lw	a4,-20(s0)
20017b6a:	02870713          	addi	a4,a4,40
20017b6e:	8ff5                	and	a5,a5,a3
20017b70:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:120
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  &= ~source;
20017b72:	fec42783          	lw	a5,-20(s0)
20017b76:	03078793          	addi	a5,a5,48
20017b7a:	439c                	lw	a5,0(a5)
20017b7c:	fd842703          	lw	a4,-40(s0)
20017b80:	fff74713          	not	a4,a4
20017b84:	86ba                	mv	a3,a4
20017b86:	fec42703          	lw	a4,-20(s0)
20017b8a:	03070713          	addi	a4,a4,48
20017b8e:	8ff5                	and	a5,a5,a3
20017b90:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121
            break;
20017b92:	aa35                	j	20017cce <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:123
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20017b94:	fec42783          	lw	a5,-20(s0)
20017b98:	07e1                	addi	a5,a5,24
20017b9a:	4398                	lw	a4,0(a5)
20017b9c:	fd842783          	lw	a5,-40(s0)
20017ba0:	fec42683          	lw	a3,-20(s0)
20017ba4:	06e1                	addi	a3,a3,24
20017ba6:	8fd9                	or	a5,a5,a4
20017ba8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124
            break;
20017baa:	a215                	j	20017cce <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:126
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20017bac:	fec42783          	lw	a5,-20(s0)
20017bb0:	02078793          	addi	a5,a5,32
20017bb4:	4398                	lw	a4,0(a5)
20017bb6:	fd842783          	lw	a5,-40(s0)
20017bba:	fec42683          	lw	a3,-20(s0)
20017bbe:	02068693          	addi	a3,a3,32
20017bc2:	8fd9                	or	a5,a5,a4
20017bc4:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
            break;
20017bc6:	a221                	j	20017cce <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20017bc8:	fec42783          	lw	a5,-20(s0)
20017bcc:	07e1                	addi	a5,a5,24
20017bce:	4398                	lw	a4,0(a5)
20017bd0:	fd842783          	lw	a5,-40(s0)
20017bd4:	fec42683          	lw	a3,-20(s0)
20017bd8:	06e1                	addi	a3,a3,24
20017bda:	8fd9                	or	a5,a5,a4
20017bdc:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:130
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20017bde:	fec42783          	lw	a5,-20(s0)
20017be2:	02078793          	addi	a5,a5,32
20017be6:	4398                	lw	a4,0(a5)
20017be8:	fd842783          	lw	a5,-40(s0)
20017bec:	fec42683          	lw	a3,-20(s0)
20017bf0:	02068693          	addi	a3,a3,32
20017bf4:	8fd9                	or	a5,a5,a4
20017bf6:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
            break;
20017bf8:	a8d9                	j	20017cce <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20017bfa:	fec42783          	lw	a5,-20(s0)
20017bfe:	02878793          	addi	a5,a5,40
20017c02:	4398                	lw	a4,0(a5)
20017c04:	fd842783          	lw	a5,-40(s0)
20017c08:	fec42683          	lw	a3,-20(s0)
20017c0c:	02868693          	addi	a3,a3,40
20017c10:	8fd9                	or	a5,a5,a4
20017c12:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
            break;
20017c14:	a86d                	j	20017cce <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:136
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20017c16:	fec42783          	lw	a5,-20(s0)
20017c1a:	03078793          	addi	a5,a5,48
20017c1e:	4398                	lw	a4,0(a5)
20017c20:	fd842783          	lw	a5,-40(s0)
20017c24:	fec42683          	lw	a3,-20(s0)
20017c28:	03068693          	addi	a3,a3,48
20017c2c:	8fd9                	or	a5,a5,a4
20017c2e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
            break;
20017c30:	a879                	j	20017cce <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:139
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20017c32:	fec42783          	lw	a5,-20(s0)
20017c36:	02878793          	addi	a5,a5,40
20017c3a:	4398                	lw	a4,0(a5)
20017c3c:	fd842783          	lw	a5,-40(s0)
20017c40:	fec42683          	lw	a3,-20(s0)
20017c44:	02868693          	addi	a3,a3,40
20017c48:	8fd9                	or	a5,a5,a4
20017c4a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:140
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20017c4c:	fec42783          	lw	a5,-20(s0)
20017c50:	03078793          	addi	a5,a5,48
20017c54:	4398                	lw	a4,0(a5)
20017c56:	fd842783          	lw	a5,-40(s0)
20017c5a:	fec42683          	lw	a3,-20(s0)
20017c5e:	03068693          	addi	a3,a3,48
20017c62:	8fd9                	or	a5,a5,a4
20017c64:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
            break;
20017c66:	a0a5                	j	20017cce <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:143
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20017c68:	fec42783          	lw	a5,-20(s0)
20017c6c:	07e1                	addi	a5,a5,24
20017c6e:	4398                	lw	a4,0(a5)
20017c70:	fd842783          	lw	a5,-40(s0)
20017c74:	fec42683          	lw	a3,-20(s0)
20017c78:	06e1                	addi	a3,a3,24
20017c7a:	8fd9                	or	a5,a5,a4
20017c7c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:144
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20017c7e:	fec42783          	lw	a5,-20(s0)
20017c82:	02078793          	addi	a5,a5,32
20017c86:	4398                	lw	a4,0(a5)
20017c88:	fd842783          	lw	a5,-40(s0)
20017c8c:	fec42683          	lw	a3,-20(s0)
20017c90:	02068693          	addi	a3,a3,32
20017c94:	8fd9                	or	a5,a5,a4
20017c96:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20017c98:	fec42783          	lw	a5,-20(s0)
20017c9c:	02878793          	addi	a5,a5,40
20017ca0:	4398                	lw	a4,0(a5)
20017ca2:	fd842783          	lw	a5,-40(s0)
20017ca6:	fec42683          	lw	a3,-20(s0)
20017caa:	02868693          	addi	a3,a3,40
20017cae:	8fd9                	or	a5,a5,a4
20017cb0:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:146
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20017cb2:	fec42783          	lw	a5,-20(s0)
20017cb6:	03078793          	addi	a5,a5,48
20017cba:	4398                	lw	a4,0(a5)
20017cbc:	fd842783          	lw	a5,-40(s0)
20017cc0:	fec42683          	lw	a3,-20(s0)
20017cc4:	03068693          	addi	a3,a3,48
20017cc8:	8fd9                	or	a5,a5,a4
20017cca:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
            break;
20017ccc:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:149
    }
    return 0;
20017cce:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:150
}
20017cd0:	853e                	mv	a0,a5
20017cd2:	50b2                	lw	ra,44(sp)
20017cd4:	5422                	lw	s0,40(sp)
20017cd6:	6145                	addi	sp,sp,48
20017cd8:	8082                	ret

20017cda <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:153

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source, int intr_type)
{
20017cda:	7179                	addi	sp,sp,-48
20017cdc:	d606                	sw	ra,44(sp)
20017cde:	d422                	sw	s0,40(sp)
20017ce0:	1800                	addi	s0,sp,48
20017ce2:	fca42e23          	sw	a0,-36(s0)
20017ce6:	fcb42c23          	sw	a1,-40(s0)
20017cea:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:154
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20017cee:	fdc42503          	lw	a0,-36(s0)
20017cf2:	f5aff0ef          	jal	ra,2001744c <__metal_driver_sifive_gpio0_base>
20017cf6:	87aa                	mv	a5,a0
20017cf8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156

    switch (intr_type)
20017cfc:	fd442703          	lw	a4,-44(s0)
20017d00:	479d                	li	a5,7
20017d02:	14e7ea63          	bltu	a5,a4,20017e56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20017d06:	fd442783          	lw	a5,-44(s0)
20017d0a:	00279713          	slli	a4,a5,0x2
20017d0e:	200197b7          	lui	a5,0x20019
20017d12:	71878793          	addi	a5,a5,1816 # 20019718 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20017d16:	97ba                	add	a5,a5,a4
20017d18:	439c                	lw	a5,0(a5)
20017d1a:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    {
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20017d1c:	fec42783          	lw	a5,-20(s0)
20017d20:	07f1                	addi	a5,a5,28
20017d22:	4398                	lw	a4,0(a5)
20017d24:	fd842783          	lw	a5,-40(s0)
20017d28:	fec42683          	lw	a3,-20(s0)
20017d2c:	06f1                	addi	a3,a3,28
20017d2e:	8fd9                	or	a5,a5,a4
20017d30:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:160
            break;
20017d32:	a215                	j	20017e56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20017d34:	fec42783          	lw	a5,-20(s0)
20017d38:	02478793          	addi	a5,a5,36
20017d3c:	4398                	lw	a4,0(a5)
20017d3e:	fd842783          	lw	a5,-40(s0)
20017d42:	fec42683          	lw	a3,-20(s0)
20017d46:	02468693          	addi	a3,a3,36
20017d4a:	8fd9                	or	a5,a5,a4
20017d4c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:163
            break;
20017d4e:	a221                	j	20017e56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20017d50:	fec42783          	lw	a5,-20(s0)
20017d54:	07f1                	addi	a5,a5,28
20017d56:	4398                	lw	a4,0(a5)
20017d58:	fd842783          	lw	a5,-40(s0)
20017d5c:	fec42683          	lw	a3,-20(s0)
20017d60:	06f1                	addi	a3,a3,28
20017d62:	8fd9                	or	a5,a5,a4
20017d64:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:166
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20017d66:	fec42783          	lw	a5,-20(s0)
20017d6a:	02478793          	addi	a5,a5,36
20017d6e:	4398                	lw	a4,0(a5)
20017d70:	fd842783          	lw	a5,-40(s0)
20017d74:	fec42683          	lw	a3,-20(s0)
20017d78:	02468693          	addi	a3,a3,36
20017d7c:	8fd9                	or	a5,a5,a4
20017d7e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
            break;
20017d80:	a8d9                	j	20017e56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20017d82:	fec42783          	lw	a5,-20(s0)
20017d86:	02c78793          	addi	a5,a5,44
20017d8a:	4398                	lw	a4,0(a5)
20017d8c:	fd842783          	lw	a5,-40(s0)
20017d90:	fec42683          	lw	a3,-20(s0)
20017d94:	02c68693          	addi	a3,a3,44
20017d98:	8fd9                	or	a5,a5,a4
20017d9a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:170
            break;
20017d9c:	a86d                	j	20017e56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20017d9e:	fec42783          	lw	a5,-20(s0)
20017da2:	03478793          	addi	a5,a5,52
20017da6:	4398                	lw	a4,0(a5)
20017da8:	fd842783          	lw	a5,-40(s0)
20017dac:	fec42683          	lw	a3,-20(s0)
20017db0:	03468693          	addi	a3,a3,52
20017db4:	8fd9                	or	a5,a5,a4
20017db6:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:173
            break;
20017db8:	a879                	j	20017e56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20017dba:	fec42783          	lw	a5,-20(s0)
20017dbe:	02c78793          	addi	a5,a5,44
20017dc2:	4398                	lw	a4,0(a5)
20017dc4:	fd842783          	lw	a5,-40(s0)
20017dc8:	fec42683          	lw	a3,-20(s0)
20017dcc:	02c68693          	addi	a3,a3,44
20017dd0:	8fd9                	or	a5,a5,a4
20017dd2:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:176
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20017dd4:	fec42783          	lw	a5,-20(s0)
20017dd8:	03478793          	addi	a5,a5,52
20017ddc:	4398                	lw	a4,0(a5)
20017dde:	fd842783          	lw	a5,-40(s0)
20017de2:	fec42683          	lw	a3,-20(s0)
20017de6:	03468693          	addi	a3,a3,52
20017dea:	8fd9                	or	a5,a5,a4
20017dec:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:177
            break;
20017dee:	a0a5                	j	20017e56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20017df0:	fec42783          	lw	a5,-20(s0)
20017df4:	07f1                	addi	a5,a5,28
20017df6:	4398                	lw	a4,0(a5)
20017df8:	fd842783          	lw	a5,-40(s0)
20017dfc:	fec42683          	lw	a3,-20(s0)
20017e00:	06f1                	addi	a3,a3,28
20017e02:	8fd9                	or	a5,a5,a4
20017e04:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:180
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20017e06:	fec42783          	lw	a5,-20(s0)
20017e0a:	02478793          	addi	a5,a5,36
20017e0e:	4398                	lw	a4,0(a5)
20017e10:	fd842783          	lw	a5,-40(s0)
20017e14:	fec42683          	lw	a3,-20(s0)
20017e18:	02468693          	addi	a3,a3,36
20017e1c:	8fd9                	or	a5,a5,a4
20017e1e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20017e20:	fec42783          	lw	a5,-20(s0)
20017e24:	02c78793          	addi	a5,a5,44
20017e28:	4398                	lw	a4,0(a5)
20017e2a:	fd842783          	lw	a5,-40(s0)
20017e2e:	fec42683          	lw	a3,-20(s0)
20017e32:	02c68693          	addi	a3,a3,44
20017e36:	8fd9                	or	a5,a5,a4
20017e38:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:182
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20017e3a:	fec42783          	lw	a5,-20(s0)
20017e3e:	03478793          	addi	a5,a5,52
20017e42:	4398                	lw	a4,0(a5)
20017e44:	fd842783          	lw	a5,-40(s0)
20017e48:	fec42683          	lw	a3,-20(s0)
20017e4c:	03468693          	addi	a3,a3,52
20017e50:	8fd9                	or	a5,a5,a4
20017e52:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:183
            break;
20017e54:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
    }
    return 0;
20017e56:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:186
}
20017e58:	853e                	mv	a0,a5
20017e5a:	50b2                	lw	ra,44(sp)
20017e5c:	5422                	lw	s0,40(sp)
20017e5e:	6145                	addi	sp,sp,48
20017e60:	8082                	ret

20017e62 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:190

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio)
{
20017e62:	1101                	addi	sp,sp,-32
20017e64:	ce06                	sw	ra,28(sp)
20017e66:	cc22                	sw	s0,24(sp)
20017e68:	1000                	addi	s0,sp,32
20017e6a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:191
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20017e6e:	fec42503          	lw	a0,-20(s0)
20017e72:	e00ff0ef          	jal	ra,20017472 <__metal_driver_sifive_gpio0_interrupt_parent>
20017e76:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
}
20017e78:	853e                	mv	a0,a5
20017e7a:	40f2                	lw	ra,28(sp)
20017e7c:	4462                	lw	s0,24(sp)
20017e7e:	6105                	addi	sp,sp,32
20017e80:	8082                	ret

20017e82 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin)
{
20017e82:	7179                	addi	sp,sp,-48
20017e84:	d606                	sw	ra,44(sp)
20017e86:	d422                	sw	s0,40(sp)
20017e88:	1800                	addi	s0,sp,48
20017e8a:	fca42e23          	sw	a0,-36(s0)
20017e8e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:197
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20017e92:	fd842583          	lw	a1,-40(s0)
20017e96:	fdc42503          	lw	a0,-36(s0)
20017e9a:	e02ff0ef          	jal	ra,2001749c <__metal_driver_sifive_gpio0_interrupt_lines>
20017e9e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    return irq;
20017ea2:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
}
20017ea6:	853e                	mv	a0,a5
20017ea8:	50b2                	lw	ra,44(sp)
20017eaa:	5422                	lw	s0,40(sp)
20017eac:	6145                	addi	sp,sp,48
20017eae:	8082                	ret

20017eb0 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:738
{
20017eb0:	1101                	addi	sp,sp,-32
20017eb2:	ce22                	sw	s0,28(sp)
20017eb4:	1000                	addi	s0,sp,32
20017eb6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:739
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017eba:	fec42703          	lw	a4,-20(s0)
20017ebe:	800017b7          	lui	a5,0x80001
20017ec2:	1f078793          	addi	a5,a5,496 # 800011f0 <metal_segment_heap_target_end+0xffffefa4>
20017ec6:	00f71563          	bne	a4,a5,20017ed0 <__metal_driver_sifive_uart0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:740
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20017eca:	100137b7          	lui	a5,0x10013
20017ece:	a829                	j	20017ee8 <__metal_driver_sifive_uart0_control_base+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:742
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017ed0:	fec42703          	lw	a4,-20(s0)
20017ed4:	800017b7          	lui	a5,0x80001
20017ed8:	21078793          	addi	a5,a5,528 # 80001210 <metal_segment_heap_target_end+0xffffefc4>
20017edc:	00f71563          	bne	a4,a5,20017ee6 <__metal_driver_sifive_uart0_control_base+0x36>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:743
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20017ee0:	100237b7          	lui	a5,0x10023
20017ee4:	a011                	j	20017ee8 <__metal_driver_sifive_uart0_control_base+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:746
		return 0;
20017ee6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:748
}
20017ee8:	853e                	mv	a0,a5
20017eea:	4472                	lw	s0,28(sp)
20017eec:	6105                	addi	sp,sp,32
20017eee:	8082                	ret

20017ef0 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:777
{
20017ef0:	1101                	addi	sp,sp,-32
20017ef2:	ce22                	sw	s0,28(sp)
20017ef4:	1000                	addi	s0,sp,32
20017ef6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:778
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017efa:	fec42703          	lw	a4,-20(s0)
20017efe:	800017b7          	lui	a5,0x80001
20017f02:	1f078793          	addi	a5,a5,496 # 800011f0 <metal_segment_heap_target_end+0xffffefa4>
20017f06:	00f71763          	bne	a4,a5,20017f14 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:779
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20017f0a:	800017b7          	lui	a5,0x80001
20017f0e:	c1878793          	addi	a5,a5,-1000 # 80000c18 <metal_segment_heap_target_end+0xffffe9cc>
20017f12:	a821                	j	20017f2a <__metal_driver_sifive_uart0_interrupt_parent+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:781
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017f14:	fec42703          	lw	a4,-20(s0)
20017f18:	800017b7          	lui	a5,0x80001
20017f1c:	21078793          	addi	a5,a5,528 # 80001210 <metal_segment_heap_target_end+0xffffefc4>
20017f20:	00f71463          	bne	a4,a5,20017f28 <__metal_driver_sifive_uart0_interrupt_parent+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:782
		return NULL;
20017f24:	4781                	li	a5,0
20017f26:	a011                	j	20017f2a <__metal_driver_sifive_uart0_interrupt_parent+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:785
		return 0;
20017f28:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:787
}
20017f2a:	853e                	mv	a0,a5
20017f2c:	4472                	lw	s0,28(sp)
20017f2e:	6105                	addi	sp,sp,32
20017f30:	8082                	ret

20017f32 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:790
{
20017f32:	1101                	addi	sp,sp,-32
20017f34:	ce22                	sw	s0,28(sp)
20017f36:	1000                	addi	s0,sp,32
20017f38:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:791
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017f3c:	fec42703          	lw	a4,-20(s0)
20017f40:	800017b7          	lui	a5,0x80001
20017f44:	1f078793          	addi	a5,a5,496 # 800011f0 <metal_segment_heap_target_end+0xffffefa4>
20017f48:	00f71463          	bne	a4,a5,20017f50 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:792
		return 3;
20017f4c:	478d                	li	a5,3
20017f4e:	a821                	j	20017f66 <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:794
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017f50:	fec42703          	lw	a4,-20(s0)
20017f54:	800017b7          	lui	a5,0x80001
20017f58:	21078793          	addi	a5,a5,528 # 80001210 <metal_segment_heap_target_end+0xffffefc4>
20017f5c:	00f71463          	bne	a4,a5,20017f64 <__metal_driver_sifive_uart0_interrupt_line+0x32>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:795
		return 4;
20017f60:	4791                	li	a5,4
20017f62:	a011                	j	20017f66 <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:798
		return 0;
20017f64:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:800
}
20017f66:	853e                	mv	a0,a5
20017f68:	4472                	lw	s0,28(sp)
20017f6a:	6105                	addi	sp,sp,32
20017f6c:	8082                	ret

20017f6e <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:803
{
20017f6e:	1101                	addi	sp,sp,-32
20017f70:	ce22                	sw	s0,28(sp)
20017f72:	1000                	addi	s0,sp,32
20017f74:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:804
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017f78:	fec42703          	lw	a4,-20(s0)
20017f7c:	800017b7          	lui	a5,0x80001
20017f80:	1f078793          	addi	a5,a5,496 # 800011f0 <metal_segment_heap_target_end+0xffffefa4>
20017f84:	00f71763          	bne	a4,a5,20017f92 <__metal_driver_sifive_uart0_clock+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:805
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20017f88:	800017b7          	lui	a5,0x80001
20017f8c:	24878793          	addi	a5,a5,584 # 80001248 <metal_segment_heap_target_end+0xffffeffc>
20017f90:	a839                	j	20017fae <__metal_driver_sifive_uart0_clock+0x40>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:807
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017f92:	fec42703          	lw	a4,-20(s0)
20017f96:	800017b7          	lui	a5,0x80001
20017f9a:	21078793          	addi	a5,a5,528 # 80001210 <metal_segment_heap_target_end+0xffffefc4>
20017f9e:	00f71763          	bne	a4,a5,20017fac <__metal_driver_sifive_uart0_clock+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:808
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20017fa2:	800017b7          	lui	a5,0x80001
20017fa6:	24878793          	addi	a5,a5,584 # 80001248 <metal_segment_heap_target_end+0xffffeffc>
20017faa:	a011                	j	20017fae <__metal_driver_sifive_uart0_clock+0x40>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:811
		return 0;
20017fac:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:813
}
20017fae:	853e                	mv	a0,a5
20017fb0:	4472                	lw	s0,28(sp)
20017fb2:	6105                	addi	sp,sp,32
20017fb4:	8082                	ret

20017fb6 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:816
{
20017fb6:	1101                	addi	sp,sp,-32
20017fb8:	ce22                	sw	s0,28(sp)
20017fba:	1000                	addi	s0,sp,32
20017fbc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:817
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017fc0:	fec42703          	lw	a4,-20(s0)
20017fc4:	800017b7          	lui	a5,0x80001
20017fc8:	1f078793          	addi	a5,a5,496 # 800011f0 <metal_segment_heap_target_end+0xffffefa4>
20017fcc:	00f71563          	bne	a4,a5,20017fd6 <__metal_driver_sifive_uart0_pinmux+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:818
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20017fd0:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017fd4:	a829                	j	20017fee <__metal_driver_sifive_uart0_pinmux+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:820
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017fd6:	fec42703          	lw	a4,-20(s0)
20017fda:	800017b7          	lui	a5,0x80001
20017fde:	21078793          	addi	a5,a5,528 # 80001210 <metal_segment_heap_target_end+0xffffefc4>
20017fe2:	00f71563          	bne	a4,a5,20017fec <__metal_driver_sifive_uart0_pinmux+0x36>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:821
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20017fe6:	81818793          	addi	a5,gp,-2024 # 80001270 <__metal_dt_gpio_10012000>
20017fea:	a011                	j	20017fee <__metal_driver_sifive_uart0_pinmux+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:824
		return 0;
20017fec:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:826
}
20017fee:	853e                	mv	a0,a5
20017ff0:	4472                	lw	s0,28(sp)
20017ff2:	6105                	addi	sp,sp,32
20017ff4:	8082                	ret

20017ff6 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:829
{
20017ff6:	1101                	addi	sp,sp,-32
20017ff8:	ce22                	sw	s0,28(sp)
20017ffa:	1000                	addi	s0,sp,32
20017ffc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:830
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20018000:	fec42703          	lw	a4,-20(s0)
20018004:	800017b7          	lui	a5,0x80001
20018008:	1f078793          	addi	a5,a5,496 # 800011f0 <metal_segment_heap_target_end+0xffffefa4>
2001800c:	00f71563          	bne	a4,a5,20018016 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:831
		return 196608;
20018010:	000307b7          	lui	a5,0x30
20018014:	a829                	j	2001802e <__metal_driver_sifive_uart0_pinmux_output_selector+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:833
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20018016:	fec42703          	lw	a4,-20(s0)
2001801a:	800017b7          	lui	a5,0x80001
2001801e:	21078793          	addi	a5,a5,528 # 80001210 <metal_segment_heap_target_end+0xffffefc4>
20018022:	00f71563          	bne	a4,a5,2001802c <__metal_driver_sifive_uart0_pinmux_output_selector+0x36>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:834
		return 8650752;
20018026:	008407b7          	lui	a5,0x840
2001802a:	a011                	j	2001802e <__metal_driver_sifive_uart0_pinmux_output_selector+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:837
		return 0;
2001802c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:839
}
2001802e:	853e                	mv	a0,a5
20018030:	4472                	lw	s0,28(sp)
20018032:	6105                	addi	sp,sp,32
20018034:	8082                	ret

20018036 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:842
{
20018036:	1101                	addi	sp,sp,-32
20018038:	ce22                	sw	s0,28(sp)
2001803a:	1000                	addi	s0,sp,32
2001803c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:843
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20018040:	fec42703          	lw	a4,-20(s0)
20018044:	800017b7          	lui	a5,0x80001
20018048:	1f078793          	addi	a5,a5,496 # 800011f0 <metal_segment_heap_target_end+0xffffefa4>
2001804c:	00f71563          	bne	a4,a5,20018056 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:844
		return 196608;
20018050:	000307b7          	lui	a5,0x30
20018054:	a829                	j	2001806e <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:846
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20018056:	fec42703          	lw	a4,-20(s0)
2001805a:	800017b7          	lui	a5,0x80001
2001805e:	21078793          	addi	a5,a5,528 # 80001210 <metal_segment_heap_target_end+0xffffefc4>
20018062:	00f71563          	bne	a4,a5,2001806c <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:847
		return 8650752;
20018066:	008407b7          	lui	a5,0x840
2001806a:	a011                	j	2001806e <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:850
		return 0;
2001806c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:852
}
2001806e:	853e                	mv	a0,a5
20018070:	4472                	lw	s0,28(sp)
20018072:	6105                	addi	sp,sp,32
20018074:	8082                	ret

20018076 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:32
#define UART_REGB(offset)  (__METAL_ACCESS_ONCE((__metal_io_u8  *)UART_REG(offset)))
#define UART_REGW(offset)  (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart)
{
20018076:	1101                	addi	sp,sp,-32
20018078:	ce06                	sw	ra,28(sp)
2001807a:	cc22                	sw	s0,24(sp)
2001807c:	1000                	addi	s0,sp,32
2001807e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:33
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20018082:	fec42503          	lw	a0,-20(s0)
20018086:	35ad                	jal	20017ef0 <__metal_driver_sifive_uart0_interrupt_parent>
20018088:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:34
}
2001808a:	853e                	mv	a0,a5
2001808c:	40f2                	lw	ra,28(sp)
2001808e:	4462                	lw	s0,24(sp)
20018090:	6105                	addi	sp,sp,32
20018092:	8082                	ret

20018094 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:37

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart)
{
20018094:	1101                	addi	sp,sp,-32
20018096:	ce06                	sw	ra,28(sp)
20018098:	cc22                	sw	s0,24(sp)
2001809a:	1000                	addi	s0,sp,32
2001809c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:38
    return (__metal_driver_sifive_uart0_interrupt_line(uart) + METAL_INTERRUPT_ID_GL0);
200180a0:	fec42503          	lw	a0,-20(s0)
200180a4:	3579                	jal	20017f32 <__metal_driver_sifive_uart0_interrupt_line>
200180a6:	87aa                	mv	a5,a0
200180a8:	02078793          	addi	a5,a5,32 # 840020 <__heap_size+0x83f820>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:39
}
200180ac:	853e                	mv	a0,a5
200180ae:	40f2                	lw	ra,28(sp)
200180b0:	4462                	lw	s0,24(sp)
200180b2:	6105                	addi	sp,sp,32
200180b4:	8082                	ret

200180b6 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:43


int __metal_driver_sifive_uart0_txready(struct metal_uart *uart)
{
200180b6:	7179                	addi	sp,sp,-48
200180b8:	d606                	sw	ra,44(sp)
200180ba:	d422                	sw	s0,40(sp)
200180bc:	1800                	addi	s0,sp,48
200180be:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:44
  long control_base = __metal_driver_sifive_uart0_control_base(uart);
200180c2:	fdc42503          	lw	a0,-36(s0)
200180c6:	debff0ef          	jal	ra,20017eb0 <__metal_driver_sifive_uart0_control_base>
200180ca:	87aa                	mv	a5,a0
200180cc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:46

  return !((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
200180d0:	fec42783          	lw	a5,-20(s0)
200180d4:	439c                	lw	a5,0(a5)
200180d6:	fff7c793          	not	a5,a5
200180da:	83fd                	srli	a5,a5,0x1f
200180dc:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:47
}
200180e0:	853e                	mv	a0,a5
200180e2:	50b2                	lw	ra,44(sp)
200180e4:	5422                	lw	s0,40(sp)
200180e6:	6145                	addi	sp,sp,48
200180e8:	8082                	ret

200180ea <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:51


int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c)
{
200180ea:	7179                	addi	sp,sp,-48
200180ec:	d606                	sw	ra,44(sp)
200180ee:	d422                	sw	s0,40(sp)
200180f0:	1800                	addi	s0,sp,48
200180f2:	fca42e23          	sw	a0,-36(s0)
200180f6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:52
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200180fa:	fdc42503          	lw	a0,-36(s0)
200180fe:	db3ff0ef          	jal	ra,20017eb0 <__metal_driver_sifive_uart0_control_base>
20018102:	87aa                	mv	a5,a0
20018104:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54

    while (!__metal_driver_sifive_uart0_txready(uart)) {
20018108:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54 (discriminator 1)
2001810a:	fdc42503          	lw	a0,-36(s0)
2001810e:	3765                	jal	200180b6 <__metal_driver_sifive_uart0_txready>
20018110:	87aa                	mv	a5,a0
20018112:	dfe5                	beqz	a5,2001810a <__metal_driver_sifive_uart0_putc+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:57
		/* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20018114:	fec42783          	lw	a5,-20(s0)
20018118:	fd842703          	lw	a4,-40(s0)
2001811c:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:58
    return 0;
2001811e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:59
}
20018120:	853e                	mv	a0,a5
20018122:	50b2                	lw	ra,44(sp)
20018124:	5422                	lw	s0,40(sp)
20018126:	6145                	addi	sp,sp,48
20018128:	8082                	ret

2001812a <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:63


int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c)
{
2001812a:	7179                	addi	sp,sp,-48
2001812c:	d606                	sw	ra,44(sp)
2001812e:	d422                	sw	s0,40(sp)
20018130:	1800                	addi	s0,sp,48
20018132:	fca42e23          	sw	a0,-36(s0)
20018136:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:65
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001813a:	fdc42503          	lw	a0,-36(s0)
2001813e:	d73ff0ef          	jal	ra,20017eb0 <__metal_driver_sifive_uart0_control_base>
20018142:	87aa                	mv	a5,a0
20018144:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:67
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);;
20018148:	fec42783          	lw	a5,-20(s0)
2001814c:	0791                	addi	a5,a5,4
2001814e:	439c                	lw	a5,0(a5)
20018150:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:68
    if( ch & UART_RXEMPTY ){
20018154:	fe842783          	lw	a5,-24(s0)
20018158:	0007d763          	bgez	a5,20018166 <__metal_driver_sifive_uart0_getc+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:69
      *c = -1; /* aka: EOF in most of the world */
2001815c:	fd842783          	lw	a5,-40(s0)
20018160:	577d                	li	a4,-1
20018162:	c398                	sw	a4,0(a5)
20018164:	a801                	j	20018174 <__metal_driver_sifive_uart0_getc+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:71
    } else {
      *c = ch & 0x0ff;
20018166:	fe842783          	lw	a5,-24(s0)
2001816a:	0ff7f713          	andi	a4,a5,255
2001816e:	fd842783          	lw	a5,-40(s0)
20018172:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:73
    }
    return 0;
20018174:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:74
}
20018176:	853e                	mv	a0,a5
20018178:	50b2                	lw	ra,44(sp)
2001817a:	5422                	lw	s0,40(sp)
2001817c:	6145                	addi	sp,sp,48
2001817e:	8082                	ret

20018180 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:78


int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart)
{
20018180:	7179                	addi	sp,sp,-48
20018182:	d622                	sw	s0,44(sp)
20018184:	1800                	addi	s0,sp,48
20018186:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:79
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2001818a:	fdc42783          	lw	a5,-36(s0)
2001818e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:80
    return uart->baud_rate;
20018192:	fec42783          	lw	a5,-20(s0)
20018196:	43dc                	lw	a5,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:81
}
20018198:	853e                	mv	a0,a5
2001819a:	5432                	lw	s0,44(sp)
2001819c:	6145                	addi	sp,sp,48
2001819e:	8082                	ret

200181a0 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:84

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart, int baud_rate)
{
200181a0:	7179                	addi	sp,sp,-48
200181a2:	d606                	sw	ra,44(sp)
200181a4:	d422                	sw	s0,40(sp)
200181a6:	1800                	addi	s0,sp,48
200181a8:	fca42e23          	sw	a0,-36(s0)
200181ac:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:85
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
200181b0:	fdc42783          	lw	a5,-36(s0)
200181b4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:86
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
200181b8:	fdc42503          	lw	a0,-36(s0)
200181bc:	cf5ff0ef          	jal	ra,20017eb0 <__metal_driver_sifive_uart0_control_base>
200181c0:	87aa                	mv	a5,a0
200181c2:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:87
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200181c6:	fdc42503          	lw	a0,-36(s0)
200181ca:	da5ff0ef          	jal	ra,20017f6e <__metal_driver_sifive_uart0_clock>
200181ce:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:89

    uart->baud_rate = baud_rate;
200181d2:	fd842703          	lw	a4,-40(s0)
200181d6:	fec42783          	lw	a5,-20(s0)
200181da:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:91

    if (clock != NULL) {
200181dc:	fe442783          	lw	a5,-28(s0)
200181e0:	cbb1                	beqz	a5,20018234 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:92
        long clock_rate = clock->vtable->get_rate_hz(clock);
200181e2:	fe442783          	lw	a5,-28(s0)
200181e6:	439c                	lw	a5,0(a5)
200181e8:	439c                	lw	a5,0(a5)
200181ea:	fe442503          	lw	a0,-28(s0)
200181ee:	9782                	jalr	a5
200181f0:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:93
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
200181f4:	fe042703          	lw	a4,-32(s0)
200181f8:	fd842783          	lw	a5,-40(s0)
200181fc:	02f747b3          	div	a5,a4,a5
20018200:	fff78713          	addi	a4,a5,-1
20018204:	fe842783          	lw	a5,-24(s0)
20018208:	07e1                	addi	a5,a5,24
2001820a:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:94
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
2001820c:	fe842783          	lw	a5,-24(s0)
20018210:	07a1                	addi	a5,a5,8
20018212:	439c                	lw	a5,0(a5)
20018214:	fe842703          	lw	a4,-24(s0)
20018218:	0721                	addi	a4,a4,8
2001821a:	0017e793          	ori	a5,a5,1
2001821e:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:95
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20018220:	fe842783          	lw	a5,-24(s0)
20018224:	07b1                	addi	a5,a5,12
20018226:	439c                	lw	a5,0(a5)
20018228:	fe842703          	lw	a4,-24(s0)
2001822c:	0731                	addi	a4,a4,12
2001822e:	0017e793          	ori	a5,a5,1
20018232:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:97
    }
    return 0;
20018234:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:98
}
20018236:	853e                	mv	a0,a5
20018238:	50b2                	lw	ra,44(sp)
2001823a:	5422                	lw	s0,40(sp)
2001823c:	6145                	addi	sp,sp,48
2001823e:	8082                	ret

20018240 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:101

static void pre_rate_change_callback_func(void *priv)
{
20018240:	7139                	addi	sp,sp,-64
20018242:	de06                	sw	ra,60(sp)
20018244:	dc22                	sw	s0,56(sp)
20018246:	0080                	addi	s0,sp,64
20018248:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:102
    struct __metal_driver_sifive_uart0 *uart = priv;
2001824c:	fcc42783          	lw	a5,-52(s0)
20018250:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:103
    long control_base = __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20018254:	fcc42503          	lw	a0,-52(s0)
20018258:	c59ff0ef          	jal	ra,20017eb0 <__metal_driver_sifive_uart0_control_base>
2001825c:	87aa                	mv	a5,a0
2001825e:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:104
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20018262:	fcc42503          	lw	a0,-52(s0)
20018266:	d09ff0ef          	jal	ra,20017f6e <__metal_driver_sifive_uart0_clock>
2001826a:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:109

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
2001826e:	fe842783          	lw	a5,-24(s0)
20018272:	07a1                	addi	a5,a5,8
20018274:	4398                	lw	a4,0(a5)
20018276:	fe842783          	lw	a5,-24(s0)
2001827a:	07a1                	addi	a5,a5,8
2001827c:	86be                	mv	a3,a5
2001827e:	fff907b7          	lui	a5,0xfff90
20018282:	17fd                	addi	a5,a5,-1
20018284:	8ff9                	and	a5,a5,a4
20018286:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20018288:	fe842783          	lw	a5,-24(s0)
2001828c:	07a1                	addi	a5,a5,8
2001828e:	4398                	lw	a4,0(a5)
20018290:	fe842783          	lw	a5,-24(s0)
20018294:	07a1                	addi	a5,a5,8
20018296:	86be                	mv	a3,a5
20018298:	67c1                	lui	a5,0x10
2001829a:	8fd9                	or	a5,a5,a4
2001829c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112

    while((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0) ;
2001829e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112 (discriminator 1)
200182a0:	fe842783          	lw	a5,-24(s0)
200182a4:	07d1                	addi	a5,a5,20
200182a6:	439c                	lw	a5,0(a5)
200182a8:	8b85                	andi	a5,a5,1
200182aa:	dbfd                	beqz	a5,200182a0 <pre_rate_change_callback_func+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118

    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol = (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
200182ac:	fe842783          	lw	a5,-24(s0)
200182b0:	07a1                	addi	a5,a5,8
200182b2:	439c                	lw	a5,0(a5)
200182b4:	8b89                	andi	a5,a5,2
200182b6:	c399                	beqz	a5,200182bc <pre_rate_change_callback_func+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 1)
200182b8:	47a5                	li	a5,9
200182ba:	a011                	j	200182be <pre_rate_change_callback_func+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 2)
200182bc:	47a9                	li	a5,10
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 4)
200182be:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:119 (discriminator 4)
    long clk_freq = clock->vtable->get_rate_hz(clock);
200182c2:	fe442783          	lw	a5,-28(s0)
200182c6:	439c                	lw	a5,0(a5)
200182c8:	439c                	lw	a5,0(a5)
200182ca:	fe442503          	lw	a0,-28(s0)
200182ce:	9782                	jalr	a5
200182d0:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:120 (discriminator 4)
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
200182d4:	fe042703          	lw	a4,-32(s0)
200182d8:	fdc42783          	lw	a5,-36(s0)
200182dc:	02f707b3          	mul	a5,a4,a5
200182e0:	873e                	mv	a4,a5
200182e2:	fec42783          	lw	a5,-20(s0)
200182e6:	43dc                	lw	a5,4(a5)
200182e8:	02f757b3          	divu	a5,a4,a5
200182ec:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 4)

    for(volatile long x = 0; x < cycles_to_wait; x++)
200182f0:	fc042a23          	sw	zero,-44(s0)
200182f4:	a039                	j	20018302 <pre_rate_change_callback_func+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:123 (discriminator 3)
        __asm__("nop");
200182f6:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 3)
    for(volatile long x = 0; x < cycles_to_wait; x++)
200182f8:	fd442783          	lw	a5,-44(s0)
200182fc:	0785                	addi	a5,a5,1
200182fe:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 1)
20018302:	fd442783          	lw	a5,-44(s0)
20018306:	fd842703          	lw	a4,-40(s0)
2001830a:	fee7c6e3          	blt	a5,a4,200182f6 <pre_rate_change_callback_func+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:124
}
2001830e:	0001                	nop
20018310:	50f2                	lw	ra,60(sp)
20018312:	5462                	lw	s0,56(sp)
20018314:	6121                	addi	sp,sp,64
20018316:	8082                	ret

20018318 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:127

static void post_rate_change_callback_func(void *priv)
{
20018318:	7179                	addi	sp,sp,-48
2001831a:	d606                	sw	ra,44(sp)
2001831c:	d422                	sw	s0,40(sp)
2001831e:	1800                	addi	s0,sp,48
20018320:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:128
    struct __metal_driver_sifive_uart0 *uart = priv;
20018324:	fdc42783          	lw	a5,-36(s0)
20018328:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:129
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
2001832c:	fec42703          	lw	a4,-20(s0)
20018330:	fec42783          	lw	a5,-20(s0)
20018334:	43dc                	lw	a5,4(a5)
20018336:	85be                	mv	a1,a5
20018338:	853a                	mv	a0,a4
2001833a:	9f6fc0ef          	jal	ra,20014530 <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:130
}
2001833e:	0001                	nop
20018340:	50b2                	lw	ra,44(sp)
20018342:	5422                	lw	s0,40(sp)
20018344:	6145                	addi	sp,sp,48
20018346:	8082                	ret

20018348 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:133

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate)
{
20018348:	7139                	addi	sp,sp,-64
2001834a:	de06                	sw	ra,60(sp)
2001834c:	dc22                	sw	s0,56(sp)
2001834e:	0080                	addi	s0,sp,64
20018350:	fca42623          	sw	a0,-52(s0)
20018354:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:134
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20018358:	fcc42783          	lw	a5,-52(s0)
2001835c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:135
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20018360:	fcc42503          	lw	a0,-52(s0)
20018364:	c0bff0ef          	jal	ra,20017f6e <__metal_driver_sifive_uart0_clock>
20018368:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:136
    struct __metal_driver_sifive_gpio0 *pinmux = __metal_driver_sifive_uart0_pinmux(guart);
2001836c:	fcc42503          	lw	a0,-52(s0)
20018370:	c47ff0ef          	jal	ra,20017fb6 <__metal_driver_sifive_uart0_pinmux>
20018374:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:138

    if(clock != NULL) {
20018378:	fe842783          	lw	a5,-24(s0)
2001837c:	c7b9                	beqz	a5,200183ca <__metal_driver_sifive_uart0_init+0x82>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:139
        uart->pre_rate_change_callback.callback = &pre_rate_change_callback_func;
2001837e:	fec42783          	lw	a5,-20(s0)
20018382:	20018737          	lui	a4,0x20018
20018386:	24070713          	addi	a4,a4,576 # 20018240 <pre_rate_change_callback_func>
2001838a:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:140
        uart->pre_rate_change_callback.priv = guart;
2001838c:	fec42783          	lw	a5,-20(s0)
20018390:	fcc42703          	lw	a4,-52(s0)
20018394:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:141
        metal_clock_register_pre_rate_change_callback(clock, &(uart->pre_rate_change_callback));
20018396:	fec42783          	lw	a5,-20(s0)
2001839a:	07a1                	addi	a5,a5,8
2001839c:	85be                	mv	a1,a5
2001839e:	fe842503          	lw	a0,-24(s0)
200183a2:	2aad                	jal	2001851c <metal_clock_register_pre_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:143

        uart->post_rate_change_callback.callback = &post_rate_change_callback_func;
200183a4:	fec42783          	lw	a5,-20(s0)
200183a8:	20018737          	lui	a4,0x20018
200183ac:	31870713          	addi	a4,a4,792 # 20018318 <post_rate_change_callback_func>
200183b0:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:144
        uart->post_rate_change_callback.priv = guart;
200183b2:	fec42783          	lw	a5,-20(s0)
200183b6:	fcc42703          	lw	a4,-52(s0)
200183ba:	cf98                	sw	a4,24(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:145
        metal_clock_register_post_rate_change_callback(clock, &(uart->post_rate_change_callback));
200183bc:	fec42783          	lw	a5,-20(s0)
200183c0:	07d1                	addi	a5,a5,20
200183c2:	85be                	mv	a1,a5
200183c4:	fe842503          	lw	a0,-24(s0)
200183c8:	2251                	jal	2001854c <metal_clock_register_post_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:148
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
200183ca:	fec42783          	lw	a5,-20(s0)
200183ce:	fc842583          	lw	a1,-56(s0)
200183d2:	853e                	mv	a0,a5
200183d4:	95cfc0ef          	jal	ra,20014530 <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:150

    if (pinmux != NULL) {
200183d8:	fe442783          	lw	a5,-28(s0)
200183dc:	cb95                	beqz	a5,20018410 <__metal_driver_sifive_uart0_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:151
        long pinmux_output_selector = __metal_driver_sifive_uart0_pinmux_output_selector(guart);
200183de:	fcc42503          	lw	a0,-52(s0)
200183e2:	c15ff0ef          	jal	ra,20017ff6 <__metal_driver_sifive_uart0_pinmux_output_selector>
200183e6:	87aa                	mv	a5,a0
200183e8:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:152
        long pinmux_source_selector = __metal_driver_sifive_uart0_pinmux_source_selector(guart);
200183ec:	fcc42503          	lw	a0,-52(s0)
200183f0:	c47ff0ef          	jal	ra,20018036 <__metal_driver_sifive_uart0_pinmux_source_selector>
200183f4:	87aa                	mv	a5,a0
200183f6:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:153
        pinmux->gpio.vtable->enable_io(
200183fa:	fe442783          	lw	a5,-28(s0)
200183fe:	439c                	lw	a5,0(a5)
20018400:	53dc                	lw	a5,36(a5)
20018402:	fdc42603          	lw	a2,-36(s0)
20018406:	fe042583          	lw	a1,-32(s0)
2001840a:	fe442503          	lw	a0,-28(s0)
2001840e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:159
            (struct metal_gpio *) pinmux,
            pinmux_output_selector,
            pinmux_source_selector
        );
    }
}
20018410:	0001                	nop
20018412:	50f2                	lw	ra,60(sp)
20018414:	5462                	lw	s0,56(sp)
20018416:	6121                	addi	sp,sp,64
20018418:	8082                	ret

2001841a <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:48
typedef struct _metal_clock_callback_t metal_clock_callback;

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void _metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2001841a:	7179                	addi	sp,sp,-48
2001841c:	d606                	sw	ra,44(sp)
2001841e:	d422                	sw	s0,40(sp)
20018420:	1800                	addi	s0,sp,48
20018422:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:49
    const metal_clock_callback *current = list;
20018426:	fdc42783          	lw	a5,-36(s0)
2001842a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:50
    while (current) {
2001842e:	a831                	j	2001844a <_metal_clock_call_all_callbacks+0x30>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:51
        current->callback(current->priv);
20018430:	fec42783          	lw	a5,-20(s0)
20018434:	4398                	lw	a4,0(a5)
20018436:	fec42783          	lw	a5,-20(s0)
2001843a:	43dc                	lw	a5,4(a5)
2001843c:	853e                	mv	a0,a5
2001843e:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:52
        current = current->_next;
20018440:	fec42783          	lw	a5,-20(s0)
20018444:	479c                	lw	a5,8(a5)
20018446:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:50
    while (current) {
2001844a:	fec42783          	lw	a5,-20(s0)
2001844e:	f3ed                	bnez	a5,20018430 <_metal_clock_call_all_callbacks+0x16>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:54
    }
}
20018450:	0001                	nop
20018452:	50b2                	lw	ra,44(sp)
20018454:	5422                	lw	s0,40(sp)
20018456:	6145                	addi	sp,sp,48
20018458:	8082                	ret

2001845a <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:59

/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *_metal_clock_append_to_callbacks(metal_clock_callback *list, metal_clock_callback *const cb) {
2001845a:	7179                	addi	sp,sp,-48
2001845c:	d622                	sw	s0,44(sp)
2001845e:	1800                	addi	s0,sp,48
20018460:	fca42e23          	sw	a0,-36(s0)
20018464:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:60
    cb->_next = NULL;
20018468:	fd842783          	lw	a5,-40(s0)
2001846c:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:62

    if (!list) {
20018470:	fdc42783          	lw	a5,-36(s0)
20018474:	e781                	bnez	a5,2001847c <_metal_clock_append_to_callbacks+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:63
        return cb;
20018476:	fd842783          	lw	a5,-40(s0)
2001847a:	a035                	j	200184a6 <_metal_clock_append_to_callbacks+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:66
    }

    metal_clock_callback *current = list;
2001847c:	fdc42783          	lw	a5,-36(s0)
20018480:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68

    while ((current->_next) != NULL) {
20018484:	a031                	j	20018490 <_metal_clock_append_to_callbacks+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:69
        current = current->_next;
20018486:	fec42783          	lw	a5,-20(s0)
2001848a:	479c                	lw	a5,8(a5)
2001848c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68
    while ((current->_next) != NULL) {
20018490:	fec42783          	lw	a5,-20(s0)
20018494:	479c                	lw	a5,8(a5)
20018496:	fbe5                	bnez	a5,20018486 <_metal_clock_append_to_callbacks+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:72
    }

    current->_next = cb;
20018498:	fec42783          	lw	a5,-20(s0)
2001849c:	fd842703          	lw	a4,-40(s0)
200184a0:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:74

    return list;
200184a2:	fdc42783          	lw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:75
}
200184a6:	853e                	mv	a0,a5
200184a8:	5432                	lw	s0,44(sp)
200184aa:	6145                	addi	sp,sp,48
200184ac:	8082                	ret

200184ae <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:105
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) { return clk->vtable->get_rate_hz(clk); }
200184ae:	1101                	addi	sp,sp,-32
200184b0:	ce06                	sw	ra,28(sp)
200184b2:	cc22                	sw	s0,24(sp)
200184b4:	1000                	addi	s0,sp,32
200184b6:	fea42623          	sw	a0,-20(s0)
200184ba:	fec42783          	lw	a5,-20(s0)
200184be:	439c                	lw	a5,0(a5)
200184c0:	439c                	lw	a5,0(a5)
200184c2:	fec42503          	lw	a0,-20(s0)
200184c6:	9782                	jalr	a5
200184c8:	87aa                	mv	a5,a0
200184ca:	853e                	mv	a0,a5
200184cc:	40f2                	lw	ra,28(sp)
200184ce:	4462                	lw	s0,24(sp)
200184d0:	6105                	addi	sp,sp,32
200184d2:	8082                	ret

200184d4 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:122
 *
 * Prior to and after the rate change of the clock, this will call the registered
 * pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz)
{
200184d4:	7179                	addi	sp,sp,-48
200184d6:	d606                	sw	ra,44(sp)
200184d8:	d422                	sw	s0,40(sp)
200184da:	1800                	addi	s0,sp,48
200184dc:	fca42e23          	sw	a0,-36(s0)
200184e0:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:123
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
200184e4:	fdc42783          	lw	a5,-36(s0)
200184e8:	43dc                	lw	a5,4(a5)
200184ea:	853e                	mv	a0,a5
200184ec:	373d                	jal	2001841a <_metal_clock_call_all_callbacks>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:125

    long out = clk->vtable->set_rate_hz(clk, hz);
200184ee:	fdc42783          	lw	a5,-36(s0)
200184f2:	439c                	lw	a5,0(a5)
200184f4:	43dc                	lw	a5,4(a5)
200184f6:	fd842583          	lw	a1,-40(s0)
200184fa:	fdc42503          	lw	a0,-36(s0)
200184fe:	9782                	jalr	a5
20018500:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:127

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20018504:	fdc42783          	lw	a5,-36(s0)
20018508:	479c                	lw	a5,8(a5)
2001850a:	853e                	mv	a0,a5
2001850c:	3739                	jal	2001841a <_metal_clock_call_all_callbacks>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:129

    return out;
2001850e:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:130
}
20018512:	853e                	mv	a0,a5
20018514:	50b2                	lw	ra,44(sp)
20018516:	5422                	lw	s0,40(sp)
20018518:	6145                	addi	sp,sp,48
2001851a:	8082                	ret

2001851c <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:139
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_pre_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
2001851c:	1101                	addi	sp,sp,-32
2001851e:	ce06                	sw	ra,28(sp)
20018520:	cc22                	sw	s0,24(sp)
20018522:	1000                	addi	s0,sp,32
20018524:	fea42623          	sw	a0,-20(s0)
20018528:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:140
    clk->_pre_rate_change_callback = _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
2001852c:	fec42783          	lw	a5,-20(s0)
20018530:	43dc                	lw	a5,4(a5)
20018532:	fe842583          	lw	a1,-24(s0)
20018536:	853e                	mv	a0,a5
20018538:	370d                	jal	2001845a <_metal_clock_append_to_callbacks>
2001853a:	872a                	mv	a4,a0
2001853c:	fec42783          	lw	a5,-20(s0)
20018540:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:141
}
20018542:	0001                	nop
20018544:	40f2                	lw	ra,28(sp)
20018546:	4462                	lw	s0,24(sp)
20018548:	6105                	addi	sp,sp,32
2001854a:	8082                	ret

2001854c <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:150
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_post_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
2001854c:	1101                	addi	sp,sp,-32
2001854e:	ce06                	sw	ra,28(sp)
20018550:	cc22                	sw	s0,24(sp)
20018552:	1000                	addi	s0,sp,32
20018554:	fea42623          	sw	a0,-20(s0)
20018558:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:151
    clk->_post_rate_change_callback = _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
2001855c:	fec42783          	lw	a5,-20(s0)
20018560:	479c                	lw	a5,8(a5)
20018562:	fe842583          	lw	a1,-24(s0)
20018566:	853e                	mv	a0,a5
20018568:	3dcd                	jal	2001845a <_metal_clock_append_to_callbacks>
2001856a:	872a                	mv	a4,a0
2001856c:	fec42783          	lw	a5,-20(s0)
20018570:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:152
}
20018572:	0001                	nop
20018574:	40f2                	lw	ra,28(sp)
20018576:	4462                	lw	s0,24(sp)
20018578:	6105                	addi	sp,sp,32
2001857a:	8082                	ret

2001857c <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/cpu.h:208
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt* metal_cpu_interrupt_controller(struct metal_cpu *cpu)
{ return cpu->vtable->controller_interrupt(cpu); }
2001857c:	1101                	addi	sp,sp,-32
2001857e:	ce06                	sw	ra,28(sp)
20018580:	cc22                	sw	s0,24(sp)
20018582:	1000                	addi	s0,sp,32
20018584:	fea42623          	sw	a0,-20(s0)
20018588:	fec42783          	lw	a5,-20(s0)
2001858c:	439c                	lw	a5,0(a5)
2001858e:	57dc                	lw	a5,44(a5)
20018590:	fec42503          	lw	a0,-20(s0)
20018594:	9782                	jalr	a5
20018596:	87aa                	mv	a5,a0
20018598:	853e                	mv	a0,a5
2001859a:	40f2                	lw	ra,28(sp)
2001859c:	4462                	lw	s0,24(sp)
2001859e:	6105                	addi	sp,sp,32
200185a0:	8082                	ret

200185a2 <metal_cpu_get>:
metal_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:8

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu* metal_cpu_get(unsigned int hartid)
{
200185a2:	1101                	addi	sp,sp,-32
200185a4:	ce22                	sw	s0,28(sp)
200185a6:	1000                	addi	s0,sp,32
200185a8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:9
    if (hartid < __METAL_DT_MAX_HARTS) {
200185ac:	fec42783          	lw	a5,-20(s0)
200185b0:	eb99                	bnez	a5,200185c6 <metal_cpu_get+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:10
        return (struct metal_cpu *)__metal_cpu_table[hartid];
200185b2:	800017b7          	lui	a5,0x80001
200185b6:	fec42703          	lw	a4,-20(s0)
200185ba:	070a                	slli	a4,a4,0x2
200185bc:	26078793          	addi	a5,a5,608 # 80001260 <metal_segment_heap_target_end+0xfffff014>
200185c0:	97ba                	add	a5,a5,a4
200185c2:	439c                	lw	a5,0(a5)
200185c4:	a011                	j	200185c8 <metal_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:12
    }   
    return NULL;
200185c6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:13
}
200185c8:	853e                	mv	a0,a5
200185ca:	4472                	lw	s0,28(sp)
200185cc:	6105                	addi	sp,sp,32
200185ce:	8082                	ret

200185d0 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:16

int metal_cpu_get_current_hartid()
{
200185d0:	1101                	addi	sp,sp,-32
200185d2:	ce22                	sw	s0,28(sp)
200185d4:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:19
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r" (mhartid));
200185d6:	f14027f3          	csrr	a5,mhartid
200185da:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:20
    return mhartid;
200185de:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:22
#endif
}
200185e2:	853e                	mv	a0,a5
200185e4:	4472                	lw	s0,28(sp)
200185e6:	6105                	addi	sp,sp,32
200185e8:	8082                	ret

200185ea <metal_shutdown>:
metal_shutdown():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message("There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code)
{
200185ea:	1101                	addi	sp,sp,-32
200185ec:	ce22                	sw	s0,28(sp)
200185ee:	1000                	addi	s0,sp,32
200185f0:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
      __asm__ volatile ("nop");
200185f4:	0001                	nop
200185f6:	bffd                	j	200185f4 <metal_shutdown+0xa>
	...

20018600 <__metal_vector_table>:
IRQ_0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20018600:	893fc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018604 <IRQ_1>:
IRQ_1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20018604:	88ffc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018608 <IRQ_2>:
IRQ_2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20018608:	88bfc06f          	j	20014e92 <metal_interrupt_vector_handler>

2001860c <IRQ_3>:
IRQ_3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2001860c:	8b5fc06f          	j	20014ec0 <metal_software_interrupt_vector_handler>

20018610 <IRQ_4>:
IRQ_4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20018610:	883fc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018614 <IRQ_5>:
IRQ_5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20018614:	87ffc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018618 <IRQ_6>:
IRQ_6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20018618:	87bfc06f          	j	20014e92 <metal_interrupt_vector_handler>

2001861c <IRQ_7>:
IRQ_7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2001861c:	99ffc06f          	j	20014fba <metal_timer_interrupt_vector_handler>

20018620 <IRQ_8>:
IRQ_8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20018620:	873fc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018624 <IRQ_9>:
IRQ_9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20018624:	86ffc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018628 <IRQ_10>:
IRQ_10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20018628:	86bfc06f          	j	20014e92 <metal_interrupt_vector_handler>

2001862c <IRQ_11>:
IRQ_11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2001862c:	867fc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018630 <IRQ_12>:
IRQ_12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20018630:	863fc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018634 <IRQ_13>:
IRQ_13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20018634:	85ffc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018638 <IRQ_14>:
IRQ_14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20018638:	85bfc06f          	j	20014e92 <metal_interrupt_vector_handler>

2001863c <IRQ_15>:
IRQ_15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2001863c:	857fc06f          	j	20014e92 <metal_interrupt_vector_handler>

20018640 <IRQ_LC0>:
IRQ_LC0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20018640:	c39fc06f          	j	20015278 <metal_lc0_interrupt_vector_handler>

20018644 <IRQ_LC1>:
IRQ_LC1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20018644:	ccbfc06f          	j	2001530e <metal_lc1_interrupt_vector_handler>

20018648 <IRQ_LC2>:
IRQ_LC2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20018648:	d5dfc06f          	j	200153a4 <metal_lc2_interrupt_vector_handler>

2001864c <IRQ_LC3>:
IRQ_LC3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2001864c:	deffc06f          	j	2001543a <metal_lc3_interrupt_vector_handler>

20018650 <IRQ_LC4>:
IRQ_LC4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20018650:	e81fc06f          	j	200154d0 <metal_lc4_interrupt_vector_handler>

20018654 <IRQ_LC5>:
IRQ_LC5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20018654:	f13fc06f          	j	20015566 <metal_lc5_interrupt_vector_handler>

20018658 <IRQ_LC6>:
IRQ_LC6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20018658:	fa5fc06f          	j	200155fc <metal_lc6_interrupt_vector_handler>

2001865c <IRQ_LC7>:
IRQ_LC7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2001865c:	836fd06f          	j	20015692 <metal_lc7_interrupt_vector_handler>

20018660 <IRQ_LC8>:
IRQ_LC8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20018660:	8c8fd06f          	j	20015728 <metal_lc8_interrupt_vector_handler>

20018664 <IRQ_LC9>:
IRQ_LC9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20018664:	95afd06f          	j	200157be <metal_lc9_interrupt_vector_handler>

20018668 <IRQ_LC10>:
IRQ_LC10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20018668:	9ecfd06f          	j	20015854 <metal_lc10_interrupt_vector_handler>

2001866c <IRQ_LC11>:
IRQ_LC11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2001866c:	a7efd06f          	j	200158ea <metal_lc11_interrupt_vector_handler>

20018670 <IRQ_LC12>:
IRQ_LC12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20018670:	b10fd06f          	j	20015980 <metal_lc12_interrupt_vector_handler>

20018674 <IRQ_LC13>:
IRQ_LC13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20018674:	ba2fd06f          	j	20015a16 <metal_lc13_interrupt_vector_handler>

20018678 <IRQ_LC14>:
IRQ_LC14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20018678:	c34fd06f          	j	20015aac <metal_lc14_interrupt_vector_handler>

2001867c <IRQ_LC15>:
IRQ_LC15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2001867c:	cc6fd06f          	j	20015b42 <metal_lc15_interrupt_vector_handler>

20018680 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:178
{
20018680:	1101                	addi	sp,sp,-32
20018682:	ce22                	sw	s0,28(sp)
20018684:	1000                	addi	s0,sp,32
20018686:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:179
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2001868a:	fec42703          	lw	a4,-20(s0)
2001868e:	800017b7          	lui	a5,0x80001
20018692:	83078793          	addi	a5,a5,-2000 # 80000830 <metal_segment_heap_target_end+0xffffe5e4>
20018696:	00f71763          	bne	a4,a5,200186a4 <__metal_driver_fixed_clock_rate+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:180
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2001869a:	00f427b7          	lui	a5,0xf42
2001869e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
200186a2:	a099                	j	200186e8 <__metal_driver_fixed_clock_rate+0x68>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:182
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
200186a4:	fec42703          	lw	a4,-20(s0)
200186a8:	800017b7          	lui	a5,0x80001
200186ac:	83c78793          	addi	a5,a5,-1988 # 8000083c <metal_segment_heap_target_end+0xffffe5f0>
200186b0:	00f71763          	bne	a4,a5,200186be <__metal_driver_fixed_clock_rate+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:183
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
200186b4:	044aa7b7          	lui	a5,0x44aa
200186b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
200186bc:	a035                	j	200186e8 <__metal_driver_fixed_clock_rate+0x68>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:185
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
200186be:	fec42703          	lw	a4,-20(s0)
200186c2:	800017b7          	lui	a5,0x80001
200186c6:	84878793          	addi	a5,a5,-1976 # 80000848 <metal_segment_heap_target_end+0xffffe5fc>
200186ca:	00f71463          	bne	a4,a5,200186d2 <__metal_driver_fixed_clock_rate+0x52>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:186
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
200186ce:	67a1                	lui	a5,0x8
200186d0:	a821                	j	200186e8 <__metal_driver_fixed_clock_rate+0x68>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:188
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
200186d2:	fec42703          	lw	a4,-20(s0)
200186d6:	800017b7          	lui	a5,0x80001
200186da:	85478793          	addi	a5,a5,-1964 # 80000854 <metal_segment_heap_target_end+0xffffe608>
200186de:	00f71463          	bne	a4,a5,200186e6 <__metal_driver_fixed_clock_rate+0x66>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:189
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
200186e2:	67a1                	lui	a5,0x8
200186e4:	a011                	j	200186e8 <__metal_driver_fixed_clock_rate+0x68>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:192
		return 0;
200186e6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:194
}
200186e8:	853e                	mv	a0,a5
200186ea:	4472                	lw	s0,28(sp)
200186ec:	6105                	addi	sp,sp,32
200186ee:	8082                	ret

200186f0 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
#include <metal/drivers/fixed-clock.h>
#include <stddef.h>
#include <metal/machine.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk)
{
200186f0:	1101                	addi	sp,sp,-32
200186f2:	ce06                	sw	ra,28(sp)
200186f4:	cc22                	sw	s0,24(sp)
200186f6:	1000                	addi	s0,sp,32
200186f8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
    return __metal_driver_fixed_clock_rate(gclk);
200186fc:	fec42503          	lw	a0,-20(s0)
20018700:	3741                	jal	20018680 <__metal_driver_fixed_clock_rate>
20018702:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:15
}
20018704:	853e                	mv	a0,a5
20018706:	40f2                	lw	ra,28(sp)
20018708:	4462                	lw	s0,24(sp)
2001870a:	6105                	addi	sp,sp,32
2001870c:	8082                	ret

2001870e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk, long target_hz)
{
2001870e:	1101                	addi	sp,sp,-32
20018710:	ce06                	sw	ra,28(sp)
20018712:	cc22                	sw	s0,24(sp)
20018714:	1000                	addi	s0,sp,32
20018716:	fea42623          	sw	a0,-20(s0)
2001871a:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2001871e:	fec42503          	lw	a0,-20(s0)
20018722:	37f9                	jal	200186f0 <__metal_driver_fixed_clock_get_rate_hz>
20018724:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:20
}
20018726:	853e                	mv	a0,a5
20018728:	40f2                	lw	ra,28(sp)
2001872a:	4462                	lw	s0,24(sp)
2001872c:	6105                	addi	sp,sp,32
2001872e:	8082                	ret

20018730 <_exit>:
_exit():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:5
#include <metal/shutdown.h>

void
_exit(int exit_status)
{
20018730:	1101                	addi	sp,sp,-32
20018732:	ce06                	sw	ra,28(sp)
20018734:	cc22                	sw	s0,24(sp)
20018736:	1000                	addi	s0,sp,32
20018738:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:6
  metal_shutdown(exit_status);
2001873c:	fec42503          	lw	a0,-20(s0)
20018740:	eabff0ef          	jal	ra,200185ea <metal_shutdown>
