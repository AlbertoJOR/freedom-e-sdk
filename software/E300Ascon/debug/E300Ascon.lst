
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/debug/E300Ascon.elf:     file format elf32-littleriscv
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/debug/E300Ascon.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x0000939c memsz 0x0000939c flags rwx
    LOAD off    0x0000a7b0 vaddr 0x800007b0 paddr 0x800007b0 align 2**12
         filesz 0x00000000 memsz 0x00000d24 flags rw-
    LOAD off    0x0000b000 vaddr 0x80000000 paddr 0x204093a0 align 2**12
         filesz 0x000007b0 memsz 0x000007b0 flags rw-
    LOAD off    0x0000b7b0 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x0000b7b0 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             00000194  20400000  20400000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text             00008900  20400200  20400200  00001200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata           00000898  20408b00  20408b00  00009b00  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array       00000004  20409398  20409398  0000a398  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .data             000007b0  80000000  204093a0  0000b000  2**3  CONTENTS, ALLOC, LOAD, DATA
  5 .bss              00000124  800007b0  800007b0  0000a7b0  2**3  ALLOC
  6 .stack            00000400  800008d4  800008d4  0000a7b0  2**0  ALLOC
  7 .heap             00000800  80000cd4  80000cd4  0000a7b0  2**0  ALLOC
  8 .debug_info       00019be2  00000000  00000000  0000b7b0  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev     00003e29  00000000  00000000  00025392  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges    00000ac8  00000000  00000000  000291c0  2**3  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges     000012f8  00000000  00000000  00029c88  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_line       0000f843  00000000  00000000  0002af80  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_str        00004196  00000000  00000000  0003a7c3  2**0  CONTENTS, READONLY, DEBUGGING
 14 .comment          00000028  00000000  00000000  0003e959  2**0  CONTENTS, READONLY
 15 .riscv.attributes 0000002b  00000000  00000000  0003e981  2**0  CONTENTS, READONLY
 16 .debug_frame      00002a18  00000000  00000000  0003e9ac  2**2  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc        00006236  00000000  00000000  000413c4  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
20400200 l    d  .text	00000000 .text
20408b00 l    d  .rodata	00000000 .rodata
20409398 l    d  .init_array	00000000 .init_array
80000000 l    d  .data	00000000 .data
800007b0 l    d  .bss	00000000 .bss
800008d4 l    d  .stack	00000000 .stack
80000cd4 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 libriscv__mmachine__freedom-e310-arty-xmem_a-entry.o
20400060 l       .init	00000000 early_trap_vector
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400136 l       .init	00000000 _skip_init
20409048 l       .rodata	00000000 argv
2040904c l       .rodata	00000000 envp
20409050 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 E300Ascon.c
80000000 l     O .data	00000020 plain_text.2879
80000020 l     O .data	00000020 asso_text.2880
800007b4 l     O .bss	00000020 cipher_text.2881
800007d4 l     O .bss	00000020 dumm_array.2882
80000834 l     O .bss	00000010 key.2884
80000824 l     O .bss	00000010 npub.2885
800007f4 l     O .bss	00000030 cipher_text_sw.2883
00000000 l    df *ABS*	00000000 aead.c
204004e4 l     F .text	000000c2 ROR
204005a6 l     F .text	000005ae ROUND
20400b54 l     F .text	0000008e P12
20400be2 l     F .text	00000052 P6
20400c34 l     F .text	000000a4 LOADBYTES
20400cd8 l     F .text	0000008e STOREBYTES
00000000 l    df *ABS*	00000000 printf.c
204012a2 l     F .text	00000020 _out_null
204012c2 l     F .text	00000032 _out_char
204012f4 l     F .text	0000004e _strnlen_s
20401342 l     F .text	00000038 _is_digit
2040137a l     F .text	0000005e _atoi
204013d8 l     F .text	00000108 _out_rev
204014e0 l     F .text	0000025e _ntoa_format
2040173e l     F .text	00000104 _ntoa_long
20401842 l     F .text	0000012e _ntoa_long_long
20401970 l     F .text	000005d2 _ftoa
20401f42 l     F .text	0000066e _etoa
20408e80 l     O .rodata	00000050 pow10.2193
204025b0 l     F .text	00000b7c _vsnprintf
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 fixunsdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000844 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 tty.c
20405424 l     F .text	00000022 metal_tty_init
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
204054ce l     F .text	0000002a __metal_driver_sifive_clint0_control_base
204054f8 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20405520 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
2040555c l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
204056bc l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20405bf4 l     F .text	00000024 __metal_driver_cpu_hartid
20405c18 l     F .text	0000002a __metal_driver_cpu_timebase
20405c42 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
00000000 l    df *ABS*	00000000 riscv_plic0.c
204074e2 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2040750c l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
20407534 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
2040755c l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20407584 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20407ace l     F .text	00000026 __metal_driver_sifive_gpio0_base
20407af4 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20407b1e l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20408386 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
204083b0 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
204083de l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20408406 l     F .text	0000002e __metal_driver_sifive_uart0_clock
20408434 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
2040845e l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_output_selector
20408488 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20408678 l     F .text	000000d8 pre_rate_change_callback_func
20408750 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 libriscv__mmachine__freedom-e310-arty-xmem_a-vector.o
20408a00 l       .text	00000000 IRQ_0
20408a04 l       .text	00000000 IRQ_1
20408a08 l       .text	00000000 IRQ_2
20408a0c l       .text	00000000 IRQ_3
20408a10 l       .text	00000000 IRQ_4
20408a14 l       .text	00000000 IRQ_5
20408a18 l       .text	00000000 IRQ_6
20408a1c l       .text	00000000 IRQ_7
20408a20 l       .text	00000000 IRQ_8
20408a24 l       .text	00000000 IRQ_9
20408a28 l       .text	00000000 IRQ_10
20408a2c l       .text	00000000 IRQ_11
20408a30 l       .text	00000000 IRQ_12
20408a34 l       .text	00000000 IRQ_13
20408a38 l       .text	00000000 IRQ_14
20408a3c l       .text	00000000 IRQ_15
20408a40 l       .text	00000000 IRQ_LC0
20408a44 l       .text	00000000 IRQ_LC1
20408a48 l       .text	00000000 IRQ_LC2
20408a4c l       .text	00000000 IRQ_LC3
20408a50 l       .text	00000000 IRQ_LC4
20408a54 l       .text	00000000 IRQ_LC5
20408a58 l       .text	00000000 IRQ_LC6
20408a5c l       .text	00000000 IRQ_LC7
20408a60 l       .text	00000000 IRQ_LC8
20408a64 l       .text	00000000 IRQ_LC9
20408a68 l       .text	00000000 IRQ_LC10
20408a6c l       .text	00000000 IRQ_LC11
20408a70 l       .text	00000000 IRQ_LC12
20408a74 l       .text	00000000 IRQ_LC13
20408a78 l       .text	00000000 IRQ_LC14
20408a7c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20408a80 l     F .text	0000002e __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
80000040 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
2040939c l       .init_array	00000000 __fini_array_end
2040939c l       .init_array	00000000 __fini_array_start
2040939c l       .init_array	00000000 __init_array_end
20409398 l       .init_array	00000000 __preinit_array_end
20409398 l       .init_array	00000000 __init_array_start
20409398 l       .init_array	00000000 __preinit_array_start
20409378 g     O .rodata	00000020 __metal_driver_vtable_sifive_uart0
20406452  w    F .text	00000096 metal_lc4_interrupt_vector_handler
2040127c g     F .text	00000026 _putchar
204085d8 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20405898 g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
2040439a g     F .text	0000006a .hidden __eqdf2
204063bc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20400200 g     F .text	0000001e rdcycle
20406c42 g     F .text	00000038 __metal_valid_interrupt_id
20407068 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000f88 g       .data	00000000 __global_pointer$
20408852 g     F .text	00000054 _metal_clock_append_to_callbacks
204075d4 g     F .text	00000038 __metal_plic0_complete_interrupt
20406ec2 g     F .text	0000014e __metal_driver_riscv_cpu_controller_interrupt_register
2040892c g     F .text	0000002e metal_cpu_get
80000768 g     O .data	00000020 __metal_dt_serial_10013000
20407f60 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
2040905c g     O .rodata	0000004c __metal_driver_vtable_riscv_clint0
800008d4 g       .bss	00000000 metal_segment_bss_target_end
2040558c g     F .text	0000009a __metal_clint0_mtime_get
20407476 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000000 g       *ABS*	00000000 __metal_chicken_bit
20407d10 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20404404 g     F .text	000000a4 .hidden __gtdf2
204051ac g     F .text	0000000c __errno
08000000 g       .init_array	00000000 metal_segment_itim_target_start
204084f2 g     F .text	00000032 __metal_driver_sifive_uart0_txready
20400070 g     F .init	0000000e __metal_synchronize_harts
800007b0 g       .bss	00000000 metal_segment_bss_target_start
20405626 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
204081b0 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800008d0 g     O .bss	00000004 errno
00000400 g       *ABS*	00000000 __stack_size
204088a6 g     F .text	00000030 metal_clock_register_pre_rate_change_callback
20406740  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204092b0 g     O .rodata	0000004c __metal_driver_vtable_riscv_plic0
20409270 g     O .rodata	00000040 __metal_driver_vtable_cpu
204054a0 g     F .text	0000002e metal_uart_set_baud_rate
20408780 g     F .text	000000d2 __metal_driver_sifive_uart0_init
204070fc g     F .text	00000072 __metal_driver_cpu_mcycle_get
80000cd4 g       .heap	00000000 metal_segment_heap_target_start
8000079c g     O .data	00000004 __metal_dt_cpu_0
2040503e g     F .text	0000006a .hidden __floatsidf
204066aa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
204044a8 g     F .text	000000a4 .hidden __ltdf2
20406998  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20405dda g     F .text	00000018 __metal_default_exception_handler
20405bc0 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20407670 g     F .text	00000062 __metal_plic0_set_priority
20407084 g     F .text	0000005c __metal_driver_riscv_cpu_controller_set_vector_mode
20404fe2 g     F .text	0000005c .hidden __fixunsdfsi
20405c6c g     F .text	00000030 __metal_driver_cpu_get
20409224 g     O .rodata	0000004c __metal_driver_vtable_riscv_cpu_intc
20405cce g     F .text	00000018 __metal_interrupt_global_disable
20406614  w    F .text	00000096 metal_lc7_interrupt_vector_handler
204067d6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20407a86 g     F .text	00000048 __metal_driver_riscv_plic0_disable
20406d36 g     F .text	0000004e __metal_exception_register
20407290 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20407df2 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
20405eca g     F .text	00000068 __metal_default_sw_handler
20403872 g     F .text	000005f2 .hidden __adddf3
204088d6 g     F .text	00000030 metal_clock_register_post_rate_change_callback
204084b2 g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
20403520 g     F .text	00000352 .hidden __umoddi3
20407eb8 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
800007a4 g     O .data	00000008 __metal_driver_vtable_fixed_clock
8000078c g     O .data	00000004 _global_impure_ptr
20405f32  w    F .text	00000092 metal_timer_interrupt_vector_handler
2040521c g     F .text	0000006a __libc_init_array
20407e32 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2040686c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
204031c2 g     F .text	0000035e .hidden __udivdi3
204050a8 g     F .text	00000050 .hidden __floatunsidf
20407010 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20407dac g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20400174 g     F .init	00000002 _init
20405d30 g     F .text	0000001a __metal_interrupt_timer_disable
20407faa g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
2040734e g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
2040933c g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20407ef8 g     F .text	00000068 __metal_driver_sifive_gpio0_enable_io
204051e4 g     F .text	00000038 __libc_fini_array
20408338 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
204072d8 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20404f7e g     F .text	00000064 .hidden __fixdfsi
80000000 g       .data	00000000 metal_segment_data_target_start
20405d82 g     F .text	0000002c __metal_interrupt_local_enable
20405b8c g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
204053d2 g     F .text	0000002c metal_tty_putc
20407792 g     F .text	00000018 __metal_plic0_default_handler
20403182 g     F .text	00000012 write
800000a0 g     O .data	0000000c __metal_dt_clock_0
204044a8 g     F .text	000000a4 .hidden __ledf2
00000800 g       *ABS*	00000000 __heap_size
20405d66 g     F .text	0000001c __metal_interrupt_external_disable
204084d0 g     F .text	00000022 __metal_driver_sifive_uart0_get_interrupt_id
204070e0 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20406d84 g     F .text	0000013e __metal_driver_riscv_cpu_controller_interrupt_init
204050f8 g     F .text	0000003c .hidden __clzsi2
20407430 g     F .text	00000046 __metal_driver_cpu_exception_register
20405ce6 g     F .text	00000018 __metal_interrupt_software_enable
20406290  w    F .text	00000096 metal_lc1_interrupt_vector_handler
800007b0 g     O .bss	00000004 _global_atexit
20400d66 g     F .text	00000516 crypto_aead_encrypt
20406b5a g     F .text	00000050 __metal_controller_interrupt_vector_mode
2040530a g     F .text	000000c8 __call_exitprocs
80000cd4 g       .stack	00000000 _sp
2040007e g     F .init	00000000 _start
20407410 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
204074a4 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20405d4a g     F .text	0000001c __metal_interrupt_external_enable
20405286 g     F .text	00000084 __register_exitproc
20408524 g     F .text	0000003e __metal_driver_sifive_uart0_putc
20407838 g     F .text	00000144 __metal_driver_riscv_plic0_init
20407a3e g     F .text	00000048 __metal_driver_riscv_plic0_enable
20407d80 g     F .text	0000002c __metal_driver_sifive_gpio0_output
2040657e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20405c9c g     F .text	0000001a __metal_myhart_id
20408358 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20405e38  w    F .text	00000092 metal_software_interrupt_vector_handler
2040703c g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
204085b8 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
2040577a g     F .text	000000da __metal_driver_riscv_clint0_register
80000794 g     O .data	00000008 __metal_dt_clint_2000000
20403e64 g     F .text	00000536 .hidden __divdf3
2040454c g     F .text	0000043c .hidden __muldf3
20407cd2 g     F .text	0000003e __metal_driver_sifive_gpio0_enable_input
20400176  w    F .init	00000000 secondary_main
20405e0a  w    F .text	0000002e metal_interrupt_vector_handler
20407644 g     F .text	0000002c __metal_plic0_get_threshold
20406c7a g     F .text	000000bc __metal_local_interrupt_enable
20405a56 g     F .text	00000136 __metal_driver_riscv_clint0_command_request
204064e8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
2040021e g     F .text	000002c6 main
800007b0 g       .data	00000000 metal_segment_data_target_end
204072ec g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
204073b0 g     F .text	00000060 __metal_driver_cpu_get_msip
20408974 g     F .text	0000000e metal_shutdown
08000000 g       .init_array	00000000 metal_segment_itim_target_end
204074c2 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
204075a6 g     F .text	0000002e __metal_plic0_claim_interrupt
20406902  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040587c g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
2040716e g     F .text	00000046 __metal_driver_cpu_timebase_get
20400000 g       .init	00000000 _enter
2040895a g     F .text	0000001a metal_cpu_get_current_hartid
20408a00 g       .text	00000000 __metal_vector_table
204093a0 g       *ABS*	00000000 metal_segment_itim_source_start
80000790  w    O .data	00000004 __metal_cpu_table
2040439a g     F .text	0000006a .hidden __nedf2
800000b0 g     O .data	000003b8 __metal_dt_cpu_0_interrupt_controller
20400174 g     F .init	00000002 _fini
20408f48 g     O .rodata	00000100 .hidden __clz_tab
20405cb6 g     F .text	00000018 __metal_interrupt_global_enable
204051a2 g     F .text	0000000a atexit
204053fe g     F .text	00000026 metal_tty_putc_raw
20403194 g     F .text	0000002e _write_r
20405d16 g     F .text	0000001a __metal_interrupt_timer_enable
20408562 g     F .text	00000056 __metal_driver_sifive_uart0_getc
2040599e g     F .text	000000b8 __metal_driver_riscv_clint0_disable
80000788 g     O .data	00000004 _impure_ptr
2040721a g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20408aae g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
204058ec g     F .text	000000b2 __metal_driver_riscv_clint0_enable
204093a0 g       *ABS*	00000000 metal_segment_data_source_start
800014d4 g       .heap	00000000 metal_segment_heap_target_end
20406baa g     F .text	00000098 __metal_controller_interrupt_vector
80000468 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20407e72 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
2040312c g     F .text	00000056 printf_
20405fc4 g     F .text	00000066 __metal_default_timer_handler
20405134 g     F .text	0000006e _write
204077aa g     F .text	0000008e __metal_plic0_handler
20406326  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20406ac4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20408906 g     F .text	00000026 metal_cpu_interrupt_controller
204051b8 g     F .text	0000002c exit
20408acc g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
800007a0 g     O .data	00000004 __metal_dt_gpio_10012000
20405df2 g     F .text	00000018 __metal_default_interrupt_handler
20405472 g     F .text	0000002e metal_uart_putc
20407d56 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20406080 g     F .text	00000154 __metal_exception_handler
204061fa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20408aee g     F .text	00000012 _exit
204071b4 g     F .text	00000066 __metal_driver_cpu_mtime_get
20405854 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20404404 g     F .text	000000a4 .hidden __gedf2
20406a2e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
204056f2 g     F .text	00000088 __metal_driver_riscv_clint0_init
20404988 g     F .text	000005f6 .hidden __subdf3
204072aa g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20407706 g     F .text	0000008c __metal_plic0_enable
2040006e  w      .init	00000000 __register_frame_info
204072be g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20405dae g     F .text	0000002c __metal_interrupt_local_disable
20405cfe g     F .text	00000018 __metal_interrupt_software_disable
204076d2 g     F .text	00000034 __metal_plic0_get_priority
20405446 g     F .text	0000002c metal_uart_init
2040760c g     F .text	00000038 __metal_plic0_set_threshold
00000000 g       *ABS*	00000000 __metal_boot_hart
2040797c g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	f8818193          	addi	gp,gp,-120 # 80000f88 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:29
.option pop

    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400008:	00000297          	auipc	t0,0x0
2040000c:	05828293          	addi	t0,t0,88 # 20400060 <early_trap_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:30
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:32
    /* enable chicken bit if core is bullet series*/
    la t0, __metal_chicken_bit
20400014:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:33
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:34
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:43
     * C, so here we set up a C environment.  First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
20400020:	dfc00117          	auipc	sp,0xdfc00
20400024:	fe010113          	addi	sp,sp,-32 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:52
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    .weak __metal_before_start
    la ra, __metal_before_start
20400028:	dfc00097          	auipc	ra,0xdfc00
2040002c:	fd808093          	addi	ra,ra,-40 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:53
    beqz ra, 1f
20400030:	00008363          	beqz	ra,20400036 <_enter+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:54
    jalr ra
20400034:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:60
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400036:	f1402573          	csrr	a0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:61
    li a1, 0
2040003a:	4581                	li	a1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:62
    li a2, 0
2040003c:	4601                	li	a2,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:63
    call _start
2040003e:	2081                	jal	2040007e <_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:68

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400040:	dfc00097          	auipc	ra,0xdfc00
20400044:	fc008093          	addi	ra,ra,-64 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:69
    beqz ra, 1f
20400048:	00008363          	beqz	ra,2040004e <_enter+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:70
    jalr ra
2040004c:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:75
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2040004e:	00000297          	auipc	t0,0x0
20400052:	00c28293          	addi	t0,t0,12 # 2040005a <_enter+0x5a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:76
     csrw mtvec, t0
20400056:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:78
1:
     lw t1, 0(x0)
2040005a:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:79
     j 1b
2040005e:	bff5                	j	2040005a <_enter+0x5a>

20400060 <early_trap_vector>:
early_trap_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:89
 * you end up here then there's a bug in the early boot code somewhere. */
.section .text.metal.init.trapvec
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400060:	342022f3          	csrr	t0,mcause
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:90
    csrr t1, mepc
20400064:	34102373          	csrr	t1,mepc
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:91
    csrr t2, mtval
20400068:	343023f3          	csrr	t2,mtval
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:92
    j early_trap_vector
2040006c:	bfd5                	j	20400060 <early_trap_vector>

2040006e <__register_frame_info>:
__register_frame_info():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:105
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2040006e:	8082                	ret

20400070 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init")))
void __metal_synchronize_harts() {
20400070:	1141                	addi	sp,sp,-16
20400072:	c622                	sw	s0,12(sp)
20400074:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:61
        /* Wait for hart 0 to clear the MSIP bit */
        while (METAL_MSIP(msip_base, hart) == 1) ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400076:	0001                	nop
20400078:	4432                	lw	s0,12(sp)
2040007a:	0141                	addi	sp,sp,16
2040007c:	8082                	ret

2040007e <_start>:
_start():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
2040007e:	8406                	mv	s0,ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400080:	5fc01197          	auipc	gp,0x5fc01
20400084:	f0818193          	addi	gp,gp,-248 # 80000f88 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:51

  /* The METAL is designed for a bare-metal environment and therefor is expected
   * to define its own stack pointer.  We also align the stack pointer here
   * because the only RISC-V ABI that's currently defined mandates 16-byte
   * stack alignment. */
  la sp, _sp
20400088:	d4c18113          	addi	sp,gp,-692 # 80000cd4 <_sp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:54

  /* Increment by hartid number of stack sizes */
  li t0, 0
2040008c:	4281                	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:55
  la t1, __stack_size
2040008e:	40000313          	li	t1,1024
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:57
1:
  beq t0, a0, 1f
20400092:	00a28563          	beq	t0,a0,2040009c <_start+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:58
  add sp, sp, t1
20400096:	911a                	add	sp,sp,t1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:59
  addi t0, t0, 1
20400098:	0285                	addi	t0,t0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:60
  j 1b
2040009a:	bfe5                	j	20400092 <_start+0x14>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:62
1:
  andi sp, sp, -16
2040009c:	ff017113          	andi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:65

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
204000a0:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:66
  bne a0, t0, _skip_init
204000a4:	08551963          	bne	a0,t0,20400136 <_skip_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:75
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
204000a8:	00009297          	auipc	t0,0x9
204000ac:	2f828293          	addi	t0,t0,760 # 204093a0 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:76
  la t1, metal_segment_data_target_start
204000b0:	5fc00317          	auipc	t1,0x5fc00
204000b4:	f5030313          	addi	t1,t1,-176 # 80000000 <metal_segment_data_target_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:77
  la t2, metal_segment_data_target_end
204000b8:	82818393          	addi	t2,gp,-2008 # 800007b0 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:79

  beq t0, t1, 2f
204000bc:	00628c63          	beq	t0,t1,204000d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:80
  bge t1, t2, 2f
204000c0:	00735a63          	bge	t1,t2,204000d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:84

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204000c4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  addi t0, t0, 4
204000c8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  sw   a0, 0(t1)
204000ca:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:87
  addi t1, t1, 4
204000ce:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:88
  blt  t1, t2, 1b
204000d0:	fe734ae3          	blt	t1,t2,204000c4 <_start+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:99
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
204000d4:	00009297          	auipc	t0,0x9
204000d8:	2cc28293          	addi	t0,t0,716 # 204093a0 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:100
  la t1, metal_segment_itim_target_start
204000dc:	e7c00317          	auipc	t1,0xe7c00
204000e0:	f2430313          	addi	t1,t1,-220 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:101
  la t2, metal_segment_itim_target_end
204000e4:	e7c00397          	auipc	t2,0xe7c00
204000e8:	f1c38393          	addi	t2,t2,-228 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:103

  beq t0, t1, 2f
204000ec:	00628c63          	beq	t0,t1,20400104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:104
  bge t1, t2, 2f
204000f0:	00735a63          	bge	t1,t2,20400104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:108

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204000f4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:109
  addi t0, t0, 4
204000f8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:110
  sw   a0, 0(t1)
204000fa:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:111
  addi t1, t1, 4
204000fe:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:112
  blt  t1, t2, 1b
20400100:	fe734ae3          	blt	t1,t2,204000f4 <_start+0x76>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:124
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
20400104:	0000100f          	fence.i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:127

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20400108:	5fc00317          	auipc	t1,0x5fc00
2040010c:	6a830313          	addi	t1,t1,1704 # 800007b0 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:128
  la t2, metal_segment_bss_target_end
20400110:	94c18393          	addi	t2,gp,-1716 # 800008d4 <metal_segment_bss_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:130

  bge t1, t2, 2f
20400114:	00735763          	bge	t1,t2,20400122 <_start+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:134

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20400118:	00032023          	sw	zero,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:135
  addi t1, t1, 4
2040011c:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:136
  blt  t1, t2, 1b
2040011e:	fe734de3          	blt	t1,t2,20400118 <_start+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:147
2:

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400122:	c211                	beqz	a2,20400126 <_start+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:148
  jalr a2
20400124:	9602                	jalr	a2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:152
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400126:	00005517          	auipc	a0,0x5
2040012a:	0be50513          	addi	a0,a0,190 # 204051e4 <__libc_fini_array>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:153
  call atexit
2040012e:	074050ef          	jal	ra,204051a2 <atexit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:154
  call __libc_init_array
20400132:	0ea050ef          	jal	ra,2040521c <__libc_init_array>

20400136 <_skip_init>:
_skip_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:160

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400136:	3f2d                	jal	20400070 <__metal_synchronize_harts>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:163

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  csrr a5, misa
20400138:	301027f3          	csrr	a5,misa
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:164
  li   a4, 0x10028
2040013c:	00010737          	lui	a4,0x10
20400140:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:165
  and  a5, a5, a4
20400144:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:166
  beqz a5, 1f
20400146:	cb89                	beqz	a5,20400158 <_skip_init+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  csrr a5, mstatus
20400148:	300027f3          	csrr	a5,mstatus
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:168
  lui  a4, 0x2
2040014c:	6709                	lui	a4,0x2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:169
  or   a5, a5, a4
2040014e:	8fd9                	or	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:170
  csrw mstatus, a5
20400150:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:171
  csrwi fcsr, 0
20400154:	00305073          	csrwi	fcsr,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:177
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20400158:	4505                	li	a0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  la a1, argv  /* argv = {"libgloss", NULL} */
2040015a:	00009597          	auipc	a1,0x9
2040015e:	eee58593          	addi	a1,a1,-274 # 20409048 <argv>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  la a2, envp  /* envp = {NULL} */
20400162:	00009617          	auipc	a2,0x9
20400166:	eea60613          	addi	a2,a2,-278 # 2040904c <envp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:180
  call secondary_main
2040016a:	2031                	jal	20400176 <secondary_main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:186

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2040016c:	04c050ef          	jal	ra,204051b8 <exit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:191

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
20400170:	80a2                	mv	ra,s0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:192
  ret
20400172:	8082                	ret

20400174 <_fini>:
_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:204
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
20400174:	8082                	ret

20400176 <secondary_main>:
secondary_main():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:215
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
20400176:	1141                	addi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:217
#if __riscv_xlen == 32
  sw ra, 4(sp)
20400178:	c206                	sw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:221
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
2040017a:	f14022f3          	csrr	t0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  la t1, __metal_boot_hart
2040017e:	00000313          	li	t1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  beq t0, t1, 2f
20400182:	00628563          	beq	t0,t1,2040018c <secondary_main+0x16>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:225
1:
  wfi
20400186:	10500073          	wfi
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  j 1b
2040018a:	bff5                	j	20400186 <secondary_main+0x10>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:228
2:
  call main
2040018c:	2849                	jal	2040021e <main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:230
#if __riscv_xlen == 32
  lw ra, 4(sp)
2040018e:	4092                	lw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:234
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
20400190:	0141                	addi	sp,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  ret
20400192:	8082                	ret

Disassembly of section .text:

20400200 <rdcycle>:
rdcycle():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:49

#define rdtime() read_csr(time)
//#define rdcycle() read_csr(cycle)
#define rdinstret() read_csr(instret)

int rdcycle() {
20400200:	1101                	addi	sp,sp,-32
20400202:	ce22                	sw	s0,28(sp)
20400204:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:50
    int tmp = 0;
20400206:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:51
    asm __volatile__ ("csrr %[dst01], mcycle\n" : [dst01]"=r"(tmp) : : );
2040020a:	b00027f3          	csrr	a5,mcycle
2040020e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:52
    return tmp;
20400212:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:53
}
20400216:	853e                	mv	a0,a5
20400218:	4472                	lw	s0,28(sp)
2040021a:	6105                	addi	sp,sp,32
2040021c:	8082                	ret

2040021e <main>:
main():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:9
#include "aead.h"
#include "printf.h"
//#include "stdio.h"
#include "word.h"

int main(void) {
2040021e:	711d                	addi	sp,sp,-96
20400220:	ce86                	sw	ra,92(sp)
20400222:	cca2                	sw	s0,88(sp)
20400224:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:22
    static unsigned dumm_array [8]= {0};
    static unsigned cipher_text_sw [12]= {0};

    static unsigned key[4] ={0};
    static unsigned npub[4] ={0};
    unsigned plain_len = 10;
20400226:	4729                	li	a4,10
20400228:	fee42223          	sw	a4,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:23
    unsigned asso_len = 10; /// CReo que asignaste a memoria
2040022c:	4729                	li	a4,10
2040022e:	fee42023          	sw	a4,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:24
    unsigned long long int c_len = plain_len;
20400232:	fe442703          	lw	a4,-28(s0)
20400236:	87ba                	mv	a5,a4
20400238:	4801                	li	a6,0
2040023a:	faf42823          	sw	a5,-80(s0)
2040023e:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:25
    unsigned long long int p_len = plain_len;
20400242:	fe442783          	lw	a5,-28(s0)
20400246:	fcf42c23          	sw	a5,-40(s0)
2040024a:	fc042e23          	sw	zero,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:26
    unsigned long long int a_len = asso_len;
2040024e:	fe042783          	lw	a5,-32(s0)
20400252:	fcf42823          	sw	a5,-48(s0)
20400256:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:27
    unsigned plain_len_int = plain_len / 4 ;
2040025a:	fe442783          	lw	a5,-28(s0)
2040025e:	8389                	srli	a5,a5,0x2
20400260:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:28
    plain_len_int = (plain_len % 4 == 0 )? plain_len_int :plain_len_int+1;
20400264:	fe442783          	lw	a5,-28(s0)
20400268:	8b8d                	andi	a5,a5,3
2040026a:	c789                	beqz	a5,20400274 <main+0x56>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:28 (discriminator 1)
2040026c:	fcc42783          	lw	a5,-52(s0)
20400270:	0785                	addi	a5,a5,1
20400272:	a019                	j	20400278 <main+0x5a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:28 (discriminator 2)
20400274:	fcc42783          	lw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:28 (discriminator 4)
20400278:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:31 (discriminator 4)


    printf("Init AEAD \n");
2040027c:	204097b7          	lui	a5,0x20409
20400280:	b0078513          	addi	a0,a5,-1280 # 20408b00 <_exit+0x12>
20400284:	6a9020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:33 (discriminator 4)
    unsigned start, end, HWcycles;
    int rd = 0;
20400288:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:35 (discriminator 4)
    // RoCC
    start = rdcycle();
2040028c:	3f95                	jal	20400200 <rdcycle>
2040028e:	87aa                	mv	a5,a0
20400290:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:36 (discriminator 4)
    write_csr(mstatus, MSTATUS_XS); // Always initialize the CSR such that the accelerator is recognized
20400294:	67e1                	lui	a5,0x18
20400296:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:39 (discriminator 4)

    //rd = AEAD_E_Set_P( plain_text, plain_len);
    asm volatile("fence");
2040029a:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:40 (discriminator 4)
    ROCC_INSTRUCTION_DSS(0,rd, plain_text, plain_len, Enc_Set_P );
2040029e:	800007b7          	lui	a5,0x80000
204002a2:	00078793          	mv	a5,a5
204002a6:	85be                	mv	a1,a5
204002a8:	fe442603          	lw	a2,-28(s0)
204002ac:	22c5f50b          	0x22c5f50b
204002b0:	87aa                	mv	a5,a0
204002b2:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:41 (discriminator 4)
    asm volatile("fence" ::: "memory");
204002b6:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:42 (discriminator 4)
    printf("Set Plain text finish length : %d \n", rd);
204002ba:	fc842583          	lw	a1,-56(s0)
204002be:	204097b7          	lui	a5,0x20409
204002c2:	b0c78513          	addi	a0,a5,-1268 # 20408b0c <_exit+0x1e>
204002c6:	667020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:45 (discriminator 4)

    //rd = AEAD_E_Set_AD(plain_text, plain_len );
    asm volatile("fence");
204002ca:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:46 (discriminator 4)
    ROCC_INSTRUCTION_DSS(0, rd,asso_text, asso_len, Enc_Set_AD );
204002ce:	800007b7          	lui	a5,0x80000
204002d2:	02078793          	addi	a5,a5,32 # 80000020 <metal_segment_heap_target_end+0xffffeb4c>
204002d6:	85be                	mv	a1,a5
204002d8:	fe042603          	lw	a2,-32(s0)
204002dc:	24c5f50b          	0x24c5f50b
204002e0:	87aa                	mv	a5,a0
204002e2:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:47 (discriminator 4)
    asm volatile("fence" ::: "memory");
204002e6:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:48 (discriminator 4)
    printf("Set Associated Data finish length: %d \n", rd);
204002ea:	fc842583          	lw	a1,-56(s0)
204002ee:	204097b7          	lui	a5,0x20409
204002f2:	b3078513          	addi	a0,a5,-1232 # 20408b30 <_exit+0x42>
204002f6:	637020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:51 (discriminator 4)

    // rd = AEAD_E_Set_C_Tag(cipher_text,dumm_array);
    asm volatile("fence");
204002fa:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:52 (discriminator 4)
    ROCC_INSTRUCTION_DSS(0,rd, cipher_text, dumm_array, Enc_Set_C_Tag );
204002fe:	800007b7          	lui	a5,0x80000
20400302:	7b478793          	addi	a5,a5,1972 # 800007b4 <metal_segment_heap_target_end+0xfffff2e0>
20400306:	85be                	mv	a1,a5
20400308:	800007b7          	lui	a5,0x80000
2040030c:	7d478793          	addi	a5,a5,2004 # 800007d4 <metal_segment_heap_target_end+0xfffff300>
20400310:	863e                	mv	a2,a5
20400312:	26c5f50b          	0x26c5f50b
20400316:	87aa                	mv	a5,a0
20400318:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:53 (discriminator 4)
    asm volatile("fence" ::: "memory");
2040031c:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:54 (discriminator 4)
    printf("Set Tag and C finish : %d \n", rd);
20400320:	fc842583          	lw	a1,-56(s0)
20400324:	204097b7          	lui	a5,0x20409
20400328:	b5878513          	addi	a0,a5,-1192 # 20408b58 <_exit+0x6a>
2040032c:	601020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:57 (discriminator 4)

    // rd = AEAD_E_Set_Nonce(dumm_array );
    asm volatile("fence");
20400330:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:58 (discriminator 4)
    ROCC_INSTRUCTION_DS(0,rd, dumm_array, Enc_Set_Nonce );
20400334:	800007b7          	lui	a5,0x80000
20400338:	7d478793          	addi	a5,a5,2004 # 800007d4 <metal_segment_heap_target_end+0xfffff300>
2040033c:	85be                	mv	a1,a5
2040033e:	2805e50b          	0x2805e50b
20400342:	87aa                	mv	a5,a0
20400344:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:59 (discriminator 4)
    asm volatile("fence" ::: "memory");
20400348:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:60 (discriminator 4)
    printf("Set Nonce finish : %d \n", rd);
2040034c:	fc842583          	lw	a1,-56(s0)
20400350:	204097b7          	lui	a5,0x20409
20400354:	b7478513          	addi	a0,a5,-1164 # 20408b74 <_exit+0x86>
20400358:	5d5020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:63 (discriminator 4)

    // rd = AEAD_E_Set_Key(rd);
    asm volatile("fence");
2040035c:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:64 (discriminator 4)
    ROCC_INSTRUCTION_DS(0,rd,  rd, Enc_Set_Key );
20400360:	fc842783          	lw	a5,-56(s0)
20400364:	85be                	mv	a1,a5
20400366:	2a05e50b          	0x2a05e50b
2040036a:	87aa                	mv	a5,a0
2040036c:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:65 (discriminator 4)
    asm volatile("fence" ::: "memory");
20400370:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:66 (discriminator 4)
    printf("Set Key  finish : %d \n", rd);
20400374:	fc842583          	lw	a1,-56(s0)
20400378:	204097b7          	lui	a5,0x20409
2040037c:	b8c78513          	addi	a0,a5,-1140 # 20408b8c <_exit+0x9e>
20400380:	5ad020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:69 (discriminator 4)

    //rd = AEAD_E_Set_Init();
    asm volatile("fence");
20400384:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:70 (discriminator 4)
    ROCC_INSTRUCTION_DS(0,rd, rd,  Enc_Init );
20400388:	fc842783          	lw	a5,-56(s0)
2040038c:	85be                	mv	a1,a5
2040038e:	2c05e50b          	0x2c05e50b
20400392:	87aa                	mv	a5,a0
20400394:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:71 (discriminator 4)
    asm volatile("fence" ::: "memory");
20400398:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:72 (discriminator 4)
    printf("Finish AEAD : %x \n", rd);
2040039c:	fc842583          	lw	a1,-56(s0)
204003a0:	204097b7          	lui	a5,0x20409
204003a4:	ba478513          	addi	a0,a5,-1116 # 20408ba4 <_exit+0xb6>
204003a8:	585020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:74 (discriminator 4)

    end = rdcycle();
204003ac:	3d91                	jal	20400200 <rdcycle>
204003ae:	87aa                	mv	a5,a0
204003b0:	fcf42023          	sw	a5,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:75 (discriminator 4)
    HWcycles = end - start;
204003b4:	fc042703          	lw	a4,-64(s0)
204003b8:	fc442783          	lw	a5,-60(s0)
204003bc:	40f707b3          	sub	a5,a4,a5
204003c0:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:76 (discriminator 4)
    printf("Total time = %d cycles\n",HWcycles);
204003c4:	fbc42583          	lw	a1,-68(s0)
204003c8:	204097b7          	lui	a5,0x20409
204003cc:	bb878513          	addi	a0,a5,-1096 # 20408bb8 <_exit+0xca>
204003d0:	55d020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:77 (discriminator 4)
    printf("Hardware \n");
204003d4:	204097b7          	lui	a5,0x20409
204003d8:	bd078513          	addi	a0,a5,-1072 # 20408bd0 <_exit+0xe2>
204003dc:	551020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:78 (discriminator 4)
    for(int i = 0; i < plain_len_int; i ++){
204003e0:	fe042623          	sw	zero,-20(s0)
204003e4:	a081                	j	20400424 <main+0x206>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:79
       if(i%2==0 ){
204003e6:	fec42783          	lw	a5,-20(s0)
204003ea:	8b85                	andi	a5,a5,1
204003ec:	e799                	bnez	a5,204003fa <main+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:80
            printf("\n");
204003ee:	204097b7          	lui	a5,0x20409
204003f2:	bdc78513          	addi	a0,a5,-1060 # 20408bdc <_exit+0xee>
204003f6:	537020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:82 (discriminator 2)
        }
        printf("%x ",cipher_text[i]);
204003fa:	800007b7          	lui	a5,0x80000
204003fe:	7b478713          	addi	a4,a5,1972 # 800007b4 <metal_segment_heap_target_end+0xfffff2e0>
20400402:	fec42783          	lw	a5,-20(s0)
20400406:	078a                	slli	a5,a5,0x2
20400408:	97ba                	add	a5,a5,a4
2040040a:	439c                	lw	a5,0(a5)
2040040c:	85be                	mv	a1,a5
2040040e:	204097b7          	lui	a5,0x20409
20400412:	be078513          	addi	a0,a5,-1056 # 20408be0 <_exit+0xf2>
20400416:	517020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:78 (discriminator 2)
    for(int i = 0; i < plain_len_int; i ++){
2040041a:	fec42783          	lw	a5,-20(s0)
2040041e:	0785                	addi	a5,a5,1
20400420:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:78 (discriminator 1)
20400424:	fec42783          	lw	a5,-20(s0)
20400428:	fcc42703          	lw	a4,-52(s0)
2040042c:	fae7ede3          	bltu	a5,a4,204003e6 <main+0x1c8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:86
    }


    crypto_aead_encrypt((unsigned char *)cipher_text_sw,&c_len,(unsigned char*)plain_text,p_len, (unsigned char*)asso_text,a_len,(unsigned char*)npub,(unsigned char*)key);
20400430:	fb040593          	addi	a1,s0,-80
20400434:	8ac18793          	addi	a5,gp,-1876 # 80000834 <key.2884>
20400438:	c23e                	sw	a5,4(sp)
2040043a:	89c18793          	addi	a5,gp,-1892 # 80000824 <npub.2885>
2040043e:	c03e                	sw	a5,0(sp)
20400440:	fd042803          	lw	a6,-48(s0)
20400444:	fd442883          	lw	a7,-44(s0)
20400448:	800007b7          	lui	a5,0x80000
2040044c:	02078793          	addi	a5,a5,32 # 80000020 <metal_segment_heap_target_end+0xffffeb4c>
20400450:	fd842683          	lw	a3,-40(s0)
20400454:	fdc42703          	lw	a4,-36(s0)
20400458:	80000637          	lui	a2,0x80000
2040045c:	00060613          	mv	a2,a2
20400460:	80000537          	lui	a0,0x80000
20400464:	7f450513          	addi	a0,a0,2036 # 800007f4 <metal_segment_heap_target_end+0xfffff320>
20400468:	0ff000ef          	jal	ra,20400d66 <crypto_aead_encrypt>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:88

    printf("\n");
2040046c:	204097b7          	lui	a5,0x20409
20400470:	bdc78513          	addi	a0,a5,-1060 # 20408bdc <_exit+0xee>
20400474:	4b9020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:89
    printf("Software");
20400478:	204097b7          	lui	a5,0x20409
2040047c:	be478513          	addi	a0,a5,-1052 # 20408be4 <_exit+0xf6>
20400480:	4ad020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:90
    for(int i = 0; i < plain_len_int + 4; i ++){
20400484:	fe042423          	sw	zero,-24(s0)
20400488:	a081                	j	204004c8 <main+0x2aa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:91
        if(i%2==0 ){
2040048a:	fe842783          	lw	a5,-24(s0)
2040048e:	8b85                	andi	a5,a5,1
20400490:	e799                	bnez	a5,2040049e <main+0x280>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:92
            printf("\n");
20400492:	204097b7          	lui	a5,0x20409
20400496:	bdc78513          	addi	a0,a5,-1060 # 20408bdc <_exit+0xee>
2040049a:	493020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:94 (discriminator 2)
        }
        printf("%x ",cipher_text_sw[i]);
2040049e:	800007b7          	lui	a5,0x80000
204004a2:	7f478713          	addi	a4,a5,2036 # 800007f4 <metal_segment_heap_target_end+0xfffff320>
204004a6:	fe842783          	lw	a5,-24(s0)
204004aa:	078a                	slli	a5,a5,0x2
204004ac:	97ba                	add	a5,a5,a4
204004ae:	439c                	lw	a5,0(a5)
204004b0:	85be                	mv	a1,a5
204004b2:	204097b7          	lui	a5,0x20409
204004b6:	be078513          	addi	a0,a5,-1056 # 20408be0 <_exit+0xf2>
204004ba:	473020ef          	jal	ra,2040312c <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:90 (discriminator 2)
    for(int i = 0; i < plain_len_int + 4; i ++){
204004be:	fe842783          	lw	a5,-24(s0)
204004c2:	0785                	addi	a5,a5,1
204004c4:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:90 (discriminator 1)
204004c8:	fcc42783          	lw	a5,-52(s0)
204004cc:	00478713          	addi	a4,a5,4
204004d0:	fe842783          	lw	a5,-24(s0)
204004d4:	fae7ebe3          	bltu	a5,a4,2040048a <main+0x26c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:98
    }


    return 0;
204004d8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:99
}
204004da:	853e                	mv	a0,a5
204004dc:	40f6                	lw	ra,92(sp)
204004de:	4466                	lw	s0,88(sp)
204004e0:	6125                	addi	sp,sp,96
204004e2:	8082                	ret

204004e4 <ROR>:
ROR():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:7
#define ROUND_H_

#include "ascon.h"
#include "constants.h"

static inline uint64_t ROR(uint64_t x, int n) {
204004e4:	1101                	addi	sp,sp,-32
204004e6:	ce22                	sw	s0,28(sp)
204004e8:	1000                	addi	s0,sp,32
204004ea:	fea42423          	sw	a0,-24(s0)
204004ee:	feb42623          	sw	a1,-20(s0)
204004f2:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:8
  return x >> n | x << (-n & 63);
204004f6:	fe842783          	lw	a5,-24(s0)
204004fa:	fec42803          	lw	a6,-20(s0)
204004fe:	fe442603          	lw	a2,-28(s0)
20400502:	1601                	addi	a2,a2,-32
20400504:	00064663          	bltz	a2,20400510 <ROR+0x2c>
20400508:	00c85333          	srl	t1,a6,a2
2040050c:	4381                	li	t2,0
2040050e:	a025                	j	20400536 <ROR+0x52>
20400510:	00181593          	slli	a1,a6,0x1
20400514:	457d                	li	a0,31
20400516:	fe442603          	lw	a2,-28(s0)
2040051a:	40c50633          	sub	a2,a0,a2
2040051e:	00c59633          	sll	a2,a1,a2
20400522:	fe442583          	lw	a1,-28(s0)
20400526:	00b7d333          	srl	t1,a5,a1
2040052a:	00666333          	or	t1,a2,t1
2040052e:	fe442603          	lw	a2,-28(s0)
20400532:	00c853b3          	srl	t2,a6,a2
20400536:	fe442603          	lw	a2,-28(s0)
2040053a:	40c00633          	neg	a2,a2
2040053e:	03f67613          	andi	a2,a2,63
20400542:	1601                	addi	a2,a2,-32
20400544:	00064663          	bltz	a2,20400550 <ROR+0x6c>
20400548:	00c79733          	sll	a4,a5,a2
2040054c:	4681                	li	a3,0
2040054e:	a83d                	j	2040058c <ROR+0xa8>
20400550:	0017d593          	srli	a1,a5,0x1
20400554:	457d                	li	a0,31
20400556:	fe442603          	lw	a2,-28(s0)
2040055a:	40c00633          	neg	a2,a2
2040055e:	03f67613          	andi	a2,a2,63
20400562:	40c50633          	sub	a2,a0,a2
20400566:	00c5d633          	srl	a2,a1,a2
2040056a:	fe442583          	lw	a1,-28(s0)
2040056e:	40b005b3          	neg	a1,a1
20400572:	03f5f593          	andi	a1,a1,63
20400576:	00b81733          	sll	a4,a6,a1
2040057a:	8f51                	or	a4,a4,a2
2040057c:	fe442603          	lw	a2,-28(s0)
20400580:	40c00633          	neg	a2,a2
20400584:	03f67613          	andi	a2,a2,63
20400588:	00c796b3          	sll	a3,a5,a2
2040058c:	0066ee33          	or	t3,a3,t1
20400590:	00776eb3          	or	t4,a4,t2
20400594:	86f2                	mv	a3,t3
20400596:	8776                	mv	a4,t4
20400598:	87b6                	mv	a5,a3
2040059a:	883a                	mv	a6,a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:9
}
2040059c:	853e                	mv	a0,a5
2040059e:	85c2                	mv	a1,a6
204005a0:	4472                	lw	s0,28(sp)
204005a2:	6105                	addi	sp,sp,32
204005a4:	8082                	ret

204005a6 <ROUND>:
ROUND():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:11

static inline void ROUND(ascon_state_t* s, uint8_t C) {
204005a6:	7169                	addi	sp,sp,-304
204005a8:	12112623          	sw	ra,300(sp)
204005ac:	12812423          	sw	s0,296(sp)
204005b0:	13212223          	sw	s2,292(sp)
204005b4:	13312023          	sw	s3,288(sp)
204005b8:	11412e23          	sw	s4,284(sp)
204005bc:	11512c23          	sw	s5,280(sp)
204005c0:	11612a23          	sw	s6,276(sp)
204005c4:	11712823          	sw	s7,272(sp)
204005c8:	11812623          	sw	s8,268(sp)
204005cc:	11912423          	sw	s9,264(sp)
204005d0:	11a12223          	sw	s10,260(sp)
204005d4:	11b12023          	sw	s11,256(sp)
204005d8:	1a00                	addi	s0,sp,304
204005da:	f8a42e23          	sw	a0,-100(s0)
204005de:	87ae                	mv	a5,a1
204005e0:	f8f40da3          	sb	a5,-101(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:14
  ascon_state_t t;
  /* addition of round constant */
  s->x[2] ^= C;
204005e4:	f9c42783          	lw	a5,-100(s0)
204005e8:	4b94                	lw	a3,16(a5)
204005ea:	4bd8                	lw	a4,20(a5)
204005ec:	f9b44783          	lbu	a5,-101(s0)
204005f0:	0ff7f793          	andi	a5,a5,255
204005f4:	883e                	mv	a6,a5
204005f6:	4881                	li	a7,0
204005f8:	0106c333          	xor	t1,a3,a6
204005fc:	011743b3          	xor	t2,a4,a7
20400600:	f9c42783          	lw	a5,-100(s0)
20400604:	0067a823          	sw	t1,16(a5)
20400608:	0077aa23          	sw	t2,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:17
  /* printstate(" round constant", s); */
  /* substitution layer */
  s->x[0] ^= s->x[4];
2040060c:	f9c42783          	lw	a5,-100(s0)
20400610:	4394                	lw	a3,0(a5)
20400612:	43d8                	lw	a4,4(a5)
20400614:	f9c42783          	lw	a5,-100(s0)
20400618:	0247a803          	lw	a6,36(a5)
2040061c:	539c                	lw	a5,32(a5)
2040061e:	00f6ce33          	xor	t3,a3,a5
20400622:	01074eb3          	xor	t4,a4,a6
20400626:	f9c42783          	lw	a5,-100(s0)
2040062a:	01c7a023          	sw	t3,0(a5)
2040062e:	01d7a223          	sw	t4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:18
  s->x[4] ^= s->x[3];
20400632:	f9c42783          	lw	a5,-100(s0)
20400636:	5394                	lw	a3,32(a5)
20400638:	53d8                	lw	a4,36(a5)
2040063a:	f9c42783          	lw	a5,-100(s0)
2040063e:	01c7a803          	lw	a6,28(a5)
20400642:	4f9c                	lw	a5,24(a5)
20400644:	00f6cc33          	xor	s8,a3,a5
20400648:	01074cb3          	xor	s9,a4,a6
2040064c:	f9c42783          	lw	a5,-100(s0)
20400650:	0387a023          	sw	s8,32(a5)
20400654:	0397a223          	sw	s9,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:19
  s->x[2] ^= s->x[1];
20400658:	f9c42783          	lw	a5,-100(s0)
2040065c:	4b94                	lw	a3,16(a5)
2040065e:	4bd8                	lw	a4,20(a5)
20400660:	f9c42783          	lw	a5,-100(s0)
20400664:	00c7a803          	lw	a6,12(a5)
20400668:	479c                	lw	a5,8(a5)
2040066a:	00f6c633          	xor	a2,a3,a5
2040066e:	f8c42823          	sw	a2,-112(s0)
20400672:	010747b3          	xor	a5,a4,a6
20400676:	f8f42a23          	sw	a5,-108(s0)
2040067a:	f9c42783          	lw	a5,-100(s0)
2040067e:	f9042683          	lw	a3,-112(s0)
20400682:	f9442703          	lw	a4,-108(s0)
20400686:	cb94                	sw	a3,16(a5)
20400688:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:21
  /* start of keccak s-box */
  t.x[0] = s->x[0] ^ (~s->x[1] & s->x[2]);
2040068a:	f9c42783          	lw	a5,-100(s0)
2040068e:	4394                	lw	a3,0(a5)
20400690:	43d8                	lw	a4,4(a5)
20400692:	f9c42783          	lw	a5,-100(s0)
20400696:	00c7a803          	lw	a6,12(a5)
2040069a:	479c                	lw	a5,8(a5)
2040069c:	fff7c913          	not	s2,a5
204006a0:	fff84993          	not	s3,a6
204006a4:	f9c42783          	lw	a5,-100(s0)
204006a8:	0147a803          	lw	a6,20(a5)
204006ac:	4b9c                	lw	a5,16(a5)
204006ae:	00f97f33          	and	t5,s2,a5
204006b2:	0109ffb3          	and	t6,s3,a6
204006b6:	01e6c7b3          	xor	a5,a3,t5
204006ba:	f8f42423          	sw	a5,-120(s0)
204006be:	01f747b3          	xor	a5,a4,t6
204006c2:	f8f42623          	sw	a5,-116(s0)
204006c6:	f8842783          	lw	a5,-120(s0)
204006ca:	f8c42803          	lw	a6,-116(s0)
204006ce:	faf42423          	sw	a5,-88(s0)
204006d2:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:22
  t.x[1] = s->x[1] ^ (~s->x[2] & s->x[3]);
204006d6:	f9c42783          	lw	a5,-100(s0)
204006da:	4794                	lw	a3,8(a5)
204006dc:	47d8                	lw	a4,12(a5)
204006de:	f9c42783          	lw	a5,-100(s0)
204006e2:	0147a803          	lw	a6,20(a5)
204006e6:	4b9c                	lw	a5,16(a5)
204006e8:	fff7cb13          	not	s6,a5
204006ec:	fff84b93          	not	s7,a6
204006f0:	f9c42783          	lw	a5,-100(s0)
204006f4:	01c7a803          	lw	a6,28(a5)
204006f8:	4f9c                	lw	a5,24(a5)
204006fa:	00fb7a33          	and	s4,s6,a5
204006fe:	010bfab3          	and	s5,s7,a6
20400702:	0146c7b3          	xor	a5,a3,s4
20400706:	f8f42023          	sw	a5,-128(s0)
2040070a:	015747b3          	xor	a5,a4,s5
2040070e:	f8f42223          	sw	a5,-124(s0)
20400712:	f8042783          	lw	a5,-128(s0)
20400716:	f8442803          	lw	a6,-124(s0)
2040071a:	faf42823          	sw	a5,-80(s0)
2040071e:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:23
  t.x[2] = s->x[2] ^ (~s->x[3] & s->x[4]);
20400722:	f9c42783          	lw	a5,-100(s0)
20400726:	4b94                	lw	a3,16(a5)
20400728:	4bd8                	lw	a4,20(a5)
2040072a:	f9c42783          	lw	a5,-100(s0)
2040072e:	01c7a803          	lw	a6,28(a5)
20400732:	4f9c                	lw	a5,24(a5)
20400734:	fff7c613          	not	a2,a5
20400738:	f6c42c23          	sw	a2,-136(s0)
2040073c:	fff84793          	not	a5,a6
20400740:	f6f42e23          	sw	a5,-132(s0)
20400744:	f9c42783          	lw	a5,-100(s0)
20400748:	0247a803          	lw	a6,36(a5)
2040074c:	539c                	lw	a5,32(a5)
2040074e:	f7842583          	lw	a1,-136(s0)
20400752:	f7c42603          	lw	a2,-132(s0)
20400756:	852e                	mv	a0,a1
20400758:	00f57d33          	and	s10,a0,a5
2040075c:	01067db3          	and	s11,a2,a6
20400760:	01a6c7b3          	xor	a5,a3,s10
20400764:	f6f42823          	sw	a5,-144(s0)
20400768:	01b747b3          	xor	a5,a4,s11
2040076c:	f6f42a23          	sw	a5,-140(s0)
20400770:	f7042783          	lw	a5,-144(s0)
20400774:	f7442803          	lw	a6,-140(s0)
20400778:	faf42c23          	sw	a5,-72(s0)
2040077c:	fb042e23          	sw	a6,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:24
  t.x[3] = s->x[3] ^ (~s->x[4] & s->x[0]);
20400780:	f9c42783          	lw	a5,-100(s0)
20400784:	4f94                	lw	a3,24(a5)
20400786:	4fd8                	lw	a4,28(a5)
20400788:	f9c42783          	lw	a5,-100(s0)
2040078c:	0247a803          	lw	a6,36(a5)
20400790:	539c                	lw	a5,32(a5)
20400792:	fff7c613          	not	a2,a5
20400796:	f6c42423          	sw	a2,-152(s0)
2040079a:	fff84793          	not	a5,a6
2040079e:	f6f42623          	sw	a5,-148(s0)
204007a2:	f9c42783          	lw	a5,-100(s0)
204007a6:	0047a803          	lw	a6,4(a5)
204007aa:	439c                	lw	a5,0(a5)
204007ac:	f6842583          	lw	a1,-152(s0)
204007b0:	f6c42603          	lw	a2,-148(s0)
204007b4:	852e                	mv	a0,a1
204007b6:	8d7d                	and	a0,a0,a5
204007b8:	f6a42023          	sw	a0,-160(s0)
204007bc:	010677b3          	and	a5,a2,a6
204007c0:	f6f42223          	sw	a5,-156(s0)
204007c4:	f6042783          	lw	a5,-160(s0)
204007c8:	f6442803          	lw	a6,-156(s0)
204007cc:	863e                	mv	a2,a5
204007ce:	8e35                	xor	a2,a2,a3
204007d0:	f4c42c23          	sw	a2,-168(s0)
204007d4:	87c2                	mv	a5,a6
204007d6:	8fb9                	xor	a5,a5,a4
204007d8:	f4f42e23          	sw	a5,-164(s0)
204007dc:	f5842783          	lw	a5,-168(s0)
204007e0:	f5c42803          	lw	a6,-164(s0)
204007e4:	fcf42023          	sw	a5,-64(s0)
204007e8:	fd042223          	sw	a6,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:25
  t.x[4] = s->x[4] ^ (~s->x[0] & s->x[1]);
204007ec:	f9c42783          	lw	a5,-100(s0)
204007f0:	5394                	lw	a3,32(a5)
204007f2:	53d8                	lw	a4,36(a5)
204007f4:	f9c42783          	lw	a5,-100(s0)
204007f8:	0047a803          	lw	a6,4(a5)
204007fc:	439c                	lw	a5,0(a5)
204007fe:	fff7c613          	not	a2,a5
20400802:	f4c42823          	sw	a2,-176(s0)
20400806:	fff84793          	not	a5,a6
2040080a:	f4f42a23          	sw	a5,-172(s0)
2040080e:	f9c42783          	lw	a5,-100(s0)
20400812:	00c7a803          	lw	a6,12(a5)
20400816:	479c                	lw	a5,8(a5)
20400818:	f5042583          	lw	a1,-176(s0)
2040081c:	f5442603          	lw	a2,-172(s0)
20400820:	852e                	mv	a0,a1
20400822:	8d7d                	and	a0,a0,a5
20400824:	f4a42423          	sw	a0,-184(s0)
20400828:	010677b3          	and	a5,a2,a6
2040082c:	f4f42623          	sw	a5,-180(s0)
20400830:	f4842783          	lw	a5,-184(s0)
20400834:	f4c42803          	lw	a6,-180(s0)
20400838:	863e                	mv	a2,a5
2040083a:	8e35                	xor	a2,a2,a3
2040083c:	f4c42023          	sw	a2,-192(s0)
20400840:	87c2                	mv	a5,a6
20400842:	8fb9                	xor	a5,a5,a4
20400844:	f4f42223          	sw	a5,-188(s0)
20400848:	f4042783          	lw	a5,-192(s0)
2040084c:	f4442803          	lw	a6,-188(s0)
20400850:	fcf42423          	sw	a5,-56(s0)
20400854:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:27
  /* end of keccak s-box */
  t.x[1] ^= t.x[0];
20400858:	fb042683          	lw	a3,-80(s0)
2040085c:	fb442703          	lw	a4,-76(s0)
20400860:	fa842783          	lw	a5,-88(s0)
20400864:	fac42803          	lw	a6,-84(s0)
20400868:	00f6c633          	xor	a2,a3,a5
2040086c:	f2c42c23          	sw	a2,-200(s0)
20400870:	010747b3          	xor	a5,a4,a6
20400874:	f2f42e23          	sw	a5,-196(s0)
20400878:	f3842783          	lw	a5,-200(s0)
2040087c:	f3c42803          	lw	a6,-196(s0)
20400880:	faf42823          	sw	a5,-80(s0)
20400884:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:28
  t.x[0] ^= t.x[4];
20400888:	fa842683          	lw	a3,-88(s0)
2040088c:	fac42703          	lw	a4,-84(s0)
20400890:	fc842783          	lw	a5,-56(s0)
20400894:	fcc42803          	lw	a6,-52(s0)
20400898:	00f6c633          	xor	a2,a3,a5
2040089c:	f2c42823          	sw	a2,-208(s0)
204008a0:	010747b3          	xor	a5,a4,a6
204008a4:	f2f42a23          	sw	a5,-204(s0)
204008a8:	f3042783          	lw	a5,-208(s0)
204008ac:	f3442803          	lw	a6,-204(s0)
204008b0:	faf42423          	sw	a5,-88(s0)
204008b4:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:29
  t.x[3] ^= t.x[2];
204008b8:	fc042683          	lw	a3,-64(s0)
204008bc:	fc442703          	lw	a4,-60(s0)
204008c0:	fb842783          	lw	a5,-72(s0)
204008c4:	fbc42803          	lw	a6,-68(s0)
204008c8:	00f6c633          	xor	a2,a3,a5
204008cc:	f2c42423          	sw	a2,-216(s0)
204008d0:	010747b3          	xor	a5,a4,a6
204008d4:	f2f42623          	sw	a5,-212(s0)
204008d8:	f2842783          	lw	a5,-216(s0)
204008dc:	f2c42803          	lw	a6,-212(s0)
204008e0:	fcf42023          	sw	a5,-64(s0)
204008e4:	fd042223          	sw	a6,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:30
  t.x[2] = ~t.x[2];
204008e8:	fb842783          	lw	a5,-72(s0)
204008ec:	fbc42803          	lw	a6,-68(s0)
204008f0:	fff7c713          	not	a4,a5
204008f4:	f2e42023          	sw	a4,-224(s0)
204008f8:	fff84793          	not	a5,a6
204008fc:	f2f42223          	sw	a5,-220(s0)
20400900:	f2042783          	lw	a5,-224(s0)
20400904:	f2442803          	lw	a6,-220(s0)
20400908:	faf42c23          	sw	a5,-72(s0)
2040090c:	fb042e23          	sw	a6,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:33
  /* printstate(" substitution layer", &t); */
  /* linear diffusion layer */
  s->x[0] = t.x[0] ^ ROR(t.x[0], 19) ^ ROR(t.x[0], 28);
20400910:	fa842903          	lw	s2,-88(s0)
20400914:	fac42983          	lw	s3,-84(s0)
20400918:	fa842783          	lw	a5,-88(s0)
2040091c:	fac42803          	lw	a6,-84(s0)
20400920:	464d                	li	a2,19
20400922:	853e                	mv	a0,a5
20400924:	85c2                	mv	a1,a6
20400926:	3e7d                	jal	204004e4 <ROR>
20400928:	87aa                	mv	a5,a0
2040092a:	882e                	mv	a6,a1
2040092c:	00f94733          	xor	a4,s2,a5
20400930:	f0e42c23          	sw	a4,-232(s0)
20400934:	0109c7b3          	xor	a5,s3,a6
20400938:	f0f42e23          	sw	a5,-228(s0)
2040093c:	fa842783          	lw	a5,-88(s0)
20400940:	fac42803          	lw	a6,-84(s0)
20400944:	4671                	li	a2,28
20400946:	853e                	mv	a0,a5
20400948:	85c2                	mv	a1,a6
2040094a:	3e69                	jal	204004e4 <ROR>
2040094c:	87aa                	mv	a5,a0
2040094e:	882e                	mv	a6,a1
20400950:	f1842683          	lw	a3,-232(s0)
20400954:	f1c42703          	lw	a4,-228(s0)
20400958:	8636                	mv	a2,a3
2040095a:	8e3d                	xor	a2,a2,a5
2040095c:	f0c42823          	sw	a2,-240(s0)
20400960:	010747b3          	xor	a5,a4,a6
20400964:	f0f42a23          	sw	a5,-236(s0)
20400968:	f9c42783          	lw	a5,-100(s0)
2040096c:	f1042683          	lw	a3,-240(s0)
20400970:	f1442703          	lw	a4,-236(s0)
20400974:	c394                	sw	a3,0(a5)
20400976:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:34
  s->x[1] = t.x[1] ^ ROR(t.x[1], 61) ^ ROR(t.x[1], 39);
20400978:	fb042903          	lw	s2,-80(s0)
2040097c:	fb442983          	lw	s3,-76(s0)
20400980:	fb042783          	lw	a5,-80(s0)
20400984:	fb442803          	lw	a6,-76(s0)
20400988:	03d00613          	li	a2,61
2040098c:	853e                	mv	a0,a5
2040098e:	85c2                	mv	a1,a6
20400990:	3e91                	jal	204004e4 <ROR>
20400992:	87aa                	mv	a5,a0
20400994:	882e                	mv	a6,a1
20400996:	00f94733          	xor	a4,s2,a5
2040099a:	f0e42423          	sw	a4,-248(s0)
2040099e:	0109c7b3          	xor	a5,s3,a6
204009a2:	f0f42623          	sw	a5,-244(s0)
204009a6:	fb042783          	lw	a5,-80(s0)
204009aa:	fb442803          	lw	a6,-76(s0)
204009ae:	02700613          	li	a2,39
204009b2:	853e                	mv	a0,a5
204009b4:	85c2                	mv	a1,a6
204009b6:	363d                	jal	204004e4 <ROR>
204009b8:	87aa                	mv	a5,a0
204009ba:	882e                	mv	a6,a1
204009bc:	f0842683          	lw	a3,-248(s0)
204009c0:	f0c42703          	lw	a4,-244(s0)
204009c4:	8636                	mv	a2,a3
204009c6:	8e3d                	xor	a2,a2,a5
204009c8:	f0c42023          	sw	a2,-256(s0)
204009cc:	010747b3          	xor	a5,a4,a6
204009d0:	f0f42223          	sw	a5,-252(s0)
204009d4:	f9c42783          	lw	a5,-100(s0)
204009d8:	f0042683          	lw	a3,-256(s0)
204009dc:	f0442703          	lw	a4,-252(s0)
204009e0:	c794                	sw	a3,8(a5)
204009e2:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:35
  s->x[2] = t.x[2] ^ ROR(t.x[2], 1) ^ ROR(t.x[2], 6);
204009e4:	fb842903          	lw	s2,-72(s0)
204009e8:	fbc42983          	lw	s3,-68(s0)
204009ec:	fb842783          	lw	a5,-72(s0)
204009f0:	fbc42803          	lw	a6,-68(s0)
204009f4:	4605                	li	a2,1
204009f6:	853e                	mv	a0,a5
204009f8:	85c2                	mv	a1,a6
204009fa:	34ed                	jal	204004e4 <ROR>
204009fc:	87aa                	mv	a5,a0
204009fe:	882e                	mv	a6,a1
20400a00:	00f94733          	xor	a4,s2,a5
20400a04:	eee42c23          	sw	a4,-264(s0)
20400a08:	0109c7b3          	xor	a5,s3,a6
20400a0c:	eef42e23          	sw	a5,-260(s0)
20400a10:	fb842783          	lw	a5,-72(s0)
20400a14:	fbc42803          	lw	a6,-68(s0)
20400a18:	4619                	li	a2,6
20400a1a:	853e                	mv	a0,a5
20400a1c:	85c2                	mv	a1,a6
20400a1e:	34d9                	jal	204004e4 <ROR>
20400a20:	87aa                	mv	a5,a0
20400a22:	882e                	mv	a6,a1
20400a24:	ef842683          	lw	a3,-264(s0)
20400a28:	efc42703          	lw	a4,-260(s0)
20400a2c:	8636                	mv	a2,a3
20400a2e:	8e3d                	xor	a2,a2,a5
20400a30:	eec42823          	sw	a2,-272(s0)
20400a34:	010747b3          	xor	a5,a4,a6
20400a38:	eef42a23          	sw	a5,-268(s0)
20400a3c:	f9c42783          	lw	a5,-100(s0)
20400a40:	ef042683          	lw	a3,-272(s0)
20400a44:	ef442703          	lw	a4,-268(s0)
20400a48:	cb94                	sw	a3,16(a5)
20400a4a:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:36
  s->x[3] = t.x[3] ^ ROR(t.x[3], 10) ^ ROR(t.x[3], 17);
20400a4c:	fc042903          	lw	s2,-64(s0)
20400a50:	fc442983          	lw	s3,-60(s0)
20400a54:	fc042783          	lw	a5,-64(s0)
20400a58:	fc442803          	lw	a6,-60(s0)
20400a5c:	4629                	li	a2,10
20400a5e:	853e                	mv	a0,a5
20400a60:	85c2                	mv	a1,a6
20400a62:	3449                	jal	204004e4 <ROR>
20400a64:	87aa                	mv	a5,a0
20400a66:	882e                	mv	a6,a1
20400a68:	00f94733          	xor	a4,s2,a5
20400a6c:	eee42423          	sw	a4,-280(s0)
20400a70:	0109c7b3          	xor	a5,s3,a6
20400a74:	eef42623          	sw	a5,-276(s0)
20400a78:	fc042783          	lw	a5,-64(s0)
20400a7c:	fc442803          	lw	a6,-60(s0)
20400a80:	4645                	li	a2,17
20400a82:	853e                	mv	a0,a5
20400a84:	85c2                	mv	a1,a6
20400a86:	3cb9                	jal	204004e4 <ROR>
20400a88:	87aa                	mv	a5,a0
20400a8a:	882e                	mv	a6,a1
20400a8c:	ee842683          	lw	a3,-280(s0)
20400a90:	eec42703          	lw	a4,-276(s0)
20400a94:	8636                	mv	a2,a3
20400a96:	8e3d                	xor	a2,a2,a5
20400a98:	eec42023          	sw	a2,-288(s0)
20400a9c:	010747b3          	xor	a5,a4,a6
20400aa0:	eef42223          	sw	a5,-284(s0)
20400aa4:	f9c42783          	lw	a5,-100(s0)
20400aa8:	ee042683          	lw	a3,-288(s0)
20400aac:	ee442703          	lw	a4,-284(s0)
20400ab0:	cf94                	sw	a3,24(a5)
20400ab2:	cfd8                	sw	a4,28(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:37
  s->x[4] = t.x[4] ^ ROR(t.x[4], 7) ^ ROR(t.x[4], 41);
20400ab4:	fc842903          	lw	s2,-56(s0)
20400ab8:	fcc42983          	lw	s3,-52(s0)
20400abc:	fc842783          	lw	a5,-56(s0)
20400ac0:	fcc42803          	lw	a6,-52(s0)
20400ac4:	461d                	li	a2,7
20400ac6:	853e                	mv	a0,a5
20400ac8:	85c2                	mv	a1,a6
20400aca:	3c29                	jal	204004e4 <ROR>
20400acc:	87aa                	mv	a5,a0
20400ace:	882e                	mv	a6,a1
20400ad0:	00f94733          	xor	a4,s2,a5
20400ad4:	ece42c23          	sw	a4,-296(s0)
20400ad8:	0109c7b3          	xor	a5,s3,a6
20400adc:	ecf42e23          	sw	a5,-292(s0)
20400ae0:	fc842783          	lw	a5,-56(s0)
20400ae4:	fcc42803          	lw	a6,-52(s0)
20400ae8:	02900613          	li	a2,41
20400aec:	853e                	mv	a0,a5
20400aee:	85c2                	mv	a1,a6
20400af0:	3ad5                	jal	204004e4 <ROR>
20400af2:	87aa                	mv	a5,a0
20400af4:	882e                	mv	a6,a1
20400af6:	ed842683          	lw	a3,-296(s0)
20400afa:	edc42703          	lw	a4,-292(s0)
20400afe:	8636                	mv	a2,a3
20400b00:	8e3d                	xor	a2,a2,a5
20400b02:	ecc42823          	sw	a2,-304(s0)
20400b06:	010747b3          	xor	a5,a4,a6
20400b0a:	ecf42a23          	sw	a5,-300(s0)
20400b0e:	f9c42783          	lw	a5,-100(s0)
20400b12:	ed042683          	lw	a3,-304(s0)
20400b16:	ed442703          	lw	a4,-300(s0)
20400b1a:	d394                	sw	a3,32(a5)
20400b1c:	d3d8                	sw	a4,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:39
  //printstate(" round output", s);
}
20400b1e:	0001                	nop
20400b20:	12c12083          	lw	ra,300(sp)
20400b24:	12812403          	lw	s0,296(sp)
20400b28:	12412903          	lw	s2,292(sp)
20400b2c:	12012983          	lw	s3,288(sp)
20400b30:	11c12a03          	lw	s4,284(sp)
20400b34:	11812a83          	lw	s5,280(sp)
20400b38:	11412b03          	lw	s6,276(sp)
20400b3c:	11012b83          	lw	s7,272(sp)
20400b40:	10c12c03          	lw	s8,268(sp)
20400b44:	10812c83          	lw	s9,264(sp)
20400b48:	10412d03          	lw	s10,260(sp)
20400b4c:	10012d83          	lw	s11,256(sp)
20400b50:	6155                	addi	sp,sp,304
20400b52:	8082                	ret

20400b54 <P12>:
P12():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:10

#include "ascon.h"
#include "constants.h"
#include "round.h"

static inline void P12(ascon_state_t* s) {
20400b54:	1101                	addi	sp,sp,-32
20400b56:	ce06                	sw	ra,28(sp)
20400b58:	cc22                	sw	s0,24(sp)
20400b5a:	1000                	addi	s0,sp,32
20400b5c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:11
  ROUND(s, 0xf0);
20400b60:	0f000593          	li	a1,240
20400b64:	fec42503          	lw	a0,-20(s0)
20400b68:	3c3d                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:12
  ROUND(s, 0xe1);
20400b6a:	0e100593          	li	a1,225
20400b6e:	fec42503          	lw	a0,-20(s0)
20400b72:	3c15                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:13
  ROUND(s, 0xd2);
20400b74:	0d200593          	li	a1,210
20400b78:	fec42503          	lw	a0,-20(s0)
20400b7c:	342d                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:14
  ROUND(s, 0xc3);
20400b7e:	0c300593          	li	a1,195
20400b82:	fec42503          	lw	a0,-20(s0)
20400b86:	3405                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:15
  ROUND(s, 0xb4);
20400b88:	0b400593          	li	a1,180
20400b8c:	fec42503          	lw	a0,-20(s0)
20400b90:	3c19                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:16
  ROUND(s, 0xa5);
20400b92:	0a500593          	li	a1,165
20400b96:	fec42503          	lw	a0,-20(s0)
20400b9a:	3431                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:17
  ROUND(s, 0x96);
20400b9c:	09600593          	li	a1,150
20400ba0:	fec42503          	lw	a0,-20(s0)
20400ba4:	3409                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:18
  ROUND(s, 0x87);
20400ba6:	08700593          	li	a1,135
20400baa:	fec42503          	lw	a0,-20(s0)
20400bae:	3ae5                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:19
  ROUND(s, 0x78);
20400bb0:	07800593          	li	a1,120
20400bb4:	fec42503          	lw	a0,-20(s0)
20400bb8:	32fd                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:20
  ROUND(s, 0x69);
20400bba:	06900593          	li	a1,105
20400bbe:	fec42503          	lw	a0,-20(s0)
20400bc2:	32d5                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:21
  ROUND(s, 0x5a);
20400bc4:	05a00593          	li	a1,90
20400bc8:	fec42503          	lw	a0,-20(s0)
20400bcc:	3ae9                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:22
  ROUND(s, 0x4b);
20400bce:	04b00593          	li	a1,75
20400bd2:	fec42503          	lw	a0,-20(s0)
20400bd6:	3ac1                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:23
}
20400bd8:	0001                	nop
20400bda:	40f2                	lw	ra,28(sp)
20400bdc:	4462                	lw	s0,24(sp)
20400bde:	6105                	addi	sp,sp,32
20400be0:	8082                	ret

20400be2 <P6>:
P6():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:36
  ROUND(s, 0x69);
  ROUND(s, 0x5a);
  ROUND(s, 0x4b);
}

static inline void P6(ascon_state_t* s) {
20400be2:	1101                	addi	sp,sp,-32
20400be4:	ce06                	sw	ra,28(sp)
20400be6:	cc22                	sw	s0,24(sp)
20400be8:	1000                	addi	s0,sp,32
20400bea:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:37
  ROUND(s, 0x96);
20400bee:	09600593          	li	a1,150
20400bf2:	fec42503          	lw	a0,-20(s0)
20400bf6:	3a45                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:38
  ROUND(s, 0x87);
20400bf8:	08700593          	li	a1,135
20400bfc:	fec42503          	lw	a0,-20(s0)
20400c00:	325d                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:39
  ROUND(s, 0x78);
20400c02:	07800593          	li	a1,120
20400c06:	fec42503          	lw	a0,-20(s0)
20400c0a:	3a71                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:40
  ROUND(s, 0x69);
20400c0c:	06900593          	li	a1,105
20400c10:	fec42503          	lw	a0,-20(s0)
20400c14:	3a49                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:41
  ROUND(s, 0x5a);
20400c16:	05a00593          	li	a1,90
20400c1a:	fec42503          	lw	a0,-20(s0)
20400c1e:	3261                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:42
  ROUND(s, 0x4b);
20400c20:	04b00593          	li	a1,75
20400c24:	fec42503          	lw	a0,-20(s0)
20400c28:	3abd                	jal	204005a6 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:43
}
20400c2a:	0001                	nop
20400c2c:	40f2                	lw	ra,28(sp)
20400c2e:	4462                	lw	s0,24(sp)
20400c30:	6105                	addi	sp,sp,32
20400c32:	8082                	ret

20400c34 <LOADBYTES>:
LOADBYTES():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:20

/* set padding byte in 64-bit Ascon word */
#define PAD(i) SETBYTE(0x80, i)

/* load bytes into 64-bit Ascon word */
static inline uint64_t LOADBYTES(const uint8_t* bytes, int n) {
20400c34:	7179                	addi	sp,sp,-48
20400c36:	d622                	sw	s0,44(sp)
20400c38:	1800                	addi	s0,sp,48
20400c3a:	fca42e23          	sw	a0,-36(s0)
20400c3e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:22
  int i;
  uint64_t x = 0;
20400c42:	4581                	li	a1,0
20400c44:	4601                	li	a2,0
20400c46:	feb42023          	sw	a1,-32(s0)
20400c4a:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:23
  for (i = 0; i < n; ++i){ x |= SETBYTE(bytes[i], i);
20400c4e:	fe042623          	sw	zero,-20(s0)
20400c52:	a0a5                	j	20400cba <LOADBYTES+0x86>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:23 (discriminator 3)
20400c54:	fec42603          	lw	a2,-20(s0)
20400c58:	fdc42583          	lw	a1,-36(s0)
20400c5c:	962e                	add	a2,a2,a1
20400c5e:	00064603          	lbu	a2,0(a2) # 80000000 <metal_segment_heap_target_end+0xffffeb2c>
20400c62:	86b2                	mv	a3,a2
20400c64:	4701                	li	a4,0
20400c66:	459d                	li	a1,7
20400c68:	fec42603          	lw	a2,-20(s0)
20400c6c:	40c58633          	sub	a2,a1,a2
20400c70:	060e                	slli	a2,a2,0x3
20400c72:	fe060593          	addi	a1,a2,-32
20400c76:	0005c663          	bltz	a1,20400c82 <LOADBYTES+0x4e>
20400c7a:	00b69833          	sll	a6,a3,a1
20400c7e:	4781                	li	a5,0
20400c80:	a829                	j	20400c9a <LOADBYTES+0x66>
20400c82:	0016d513          	srli	a0,a3,0x1
20400c86:	45fd                	li	a1,31
20400c88:	8d91                	sub	a1,a1,a2
20400c8a:	00b555b3          	srl	a1,a0,a1
20400c8e:	00c71833          	sll	a6,a4,a2
20400c92:	0105e833          	or	a6,a1,a6
20400c96:	00c697b3          	sll	a5,a3,a2
20400c9a:	fe042603          	lw	a2,-32(s0)
20400c9e:	8e5d                	or	a2,a2,a5
20400ca0:	fec42023          	sw	a2,-32(s0)
20400ca4:	fe442603          	lw	a2,-28(s0)
20400ca8:	01066633          	or	a2,a2,a6
20400cac:	fec42223          	sw	a2,-28(s0)
20400cb0:	fec42603          	lw	a2,-20(s0)
20400cb4:	0605                	addi	a2,a2,1
20400cb6:	fec42623          	sw	a2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:23 (discriminator 1)
20400cba:	fec42583          	lw	a1,-20(s0)
20400cbe:	fd842603          	lw	a2,-40(s0)
20400cc2:	f8c5c9e3          	blt	a1,a2,20400c54 <LOADBYTES+0x20>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:25
  };
  return x;
20400cc6:	fe042783          	lw	a5,-32(s0)
20400cca:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:26
}
20400cce:	853e                	mv	a0,a5
20400cd0:	85c2                	mv	a1,a6
20400cd2:	5432                	lw	s0,44(sp)
20400cd4:	6145                	addi	sp,sp,48
20400cd6:	8082                	ret

20400cd8 <STOREBYTES>:
STOREBYTES():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:29

/* store bytes from 64-bit Ascon word */
static inline void STOREBYTES(uint8_t* bytes, uint64_t x, int n) {
20400cd8:	7179                	addi	sp,sp,-48
20400cda:	d622                	sw	s0,44(sp)
20400cdc:	1800                	addi	s0,sp,48
20400cde:	fca42e23          	sw	a0,-36(s0)
20400ce2:	fcb42823          	sw	a1,-48(s0)
20400ce6:	fcc42a23          	sw	a2,-44(s0)
20400cea:	fcd42c23          	sw	a3,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:31
  int i;
  for (i = 0; i < n; ++i) bytes[i] = GETBYTE(x, i);
20400cee:	fe042623          	sw	zero,-20(s0)
20400cf2:	a085                	j	20400d52 <STOREBYTES+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:31 (discriminator 3)
20400cf4:	469d                	li	a3,7
20400cf6:	fec42703          	lw	a4,-20(s0)
20400cfa:	40e68733          	sub	a4,a3,a4
20400cfe:	070e                	slli	a4,a4,0x3
20400d00:	fe070693          	addi	a3,a4,-32 # 1fe0 <__heap_size+0x17e0>
20400d04:	0006c863          	bltz	a3,20400d14 <STOREBYTES+0x3c>
20400d08:	fd442703          	lw	a4,-44(s0)
20400d0c:	00d757b3          	srl	a5,a4,a3
20400d10:	4801                	li	a6,0
20400d12:	a015                	j	20400d36 <STOREBYTES+0x5e>
20400d14:	fd442683          	lw	a3,-44(s0)
20400d18:	00169613          	slli	a2,a3,0x1
20400d1c:	46fd                	li	a3,31
20400d1e:	8e99                	sub	a3,a3,a4
20400d20:	00d616b3          	sll	a3,a2,a3
20400d24:	fd042603          	lw	a2,-48(s0)
20400d28:	00e657b3          	srl	a5,a2,a4
20400d2c:	8fd5                	or	a5,a5,a3
20400d2e:	fd442683          	lw	a3,-44(s0)
20400d32:	00e6d833          	srl	a6,a3,a4
20400d36:	fec42703          	lw	a4,-20(s0)
20400d3a:	fdc42683          	lw	a3,-36(s0)
20400d3e:	9736                	add	a4,a4,a3
20400d40:	0ff7f693          	andi	a3,a5,255
20400d44:	00d70023          	sb	a3,0(a4)
20400d48:	fec42703          	lw	a4,-20(s0)
20400d4c:	0705                	addi	a4,a4,1
20400d4e:	fee42623          	sw	a4,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:31 (discriminator 1)
20400d52:	fec42683          	lw	a3,-20(s0)
20400d56:	fd842703          	lw	a4,-40(s0)
20400d5a:	f8e6cde3          	blt	a3,a4,20400cf4 <STOREBYTES+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:32
}
20400d5e:	0001                	nop
20400d60:	5432                	lw	s0,44(sp)
20400d62:	6145                	addi	sp,sp,48
20400d64:	8082                	ret

20400d66 <crypto_aead_encrypt>:
crypto_aead_encrypt():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:43
*/
int crypto_aead_encrypt(unsigned char *c, unsigned long long *clen,
                        const unsigned char *m, unsigned long long mlen,
                        const unsigned char *ad, unsigned long long adlen,
                        const unsigned char *npub,
                        const unsigned char *k) {
20400d66:	7151                	addi	sp,sp,-240
20400d68:	d786                	sw	ra,236(sp)
20400d6a:	d5a2                	sw	s0,232(sp)
20400d6c:	d3ca                	sw	s2,228(sp)
20400d6e:	d1ce                	sw	s3,224(sp)
20400d70:	cfd2                	sw	s4,220(sp)
20400d72:	cdd6                	sw	s5,216(sp)
20400d74:	cbda                	sw	s6,212(sp)
20400d76:	c9de                	sw	s7,208(sp)
20400d78:	c7e2                	sw	s8,204(sp)
20400d7a:	c5e6                	sw	s9,200(sp)
20400d7c:	c3ea                	sw	s10,196(sp)
20400d7e:	c1ee                	sw	s11,192(sp)
20400d80:	1980                	addi	s0,sp,240
20400d82:	f6a42e23          	sw	a0,-132(s0)
20400d86:	f6b42c23          	sw	a1,-136(s0)
20400d8a:	f6c42a23          	sw	a2,-140(s0)
20400d8e:	f6d42423          	sw	a3,-152(s0)
20400d92:	f6e42623          	sw	a4,-148(s0)
20400d96:	f6f42823          	sw	a5,-144(s0)
20400d9a:	f7042023          	sw	a6,-160(s0)
20400d9e:	f7142223          	sw	a7,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:47


    /* set ciphertext size */
    *clen = mlen + CRYPTO_ABYTES;
20400da2:	f6842783          	lw	a5,-152(s0)
20400da6:	f6c42803          	lw	a6,-148(s0)
20400daa:	46c1                	li	a3,16
20400dac:	4701                	li	a4,0
20400dae:	00d78533          	add	a0,a5,a3
20400db2:	862a                	mv	a2,a0
20400db4:	00f63633          	sltu	a2,a2,a5
20400db8:	00e805b3          	add	a1,a6,a4
20400dbc:	00b607b3          	add	a5,a2,a1
20400dc0:	85be                	mv	a1,a5
20400dc2:	86aa                	mv	a3,a0
20400dc4:	872e                	mv	a4,a1
20400dc6:	f7842783          	lw	a5,-136(s0)
20400dca:	c394                	sw	a3,0(a5)
20400dcc:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:50

    /* load key and nonce */
    const uint64_t K0 = LOADBYTES(k, 8);
20400dce:	45a1                	li	a1,8
20400dd0:	4048                	lw	a0,4(s0)
20400dd2:	358d                	jal	20400c34 <LOADBYTES>
20400dd4:	fca42423          	sw	a0,-56(s0)
20400dd8:	fcb42623          	sw	a1,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:51
    const uint64_t K1 = LOADBYTES(k + 8, 8);
20400ddc:	405c                	lw	a5,4(s0)
20400dde:	07a1                	addi	a5,a5,8
20400de0:	45a1                	li	a1,8
20400de2:	853e                	mv	a0,a5
20400de4:	3d81                	jal	20400c34 <LOADBYTES>
20400de6:	fca42023          	sw	a0,-64(s0)
20400dea:	fcb42223          	sw	a1,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:52
    const uint64_t N0 = LOADBYTES(npub, 8);
20400dee:	45a1                	li	a1,8
20400df0:	4008                	lw	a0,0(s0)
20400df2:	3589                	jal	20400c34 <LOADBYTES>
20400df4:	faa42c23          	sw	a0,-72(s0)
20400df8:	fab42e23          	sw	a1,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:53
    const uint64_t N1 = LOADBYTES(npub + 8, 8);
20400dfc:	401c                	lw	a5,0(s0)
20400dfe:	07a1                	addi	a5,a5,8
20400e00:	45a1                	li	a1,8
20400e02:	853e                	mv	a0,a5
20400e04:	3d05                	jal	20400c34 <LOADBYTES>
20400e06:	faa42823          	sw	a0,-80(s0)
20400e0a:	fab42a23          	sw	a1,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:57

    /* initialize */
    ascon_state_t s;
    s.x[0] = ASCON_128_IV;
20400e0e:	4781                	li	a5,0
20400e10:	80401837          	lui	a6,0x80401
20400e14:	c0680813          	addi	a6,a6,-1018 # 80400c06 <metal_segment_heap_target_end+0x3ff732>
20400e18:	f8f42423          	sw	a5,-120(s0)
20400e1c:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:58
    s.x[1] = K0;
20400e20:	fc842783          	lw	a5,-56(s0)
20400e24:	fcc42803          	lw	a6,-52(s0)
20400e28:	f8f42823          	sw	a5,-112(s0)
20400e2c:	f9042a23          	sw	a6,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:59
    s.x[2] = K1;
20400e30:	fc042783          	lw	a5,-64(s0)
20400e34:	fc442803          	lw	a6,-60(s0)
20400e38:	f8f42c23          	sw	a5,-104(s0)
20400e3c:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:60
    s.x[3] = N0;
20400e40:	fb842783          	lw	a5,-72(s0)
20400e44:	fbc42803          	lw	a6,-68(s0)
20400e48:	faf42023          	sw	a5,-96(s0)
20400e4c:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:61
    s.x[4] = N1;
20400e50:	fb042783          	lw	a5,-80(s0)
20400e54:	fb442803          	lw	a6,-76(s0)
20400e58:	faf42423          	sw	a5,-88(s0)
20400e5c:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:64
    //printf("init 1st key xor\n");
    //printS(&s);
    P12(&s);
20400e60:	f8840793          	addi	a5,s0,-120
20400e64:	853e                	mv	a0,a5
20400e66:	31fd                	jal	20400b54 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:65
    s.x[3] ^= K0;
20400e68:	fa042783          	lw	a5,-96(s0)
20400e6c:	fa442803          	lw	a6,-92(s0)
20400e70:	fc842703          	lw	a4,-56(s0)
20400e74:	00f74b33          	xor	s6,a4,a5
20400e78:	fcc42703          	lw	a4,-52(s0)
20400e7c:	01074bb3          	xor	s7,a4,a6
20400e80:	fb642023          	sw	s6,-96(s0)
20400e84:	fb742223          	sw	s7,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:66
    s.x[4] ^= K1;
20400e88:	fa842783          	lw	a5,-88(s0)
20400e8c:	fac42803          	lw	a6,-84(s0)
20400e90:	fc042703          	lw	a4,-64(s0)
20400e94:	00f74c33          	xor	s8,a4,a5
20400e98:	fc442703          	lw	a4,-60(s0)
20400e9c:	01074cb3          	xor	s9,a4,a6
20400ea0:	fb842423          	sw	s8,-88(s0)
20400ea4:	fb942623          	sw	s9,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:70
    //printf("init 2nd key xor \n");
    //printS(&s);

    if (adlen) {
20400ea8:	f6042783          	lw	a5,-160(s0)
20400eac:	f6442703          	lw	a4,-156(s0)
20400eb0:	8fd9                	or	a5,a5,a4
20400eb2:	12078363          	beqz	a5,20400fd8 <crypto_aead_encrypt+0x272>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:72
        /* full associated data blocks */
        while (adlen >= ASCON_128_RATE) {
20400eb6:	a085                	j	20400f16 <crypto_aead_encrypt+0x1b0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:73
            s.x[0] ^= LOADBYTES(ad, 8);
20400eb8:	45a1                	li	a1,8
20400eba:	f7042503          	lw	a0,-144(s0)
20400ebe:	3b9d                	jal	20400c34 <LOADBYTES>
20400ec0:	86aa                	mv	a3,a0
20400ec2:	872e                	mv	a4,a1
20400ec4:	f8842783          	lw	a5,-120(s0)
20400ec8:	f8c42803          	lw	a6,-116(s0)
20400ecc:	00f6cd33          	xor	s10,a3,a5
20400ed0:	01074db3          	xor	s11,a4,a6
20400ed4:	f9a42423          	sw	s10,-120(s0)
20400ed8:	f9b42623          	sw	s11,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:75
           // printf("pad ad %lx \n", LOADBYTES(ad, 8));
            P6(&s);
20400edc:	f8840793          	addi	a5,s0,-120
20400ee0:	853e                	mv	a0,a5
20400ee2:	3301                	jal	20400be2 <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:78
            //printf("absorb adata \n");
            //printS(&s);
            ad += ASCON_128_RATE;
20400ee4:	f7042783          	lw	a5,-144(s0)
20400ee8:	07a1                	addi	a5,a5,8
20400eea:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:79
            adlen -= ASCON_128_RATE;
20400eee:	f6042783          	lw	a5,-160(s0)
20400ef2:	f6442803          	lw	a6,-156(s0)
20400ef6:	56e1                	li	a3,-8
20400ef8:	577d                	li	a4,-1
20400efa:	00d785b3          	add	a1,a5,a3
20400efe:	852e                	mv	a0,a1
20400f00:	00f53533          	sltu	a0,a0,a5
20400f04:	00e80633          	add	a2,a6,a4
20400f08:	00c507b3          	add	a5,a0,a2
20400f0c:	863e                	mv	a2,a5
20400f0e:	f6b42023          	sw	a1,-160(s0)
20400f12:	f6c42223          	sw	a2,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:72
        while (adlen >= ASCON_128_RATE) {
20400f16:	f6442783          	lw	a5,-156(s0)
20400f1a:	ffd9                	bnez	a5,20400eb8 <crypto_aead_encrypt+0x152>
20400f1c:	f6442783          	lw	a5,-156(s0)
20400f20:	e791                	bnez	a5,20400f2c <crypto_aead_encrypt+0x1c6>
20400f22:	f6042703          	lw	a4,-160(s0)
20400f26:	479d                	li	a5,7
20400f28:	f8e7e8e3          	bltu	a5,a4,20400eb8 <crypto_aead_encrypt+0x152>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:82
        }
        /* final associated data block */
        s.x[0] ^= LOADBYTES(ad, adlen);
20400f2c:	f6042783          	lw	a5,-160(s0)
20400f30:	85be                	mv	a1,a5
20400f32:	f7042503          	lw	a0,-144(s0)
20400f36:	39fd                	jal	20400c34 <LOADBYTES>
20400f38:	86aa                	mv	a3,a0
20400f3a:	872e                	mv	a4,a1
20400f3c:	f8842783          	lw	a5,-120(s0)
20400f40:	f8c42803          	lw	a6,-116(s0)
20400f44:	00f6c633          	xor	a2,a3,a5
20400f48:	f4c42c23          	sw	a2,-168(s0)
20400f4c:	010747b3          	xor	a5,a4,a6
20400f50:	f4f42e23          	sw	a5,-164(s0)
20400f54:	f5842783          	lw	a5,-168(s0)
20400f58:	f5c42803          	lw	a6,-164(s0)
20400f5c:	f8f42423          	sw	a5,-120(s0)
20400f60:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:85
        // printf("ad %lx \n",*ad);
        //printf("pad %lld ad %lx \n", adlen, LOADBYTES(ad, adlen));
        s.x[0] ^= PAD(adlen);
20400f64:	f8842683          	lw	a3,-120(s0)
20400f68:	f8c42703          	lw	a4,-116(s0)
20400f6c:	f6042603          	lw	a2,-160(s0)
20400f70:	4781                	li	a5,0
20400f72:	8f91                	sub	a5,a5,a2
20400f74:	078e                	slli	a5,a5,0x3
20400f76:	03878793          	addi	a5,a5,56
20400f7a:	fe078613          	addi	a2,a5,-32
20400f7e:	00064863          	bltz	a2,20400f8e <crypto_aead_encrypt+0x228>
20400f82:	08000793          	li	a5,128
20400f86:	00c79ab3          	sll	s5,a5,a2
20400f8a:	4a01                	li	s4,0
20400f8c:	a015                	j	20400fb0 <crypto_aead_encrypt+0x24a>
20400f8e:	08000613          	li	a2,128
20400f92:	00165593          	srli	a1,a2,0x1
20400f96:	467d                	li	a2,31
20400f98:	8e1d                	sub	a2,a2,a5
20400f9a:	00c5d633          	srl	a2,a1,a2
20400f9e:	4581                	li	a1,0
20400fa0:	00f59ab3          	sll	s5,a1,a5
20400fa4:	01566ab3          	or	s5,a2,s5
20400fa8:	08000613          	li	a2,128
20400fac:	00f61a33          	sll	s4,a2,a5
20400fb0:	0146c7b3          	xor	a5,a3,s4
20400fb4:	f4f42823          	sw	a5,-176(s0)
20400fb8:	015747b3          	xor	a5,a4,s5
20400fbc:	f4f42a23          	sw	a5,-172(s0)
20400fc0:	f5042783          	lw	a5,-176(s0)
20400fc4:	f5442803          	lw	a6,-172(s0)
20400fc8:	f8f42423          	sw	a5,-120(s0)
20400fcc:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:86
        P6(&s);
20400fd0:	f8840793          	addi	a5,s0,-120
20400fd4:	853e                	mv	a0,a5
20400fd6:	3131                	jal	20400be2 <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:90

    }
    /* domain separation */
    s.x[4] ^= 1;
20400fd8:	fa842783          	lw	a5,-88(s0)
20400fdc:	fac42803          	lw	a6,-84(s0)
20400fe0:	0017c713          	xori	a4,a5,1
20400fe4:	f4e42423          	sw	a4,-184(s0)
20400fe8:	00084793          	xori	a5,a6,0
20400fec:	f4f42623          	sw	a5,-180(s0)
20400ff0:	f4842783          	lw	a5,-184(s0)
20400ff4:	f4c42803          	lw	a6,-180(s0)
20400ff8:	faf42423          	sw	a5,-88(s0)
20400ffc:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:95
    // printf("AD Domain separation \n");
   //  printS(&s);

    /* full plaintext blocks */
    while (mlen >= ASCON_128_RATE) {
20401000:	a079                	j	2040108e <crypto_aead_encrypt+0x328>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:96
        s.x[0] ^= LOADBYTES(m, 8);
20401002:	45a1                	li	a1,8
20401004:	f7442503          	lw	a0,-140(s0)
20401008:	3135                	jal	20400c34 <LOADBYTES>
2040100a:	86aa                	mv	a3,a0
2040100c:	872e                	mv	a4,a1
2040100e:	f8842783          	lw	a5,-120(s0)
20401012:	f8c42803          	lw	a6,-116(s0)
20401016:	00f6c633          	xor	a2,a3,a5
2040101a:	f4c42023          	sw	a2,-192(s0)
2040101e:	010747b3          	xor	a5,a4,a6
20401022:	f4f42223          	sw	a5,-188(s0)
20401026:	f4042783          	lw	a5,-192(s0)
2040102a:	f4442803          	lw	a6,-188(s0)
2040102e:	f8f42423          	sw	a5,-120(s0)
20401032:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:97
        STOREBYTES(c, s.x[0], 8);
20401036:	f8842783          	lw	a5,-120(s0)
2040103a:	f8c42803          	lw	a6,-116(s0)
2040103e:	46a1                	li	a3,8
20401040:	85be                	mv	a1,a5
20401042:	8642                	mv	a2,a6
20401044:	f7c42503          	lw	a0,-132(s0)
20401048:	3941                	jal	20400cd8 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:102

        //printf("absorb plain \n");
       // printS(&s);

        P6(&s);
2040104a:	f8840793          	addi	a5,s0,-120
2040104e:	853e                	mv	a0,a5
20401050:	3e49                	jal	20400be2 <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:103
        m += ASCON_128_RATE;
20401052:	f7442783          	lw	a5,-140(s0)
20401056:	07a1                	addi	a5,a5,8
20401058:	f6f42a23          	sw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:104
        c += ASCON_128_RATE;
2040105c:	f7c42783          	lw	a5,-132(s0)
20401060:	07a1                	addi	a5,a5,8
20401062:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:105
        mlen -= ASCON_128_RATE;
20401066:	f6842683          	lw	a3,-152(s0)
2040106a:	f6c42703          	lw	a4,-148(s0)
2040106e:	55e1                	li	a1,-8
20401070:	567d                	li	a2,-1
20401072:	00b687b3          	add	a5,a3,a1
20401076:	853e                	mv	a0,a5
20401078:	00d53533          	sltu	a0,a0,a3
2040107c:	00c70833          	add	a6,a4,a2
20401080:	01050733          	add	a4,a0,a6
20401084:	883a                	mv	a6,a4
20401086:	f6f42423          	sw	a5,-152(s0)
2040108a:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:95
    while (mlen >= ASCON_128_RATE) {
2040108e:	f6c42783          	lw	a5,-148(s0)
20401092:	fba5                	bnez	a5,20401002 <crypto_aead_encrypt+0x29c>
20401094:	f6c42783          	lw	a5,-148(s0)
20401098:	e791                	bnez	a5,204010a4 <crypto_aead_encrypt+0x33e>
2040109a:	f6842703          	lw	a4,-152(s0)
2040109e:	479d                	li	a5,7
204010a0:	f6e7e1e3          	bltu	a5,a4,20401002 <crypto_aead_encrypt+0x29c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:108
    }
    /* final plaintext block */
    s.x[0] ^= LOADBYTES(m, mlen);
204010a4:	f6842783          	lw	a5,-152(s0)
204010a8:	85be                	mv	a1,a5
204010aa:	f7442503          	lw	a0,-140(s0)
204010ae:	3659                	jal	20400c34 <LOADBYTES>
204010b0:	86aa                	mv	a3,a0
204010b2:	872e                	mv	a4,a1
204010b4:	f8842783          	lw	a5,-120(s0)
204010b8:	f8c42803          	lw	a6,-116(s0)
204010bc:	00f6c633          	xor	a2,a3,a5
204010c0:	f2c42c23          	sw	a2,-200(s0)
204010c4:	010747b3          	xor	a5,a4,a6
204010c8:	f2f42e23          	sw	a5,-196(s0)
204010cc:	f3842783          	lw	a5,-200(s0)
204010d0:	f3c42803          	lw	a6,-196(s0)
204010d4:	f8f42423          	sw	a5,-120(s0)
204010d8:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:112
    //printf("C: %lx\n", LOADBYTES(m, mlen));
    // printf("C S_0: %lx\n", s.x[0]);

    STOREBYTES(c, s.x[0], mlen);
204010dc:	f8842783          	lw	a5,-120(s0)
204010e0:	f8c42803          	lw	a6,-116(s0)
204010e4:	f6842703          	lw	a4,-152(s0)
204010e8:	86ba                	mv	a3,a4
204010ea:	85be                	mv	a1,a5
204010ec:	8642                	mv	a2,a6
204010ee:	f7c42503          	lw	a0,-132(s0)
204010f2:	36dd                	jal	20400cd8 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:118
   // printf("\n");
//    for (int ax; ax < 8; ax++) {
//        printf("%x", *(c + ax));
//    }
//    printf("\n");
    s.x[0] ^= PAD(mlen);
204010f4:	f8842683          	lw	a3,-120(s0)
204010f8:	f8c42703          	lw	a4,-116(s0)
204010fc:	f6842603          	lw	a2,-152(s0)
20401100:	4781                	li	a5,0
20401102:	8f91                	sub	a5,a5,a2
20401104:	078e                	slli	a5,a5,0x3
20401106:	03878793          	addi	a5,a5,56
2040110a:	fe078613          	addi	a2,a5,-32
2040110e:	00064863          	bltz	a2,2040111e <crypto_aead_encrypt+0x3b8>
20401112:	08000793          	li	a5,128
20401116:	00c799b3          	sll	s3,a5,a2
2040111a:	4901                	li	s2,0
2040111c:	a015                	j	20401140 <crypto_aead_encrypt+0x3da>
2040111e:	08000613          	li	a2,128
20401122:	00165593          	srli	a1,a2,0x1
20401126:	467d                	li	a2,31
20401128:	8e1d                	sub	a2,a2,a5
2040112a:	00c5d633          	srl	a2,a1,a2
2040112e:	4581                	li	a1,0
20401130:	00f599b3          	sll	s3,a1,a5
20401134:	013669b3          	or	s3,a2,s3
20401138:	08000613          	li	a2,128
2040113c:	00f61933          	sll	s2,a2,a5
20401140:	0126c7b3          	xor	a5,a3,s2
20401144:	f2f42823          	sw	a5,-208(s0)
20401148:	013747b3          	xor	a5,a4,s3
2040114c:	f2f42a23          	sw	a5,-204(s0)
20401150:	f3042783          	lw	a5,-208(s0)
20401154:	f3442803          	lw	a6,-204(s0)
20401158:	f8f42423          	sw	a5,-120(s0)
2040115c:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:119
    c += mlen;
20401160:	f6842783          	lw	a5,-152(s0)
20401164:	f7c42703          	lw	a4,-132(s0)
20401168:	97ba                	add	a5,a5,a4
2040116a:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:125

    //printf("pad plain \n");
    //printS(&s);

    /* finalize */
    s.x[1] ^= K0;
2040116e:	f9042783          	lw	a5,-112(s0)
20401172:	f9442803          	lw	a6,-108(s0)
20401176:	fc842703          	lw	a4,-56(s0)
2040117a:	8f3d                	xor	a4,a4,a5
2040117c:	f2e42423          	sw	a4,-216(s0)
20401180:	fcc42703          	lw	a4,-52(s0)
20401184:	010747b3          	xor	a5,a4,a6
20401188:	f2f42623          	sw	a5,-212(s0)
2040118c:	f2842783          	lw	a5,-216(s0)
20401190:	f2c42803          	lw	a6,-212(s0)
20401194:	f8f42823          	sw	a5,-112(s0)
20401198:	f9042a23          	sw	a6,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:126
    s.x[2] ^= K1;
2040119c:	f9842783          	lw	a5,-104(s0)
204011a0:	f9c42803          	lw	a6,-100(s0)
204011a4:	fc042703          	lw	a4,-64(s0)
204011a8:	8f3d                	xor	a4,a4,a5
204011aa:	f2e42023          	sw	a4,-224(s0)
204011ae:	fc442703          	lw	a4,-60(s0)
204011b2:	010747b3          	xor	a5,a4,a6
204011b6:	f2f42223          	sw	a5,-220(s0)
204011ba:	f2042783          	lw	a5,-224(s0)
204011be:	f2442803          	lw	a6,-220(s0)
204011c2:	f8f42c23          	sw	a5,-104(s0)
204011c6:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:131

    //printf("key xor 1 \n");
    //printS(&s);

    P12(&s);
204011ca:	f8840793          	addi	a5,s0,-120
204011ce:	853e                	mv	a0,a5
204011d0:	3251                	jal	20400b54 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:132
    s.x[3] ^= K0;
204011d2:	fa042783          	lw	a5,-96(s0)
204011d6:	fa442803          	lw	a6,-92(s0)
204011da:	fc842703          	lw	a4,-56(s0)
204011de:	8f3d                	xor	a4,a4,a5
204011e0:	f0e42c23          	sw	a4,-232(s0)
204011e4:	fcc42703          	lw	a4,-52(s0)
204011e8:	010747b3          	xor	a5,a4,a6
204011ec:	f0f42e23          	sw	a5,-228(s0)
204011f0:	f1842783          	lw	a5,-232(s0)
204011f4:	f1c42803          	lw	a6,-228(s0)
204011f8:	faf42023          	sw	a5,-96(s0)
204011fc:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:133
    s.x[4] ^= K1;
20401200:	fa842783          	lw	a5,-88(s0)
20401204:	fac42803          	lw	a6,-84(s0)
20401208:	fc042703          	lw	a4,-64(s0)
2040120c:	8f3d                	xor	a4,a4,a5
2040120e:	f0e42823          	sw	a4,-240(s0)
20401212:	fc442703          	lw	a4,-60(s0)
20401216:	010747b3          	xor	a5,a4,a6
2040121a:	f0f42a23          	sw	a5,-236(s0)
2040121e:	f1042783          	lw	a5,-240(s0)
20401222:	f1442803          	lw	a6,-236(s0)
20401226:	faf42423          	sw	a5,-88(s0)
2040122a:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:139

    //printf("key kor 2 \n");
   // printS(&s);

    /* set tag */
    STOREBYTES(c, s.x[3], 8);
2040122e:	fa042783          	lw	a5,-96(s0)
20401232:	fa442803          	lw	a6,-92(s0)
20401236:	46a1                	li	a3,8
20401238:	85be                	mv	a1,a5
2040123a:	8642                	mv	a2,a6
2040123c:	f7c42503          	lw	a0,-132(s0)
20401240:	3c61                	jal	20400cd8 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:140
    STOREBYTES(c + 8, s.x[4], 8);
20401242:	f7c42783          	lw	a5,-132(s0)
20401246:	00878713          	addi	a4,a5,8
2040124a:	fa842783          	lw	a5,-88(s0)
2040124e:	fac42803          	lw	a6,-84(s0)
20401252:	46a1                	li	a3,8
20401254:	85be                	mv	a1,a5
20401256:	8642                	mv	a2,a6
20401258:	853a                	mv	a0,a4
2040125a:	3cbd                	jal	20400cd8 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:142

    return 0;
2040125c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:143
}
2040125e:	853e                	mv	a0,a5
20401260:	50be                	lw	ra,236(sp)
20401262:	542e                	lw	s0,232(sp)
20401264:	591e                	lw	s2,228(sp)
20401266:	598e                	lw	s3,224(sp)
20401268:	4a7e                	lw	s4,220(sp)
2040126a:	4aee                	lw	s5,216(sp)
2040126c:	4b5e                	lw	s6,212(sp)
2040126e:	4bce                	lw	s7,208(sp)
20401270:	4c3e                	lw	s8,204(sp)
20401272:	4cae                	lw	s9,200(sp)
20401274:	4d1e                	lw	s10,196(sp)
20401276:	4d8e                	lw	s11,192(sp)
20401278:	616d                	addi	sp,sp,240
2040127a:	8082                	ret

2040127c <_putchar>:
_putchar():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:120
// import float.h for DBL_MAX
#if defined(PRINTF_SUPPORT_FLOAT)
#include <float.h>
#endif

void _putchar(char character){
2040127c:	1101                	addi	sp,sp,-32
2040127e:	ce06                	sw	ra,28(sp)
20401280:	cc22                	sw	s0,24(sp)
20401282:	1000                	addi	s0,sp,32
20401284:	87aa                	mv	a5,a0
20401286:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:121
    write(1, &character, 1);
2040128a:	fef40793          	addi	a5,s0,-17
2040128e:	4605                	li	a2,1
20401290:	85be                	mv	a1,a5
20401292:	4505                	li	a0,1
20401294:	6ef010ef          	jal	ra,20403182 <write>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:122
}
20401298:	0001                	nop
2040129a:	40f2                	lw	ra,28(sp)
2040129c:	4462                	lw	s0,24(sp)
2040129e:	6105                	addi	sp,sp,32
204012a0:	8082                	ret

204012a2 <_out_null>:
_out_null():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:146
}


// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
204012a2:	1101                	addi	sp,sp,-32
204012a4:	ce22                	sw	s0,28(sp)
204012a6:	1000                	addi	s0,sp,32
204012a8:	87aa                	mv	a5,a0
204012aa:	feb42423          	sw	a1,-24(s0)
204012ae:	fec42223          	sw	a2,-28(s0)
204012b2:	fed42023          	sw	a3,-32(s0)
204012b6:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:148
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
204012ba:	0001                	nop
204012bc:	4472                	lw	s0,28(sp)
204012be:	6105                	addi	sp,sp,32
204012c0:	8082                	ret

204012c2 <_out_char>:
_out_char():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:153


// internal _putchar wrapper
static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
{
204012c2:	1101                	addi	sp,sp,-32
204012c4:	ce06                	sw	ra,28(sp)
204012c6:	cc22                	sw	s0,24(sp)
204012c8:	1000                	addi	s0,sp,32
204012ca:	87aa                	mv	a5,a0
204012cc:	feb42423          	sw	a1,-24(s0)
204012d0:	fec42223          	sw	a2,-28(s0)
204012d4:	fed42023          	sw	a3,-32(s0)
204012d8:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:155
  (void)buffer; (void)idx; (void)maxlen;
  if (character) {
204012dc:	fef44783          	lbu	a5,-17(s0)
204012e0:	c789                	beqz	a5,204012ea <_out_char+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:156
    _putchar(character);
204012e2:	fef44783          	lbu	a5,-17(s0)
204012e6:	853e                	mv	a0,a5
204012e8:	3f51                	jal	2040127c <_putchar>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:158
  }
}
204012ea:	0001                	nop
204012ec:	40f2                	lw	ra,28(sp)
204012ee:	4462                	lw	s0,24(sp)
204012f0:	6105                	addi	sp,sp,32
204012f2:	8082                	ret

204012f4 <_strnlen_s>:
_strnlen_s():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:175


// internal secure strlen
// \return The length of the string (excluding the terminating 0) limited by 'maxsize'
static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
{
204012f4:	7179                	addi	sp,sp,-48
204012f6:	d622                	sw	s0,44(sp)
204012f8:	1800                	addi	s0,sp,48
204012fa:	fca42e23          	sw	a0,-36(s0)
204012fe:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177
  const char* s;
  for (s = str; *s && maxsize--; ++s);
20401302:	fdc42783          	lw	a5,-36(s0)
20401306:	fef42623          	sw	a5,-20(s0)
2040130a:	a031                	j	20401316 <_strnlen_s+0x22>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177 (discriminator 4)
2040130c:	fec42783          	lw	a5,-20(s0)
20401310:	0785                	addi	a5,a5,1
20401312:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177 (discriminator 1)
20401316:	fec42783          	lw	a5,-20(s0)
2040131a:	0007c783          	lbu	a5,0(a5)
2040131e:	cb81                	beqz	a5,2040132e <_strnlen_s+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177 (discriminator 3)
20401320:	fd842783          	lw	a5,-40(s0)
20401324:	fff78713          	addi	a4,a5,-1
20401328:	fce42c23          	sw	a4,-40(s0)
2040132c:	f3e5                	bnez	a5,2040130c <_strnlen_s+0x18>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:178
  return (unsigned int)(s - str);
2040132e:	fec42703          	lw	a4,-20(s0)
20401332:	fdc42783          	lw	a5,-36(s0)
20401336:	40f707b3          	sub	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:179
}
2040133a:	853e                	mv	a0,a5
2040133c:	5432                	lw	s0,44(sp)
2040133e:	6145                	addi	sp,sp,48
20401340:	8082                	ret

20401342 <_is_digit>:
_is_digit():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:185


// internal test if char is a digit (0-9)
// \return true if char is a digit
static inline bool _is_digit(char ch)
{
20401342:	1101                	addi	sp,sp,-32
20401344:	ce22                	sw	s0,28(sp)
20401346:	1000                	addi	s0,sp,32
20401348:	87aa                	mv	a5,a0
2040134a:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186
  return (ch >= '0') && (ch <= '9');
2040134e:	fef44703          	lbu	a4,-17(s0)
20401352:	02f00793          	li	a5,47
20401356:	00e7fa63          	bgeu	a5,a4,2040136a <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 1)
2040135a:	fef44703          	lbu	a4,-17(s0)
2040135e:	03900793          	li	a5,57
20401362:	00e7e463          	bltu	a5,a4,2040136a <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 3)
20401366:	4785                	li	a5,1
20401368:	a011                	j	2040136c <_is_digit+0x2a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 4)
2040136a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 6)
2040136c:	8b85                	andi	a5,a5,1
2040136e:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:187 (discriminator 6)
}
20401372:	853e                	mv	a0,a5
20401374:	4472                	lw	s0,28(sp)
20401376:	6105                	addi	sp,sp,32
20401378:	8082                	ret

2040137a <_atoi>:
_atoi():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:192


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
2040137a:	7179                	addi	sp,sp,-48
2040137c:	d606                	sw	ra,44(sp)
2040137e:	d422                	sw	s0,40(sp)
20401380:	1800                	addi	s0,sp,48
20401382:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:193
  unsigned int i = 0U;
20401386:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:194
  while (_is_digit(**str)) {
2040138a:	a03d                	j	204013b8 <_atoi+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:195
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
2040138c:	fec42703          	lw	a4,-20(s0)
20401390:	87ba                	mv	a5,a4
20401392:	078a                	slli	a5,a5,0x2
20401394:	97ba                	add	a5,a5,a4
20401396:	0786                	slli	a5,a5,0x1
20401398:	863e                	mv	a2,a5
2040139a:	fdc42783          	lw	a5,-36(s0)
2040139e:	439c                	lw	a5,0(a5)
204013a0:	00178693          	addi	a3,a5,1
204013a4:	fdc42703          	lw	a4,-36(s0)
204013a8:	c314                	sw	a3,0(a4)
204013aa:	0007c783          	lbu	a5,0(a5)
204013ae:	97b2                	add	a5,a5,a2
204013b0:	fd078793          	addi	a5,a5,-48
204013b4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:194
  while (_is_digit(**str)) {
204013b8:	fdc42783          	lw	a5,-36(s0)
204013bc:	439c                	lw	a5,0(a5)
204013be:	0007c783          	lbu	a5,0(a5)
204013c2:	853e                	mv	a0,a5
204013c4:	3fbd                	jal	20401342 <_is_digit>
204013c6:	87aa                	mv	a5,a0
204013c8:	f3f1                	bnez	a5,2040138c <_atoi+0x12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:197
  }
  return i;
204013ca:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:198
}
204013ce:	853e                	mv	a0,a5
204013d0:	50b2                	lw	ra,44(sp)
204013d2:	5422                	lw	s0,40(sp)
204013d4:	6145                	addi	sp,sp,48
204013d6:	8082                	ret

204013d8 <_out_rev>:
_out_rev():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:203


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
204013d8:	7139                	addi	sp,sp,-64
204013da:	de06                	sw	ra,60(sp)
204013dc:	dc22                	sw	s0,56(sp)
204013de:	0080                	addi	s0,sp,64
204013e0:	fca42e23          	sw	a0,-36(s0)
204013e4:	fcb42c23          	sw	a1,-40(s0)
204013e8:	fcc42a23          	sw	a2,-44(s0)
204013ec:	fcd42823          	sw	a3,-48(s0)
204013f0:	fce42623          	sw	a4,-52(s0)
204013f4:	fcf42423          	sw	a5,-56(s0)
204013f8:	fd042223          	sw	a6,-60(s0)
204013fc:	fd142023          	sw	a7,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:204
  const size_t start_idx = idx;
20401400:	fd442783          	lw	a5,-44(s0)
20401404:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:207

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
20401408:	fc042783          	lw	a5,-64(s0)
2040140c:	8b89                	andi	a5,a5,2
2040140e:	e3c1                	bnez	a5,2040148e <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:207 (discriminator 1)
20401410:	fc042783          	lw	a5,-64(s0)
20401414:	8b85                	andi	a5,a5,1
20401416:	efa5                	bnez	a5,2040148e <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:208
    for (size_t i = len; i < width; i++) {
20401418:	fc842783          	lw	a5,-56(s0)
2040141c:	fef42623          	sw	a5,-20(s0)
20401420:	a035                	j	2040144c <_out_rev+0x74>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:209 (discriminator 3)
      out(' ', buffer, idx++, maxlen);
20401422:	fd442783          	lw	a5,-44(s0)
20401426:	00178713          	addi	a4,a5,1
2040142a:	fce42a23          	sw	a4,-44(s0)
2040142e:	fdc42703          	lw	a4,-36(s0)
20401432:	fd042683          	lw	a3,-48(s0)
20401436:	863e                	mv	a2,a5
20401438:	fd842583          	lw	a1,-40(s0)
2040143c:	02000513          	li	a0,32
20401440:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:208 (discriminator 3)
    for (size_t i = len; i < width; i++) {
20401442:	fec42783          	lw	a5,-20(s0)
20401446:	0785                	addi	a5,a5,1
20401448:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:208 (discriminator 1)
2040144c:	fec42703          	lw	a4,-20(s0)
20401450:	fc442783          	lw	a5,-60(s0)
20401454:	fcf767e3          	bltu	a4,a5,20401422 <_out_rev+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:214
    }
  }

  // reverse string
  while (len) {
20401458:	a81d                	j	2040148e <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:215
    out(buf[--len], buffer, idx++, maxlen);
2040145a:	fc842783          	lw	a5,-56(s0)
2040145e:	17fd                	addi	a5,a5,-1
20401460:	fcf42423          	sw	a5,-56(s0)
20401464:	fcc42703          	lw	a4,-52(s0)
20401468:	fc842783          	lw	a5,-56(s0)
2040146c:	97ba                	add	a5,a5,a4
2040146e:	0007c503          	lbu	a0,0(a5)
20401472:	fd442783          	lw	a5,-44(s0)
20401476:	00178713          	addi	a4,a5,1
2040147a:	fce42a23          	sw	a4,-44(s0)
2040147e:	fdc42703          	lw	a4,-36(s0)
20401482:	fd042683          	lw	a3,-48(s0)
20401486:	863e                	mv	a2,a5
20401488:	fd842583          	lw	a1,-40(s0)
2040148c:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:214
  while (len) {
2040148e:	fc842783          	lw	a5,-56(s0)
20401492:	f7e1                	bnez	a5,2040145a <_out_rev+0x82>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:219
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
20401494:	fc042783          	lw	a5,-64(s0)
20401498:	8b89                	andi	a5,a5,2
2040149a:	cf85                	beqz	a5,204014d2 <_out_rev+0xfa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:220
    while (idx - start_idx < width) {
2040149c:	a00d                	j	204014be <_out_rev+0xe6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:221
      out(' ', buffer, idx++, maxlen);
2040149e:	fd442783          	lw	a5,-44(s0)
204014a2:	00178713          	addi	a4,a5,1
204014a6:	fce42a23          	sw	a4,-44(s0)
204014aa:	fdc42703          	lw	a4,-36(s0)
204014ae:	fd042683          	lw	a3,-48(s0)
204014b2:	863e                	mv	a2,a5
204014b4:	fd842583          	lw	a1,-40(s0)
204014b8:	02000513          	li	a0,32
204014bc:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:220
    while (idx - start_idx < width) {
204014be:	fd442703          	lw	a4,-44(s0)
204014c2:	fe842783          	lw	a5,-24(s0)
204014c6:	40f707b3          	sub	a5,a4,a5
204014ca:	fc442703          	lw	a4,-60(s0)
204014ce:	fce7e8e3          	bltu	a5,a4,2040149e <_out_rev+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:225
    }
  }

  return idx;
204014d2:	fd442783          	lw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:226
}
204014d6:	853e                	mv	a0,a5
204014d8:	50f2                	lw	ra,60(sp)
204014da:	5462                	lw	s0,56(sp)
204014dc:	6121                	addi	sp,sp,64
204014de:	8082                	ret

204014e0 <_ntoa_format>:
_ntoa_format():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:231


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
204014e0:	7179                	addi	sp,sp,-48
204014e2:	d606                	sw	ra,44(sp)
204014e4:	d422                	sw	s0,40(sp)
204014e6:	1800                	addi	s0,sp,48
204014e8:	fea42623          	sw	a0,-20(s0)
204014ec:	feb42423          	sw	a1,-24(s0)
204014f0:	fec42223          	sw	a2,-28(s0)
204014f4:	fed42023          	sw	a3,-32(s0)
204014f8:	fce42e23          	sw	a4,-36(s0)
204014fc:	fcf42c23          	sw	a5,-40(s0)
20401500:	87c2                	mv	a5,a6
20401502:	fd142823          	sw	a7,-48(s0)
20401506:	fcf40ba3          	sb	a5,-41(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:233
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
2040150a:	441c                	lw	a5,8(s0)
2040150c:	8b89                	andi	a5,a5,2
2040150e:	e3d1                	bnez	a5,20401592 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
20401510:	405c                	lw	a5,4(s0)
20401512:	cb9d                	beqz	a5,20401548 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234 (discriminator 1)
20401514:	441c                	lw	a5,8(s0)
20401516:	8b85                	andi	a5,a5,1
20401518:	cb85                	beqz	a5,20401548 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234 (discriminator 2)
2040151a:	fd744783          	lbu	a5,-41(s0)
2040151e:	e781                	bnez	a5,20401526 <_ntoa_format+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234 (discriminator 3)
20401520:	441c                	lw	a5,8(s0)
20401522:	8bb1                	andi	a5,a5,12
20401524:	c395                	beqz	a5,20401548 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:235
      width--;
20401526:	405c                	lw	a5,4(s0)
20401528:	17fd                	addi	a5,a5,-1
2040152a:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:237
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
2040152c:	a831                	j	20401548 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:238
      buf[len++] = '0';
2040152e:	fd842783          	lw	a5,-40(s0)
20401532:	00178713          	addi	a4,a5,1
20401536:	fce42c23          	sw	a4,-40(s0)
2040153a:	fdc42703          	lw	a4,-36(s0)
2040153e:	97ba                	add	a5,a5,a4
20401540:	03000713          	li	a4,48
20401544:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:237
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20401548:	fd842703          	lw	a4,-40(s0)
2040154c:	401c                	lw	a5,0(s0)
2040154e:	02f77563          	bgeu	a4,a5,20401578 <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:237 (discriminator 1)
20401552:	fd842703          	lw	a4,-40(s0)
20401556:	47fd                	li	a5,31
20401558:	fce7fbe3          	bgeu	a5,a4,2040152e <_ntoa_format+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
2040155c:	a831                	j	20401578 <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:241
      buf[len++] = '0';
2040155e:	fd842783          	lw	a5,-40(s0)
20401562:	00178713          	addi	a4,a5,1
20401566:	fce42c23          	sw	a4,-40(s0)
2040156a:	fdc42703          	lw	a4,-36(s0)
2040156e:	97ba                	add	a5,a5,a4
20401570:	03000713          	li	a4,48
20401574:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20401578:	441c                	lw	a5,8(s0)
2040157a:	8b85                	andi	a5,a5,1
2040157c:	cb99                	beqz	a5,20401592 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240 (discriminator 1)
2040157e:	fd842703          	lw	a4,-40(s0)
20401582:	405c                	lw	a5,4(s0)
20401584:	00f77763          	bgeu	a4,a5,20401592 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240 (discriminator 2)
20401588:	fd842703          	lw	a4,-40(s0)
2040158c:	47fd                	li	a5,31
2040158e:	fce7f8e3          	bgeu	a5,a4,2040155e <_ntoa_format+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:246
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
20401592:	441c                	lw	a5,8(s0)
20401594:	8bc1                	andi	a5,a5,16
20401596:	10078663          	beqz	a5,204016a2 <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
2040159a:	441c                	lw	a5,8(s0)
2040159c:	4007f793          	andi	a5,a5,1024
204015a0:	e3a1                	bnez	a5,204015e0 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247 (discriminator 1)
204015a2:	fd842783          	lw	a5,-40(s0)
204015a6:	cf8d                	beqz	a5,204015e0 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247 (discriminator 2)
204015a8:	fd842703          	lw	a4,-40(s0)
204015ac:	401c                	lw	a5,0(s0)
204015ae:	00f70763          	beq	a4,a5,204015bc <_ntoa_format+0xdc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247 (discriminator 3)
204015b2:	fd842703          	lw	a4,-40(s0)
204015b6:	405c                	lw	a5,4(s0)
204015b8:	02f71463          	bne	a4,a5,204015e0 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:248
      len--;
204015bc:	fd842783          	lw	a5,-40(s0)
204015c0:	17fd                	addi	a5,a5,-1
204015c2:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:249
      if (len && (base == 16U)) {
204015c6:	fd842783          	lw	a5,-40(s0)
204015ca:	cb99                	beqz	a5,204015e0 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:249 (discriminator 1)
204015cc:	fd042703          	lw	a4,-48(s0)
204015d0:	47c1                	li	a5,16
204015d2:	00f71763          	bne	a4,a5,204015e0 <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:250
        len--;
204015d6:	fd842783          	lw	a5,-40(s0)
204015da:	17fd                	addi	a5,a5,-1
204015dc:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:253
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204015e0:	fd042703          	lw	a4,-48(s0)
204015e4:	47c1                	li	a5,16
204015e6:	02f71963          	bne	a4,a5,20401618 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:253 (discriminator 1)
204015ea:	441c                	lw	a5,8(s0)
204015ec:	0207f793          	andi	a5,a5,32
204015f0:	e785                	bnez	a5,20401618 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:253 (discriminator 2)
204015f2:	fd842703          	lw	a4,-40(s0)
204015f6:	47fd                	li	a5,31
204015f8:	02e7e063          	bltu	a5,a4,20401618 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:254
      buf[len++] = 'x';
204015fc:	fd842783          	lw	a5,-40(s0)
20401600:	00178713          	addi	a4,a5,1
20401604:	fce42c23          	sw	a4,-40(s0)
20401608:	fdc42703          	lw	a4,-36(s0)
2040160c:	97ba                	add	a5,a5,a4
2040160e:	07800713          	li	a4,120
20401612:	00e78023          	sb	a4,0(a5)
20401616:	a0a5                	j	2040167e <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:256
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20401618:	fd042703          	lw	a4,-48(s0)
2040161c:	47c1                	li	a5,16
2040161e:	02f71963          	bne	a4,a5,20401650 <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:256 (discriminator 1)
20401622:	441c                	lw	a5,8(s0)
20401624:	0207f793          	andi	a5,a5,32
20401628:	c785                	beqz	a5,20401650 <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:256 (discriminator 2)
2040162a:	fd842703          	lw	a4,-40(s0)
2040162e:	47fd                	li	a5,31
20401630:	02e7e063          	bltu	a5,a4,20401650 <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:257
      buf[len++] = 'X';
20401634:	fd842783          	lw	a5,-40(s0)
20401638:	00178713          	addi	a4,a5,1
2040163c:	fce42c23          	sw	a4,-40(s0)
20401640:	fdc42703          	lw	a4,-36(s0)
20401644:	97ba                	add	a5,a5,a4
20401646:	05800713          	li	a4,88
2040164a:	00e78023          	sb	a4,0(a5)
2040164e:	a805                	j	2040167e <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:259
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20401650:	fd042703          	lw	a4,-48(s0)
20401654:	4789                	li	a5,2
20401656:	02f71463          	bne	a4,a5,2040167e <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:259 (discriminator 1)
2040165a:	fd842703          	lw	a4,-40(s0)
2040165e:	47fd                	li	a5,31
20401660:	00e7ef63          	bltu	a5,a4,2040167e <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:260
      buf[len++] = 'b';
20401664:	fd842783          	lw	a5,-40(s0)
20401668:	00178713          	addi	a4,a5,1
2040166c:	fce42c23          	sw	a4,-40(s0)
20401670:	fdc42703          	lw	a4,-36(s0)
20401674:	97ba                	add	a5,a5,a4
20401676:	06200713          	li	a4,98
2040167a:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:262
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
2040167e:	fd842703          	lw	a4,-40(s0)
20401682:	47fd                	li	a5,31
20401684:	00e7ef63          	bltu	a5,a4,204016a2 <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:263
      buf[len++] = '0';
20401688:	fd842783          	lw	a5,-40(s0)
2040168c:	00178713          	addi	a4,a5,1
20401690:	fce42c23          	sw	a4,-40(s0)
20401694:	fdc42703          	lw	a4,-36(s0)
20401698:	97ba                	add	a5,a5,a4
2040169a:	03000713          	li	a4,48
2040169e:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:267
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
204016a2:	fd842703          	lw	a4,-40(s0)
204016a6:	47fd                	li	a5,31
204016a8:	06e7e463          	bltu	a5,a4,20401710 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:268
    if (negative) {
204016ac:	fd744783          	lbu	a5,-41(s0)
204016b0:	cf99                	beqz	a5,204016ce <_ntoa_format+0x1ee>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:269
      buf[len++] = '-';
204016b2:	fd842783          	lw	a5,-40(s0)
204016b6:	00178713          	addi	a4,a5,1
204016ba:	fce42c23          	sw	a4,-40(s0)
204016be:	fdc42703          	lw	a4,-36(s0)
204016c2:	97ba                	add	a5,a5,a4
204016c4:	02d00713          	li	a4,45
204016c8:	00e78023          	sb	a4,0(a5)
204016cc:	a091                	j	20401710 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:271
    }
    else if (flags & FLAGS_PLUS) {
204016ce:	441c                	lw	a5,8(s0)
204016d0:	8b91                	andi	a5,a5,4
204016d2:	cf99                	beqz	a5,204016f0 <_ntoa_format+0x210>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:272
      buf[len++] = '+';  // ignore the space if the '+' exists
204016d4:	fd842783          	lw	a5,-40(s0)
204016d8:	00178713          	addi	a4,a5,1
204016dc:	fce42c23          	sw	a4,-40(s0)
204016e0:	fdc42703          	lw	a4,-36(s0)
204016e4:	97ba                	add	a5,a5,a4
204016e6:	02b00713          	li	a4,43
204016ea:	00e78023          	sb	a4,0(a5)
204016ee:	a00d                	j	20401710 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:274
    }
    else if (flags & FLAGS_SPACE) {
204016f0:	441c                	lw	a5,8(s0)
204016f2:	8ba1                	andi	a5,a5,8
204016f4:	cf91                	beqz	a5,20401710 <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:275
      buf[len++] = ' ';
204016f6:	fd842783          	lw	a5,-40(s0)
204016fa:	00178713          	addi	a4,a5,1
204016fe:	fce42c23          	sw	a4,-40(s0)
20401702:	fdc42703          	lw	a4,-36(s0)
20401706:	97ba                	add	a5,a5,a4
20401708:	02000713          	li	a4,32
2040170c:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:279
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
20401710:	00842883          	lw	a7,8(s0)
20401714:	00442803          	lw	a6,4(s0)
20401718:	fd842783          	lw	a5,-40(s0)
2040171c:	fdc42703          	lw	a4,-36(s0)
20401720:	fe042683          	lw	a3,-32(s0)
20401724:	fe442603          	lw	a2,-28(s0)
20401728:	fe842583          	lw	a1,-24(s0)
2040172c:	fec42503          	lw	a0,-20(s0)
20401730:	3165                	jal	204013d8 <_out_rev>
20401732:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:280
}
20401734:	853e                	mv	a0,a5
20401736:	50b2                	lw	ra,44(sp)
20401738:	5422                	lw	s0,40(sp)
2040173a:	6145                	addi	sp,sp,48
2040173c:	8082                	ret

2040173e <_ntoa_long>:
_ntoa_long():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:285


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
2040173e:	7159                	addi	sp,sp,-112
20401740:	d686                	sw	ra,108(sp)
20401742:	d4a2                	sw	s0,104(sp)
20401744:	1880                	addi	s0,sp,112
20401746:	faa42e23          	sw	a0,-68(s0)
2040174a:	fab42c23          	sw	a1,-72(s0)
2040174e:	fac42a23          	sw	a2,-76(s0)
20401752:	fad42823          	sw	a3,-80(s0)
20401756:	fae42623          	sw	a4,-84(s0)
2040175a:	fb042223          	sw	a6,-92(s0)
2040175e:	fb142023          	sw	a7,-96(s0)
20401762:	faf405a3          	sb	a5,-85(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:287
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
20401766:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:290

  // no hash for 0 values
  if (!value) {
2040176a:	fac42783          	lw	a5,-84(s0)
2040176e:	e781                	bnez	a5,20401776 <_ntoa_long+0x38>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:291
    flags &= ~FLAGS_HASH;
20401770:	405c                	lw	a5,4(s0)
20401772:	9bbd                	andi	a5,a5,-17
20401774:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:295
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
20401776:	405c                	lw	a5,4(s0)
20401778:	4007f793          	andi	a5,a5,1024
2040177c:	c781                	beqz	a5,20401784 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:295 (discriminator 1)
2040177e:	fac42783          	lw	a5,-84(s0)
20401782:	c3c9                	beqz	a5,20401804 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:297
    do {
      const char digit = (char)(value % base);
20401784:	fac42703          	lw	a4,-84(s0)
20401788:	fa442783          	lw	a5,-92(s0)
2040178c:	02f777b3          	remu	a5,a4,a5
20401790:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
20401794:	feb44703          	lbu	a4,-21(s0)
20401798:	47a5                	li	a5,9
2040179a:	00e7e963          	bltu	a5,a4,204017ac <_ntoa_long+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 1)
2040179e:	feb44783          	lbu	a5,-21(s0)
204017a2:	03078793          	addi	a5,a5,48
204017a6:	0ff7f793          	andi	a5,a5,255
204017aa:	a015                	j	204017ce <_ntoa_long+0x90>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 2)
204017ac:	405c                	lw	a5,4(s0)
204017ae:	0207f793          	andi	a5,a5,32
204017b2:	c781                	beqz	a5,204017ba <_ntoa_long+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 4)
204017b4:	04100793          	li	a5,65
204017b8:	a019                	j	204017be <_ntoa_long+0x80>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 5)
204017ba:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 7)
204017be:	feb44703          	lbu	a4,-21(s0)
204017c2:	97ba                	add	a5,a5,a4
204017c4:	0ff7f793          	andi	a5,a5,255
204017c8:	17d9                	addi	a5,a5,-10
204017ca:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 8)
204017ce:	fec42703          	lw	a4,-20(s0)
204017d2:	00170693          	addi	a3,a4,1
204017d6:	fed42623          	sw	a3,-20(s0)
204017da:	ff040693          	addi	a3,s0,-16
204017de:	9736                	add	a4,a4,a3
204017e0:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:299 (discriminator 8)
      value /= base;
204017e4:	fac42703          	lw	a4,-84(s0)
204017e8:	fa442783          	lw	a5,-92(s0)
204017ec:	02f757b3          	divu	a5,a4,a5
204017f0:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:300 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
204017f4:	fac42783          	lw	a5,-84(s0)
204017f8:	c791                	beqz	a5,20401804 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:300 (discriminator 1)
204017fa:	fec42703          	lw	a4,-20(s0)
204017fe:	47fd                	li	a5,31
20401800:	f8e7f2e3          	bgeu	a5,a4,20401784 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:303
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20401804:	fab44683          	lbu	a3,-85(s0)
20401808:	fc840713          	addi	a4,s0,-56
2040180c:	405c                	lw	a5,4(s0)
2040180e:	c43e                	sw	a5,8(sp)
20401810:	401c                	lw	a5,0(s0)
20401812:	c23e                	sw	a5,4(sp)
20401814:	fa042783          	lw	a5,-96(s0)
20401818:	c03e                	sw	a5,0(sp)
2040181a:	fa442883          	lw	a7,-92(s0)
2040181e:	8836                	mv	a6,a3
20401820:	fec42783          	lw	a5,-20(s0)
20401824:	fb042683          	lw	a3,-80(s0)
20401828:	fb442603          	lw	a2,-76(s0)
2040182c:	fb842583          	lw	a1,-72(s0)
20401830:	fbc42503          	lw	a0,-68(s0)
20401834:	3175                	jal	204014e0 <_ntoa_format>
20401836:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:304
}
20401838:	853e                	mv	a0,a5
2040183a:	50b6                	lw	ra,108(sp)
2040183c:	5426                	lw	s0,104(sp)
2040183e:	6165                	addi	sp,sp,112
20401840:	8082                	ret

20401842 <_ntoa_long_long>:
_ntoa_long_long():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:310


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
20401842:	7119                	addi	sp,sp,-128
20401844:	d686                	sw	ra,108(sp)
20401846:	d4a2                	sw	s0,104(sp)
20401848:	1880                	addi	s0,sp,112
2040184a:	faa42e23          	sw	a0,-68(s0)
2040184e:	fab42c23          	sw	a1,-72(s0)
20401852:	fac42a23          	sw	a2,-76(s0)
20401856:	fad42823          	sw	a3,-80(s0)
2040185a:	fae42423          	sw	a4,-88(s0)
2040185e:	faf42623          	sw	a5,-84(s0)
20401862:	87c2                	mv	a5,a6
20401864:	01142623          	sw	a7,12(s0)
20401868:	faf403a3          	sb	a5,-89(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:312
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
2040186c:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:315

  // no hash for 0 values
  if (!value) {
20401870:	fa842783          	lw	a5,-88(s0)
20401874:	fac42703          	lw	a4,-84(s0)
20401878:	8fd9                	or	a5,a5,a4
2040187a:	e781                	bnez	a5,20401882 <_ntoa_long_long+0x40>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:316
    flags &= ~FLAGS_HASH;
2040187c:	4c5c                	lw	a5,28(s0)
2040187e:	9bbd                	andi	a5,a5,-17
20401880:	cc5c                	sw	a5,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:320
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
20401882:	4c5c                	lw	a5,28(s0)
20401884:	4007f793          	andi	a5,a5,1024
20401888:	c799                	beqz	a5,20401896 <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:320 (discriminator 1)
2040188a:	fa842783          	lw	a5,-88(s0)
2040188e:	fac42703          	lw	a4,-84(s0)
20401892:	8fd9                	or	a5,a5,a4
20401894:	c3c5                	beqz	a5,20401934 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:322
    do {
      const char digit = (char)(value % base);
20401896:	fa842783          	lw	a5,-88(s0)
2040189a:	fac42803          	lw	a6,-84(s0)
2040189e:	4450                	lw	a2,12(s0)
204018a0:	4814                	lw	a3,16(s0)
204018a2:	853e                	mv	a0,a5
204018a4:	85c2                	mv	a1,a6
204018a6:	47b010ef          	jal	ra,20403520 <__umoddi3>
204018aa:	87aa                	mv	a5,a0
204018ac:	882e                	mv	a6,a1
204018ae:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
204018b2:	feb44703          	lbu	a4,-21(s0)
204018b6:	47a5                	li	a5,9
204018b8:	00e7e963          	bltu	a5,a4,204018ca <_ntoa_long_long+0x88>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 1)
204018bc:	feb44783          	lbu	a5,-21(s0)
204018c0:	03078793          	addi	a5,a5,48
204018c4:	0ff7f793          	andi	a5,a5,255
204018c8:	a015                	j	204018ec <_ntoa_long_long+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 2)
204018ca:	4c5c                	lw	a5,28(s0)
204018cc:	0207f793          	andi	a5,a5,32
204018d0:	c781                	beqz	a5,204018d8 <_ntoa_long_long+0x96>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 4)
204018d2:	04100793          	li	a5,65
204018d6:	a019                	j	204018dc <_ntoa_long_long+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 5)
204018d8:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 7)
204018dc:	feb44703          	lbu	a4,-21(s0)
204018e0:	97ba                	add	a5,a5,a4
204018e2:	0ff7f793          	andi	a5,a5,255
204018e6:	17d9                	addi	a5,a5,-10
204018e8:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 8)
204018ec:	fec42703          	lw	a4,-20(s0)
204018f0:	00170693          	addi	a3,a4,1
204018f4:	fed42623          	sw	a3,-20(s0)
204018f8:	ff040693          	addi	a3,s0,-16
204018fc:	9736                	add	a4,a4,a3
204018fe:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:324 (discriminator 8)
      value /= base;
20401902:	4450                	lw	a2,12(s0)
20401904:	4814                	lw	a3,16(s0)
20401906:	fa842503          	lw	a0,-88(s0)
2040190a:	fac42583          	lw	a1,-84(s0)
2040190e:	0b5010ef          	jal	ra,204031c2 <__udivdi3>
20401912:	87aa                	mv	a5,a0
20401914:	882e                	mv	a6,a1
20401916:	faf42423          	sw	a5,-88(s0)
2040191a:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:325 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
2040191e:	fa842783          	lw	a5,-88(s0)
20401922:	fac42703          	lw	a4,-84(s0)
20401926:	8fd9                	or	a5,a5,a4
20401928:	c791                	beqz	a5,20401934 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:325 (discriminator 1)
2040192a:	fec42703          	lw	a4,-20(s0)
2040192e:	47fd                	li	a5,31
20401930:	f6e7f3e3          	bgeu	a5,a4,20401896 <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:328
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20401934:	4450                	lw	a2,12(s0)
20401936:	fa744683          	lbu	a3,-89(s0)
2040193a:	fc840713          	addi	a4,s0,-56
2040193e:	4c5c                	lw	a5,28(s0)
20401940:	c43e                	sw	a5,8(sp)
20401942:	4c1c                	lw	a5,24(s0)
20401944:	c23e                	sw	a5,4(sp)
20401946:	485c                	lw	a5,20(s0)
20401948:	c03e                	sw	a5,0(sp)
2040194a:	88b2                	mv	a7,a2
2040194c:	8836                	mv	a6,a3
2040194e:	fec42783          	lw	a5,-20(s0)
20401952:	fb042683          	lw	a3,-80(s0)
20401956:	fb442603          	lw	a2,-76(s0)
2040195a:	fb842583          	lw	a1,-72(s0)
2040195e:	fbc42503          	lw	a0,-68(s0)
20401962:	3ebd                	jal	204014e0 <_ntoa_format>
20401964:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:329
}
20401966:	853e                	mv	a0,a5
20401968:	50b6                	lw	ra,108(sp)
2040196a:	5426                	lw	s0,104(sp)
2040196c:	6109                	addi	sp,sp,128
2040196e:	8082                	ret

20401970 <_ftoa>:
_ftoa():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:343
#endif


// internal ftoa for fixed decimal floating point
static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
20401970:	7175                	addi	sp,sp,-144
20401972:	c706                	sw	ra,140(sp)
20401974:	c522                	sw	s0,136(sp)
20401976:	c326                	sw	s1,132(sp)
20401978:	0900                	addi	s0,sp,144
2040197a:	f8a42e23          	sw	a0,-100(s0)
2040197e:	f8b42c23          	sw	a1,-104(s0)
20401982:	f8c42a23          	sw	a2,-108(s0)
20401986:	f8d42823          	sw	a3,-112(s0)
2040198a:	f8e42423          	sw	a4,-120(s0)
2040198e:	f8f42623          	sw	a5,-116(s0)
20401992:	f9042223          	sw	a6,-124(s0)
20401996:	f9142023          	sw	a7,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:345
  char buf[PRINTF_FTOA_BUFFER_SIZE];
  size_t len  = 0U;
2040199a:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:346
  double diff = 0.0;
2040199e:	fc042823          	sw	zero,-48(s0)
204019a2:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:352

  // powers of 10
  static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };

  // test for special values
  if (value != value)
204019a6:	f8842603          	lw	a2,-120(s0)
204019aa:	f8c42683          	lw	a3,-116(s0)
204019ae:	f8842503          	lw	a0,-120(s0)
204019b2:	f8c42583          	lw	a1,-116(s0)
204019b6:	1e5020ef          	jal	ra,2040439a <__eqdf2>
204019ba:	87aa                	mv	a5,a0
204019bc:	c78d                	beqz	a5,204019e6 <_ftoa+0x76>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:353
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
204019be:	00042883          	lw	a7,0(s0)
204019c2:	f8042803          	lw	a6,-128(s0)
204019c6:	478d                	li	a5,3
204019c8:	20409737          	lui	a4,0x20409
204019cc:	bf070713          	addi	a4,a4,-1040 # 20408bf0 <_exit+0x102>
204019d0:	f9042683          	lw	a3,-112(s0)
204019d4:	f9442603          	lw	a2,-108(s0)
204019d8:	f9842583          	lw	a1,-104(s0)
204019dc:	f9c42503          	lw	a0,-100(s0)
204019e0:	3ae5                	jal	204013d8 <_out_rev>
204019e2:	87aa                	mv	a5,a0
204019e4:	ab89                	j	20401f36 <_ftoa+0x5c6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:354
  if (value < -DBL_MAX)
204019e6:	204097b7          	lui	a5,0x20409
204019ea:	c087a603          	lw	a2,-1016(a5) # 20408c08 <_exit+0x11a>
204019ee:	c0c7a683          	lw	a3,-1012(a5)
204019f2:	f8842503          	lw	a0,-120(s0)
204019f6:	f8c42583          	lw	a1,-116(s0)
204019fa:	2af020ef          	jal	ra,204044a8 <__ledf2>
204019fe:	87aa                	mv	a5,a0
20401a00:	0207d663          	bgez	a5,20401a2c <_ftoa+0xbc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:355
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
20401a04:	00042883          	lw	a7,0(s0)
20401a08:	f8042803          	lw	a6,-128(s0)
20401a0c:	4791                	li	a5,4
20401a0e:	20409737          	lui	a4,0x20409
20401a12:	bf470713          	addi	a4,a4,-1036 # 20408bf4 <_exit+0x106>
20401a16:	f9042683          	lw	a3,-112(s0)
20401a1a:	f9442603          	lw	a2,-108(s0)
20401a1e:	f9842583          	lw	a1,-104(s0)
20401a22:	f9c42503          	lw	a0,-100(s0)
20401a26:	3a4d                	jal	204013d8 <_out_rev>
20401a28:	87aa                	mv	a5,a0
20401a2a:	a331                	j	20401f36 <_ftoa+0x5c6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:356
  if (value > DBL_MAX)
20401a2c:	204097b7          	lui	a5,0x20409
20401a30:	c107a603          	lw	a2,-1008(a5) # 20408c10 <_exit+0x122>
20401a34:	c147a683          	lw	a3,-1004(a5)
20401a38:	f8842503          	lw	a0,-120(s0)
20401a3c:	f8c42583          	lw	a1,-116(s0)
20401a40:	1c5020ef          	jal	ra,20404404 <__gedf2>
20401a44:	87aa                	mv	a5,a0
20401a46:	04f05463          	blez	a5,20401a8e <_ftoa+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
20401a4a:	401c                	lw	a5,0(s0)
20401a4c:	8b91                	andi	a5,a5,4
20401a4e:	c791                	beqz	a5,20401a5a <_ftoa+0xea>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 1)
20401a50:	204097b7          	lui	a5,0x20409
20401a54:	bfc78713          	addi	a4,a5,-1028 # 20408bfc <_exit+0x10e>
20401a58:	a029                	j	20401a62 <_ftoa+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 2)
20401a5a:	204097b7          	lui	a5,0x20409
20401a5e:	c0478713          	addi	a4,a5,-1020 # 20408c04 <_exit+0x116>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 4)
20401a62:	401c                	lw	a5,0(s0)
20401a64:	8b91                	andi	a5,a5,4
20401a66:	c399                	beqz	a5,20401a6c <_ftoa+0xfc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 5)
20401a68:	4791                	li	a5,4
20401a6a:	a011                	j	20401a6e <_ftoa+0xfe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 6)
20401a6c:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 8)
20401a6e:	00042883          	lw	a7,0(s0)
20401a72:	f8042803          	lw	a6,-128(s0)
20401a76:	f9042683          	lw	a3,-112(s0)
20401a7a:	f9442603          	lw	a2,-108(s0)
20401a7e:	f9842583          	lw	a1,-104(s0)
20401a82:	f9c42503          	lw	a0,-100(s0)
20401a86:	953ff0ef          	jal	ra,204013d8 <_out_rev>
20401a8a:	87aa                	mv	a5,a0
20401a8c:	a16d                	j	20401f36 <_ftoa+0x5c6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:361

  // test for very large values
  // standard printf behavior is to print EVERY whole number digit -- which could be 100s of characters overflowing your buffers == bad
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
20401a8e:	204097b7          	lui	a5,0x20409
20401a92:	c187a603          	lw	a2,-1000(a5) # 20408c18 <_exit+0x12a>
20401a96:	c1c7a683          	lw	a3,-996(a5)
20401a9a:	f8842503          	lw	a0,-120(s0)
20401a9e:	f8c42583          	lw	a1,-116(s0)
20401aa2:	163020ef          	jal	ra,20404404 <__gedf2>
20401aa6:	87aa                	mv	a5,a0
20401aa8:	02f04163          	bgtz	a5,20401aca <_ftoa+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:361 (discriminator 1)
20401aac:	204097b7          	lui	a5,0x20409
20401ab0:	c207a603          	lw	a2,-992(a5) # 20408c20 <_exit+0x132>
20401ab4:	c247a683          	lw	a3,-988(a5)
20401ab8:	f8842503          	lw	a0,-120(s0)
20401abc:	f8c42583          	lw	a1,-116(s0)
20401ac0:	1e9020ef          	jal	ra,204044a8 <__ledf2>
20401ac4:	87aa                	mv	a5,a0
20401ac6:	0207d763          	bgez	a5,20401af4 <_ftoa+0x184>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:363
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
20401aca:	401c                	lw	a5,0(s0)
20401acc:	c03e                	sw	a5,0(sp)
20401ace:	f8042883          	lw	a7,-128(s0)
20401ad2:	f8442803          	lw	a6,-124(s0)
20401ad6:	f8842703          	lw	a4,-120(s0)
20401ada:	f8c42783          	lw	a5,-116(s0)
20401ade:	f9042683          	lw	a3,-112(s0)
20401ae2:	f9442603          	lw	a2,-108(s0)
20401ae6:	f9842583          	lw	a1,-104(s0)
20401aea:	f9c42503          	lw	a0,-100(s0)
20401aee:	2991                	jal	20401f42 <_etoa>
20401af0:	87aa                	mv	a5,a0
20401af2:	a191                	j	20401f36 <_ftoa+0x5c6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:370
    return 0U;
#endif
  }

  // test for negative
  bool negative = false;
20401af4:	fe0405a3          	sb	zero,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:371
  if (value < 0) {
20401af8:	4601                	li	a2,0
20401afa:	4681                	li	a3,0
20401afc:	f8842503          	lw	a0,-120(s0)
20401b00:	f8c42583          	lw	a1,-116(s0)
20401b04:	1a5020ef          	jal	ra,204044a8 <__ledf2>
20401b08:	87aa                	mv	a5,a0
20401b0a:	0207d363          	bgez	a5,20401b30 <_ftoa+0x1c0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:372
    negative = true;
20401b0e:	4785                	li	a5,1
20401b10:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:373
    value = 0 - value;
20401b14:	f8842603          	lw	a2,-120(s0)
20401b18:	f8c42683          	lw	a3,-116(s0)
20401b1c:	4501                	li	a0,0
20401b1e:	4581                	li	a1,0
20401b20:	669020ef          	jal	ra,20404988 <__subdf3>
20401b24:	87aa                	mv	a5,a0
20401b26:	882e                	mv	a6,a1
20401b28:	f8f42423          	sw	a5,-120(s0)
20401b2c:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:377
  }

  // set default precision, if not set explicitly
  if (!(flags & FLAGS_PRECISION)) {
20401b30:	401c                	lw	a5,0(s0)
20401b32:	4007f793          	andi	a5,a5,1024
20401b36:	e79d                	bnez	a5,20401b64 <_ftoa+0x1f4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:378
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
20401b38:	4799                	li	a5,6
20401b3a:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:381
  }
  // limit precision to 9, cause a prec >= 10 can lead to overflow errors
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20401b3e:	a01d                	j	20401b64 <_ftoa+0x1f4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:382
    buf[len++] = '0';
20401b40:	fec42783          	lw	a5,-20(s0)
20401b44:	00178713          	addi	a4,a5,1
20401b48:	fee42623          	sw	a4,-20(s0)
20401b4c:	ff040713          	addi	a4,s0,-16
20401b50:	97ba                	add	a5,a5,a4
20401b52:	03000713          	li	a4,48
20401b56:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:383
    prec--;
20401b5a:	f8442783          	lw	a5,-124(s0)
20401b5e:	17fd                	addi	a5,a5,-1
20401b60:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:381
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20401b64:	fec42703          	lw	a4,-20(s0)
20401b68:	47fd                	li	a5,31
20401b6a:	00e7e763          	bltu	a5,a4,20401b78 <_ftoa+0x208>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:381 (discriminator 1)
20401b6e:	f8442703          	lw	a4,-124(s0)
20401b72:	47a5                	li	a5,9
20401b74:	fce7e6e3          	bltu	a5,a4,20401b40 <_ftoa+0x1d0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:386
  }

  int whole = (int)value;
20401b78:	f8842503          	lw	a0,-120(s0)
20401b7c:	f8c42583          	lw	a1,-116(s0)
20401b80:	3fe030ef          	jal	ra,20404f7e <__fixdfsi>
20401b84:	87aa                	mv	a5,a0
20401b86:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:387
  double tmp = (value - whole) * pow10[prec];
20401b8a:	fe442503          	lw	a0,-28(s0)
20401b8e:	4b0030ef          	jal	ra,2040503e <__floatsidf>
20401b92:	87aa                	mv	a5,a0
20401b94:	882e                	mv	a6,a1
20401b96:	863e                	mv	a2,a5
20401b98:	86c2                	mv	a3,a6
20401b9a:	f8842503          	lw	a0,-120(s0)
20401b9e:	f8c42583          	lw	a1,-116(s0)
20401ba2:	5e7020ef          	jal	ra,20404988 <__subdf3>
20401ba6:	87aa                	mv	a5,a0
20401ba8:	882e                	mv	a6,a1
20401baa:	853e                	mv	a0,a5
20401bac:	85c2                	mv	a1,a6
20401bae:	204097b7          	lui	a5,0x20409
20401bb2:	e8078713          	addi	a4,a5,-384 # 20408e80 <pow10.2193>
20401bb6:	f8442783          	lw	a5,-124(s0)
20401bba:	078e                	slli	a5,a5,0x3
20401bbc:	97ba                	add	a5,a5,a4
20401bbe:	0047a803          	lw	a6,4(a5)
20401bc2:	439c                	lw	a5,0(a5)
20401bc4:	863e                	mv	a2,a5
20401bc6:	86c2                	mv	a3,a6
20401bc8:	185020ef          	jal	ra,2040454c <__muldf3>
20401bcc:	87aa                	mv	a5,a0
20401bce:	882e                	mv	a6,a1
20401bd0:	fcf42423          	sw	a5,-56(s0)
20401bd4:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:388
  unsigned long frac = (unsigned long)tmp;
20401bd8:	fc842503          	lw	a0,-56(s0)
20401bdc:	fcc42583          	lw	a1,-52(s0)
20401be0:	402030ef          	jal	ra,20404fe2 <__fixunsdfsi>
20401be4:	87aa                	mv	a5,a0
20401be6:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:389
  diff = tmp - frac;
20401bea:	fe042503          	lw	a0,-32(s0)
20401bee:	4ba030ef          	jal	ra,204050a8 <__floatunsidf>
20401bf2:	87aa                	mv	a5,a0
20401bf4:	882e                	mv	a6,a1
20401bf6:	863e                	mv	a2,a5
20401bf8:	86c2                	mv	a3,a6
20401bfa:	fc842503          	lw	a0,-56(s0)
20401bfe:	fcc42583          	lw	a1,-52(s0)
20401c02:	587020ef          	jal	ra,20404988 <__subdf3>
20401c06:	87aa                	mv	a5,a0
20401c08:	882e                	mv	a6,a1
20401c0a:	fcf42823          	sw	a5,-48(s0)
20401c0e:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:391

  if (diff > 0.5) {
20401c12:	204097b7          	lui	a5,0x20409
20401c16:	c287a603          	lw	a2,-984(a5) # 20408c28 <_exit+0x13a>
20401c1a:	c2c7a683          	lw	a3,-980(a5)
20401c1e:	fd042503          	lw	a0,-48(s0)
20401c22:	fd442583          	lw	a1,-44(s0)
20401c26:	7de020ef          	jal	ra,20404404 <__gedf2>
20401c2a:	87aa                	mv	a5,a0
20401c2c:	04f05563          	blez	a5,20401c76 <_ftoa+0x306>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:392
    ++frac;
20401c30:	fe042783          	lw	a5,-32(s0)
20401c34:	0785                	addi	a5,a5,1
20401c36:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:394
    // handle rollover, e.g. case 0.99 with prec 1 is 1.0
    if (frac >= pow10[prec]) {
20401c3a:	fe042503          	lw	a0,-32(s0)
20401c3e:	46a030ef          	jal	ra,204050a8 <__floatunsidf>
20401c42:	204097b7          	lui	a5,0x20409
20401c46:	e8078713          	addi	a4,a5,-384 # 20408e80 <pow10.2193>
20401c4a:	f8442783          	lw	a5,-124(s0)
20401c4e:	078e                	slli	a5,a5,0x3
20401c50:	97ba                	add	a5,a5,a4
20401c52:	0047a803          	lw	a6,4(a5)
20401c56:	439c                	lw	a5,0(a5)
20401c58:	863e                	mv	a2,a5
20401c5a:	86c2                	mv	a3,a6
20401c5c:	7a8020ef          	jal	ra,20404404 <__gedf2>
20401c60:	87aa                	mv	a5,a0
20401c62:	0407c563          	bltz	a5,20401cac <_ftoa+0x33c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:395
      frac = 0;
20401c66:	fe042023          	sw	zero,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:396
      ++whole;
20401c6a:	fe442783          	lw	a5,-28(s0)
20401c6e:	0785                	addi	a5,a5,1
20401c70:	fef42223          	sw	a5,-28(s0)
20401c74:	a825                	j	20401cac <_ftoa+0x33c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:399
    }
  }
  else if (diff < 0.5) {
20401c76:	204097b7          	lui	a5,0x20409
20401c7a:	c287a603          	lw	a2,-984(a5) # 20408c28 <_exit+0x13a>
20401c7e:	c2c7a683          	lw	a3,-980(a5)
20401c82:	fd042503          	lw	a0,-48(s0)
20401c86:	fd442583          	lw	a1,-44(s0)
20401c8a:	01f020ef          	jal	ra,204044a8 <__ledf2>
20401c8e:	87aa                	mv	a5,a0
20401c90:	0007ce63          	bltz	a5,20401cac <_ftoa+0x33c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:401
  }
  else if ((frac == 0U) || (frac & 1U)) {
20401c94:	fe042783          	lw	a5,-32(s0)
20401c98:	c789                	beqz	a5,20401ca2 <_ftoa+0x332>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:401 (discriminator 1)
20401c9a:	fe042783          	lw	a5,-32(s0)
20401c9e:	8b85                	andi	a5,a5,1
20401ca0:	c791                	beqz	a5,20401cac <_ftoa+0x33c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:403
    // if halfway, round up if odd OR if last digit is 0
    ++frac;
20401ca2:	fe042783          	lw	a5,-32(s0)
20401ca6:	0785                	addi	a5,a5,1
20401ca8:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:406
  }

  if (prec == 0U) {
20401cac:	f8442783          	lw	a5,-124(s0)
20401cb0:	e7d9                	bnez	a5,20401d3e <_ftoa+0x3ce>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:407
    diff = value - (double)whole;
20401cb2:	fe442503          	lw	a0,-28(s0)
20401cb6:	388030ef          	jal	ra,2040503e <__floatsidf>
20401cba:	87aa                	mv	a5,a0
20401cbc:	882e                	mv	a6,a1
20401cbe:	863e                	mv	a2,a5
20401cc0:	86c2                	mv	a3,a6
20401cc2:	f8842503          	lw	a0,-120(s0)
20401cc6:	f8c42583          	lw	a1,-116(s0)
20401cca:	4bf020ef          	jal	ra,20404988 <__subdf3>
20401cce:	87aa                	mv	a5,a0
20401cd0:	882e                	mv	a6,a1
20401cd2:	fcf42823          	sw	a5,-48(s0)
20401cd6:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:408
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
20401cda:	4485                	li	s1,1
20401cdc:	204097b7          	lui	a5,0x20409
20401ce0:	c287a603          	lw	a2,-984(a5) # 20408c28 <_exit+0x13a>
20401ce4:	c2c7a683          	lw	a3,-980(a5)
20401ce8:	fd042503          	lw	a0,-48(s0)
20401cec:	fd442583          	lw	a1,-44(s0)
20401cf0:	7b8020ef          	jal	ra,204044a8 <__ledf2>
20401cf4:	87aa                	mv	a5,a0
20401cf6:	0007c363          	bltz	a5,20401cfc <_ftoa+0x38c>
20401cfa:	4481                	li	s1,0
20401cfc:	0ff4f793          	andi	a5,s1,255
20401d00:	0017c793          	xori	a5,a5,1
20401d04:	0ff7f793          	andi	a5,a5,255
20401d08:	e385                	bnez	a5,20401d28 <_ftoa+0x3b8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:408 (discriminator 2)
20401d0a:	204097b7          	lui	a5,0x20409
20401d0e:	c287a603          	lw	a2,-984(a5) # 20408c28 <_exit+0x13a>
20401d12:	c2c7a683          	lw	a3,-980(a5)
20401d16:	fd042503          	lw	a0,-48(s0)
20401d1a:	fd442583          	lw	a1,-44(s0)
20401d1e:	6e6020ef          	jal	ra,20404404 <__gedf2>
20401d22:	87aa                	mv	a5,a0
20401d24:	0cf05a63          	blez	a5,20401df8 <_ftoa+0x488>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:408 (discriminator 3)
20401d28:	fe442783          	lw	a5,-28(s0)
20401d2c:	8b85                	andi	a5,a5,1
20401d2e:	10078663          	beqz	a5,20401e3a <_ftoa+0x4ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:411
      // exactly 0.5 and ODD, then round up
      // 1.5 -> 2, but 2.5 -> 2
      ++whole;
20401d32:	fe442783          	lw	a5,-28(s0)
20401d36:	0785                	addi	a5,a5,1
20401d38:	fef42223          	sw	a5,-28(s0)
20401d3c:	a8fd                	j	20401e3a <_ftoa+0x4ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:415
    }
  }
  else {
    unsigned int count = prec;
20401d3e:	f8442783          	lw	a5,-124(s0)
20401d42:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:417
    // now do fractional part, as an unsigned number
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401d46:	a0b1                	j	20401d92 <_ftoa+0x422>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:418
      --count;
20401d48:	fdc42783          	lw	a5,-36(s0)
20401d4c:	17fd                	addi	a5,a5,-1
20401d4e:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:419
      buf[len++] = (char)(48U + (frac % 10U));
20401d52:	fe042703          	lw	a4,-32(s0)
20401d56:	47a9                	li	a5,10
20401d58:	02f777b3          	remu	a5,a4,a5
20401d5c:	0ff7f713          	andi	a4,a5,255
20401d60:	fec42783          	lw	a5,-20(s0)
20401d64:	00178693          	addi	a3,a5,1
20401d68:	fed42623          	sw	a3,-20(s0)
20401d6c:	03070713          	addi	a4,a4,48
20401d70:	0ff77713          	andi	a4,a4,255
20401d74:	ff040693          	addi	a3,s0,-16
20401d78:	97b6                	add	a5,a5,a3
20401d7a:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:420
      if (!(frac /= 10U)) {
20401d7e:	fe042703          	lw	a4,-32(s0)
20401d82:	47a9                	li	a5,10
20401d84:	02f757b3          	divu	a5,a4,a5
20401d88:	fef42023          	sw	a5,-32(s0)
20401d8c:	fe042783          	lw	a5,-32(s0)
20401d90:	c799                	beqz	a5,20401d9e <_ftoa+0x42e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:417
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401d92:	fec42703          	lw	a4,-20(s0)
20401d96:	47fd                	li	a5,31
20401d98:	fae7f8e3          	bgeu	a5,a4,20401d48 <_ftoa+0x3d8>
20401d9c:	a005                	j	20401dbc <_ftoa+0x44c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:421
        break;
20401d9e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:425
      }
    }
    // add extra 0s
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20401da0:	a831                	j	20401dbc <_ftoa+0x44c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:426
      buf[len++] = '0';
20401da2:	fec42783          	lw	a5,-20(s0)
20401da6:	00178713          	addi	a4,a5,1
20401daa:	fee42623          	sw	a4,-20(s0)
20401dae:	ff040713          	addi	a4,s0,-16
20401db2:	97ba                	add	a5,a5,a4
20401db4:	03000713          	li	a4,48
20401db8:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:425
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20401dbc:	fec42703          	lw	a4,-20(s0)
20401dc0:	47fd                	li	a5,31
20401dc2:	00e7e963          	bltu	a5,a4,20401dd4 <_ftoa+0x464>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:425 (discriminator 1)
20401dc6:	fdc42783          	lw	a5,-36(s0)
20401dca:	fff78713          	addi	a4,a5,-1
20401dce:	fce42e23          	sw	a4,-36(s0)
20401dd2:	fbe1                	bnez	a5,20401da2 <_ftoa+0x432>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:428
    }
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
20401dd4:	fec42703          	lw	a4,-20(s0)
20401dd8:	47fd                	li	a5,31
20401dda:	06e7e063          	bltu	a5,a4,20401e3a <_ftoa+0x4ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:430
      // add decimal
      buf[len++] = '.';
20401dde:	fec42783          	lw	a5,-20(s0)
20401de2:	00178713          	addi	a4,a5,1
20401de6:	fee42623          	sw	a4,-20(s0)
20401dea:	ff040713          	addi	a4,s0,-16
20401dee:	97ba                	add	a5,a5,a4
20401df0:	02e00713          	li	a4,46
20401df4:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:435 (discriminator 1)
    }
  }

  // do whole part, number is reversed
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401df8:	a089                	j	20401e3a <_ftoa+0x4ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:436
    buf[len++] = (char)(48 + (whole % 10));
20401dfa:	fe442703          	lw	a4,-28(s0)
20401dfe:	47a9                	li	a5,10
20401e00:	02f767b3          	rem	a5,a4,a5
20401e04:	0ff7f713          	andi	a4,a5,255
20401e08:	fec42783          	lw	a5,-20(s0)
20401e0c:	00178693          	addi	a3,a5,1
20401e10:	fed42623          	sw	a3,-20(s0)
20401e14:	03070713          	addi	a4,a4,48
20401e18:	0ff77713          	andi	a4,a4,255
20401e1c:	ff040693          	addi	a3,s0,-16
20401e20:	97b6                	add	a5,a5,a3
20401e22:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:437
    if (!(whole /= 10)) {
20401e26:	fe442703          	lw	a4,-28(s0)
20401e2a:	47a9                	li	a5,10
20401e2c:	02f747b3          	div	a5,a4,a5
20401e30:	fef42223          	sw	a5,-28(s0)
20401e34:	fe442783          	lw	a5,-28(s0)
20401e38:	c799                	beqz	a5,20401e46 <_ftoa+0x4d6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:435
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401e3a:	fec42703          	lw	a4,-20(s0)
20401e3e:	47fd                	li	a5,31
20401e40:	fae7fde3          	bgeu	a5,a4,20401dfa <_ftoa+0x48a>
20401e44:	a011                	j	20401e48 <_ftoa+0x4d8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:438
      break;
20401e46:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:443
    }
  }

  // pad leading zeros
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
20401e48:	401c                	lw	a5,0(s0)
20401e4a:	8b89                	andi	a5,a5,2
20401e4c:	ebb9                	bnez	a5,20401ea2 <_ftoa+0x532>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:443 (discriminator 1)
20401e4e:	401c                	lw	a5,0(s0)
20401e50:	8b85                	andi	a5,a5,1
20401e52:	cba1                	beqz	a5,20401ea2 <_ftoa+0x532>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:444
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
20401e54:	f8042783          	lw	a5,-128(s0)
20401e58:	cb95                	beqz	a5,20401e8c <_ftoa+0x51c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:444 (discriminator 1)
20401e5a:	feb44783          	lbu	a5,-21(s0)
20401e5e:	e781                	bnez	a5,20401e66 <_ftoa+0x4f6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:444 (discriminator 2)
20401e60:	401c                	lw	a5,0(s0)
20401e62:	8bb1                	andi	a5,a5,12
20401e64:	c785                	beqz	a5,20401e8c <_ftoa+0x51c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:445
      width--;
20401e66:	f8042783          	lw	a5,-128(s0)
20401e6a:	17fd                	addi	a5,a5,-1
20401e6c:	f8f42023          	sw	a5,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:447
    }
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20401e70:	a831                	j	20401e8c <_ftoa+0x51c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:448
      buf[len++] = '0';
20401e72:	fec42783          	lw	a5,-20(s0)
20401e76:	00178713          	addi	a4,a5,1
20401e7a:	fee42623          	sw	a4,-20(s0)
20401e7e:	ff040713          	addi	a4,s0,-16
20401e82:	97ba                	add	a5,a5,a4
20401e84:	03000713          	li	a4,48
20401e88:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:447
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20401e8c:	fec42703          	lw	a4,-20(s0)
20401e90:	f8042783          	lw	a5,-128(s0)
20401e94:	00f77763          	bgeu	a4,a5,20401ea2 <_ftoa+0x532>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:447 (discriminator 1)
20401e98:	fec42703          	lw	a4,-20(s0)
20401e9c:	47fd                	li	a5,31
20401e9e:	fce7fae3          	bgeu	a5,a4,20401e72 <_ftoa+0x502>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:452
    }
  }

  if (len < PRINTF_FTOA_BUFFER_SIZE) {
20401ea2:	fec42703          	lw	a4,-20(s0)
20401ea6:	47fd                	li	a5,31
20401ea8:	06e7e463          	bltu	a5,a4,20401f10 <_ftoa+0x5a0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:453
    if (negative) {
20401eac:	feb44783          	lbu	a5,-21(s0)
20401eb0:	cf99                	beqz	a5,20401ece <_ftoa+0x55e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:454
      buf[len++] = '-';
20401eb2:	fec42783          	lw	a5,-20(s0)
20401eb6:	00178713          	addi	a4,a5,1
20401eba:	fee42623          	sw	a4,-20(s0)
20401ebe:	ff040713          	addi	a4,s0,-16
20401ec2:	97ba                	add	a5,a5,a4
20401ec4:	02d00713          	li	a4,45
20401ec8:	fae78c23          	sb	a4,-72(a5)
20401ecc:	a091                	j	20401f10 <_ftoa+0x5a0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:456
    }
    else if (flags & FLAGS_PLUS) {
20401ece:	401c                	lw	a5,0(s0)
20401ed0:	8b91                	andi	a5,a5,4
20401ed2:	cf99                	beqz	a5,20401ef0 <_ftoa+0x580>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:457
      buf[len++] = '+';  // ignore the space if the '+' exists
20401ed4:	fec42783          	lw	a5,-20(s0)
20401ed8:	00178713          	addi	a4,a5,1
20401edc:	fee42623          	sw	a4,-20(s0)
20401ee0:	ff040713          	addi	a4,s0,-16
20401ee4:	97ba                	add	a5,a5,a4
20401ee6:	02b00713          	li	a4,43
20401eea:	fae78c23          	sb	a4,-72(a5)
20401eee:	a00d                	j	20401f10 <_ftoa+0x5a0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:459
    }
    else if (flags & FLAGS_SPACE) {
20401ef0:	401c                	lw	a5,0(s0)
20401ef2:	8ba1                	andi	a5,a5,8
20401ef4:	cf91                	beqz	a5,20401f10 <_ftoa+0x5a0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:460
      buf[len++] = ' ';
20401ef6:	fec42783          	lw	a5,-20(s0)
20401efa:	00178713          	addi	a4,a5,1
20401efe:	fee42623          	sw	a4,-20(s0)
20401f02:	ff040713          	addi	a4,s0,-16
20401f06:	97ba                	add	a5,a5,a4
20401f08:	02000713          	li	a4,32
20401f0c:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:464
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
20401f10:	fa840713          	addi	a4,s0,-88
20401f14:	00042883          	lw	a7,0(s0)
20401f18:	f8042803          	lw	a6,-128(s0)
20401f1c:	fec42783          	lw	a5,-20(s0)
20401f20:	f9042683          	lw	a3,-112(s0)
20401f24:	f9442603          	lw	a2,-108(s0)
20401f28:	f9842583          	lw	a1,-104(s0)
20401f2c:	f9c42503          	lw	a0,-100(s0)
20401f30:	ca8ff0ef          	jal	ra,204013d8 <_out_rev>
20401f34:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:465 (discriminator 3)
}
20401f36:	853e                	mv	a0,a5
20401f38:	40ba                	lw	ra,140(sp)
20401f3a:	442a                	lw	s0,136(sp)
20401f3c:	449a                	lw	s1,132(sp)
20401f3e:	6149                	addi	sp,sp,144
20401f40:	8082                	ret

20401f42 <_etoa>:
_etoa():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:471


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
20401f42:	7131                	addi	sp,sp,-192
20401f44:	df06                	sw	ra,188(sp)
20401f46:	dd22                	sw	s0,184(sp)
20401f48:	db26                	sw	s1,180(sp)
20401f4a:	d94a                	sw	s2,176(sp)
20401f4c:	d74e                	sw	s3,172(sp)
20401f4e:	d552                	sw	s4,168(sp)
20401f50:	d356                	sw	s5,164(sp)
20401f52:	d15a                	sw	s6,160(sp)
20401f54:	cf5e                	sw	s7,156(sp)
20401f56:	cd62                	sw	s8,152(sp)
20401f58:	cb66                	sw	s9,148(sp)
20401f5a:	c96a                	sw	s10,144(sp)
20401f5c:	c76e                	sw	s11,140(sp)
20401f5e:	0180                	addi	s0,sp,192
20401f60:	f6a42e23          	sw	a0,-132(s0)
20401f64:	f6b42c23          	sw	a1,-136(s0)
20401f68:	f6c42a23          	sw	a2,-140(s0)
20401f6c:	f6d42823          	sw	a3,-144(s0)
20401f70:	f6e42423          	sw	a4,-152(s0)
20401f74:	f6f42623          	sw	a5,-148(s0)
20401f78:	f7042223          	sw	a6,-156(s0)
20401f7c:	f7142023          	sw	a7,-160(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:473
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
20401f80:	f6842603          	lw	a2,-152(s0)
20401f84:	f6c42683          	lw	a3,-148(s0)
20401f88:	f6842503          	lw	a0,-152(s0)
20401f8c:	f6c42583          	lw	a1,-148(s0)
20401f90:	40a020ef          	jal	ra,2040439a <__eqdf2>
20401f94:	87aa                	mv	a5,a0
20401f96:	ef9d                	bnez	a5,20401fd4 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:473 (discriminator 1)
20401f98:	204097b7          	lui	a5,0x20409
20401f9c:	c107a603          	lw	a2,-1008(a5) # 20408c10 <_exit+0x122>
20401fa0:	c147a683          	lw	a3,-1004(a5)
20401fa4:	f6842503          	lw	a0,-152(s0)
20401fa8:	f6c42583          	lw	a1,-148(s0)
20401fac:	458020ef          	jal	ra,20404404 <__gedf2>
20401fb0:	87aa                	mv	a5,a0
20401fb2:	02f04163          	bgtz	a5,20401fd4 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:473 (discriminator 2)
20401fb6:	204097b7          	lui	a5,0x20409
20401fba:	c087a603          	lw	a2,-1016(a5) # 20408c08 <_exit+0x11a>
20401fbe:	c0c7a683          	lw	a3,-1012(a5)
20401fc2:	f6842503          	lw	a0,-152(s0)
20401fc6:	f6c42583          	lw	a1,-148(s0)
20401fca:	4de020ef          	jal	ra,204044a8 <__ledf2>
20401fce:	87aa                	mv	a5,a0
20401fd0:	0207d863          	bgez	a5,20402000 <_etoa+0xbe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:474
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
20401fd4:	401c                	lw	a5,0(s0)
20401fd6:	c03e                	sw	a5,0(sp)
20401fd8:	f6042883          	lw	a7,-160(s0)
20401fdc:	f6442803          	lw	a6,-156(s0)
20401fe0:	f6842703          	lw	a4,-152(s0)
20401fe4:	f6c42783          	lw	a5,-148(s0)
20401fe8:	f7042683          	lw	a3,-144(s0)
20401fec:	f7442603          	lw	a2,-140(s0)
20401ff0:	f7842583          	lw	a1,-136(s0)
20401ff4:	f7c42503          	lw	a0,-132(s0)
20401ff8:	979ff0ef          	jal	ra,20401970 <_ftoa>
20401ffc:	87aa                	mv	a5,a0
20401ffe:	ab49                	j	20402590 <_etoa+0x64e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:478
  }

  // determine the sign
  const bool negative = value < 0;
20402000:	4485                	li	s1,1
20402002:	4601                	li	a2,0
20402004:	4681                	li	a3,0
20402006:	f6842503          	lw	a0,-152(s0)
2040200a:	f6c42583          	lw	a1,-148(s0)
2040200e:	49a020ef          	jal	ra,204044a8 <__ledf2>
20402012:	87aa                	mv	a5,a0
20402014:	0007c363          	bltz	a5,2040201a <_etoa+0xd8>
20402018:	4481                	li	s1,0
2040201a:	fa9409a3          	sb	s1,-77(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:479
  if (negative) {
2040201e:	fb344783          	lbu	a5,-77(s0)
20402022:	cf81                	beqz	a5,2040203a <_etoa+0xf8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:480
    value = -value;
20402024:	f6842783          	lw	a5,-152(s0)
20402028:	f6f42423          	sw	a5,-152(s0)
2040202c:	f6c42703          	lw	a4,-148(s0)
20402030:	800007b7          	lui	a5,0x80000
20402034:	8fb9                	xor	a5,a5,a4
20402036:	f6f42623          	sw	a5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:484
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
2040203a:	401c                	lw	a5,0(s0)
2040203c:	4007f793          	andi	a5,a5,1024
20402040:	e781                	bnez	a5,20402048 <_etoa+0x106>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:485
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
20402042:	4799                	li	a5,6
20402044:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:495
  union {
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
20402048:	f6842783          	lw	a5,-152(s0)
2040204c:	f6c42803          	lw	a6,-148(s0)
20402050:	f8f42423          	sw	a5,-120(s0)
20402054:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:496
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
20402058:	f8842783          	lw	a5,-120(s0)
2040205c:	f8c42803          	lw	a6,-116(s0)
20402060:	01485793          	srli	a5,a6,0x14
20402064:	f4f42c23          	sw	a5,-168(s0)
20402068:	f4042e23          	sw	zero,-164(s0)
2040206c:	f5842783          	lw	a5,-168(s0)
20402070:	7ff7f793          	andi	a5,a5,2047
20402074:	c0178793          	addi	a5,a5,-1023 # 7ffffc01 <metal_segment_heap_target_end+0xffffe72d>
20402078:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:497
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
2040207c:	f8842783          	lw	a5,-120(s0)
20402080:	f8c42803          	lw	a6,-116(s0)
20402084:	fff7f913          	andi	s2,a5,-1
20402088:	00100737          	lui	a4,0x100
2040208c:	177d                	addi	a4,a4,-1
2040208e:	00e879b3          	and	s3,a6,a4
20402092:	00096b13          	ori	s6,s2,0
20402096:	3ff007b7          	lui	a5,0x3ff00
2040209a:	00f9ebb3          	or	s7,s3,a5
2040209e:	f9642423          	sw	s6,-120(s0)
204020a2:	f9742623          	sw	s7,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:499
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
204020a6:	fac42503          	lw	a0,-84(s0)
204020aa:	795020ef          	jal	ra,2040503e <__floatsidf>
204020ae:	204097b7          	lui	a5,0x20409
204020b2:	c307a603          	lw	a2,-976(a5) # 20408c30 <_exit+0x142>
204020b6:	c347a683          	lw	a3,-972(a5)
204020ba:	492020ef          	jal	ra,2040454c <__muldf3>
204020be:	87aa                	mv	a5,a0
204020c0:	882e                	mv	a6,a1
204020c2:	853e                	mv	a0,a5
204020c4:	85c2                	mv	a1,a6
204020c6:	204097b7          	lui	a5,0x20409
204020ca:	c387a603          	lw	a2,-968(a5) # 20408c38 <_exit+0x14a>
204020ce:	c3c7a683          	lw	a3,-964(a5)
204020d2:	7a0010ef          	jal	ra,20403872 <__adddf3>
204020d6:	87aa                	mv	a5,a0
204020d8:	882e                	mv	a6,a1
204020da:	893e                	mv	s2,a5
204020dc:	89c2                	mv	s3,a6
204020de:	f8842783          	lw	a5,-120(s0)
204020e2:	f8c42803          	lw	a6,-116(s0)
204020e6:	20409737          	lui	a4,0x20409
204020ea:	c4072603          	lw	a2,-960(a4) # 20408c40 <_exit+0x152>
204020ee:	c4472683          	lw	a3,-956(a4)
204020f2:	853e                	mv	a0,a5
204020f4:	85c2                	mv	a1,a6
204020f6:	093020ef          	jal	ra,20404988 <__subdf3>
204020fa:	87aa                	mv	a5,a0
204020fc:	882e                	mv	a6,a1
204020fe:	853e                	mv	a0,a5
20402100:	85c2                	mv	a1,a6
20402102:	204097b7          	lui	a5,0x20409
20402106:	c487a603          	lw	a2,-952(a5) # 20408c48 <_exit+0x15a>
2040210a:	c4c7a683          	lw	a3,-948(a5)
2040210e:	43e020ef          	jal	ra,2040454c <__muldf3>
20402112:	87aa                	mv	a5,a0
20402114:	882e                	mv	a6,a1
20402116:	863e                	mv	a2,a5
20402118:	86c2                	mv	a3,a6
2040211a:	854a                	mv	a0,s2
2040211c:	85ce                	mv	a1,s3
2040211e:	754010ef          	jal	ra,20403872 <__adddf3>
20402122:	87aa                	mv	a5,a0
20402124:	882e                	mv	a6,a1
20402126:	853e                	mv	a0,a5
20402128:	85c2                	mv	a1,a6
2040212a:	655020ef          	jal	ra,20404f7e <__fixdfsi>
2040212e:	87aa                	mv	a5,a0
20402130:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:501
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
20402134:	fbc42503          	lw	a0,-68(s0)
20402138:	707020ef          	jal	ra,2040503e <__floatsidf>
2040213c:	204097b7          	lui	a5,0x20409
20402140:	c507a603          	lw	a2,-944(a5) # 20408c50 <_exit+0x162>
20402144:	c547a683          	lw	a3,-940(a5)
20402148:	404020ef          	jal	ra,2040454c <__muldf3>
2040214c:	87aa                	mv	a5,a0
2040214e:	882e                	mv	a6,a1
20402150:	853e                	mv	a0,a5
20402152:	85c2                	mv	a1,a6
20402154:	204097b7          	lui	a5,0x20409
20402158:	c287a603          	lw	a2,-984(a5) # 20408c28 <_exit+0x13a>
2040215c:	c2c7a683          	lw	a3,-980(a5)
20402160:	712010ef          	jal	ra,20403872 <__adddf3>
20402164:	87aa                	mv	a5,a0
20402166:	882e                	mv	a6,a1
20402168:	853e                	mv	a0,a5
2040216a:	85c2                	mv	a1,a6
2040216c:	613020ef          	jal	ra,20404f7e <__fixdfsi>
20402170:	87aa                	mv	a5,a0
20402172:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:502
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
20402176:	fbc42503          	lw	a0,-68(s0)
2040217a:	6c5020ef          	jal	ra,2040503e <__floatsidf>
2040217e:	204097b7          	lui	a5,0x20409
20402182:	c587a603          	lw	a2,-936(a5) # 20408c58 <_exit+0x16a>
20402186:	c5c7a683          	lw	a3,-932(a5)
2040218a:	3c2020ef          	jal	ra,2040454c <__muldf3>
2040218e:	87aa                	mv	a5,a0
20402190:	882e                	mv	a6,a1
20402192:	893e                	mv	s2,a5
20402194:	89c2                	mv	s3,a6
20402196:	fac42503          	lw	a0,-84(s0)
2040219a:	6a5020ef          	jal	ra,2040503e <__floatsidf>
2040219e:	204097b7          	lui	a5,0x20409
204021a2:	c607a603          	lw	a2,-928(a5) # 20408c60 <_exit+0x172>
204021a6:	c647a683          	lw	a3,-924(a5)
204021aa:	3a2020ef          	jal	ra,2040454c <__muldf3>
204021ae:	87aa                	mv	a5,a0
204021b0:	882e                	mv	a6,a1
204021b2:	863e                	mv	a2,a5
204021b4:	86c2                	mv	a3,a6
204021b6:	854a                	mv	a0,s2
204021b8:	85ce                	mv	a1,s3
204021ba:	7ce020ef          	jal	ra,20404988 <__subdf3>
204021be:	87aa                	mv	a5,a0
204021c0:	882e                	mv	a6,a1
204021c2:	faf42023          	sw	a5,-96(s0)
204021c6:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:503
  const double z2 = z * z;
204021ca:	fa042603          	lw	a2,-96(s0)
204021ce:	fa442683          	lw	a3,-92(s0)
204021d2:	fa042503          	lw	a0,-96(s0)
204021d6:	fa442583          	lw	a1,-92(s0)
204021da:	372020ef          	jal	ra,2040454c <__muldf3>
204021de:	87aa                	mv	a5,a0
204021e0:	882e                	mv	a6,a1
204021e2:	f8f42c23          	sw	a5,-104(s0)
204021e6:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:504
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
204021ea:	fac42783          	lw	a5,-84(s0)
204021ee:	3ff78793          	addi	a5,a5,1023
204021f2:	8d3e                	mv	s10,a5
204021f4:	87fd                	srai	a5,a5,0x1f
204021f6:	8dbe                	mv	s11,a5
204021f8:	014d1c93          	slli	s9,s10,0x14
204021fc:	4c01                	li	s8,0
204021fe:	f9842423          	sw	s8,-120(s0)
20402202:	f9942623          	sw	s9,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:506
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
20402206:	f8842903          	lw	s2,-120(s0)
2040220a:	f8c42983          	lw	s3,-116(s0)
2040220e:	fa042783          	lw	a5,-96(s0)
20402212:	fa442803          	lw	a6,-92(s0)
20402216:	863e                	mv	a2,a5
20402218:	86c2                	mv	a3,a6
2040221a:	853e                	mv	a0,a5
2040221c:	85c2                	mv	a1,a6
2040221e:	654010ef          	jal	ra,20403872 <__adddf3>
20402222:	87aa                	mv	a5,a0
20402224:	882e                	mv	a6,a1
20402226:	8b3e                	mv	s6,a5
20402228:	8bc2                	mv	s7,a6
2040222a:	204097b7          	lui	a5,0x20409
2040222e:	fa042603          	lw	a2,-96(s0)
20402232:	fa442683          	lw	a3,-92(s0)
20402236:	c687a503          	lw	a0,-920(a5) # 20408c68 <_exit+0x17a>
2040223a:	c6c7a583          	lw	a1,-916(a5)
2040223e:	74a020ef          	jal	ra,20404988 <__subdf3>
20402242:	87aa                	mv	a5,a0
20402244:	882e                	mv	a6,a1
20402246:	8c3e                	mv	s8,a5
20402248:	8cc2                	mv	s9,a6
2040224a:	204097b7          	lui	a5,0x20409
2040224e:	c707a603          	lw	a2,-912(a5) # 20408c70 <_exit+0x182>
20402252:	c747a683          	lw	a3,-908(a5)
20402256:	f9842503          	lw	a0,-104(s0)
2040225a:	f9c42583          	lw	a1,-100(s0)
2040225e:	407010ef          	jal	ra,20403e64 <__divdf3>
20402262:	87aa                	mv	a5,a0
20402264:	882e                	mv	a6,a1
20402266:	853e                	mv	a0,a5
20402268:	85c2                	mv	a1,a6
2040226a:	204097b7          	lui	a5,0x20409
2040226e:	c787a603          	lw	a2,-904(a5) # 20408c78 <_exit+0x18a>
20402272:	c7c7a683          	lw	a3,-900(a5)
20402276:	5fc010ef          	jal	ra,20403872 <__adddf3>
2040227a:	87aa                	mv	a5,a0
2040227c:	882e                	mv	a6,a1
2040227e:	863e                	mv	a2,a5
20402280:	86c2                	mv	a3,a6
20402282:	f9842503          	lw	a0,-104(s0)
20402286:	f9c42583          	lw	a1,-100(s0)
2040228a:	3db010ef          	jal	ra,20403e64 <__divdf3>
2040228e:	87aa                	mv	a5,a0
20402290:	882e                	mv	a6,a1
20402292:	853e                	mv	a0,a5
20402294:	85c2                	mv	a1,a6
20402296:	204097b7          	lui	a5,0x20409
2040229a:	c807a603          	lw	a2,-896(a5) # 20408c80 <_exit+0x192>
2040229e:	c847a683          	lw	a3,-892(a5)
204022a2:	5d0010ef          	jal	ra,20403872 <__adddf3>
204022a6:	87aa                	mv	a5,a0
204022a8:	882e                	mv	a6,a1
204022aa:	863e                	mv	a2,a5
204022ac:	86c2                	mv	a3,a6
204022ae:	f9842503          	lw	a0,-104(s0)
204022b2:	f9c42583          	lw	a1,-100(s0)
204022b6:	3af010ef          	jal	ra,20403e64 <__divdf3>
204022ba:	87aa                	mv	a5,a0
204022bc:	882e                	mv	a6,a1
204022be:	863e                	mv	a2,a5
204022c0:	86c2                	mv	a3,a6
204022c2:	8562                	mv	a0,s8
204022c4:	85e6                	mv	a1,s9
204022c6:	5ac010ef          	jal	ra,20403872 <__adddf3>
204022ca:	87aa                	mv	a5,a0
204022cc:	882e                	mv	a6,a1
204022ce:	863e                	mv	a2,a5
204022d0:	86c2                	mv	a3,a6
204022d2:	855a                	mv	a0,s6
204022d4:	85de                	mv	a1,s7
204022d6:	38f010ef          	jal	ra,20403e64 <__divdf3>
204022da:	87aa                	mv	a5,a0
204022dc:	882e                	mv	a6,a1
204022de:	853e                	mv	a0,a5
204022e0:	85c2                	mv	a1,a6
204022e2:	204097b7          	lui	a5,0x20409
204022e6:	c887a603          	lw	a2,-888(a5) # 20408c88 <_exit+0x19a>
204022ea:	c8c7a683          	lw	a3,-884(a5)
204022ee:	584010ef          	jal	ra,20403872 <__adddf3>
204022f2:	87aa                	mv	a5,a0
204022f4:	882e                	mv	a6,a1
204022f6:	863e                	mv	a2,a5
204022f8:	86c2                	mv	a3,a6
204022fa:	854a                	mv	a0,s2
204022fc:	85ce                	mv	a1,s3
204022fe:	24e020ef          	jal	ra,2040454c <__muldf3>
20402302:	87aa                	mv	a5,a0
20402304:	882e                	mv	a6,a1
20402306:	f8f42423          	sw	a5,-120(s0)
2040230a:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:508
  // correct for rounding errors
  if (value < conv.F) {
2040230e:	f8842783          	lw	a5,-120(s0)
20402312:	f8c42803          	lw	a6,-116(s0)
20402316:	863e                	mv	a2,a5
20402318:	86c2                	mv	a3,a6
2040231a:	f6842503          	lw	a0,-152(s0)
2040231e:	f6c42583          	lw	a1,-148(s0)
20402322:	186020ef          	jal	ra,204044a8 <__ledf2>
20402326:	87aa                	mv	a5,a0
20402328:	0207db63          	bgez	a5,2040235e <_etoa+0x41c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:509
    expval--;
2040232c:	fbc42783          	lw	a5,-68(s0)
20402330:	17fd                	addi	a5,a5,-1
20402332:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:510
    conv.F /= 10;
20402336:	f8842783          	lw	a5,-120(s0)
2040233a:	f8c42803          	lw	a6,-116(s0)
2040233e:	20409737          	lui	a4,0x20409
20402342:	c7872603          	lw	a2,-904(a4) # 20408c78 <_exit+0x18a>
20402346:	c7c72683          	lw	a3,-900(a4)
2040234a:	853e                	mv	a0,a5
2040234c:	85c2                	mv	a1,a6
2040234e:	317010ef          	jal	ra,20403e64 <__divdf3>
20402352:	87aa                	mv	a5,a0
20402354:	882e                	mv	a6,a1
20402356:	f8f42423          	sw	a5,-120(s0)
2040235a:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
2040235e:	fbc42703          	lw	a4,-68(s0)
20402362:	06300793          	li	a5,99
20402366:	00e7ca63          	blt	a5,a4,2040237a <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 1)
2040236a:	fbc42703          	lw	a4,-68(s0)
2040236e:	f9d00793          	li	a5,-99
20402372:	00f74463          	blt	a4,a5,2040237a <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 3)
20402376:	4791                	li	a5,4
20402378:	a011                	j	2040237c <_etoa+0x43a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 4)
2040237a:	4795                	li	a5,5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 6)
2040237c:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:517 (discriminator 6)

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
20402380:	4018                	lw	a4,0(s0)
20402382:	6785                	lui	a5,0x1
20402384:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402388:	8ff9                	and	a5,a5,a4
2040238a:	c7d1                	beqz	a5,20402416 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:519
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
2040238c:	204097b7          	lui	a5,0x20409
20402390:	c907a603          	lw	a2,-880(a5) # 20408c90 <_exit+0x1a2>
20402394:	c947a683          	lw	a3,-876(a5)
20402398:	f6842503          	lw	a0,-152(s0)
2040239c:	f6c42583          	lw	a1,-148(s0)
204023a0:	064020ef          	jal	ra,20404404 <__gedf2>
204023a4:	87aa                	mv	a5,a0
204023a6:	0407cc63          	bltz	a5,204023fe <_etoa+0x4bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:519 (discriminator 1)
204023aa:	204097b7          	lui	a5,0x20409
204023ae:	c987a603          	lw	a2,-872(a5) # 20408c98 <_exit+0x1aa>
204023b2:	c9c7a683          	lw	a3,-868(a5)
204023b6:	f6842503          	lw	a0,-152(s0)
204023ba:	f6c42583          	lw	a1,-148(s0)
204023be:	0ea020ef          	jal	ra,204044a8 <__ledf2>
204023c2:	87aa                	mv	a5,a0
204023c4:	0207dd63          	bgez	a5,204023fe <_etoa+0x4bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:520
      if ((int)prec > expval) {
204023c8:	f6442783          	lw	a5,-156(s0)
204023cc:	fbc42703          	lw	a4,-68(s0)
204023d0:	00f75c63          	bge	a4,a5,204023e8 <_etoa+0x4a6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:521
        prec = (unsigned)((int)prec - expval - 1);
204023d4:	f6442703          	lw	a4,-156(s0)
204023d8:	fbc42783          	lw	a5,-68(s0)
204023dc:	40f707b3          	sub	a5,a4,a5
204023e0:	17fd                	addi	a5,a5,-1
204023e2:	f6f42223          	sw	a5,-156(s0)
204023e6:	a019                	j	204023ec <_etoa+0x4aa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:524
      }
      else {
        prec = 0;
204023e8:	f6042223          	sw	zero,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:526
      }
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
204023ec:	401c                	lw	a5,0(s0)
204023ee:	4007e793          	ori	a5,a5,1024
204023f2:	c01c                	sw	a5,0(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:528
      // no characters in exponent
      minwidth = 0U;
204023f4:	fa042c23          	sw	zero,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:529
      expval   = 0;
204023f8:	fa042e23          	sw	zero,-68(s0)
204023fc:	a829                	j	20402416 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:533
    }
    else {
      // we use one sigfig for the whole part
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
204023fe:	f6442783          	lw	a5,-156(s0)
20402402:	cb91                	beqz	a5,20402416 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:533 (discriminator 1)
20402404:	401c                	lw	a5,0(s0)
20402406:	4007f793          	andi	a5,a5,1024
2040240a:	c791                	beqz	a5,20402416 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:534
        --prec;
2040240c:	f6442783          	lw	a5,-156(s0)
20402410:	17fd                	addi	a5,a5,-1
20402412:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:540
      }
    }
  }

  // will everything fit?
  unsigned int fwidth = width;
20402416:	f6042783          	lw	a5,-160(s0)
2040241a:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:541
  if (width > minwidth) {
2040241e:	f6042703          	lw	a4,-160(s0)
20402422:	fb842783          	lw	a5,-72(s0)
20402426:	00e7fb63          	bgeu	a5,a4,2040243c <_etoa+0x4fa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:543
    // we didn't fall-back so subtract the characters required for the exponent
    fwidth -= minwidth;
2040242a:	fb442703          	lw	a4,-76(s0)
2040242e:	fb842783          	lw	a5,-72(s0)
20402432:	40f707b3          	sub	a5,a4,a5
20402436:	faf42a23          	sw	a5,-76(s0)
2040243a:	a019                	j	20402440 <_etoa+0x4fe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:546
  } else {
    // not enough characters, so go back to default sizing
    fwidth = 0U;
2040243c:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:548
  }
  if ((flags & FLAGS_LEFT) && minwidth) {
20402440:	401c                	lw	a5,0(s0)
20402442:	8b89                	andi	a5,a5,2
20402444:	c791                	beqz	a5,20402450 <_etoa+0x50e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:548 (discriminator 1)
20402446:	fb842783          	lw	a5,-72(s0)
2040244a:	c399                	beqz	a5,20402450 <_etoa+0x50e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:550
    // if we're padding on the right, DON'T pad the floating part
    fwidth = 0U;
2040244c:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:554
  }

  // rescale the float value
  if (expval) {
20402450:	fbc42783          	lw	a5,-68(s0)
20402454:	c39d                	beqz	a5,2040247a <_etoa+0x538>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:555
    value /= conv.F;
20402456:	f8842783          	lw	a5,-120(s0)
2040245a:	f8c42803          	lw	a6,-116(s0)
2040245e:	863e                	mv	a2,a5
20402460:	86c2                	mv	a3,a6
20402462:	f6842503          	lw	a0,-152(s0)
20402466:	f6c42583          	lw	a1,-148(s0)
2040246a:	1fb010ef          	jal	ra,20403e64 <__divdf3>
2040246e:	87aa                	mv	a5,a0
20402470:	882e                	mv	a6,a1
20402472:	f6f42423          	sw	a5,-152(s0)
20402476:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:559
  }

  // output the floating part
  const size_t start_idx = idx;
2040247a:	f7442783          	lw	a5,-140(s0)
2040247e:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
20402482:	fb344783          	lbu	a5,-77(s0)
20402486:	cb91                	beqz	a5,2040249a <_etoa+0x558>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560 (discriminator 1)
20402488:	f6842a03          	lw	s4,-152(s0)
2040248c:	f6c42703          	lw	a4,-148(s0)
20402490:	800007b7          	lui	a5,0x80000
20402494:	00f74ab3          	xor	s5,a4,a5
20402498:	a029                	j	204024a2 <_etoa+0x560>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560 (discriminator 2)
2040249a:	f6842a03          	lw	s4,-152(s0)
2040249e:	f6c42a83          	lw	s5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560 (discriminator 4)
204024a2:	4018                	lw	a4,0(s0)
204024a4:	77fd                	lui	a5,0xfffff
204024a6:	7ff78793          	addi	a5,a5,2047 # fffff7ff <metal_segment_heap_target_end+0x7fffe32b>
204024aa:	8ff9                	and	a5,a5,a4
204024ac:	c03e                	sw	a5,0(sp)
204024ae:	fb442883          	lw	a7,-76(s0)
204024b2:	f6442803          	lw	a6,-156(s0)
204024b6:	8752                	mv	a4,s4
204024b8:	87d6                	mv	a5,s5
204024ba:	f7042683          	lw	a3,-144(s0)
204024be:	f7442603          	lw	a2,-140(s0)
204024c2:	f7842583          	lw	a1,-136(s0)
204024c6:	f7c42503          	lw	a0,-132(s0)
204024ca:	ca6ff0ef          	jal	ra,20401970 <_ftoa>
204024ce:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:563 (discriminator 4)

  // output the exponent part
  if (minwidth) {
204024d2:	fb842783          	lw	a5,-72(s0)
204024d6:	cbdd                	beqz	a5,2040258c <_etoa+0x64a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565
    // output the exponential symbol
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
204024d8:	401c                	lw	a5,0(s0)
204024da:	0207f793          	andi	a5,a5,32
204024de:	c781                	beqz	a5,204024e6 <_etoa+0x5a4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565 (discriminator 1)
204024e0:	04500793          	li	a5,69
204024e4:	a019                	j	204024ea <_etoa+0x5a8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565 (discriminator 2)
204024e6:	06500793          	li	a5,101
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565 (discriminator 4)
204024ea:	f7442703          	lw	a4,-140(s0)
204024ee:	00170693          	addi	a3,a4,1
204024f2:	f6d42a23          	sw	a3,-140(s0)
204024f6:	f7c42803          	lw	a6,-132(s0)
204024fa:	f7042683          	lw	a3,-144(s0)
204024fe:	863a                	mv	a2,a4
20402500:	f7842583          	lw	a1,-136(s0)
20402504:	853e                	mv	a0,a5
20402506:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:567 (discriminator 4)
    // output the exponent value
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
20402508:	fbc42783          	lw	a5,-68(s0)
2040250c:	41f7d713          	srai	a4,a5,0x1f
20402510:	fbc42783          	lw	a5,-68(s0)
20402514:	8fb9                	xor	a5,a5,a4
20402516:	8f99                	sub	a5,a5,a4
20402518:	863e                	mv	a2,a5
2040251a:	fbc42783          	lw	a5,-68(s0)
2040251e:	83fd                	srli	a5,a5,0x1f
20402520:	0ff7f693          	andi	a3,a5,255
20402524:	fb842783          	lw	a5,-72(s0)
20402528:	17fd                	addi	a5,a5,-1
2040252a:	4715                	li	a4,5
2040252c:	c23a                	sw	a4,4(sp)
2040252e:	c03e                	sw	a5,0(sp)
20402530:	4881                	li	a7,0
20402532:	4829                	li	a6,10
20402534:	87b6                	mv	a5,a3
20402536:	8732                	mv	a4,a2
20402538:	f7042683          	lw	a3,-144(s0)
2040253c:	f7442603          	lw	a2,-140(s0)
20402540:	f7842583          	lw	a1,-136(s0)
20402544:	f7c42503          	lw	a0,-132(s0)
20402548:	9f6ff0ef          	jal	ra,2040173e <_ntoa_long>
2040254c:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:569 (discriminator 4)
    // might need to right-pad spaces
    if (flags & FLAGS_LEFT) {
20402550:	401c                	lw	a5,0(s0)
20402552:	8b89                	andi	a5,a5,2
20402554:	cf85                	beqz	a5,2040258c <_etoa+0x64a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:570
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
20402556:	a00d                	j	20402578 <_etoa+0x636>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:570 (discriminator 2)
20402558:	f7442783          	lw	a5,-140(s0)
2040255c:	00178713          	addi	a4,a5,1
20402560:	f6e42a23          	sw	a4,-140(s0)
20402564:	f7c42703          	lw	a4,-132(s0)
20402568:	f7042683          	lw	a3,-144(s0)
2040256c:	863e                	mv	a2,a5
2040256e:	f7842583          	lw	a1,-136(s0)
20402572:	02000513          	li	a0,32
20402576:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:570 (discriminator 1)
20402578:	f7442703          	lw	a4,-140(s0)
2040257c:	f9442783          	lw	a5,-108(s0)
20402580:	40f707b3          	sub	a5,a4,a5
20402584:	f6042703          	lw	a4,-160(s0)
20402588:	fce7e8e3          	bltu	a5,a4,20402558 <_etoa+0x616>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:573
    }
  }
  return idx;
2040258c:	f7442783          	lw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:574 (discriminator 1)
}
20402590:	853e                	mv	a0,a5
20402592:	50fa                	lw	ra,188(sp)
20402594:	546a                	lw	s0,184(sp)
20402596:	54da                	lw	s1,180(sp)
20402598:	594a                	lw	s2,176(sp)
2040259a:	59ba                	lw	s3,172(sp)
2040259c:	5a2a                	lw	s4,168(sp)
2040259e:	5a9a                	lw	s5,164(sp)
204025a0:	5b0a                	lw	s6,160(sp)
204025a2:	4bfa                	lw	s7,156(sp)
204025a4:	4c6a                	lw	s8,152(sp)
204025a6:	4cda                	lw	s9,148(sp)
204025a8:	4d4a                	lw	s10,144(sp)
204025aa:	4dba                	lw	s11,140(sp)
204025ac:	6129                	addi	sp,sp,192
204025ae:	8082                	ret

204025b0 <_vsnprintf>:
_vsnprintf():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:581
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
204025b0:	7171                	addi	sp,sp,-176
204025b2:	d706                	sw	ra,172(sp)
204025b4:	d522                	sw	s0,168(sp)
204025b6:	d34a                	sw	s2,164(sp)
204025b8:	d14e                	sw	s3,160(sp)
204025ba:	cf52                	sw	s4,156(sp)
204025bc:	cd56                	sw	s5,152(sp)
204025be:	cb5a                	sw	s6,148(sp)
204025c0:	c95e                	sw	s7,144(sp)
204025c2:	c762                	sw	s8,140(sp)
204025c4:	c566                	sw	s9,136(sp)
204025c6:	c36a                	sw	s10,132(sp)
204025c8:	c16e                	sw	s11,128(sp)
204025ca:	1900                	addi	s0,sp,176
204025cc:	f6a42e23          	sw	a0,-132(s0)
204025d0:	f6b42c23          	sw	a1,-136(s0)
204025d4:	f6c42a23          	sw	a2,-140(s0)
204025d8:	f6d42823          	sw	a3,-144(s0)
204025dc:	f6e42623          	sw	a4,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:583
  unsigned int flags, width, precision, n;
  size_t idx = 0U;
204025e0:	fa042e23          	sw	zero,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:585

  if (!buffer) {
204025e4:	f7842783          	lw	a5,-136(s0)
204025e8:	2e0796e3          	bnez	a5,204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:587
    // use null output function
    out = _out_null;
204025ec:	204017b7          	lui	a5,0x20401
204025f0:	2a278793          	addi	a5,a5,674 # 204012a2 <_out_null>
204025f4:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:590
  }

  while (*format)
204025f8:	2dd0006f          	j	204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:593
  {
    // format specifier?  %[flags][width][.precision][length]
    if (*format != '%') {
204025fc:	f7042783          	lw	a5,-144(s0)
20402600:	0007c703          	lbu	a4,0(a5)
20402604:	02500793          	li	a5,37
20402608:	02f70b63          	beq	a4,a5,2040263e <_vsnprintf+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:595
      // no
      out(*format, buffer, idx++, maxlen);
2040260c:	f7042783          	lw	a5,-144(s0)
20402610:	0007c503          	lbu	a0,0(a5)
20402614:	fbc42783          	lw	a5,-68(s0)
20402618:	00178713          	addi	a4,a5,1
2040261c:	fae42e23          	sw	a4,-68(s0)
20402620:	f7c42703          	lw	a4,-132(s0)
20402624:	f7442683          	lw	a3,-140(s0)
20402628:	863e                	mv	a2,a5
2040262a:	f7842583          	lw	a1,-136(s0)
2040262e:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:596
      format++;
20402630:	f7042783          	lw	a5,-144(s0)
20402634:	0785                	addi	a5,a5,1
20402636:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:597
      continue;
2040263a:	29b0006f          	j	204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:601
    }
    else {
      // yes, evaluate it
      format++;
2040263e:	f7042783          	lw	a5,-144(s0)
20402642:	0785                	addi	a5,a5,1
20402644:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:605
    }

    // evaluate flags
    flags = 0U;
20402648:	fc042623          	sw	zero,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:607
    do {
      switch (*format) {
2040264c:	f7042783          	lw	a5,-144(s0)
20402650:	0007c783          	lbu	a5,0(a5)
20402654:	1781                	addi	a5,a5,-32
20402656:	4741                	li	a4,16
20402658:	0af76663          	bltu	a4,a5,20402704 <_vsnprintf+0x154>
2040265c:	00279713          	slli	a4,a5,0x2
20402660:	204097b7          	lui	a5,0x20409
20402664:	ca078793          	addi	a5,a5,-864 # 20408ca0 <_exit+0x1b2>
20402668:	97ba                	add	a5,a5,a4
2040266a:	439c                	lw	a5,0(a5)
2040266c:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:608
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
2040266e:	fcc42783          	lw	a5,-52(s0)
20402672:	0017e793          	ori	a5,a5,1
20402676:	fcf42623          	sw	a5,-52(s0)
2040267a:	f7042783          	lw	a5,-144(s0)
2040267e:	0785                	addi	a5,a5,1
20402680:	f6f42823          	sw	a5,-144(s0)
20402684:	4785                	li	a5,1
20402686:	fcf42023          	sw	a5,-64(s0)
2040268a:	a041                	j	2040270a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:609
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
2040268c:	fcc42783          	lw	a5,-52(s0)
20402690:	0027e793          	ori	a5,a5,2
20402694:	fcf42623          	sw	a5,-52(s0)
20402698:	f7042783          	lw	a5,-144(s0)
2040269c:	0785                	addi	a5,a5,1
2040269e:	f6f42823          	sw	a5,-144(s0)
204026a2:	4785                	li	a5,1
204026a4:	fcf42023          	sw	a5,-64(s0)
204026a8:	a08d                	j	2040270a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:610
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
204026aa:	fcc42783          	lw	a5,-52(s0)
204026ae:	0047e793          	ori	a5,a5,4
204026b2:	fcf42623          	sw	a5,-52(s0)
204026b6:	f7042783          	lw	a5,-144(s0)
204026ba:	0785                	addi	a5,a5,1
204026bc:	f6f42823          	sw	a5,-144(s0)
204026c0:	4785                	li	a5,1
204026c2:	fcf42023          	sw	a5,-64(s0)
204026c6:	a091                	j	2040270a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:611
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
204026c8:	fcc42783          	lw	a5,-52(s0)
204026cc:	0087e793          	ori	a5,a5,8
204026d0:	fcf42623          	sw	a5,-52(s0)
204026d4:	f7042783          	lw	a5,-144(s0)
204026d8:	0785                	addi	a5,a5,1
204026da:	f6f42823          	sw	a5,-144(s0)
204026de:	4785                	li	a5,1
204026e0:	fcf42023          	sw	a5,-64(s0)
204026e4:	a01d                	j	2040270a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:612
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
204026e6:	fcc42783          	lw	a5,-52(s0)
204026ea:	0107e793          	ori	a5,a5,16
204026ee:	fcf42623          	sw	a5,-52(s0)
204026f2:	f7042783          	lw	a5,-144(s0)
204026f6:	0785                	addi	a5,a5,1
204026f8:	f6f42823          	sw	a5,-144(s0)
204026fc:	4785                	li	a5,1
204026fe:	fcf42023          	sw	a5,-64(s0)
20402702:	a021                	j	2040270a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:613
        default :                                   n = 0U; break;
20402704:	fc042023          	sw	zero,-64(s0)
20402708:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:615
      }
    } while (n);
2040270a:	fc042783          	lw	a5,-64(s0)
2040270e:	ff9d                	bnez	a5,2040264c <_vsnprintf+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:618

    // evaluate width field
    width = 0U;
20402710:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:619
    if (_is_digit(*format)) {
20402714:	f7042783          	lw	a5,-144(s0)
20402718:	0007c783          	lbu	a5,0(a5)
2040271c:	853e                	mv	a0,a5
2040271e:	c25fe0ef          	jal	ra,20401342 <_is_digit>
20402722:	87aa                	mv	a5,a0
20402724:	cb89                	beqz	a5,20402736 <_vsnprintf+0x186>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:620
      width = _atoi(&format);
20402726:	f7040793          	addi	a5,s0,-144
2040272a:	853e                	mv	a0,a5
2040272c:	c4ffe0ef          	jal	ra,2040137a <_atoi>
20402730:	fca42423          	sw	a0,-56(s0)
20402734:	a8a1                	j	2040278c <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:622
    }
    else if (*format == '*') {
20402736:	f7042783          	lw	a5,-144(s0)
2040273a:	0007c703          	lbu	a4,0(a5)
2040273e:	02a00793          	li	a5,42
20402742:	04f71563          	bne	a4,a5,2040278c <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:623
      const int w = va_arg(va, int);
20402746:	f6c42783          	lw	a5,-148(s0)
2040274a:	00478713          	addi	a4,a5,4
2040274e:	f6e42623          	sw	a4,-148(s0)
20402752:	439c                	lw	a5,0(a5)
20402754:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:624
      if (w < 0) {
20402758:	fa842783          	lw	a5,-88(s0)
2040275c:	0007df63          	bgez	a5,2040277a <_vsnprintf+0x1ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:625
        flags |= FLAGS_LEFT;    // reverse padding
20402760:	fcc42783          	lw	a5,-52(s0)
20402764:	0027e793          	ori	a5,a5,2
20402768:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:626
        width = (unsigned int)-w;
2040276c:	fa842783          	lw	a5,-88(s0)
20402770:	40f007b3          	neg	a5,a5
20402774:	fcf42423          	sw	a5,-56(s0)
20402778:	a029                	j	20402782 <_vsnprintf+0x1d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:629
      }
      else {
        width = (unsigned int)w;
2040277a:	fa842783          	lw	a5,-88(s0)
2040277e:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:631
      }
      format++;
20402782:	f7042783          	lw	a5,-144(s0)
20402786:	0785                	addi	a5,a5,1
20402788:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:635
    }

    // evaluate precision field
    precision = 0U;
2040278c:	fc042223          	sw	zero,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:636
    if (*format == '.') {
20402790:	f7042783          	lw	a5,-144(s0)
20402794:	0007c703          	lbu	a4,0(a5)
20402798:	02e00793          	li	a5,46
2040279c:	06f71b63          	bne	a4,a5,20402812 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:637
      flags |= FLAGS_PRECISION;
204027a0:	fcc42783          	lw	a5,-52(s0)
204027a4:	4007e793          	ori	a5,a5,1024
204027a8:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:638
      format++;
204027ac:	f7042783          	lw	a5,-144(s0)
204027b0:	0785                	addi	a5,a5,1
204027b2:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:639
      if (_is_digit(*format)) {
204027b6:	f7042783          	lw	a5,-144(s0)
204027ba:	0007c783          	lbu	a5,0(a5)
204027be:	853e                	mv	a0,a5
204027c0:	b83fe0ef          	jal	ra,20401342 <_is_digit>
204027c4:	87aa                	mv	a5,a0
204027c6:	cb89                	beqz	a5,204027d8 <_vsnprintf+0x228>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:640
        precision = _atoi(&format);
204027c8:	f7040793          	addi	a5,s0,-144
204027cc:	853e                	mv	a0,a5
204027ce:	badfe0ef          	jal	ra,2040137a <_atoi>
204027d2:	fca42223          	sw	a0,-60(s0)
204027d6:	a835                	j	20402812 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:642
      }
      else if (*format == '*') {
204027d8:	f7042783          	lw	a5,-144(s0)
204027dc:	0007c703          	lbu	a4,0(a5)
204027e0:	02a00793          	li	a5,42
204027e4:	02f71763          	bne	a4,a5,20402812 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:643
        const int prec = (int)va_arg(va, int);
204027e8:	f6c42783          	lw	a5,-148(s0)
204027ec:	00478713          	addi	a4,a5,4
204027f0:	f6e42623          	sw	a4,-148(s0)
204027f4:	439c                	lw	a5,0(a5)
204027f6:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:644
        precision = prec > 0 ? (unsigned int)prec : 0U;
204027fa:	fa442783          	lw	a5,-92(s0)
204027fe:	0007d363          	bgez	a5,20402804 <_vsnprintf+0x254>
20402802:	4781                	li	a5,0
20402804:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:645
        format++;
20402808:	f7042783          	lw	a5,-144(s0)
2040280c:	0785                	addi	a5,a5,1
2040280e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:650
      }
    }

    // evaluate length field
    switch (*format) {
20402812:	f7042783          	lw	a5,-144(s0)
20402816:	0007c783          	lbu	a5,0(a5)
2040281a:	f9878793          	addi	a5,a5,-104
2040281e:	4749                	li	a4,18
20402820:	0cf76d63          	bltu	a4,a5,204028fa <_vsnprintf+0x34a>
20402824:	00279713          	slli	a4,a5,0x2
20402828:	204097b7          	lui	a5,0x20409
2040282c:	ce478793          	addi	a5,a5,-796 # 20408ce4 <_exit+0x1f6>
20402830:	97ba                	add	a5,a5,a4
20402832:	439c                	lw	a5,0(a5)
20402834:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:652
      case 'l' :
        flags |= FLAGS_LONG;
20402836:	fcc42783          	lw	a5,-52(s0)
2040283a:	1007e793          	ori	a5,a5,256
2040283e:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:653
        format++;
20402842:	f7042783          	lw	a5,-144(s0)
20402846:	0785                	addi	a5,a5,1
20402848:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:654
        if (*format == 'l') {
2040284c:	f7042783          	lw	a5,-144(s0)
20402850:	0007c703          	lbu	a4,0(a5)
20402854:	06c00793          	li	a5,108
20402858:	0af71363          	bne	a4,a5,204028fe <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:655
          flags |= FLAGS_LONG_LONG;
2040285c:	fcc42783          	lw	a5,-52(s0)
20402860:	2007e793          	ori	a5,a5,512
20402864:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:656
          format++;
20402868:	f7042783          	lw	a5,-144(s0)
2040286c:	0785                	addi	a5,a5,1
2040286e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:658
        }
        break;
20402872:	a071                	j	204028fe <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:660
      case 'h' :
        flags |= FLAGS_SHORT;
20402874:	fcc42783          	lw	a5,-52(s0)
20402878:	0807e793          	ori	a5,a5,128
2040287c:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:661
        format++;
20402880:	f7042783          	lw	a5,-144(s0)
20402884:	0785                	addi	a5,a5,1
20402886:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:662
        if (*format == 'h') {
2040288a:	f7042783          	lw	a5,-144(s0)
2040288e:	0007c703          	lbu	a4,0(a5)
20402892:	06800793          	li	a5,104
20402896:	06f71663          	bne	a4,a5,20402902 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:663
          flags |= FLAGS_CHAR;
2040289a:	fcc42783          	lw	a5,-52(s0)
2040289e:	0407e793          	ori	a5,a5,64
204028a2:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:664
          format++;
204028a6:	f7042783          	lw	a5,-144(s0)
204028aa:	0785                	addi	a5,a5,1
204028ac:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:666
        }
        break;
204028b0:	a889                	j	20402902 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:669
#if defined(PRINTF_SUPPORT_PTRDIFF_T)
      case 't' :
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
204028b2:	fcc42783          	lw	a5,-52(s0)
204028b6:	1007e793          	ori	a5,a5,256
204028ba:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:670
        format++;
204028be:	f7042783          	lw	a5,-144(s0)
204028c2:	0785                	addi	a5,a5,1
204028c4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:671
        break;
204028c8:	a835                	j	20402904 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:674
#endif
      case 'j' :
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
204028ca:	fcc42783          	lw	a5,-52(s0)
204028ce:	2007e793          	ori	a5,a5,512
204028d2:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:675
        format++;
204028d6:	f7042783          	lw	a5,-144(s0)
204028da:	0785                	addi	a5,a5,1
204028dc:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:676
        break;
204028e0:	a015                	j	20402904 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:678
      case 'z' :
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
204028e2:	fcc42783          	lw	a5,-52(s0)
204028e6:	1007e793          	ori	a5,a5,256
204028ea:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:679
        format++;
204028ee:	f7042783          	lw	a5,-144(s0)
204028f2:	0785                	addi	a5,a5,1
204028f4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:680
        break;
204028f8:	a031                	j	20402904 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:682
      default :
        break;
204028fa:	0001                	nop
204028fc:	a021                	j	20402904 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:658
        break;
204028fe:	0001                	nop
20402900:	a011                	j	20402904 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:666
        break;
20402902:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:686
    }

    // evaluate specifier
    switch (*format) {
20402904:	f7042783          	lw	a5,-144(s0)
20402908:	0007c783          	lbu	a5,0(a5)
2040290c:	fdb78793          	addi	a5,a5,-37
20402910:	05300713          	li	a4,83
20402914:	78f76863          	bltu	a4,a5,204030a4 <_vsnprintf+0xaf4>
20402918:	00279713          	slli	a4,a5,0x2
2040291c:	204097b7          	lui	a5,0x20409
20402920:	d3078793          	addi	a5,a5,-720 # 20408d30 <_exit+0x242>
20402924:	97ba                	add	a5,a5,a4
20402926:	439c                	lw	a5,0(a5)
20402928:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:696
      case 'X' :
      case 'o' :
      case 'b' : {
        // set the base
        unsigned int base;
        if (*format == 'x' || *format == 'X') {
2040292a:	f7042783          	lw	a5,-144(s0)
2040292e:	0007c703          	lbu	a4,0(a5)
20402932:	07800793          	li	a5,120
20402936:	00f70a63          	beq	a4,a5,2040294a <_vsnprintf+0x39a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:696 (discriminator 1)
2040293a:	f7042783          	lw	a5,-144(s0)
2040293e:	0007c703          	lbu	a4,0(a5)
20402942:	05800793          	li	a5,88
20402946:	00f71663          	bne	a4,a5,20402952 <_vsnprintf+0x3a2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:697
          base = 16U;
2040294a:	47c1                	li	a5,16
2040294c:	faf42c23          	sw	a5,-72(s0)
20402950:	a089                	j	20402992 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:699
        }
        else if (*format == 'o') {
20402952:	f7042783          	lw	a5,-144(s0)
20402956:	0007c703          	lbu	a4,0(a5)
2040295a:	06f00793          	li	a5,111
2040295e:	00f71663          	bne	a4,a5,2040296a <_vsnprintf+0x3ba>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:700
          base =  8U;
20402962:	47a1                	li	a5,8
20402964:	faf42c23          	sw	a5,-72(s0)
20402968:	a02d                	j	20402992 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:702
        }
        else if (*format == 'b') {
2040296a:	f7042783          	lw	a5,-144(s0)
2040296e:	0007c703          	lbu	a4,0(a5)
20402972:	06200793          	li	a5,98
20402976:	00f71663          	bne	a4,a5,20402982 <_vsnprintf+0x3d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:703
          base =  2U;
2040297a:	4789                	li	a5,2
2040297c:	faf42c23          	sw	a5,-72(s0)
20402980:	a809                	j	20402992 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:706
        }
        else {
          base = 10U;
20402982:	47a9                	li	a5,10
20402984:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:707
          flags &= ~FLAGS_HASH;   // no hash for dec format
20402988:	fcc42783          	lw	a5,-52(s0)
2040298c:	9bbd                	andi	a5,a5,-17
2040298e:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:710
        }
        // uppercase
        if (*format == 'X') {
20402992:	f7042783          	lw	a5,-144(s0)
20402996:	0007c703          	lbu	a4,0(a5)
2040299a:	05800793          	li	a5,88
2040299e:	00f71863          	bne	a4,a5,204029ae <_vsnprintf+0x3fe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:711
          flags |= FLAGS_UPPERCASE;
204029a2:	fcc42783          	lw	a5,-52(s0)
204029a6:	0207e793          	ori	a5,a5,32
204029aa:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:715
        }

        // no plus or space flag for u, x, X, o, b
        if ((*format != 'i') && (*format != 'd')) {
204029ae:	f7042783          	lw	a5,-144(s0)
204029b2:	0007c703          	lbu	a4,0(a5)
204029b6:	06900793          	li	a5,105
204029ba:	00f70f63          	beq	a4,a5,204029d8 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:715 (discriminator 1)
204029be:	f7042783          	lw	a5,-144(s0)
204029c2:	0007c703          	lbu	a4,0(a5)
204029c6:	06400793          	li	a5,100
204029ca:	00f70763          	beq	a4,a5,204029d8 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:716
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
204029ce:	fcc42783          	lw	a5,-52(s0)
204029d2:	9bcd                	andi	a5,a5,-13
204029d4:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:720
        }

        // ignore '0' flag when precision is given
        if (flags & FLAGS_PRECISION) {
204029d8:	fcc42783          	lw	a5,-52(s0)
204029dc:	4007f793          	andi	a5,a5,1024
204029e0:	c791                	beqz	a5,204029ec <_vsnprintf+0x43c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:721
          flags &= ~FLAGS_ZEROPAD;
204029e2:	fcc42783          	lw	a5,-52(s0)
204029e6:	9bf9                	andi	a5,a5,-2
204029e8:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:725
        }

        // convert the integer
        if ((*format == 'i') || (*format == 'd')) {
204029ec:	f7042783          	lw	a5,-144(s0)
204029f0:	0007c703          	lbu	a4,0(a5)
204029f4:	06900793          	li	a5,105
204029f8:	00f70a63          	beq	a4,a5,20402a0c <_vsnprintf+0x45c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:725 (discriminator 1)
204029fc:	f7042783          	lw	a5,-144(s0)
20402a00:	0007c703          	lbu	a4,0(a5)
20402a04:	06400793          	li	a5,100
20402a08:	1af71b63          	bne	a4,a5,20402bbe <_vsnprintf+0x60e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727
          // signed
          if (flags & FLAGS_LONG_LONG) {
20402a0c:	fcc42783          	lw	a5,-52(s0)
20402a10:	2007f793          	andi	a5,a5,512
20402a14:	c3d5                	beqz	a5,20402ab8 <_vsnprintf+0x508>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:729
#if defined(PRINTF_SUPPORT_LONG_LONG)
            const long long value = va_arg(va, long long);
20402a16:	f6c42783          	lw	a5,-148(s0)
20402a1a:	079d                	addi	a5,a5,7
20402a1c:	9be1                	andi	a5,a5,-8
20402a1e:	00878713          	addi	a4,a5,8
20402a22:	f6e42623          	sw	a4,-148(s0)
20402a26:	0047a803          	lw	a6,4(a5)
20402a2a:	439c                	lw	a5,0(a5)
20402a2c:	f8f42c23          	sw	a5,-104(s0)
20402a30:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:730
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402a34:	f9c42783          	lw	a5,-100(s0)
20402a38:	41f7d913          	srai	s2,a5,0x1f
20402a3c:	f9c42783          	lw	a5,-100(s0)
20402a40:	41f7d993          	srai	s3,a5,0x1f
20402a44:	f9842783          	lw	a5,-104(s0)
20402a48:	0127ca33          	xor	s4,a5,s2
20402a4c:	f9c42783          	lw	a5,-100(s0)
20402a50:	0137cab3          	xor	s5,a5,s3
20402a54:	412a07b3          	sub	a5,s4,s2
20402a58:	873e                	mv	a4,a5
20402a5a:	00ea3733          	sltu	a4,s4,a4
20402a5e:	413a8833          	sub	a6,s5,s3
20402a62:	40e80733          	sub	a4,a6,a4
20402a66:	883a                	mv	a6,a4
20402a68:	8a3e                	mv	s4,a5
20402a6a:	8ac2                	mv	s5,a6
20402a6c:	8652                	mv	a2,s4
20402a6e:	86d6                	mv	a3,s5
20402a70:	f9c42783          	lw	a5,-100(s0)
20402a74:	83fd                	srli	a5,a5,0x1f
20402a76:	0ff7f713          	andi	a4,a5,255
20402a7a:	fb842783          	lw	a5,-72(s0)
20402a7e:	8b3e                	mv	s6,a5
20402a80:	4b81                	li	s7,0
20402a82:	fcc42783          	lw	a5,-52(s0)
20402a86:	c63e                	sw	a5,12(sp)
20402a88:	fc842783          	lw	a5,-56(s0)
20402a8c:	c43e                	sw	a5,8(sp)
20402a8e:	fc442783          	lw	a5,-60(s0)
20402a92:	c23e                	sw	a5,4(sp)
20402a94:	c05e                	sw	s7,0(sp)
20402a96:	88da                	mv	a7,s6
20402a98:	883a                	mv	a6,a4
20402a9a:	8732                	mv	a4,a2
20402a9c:	87b6                	mv	a5,a3
20402a9e:	f7442683          	lw	a3,-140(s0)
20402aa2:	fbc42603          	lw	a2,-68(s0)
20402aa6:	f7842583          	lw	a1,-136(s0)
20402aaa:	f7c42503          	lw	a0,-132(s0)
20402aae:	d95fe0ef          	jal	ra,20401842 <_ntoa_long_long>
20402ab2:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20402ab6:	a425                	j	20402cde <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:733
#endif
          }
          else if (flags & FLAGS_LONG) {
20402ab8:	fcc42783          	lw	a5,-52(s0)
20402abc:	1007f793          	andi	a5,a5,256
20402ac0:	c3ad                	beqz	a5,20402b22 <_vsnprintf+0x572>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:734
            const long value = va_arg(va, long);
20402ac2:	f6c42783          	lw	a5,-148(s0)
20402ac6:	00478713          	addi	a4,a5,4
20402aca:	f6e42623          	sw	a4,-148(s0)
20402ace:	439c                	lw	a5,0(a5)
20402ad0:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:735
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402ad4:	f9442783          	lw	a5,-108(s0)
20402ad8:	41f7d713          	srai	a4,a5,0x1f
20402adc:	f9442783          	lw	a5,-108(s0)
20402ae0:	8fb9                	xor	a5,a5,a4
20402ae2:	8f99                	sub	a5,a5,a4
20402ae4:	86be                	mv	a3,a5
20402ae6:	f9442783          	lw	a5,-108(s0)
20402aea:	83fd                	srli	a5,a5,0x1f
20402aec:	0ff7f713          	andi	a4,a5,255
20402af0:	fcc42783          	lw	a5,-52(s0)
20402af4:	c23e                	sw	a5,4(sp)
20402af6:	fc842783          	lw	a5,-56(s0)
20402afa:	c03e                	sw	a5,0(sp)
20402afc:	fc442883          	lw	a7,-60(s0)
20402b00:	fb842803          	lw	a6,-72(s0)
20402b04:	87ba                	mv	a5,a4
20402b06:	8736                	mv	a4,a3
20402b08:	f7442683          	lw	a3,-140(s0)
20402b0c:	fbc42603          	lw	a2,-68(s0)
20402b10:	f7842583          	lw	a1,-136(s0)
20402b14:	f7c42503          	lw	a0,-132(s0)
20402b18:	c27fe0ef          	jal	ra,2040173e <_ntoa_long>
20402b1c:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20402b20:	aa7d                	j	20402cde <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738
          }
          else {
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
20402b22:	fcc42783          	lw	a5,-52(s0)
20402b26:	0407f793          	andi	a5,a5,64
20402b2a:	cb99                	beqz	a5,20402b40 <_vsnprintf+0x590>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 1)
20402b2c:	f6c42783          	lw	a5,-148(s0)
20402b30:	00478713          	addi	a4,a5,4
20402b34:	f6e42623          	sw	a4,-148(s0)
20402b38:	439c                	lw	a5,0(a5)
20402b3a:	0ff7f793          	andi	a5,a5,255
20402b3e:	a03d                	j	20402b6c <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 2)
20402b40:	fcc42783          	lw	a5,-52(s0)
20402b44:	0807f793          	andi	a5,a5,128
20402b48:	cb99                	beqz	a5,20402b5e <_vsnprintf+0x5ae>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 4)
20402b4a:	f6c42783          	lw	a5,-148(s0)
20402b4e:	00478713          	addi	a4,a5,4
20402b52:	f6e42623          	sw	a4,-148(s0)
20402b56:	439c                	lw	a5,0(a5)
20402b58:	07c2                	slli	a5,a5,0x10
20402b5a:	87c1                	srai	a5,a5,0x10
20402b5c:	a801                	j	20402b6c <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 5)
20402b5e:	f6c42783          	lw	a5,-148(s0)
20402b62:	00478713          	addi	a4,a5,4
20402b66:	f6e42623          	sw	a4,-148(s0)
20402b6a:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 8)
20402b6c:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:739 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402b70:	f9042783          	lw	a5,-112(s0)
20402b74:	41f7d713          	srai	a4,a5,0x1f
20402b78:	f9042783          	lw	a5,-112(s0)
20402b7c:	8fb9                	xor	a5,a5,a4
20402b7e:	8f99                	sub	a5,a5,a4
20402b80:	86be                	mv	a3,a5
20402b82:	f9042783          	lw	a5,-112(s0)
20402b86:	83fd                	srli	a5,a5,0x1f
20402b88:	0ff7f713          	andi	a4,a5,255
20402b8c:	fcc42783          	lw	a5,-52(s0)
20402b90:	c23e                	sw	a5,4(sp)
20402b92:	fc842783          	lw	a5,-56(s0)
20402b96:	c03e                	sw	a5,0(sp)
20402b98:	fc442883          	lw	a7,-60(s0)
20402b9c:	fb842803          	lw	a6,-72(s0)
20402ba0:	87ba                	mv	a5,a4
20402ba2:	8736                	mv	a4,a3
20402ba4:	f7442683          	lw	a3,-140(s0)
20402ba8:	fbc42603          	lw	a2,-68(s0)
20402bac:	f7842583          	lw	a1,-136(s0)
20402bb0:	f7c42503          	lw	a0,-132(s0)
20402bb4:	b8bfe0ef          	jal	ra,2040173e <_ntoa_long>
20402bb8:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727 (discriminator 8)
          if (flags & FLAGS_LONG_LONG) {
20402bbc:	a20d                	j	20402cde <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:744
          }
        }
        else {
          // unsigned
          if (flags & FLAGS_LONG_LONG) {
20402bbe:	fcc42783          	lw	a5,-52(s0)
20402bc2:	2007f793          	andi	a5,a5,512
20402bc6:	cba1                	beqz	a5,20402c16 <_vsnprintf+0x666>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:746
#if defined(PRINTF_SUPPORT_LONG_LONG)
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
20402bc8:	f6c42783          	lw	a5,-148(s0)
20402bcc:	079d                	addi	a5,a5,7
20402bce:	9be1                	andi	a5,a5,-8
20402bd0:	00878713          	addi	a4,a5,8
20402bd4:	f6e42623          	sw	a4,-148(s0)
20402bd8:	4398                	lw	a4,0(a5)
20402bda:	43dc                	lw	a5,4(a5)
20402bdc:	fb842683          	lw	a3,-72(s0)
20402be0:	8c36                	mv	s8,a3
20402be2:	4c81                	li	s9,0
20402be4:	fcc42683          	lw	a3,-52(s0)
20402be8:	c636                	sw	a3,12(sp)
20402bea:	fc842683          	lw	a3,-56(s0)
20402bee:	c436                	sw	a3,8(sp)
20402bf0:	fc442683          	lw	a3,-60(s0)
20402bf4:	c236                	sw	a3,4(sp)
20402bf6:	c066                	sw	s9,0(sp)
20402bf8:	88e2                	mv	a7,s8
20402bfa:	4801                	li	a6,0
20402bfc:	f7442683          	lw	a3,-140(s0)
20402c00:	fbc42603          	lw	a2,-68(s0)
20402c04:	f7842583          	lw	a1,-136(s0)
20402c08:	f7c42503          	lw	a0,-132(s0)
20402c0c:	c37fe0ef          	jal	ra,20401842 <_ntoa_long_long>
20402c10:	faa42e23          	sw	a0,-68(s0)
20402c14:	a0e9                	j	20402cde <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:749
#endif
          }
          else if (flags & FLAGS_LONG) {
20402c16:	fcc42783          	lw	a5,-52(s0)
20402c1a:	1007f793          	andi	a5,a5,256
20402c1e:	c3a1                	beqz	a5,20402c5e <_vsnprintf+0x6ae>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:750
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
20402c20:	f6c42783          	lw	a5,-148(s0)
20402c24:	00478713          	addi	a4,a5,4
20402c28:	f6e42623          	sw	a4,-148(s0)
20402c2c:	4398                	lw	a4,0(a5)
20402c2e:	fcc42783          	lw	a5,-52(s0)
20402c32:	c23e                	sw	a5,4(sp)
20402c34:	fc842783          	lw	a5,-56(s0)
20402c38:	c03e                	sw	a5,0(sp)
20402c3a:	fc442883          	lw	a7,-60(s0)
20402c3e:	fb842803          	lw	a6,-72(s0)
20402c42:	4781                	li	a5,0
20402c44:	f7442683          	lw	a3,-140(s0)
20402c48:	fbc42603          	lw	a2,-68(s0)
20402c4c:	f7842583          	lw	a1,-136(s0)
20402c50:	f7c42503          	lw	a0,-132(s0)
20402c54:	aebfe0ef          	jal	ra,2040173e <_ntoa_long>
20402c58:	faa42e23          	sw	a0,-68(s0)
20402c5c:	a049                	j	20402cde <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753
          }
          else {
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
20402c5e:	fcc42783          	lw	a5,-52(s0)
20402c62:	0407f793          	andi	a5,a5,64
20402c66:	cb99                	beqz	a5,20402c7c <_vsnprintf+0x6cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 1)
20402c68:	f6c42783          	lw	a5,-148(s0)
20402c6c:	00478713          	addi	a4,a5,4
20402c70:	f6e42623          	sw	a4,-148(s0)
20402c74:	439c                	lw	a5,0(a5)
20402c76:	0ff7f793          	andi	a5,a5,255
20402c7a:	a03d                	j	20402ca8 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 2)
20402c7c:	fcc42783          	lw	a5,-52(s0)
20402c80:	0807f793          	andi	a5,a5,128
20402c84:	cb99                	beqz	a5,20402c9a <_vsnprintf+0x6ea>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 4)
20402c86:	f6c42783          	lw	a5,-148(s0)
20402c8a:	00478713          	addi	a4,a5,4
20402c8e:	f6e42623          	sw	a4,-148(s0)
20402c92:	439c                	lw	a5,0(a5)
20402c94:	07c2                	slli	a5,a5,0x10
20402c96:	83c1                	srli	a5,a5,0x10
20402c98:	a801                	j	20402ca8 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 5)
20402c9a:	f6c42783          	lw	a5,-148(s0)
20402c9e:	00478713          	addi	a4,a5,4
20402ca2:	f6e42623          	sw	a4,-148(s0)
20402ca6:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 8)
20402ca8:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:754 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
20402cac:	fcc42783          	lw	a5,-52(s0)
20402cb0:	c23e                	sw	a5,4(sp)
20402cb2:	fc842783          	lw	a5,-56(s0)
20402cb6:	c03e                	sw	a5,0(sp)
20402cb8:	fc442883          	lw	a7,-60(s0)
20402cbc:	fb842803          	lw	a6,-72(s0)
20402cc0:	4781                	li	a5,0
20402cc2:	fa042703          	lw	a4,-96(s0)
20402cc6:	f7442683          	lw	a3,-140(s0)
20402cca:	fbc42603          	lw	a2,-68(s0)
20402cce:	f7842583          	lw	a1,-136(s0)
20402cd2:	f7c42503          	lw	a0,-132(s0)
20402cd6:	a69fe0ef          	jal	ra,2040173e <_ntoa_long>
20402cda:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:757
          }
        }
        format++;
20402cde:	f7042783          	lw	a5,-144(s0)
20402ce2:	0785                	addi	a5,a5,1
20402ce4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:758
        break;
20402ce8:	a6f5                	j	204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:763
      }
#if defined(PRINTF_SUPPORT_FLOAT)
      case 'f' :
      case 'F' :
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
20402cea:	f7042783          	lw	a5,-144(s0)
20402cee:	0007c703          	lbu	a4,0(a5)
20402cf2:	04600793          	li	a5,70
20402cf6:	00f71863          	bne	a4,a5,20402d06 <_vsnprintf+0x756>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:763 (discriminator 1)
20402cfa:	fcc42783          	lw	a5,-52(s0)
20402cfe:	0207e793          	ori	a5,a5,32
20402d02:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:764
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20402d06:	f6c42783          	lw	a5,-148(s0)
20402d0a:	079d                	addi	a5,a5,7
20402d0c:	9be1                	andi	a5,a5,-8
20402d0e:	00878713          	addi	a4,a5,8
20402d12:	f6e42623          	sw	a4,-148(s0)
20402d16:	4398                	lw	a4,0(a5)
20402d18:	43dc                	lw	a5,4(a5)
20402d1a:	fcc42683          	lw	a3,-52(s0)
20402d1e:	c036                	sw	a3,0(sp)
20402d20:	fc842883          	lw	a7,-56(s0)
20402d24:	fc442803          	lw	a6,-60(s0)
20402d28:	f7442683          	lw	a3,-140(s0)
20402d2c:	fbc42603          	lw	a2,-68(s0)
20402d30:	f7842583          	lw	a1,-136(s0)
20402d34:	f7c42503          	lw	a0,-132(s0)
20402d38:	c39fe0ef          	jal	ra,20401970 <_ftoa>
20402d3c:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:765
        format++;
20402d40:	f7042783          	lw	a5,-144(s0)
20402d44:	0785                	addi	a5,a5,1
20402d46:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:766
        break;
20402d4a:	a669                	j	204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:772
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
      case 'e':
      case 'E':
      case 'g':
      case 'G':
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
20402d4c:	f7042783          	lw	a5,-144(s0)
20402d50:	0007c703          	lbu	a4,0(a5)
20402d54:	06700793          	li	a5,103
20402d58:	00f70a63          	beq	a4,a5,20402d6c <_vsnprintf+0x7bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:772 (discriminator 2)
20402d5c:	f7042783          	lw	a5,-144(s0)
20402d60:	0007c703          	lbu	a4,0(a5)
20402d64:	04700793          	li	a5,71
20402d68:	00f71a63          	bne	a4,a5,20402d7c <_vsnprintf+0x7cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:772 (discriminator 3)
20402d6c:	fcc42703          	lw	a4,-52(s0)
20402d70:	6785                	lui	a5,0x1
20402d72:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402d76:	8fd9                	or	a5,a5,a4
20402d78:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:773
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
20402d7c:	f7042783          	lw	a5,-144(s0)
20402d80:	0007c703          	lbu	a4,0(a5)
20402d84:	04500793          	li	a5,69
20402d88:	00f70a63          	beq	a4,a5,20402d9c <_vsnprintf+0x7ec>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:773 (discriminator 2)
20402d8c:	f7042783          	lw	a5,-144(s0)
20402d90:	0007c703          	lbu	a4,0(a5)
20402d94:	04700793          	li	a5,71
20402d98:	00f71863          	bne	a4,a5,20402da8 <_vsnprintf+0x7f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:773 (discriminator 3)
20402d9c:	fcc42783          	lw	a5,-52(s0)
20402da0:	0207e793          	ori	a5,a5,32
20402da4:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:774
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20402da8:	f6c42783          	lw	a5,-148(s0)
20402dac:	079d                	addi	a5,a5,7
20402dae:	9be1                	andi	a5,a5,-8
20402db0:	00878713          	addi	a4,a5,8
20402db4:	f6e42623          	sw	a4,-148(s0)
20402db8:	4398                	lw	a4,0(a5)
20402dba:	43dc                	lw	a5,4(a5)
20402dbc:	fcc42683          	lw	a3,-52(s0)
20402dc0:	c036                	sw	a3,0(sp)
20402dc2:	fc842883          	lw	a7,-56(s0)
20402dc6:	fc442803          	lw	a6,-60(s0)
20402dca:	f7442683          	lw	a3,-140(s0)
20402dce:	fbc42603          	lw	a2,-68(s0)
20402dd2:	f7842583          	lw	a1,-136(s0)
20402dd6:	f7c42503          	lw	a0,-132(s0)
20402dda:	968ff0ef          	jal	ra,20401f42 <_etoa>
20402dde:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:775
        format++;
20402de2:	f7042783          	lw	a5,-144(s0)
20402de6:	0785                	addi	a5,a5,1
20402de8:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:776
        break;
20402dec:	a4e5                	j	204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:780
#endif  // PRINTF_SUPPORT_EXPONENTIAL
#endif  // PRINTF_SUPPORT_FLOAT
      case 'c' : {
        unsigned int l = 1U;
20402dee:	4785                	li	a5,1
20402df0:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:782
        // pre padding
        if (!(flags & FLAGS_LEFT)) {
20402df4:	fcc42783          	lw	a5,-52(s0)
20402df8:	8b89                	andi	a5,a5,2
20402dfa:	ef85                	bnez	a5,20402e32 <_vsnprintf+0x882>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:783
          while (l++ < width) {
20402dfc:	a00d                	j	20402e1e <_vsnprintf+0x86e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:784
            out(' ', buffer, idx++, maxlen);
20402dfe:	fbc42783          	lw	a5,-68(s0)
20402e02:	00178713          	addi	a4,a5,1
20402e06:	fae42e23          	sw	a4,-68(s0)
20402e0a:	f7c42703          	lw	a4,-132(s0)
20402e0e:	f7442683          	lw	a3,-140(s0)
20402e12:	863e                	mv	a2,a5
20402e14:	f7842583          	lw	a1,-136(s0)
20402e18:	02000513          	li	a0,32
20402e1c:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:783
          while (l++ < width) {
20402e1e:	fb442783          	lw	a5,-76(s0)
20402e22:	00178713          	addi	a4,a5,1
20402e26:	fae42a23          	sw	a4,-76(s0)
20402e2a:	fc842703          	lw	a4,-56(s0)
20402e2e:	fce7e8e3          	bltu	a5,a4,20402dfe <_vsnprintf+0x84e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:788
          }
        }
        // char output
        out((char)va_arg(va, int), buffer, idx++, maxlen);
20402e32:	f6c42783          	lw	a5,-148(s0)
20402e36:	00478713          	addi	a4,a5,4
20402e3a:	f6e42623          	sw	a4,-148(s0)
20402e3e:	439c                	lw	a5,0(a5)
20402e40:	0ff7f513          	andi	a0,a5,255
20402e44:	fbc42783          	lw	a5,-68(s0)
20402e48:	00178713          	addi	a4,a5,1
20402e4c:	fae42e23          	sw	a4,-68(s0)
20402e50:	f7c42703          	lw	a4,-132(s0)
20402e54:	f7442683          	lw	a3,-140(s0)
20402e58:	863e                	mv	a2,a5
20402e5a:	f7842583          	lw	a1,-136(s0)
20402e5e:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:790
        // post padding
        if (flags & FLAGS_LEFT) {
20402e60:	fcc42783          	lw	a5,-52(s0)
20402e64:	8b89                	andi	a5,a5,2
20402e66:	cf85                	beqz	a5,20402e9e <_vsnprintf+0x8ee>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:791
          while (l++ < width) {
20402e68:	a00d                	j	20402e8a <_vsnprintf+0x8da>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:792
            out(' ', buffer, idx++, maxlen);
20402e6a:	fbc42783          	lw	a5,-68(s0)
20402e6e:	00178713          	addi	a4,a5,1
20402e72:	fae42e23          	sw	a4,-68(s0)
20402e76:	f7c42703          	lw	a4,-132(s0)
20402e7a:	f7442683          	lw	a3,-140(s0)
20402e7e:	863e                	mv	a2,a5
20402e80:	f7842583          	lw	a1,-136(s0)
20402e84:	02000513          	li	a0,32
20402e88:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:791
          while (l++ < width) {
20402e8a:	fb442783          	lw	a5,-76(s0)
20402e8e:	00178713          	addi	a4,a5,1
20402e92:	fae42a23          	sw	a4,-76(s0)
20402e96:	fc842703          	lw	a4,-56(s0)
20402e9a:	fce7e8e3          	bltu	a5,a4,20402e6a <_vsnprintf+0x8ba>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:795
          }
        }
        format++;
20402e9e:	f7042783          	lw	a5,-144(s0)
20402ea2:	0785                	addi	a5,a5,1
20402ea4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:796
        break;
20402ea8:	a435                	j	204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:800
      }

      case 's' : {
        const char* p = va_arg(va, char*);
20402eaa:	f6c42783          	lw	a5,-148(s0)
20402eae:	00478713          	addi	a4,a5,4
20402eb2:	f6e42623          	sw	a4,-148(s0)
20402eb6:	439c                	lw	a5,0(a5)
20402eb8:	faf42823          	sw	a5,-80(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
20402ebc:	fc442783          	lw	a5,-60(s0)
20402ec0:	c781                	beqz	a5,20402ec8 <_vsnprintf+0x918>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801 (discriminator 1)
20402ec2:	fc442783          	lw	a5,-60(s0)
20402ec6:	a011                	j	20402eca <_vsnprintf+0x91a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801 (discriminator 2)
20402ec8:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801 (discriminator 4)
20402eca:	85be                	mv	a1,a5
20402ecc:	fb042503          	lw	a0,-80(s0)
20402ed0:	c24fe0ef          	jal	ra,204012f4 <_strnlen_s>
20402ed4:	faa42623          	sw	a0,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:803 (discriminator 4)
        // pre padding
        if (flags & FLAGS_PRECISION) {
20402ed8:	fcc42783          	lw	a5,-52(s0)
20402edc:	4007f793          	andi	a5,a5,1024
20402ee0:	cb91                	beqz	a5,20402ef4 <_vsnprintf+0x944>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:804
          l = (l < precision ? l : precision);
20402ee2:	fac42703          	lw	a4,-84(s0)
20402ee6:	fc442783          	lw	a5,-60(s0)
20402eea:	00f77363          	bgeu	a4,a5,20402ef0 <_vsnprintf+0x940>
20402eee:	87ba                	mv	a5,a4
20402ef0:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:806
        }
        if (!(flags & FLAGS_LEFT)) {
20402ef4:	fcc42783          	lw	a5,-52(s0)
20402ef8:	8b89                	andi	a5,a5,2
20402efa:	e3bd                	bnez	a5,20402f60 <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:807
          while (l++ < width) {
20402efc:	a00d                	j	20402f1e <_vsnprintf+0x96e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:808
            out(' ', buffer, idx++, maxlen);
20402efe:	fbc42783          	lw	a5,-68(s0)
20402f02:	00178713          	addi	a4,a5,1
20402f06:	fae42e23          	sw	a4,-68(s0)
20402f0a:	f7c42703          	lw	a4,-132(s0)
20402f0e:	f7442683          	lw	a3,-140(s0)
20402f12:	863e                	mv	a2,a5
20402f14:	f7842583          	lw	a1,-136(s0)
20402f18:	02000513          	li	a0,32
20402f1c:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:807
          while (l++ < width) {
20402f1e:	fac42783          	lw	a5,-84(s0)
20402f22:	00178713          	addi	a4,a5,1
20402f26:	fae42623          	sw	a4,-84(s0)
20402f2a:	fc842703          	lw	a4,-56(s0)
20402f2e:	fce7e8e3          	bltu	a5,a4,20402efe <_vsnprintf+0x94e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20402f32:	a03d                	j	20402f60 <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:813
          out(*(p++), buffer, idx++, maxlen);
20402f34:	fb042783          	lw	a5,-80(s0)
20402f38:	00178713          	addi	a4,a5,1
20402f3c:	fae42823          	sw	a4,-80(s0)
20402f40:	0007c503          	lbu	a0,0(a5)
20402f44:	fbc42783          	lw	a5,-68(s0)
20402f48:	00178713          	addi	a4,a5,1
20402f4c:	fae42e23          	sw	a4,-68(s0)
20402f50:	f7c42703          	lw	a4,-132(s0)
20402f54:	f7442683          	lw	a3,-140(s0)
20402f58:	863e                	mv	a2,a5
20402f5a:	f7842583          	lw	a1,-136(s0)
20402f5e:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20402f60:	fb042783          	lw	a5,-80(s0)
20402f64:	0007c783          	lbu	a5,0(a5)
20402f68:	cf89                	beqz	a5,20402f82 <_vsnprintf+0x9d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812 (discriminator 1)
20402f6a:	fcc42783          	lw	a5,-52(s0)
20402f6e:	4007f793          	andi	a5,a5,1024
20402f72:	d3e9                	beqz	a5,20402f34 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812 (discriminator 2)
20402f74:	fc442783          	lw	a5,-60(s0)
20402f78:	fff78713          	addi	a4,a5,-1
20402f7c:	fce42223          	sw	a4,-60(s0)
20402f80:	fbd5                	bnez	a5,20402f34 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:816
        }
        // post padding
        if (flags & FLAGS_LEFT) {
20402f82:	fcc42783          	lw	a5,-52(s0)
20402f86:	8b89                	andi	a5,a5,2
20402f88:	cf85                	beqz	a5,20402fc0 <_vsnprintf+0xa10>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:817
          while (l++ < width) {
20402f8a:	a00d                	j	20402fac <_vsnprintf+0x9fc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:818
            out(' ', buffer, idx++, maxlen);
20402f8c:	fbc42783          	lw	a5,-68(s0)
20402f90:	00178713          	addi	a4,a5,1
20402f94:	fae42e23          	sw	a4,-68(s0)
20402f98:	f7c42703          	lw	a4,-132(s0)
20402f9c:	f7442683          	lw	a3,-140(s0)
20402fa0:	863e                	mv	a2,a5
20402fa2:	f7842583          	lw	a1,-136(s0)
20402fa6:	02000513          	li	a0,32
20402faa:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:817
          while (l++ < width) {
20402fac:	fac42783          	lw	a5,-84(s0)
20402fb0:	00178713          	addi	a4,a5,1
20402fb4:	fae42623          	sw	a4,-84(s0)
20402fb8:	fc842703          	lw	a4,-56(s0)
20402fbc:	fce7e8e3          	bltu	a5,a4,20402f8c <_vsnprintf+0x9dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:821
          }
        }
        format++;
20402fc0:	f7042783          	lw	a5,-144(s0)
20402fc4:	0785                	addi	a5,a5,1
20402fc6:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:822
        break;
20402fca:	a229                	j	204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:826
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
20402fcc:	47a1                	li	a5,8
20402fce:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:827
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
20402fd2:	fcc42783          	lw	a5,-52(s0)
20402fd6:	0217e793          	ori	a5,a5,33
20402fda:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:829
#if defined(PRINTF_SUPPORT_LONG_LONG)
        const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
20402fde:	f80407a3          	sb	zero,-113(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:830
        if (is_ll) {
20402fe2:	f8f44783          	lbu	a5,-113(s0)
20402fe6:	c7a9                	beqz	a5,20403030 <_vsnprintf+0xa80>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:831
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
20402fe8:	f6c42783          	lw	a5,-148(s0)
20402fec:	00478713          	addi	a4,a5,4
20402ff0:	f6e42623          	sw	a4,-148(s0)
20402ff4:	439c                	lw	a5,0(a5)
20402ff6:	8d3e                	mv	s10,a5
20402ff8:	4d81                	li	s11,0
20402ffa:	fcc42783          	lw	a5,-52(s0)
20402ffe:	c63e                	sw	a5,12(sp)
20403000:	fc842783          	lw	a5,-56(s0)
20403004:	c43e                	sw	a5,8(sp)
20403006:	fc442783          	lw	a5,-60(s0)
2040300a:	c23e                	sw	a5,4(sp)
2040300c:	c002                	sw	zero,0(sp)
2040300e:	48c1                	li	a7,16
20403010:	4801                	li	a6,0
20403012:	876a                	mv	a4,s10
20403014:	87ee                	mv	a5,s11
20403016:	f7442683          	lw	a3,-140(s0)
2040301a:	fbc42603          	lw	a2,-68(s0)
2040301e:	f7842583          	lw	a1,-136(s0)
20403022:	f7c42503          	lw	a0,-132(s0)
20403026:	81dfe0ef          	jal	ra,20401842 <_ntoa_long_long>
2040302a:	faa42e23          	sw	a0,-68(s0)
2040302e:	a83d                	j	2040306c <_vsnprintf+0xabc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:835
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
20403030:	f6c42783          	lw	a5,-148(s0)
20403034:	00478713          	addi	a4,a5,4
20403038:	f6e42623          	sw	a4,-148(s0)
2040303c:	439c                	lw	a5,0(a5)
2040303e:	873e                	mv	a4,a5
20403040:	fcc42783          	lw	a5,-52(s0)
20403044:	c23e                	sw	a5,4(sp)
20403046:	fc842783          	lw	a5,-56(s0)
2040304a:	c03e                	sw	a5,0(sp)
2040304c:	fc442883          	lw	a7,-60(s0)
20403050:	4841                	li	a6,16
20403052:	4781                	li	a5,0
20403054:	f7442683          	lw	a3,-140(s0)
20403058:	fbc42603          	lw	a2,-68(s0)
2040305c:	f7842583          	lw	a1,-136(s0)
20403060:	f7c42503          	lw	a0,-132(s0)
20403064:	edafe0ef          	jal	ra,2040173e <_ntoa_long>
20403068:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:839
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
2040306c:	f7042783          	lw	a5,-144(s0)
20403070:	0785                	addi	a5,a5,1
20403072:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:840
        break;
20403076:	a8b9                	j	204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:844
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
20403078:	fbc42783          	lw	a5,-68(s0)
2040307c:	00178713          	addi	a4,a5,1
20403080:	fae42e23          	sw	a4,-68(s0)
20403084:	f7c42703          	lw	a4,-132(s0)
20403088:	f7442683          	lw	a3,-140(s0)
2040308c:	863e                	mv	a2,a5
2040308e:	f7842583          	lw	a1,-136(s0)
20403092:	02500513          	li	a0,37
20403096:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:845
        format++;
20403098:	f7042783          	lw	a5,-144(s0)
2040309c:	0785                	addi	a5,a5,1
2040309e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:846
        break;
204030a2:	a80d                	j	204030d4 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:849

      default :
        out(*format, buffer, idx++, maxlen);
204030a4:	f7042783          	lw	a5,-144(s0)
204030a8:	0007c503          	lbu	a0,0(a5)
204030ac:	fbc42783          	lw	a5,-68(s0)
204030b0:	00178713          	addi	a4,a5,1
204030b4:	fae42e23          	sw	a4,-68(s0)
204030b8:	f7c42703          	lw	a4,-132(s0)
204030bc:	f7442683          	lw	a3,-140(s0)
204030c0:	863e                	mv	a2,a5
204030c2:	f7842583          	lw	a1,-136(s0)
204030c6:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:850
        format++;
204030c8:	f7042783          	lw	a5,-144(s0)
204030cc:	0785                	addi	a5,a5,1
204030ce:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:851
        break;
204030d2:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:590
  while (*format)
204030d4:	f7042783          	lw	a5,-144(s0)
204030d8:	0007c783          	lbu	a5,0(a5)
204030dc:	d2079063          	bnez	a5,204025fc <_vsnprintf+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
204030e0:	fbc42703          	lw	a4,-68(s0)
204030e4:	f7442783          	lw	a5,-140(s0)
204030e8:	00f76663          	bltu	a4,a5,204030f4 <_vsnprintf+0xb44>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856 (discriminator 1)
204030ec:	f7442783          	lw	a5,-140(s0)
204030f0:	17fd                	addi	a5,a5,-1
204030f2:	a019                	j	204030f8 <_vsnprintf+0xb48>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856 (discriminator 2)
204030f4:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856 (discriminator 4)
204030f8:	f7c42703          	lw	a4,-132(s0)
204030fc:	f7442683          	lw	a3,-140(s0)
20403100:	863e                	mv	a2,a5
20403102:	f7842583          	lw	a1,-136(s0)
20403106:	4501                	li	a0,0
20403108:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:859 (discriminator 4)

  // return written chars without terminating \0
  return (int)idx;
2040310a:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:860 (discriminator 4)
}
2040310e:	853e                	mv	a0,a5
20403110:	50ba                	lw	ra,172(sp)
20403112:	542a                	lw	s0,168(sp)
20403114:	591a                	lw	s2,164(sp)
20403116:	598a                	lw	s3,160(sp)
20403118:	4a7a                	lw	s4,156(sp)
2040311a:	4aea                	lw	s5,152(sp)
2040311c:	4b5a                	lw	s6,148(sp)
2040311e:	4bca                	lw	s7,144(sp)
20403120:	4c3a                	lw	s8,140(sp)
20403122:	4caa                	lw	s9,136(sp)
20403124:	4d1a                	lw	s10,132(sp)
20403126:	4d8a                	lw	s11,128(sp)
20403128:	614d                	addi	sp,sp,176
2040312a:	8082                	ret

2040312c <printf_>:
printf_():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:866


///////////////////////////////////////////////////////////////////////////////

int printf_(const char* format, ...)
{
2040312c:	715d                	addi	sp,sp,-80
2040312e:	d606                	sw	ra,44(sp)
20403130:	d422                	sw	s0,40(sp)
20403132:	1800                	addi	s0,sp,48
20403134:	fca42e23          	sw	a0,-36(s0)
20403138:	c04c                	sw	a1,4(s0)
2040313a:	c410                	sw	a2,8(s0)
2040313c:	c454                	sw	a3,12(s0)
2040313e:	c818                	sw	a4,16(s0)
20403140:	c85c                	sw	a5,20(s0)
20403142:	01042c23          	sw	a6,24(s0)
20403146:	01142e23          	sw	a7,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:868
  va_list va;
  va_start(va, format);
2040314a:	02040793          	addi	a5,s0,32
2040314e:	1791                	addi	a5,a5,-28
20403150:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:870
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
20403154:	fe842703          	lw	a4,-24(s0)
20403158:	fe440793          	addi	a5,s0,-28
2040315c:	fdc42683          	lw	a3,-36(s0)
20403160:	567d                	li	a2,-1
20403162:	85be                	mv	a1,a5
20403164:	204017b7          	lui	a5,0x20401
20403168:	2c278513          	addi	a0,a5,706 # 204012c2 <_out_char>
2040316c:	c44ff0ef          	jal	ra,204025b0 <_vsnprintf>
20403170:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:872
  va_end(va);
  return ret;
20403174:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:873
}
20403178:	853e                	mv	a0,a5
2040317a:	50b2                	lw	ra,44(sp)
2040317c:	5422                	lw	s0,40(sp)
2040317e:	6161                	addi	sp,sp,80
20403180:	8082                	ret

20403182 <write>:
write():
20403182:	5fbfd797          	auipc	a5,0x5fbfd
20403186:	60678793          	addi	a5,a5,1542 # 80000788 <_impure_ptr>
2040318a:	86b2                	mv	a3,a2
2040318c:	862e                	mv	a2,a1
2040318e:	85aa                	mv	a1,a0
20403190:	4388                	lw	a0,0(a5)
20403192:	a009                	j	20403194 <_write_r>

20403194 <_write_r>:
_write_r():
20403194:	1141                	addi	sp,sp,-16
20403196:	c422                	sw	s0,8(sp)
20403198:	842a                	mv	s0,a0
2040319a:	852e                	mv	a0,a1
2040319c:	85b2                	mv	a1,a2
2040319e:	8636                	mv	a2,a3
204031a0:	9401a423          	sw	zero,-1720(gp) # 800008d0 <errno>
204031a4:	c606                	sw	ra,12(sp)
204031a6:	78f010ef          	jal	ra,20405134 <_write>
204031aa:	57fd                	li	a5,-1
204031ac:	00f51763          	bne	a0,a5,204031ba <_write_r+0x26>
204031b0:	94818793          	addi	a5,gp,-1720 # 800008d0 <errno>
204031b4:	439c                	lw	a5,0(a5)
204031b6:	c391                	beqz	a5,204031ba <_write_r+0x26>
204031b8:	c01c                	sw	a5,0(s0)
204031ba:	40b2                	lw	ra,12(sp)
204031bc:	4422                	lw	s0,8(sp)
204031be:	0141                	addi	sp,sp,16
204031c0:	8082                	ret

204031c2 <__udivdi3>:
__udivdi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
204031c2:	87ae                	mv	a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
204031c4:	8832                	mv	a6,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
204031c6:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
204031c8:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
204031ca:	20069663          	bnez	a3,204033d6 <__udivdi3+0x214>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
204031ce:	00006897          	auipc	a7,0x6
204031d2:	d7a88893          	addi	a7,a7,-646 # 20408f48 <__clz_tab>
204031d6:	0ac5fe63          	bgeu	a1,a2,20403292 <__udivdi3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
204031da:	6741                	lui	a4,0x10
204031dc:	0ae67463          	bgeu	a2,a4,20403284 <__udivdi3+0xc2>
204031e0:	0ff00713          	li	a4,255
204031e4:	00c73733          	sltu	a4,a4,a2
204031e8:	070e                	slli	a4,a4,0x3
204031ea:	00e656b3          	srl	a3,a2,a4
204031ee:	98b6                	add	a7,a7,a3
204031f0:	0008c683          	lbu	a3,0(a7)
204031f4:	9736                	add	a4,a4,a3
204031f6:	02000693          	li	a3,32
204031fa:	8e99                	sub	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
204031fc:	ca99                	beqz	a3,20403212 <__udivdi3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
204031fe:	00d797b3          	sll	a5,a5,a3
20403202:	00e55733          	srl	a4,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20403206:	00d61833          	sll	a6,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2040320a:	00f765b3          	or	a1,a4,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2040320e:	00d51333          	sll	t1,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20403212:	01085513          	srli	a0,a6,0x10
20403216:	02a5f733          	remu	a4,a1,a0
2040321a:	01081613          	slli	a2,a6,0x10
2040321e:	8241                	srli	a2,a2,0x10
20403220:	01035693          	srli	a3,t1,0x10
20403224:	02a5d5b3          	divu	a1,a1,a0
20403228:	0742                	slli	a4,a4,0x10
2040322a:	8ed9                	or	a3,a3,a4
2040322c:	02b607b3          	mul	a5,a2,a1
20403230:	872e                	mv	a4,a1
20403232:	00f6fc63          	bgeu	a3,a5,2040324a <__udivdi3+0x88>
20403236:	96c2                	add	a3,a3,a6
20403238:	fff58713          	addi	a4,a1,-1
2040323c:	0106e763          	bltu	a3,a6,2040324a <__udivdi3+0x88>
20403240:	00f6f563          	bgeu	a3,a5,2040324a <__udivdi3+0x88>
20403244:	ffe58713          	addi	a4,a1,-2
20403248:	96c2                	add	a3,a3,a6
2040324a:	8e9d                	sub	a3,a3,a5
2040324c:	02a6f7b3          	remu	a5,a3,a0
20403250:	0342                	slli	t1,t1,0x10
20403252:	01035313          	srli	t1,t1,0x10
20403256:	02a6d6b3          	divu	a3,a3,a0
2040325a:	07c2                	slli	a5,a5,0x10
2040325c:	0067e333          	or	t1,a5,t1
20403260:	02d605b3          	mul	a1,a2,a3
20403264:	8536                	mv	a0,a3
20403266:	00b37b63          	bgeu	t1,a1,2040327c <__udivdi3+0xba>
2040326a:	9342                	add	t1,t1,a6
2040326c:	fff68513          	addi	a0,a3,-1
20403270:	01036663          	bltu	t1,a6,2040327c <__udivdi3+0xba>
20403274:	00b37463          	bgeu	t1,a1,2040327c <__udivdi3+0xba>
20403278:	ffe68513          	addi	a0,a3,-2
2040327c:	0742                	slli	a4,a4,0x10
2040327e:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20403280:	4581                	li	a1,0
20403282:	a84d                	j	20403334 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20403284:	010006b7          	lui	a3,0x1000
20403288:	4741                	li	a4,16
2040328a:	f6d660e3          	bltu	a2,a3,204031ea <__udivdi3+0x28>
2040328e:	4761                	li	a4,24
20403290:	bfa9                	j	204031ea <__udivdi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20403292:	e601                	bnez	a2,2040329a <__udivdi3+0xd8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20403294:	4685                	li	a3,1
20403296:	02c6d833          	divu	a6,a3,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
2040329a:	66c1                	lui	a3,0x10
2040329c:	08d87e63          	bgeu	a6,a3,20403338 <__udivdi3+0x176>
204032a0:	0ff00693          	li	a3,255
204032a4:	0106f363          	bgeu	a3,a6,204032aa <__udivdi3+0xe8>
204032a8:	4721                	li	a4,8
204032aa:	00e856b3          	srl	a3,a6,a4
204032ae:	98b6                	add	a7,a7,a3
204032b0:	0008c683          	lbu	a3,0(a7)
204032b4:	96ba                	add	a3,a3,a4
204032b6:	02000713          	li	a4,32
204032ba:	8f15                	sub	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
204032bc:	e749                	bnez	a4,20403346 <__udivdi3+0x184>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
204032be:	410787b3          	sub	a5,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
204032c2:	4585                	li	a1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
204032c4:	01085613          	srli	a2,a6,0x10
204032c8:	01081893          	slli	a7,a6,0x10
204032cc:	0108d893          	srli	a7,a7,0x10
204032d0:	01035693          	srli	a3,t1,0x10
204032d4:	02c7f733          	remu	a4,a5,a2
204032d8:	02c7d7b3          	divu	a5,a5,a2
204032dc:	0742                	slli	a4,a4,0x10
204032de:	8ed9                	or	a3,a3,a4
204032e0:	02f88533          	mul	a0,a7,a5
204032e4:	873e                	mv	a4,a5
204032e6:	00a6fc63          	bgeu	a3,a0,204032fe <__udivdi3+0x13c>
204032ea:	96c2                	add	a3,a3,a6
204032ec:	fff78713          	addi	a4,a5,-1
204032f0:	0106e763          	bltu	a3,a6,204032fe <__udivdi3+0x13c>
204032f4:	00a6f563          	bgeu	a3,a0,204032fe <__udivdi3+0x13c>
204032f8:	ffe78713          	addi	a4,a5,-2
204032fc:	96c2                	add	a3,a3,a6
204032fe:	8e89                	sub	a3,a3,a0
20403300:	02c6f7b3          	remu	a5,a3,a2
20403304:	0342                	slli	t1,t1,0x10
20403306:	01035313          	srli	t1,t1,0x10
2040330a:	02c6d6b3          	divu	a3,a3,a2
2040330e:	07c2                	slli	a5,a5,0x10
20403310:	0067e333          	or	t1,a5,t1
20403314:	02d888b3          	mul	a7,a7,a3
20403318:	8536                	mv	a0,a3
2040331a:	01137b63          	bgeu	t1,a7,20403330 <__udivdi3+0x16e>
2040331e:	9342                	add	t1,t1,a6
20403320:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
20403324:	01036663          	bltu	t1,a6,20403330 <__udivdi3+0x16e>
20403328:	01137463          	bgeu	t1,a7,20403330 <__udivdi3+0x16e>
2040332c:	ffe68513          	addi	a0,a3,-2
20403330:	0742                	slli	a4,a4,0x10
20403332:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20403334:	853a                	mv	a0,a4
20403336:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20403338:	010006b7          	lui	a3,0x1000
2040333c:	4741                	li	a4,16
2040333e:	f6d866e3          	bltu	a6,a3,204032aa <__udivdi3+0xe8>
20403342:	4761                	li	a4,24
20403344:	b79d                	j	204032aa <__udivdi3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20403346:	00e81833          	sll	a6,a6,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
2040334a:	00d7d5b3          	srl	a1,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
2040334e:	00e51333          	sll	t1,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20403352:	00d556b3          	srl	a3,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20403356:	01085513          	srli	a0,a6,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2040335a:	00e797b3          	sll	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2040335e:	02a5f733          	remu	a4,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20403362:	00f6e8b3          	or	a7,a3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20403366:	01081793          	slli	a5,a6,0x10
2040336a:	83c1                	srli	a5,a5,0x10
2040336c:	0108d613          	srli	a2,a7,0x10
20403370:	02a5d5b3          	divu	a1,a1,a0
20403374:	0742                	slli	a4,a4,0x10
20403376:	8f51                	or	a4,a4,a2
20403378:	02b786b3          	mul	a3,a5,a1
2040337c:	862e                	mv	a2,a1
2040337e:	00d77c63          	bgeu	a4,a3,20403396 <__udivdi3+0x1d4>
20403382:	9742                	add	a4,a4,a6
20403384:	fff58613          	addi	a2,a1,-1
20403388:	01076763          	bltu	a4,a6,20403396 <__udivdi3+0x1d4>
2040338c:	00d77563          	bgeu	a4,a3,20403396 <__udivdi3+0x1d4>
20403390:	ffe58613          	addi	a2,a1,-2
20403394:	9742                	add	a4,a4,a6
20403396:	40d706b3          	sub	a3,a4,a3
2040339a:	02a6f733          	remu	a4,a3,a0
2040339e:	08c2                	slli	a7,a7,0x10
204033a0:	0108d893          	srli	a7,a7,0x10
204033a4:	02a6d6b3          	divu	a3,a3,a0
204033a8:	0742                	slli	a4,a4,0x10
204033aa:	02d785b3          	mul	a1,a5,a3
204033ae:	011767b3          	or	a5,a4,a7
204033b2:	8736                	mv	a4,a3
204033b4:	00b7fc63          	bgeu	a5,a1,204033cc <__udivdi3+0x20a>
204033b8:	97c2                	add	a5,a5,a6
204033ba:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
204033be:	0107e763          	bltu	a5,a6,204033cc <__udivdi3+0x20a>
204033c2:	00b7f563          	bgeu	a5,a1,204033cc <__udivdi3+0x20a>
204033c6:	ffe68713          	addi	a4,a3,-2
204033ca:	97c2                	add	a5,a5,a6
204033cc:	8f8d                	sub	a5,a5,a1
204033ce:	01061593          	slli	a1,a2,0x10
204033d2:	8dd9                	or	a1,a1,a4
204033d4:	bdc5                	j	204032c4 <__udivdi3+0x102>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
204033d6:	14d5e263          	bltu	a1,a3,2040351a <__udivdi3+0x358>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
204033da:	6741                	lui	a4,0x10
204033dc:	02e6fe63          	bgeu	a3,a4,20403418 <__udivdi3+0x256>
204033e0:	0ff00813          	li	a6,255
204033e4:	00d83733          	sltu	a4,a6,a3
204033e8:	070e                	slli	a4,a4,0x3
204033ea:	00e6d833          	srl	a6,a3,a4
204033ee:	00006597          	auipc	a1,0x6
204033f2:	b5a58593          	addi	a1,a1,-1190 # 20408f48 <__clz_tab>
204033f6:	95c2                	add	a1,a1,a6
204033f8:	0005c803          	lbu	a6,0(a1)
204033fc:	02000593          	li	a1,32
20403400:	983a                	add	a6,a6,a4
20403402:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20403406:	e185                	bnez	a1,20403426 <__udivdi3+0x264>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20403408:	4705                	li	a4,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
2040340a:	f2f6e5e3          	bltu	a3,a5,20403334 <__udivdi3+0x172>
2040340e:	00c53533          	sltu	a0,a0,a2
20403412:	00154713          	xori	a4,a0,1
20403416:	bf39                	j	20403334 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20403418:	010005b7          	lui	a1,0x1000
2040341c:	4741                	li	a4,16
2040341e:	fcb6e6e3          	bltu	a3,a1,204033ea <__udivdi3+0x228>
20403422:	4761                	li	a4,24
20403424:	b7d9                	j	204033ea <__udivdi3+0x228>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20403426:	01065733          	srl	a4,a2,a6
2040342a:	00b696b3          	sll	a3,a3,a1
2040342e:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403430:	0106de93          	srli	t4,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20403434:	0107d733          	srl	a4,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403438:	03d778b3          	remu	a7,a4,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
2040343c:	00b797b3          	sll	a5,a5,a1
20403440:	01055833          	srl	a6,a0,a6
20403444:	00f86333          	or	t1,a6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403448:	01069793          	slli	a5,a3,0x10
2040344c:	83c1                	srli	a5,a5,0x10
2040344e:	01035813          	srli	a6,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20403452:	00b61633          	sll	a2,a2,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403456:	03d75733          	divu	a4,a4,t4
2040345a:	08c2                	slli	a7,a7,0x10
2040345c:	0108e833          	or	a6,a7,a6
20403460:	02e78f33          	mul	t5,a5,a4
20403464:	8e3a                	mv	t3,a4
20403466:	01e87c63          	bgeu	a6,t5,2040347e <__udivdi3+0x2bc>
2040346a:	9836                	add	a6,a6,a3
2040346c:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
20403470:	00d86763          	bltu	a6,a3,2040347e <__udivdi3+0x2bc>
20403474:	01e87563          	bgeu	a6,t5,2040347e <__udivdi3+0x2bc>
20403478:	ffe70e13          	addi	t3,a4,-2
2040347c:	9836                	add	a6,a6,a3
2040347e:	41e80833          	sub	a6,a6,t5
20403482:	03d878b3          	remu	a7,a6,t4
20403486:	03d85833          	divu	a6,a6,t4
2040348a:	08c2                	slli	a7,a7,0x10
2040348c:	03078eb3          	mul	t4,a5,a6
20403490:	01031793          	slli	a5,t1,0x10
20403494:	83c1                	srli	a5,a5,0x10
20403496:	00f8e7b3          	or	a5,a7,a5
2040349a:	8742                	mv	a4,a6
2040349c:	01d7fc63          	bgeu	a5,t4,204034b4 <__udivdi3+0x2f2>
204034a0:	97b6                	add	a5,a5,a3
204034a2:	fff80713          	addi	a4,a6,-1
204034a6:	00d7e763          	bltu	a5,a3,204034b4 <__udivdi3+0x2f2>
204034aa:	01d7f563          	bgeu	a5,t4,204034b4 <__udivdi3+0x2f2>
204034ae:	ffe80713          	addi	a4,a6,-2
204034b2:	97b6                	add	a5,a5,a3
204034b4:	0e42                	slli	t3,t3,0x10
204034b6:	41d787b3          	sub	a5,a5,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
204034ba:	6ec1                	lui	t4,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204034bc:	00ee6733          	or	a4,t3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
204034c0:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
204034c4:	01077333          	and	t1,a4,a6
204034c8:	01075893          	srli	a7,a4,0x10
204034cc:	01067833          	and	a6,a2,a6
204034d0:	8241                	srli	a2,a2,0x10
204034d2:	03030e33          	mul	t3,t1,a6
204034d6:	03088833          	mul	a6,a7,a6
204034da:	010e5693          	srli	a3,t3,0x10
204034de:	02c30333          	mul	t1,t1,a2
204034e2:	9342                	add	t1,t1,a6
204034e4:	969a                	add	a3,a3,t1
204034e6:	02c888b3          	mul	a7,a7,a2
204034ea:	0106f363          	bgeu	a3,a6,204034f0 <__udivdi3+0x32e>
204034ee:	98f6                	add	a7,a7,t4
204034f0:	0106d613          	srli	a2,a3,0x10
204034f4:	98b2                	add	a7,a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
204034f6:	0317e063          	bltu	a5,a7,20403516 <__udivdi3+0x354>
204034fa:	d91793e3          	bne	a5,a7,20403280 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
204034fe:	67c1                	lui	a5,0x10
20403500:	17fd                	addi	a5,a5,-1
20403502:	8efd                	and	a3,a3,a5
20403504:	06c2                	slli	a3,a3,0x10
20403506:	00fe7e33          	and	t3,t3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
2040350a:	00b51533          	sll	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040350e:	96f2                	add	a3,a3,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20403510:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20403512:	e2d571e3          	bgeu	a0,a3,20403334 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
20403516:	177d                	addi	a4,a4,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20403518:	b3a5                	j	20403280 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
2040351a:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
2040351c:	4701                	li	a4,0
2040351e:	bd19                	j	20403334 <__udivdi3+0x172>

20403520 <__umoddi3>:
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20403520:	88b2                	mv	a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20403522:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20403524:	87aa                	mv	a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
20403526:	882e                	mv	a6,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20403528:	1c069863          	bnez	a3,204036f8 <__umoddi3+0x1d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
2040352c:	00006697          	auipc	a3,0x6
20403530:	a1c68693          	addi	a3,a3,-1508 # 20408f48 <__clz_tab>
20403534:	0ac5f863          	bgeu	a1,a2,204035e4 <__umoddi3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20403538:	6341                	lui	t1,0x10
2040353a:	08667e63          	bgeu	a2,t1,204035d6 <__umoddi3+0xb6>
2040353e:	0ff00313          	li	t1,255
20403542:	00c37363          	bgeu	t1,a2,20403548 <__umoddi3+0x28>
20403546:	4721                	li	a4,8
20403548:	00e65333          	srl	t1,a2,a4
2040354c:	969a                	add	a3,a3,t1
2040354e:	0006ce03          	lbu	t3,0(a3)
20403552:	02000313          	li	t1,32
20403556:	9e3a                	add	t3,t3,a4
20403558:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
2040355c:	00030c63          	beqz	t1,20403574 <__umoddi3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20403560:	006595b3          	sll	a1,a1,t1
20403564:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20403568:	006618b3          	sll	a7,a2,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2040356c:	00be6833          	or	a6,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20403570:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20403574:	0108d613          	srli	a2,a7,0x10
20403578:	02c87733          	remu	a4,a6,a2
2040357c:	01089513          	slli	a0,a7,0x10
20403580:	8141                	srli	a0,a0,0x10
20403582:	0107d693          	srli	a3,a5,0x10
20403586:	02c85833          	divu	a6,a6,a2
2040358a:	0742                	slli	a4,a4,0x10
2040358c:	8ed9                	or	a3,a3,a4
2040358e:	03050833          	mul	a6,a0,a6
20403592:	0106f863          	bgeu	a3,a6,204035a2 <__umoddi3+0x82>
20403596:	96c6                	add	a3,a3,a7
20403598:	0116e563          	bltu	a3,a7,204035a2 <__umoddi3+0x82>
2040359c:	0106f363          	bgeu	a3,a6,204035a2 <__umoddi3+0x82>
204035a0:	96c6                	add	a3,a3,a7
204035a2:	410686b3          	sub	a3,a3,a6
204035a6:	02c6f733          	remu	a4,a3,a2
204035aa:	07c2                	slli	a5,a5,0x10
204035ac:	83c1                	srli	a5,a5,0x10
204035ae:	02c6d6b3          	divu	a3,a3,a2
204035b2:	02d506b3          	mul	a3,a0,a3
204035b6:	01071513          	slli	a0,a4,0x10
204035ba:	8fc9                	or	a5,a5,a0
204035bc:	00d7f863          	bgeu	a5,a3,204035cc <__umoddi3+0xac>
204035c0:	97c6                	add	a5,a5,a7
204035c2:	0117e563          	bltu	a5,a7,204035cc <__umoddi3+0xac>
204035c6:	00d7f363          	bgeu	a5,a3,204035cc <__umoddi3+0xac>
204035ca:	97c6                	add	a5,a5,a7
204035cc:	8f95                	sub	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
204035ce:	0067d533          	srl	a0,a5,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
204035d2:	4581                	li	a1,0
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
204035d4:	8082                	ret
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
204035d6:	01000337          	lui	t1,0x1000
204035da:	4741                	li	a4,16
204035dc:	f66666e3          	bltu	a2,t1,20403548 <__umoddi3+0x28>
204035e0:	4761                	li	a4,24
204035e2:	b79d                	j	20403548 <__umoddi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
204035e4:	e601                	bnez	a2,204035ec <__umoddi3+0xcc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
204035e6:	4605                	li	a2,1
204035e8:	031658b3          	divu	a7,a2,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
204035ec:	6641                	lui	a2,0x10
204035ee:	08c8f363          	bgeu	a7,a2,20403674 <__umoddi3+0x154>
204035f2:	0ff00613          	li	a2,255
204035f6:	01167363          	bgeu	a2,a7,204035fc <__umoddi3+0xdc>
204035fa:	4721                	li	a4,8
204035fc:	00e8d633          	srl	a2,a7,a4
20403600:	96b2                	add	a3,a3,a2
20403602:	0006ce03          	lbu	t3,0(a3)
20403606:	02000313          	li	t1,32
2040360a:	9e3a                	add	t3,t3,a4
2040360c:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20403610:	06031963          	bnez	t1,20403682 <__umoddi3+0x162>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20403614:	411585b3          	sub	a1,a1,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20403618:	0108d713          	srli	a4,a7,0x10
2040361c:	01089513          	slli	a0,a7,0x10
20403620:	8141                	srli	a0,a0,0x10
20403622:	0107d613          	srli	a2,a5,0x10
20403626:	02e5f6b3          	remu	a3,a1,a4
2040362a:	02e5d5b3          	divu	a1,a1,a4
2040362e:	06c2                	slli	a3,a3,0x10
20403630:	8ed1                	or	a3,a3,a2
20403632:	02b505b3          	mul	a1,a0,a1
20403636:	00b6f863          	bgeu	a3,a1,20403646 <__umoddi3+0x126>
2040363a:	96c6                	add	a3,a3,a7
2040363c:	0116e563          	bltu	a3,a7,20403646 <__umoddi3+0x126>
20403640:	00b6f363          	bgeu	a3,a1,20403646 <__umoddi3+0x126>
20403644:	96c6                	add	a3,a3,a7
20403646:	40b685b3          	sub	a1,a3,a1
2040364a:	02e5f6b3          	remu	a3,a1,a4
2040364e:	07c2                	slli	a5,a5,0x10
20403650:	83c1                	srli	a5,a5,0x10
20403652:	02e5d5b3          	divu	a1,a1,a4
20403656:	02b505b3          	mul	a1,a0,a1
2040365a:	01069513          	slli	a0,a3,0x10
2040365e:	8fc9                	or	a5,a5,a0
20403660:	00b7f863          	bgeu	a5,a1,20403670 <__umoddi3+0x150>
20403664:	97c6                	add	a5,a5,a7
20403666:	0117e563          	bltu	a5,a7,20403670 <__umoddi3+0x150>
2040366a:	00b7f363          	bgeu	a5,a1,20403670 <__umoddi3+0x150>
2040366e:	97c6                	add	a5,a5,a7
20403670:	8f8d                	sub	a5,a5,a1
20403672:	bfb1                	j	204035ce <__umoddi3+0xae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20403674:	01000637          	lui	a2,0x1000
20403678:	4741                	li	a4,16
2040367a:	f8c8e1e3          	bltu	a7,a2,204035fc <__umoddi3+0xdc>
2040367e:	4761                	li	a4,24
20403680:	bfb5                	j	204035fc <__umoddi3+0xdc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20403682:	006898b3          	sll	a7,a7,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20403686:	01c5d733          	srl	a4,a1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
2040368a:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2040368e:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20403692:	0108d513          	srli	a0,a7,0x10
20403696:	02a776b3          	remu	a3,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2040369a:	006595b3          	sll	a1,a1,t1
2040369e:	00be6e33          	or	t3,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
204036a2:	01089593          	slli	a1,a7,0x10
204036a6:	81c1                	srli	a1,a1,0x10
204036a8:	010e5613          	srli	a2,t3,0x10
204036ac:	02a75733          	divu	a4,a4,a0
204036b0:	06c2                	slli	a3,a3,0x10
204036b2:	8ed1                	or	a3,a3,a2
204036b4:	02e58733          	mul	a4,a1,a4
204036b8:	00e6f863          	bgeu	a3,a4,204036c8 <__umoddi3+0x1a8>
204036bc:	96c6                	add	a3,a3,a7
204036be:	0116e563          	bltu	a3,a7,204036c8 <__umoddi3+0x1a8>
204036c2:	00e6f363          	bgeu	a3,a4,204036c8 <__umoddi3+0x1a8>
204036c6:	96c6                	add	a3,a3,a7
204036c8:	40e68633          	sub	a2,a3,a4
204036cc:	02a676b3          	remu	a3,a2,a0
204036d0:	0e42                	slli	t3,t3,0x10
204036d2:	010e5e13          	srli	t3,t3,0x10
204036d6:	02a65633          	divu	a2,a2,a0
204036da:	06c2                	slli	a3,a3,0x10
204036dc:	02c58633          	mul	a2,a1,a2
204036e0:	01c6e5b3          	or	a1,a3,t3
204036e4:	00c5f863          	bgeu	a1,a2,204036f4 <__umoddi3+0x1d4>
204036e8:	95c6                	add	a1,a1,a7
204036ea:	0115e563          	bltu	a1,a7,204036f4 <__umoddi3+0x1d4>
204036ee:	00c5f363          	bgeu	a1,a2,204036f4 <__umoddi3+0x1d4>
204036f2:	95c6                	add	a1,a1,a7
204036f4:	8d91                	sub	a1,a1,a2
204036f6:	b70d                	j	20403618 <__umoddi3+0xf8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
204036f8:	ecd5eee3          	bltu	a1,a3,204035d4 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
204036fc:	6741                	lui	a4,0x10
204036fe:	04e6f563          	bgeu	a3,a4,20403748 <__umoddi3+0x228>
20403702:	0ff00e93          	li	t4,255
20403706:	00deb733          	sltu	a4,t4,a3
2040370a:	070e                	slli	a4,a4,0x3
2040370c:	00e6d333          	srl	t1,a3,a4
20403710:	00006897          	auipc	a7,0x6
20403714:	83888893          	addi	a7,a7,-1992 # 20408f48 <__clz_tab>
20403718:	989a                	add	a7,a7,t1
2040371a:	0008ce83          	lbu	t4,0(a7)
2040371e:	02000e13          	li	t3,32
20403722:	9eba                	add	t4,t4,a4
20403724:	41de0e33          	sub	t3,t3,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20403728:	020e1763          	bnez	t3,20403756 <__umoddi3+0x236>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
2040372c:	00b6e463          	bltu	a3,a1,20403734 <__umoddi3+0x214>
20403730:	00c56963          	bltu	a0,a2,20403742 <__umoddi3+0x222>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
20403734:	40c507b3          	sub	a5,a0,a2
20403738:	8d95                	sub	a1,a1,a3
2040373a:	00f53533          	sltu	a0,a0,a5
2040373e:	40a58833          	sub	a6,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
20403742:	853e                	mv	a0,a5
20403744:	85c2                	mv	a1,a6
20403746:	b579                	j	204035d4 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20403748:	010008b7          	lui	a7,0x1000
2040374c:	4741                	li	a4,16
2040374e:	fb16efe3          	bltu	a3,a7,2040370c <__umoddi3+0x1ec>
20403752:	4761                	li	a4,24
20403754:	bf65                	j	2040370c <__umoddi3+0x1ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20403756:	01d65733          	srl	a4,a2,t4
2040375a:	01c696b3          	sll	a3,a3,t3
2040375e:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403760:	0106d813          	srli	a6,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20403764:	01d5d733          	srl	a4,a1,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403768:	03077333          	remu	t1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
2040376c:	01c595b3          	sll	a1,a1,t3
20403770:	01d557b3          	srl	a5,a0,t4
20403774:	8fcd                	or	a5,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403776:	01069593          	slli	a1,a3,0x10
2040377a:	81c1                	srli	a1,a1,0x10
2040377c:	0107d893          	srli	a7,a5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20403780:	01c61633          	sll	a2,a2,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20403784:	01c51533          	sll	a0,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403788:	03075733          	divu	a4,a4,a6
2040378c:	0342                	slli	t1,t1,0x10
2040378e:	011368b3          	or	a7,t1,a7
20403792:	02e58f33          	mul	t5,a1,a4
20403796:	833a                	mv	t1,a4
20403798:	01e8fc63          	bgeu	a7,t5,204037b0 <__umoddi3+0x290>
2040379c:	98b6                	add	a7,a7,a3
2040379e:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
204037a2:	00d8e763          	bltu	a7,a3,204037b0 <__umoddi3+0x290>
204037a6:	01e8f563          	bgeu	a7,t5,204037b0 <__umoddi3+0x290>
204037aa:	ffe70313          	addi	t1,a4,-2
204037ae:	98b6                	add	a7,a7,a3
204037b0:	41e888b3          	sub	a7,a7,t5
204037b4:	0308ff33          	remu	t5,a7,a6
204037b8:	0308d8b3          	divu	a7,a7,a6
204037bc:	0f42                	slli	t5,t5,0x10
204037be:	03158833          	mul	a6,a1,a7
204037c2:	01079593          	slli	a1,a5,0x10
204037c6:	81c1                	srli	a1,a1,0x10
204037c8:	00bf65b3          	or	a1,t5,a1
204037cc:	87c6                	mv	a5,a7
204037ce:	0105fc63          	bgeu	a1,a6,204037e6 <__umoddi3+0x2c6>
204037d2:	95b6                	add	a1,a1,a3
204037d4:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
204037d8:	00d5e763          	bltu	a1,a3,204037e6 <__umoddi3+0x2c6>
204037dc:	0105f563          	bgeu	a1,a6,204037e6 <__umoddi3+0x2c6>
204037e0:	ffe88793          	addi	a5,a7,-2
204037e4:	95b6                	add	a1,a1,a3
204037e6:	0342                	slli	t1,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
204037e8:	6f41                	lui	t5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204037ea:	00f36333          	or	t1,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
204037ee:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
204037f2:	00f378b3          	and	a7,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204037f6:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
204037fa:	01035313          	srli	t1,t1,0x10
204037fe:	01065813          	srli	a6,a2,0x10
20403802:	8ff1                	and	a5,a5,a2
20403804:	02f88733          	mul	a4,a7,a5
20403808:	02f307b3          	mul	a5,t1,a5
2040380c:	030888b3          	mul	a7,a7,a6
20403810:	03030333          	mul	t1,t1,a6
20403814:	98be                	add	a7,a7,a5
20403816:	01075813          	srli	a6,a4,0x10
2040381a:	9846                	add	a6,a6,a7
2040381c:	00f87363          	bgeu	a6,a5,20403822 <__umoddi3+0x302>
20403820:	937a                	add	t1,t1,t5
20403822:	01085793          	srli	a5,a6,0x10
20403826:	933e                	add	t1,t1,a5
20403828:	67c1                	lui	a5,0x10
2040382a:	17fd                	addi	a5,a5,-1
2040382c:	00f87833          	and	a6,a6,a5
20403830:	0842                	slli	a6,a6,0x10
20403832:	8f7d                	and	a4,a4,a5
20403834:	9742                	add	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20403836:	0065e663          	bltu	a1,t1,20403842 <__umoddi3+0x322>
2040383a:	00659c63          	bne	a1,t1,20403852 <__umoddi3+0x332>
2040383e:	00e57a63          	bgeu	a0,a4,20403852 <__umoddi3+0x332>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20403842:	40c70633          	sub	a2,a4,a2
20403846:	00c73733          	sltu	a4,a4,a2
2040384a:	9736                	add	a4,a4,a3
2040384c:	40e30333          	sub	t1,t1,a4
20403850:	8732                	mv	a4,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
20403852:	40e50733          	sub	a4,a0,a4
20403856:	00e53533          	sltu	a0,a0,a4
2040385a:	406585b3          	sub	a1,a1,t1
2040385e:	8d89                	sub	a1,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
20403860:	01d597b3          	sll	a5,a1,t4
20403864:	01c75733          	srl	a4,a4,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
20403868:	00e7e533          	or	a0,a5,a4
2040386c:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
20403870:	b395                	j	204035d4 <__umoddi3+0xb4>

20403872 <__adddf3>:
__adddf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403872:	00100837          	lui	a6,0x100
20403876:	187d                	addi	a6,a6,-1
20403878:	00b878b3          	and	a7,a6,a1
2040387c:	088e                	slli	a7,a7,0x3
2040387e:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403882:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403884:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403888:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2040388c:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403890:	0146d893          	srli	a7,a3,0x14
20403894:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403896:	ca26                	sw	s1,20(sp)
20403898:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2040389a:	7ff77493          	andi	s1,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2040389e:	7ff8f893          	andi	a7,a7,2047
204038a2:	01d65713          	srli	a4,a2,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
204038a6:	ce06                	sw	ra,28(sp)
204038a8:	cc22                	sw	s0,24(sp)
204038aa:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
204038ac:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204038b0:	82fd                	srli	a3,a3,0x1f
204038b2:	01076733          	or	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
204038b6:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204038b8:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204038ba:	41148833          	sub	a6,s1,a7
204038be:	22d91663          	bne	s2,a3,20403aea <__adddf3+0x278>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 7)
204038c2:	0f005163          	blez	a6,204039a4 <__adddf3+0x132>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 9)
204038c6:	02089863          	bnez	a7,204038f6 <__adddf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 11)
204038ca:	00c766b3          	or	a3,a4,a2
204038ce:	56068763          	beqz	a3,20403e3c <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 14)
204038d2:	fff80593          	addi	a1,a6,-1 # fffff <__heap_size+0xff7ff>
204038d6:	e989                	bnez	a1,204038e8 <__adddf3+0x76>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 23)
204038d8:	962a                	add	a2,a2,a0
204038da:	00a63533          	sltu	a0,a2,a0
204038de:	97ba                	add	a5,a5,a4
204038e0:	97aa                	add	a5,a5,a0
204038e2:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 80)
204038e4:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
204038e6:	a8b1                	j	20403942 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 24)
204038e8:	7ff00693          	li	a3,2047
204038ec:	00d81d63          	bne	a6,a3,20403906 <__adddf3+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
204038f0:	7ff00493          	li	s1,2047
204038f4:	aa79                	j	20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 12)
204038f6:	7ff00693          	li	a3,2047
204038fa:	18d48c63          	beq	s1,a3,20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 38)
204038fe:	008006b7          	lui	a3,0x800
20403902:	8f55                	or	a4,a4,a3
20403904:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 47)
20403906:	03800693          	li	a3,56
2040390a:	08b6c963          	blt	a3,a1,2040399c <__adddf3+0x12a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 48)
2040390e:	46fd                	li	a3,31
20403910:	06b6c063          	blt	a3,a1,20403970 <__adddf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 50)
20403914:	02000813          	li	a6,32
20403918:	40b80833          	sub	a6,a6,a1
2040391c:	010716b3          	sll	a3,a4,a6
20403920:	00b658b3          	srl	a7,a2,a1
20403924:	01061633          	sll	a2,a2,a6
20403928:	0116e6b3          	or	a3,a3,a7
2040392c:	00c03633          	snez	a2,a2
20403930:	8e55                	or	a2,a2,a3
20403932:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 64)
20403936:	962a                	add	a2,a2,a0
20403938:	973e                	add	a4,a4,a5
2040393a:	00a637b3          	sltu	a5,a2,a0
2040393e:	97ba                	add	a5,a5,a4
20403940:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 122)
20403942:	00879713          	slli	a4,a5,0x8
20403946:	14075663          	bgez	a4,20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 182)
2040394a:	0485                	addi	s1,s1,1
2040394c:	7ff00713          	li	a4,2047
20403950:	48e48563          	beq	s1,a4,20403dda <__adddf3+0x568>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403954:	ff8006b7          	lui	a3,0xff800
20403958:	16fd                	addi	a3,a3,-1
2040395a:	8efd                	and	a3,a3,a5
2040395c:	00155593          	srli	a1,a0,0x1
20403960:	8905                	andi	a0,a0,1
20403962:	01f69793          	slli	a5,a3,0x1f
20403966:	8d4d                	or	a0,a0,a1
20403968:	8d5d                	or	a0,a0,a5
2040396a:	0016d793          	srli	a5,a3,0x1
2040396e:	a215                	j	20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 51)
20403970:	fe058693          	addi	a3,a1,-32 # ffffe0 <__heap_size+0xfff7e0>
20403974:	02000893          	li	a7,32
20403978:	00d756b3          	srl	a3,a4,a3
2040397c:	4801                	li	a6,0
2040397e:	01158863          	beq	a1,a7,2040398e <__adddf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 58)
20403982:	04000813          	li	a6,64
20403986:	40b805b3          	sub	a1,a6,a1
2040398a:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 61)
2040398e:	00c86633          	or	a2,a6,a2
20403992:	00c03633          	snez	a2,a2
20403996:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 49)
20403998:	4701                	li	a4,0
2040399a:	bf71                	j	20403936 <__adddf3+0xc4>
2040399c:	8e59                	or	a2,a2,a4
2040399e:	00c03633          	snez	a2,a2
204039a2:	bfdd                	j	20403998 <__adddf3+0x126>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 10)
204039a4:	0a080b63          	beqz	a6,20403a5a <__adddf3+0x1e8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 66)
204039a8:	409885b3          	sub	a1,a7,s1
204039ac:	e48d                	bnez	s1,204039d6 <__adddf3+0x164>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 68)
204039ae:	00a7e6b3          	or	a3,a5,a0
204039b2:	40068b63          	beqz	a3,20403dc8 <__adddf3+0x556>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 71)
204039b6:	fff58693          	addi	a3,a1,-1
204039ba:	e699                	bnez	a3,204039c8 <__adddf3+0x156>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
204039bc:	9532                	add	a0,a0,a2
204039be:	97ba                	add	a5,a5,a4
204039c0:	00c53633          	sltu	a2,a0,a2
204039c4:	97b2                	add	a5,a5,a2
204039c6:	bf39                	j	204038e4 <__adddf3+0x72>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 81)
204039c8:	7ff00813          	li	a6,2047
204039cc:	01059d63          	bne	a1,a6,204039e6 <__adddf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
204039d0:	87ba                	mv	a5,a4
204039d2:	8532                	mv	a0,a2
204039d4:	bf31                	j	204038f0 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 69)
204039d6:	7ff00693          	li	a3,2047
204039da:	fed88be3          	beq	a7,a3,204039d0 <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 95)
204039de:	008006b7          	lui	a3,0x800
204039e2:	8fd5                	or	a5,a5,a3
204039e4:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 104)
204039e6:	03800593          	li	a1,56
204039ea:	06d5c463          	blt	a1,a3,20403a52 <__adddf3+0x1e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 105)
204039ee:	45fd                	li	a1,31
204039f0:	02d5cb63          	blt	a1,a3,20403a26 <__adddf3+0x1b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 107)
204039f4:	02000813          	li	a6,32
204039f8:	40d80833          	sub	a6,a6,a3
204039fc:	00d55333          	srl	t1,a0,a3
20403a00:	010795b3          	sll	a1,a5,a6
20403a04:	01051533          	sll	a0,a0,a6
20403a08:	0065e5b3          	or	a1,a1,t1
20403a0c:	00a03533          	snez	a0,a0
20403a10:	8d4d                	or	a0,a0,a1
20403a12:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 121)
20403a16:	9532                	add	a0,a0,a2
20403a18:	00e687b3          	add	a5,a3,a4
20403a1c:	00c53633          	sltu	a2,a0,a2
20403a20:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 121)
20403a22:	84c6                	mv	s1,a7
20403a24:	bf39                	j	20403942 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 108)
20403a26:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20403a2a:	02000313          	li	t1,32
20403a2e:	00b7d5b3          	srl	a1,a5,a1
20403a32:	4801                	li	a6,0
20403a34:	00668863          	beq	a3,t1,20403a44 <__adddf3+0x1d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 115)
20403a38:	04000813          	li	a6,64
20403a3c:	40d806b3          	sub	a3,a6,a3
20403a40:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 118)
20403a44:	00a86533          	or	a0,a6,a0
20403a48:	00a03533          	snez	a0,a0
20403a4c:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 106)
20403a4e:	4681                	li	a3,0
20403a50:	b7d9                	j	20403a16 <__adddf3+0x1a4>
20403a52:	8d5d                	or	a0,a0,a5
20403a54:	00a03533          	snez	a0,a0
20403a58:	bfdd                	j	20403a4e <__adddf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 67)
20403a5a:	00148693          	addi	a3,s1,1
20403a5e:	7fe6f593          	andi	a1,a3,2046
20403a62:	e1bd                	bnez	a1,20403ac8 <__adddf3+0x256>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 123)
20403a64:	00a7e6b3          	or	a3,a5,a0
20403a68:	e4a9                	bnez	s1,20403ab2 <__adddf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 125)
20403a6a:	36068363          	beqz	a3,20403dd0 <__adddf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 128)
20403a6e:	00c766b3          	or	a3,a4,a2
20403a72:	c285                	beqz	a3,20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 134)
20403a74:	962a                	add	a2,a2,a0
20403a76:	97ba                	add	a5,a5,a4
20403a78:	00a63533          	sltu	a0,a2,a0
20403a7c:	97aa                	add	a5,a5,a0
20403a7e:	00879713          	slli	a4,a5,0x8
20403a82:	8532                	mv	a0,a2
20403a84:	00075763          	bgez	a4,20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 136)
20403a88:	ff800737          	lui	a4,0xff800
20403a8c:	177d                	addi	a4,a4,-1
20403a8e:	8ff9                	and	a5,a5,a4
20403a90:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 417)
20403a92:	00757713          	andi	a4,a0,7
20403a96:	34070463          	beqz	a4,20403dde <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 37)
20403a9a:	00f57713          	andi	a4,a0,15
20403a9e:	4691                	li	a3,4
20403aa0:	32d70f63          	beq	a4,a3,20403dde <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 44)
20403aa4:	00450693          	addi	a3,a0,4
20403aa8:	00a6b533          	sltu	a0,a3,a0
20403aac:	97aa                	add	a5,a5,a0
20403aae:	8536                	mv	a0,a3
20403ab0:	a63d                	j	20403dde <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 153)
20403ab2:	de99                	beqz	a3,204039d0 <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 155)
20403ab4:	8e59                	or	a2,a2,a4
20403ab6:	e2060de3          	beqz	a2,204038f0 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403aba:	4901                	li	s2,0
20403abc:	004007b7          	lui	a5,0x400
20403ac0:	4501                	li	a0,0
20403ac2:	7ff00493          	li	s1,2047
20403ac6:	ae21                	j	20403dde <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 124)
20403ac8:	7ff00593          	li	a1,2047
20403acc:	30b68563          	beq	a3,a1,20403dd6 <__adddf3+0x564>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403ad0:	962a                	add	a2,a2,a0
20403ad2:	973e                	add	a4,a4,a5
20403ad4:	00a637b3          	sltu	a5,a2,a0
20403ad8:	973e                	add	a4,a4,a5
20403ada:	01f71513          	slli	a0,a4,0x1f
20403ade:	8205                	srli	a2,a2,0x1
20403ae0:	8d51                	or	a0,a0,a2
20403ae2:	00175793          	srli	a5,a4,0x1
20403ae6:	84b6                	mv	s1,a3
20403ae8:	b76d                	j	20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 8)
20403aea:	0d005663          	blez	a6,20403bb6 <__adddf3+0x344>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 200)
20403aee:	08089163          	bnez	a7,20403b70 <__adddf3+0x2fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 202)
20403af2:	00c766b3          	or	a3,a4,a2
20403af6:	34068363          	beqz	a3,20403e3c <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 205)
20403afa:	fff80593          	addi	a1,a6,-1
20403afe:	e991                	bnez	a1,20403b12 <__adddf3+0x2a0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 214)
20403b00:	40c50633          	sub	a2,a0,a2
20403b04:	00c53533          	sltu	a0,a0,a2
20403b08:	8f99                	sub	a5,a5,a4
20403b0a:	8f89                	sub	a5,a5,a0
20403b0c:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 271)
20403b0e:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20403b10:	a0b1                	j	20403b5c <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 215)
20403b12:	7ff00693          	li	a3,2047
20403b16:	dcd80de3          	beq	a6,a3,204038f0 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 238)
20403b1a:	03800693          	li	a3,56
20403b1e:	08b6c863          	blt	a3,a1,20403bae <__adddf3+0x33c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 239)
20403b22:	46fd                	li	a3,31
20403b24:	04b6cf63          	blt	a3,a1,20403b82 <__adddf3+0x310>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 241)
20403b28:	02000813          	li	a6,32
20403b2c:	40b80833          	sub	a6,a6,a1
20403b30:	010716b3          	sll	a3,a4,a6
20403b34:	00b658b3          	srl	a7,a2,a1
20403b38:	01061633          	sll	a2,a2,a6
20403b3c:	0116e6b3          	or	a3,a3,a7
20403b40:	00c03633          	snez	a2,a2
20403b44:	8e55                	or	a2,a2,a3
20403b46:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 255)
20403b4a:	40c50633          	sub	a2,a0,a2
20403b4e:	40e78733          	sub	a4,a5,a4
20403b52:	00c537b3          	sltu	a5,a0,a2
20403b56:	40f707b3          	sub	a5,a4,a5
20403b5a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 313)
20403b5c:	00879713          	slli	a4,a5,0x8
20403b60:	f20759e3          	bgez	a4,20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 373)
20403b64:	00800437          	lui	s0,0x800
20403b68:	147d                	addi	s0,s0,-1
20403b6a:	8c7d                	and	s0,s0,a5
20403b6c:	89aa                	mv	s3,a0
20403b6e:	a275                	j	20403d1a <__adddf3+0x4a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 203)
20403b70:	7ff00693          	li	a3,2047
20403b74:	f0d48fe3          	beq	s1,a3,20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 229)
20403b78:	008006b7          	lui	a3,0x800
20403b7c:	8f55                	or	a4,a4,a3
20403b7e:	85c2                	mv	a1,a6
20403b80:	bf69                	j	20403b1a <__adddf3+0x2a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 242)
20403b82:	fe058693          	addi	a3,a1,-32
20403b86:	02000893          	li	a7,32
20403b8a:	00d756b3          	srl	a3,a4,a3
20403b8e:	4801                	li	a6,0
20403b90:	01158863          	beq	a1,a7,20403ba0 <__adddf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 249)
20403b94:	04000813          	li	a6,64
20403b98:	40b805b3          	sub	a1,a6,a1
20403b9c:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 252)
20403ba0:	00c86633          	or	a2,a6,a2
20403ba4:	00c03633          	snez	a2,a2
20403ba8:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 240)
20403baa:	4701                	li	a4,0
20403bac:	bf79                	j	20403b4a <__adddf3+0x2d8>
20403bae:	8e59                	or	a2,a2,a4
20403bb0:	00c03633          	snez	a2,a2
20403bb4:	bfdd                	j	20403baa <__adddf3+0x338>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 201)
20403bb6:	0c080463          	beqz	a6,20403c7e <__adddf3+0x40c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 257)
20403bba:	40988833          	sub	a6,a7,s1
20403bbe:	e895                	bnez	s1,20403bf2 <__adddf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 259)
20403bc0:	00a7e5b3          	or	a1,a5,a0
20403bc4:	26058e63          	beqz	a1,20403e40 <__adddf3+0x5ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 262)
20403bc8:	fff80593          	addi	a1,a6,-1
20403bcc:	e991                	bnez	a1,20403be0 <__adddf3+0x36e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20403bce:	40a60533          	sub	a0,a2,a0
20403bd2:	40f707b3          	sub	a5,a4,a5
20403bd6:	00a63633          	sltu	a2,a2,a0
20403bda:	8f91                	sub	a5,a5,a2
20403bdc:	8936                	mv	s2,a3
20403bde:	bf05                	j	20403b0e <__adddf3+0x29c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 272)
20403be0:	7ff00313          	li	t1,2047
20403be4:	00681f63          	bne	a6,t1,20403c02 <__adddf3+0x390>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403be8:	87ba                	mv	a5,a4
20403bea:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403bec:	7ff00493          	li	s1,2047
20403bf0:	a07d                	j	20403c9e <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 260)
20403bf2:	7ff00593          	li	a1,2047
20403bf6:	feb889e3          	beq	a7,a1,20403be8 <__adddf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 286)
20403bfa:	008005b7          	lui	a1,0x800
20403bfe:	8fcd                	or	a5,a5,a1
20403c00:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 295)
20403c02:	03800813          	li	a6,56
20403c06:	06b84863          	blt	a6,a1,20403c76 <__adddf3+0x404>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 296)
20403c0a:	487d                	li	a6,31
20403c0c:	02b84e63          	blt	a6,a1,20403c48 <__adddf3+0x3d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 298)
20403c10:	02000313          	li	t1,32
20403c14:	40b30333          	sub	t1,t1,a1
20403c18:	00b55e33          	srl	t3,a0,a1
20403c1c:	00679833          	sll	a6,a5,t1
20403c20:	00651533          	sll	a0,a0,t1
20403c24:	01c86833          	or	a6,a6,t3
20403c28:	00a03533          	snez	a0,a0
20403c2c:	00a86533          	or	a0,a6,a0
20403c30:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 312)
20403c34:	40a60533          	sub	a0,a2,a0
20403c38:	40b707b3          	sub	a5,a4,a1
20403c3c:	00a63633          	sltu	a2,a2,a0
20403c40:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 312)
20403c42:	84c6                	mv	s1,a7
20403c44:	8936                	mv	s2,a3
20403c46:	bf19                	j	20403b5c <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 299)
20403c48:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20403c4c:	02000e13          	li	t3,32
20403c50:	0107d833          	srl	a6,a5,a6
20403c54:	4301                	li	t1,0
20403c56:	01c58863          	beq	a1,t3,20403c66 <__adddf3+0x3f4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 306)
20403c5a:	04000313          	li	t1,64
20403c5e:	40b305b3          	sub	a1,t1,a1
20403c62:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 309)
20403c66:	00a36533          	or	a0,t1,a0
20403c6a:	00a03533          	snez	a0,a0
20403c6e:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 297)
20403c72:	4581                	li	a1,0
20403c74:	b7c1                	j	20403c34 <__adddf3+0x3c2>
20403c76:	8d5d                	or	a0,a0,a5
20403c78:	00a03533          	snez	a0,a0
20403c7c:	bfdd                	j	20403c72 <__adddf3+0x400>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 258)
20403c7e:	00148593          	addi	a1,s1,1
20403c82:	7fe5f593          	andi	a1,a1,2046
20403c86:	e5b5                	bnez	a1,20403cf2 <__adddf3+0x480>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 314)
20403c88:	00a7e833          	or	a6,a5,a0
20403c8c:	00c765b3          	or	a1,a4,a2
20403c90:	e4b1                	bnez	s1,20403cdc <__adddf3+0x46a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 316)
20403c92:	00081863          	bnez	a6,20403ca2 <__adddf3+0x430>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 318)
20403c96:	1a058963          	beqz	a1,20403e48 <__adddf3+0x5d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403c9a:	87ba                	mv	a5,a4
20403c9c:	8532                	mv	a0,a2
20403c9e:	8936                	mv	s2,a3
20403ca0:	bbcd                	j	20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 319)
20403ca2:	de0588e3          	beqz	a1,20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 326)
20403ca6:	40c50833          	sub	a6,a0,a2
20403caa:	40e785b3          	sub	a1,a5,a4
20403cae:	010538b3          	sltu	a7,a0,a6
20403cb2:	411585b3          	sub	a1,a1,a7
20403cb6:	00859413          	slli	s0,a1,0x8
20403cba:	00045a63          	bgez	s0,20403cce <__adddf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 328)
20403cbe:	40a60533          	sub	a0,a2,a0
20403cc2:	40f707b3          	sub	a5,a4,a5
20403cc6:	00a63633          	sltu	a2,a2,a0
20403cca:	8f91                	sub	a5,a5,a2
20403ccc:	bfc9                	j	20403c9e <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 329)
20403cce:	00b86533          	or	a0,a6,a1
20403cd2:	16050f63          	beqz	a0,20403e50 <__adddf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403cd6:	87ae                	mv	a5,a1
20403cd8:	8542                	mv	a0,a6
20403cda:	bb65                	j	20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 348)
20403cdc:	00081863          	bnez	a6,20403cec <__adddf3+0x47a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 349)
20403ce0:	16058a63          	beqz	a1,20403e54 <__adddf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403ce4:	87ba                	mv	a5,a4
20403ce6:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403ce8:	8936                	mv	s2,a3
20403cea:	b119                	j	204038f0 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 350)
20403cec:	c00582e3          	beqz	a1,204038f0 <__adddf3+0x7e>
20403cf0:	b3e9                	j	20403aba <__adddf3+0x248>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 315)
20403cf2:	40c509b3          	sub	s3,a0,a2
20403cf6:	013535b3          	sltu	a1,a0,s3
20403cfa:	40e78433          	sub	s0,a5,a4
20403cfe:	8c0d                	sub	s0,s0,a1
20403d00:	00841593          	slli	a1,s0,0x8
20403d04:	0605d763          	bgez	a1,20403d72 <__adddf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 366)
20403d08:	40a609b3          	sub	s3,a2,a0
20403d0c:	40f707b3          	sub	a5,a4,a5
20403d10:	01363633          	sltu	a2,a2,s3
20403d14:	40c78433          	sub	s0,a5,a2
20403d18:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 375)
20403d1a:	c035                	beqz	s0,20403d7e <__adddf3+0x50c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 378)
20403d1c:	8522                	mv	a0,s0
20403d1e:	3da010ef          	jal	ra,204050f8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 389)
20403d22:	ff850713          	addi	a4,a0,-8
20403d26:	47fd                	li	a5,31
20403d28:	06e7c163          	blt	a5,a4,20403d8a <__adddf3+0x518>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 390)
20403d2c:	02000793          	li	a5,32
20403d30:	8f99                	sub	a5,a5,a4
20403d32:	00e41433          	sll	s0,s0,a4
20403d36:	00f9d7b3          	srl	a5,s3,a5
20403d3a:	8c5d                	or	s0,s0,a5
20403d3c:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 399)
20403d40:	06974e63          	blt	a4,s1,20403dbc <__adddf3+0x54a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 400)
20403d44:	8f05                	sub	a4,a4,s1
20403d46:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7feb2d>
20403d4a:	46fd                	li	a3,31
20403d4c:	04f6c563          	blt	a3,a5,20403d96 <__adddf3+0x524>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 402)
20403d50:	02000713          	li	a4,32
20403d54:	8f1d                	sub	a4,a4,a5
20403d56:	00f55633          	srl	a2,a0,a5
20403d5a:	00e416b3          	sll	a3,s0,a4
20403d5e:	00e51533          	sll	a0,a0,a4
20403d62:	8ed1                	or	a3,a3,a2
20403d64:	00a03533          	snez	a0,a0
20403d68:	8d55                	or	a0,a0,a3
20403d6a:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20403d6e:	4481                	li	s1,0
20403d70:	b30d                	j	20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 367)
20403d72:	0089e533          	or	a0,s3,s0
20403d76:	f155                	bnez	a0,20403d1a <__adddf3+0x4a8>
20403d78:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403d7a:	4481                	li	s1,0
20403d7c:	a8c1                	j	20403e4c <__adddf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 382)
20403d7e:	854e                	mv	a0,s3
20403d80:	378010ef          	jal	ra,204050f8 <__clzsi2>
20403d84:	02050513          	addi	a0,a0,32
20403d88:	bf69                	j	20403d22 <__adddf3+0x4b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 391)
20403d8a:	fd850413          	addi	s0,a0,-40
20403d8e:	00899433          	sll	s0,s3,s0
20403d92:	4501                	li	a0,0
20403d94:	b775                	j	20403d40 <__adddf3+0x4ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 403)
20403d96:	1705                	addi	a4,a4,-31
20403d98:	02000613          	li	a2,32
20403d9c:	00e45733          	srl	a4,s0,a4
20403da0:	4681                	li	a3,0
20403da2:	00c78763          	beq	a5,a2,20403db0 <__adddf3+0x53e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 411)
20403da6:	04000693          	li	a3,64
20403daa:	8e9d                	sub	a3,a3,a5
20403dac:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20403db0:	8d55                	or	a0,a0,a3
20403db2:	00a03533          	snez	a0,a0
20403db6:	8d59                	or	a0,a0,a4
20403db8:	4781                	li	a5,0
20403dba:	bf55                	j	20403d6e <__adddf3+0x4fc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 401)
20403dbc:	ff8007b7          	lui	a5,0xff800
20403dc0:	17fd                	addi	a5,a5,-1
20403dc2:	8c99                	sub	s1,s1,a4
20403dc4:	8fe1                	and	a5,a5,s0
20403dc6:	b1f1                	j	20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403dc8:	87ba                	mv	a5,a4
20403dca:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403dcc:	84ae                	mv	s1,a1
20403dce:	b1d1                	j	20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403dd0:	87ba                	mv	a5,a4
20403dd2:	8532                	mv	a0,a2
20403dd4:	b97d                	j	20403a92 <__adddf3+0x220>
20403dd6:	7ff00493          	li	s1,2047
20403dda:	4781                	li	a5,0
20403ddc:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 47)
20403dde:	00879713          	slli	a4,a5,0x8
20403de2:	00075b63          	bgez	a4,20403df8 <__adddf3+0x586>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 63)
20403de6:	0485                	addi	s1,s1,1
20403de8:	7ff00713          	li	a4,2047
20403dec:	06e48963          	beq	s1,a4,20403e5e <__adddf3+0x5ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20403df0:	ff800737          	lui	a4,0xff800
20403df4:	177d                	addi	a4,a4,-1
20403df6:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 79)
20403df8:	01d79713          	slli	a4,a5,0x1d
20403dfc:	810d                	srli	a0,a0,0x3
20403dfe:	8d59                	or	a0,a0,a4
20403e00:	7ff00713          	li	a4,2047
20403e04:	838d                	srli	a5,a5,0x3
20403e06:	00e49963          	bne	s1,a4,20403e18 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 80)
20403e0a:	8d5d                	or	a0,a0,a5
20403e0c:	4781                	li	a5,0
20403e0e:	c509                	beqz	a0,20403e18 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20403e10:	000807b7          	lui	a5,0x80
20403e14:	4501                	li	a0,0
20403e16:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20403e18:	7ff4f713          	andi	a4,s1,2047
20403e1c:	07b2                	slli	a5,a5,0xc
20403e1e:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20403e20:	40f2                	lw	ra,28(sp)
20403e22:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20403e24:	83b1                	srli	a5,a5,0xc
20403e26:	01f91593          	slli	a1,s2,0x1f
20403e2a:	8fd9                	or	a5,a5,a4
20403e2c:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20403e30:	44d2                	lw	s1,20(sp)
20403e32:	4942                	lw	s2,16(sp)
20403e34:	49b2                	lw	s3,12(sp)
20403e36:	85ba                	mv	a1,a4
20403e38:	6105                	addi	sp,sp,32
20403e3a:	8082                	ret
20403e3c:	84c2                	mv	s1,a6
20403e3e:	b991                	j	20403a92 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403e40:	87ba                	mv	a5,a4
20403e42:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403e44:	84c2                	mv	s1,a6
20403e46:	bda1                	j	20403c9e <__adddf3+0x42c>
20403e48:	4781                	li	a5,0
20403e4a:	4501                	li	a0,0
20403e4c:	4901                	li	s2,0
20403e4e:	bf41                	j	20403dde <__adddf3+0x56c>
20403e50:	4781                	li	a5,0
20403e52:	bfed                	j	20403e4c <__adddf3+0x5da>
20403e54:	4501                	li	a0,0
20403e56:	4901                	li	s2,0
20403e58:	004007b7          	lui	a5,0x400
20403e5c:	b19d                	j	20403ac2 <__adddf3+0x250>
20403e5e:	4781                	li	a5,0
20403e60:	4501                	li	a0,0
20403e62:	bf59                	j	20403df8 <__adddf3+0x586>

20403e64 <__divdf3>:
__divdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403e64:	7179                	addi	sp,sp,-48
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403e66:	0145d813          	srli	a6,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403e6a:	d226                	sw	s1,36(sp)
20403e6c:	ce4e                	sw	s3,28(sp)
20403e6e:	cc52                	sw	s4,24(sp)
20403e70:	c85a                	sw	s6,16(sp)
20403e72:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403e74:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403e78:	d606                	sw	ra,44(sp)
20403e7a:	d422                	sw	s0,40(sp)
20403e7c:	d04a                	sw	s2,32(sp)
20403e7e:	ca56                	sw	s5,20(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403e80:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403e84:	8b2a                	mv	s6,a0
20403e86:	8bb2                	mv	s7,a2
20403e88:	8a36                	mv	s4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403e8a:	80b1                	srli	s1,s1,0xc
20403e8c:	01f5d993          	srli	s3,a1,0x1f
20403e90:	08080463          	beqz	a6,20403f18 <__divdf3+0xb4>
20403e94:	7ff00793          	li	a5,2047
20403e98:	0cf80a63          	beq	a6,a5,20403f6c <__divdf3+0x108>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 1)
20403e9c:	01d55a93          	srli	s5,a0,0x1d
20403ea0:	048e                	slli	s1,s1,0x3
20403ea2:	009ae4b3          	or	s1,s5,s1
20403ea6:	00800ab7          	lui	s5,0x800
20403eaa:	0154eab3          	or	s5,s1,s5
20403eae:	00351413          	slli	s0,a0,0x3
20403eb2:	c0180913          	addi	s2,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20403eb6:	4b01                	li	s6,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20403eb8:	014a5513          	srli	a0,s4,0x14
20403ebc:	00ca1493          	slli	s1,s4,0xc
20403ec0:	7ff57813          	andi	a6,a0,2047
20403ec4:	80b1                	srli	s1,s1,0xc
20403ec6:	01fa5a13          	srli	s4,s4,0x1f
20403eca:	0c080463          	beqz	a6,20403f92 <__divdf3+0x12e>
20403ece:	7ff00793          	li	a5,2047
20403ed2:	10f80963          	beq	a6,a5,20403fe4 <__divdf3+0x180>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 1)
20403ed6:	00349513          	slli	a0,s1,0x3
20403eda:	01dbd793          	srli	a5,s7,0x1d
20403ede:	8d5d                	or	a0,a0,a5
20403ee0:	008004b7          	lui	s1,0x800
20403ee4:	8cc9                	or	s1,s1,a0
20403ee6:	003b9f13          	slli	t5,s7,0x3
20403eea:	c0180513          	addi	a0,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20403eee:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20403ef0:	002b1713          	slli	a4,s6,0x2
20403ef4:	8f5d                	or	a4,a4,a5
20403ef6:	177d                	addi	a4,a4,-1
20403ef8:	46b9                	li	a3,14
20403efa:	0149c633          	xor	a2,s3,s4
20403efe:	40a90833          	sub	a6,s2,a0
20403f02:	10e6e363          	bltu	a3,a4,20404008 <__divdf3+0x1a4>
20403f06:	00005697          	auipc	a3,0x5
20403f0a:	fca68693          	addi	a3,a3,-54 # 20408ed0 <pow10.2193+0x50>
20403f0e:	070a                	slli	a4,a4,0x2
20403f10:	9736                	add	a4,a4,a3
20403f12:	4318                	lw	a4,0(a4)
20403f14:	9736                	add	a4,a4,a3
20403f16:	8702                	jr	a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 2)
20403f18:	00a4eab3          	or	s5,s1,a0
20403f1c:	060a8263          	beqz	s5,20403f80 <__divdf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 12)
20403f20:	c89d                	beqz	s1,20403f56 <__divdf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 16)
20403f22:	8526                	mv	a0,s1
20403f24:	1d4010ef          	jal	ra,204050f8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 27)
20403f28:	ff550793          	addi	a5,a0,-11
20403f2c:	4771                	li	a4,28
20403f2e:	02f74963          	blt	a4,a5,20403f60 <__divdf3+0xfc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 28)
20403f32:	4af5                	li	s5,29
20403f34:	ff850413          	addi	s0,a0,-8
20403f38:	40fa8ab3          	sub	s5,s5,a5
20403f3c:	008494b3          	sll	s1,s1,s0
20403f40:	015b5ab3          	srl	s5,s6,s5
20403f44:	009aeab3          	or	s5,s5,s1
20403f48:	008b1433          	sll	s0,s6,s0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20403f4c:	c0d00813          	li	a6,-1011
20403f50:	40a80933          	sub	s2,a6,a0
20403f54:	b78d                	j	20403eb6 <__divdf3+0x52>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 20)
20403f56:	1a2010ef          	jal	ra,204050f8 <__clzsi2>
20403f5a:	02050513          	addi	a0,a0,32
20403f5e:	b7e9                	j	20403f28 <__divdf3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 29)
20403f60:	fd850493          	addi	s1,a0,-40
20403f64:	009b1ab3          	sll	s5,s6,s1
20403f68:	4401                	li	s0,0
20403f6a:	b7cd                	j	20403f4c <__divdf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 3)
20403f6c:	00a4eab3          	or	s5,s1,a0
20403f70:	000a8c63          	beqz	s5,20403f88 <__divdf3+0x124>
20403f74:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403f76:	8aa6                	mv	s5,s1
20403f78:	7ff00913          	li	s2,2047
20403f7c:	4b0d                	li	s6,3
20403f7e:	bf2d                	j	20403eb8 <__divdf3+0x54>
20403f80:	4401                	li	s0,0
20403f82:	4901                	li	s2,0
20403f84:	4b05                	li	s6,1
20403f86:	bf0d                	j	20403eb8 <__divdf3+0x54>
20403f88:	4401                	li	s0,0
20403f8a:	7ff00913          	li	s2,2047
20403f8e:	4b09                	li	s6,2
20403f90:	b725                	j	20403eb8 <__divdf3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 2)
20403f92:	0174ef33          	or	t5,s1,s7
20403f96:	060f0063          	beqz	t5,20403ff6 <__divdf3+0x192>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 12)
20403f9a:	c88d                	beqz	s1,20403fcc <__divdf3+0x168>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 16)
20403f9c:	8526                	mv	a0,s1
20403f9e:	15a010ef          	jal	ra,204050f8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 27)
20403fa2:	ff550793          	addi	a5,a0,-11
20403fa6:	4771                	li	a4,28
20403fa8:	02f74863          	blt	a4,a5,20403fd8 <__divdf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 28)
20403fac:	4775                	li	a4,29
20403fae:	ff850f13          	addi	t5,a0,-8
20403fb2:	8f1d                	sub	a4,a4,a5
20403fb4:	01e494b3          	sll	s1,s1,t5
20403fb8:	00ebd733          	srl	a4,s7,a4
20403fbc:	8cd9                	or	s1,s1,a4
20403fbe:	01eb9f33          	sll	t5,s7,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20403fc2:	c0d00613          	li	a2,-1011
20403fc6:	40a60533          	sub	a0,a2,a0
20403fca:	b715                	j	20403eee <__divdf3+0x8a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 20)
20403fcc:	855e                	mv	a0,s7
20403fce:	12a010ef          	jal	ra,204050f8 <__clzsi2>
20403fd2:	02050513          	addi	a0,a0,32
20403fd6:	b7f1                	j	20403fa2 <__divdf3+0x13e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 29)
20403fd8:	fd850493          	addi	s1,a0,-40
20403fdc:	009b94b3          	sll	s1,s7,s1
20403fe0:	4f01                	li	t5,0
20403fe2:	b7c5                	j	20403fc2 <__divdf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 3)
20403fe4:	0174ef33          	or	t5,s1,s7
20403fe8:	000f0b63          	beqz	t5,20403ffe <__divdf3+0x19a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20403fec:	8f5e                	mv	t5,s7
20403fee:	7ff00513          	li	a0,2047
20403ff2:	478d                	li	a5,3
20403ff4:	bdf5                	j	20403ef0 <__divdf3+0x8c>
20403ff6:	4481                	li	s1,0
20403ff8:	4501                	li	a0,0
20403ffa:	4785                	li	a5,1
20403ffc:	bdd5                	j	20403ef0 <__divdf3+0x8c>
20403ffe:	4481                	li	s1,0
20404000:	7ff00513          	li	a0,2047
20404004:	4789                	li	a5,2
20404006:	b5ed                	j	20403ef0 <__divdf3+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 2)
20404008:	0154e663          	bltu	s1,s5,20404014 <__divdf3+0x1b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 11)
2040400c:	2a9a9363          	bne	s5,s1,204042b2 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 12)
20404010:	2be46163          	bltu	s0,t5,204042b2 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 14)
20404014:	01fa9693          	slli	a3,s5,0x1f
20404018:	00145713          	srli	a4,s0,0x1
2040401c:	01f41793          	slli	a5,s0,0x1f
20404020:	001ada93          	srli	s5,s5,0x1
20404024:	00e6e433          	or	s0,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 19)
20404028:	00849513          	slli	a0,s1,0x8
2040402c:	018f5493          	srli	s1,t5,0x18
20404030:	8d45                	or	a0,a0,s1
20404032:	01055e13          	srli	t3,a0,0x10
20404036:	03cad8b3          	divu	a7,s5,t3
2040403a:	01051313          	slli	t1,a0,0x10
2040403e:	01035313          	srli	t1,t1,0x10
20404042:	01045713          	srli	a4,s0,0x10
20404046:	008f1593          	slli	a1,t5,0x8
2040404a:	03caf4b3          	remu	s1,s5,t3
2040404e:	8fc6                	mv	t6,a7
20404050:	031306b3          	mul	a3,t1,a7
20404054:	01049a93          	slli	s5,s1,0x10
20404058:	01576733          	or	a4,a4,s5
2040405c:	00d77c63          	bgeu	a4,a3,20404074 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 22)
20404060:	972a                	add	a4,a4,a0
20404062:	fff88f93          	addi	t6,a7,-1
20404066:	00a76763          	bltu	a4,a0,20404074 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 24)
2040406a:	00d77563          	bgeu	a4,a3,20404074 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 26)
2040406e:	ffe88f93          	addi	t6,a7,-2
20404072:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 28)
20404074:	8f15                	sub	a4,a4,a3
20404076:	03c75eb3          	divu	t4,a4,t3
2040407a:	0442                	slli	s0,s0,0x10
2040407c:	8041                	srli	s0,s0,0x10
2040407e:	03c77733          	remu	a4,a4,t3
20404082:	86f6                	mv	a3,t4
20404084:	03d308b3          	mul	a7,t1,t4
20404088:	0742                	slli	a4,a4,0x10
2040408a:	8f41                	or	a4,a4,s0
2040408c:	01177c63          	bgeu	a4,a7,204040a4 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 29)
20404090:	972a                	add	a4,a4,a0
20404092:	fffe8693          	addi	a3,t4,-1
20404096:	00a76763          	bltu	a4,a0,204040a4 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 31)
2040409a:	01177563          	bgeu	a4,a7,204040a4 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 33)
2040409e:	ffee8693          	addi	a3,t4,-2
204040a2:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 35)
204040a4:	0fc2                	slli	t6,t6,0x10
204040a6:	00dfefb3          	or	t6,t6,a3
204040aa:	66c1                	lui	a3,0x10
204040ac:	41170433          	sub	s0,a4,a7
204040b0:	fff68893          	addi	a7,a3,-1 # ffff <__heap_size+0xf7ff>
204040b4:	010fdf13          	srli	t5,t6,0x10
204040b8:	011ff733          	and	a4,t6,a7
204040bc:	0105de93          	srli	t4,a1,0x10
204040c0:	0115f8b3          	and	a7,a1,a7
204040c4:	031703b3          	mul	t2,a4,a7
204040c8:	031f04b3          	mul	s1,t5,a7
204040cc:	02ee8733          	mul	a4,t4,a4
204040d0:	03df02b3          	mul	t0,t5,t4
204040d4:	00970f33          	add	t5,a4,s1
204040d8:	0103d713          	srli	a4,t2,0x10
204040dc:	977a                	add	a4,a4,t5
204040de:	00977363          	bgeu	a4,s1,204040e4 <__divdf3+0x280>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 36)
204040e2:	92b6                	add	t0,t0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 38)
204040e4:	01075f13          	srli	t5,a4,0x10
204040e8:	9f16                	add	t5,t5,t0
204040ea:	62c1                	lui	t0,0x10
204040ec:	12fd                	addi	t0,t0,-1
204040ee:	005776b3          	and	a3,a4,t0
204040f2:	06c2                	slli	a3,a3,0x10
204040f4:	0053f3b3          	and	t2,t2,t0
204040f8:	969e                	add	a3,a3,t2
204040fa:	01e46763          	bltu	s0,t5,20404108 <__divdf3+0x2a4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 40)
204040fe:	84fe                	mv	s1,t6
20404100:	03e41e63          	bne	s0,t5,2040413c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 41)
20404104:	02d7fc63          	bgeu	a5,a3,2040413c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 43)
20404108:	97ae                	add	a5,a5,a1
2040410a:	00b7b733          	sltu	a4,a5,a1
2040410e:	972a                	add	a4,a4,a0
20404110:	943a                	add	s0,s0,a4
20404112:	ffff8493          	addi	s1,t6,-1
20404116:	00856663          	bltu	a0,s0,20404122 <__divdf3+0x2be>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 46)
2040411a:	02851163          	bne	a0,s0,2040413c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 47)
2040411e:	00b7ef63          	bltu	a5,a1,2040413c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 49)
20404122:	01e46663          	bltu	s0,t5,2040412e <__divdf3+0x2ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 52)
20404126:	008f1b63          	bne	t5,s0,2040413c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 53)
2040412a:	00d7f963          	bgeu	a5,a3,2040413c <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 55)
2040412e:	97ae                	add	a5,a5,a1
20404130:	00b7b733          	sltu	a4,a5,a1
20404134:	972a                	add	a4,a4,a0
20404136:	ffef8493          	addi	s1,t6,-2
2040413a:	943a                	add	s0,s0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 57)
2040413c:	40d786b3          	sub	a3,a5,a3
20404140:	41e40433          	sub	s0,s0,t5
20404144:	00d7b7b3          	sltu	a5,a5,a3
20404148:	8c1d                	sub	s0,s0,a5
2040414a:	5f7d                	li	t5,-1
2040414c:	0e850563          	beq	a0,s0,20404236 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 59)
20404150:	03c45f33          	divu	t5,s0,t3
20404154:	0106d713          	srli	a4,a3,0x10
20404158:	03c47433          	remu	s0,s0,t3
2040415c:	03e307b3          	mul	a5,t1,t5
20404160:	0442                	slli	s0,s0,0x10
20404162:	8c59                	or	s0,s0,a4
20404164:	877a                	mv	a4,t5
20404166:	00f47c63          	bgeu	s0,a5,2040417e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 61)
2040416a:	942a                	add	s0,s0,a0
2040416c:	ffff0713          	addi	a4,t5,-1
20404170:	00a46763          	bltu	s0,a0,2040417e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 63)
20404174:	00f47563          	bgeu	s0,a5,2040417e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 65)
20404178:	ffef0713          	addi	a4,t5,-2
2040417c:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 67)
2040417e:	8c1d                	sub	s0,s0,a5
20404180:	03c45f33          	divu	t5,s0,t3
20404184:	06c2                	slli	a3,a3,0x10
20404186:	82c1                	srli	a3,a3,0x10
20404188:	03c47433          	remu	s0,s0,t3
2040418c:	87fa                	mv	a5,t5
2040418e:	03e30333          	mul	t1,t1,t5
20404192:	0442                	slli	s0,s0,0x10
20404194:	8c55                	or	s0,s0,a3
20404196:	00647c63          	bgeu	s0,t1,204041ae <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 68)
2040419a:	942a                	add	s0,s0,a0
2040419c:	ffff0793          	addi	a5,t5,-1
204041a0:	00a46763          	bltu	s0,a0,204041ae <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 70)
204041a4:	00647563          	bgeu	s0,t1,204041ae <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 72)
204041a8:	ffef0793          	addi	a5,t5,-2
204041ac:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 74)
204041ae:	0742                	slli	a4,a4,0x10
204041b0:	8f5d                	or	a4,a4,a5
204041b2:	01071793          	slli	a5,a4,0x10
204041b6:	83c1                	srli	a5,a5,0x10
204041b8:	40640433          	sub	s0,s0,t1
204041bc:	01075313          	srli	t1,a4,0x10
204041c0:	03178e33          	mul	t3,a5,a7
204041c4:	031308b3          	mul	a7,t1,a7
204041c8:	026e8333          	mul	t1,t4,t1
204041cc:	02fe8eb3          	mul	t4,t4,a5
204041d0:	010e5793          	srli	a5,t3,0x10
204041d4:	9ec6                	add	t4,t4,a7
204041d6:	97f6                	add	a5,a5,t4
204041d8:	0117f463          	bgeu	a5,a7,204041e0 <__divdf3+0x37c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 75)
204041dc:	66c1                	lui	a3,0x10
204041de:	9336                	add	t1,t1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 77)
204041e0:	0107d893          	srli	a7,a5,0x10
204041e4:	989a                	add	a7,a7,t1
204041e6:	6341                	lui	t1,0x10
204041e8:	137d                	addi	t1,t1,-1
204041ea:	0067f6b3          	and	a3,a5,t1
204041ee:	06c2                	slli	a3,a3,0x10
204041f0:	006e7e33          	and	t3,t3,t1
204041f4:	96f2                	add	a3,a3,t3
204041f6:	01146663          	bltu	s0,a7,20404202 <__divdf3+0x39e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 79)
204041fa:	19141e63          	bne	s0,a7,20404396 <__divdf3+0x532>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 80)
204041fe:	8f3a                	mv	t5,a4
20404200:	ca9d                	beqz	a3,20404236 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 82)
20404202:	942a                	add	s0,s0,a0
20404204:	fff70f13          	addi	t5,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7feb2b>
20404208:	02a46163          	bltu	s0,a0,2040422a <__divdf3+0x3c6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 88)
2040420c:	01146663          	bltu	s0,a7,20404218 <__divdf3+0x3b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 91)
20404210:	19141263          	bne	s0,a7,20404394 <__divdf3+0x530>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 92)
20404214:	00d5fd63          	bgeu	a1,a3,2040422e <__divdf3+0x3ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 94)
20404218:	00159793          	slli	a5,a1,0x1
2040421c:	00b7b5b3          	sltu	a1,a5,a1
20404220:	952e                	add	a0,a0,a1
20404222:	ffe70f13          	addi	t5,a4,-2
20404226:	942a                	add	s0,s0,a0
20404228:	85be                	mv	a1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 96)
2040422a:	01141463          	bne	s0,a7,20404232 <__divdf3+0x3ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 98)
2040422e:	00b68463          	beq	a3,a1,20404236 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 99)
20404232:	001f6f13          	ori	t5,t5,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 2)
20404236:	3ff80713          	addi	a4,a6,1023
2040423a:	0ae05763          	blez	a4,204042e8 <__divdf3+0x484>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 6)
2040423e:	007f7793          	andi	a5,t5,7
20404242:	cf81                	beqz	a5,2040425a <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 8)
20404244:	00ff7793          	andi	a5,t5,15
20404248:	4691                	li	a3,4
2040424a:	00d78863          	beq	a5,a3,2040425a <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 10)
2040424e:	004f0693          	addi	a3,t5,4
20404252:	01e6bf33          	sltu	t5,a3,t5
20404256:	94fa                	add	s1,s1,t5
20404258:	8f36                	mv	t5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 9)
2040425a:	00749793          	slli	a5,s1,0x7
2040425e:	0007d863          	bgez	a5,2040426e <__divdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 24)
20404262:	ff0007b7          	lui	a5,0xff000
20404266:	17fd                	addi	a5,a5,-1
20404268:	8cfd                	and	s1,s1,a5
2040426a:	40080713          	addi	a4,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 26)
2040426e:	7fe00793          	li	a5,2046
20404272:	10e7c863          	blt	a5,a4,20404382 <__divdf3+0x51e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20404276:	003f5f13          	srli	t5,t5,0x3
2040427a:	01d49793          	slli	a5,s1,0x1d
2040427e:	01e7e7b3          	or	a5,a5,t5
20404282:	0034d513          	srli	a0,s1,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20404286:	0532                	slli	a0,a0,0xc
20404288:	7ff77713          	andi	a4,a4,2047
2040428c:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
2040428e:	50b2                	lw	ra,44(sp)
20404290:	5422                	lw	s0,40(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20404292:	8131                	srli	a0,a0,0xc
20404294:	8d59                	or	a0,a0,a4
20404296:	067e                	slli	a2,a2,0x1f
20404298:	00c56733          	or	a4,a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
2040429c:	5492                	lw	s1,36(sp)
2040429e:	5902                	lw	s2,32(sp)
204042a0:	49f2                	lw	s3,28(sp)
204042a2:	4a62                	lw	s4,24(sp)
204042a4:	4ad2                	lw	s5,20(sp)
204042a6:	4b42                	lw	s6,16(sp)
204042a8:	4bb2                	lw	s7,12(sp)
204042aa:	853e                	mv	a0,a5
204042ac:	85ba                	mv	a1,a4
204042ae:	6145                	addi	sp,sp,48
204042b0:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 15)
204042b2:	187d                	addi	a6,a6,-1
204042b4:	4781                	li	a5,0
204042b6:	bb8d                	j	20404028 <__divdf3+0x1c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 8)
204042b8:	864e                	mv	a2,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 8)
204042ba:	84d6                	mv	s1,s5
204042bc:	8f22                	mv	t5,s0
204042be:	87da                	mv	a5,s6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
204042c0:	4709                	li	a4,2
204042c2:	0ce78063          	beq	a5,a4,20404382 <__divdf3+0x51e>
204042c6:	470d                	li	a4,3
204042c8:	0ae78663          	beq	a5,a4,20404374 <__divdf3+0x510>
204042cc:	4705                	li	a4,1
204042ce:	f6e794e3          	bne	a5,a4,20404236 <__divdf3+0x3d2>
204042d2:	4501                	li	a0,0
204042d4:	4781                	li	a5,0
204042d6:	a885                	j	20404346 <__divdf3+0x4e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 5)
204042d8:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 5)
204042da:	b7dd                	j	204042c0 <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
204042dc:	000804b7          	lui	s1,0x80
204042e0:	4f01                	li	t5,0
204042e2:	4601                	li	a2,0
204042e4:	478d                	li	a5,3
204042e6:	bfe9                	j	204042c0 <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 59)
204042e8:	4505                	li	a0,1
204042ea:	8d19                	sub	a0,a0,a4
204042ec:	03800793          	li	a5,56
204042f0:	fea7c1e3          	blt	a5,a0,204042d2 <__divdf3+0x46e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 60)
204042f4:	47fd                	li	a5,31
204042f6:	04a7ca63          	blt	a5,a0,2040434a <__divdf3+0x4e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 62)
204042fa:	41e80813          	addi	a6,a6,1054
204042fe:	010497b3          	sll	a5,s1,a6
20404302:	00af5733          	srl	a4,t5,a0
20404306:	010f1833          	sll	a6,t5,a6
2040430a:	8fd9                	or	a5,a5,a4
2040430c:	01003833          	snez	a6,a6
20404310:	0107e7b3          	or	a5,a5,a6
20404314:	00a4d533          	srl	a0,s1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 75)
20404318:	0077f713          	andi	a4,a5,7
2040431c:	cf01                	beqz	a4,20404334 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 76)
2040431e:	00f7f713          	andi	a4,a5,15
20404322:	4691                	li	a3,4
20404324:	00d70863          	beq	a4,a3,20404334 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 78)
20404328:	00478713          	addi	a4,a5,4 # ff000004 <metal_segment_heap_target_end+0x7effeb30>
2040432c:	00f737b3          	sltu	a5,a4,a5
20404330:	953e                	add	a0,a0,a5
20404332:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 77)
20404334:	00851713          	slli	a4,a0,0x8
20404338:	04074a63          	bltz	a4,2040438c <__divdf3+0x528>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 93)
2040433c:	01d51713          	slli	a4,a0,0x1d
20404340:	838d                	srli	a5,a5,0x3
20404342:	8fd9                	or	a5,a5,a4
20404344:	810d                	srli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20404346:	4701                	li	a4,0
20404348:	bf3d                	j	20404286 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 63)
2040434a:	5785                	li	a5,-31
2040434c:	8f99                	sub	a5,a5,a4
2040434e:	02000693          	li	a3,32
20404352:	00f4d7b3          	srl	a5,s1,a5
20404356:	4701                	li	a4,0
20404358:	00d50663          	beq	a0,a3,20404364 <__divdf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 71)
2040435c:	43e80813          	addi	a6,a6,1086
20404360:	01049733          	sll	a4,s1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 74)
20404364:	01e76f33          	or	t5,a4,t5
20404368:	01e03f33          	snez	t5,t5
2040436c:	01e7e7b3          	or	a5,a5,t5
20404370:	4501                	li	a0,0
20404372:	b75d                	j	20404318 <__divdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20404374:	00080537          	lui	a0,0x80
20404378:	4781                	li	a5,0
2040437a:	7ff00713          	li	a4,2047
2040437e:	4601                	li	a2,0
20404380:	b719                	j	20404286 <__divdf3+0x422>
20404382:	4501                	li	a0,0
20404384:	4781                	li	a5,0
20404386:	7ff00713          	li	a4,2047
2040438a:	bdf5                	j	20404286 <__divdf3+0x422>
2040438c:	4501                	li	a0,0
2040438e:	4781                	li	a5,0
20404390:	4705                	li	a4,1
20404392:	bdd5                	j	20404286 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20404394:	877a                	mv	a4,t5
20404396:	8f3a                	mv	t5,a4
20404398:	bd69                	j	20404232 <__divdf3+0x3ce>

2040439a <__eqdf2>:
__eqdf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
2040439a:	0145d713          	srli	a4,a1,0x14
2040439e:	001007b7          	lui	a5,0x100
204043a2:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
204043a4:	0146d813          	srli	a6,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:36
204043a8:	832a                	mv	t1,a0
204043aa:	8eaa                	mv	t4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
204043ac:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
204043b0:	7ff00513          	li	a0,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
204043b4:	00b7f8b3          	and	a7,a5,a1
204043b8:	8f32                	mv	t5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
204043ba:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
204043bc:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
204043be:	7ff87813          	andi	a6,a6,2047
204043c2:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
204043c4:	00a71a63          	bne	a4,a0,204043d8 <__eqdf2+0x3e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 18)
204043c8:	0068ee33          	or	t3,a7,t1
204043cc:	4505                	li	a0,1
204043ce:	000e1463          	bnez	t3,204043d6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
204043d2:	00e80563          	beq	a6,a4,204043dc <__eqdf2+0x42>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:49
204043d6:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 21)
204043d8:	00a81563          	bne	a6,a0,204043e2 <__eqdf2+0x48>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 22)
204043dc:	8e5d                	or	a2,a2,a5
204043de:	4505                	li	a0,1
204043e0:	fa7d                	bnez	a2,204043d6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 73)
204043e2:	4505                	li	a0,1
204043e4:	ff0719e3          	bne	a4,a6,204043d6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 75)
204043e8:	fef897e3          	bne	a7,a5,204043d6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 77)
204043ec:	ffee95e3          	bne	t4,t5,204043d6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 79)
204043f0:	00d58863          	beq	a1,a3,20404400 <__eqdf2+0x66>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 80)
204043f4:	f36d                	bnez	a4,204043d6 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 83)
204043f6:	0068e533          	or	a0,a7,t1
204043fa:	00a03533          	snez	a0,a0
204043fe:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20404400:	4501                	li	a0,0
20404402:	8082                	ret

20404404 <__gedf2>:
__gedf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20404404:	0145d813          	srli	a6,a1,0x14
20404408:	001007b7          	lui	a5,0x100
2040440c:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
2040440e:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20404412:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20404416:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
2040441a:	00b7f8b3          	and	a7,a5,a1
2040441e:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
20404420:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20404422:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
20404424:	8e32                	mv	t3,a2
20404426:	7ff77713          	andi	a4,a4,2047
2040442a:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
2040442c:	01d81863          	bne	a6,t4,2040443c <__gedf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 18)
20404430:	00a8eeb3          	or	t4,a7,a0
20404434:	060e8563          	beqz	t4,2040449e <__gedf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20404438:	55f9                	li	a1,-2
2040443a:	a80d                	j	2040446c <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 21)
2040443c:	01d71663          	bne	a4,t4,20404448 <__gedf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 22)
20404440:	00c7eeb3          	or	t4,a5,a2
20404444:	fe0e9ae3          	bnez	t4,20404438 <__gedf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 57)
20404448:	04081d63          	bnez	a6,204044a2 <__gedf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 58)
2040444c:	00a8e533          	or	a0,a7,a0
20404450:	00153513          	seqz	a0,a0
20404454:	e319                	bnez	a4,2040445a <__gedf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 64)
20404456:	8e5d                	or	a2,a2,a5
20404458:	ce15                	beqz	a2,20404494 <__gedf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
2040445a:	e511                	bnez	a0,20404466 <__gedf2+0x62>
2040445c:	00d58a63          	beq	a1,a3,20404470 <__gedf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 108)
20404460:	c985                	beqz	a1,20404490 <__gedf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20404462:	55fd                	li	a1,-1
20404464:	a021                	j	2040446c <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 74)
20404466:	55fd                	li	a1,-1
20404468:	c291                	beqz	a3,2040446c <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
2040446a:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:49
2040446c:	852e                	mv	a0,a1
2040446e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 87)
20404470:	ff0748e3          	blt	a4,a6,20404460 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 93)
20404474:	00e85463          	bge	a6,a4,2040447c <__gedf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 118)
20404478:	f9f5                	bnez	a1,2040446c <__gedf2+0x68>
2040447a:	b7e5                	j	20404462 <__gedf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 99)
2040447c:	ff17e2e3          	bltu	a5,a7,20404460 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 105)
20404480:	00f89c63          	bne	a7,a5,20404498 <__gedf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 106)
20404484:	fc6e6ee3          	bltu	t3,t1,20404460 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 116)
20404488:	ffc368e3          	bltu	t1,t3,20404478 <__gedf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
2040448c:	4581                	li	a1,0
2040448e:	bff9                	j	2040446c <__gedf2+0x68>
20404490:	4585                	li	a1,1
20404492:	bfe9                	j	2040446c <__gedf2+0x68>
20404494:	fd65                	bnez	a0,2040448c <__gedf2+0x88>
20404496:	b7e9                	j	20404460 <__gedf2+0x5c>
20404498:	fef8e0e3          	bltu	a7,a5,20404478 <__gedf2+0x74>
2040449c:	bfc5                	j	2040448c <__gedf2+0x88>
2040449e:	fb0701e3          	beq	a4,a6,20404440 <__gedf2+0x3c>
204044a2:	ff4d                	bnez	a4,2040445c <__gedf2+0x58>
204044a4:	4501                	li	a0,0
204044a6:	bf45                	j	20404456 <__gedf2+0x52>

204044a8 <__ledf2>:
__ledf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
204044a8:	0145d813          	srli	a6,a1,0x14
204044ac:	001007b7          	lui	a5,0x100
204044b0:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
204044b2:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
204044b6:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
204044ba:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
204044be:	00b7f8b3          	and	a7,a5,a1
204044c2:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
204044c4:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
204044c6:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
204044c8:	8e32                	mv	t3,a2
204044ca:	7ff77713          	andi	a4,a4,2047
204044ce:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
204044d0:	01d81863          	bne	a6,t4,204044e0 <__ledf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 18)
204044d4:	00a8eeb3          	or	t4,a7,a0
204044d8:	060e8563          	beqz	t4,20404542 <__ledf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
204044dc:	4589                	li	a1,2
204044de:	a80d                	j	20404510 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 21)
204044e0:	01d71663          	bne	a4,t4,204044ec <__ledf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 22)
204044e4:	00c7eeb3          	or	t4,a5,a2
204044e8:	fe0e9ae3          	bnez	t4,204044dc <__ledf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 57)
204044ec:	04081d63          	bnez	a6,20404546 <__ledf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 58)
204044f0:	00a8e533          	or	a0,a7,a0
204044f4:	00153513          	seqz	a0,a0
204044f8:	e319                	bnez	a4,204044fe <__ledf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 64)
204044fa:	8e5d                	or	a2,a2,a5
204044fc:	ce15                	beqz	a2,20404538 <__ledf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
204044fe:	e511                	bnez	a0,2040450a <__ledf2+0x62>
20404500:	00d58a63          	beq	a1,a3,20404514 <__ledf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 108)
20404504:	c985                	beqz	a1,20404534 <__ledf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20404506:	55fd                	li	a1,-1
20404508:	a021                	j	20404510 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 74)
2040450a:	55fd                	li	a1,-1
2040450c:	c291                	beqz	a3,20404510 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2040450e:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:49
20404510:	852e                	mv	a0,a1
20404512:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 87)
20404514:	ff0748e3          	blt	a4,a6,20404504 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 93)
20404518:	00e85463          	bge	a6,a4,20404520 <__ledf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 118)
2040451c:	f9f5                	bnez	a1,20404510 <__ledf2+0x68>
2040451e:	b7e5                	j	20404506 <__ledf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 99)
20404520:	ff17e2e3          	bltu	a5,a7,20404504 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 105)
20404524:	00f89c63          	bne	a7,a5,2040453c <__ledf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 106)
20404528:	fc6e6ee3          	bltu	t3,t1,20404504 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 116)
2040452c:	ffc368e3          	bltu	t1,t3,2040451c <__ledf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20404530:	4581                	li	a1,0
20404532:	bff9                	j	20404510 <__ledf2+0x68>
20404534:	4585                	li	a1,1
20404536:	bfe9                	j	20404510 <__ledf2+0x68>
20404538:	fd65                	bnez	a0,20404530 <__ledf2+0x88>
2040453a:	b7e9                	j	20404504 <__ledf2+0x5c>
2040453c:	fef8e0e3          	bltu	a7,a5,2040451c <__ledf2+0x74>
20404540:	bfc5                	j	20404530 <__ledf2+0x88>
20404542:	fb0701e3          	beq	a4,a6,204044e4 <__ledf2+0x3c>
20404546:	ff4d                	bnez	a4,20404500 <__ledf2+0x58>
20404548:	4501                	li	a0,0
2040454a:	bf45                	j	204044fa <__ledf2+0x52>

2040454c <__muldf3>:
__muldf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
2040454c:	7179                	addi	sp,sp,-48
2040454e:	ce4e                	sw	s3,28(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20404550:	0145d993          	srli	s3,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20404554:	d422                	sw	s0,40(sp)
20404556:	d226                	sw	s1,36(sp)
20404558:	cc52                	sw	s4,24(sp)
2040455a:	ca56                	sw	s5,20(sp)
2040455c:	c85a                	sw	s6,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
2040455e:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20404562:	d606                	sw	ra,44(sp)
20404564:	d04a                	sw	s2,32(sp)
20404566:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20404568:	7ff9f993          	andi	s3,s3,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
2040456c:	842a                	mv	s0,a0
2040456e:	8b32                	mv	s6,a2
20404570:	8ab6                	mv	s5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20404572:	80b1                	srli	s1,s1,0xc
20404574:	01f5da13          	srli	s4,a1,0x1f
20404578:	08098163          	beqz	s3,204045fa <__muldf3+0xae>
2040457c:	7ff00793          	li	a5,2047
20404580:	0cf98563          	beq	s3,a5,2040464a <__muldf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 1)
20404584:	01d55793          	srli	a5,a0,0x1d
20404588:	048e                	slli	s1,s1,0x3
2040458a:	8cdd                	or	s1,s1,a5
2040458c:	008007b7          	lui	a5,0x800
20404590:	8cdd                	or	s1,s1,a5
20404592:	00351913          	slli	s2,a0,0x3
20404596:	c0198993          	addi	s3,s3,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
2040459a:	4b81                	li	s7,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
2040459c:	014ad513          	srli	a0,s5,0x14
204045a0:	00ca9413          	slli	s0,s5,0xc
204045a4:	7ff57513          	andi	a0,a0,2047
204045a8:	8031                	srli	s0,s0,0xc
204045aa:	01fada93          	srli	s5,s5,0x1f
204045ae:	c161                	beqz	a0,2040466e <__muldf3+0x122>
204045b0:	7ff00793          	li	a5,2047
204045b4:	10f50563          	beq	a0,a5,204046be <__muldf3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 1)
204045b8:	01db5793          	srli	a5,s6,0x1d
204045bc:	040e                	slli	s0,s0,0x3
204045be:	8c5d                	or	s0,s0,a5
204045c0:	008007b7          	lui	a5,0x800
204045c4:	8c5d                	or	s0,s0,a5
204045c6:	c0150513          	addi	a0,a0,-1023 # 7fc01 <__heap_size+0x7f401>
204045ca:	003b1793          	slli	a5,s6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
204045ce:	4701                	li	a4,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
204045d0:	002b9693          	slli	a3,s7,0x2
204045d4:	8ed9                	or	a3,a3,a4
204045d6:	954e                	add	a0,a0,s3
204045d8:	16fd                	addi	a3,a3,-1
204045da:	45b9                	li	a1,14
204045dc:	015a4633          	xor	a2,s4,s5
204045e0:	00150813          	addi	a6,a0,1
204045e4:	0ed5ee63          	bltu	a1,a3,204046e0 <__muldf3+0x194>
204045e8:	00005597          	auipc	a1,0x5
204045ec:	92458593          	addi	a1,a1,-1756 # 20408f0c <pow10.2193+0x8c>
204045f0:	068a                	slli	a3,a3,0x2
204045f2:	96ae                	add	a3,a3,a1
204045f4:	4294                	lw	a3,0(a3)
204045f6:	96ae                	add	a3,a3,a1
204045f8:	8682                	jr	a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 2)
204045fa:	00a4e933          	or	s2,s1,a0
204045fe:	04090f63          	beqz	s2,2040465c <__muldf3+0x110>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 12)
20404602:	c88d                	beqz	s1,20404634 <__muldf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 16)
20404604:	8526                	mv	a0,s1
20404606:	2f3000ef          	jal	ra,204050f8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 27)
2040460a:	ff550713          	addi	a4,a0,-11
2040460e:	47f1                	li	a5,28
20404610:	02e7c763          	blt	a5,a4,2040463e <__muldf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 28)
20404614:	47f5                	li	a5,29
20404616:	ff850913          	addi	s2,a0,-8
2040461a:	8f99                	sub	a5,a5,a4
2040461c:	012494b3          	sll	s1,s1,s2
20404620:	00f457b3          	srl	a5,s0,a5
20404624:	8cdd                	or	s1,s1,a5
20404626:	01241933          	sll	s2,s0,s2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
2040462a:	c0d00993          	li	s3,-1011
2040462e:	40a989b3          	sub	s3,s3,a0
20404632:	b7a5                	j	2040459a <__muldf3+0x4e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 20)
20404634:	2c5000ef          	jal	ra,204050f8 <__clzsi2>
20404638:	02050513          	addi	a0,a0,32
2040463c:	b7f9                	j	2040460a <__muldf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 29)
2040463e:	fd850493          	addi	s1,a0,-40
20404642:	009414b3          	sll	s1,s0,s1
20404646:	4901                	li	s2,0
20404648:	b7cd                	j	2040462a <__muldf3+0xde>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 3)
2040464a:	00a4e933          	or	s2,s1,a0
2040464e:	00090b63          	beqz	s2,20404664 <__muldf3+0x118>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20404652:	892a                	mv	s2,a0
20404654:	7ff00993          	li	s3,2047
20404658:	4b8d                	li	s7,3
2040465a:	b789                	j	2040459c <__muldf3+0x50>
2040465c:	4481                	li	s1,0
2040465e:	4981                	li	s3,0
20404660:	4b85                	li	s7,1
20404662:	bf2d                	j	2040459c <__muldf3+0x50>
20404664:	4481                	li	s1,0
20404666:	7ff00993          	li	s3,2047
2040466a:	4b89                	li	s7,2
2040466c:	bf05                	j	2040459c <__muldf3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 2)
2040466e:	016467b3          	or	a5,s0,s6
20404672:	cfb1                	beqz	a5,204046ce <__muldf3+0x182>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 12)
20404674:	c80d                	beqz	s0,204046a6 <__muldf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 16)
20404676:	8522                	mv	a0,s0
20404678:	281000ef          	jal	ra,204050f8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 27)
2040467c:	ff550693          	addi	a3,a0,-11
20404680:	47f1                	li	a5,28
20404682:	02d7c863          	blt	a5,a3,204046b2 <__muldf3+0x166>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 28)
20404686:	4775                	li	a4,29
20404688:	ff850793          	addi	a5,a0,-8
2040468c:	8f15                	sub	a4,a4,a3
2040468e:	00f41433          	sll	s0,s0,a5
20404692:	00eb5733          	srl	a4,s6,a4
20404696:	8c59                	or	s0,s0,a4
20404698:	00fb17b3          	sll	a5,s6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
2040469c:	c0d00713          	li	a4,-1011
204046a0:	40a70533          	sub	a0,a4,a0
204046a4:	b72d                	j	204045ce <__muldf3+0x82>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 20)
204046a6:	855a                	mv	a0,s6
204046a8:	251000ef          	jal	ra,204050f8 <__clzsi2>
204046ac:	02050513          	addi	a0,a0,32
204046b0:	b7f1                	j	2040467c <__muldf3+0x130>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 29)
204046b2:	fd850413          	addi	s0,a0,-40
204046b6:	008b1433          	sll	s0,s6,s0
204046ba:	4781                	li	a5,0
204046bc:	b7c5                	j	2040469c <__muldf3+0x150>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 3)
204046be:	016467b3          	or	a5,s0,s6
204046c2:	cb91                	beqz	a5,204046d6 <__muldf3+0x18a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
204046c4:	87da                	mv	a5,s6
204046c6:	7ff00513          	li	a0,2047
204046ca:	470d                	li	a4,3
204046cc:	b711                	j	204045d0 <__muldf3+0x84>
204046ce:	4401                	li	s0,0
204046d0:	4501                	li	a0,0
204046d2:	4705                	li	a4,1
204046d4:	bdf5                	j	204045d0 <__muldf3+0x84>
204046d6:	4401                	li	s0,0
204046d8:	7ff00513          	li	a0,2047
204046dc:	4709                	li	a4,2
204046de:	bdcd                	j	204045d0 <__muldf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 2)
204046e0:	6f41                	lui	t5,0x10
204046e2:	ffff0e93          	addi	t4,t5,-1 # ffff <__heap_size+0xf7ff>
204046e6:	01095713          	srli	a4,s2,0x10
204046ea:	0107d893          	srli	a7,a5,0x10
204046ee:	01d97933          	and	s2,s2,t4
204046f2:	01d7f7b3          	and	a5,a5,t4
204046f6:	032885b3          	mul	a1,a7,s2
204046fa:	032786b3          	mul	a3,a5,s2
204046fe:	02f70fb3          	mul	t6,a4,a5
20404702:	01f58333          	add	t1,a1,t6
20404706:	0106d593          	srli	a1,a3,0x10
2040470a:	959a                	add	a1,a1,t1
2040470c:	03170e33          	mul	t3,a4,a7
20404710:	01f5f363          	bgeu	a1,t6,20404716 <__muldf3+0x1ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 9)
20404714:	9e7a                	add	t3,t3,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 11)
20404716:	0105d393          	srli	t2,a1,0x10
2040471a:	01d5f5b3          	and	a1,a1,t4
2040471e:	01d6f6b3          	and	a3,a3,t4
20404722:	01045f13          	srli	t5,s0,0x10
20404726:	01d472b3          	and	t0,s0,t4
2040472a:	05c2                	slli	a1,a1,0x10
2040472c:	95b6                	add	a1,a1,a3
2040472e:	02570eb3          	mul	t4,a4,t0
20404732:	032286b3          	mul	a3,t0,s2
20404736:	032f0933          	mul	s2,t5,s2
2040473a:	01d90333          	add	t1,s2,t4
2040473e:	0106d913          	srli	s2,a3,0x10
20404742:	991a                	add	s2,s2,t1
20404744:	03e70733          	mul	a4,a4,t5
20404748:	01d97463          	bgeu	s2,t4,20404750 <__muldf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 12)
2040474c:	6341                	lui	t1,0x10
2040474e:	971a                	add	a4,a4,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 14)
20404750:	01095e93          	srli	t4,s2,0x10
20404754:	69c1                	lui	s3,0x10
20404756:	9eba                	add	t4,t4,a4
20404758:	fff98713          	addi	a4,s3,-1 # ffff <__heap_size+0xf7ff>
2040475c:	00e97933          	and	s2,s2,a4
20404760:	8ef9                	and	a3,a3,a4
20404762:	0104d413          	srli	s0,s1,0x10
20404766:	0942                	slli	s2,s2,0x10
20404768:	8cf9                	and	s1,s1,a4
2040476a:	9936                	add	s2,s2,a3
2040476c:	02978733          	mul	a4,a5,s1
20404770:	93ca                	add	t2,t2,s2
20404772:	02f40333          	mul	t1,s0,a5
20404776:	029886b3          	mul	a3,a7,s1
2040477a:	028887b3          	mul	a5,a7,s0
2040477e:	006688b3          	add	a7,a3,t1
20404782:	01075693          	srli	a3,a4,0x10
20404786:	96c6                	add	a3,a3,a7
20404788:	0066f363          	bgeu	a3,t1,2040478e <__muldf3+0x242>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 15)
2040478c:	97ce                	add	a5,a5,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 17)
2040478e:	0106d893          	srli	a7,a3,0x10
20404792:	69c1                	lui	s3,0x10
20404794:	00f88fb3          	add	t6,a7,a5
20404798:	fff98793          	addi	a5,s3,-1 # ffff <__heap_size+0xf7ff>
2040479c:	8efd                	and	a3,a3,a5
2040479e:	8f7d                	and	a4,a4,a5
204047a0:	029288b3          	mul	a7,t0,s1
204047a4:	06c2                	slli	a3,a3,0x10
204047a6:	96ba                	add	a3,a3,a4
204047a8:	025407b3          	mul	a5,s0,t0
204047ac:	029f04b3          	mul	s1,t5,s1
204047b0:	028f0333          	mul	t1,t5,s0
204047b4:	94be                	add	s1,s1,a5
204047b6:	0108d413          	srli	s0,a7,0x10
204047ba:	94a2                	add	s1,s1,s0
204047bc:	00f4f363          	bgeu	s1,a5,204047c2 <__muldf3+0x276>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 18)
204047c0:	934e                	add	t1,t1,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 20)
204047c2:	67c1                	lui	a5,0x10
204047c4:	17fd                	addi	a5,a5,-1
204047c6:	00f4f733          	and	a4,s1,a5
204047ca:	00f8f8b3          	and	a7,a7,a5
204047ce:	0742                	slli	a4,a4,0x10
204047d0:	9e1e                	add	t3,t3,t2
204047d2:	9746                	add	a4,a4,a7
204047d4:	012e3933          	sltu	s2,t3,s2
204047d8:	9776                	add	a4,a4,t4
204047da:	01270433          	add	s0,a4,s2
204047de:	9e36                	add	t3,t3,a3
204047e0:	00de36b3          	sltu	a3,t3,a3
204047e4:	01f408b3          	add	a7,s0,t6
204047e8:	00d88f33          	add	t5,a7,a3
204047ec:	01d73733          	sltu	a4,a4,t4
204047f0:	01243433          	sltu	s0,s0,s2
204047f4:	8c59                	or	s0,s0,a4
204047f6:	80c1                	srli	s1,s1,0x10
204047f8:	01f8b8b3          	sltu	a7,a7,t6
204047fc:	00df36b3          	sltu	a3,t5,a3
20404800:	9426                	add	s0,s0,s1
20404802:	00d8e6b3          	or	a3,a7,a3
20404806:	9436                	add	s0,s0,a3
20404808:	941a                	add	s0,s0,t1
2040480a:	017f5793          	srli	a5,t5,0x17
2040480e:	0426                	slli	s0,s0,0x9
20404810:	8c5d                	or	s0,s0,a5
20404812:	009e1793          	slli	a5,t3,0x9
20404816:	8fcd                	or	a5,a5,a1
20404818:	00f037b3          	snez	a5,a5
2040481c:	017e5e13          	srli	t3,t3,0x17
20404820:	009f1713          	slli	a4,t5,0x9
20404824:	01c7e7b3          	or	a5,a5,t3
20404828:	8fd9                	or	a5,a5,a4
2040482a:	00741713          	slli	a4,s0,0x7
2040482e:	0a075863          	bgez	a4,204048de <__muldf3+0x392>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 38)
20404832:	0017d713          	srli	a4,a5,0x1
20404836:	8b85                	andi	a5,a5,1
20404838:	8fd9                	or	a5,a5,a4
2040483a:	01f41713          	slli	a4,s0,0x1f
2040483e:	8fd9                	or	a5,a5,a4
20404840:	8005                	srli	s0,s0,0x1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 2)
20404842:	3ff80693          	addi	a3,a6,1023
20404846:	08d05e63          	blez	a3,204048e2 <__muldf3+0x396>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 6)
2040484a:	0077f713          	andi	a4,a5,7
2040484e:	cf01                	beqz	a4,20404866 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 8)
20404850:	00f7f713          	andi	a4,a5,15
20404854:	4591                	li	a1,4
20404856:	00b70863          	beq	a4,a1,20404866 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 10)
2040485a:	00478713          	addi	a4,a5,4 # 10004 <__heap_size+0xf804>
2040485e:	00f737b3          	sltu	a5,a4,a5
20404862:	943e                	add	s0,s0,a5
20404864:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 9)
20404866:	00741713          	slli	a4,s0,0x7
2040486a:	00075863          	bgez	a4,2040487a <__muldf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 24)
2040486e:	ff000737          	lui	a4,0xff000
20404872:	177d                	addi	a4,a4,-1
20404874:	8c79                	and	s0,s0,a4
20404876:	40080693          	addi	a3,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 26)
2040487a:	7fe00713          	li	a4,2046
2040487e:	0ed74c63          	blt	a4,a3,20404976 <__muldf3+0x42a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404882:	0037d713          	srli	a4,a5,0x3
20404886:	01d41793          	slli	a5,s0,0x1d
2040488a:	8fd9                	or	a5,a5,a4
2040488c:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 120)
2040488e:	0432                	slli	s0,s0,0xc
20404890:	7ff6f713          	andi	a4,a3,2047
20404894:	0752                	slli	a4,a4,0x14
20404896:	8031                	srli	s0,s0,0xc
20404898:	8c59                	or	s0,s0,a4
2040489a:	067e                	slli	a2,a2,0x1f
2040489c:	00c46733          	or	a4,s0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:51 (discriminator 120)
204048a0:	50b2                	lw	ra,44(sp)
204048a2:	5422                	lw	s0,40(sp)
204048a4:	5492                	lw	s1,36(sp)
204048a6:	5902                	lw	s2,32(sp)
204048a8:	49f2                	lw	s3,28(sp)
204048aa:	4a62                	lw	s4,24(sp)
204048ac:	4ad2                	lw	s5,20(sp)
204048ae:	4b42                	lw	s6,16(sp)
204048b0:	4bb2                	lw	s7,12(sp)
204048b2:	853e                	mv	a0,a5
204048b4:	85ba                	mv	a1,a4
204048b6:	6145                	addi	sp,sp,48
204048b8:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 7)
204048ba:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 7)
204048bc:	8426                	mv	s0,s1
204048be:	87ca                	mv	a5,s2
204048c0:	875e                	mv	a4,s7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
204048c2:	4689                	li	a3,2
204048c4:	0ad70963          	beq	a4,a3,20404976 <__muldf3+0x42a>
204048c8:	468d                	li	a3,3
204048ca:	08d70f63          	beq	a4,a3,20404968 <__muldf3+0x41c>
204048ce:	4685                	li	a3,1
204048d0:	f6d719e3          	bne	a4,a3,20404842 <__muldf3+0x2f6>
204048d4:	4401                	li	s0,0
204048d6:	4781                	li	a5,0
204048d8:	a09d                	j	2040493e <__muldf3+0x3f2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 4)
204048da:	8656                	mv	a2,s5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 4)
204048dc:	b7dd                	j	204048c2 <__muldf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
204048de:	882a                	mv	a6,a0
204048e0:	b78d                	j	20404842 <__muldf3+0x2f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 59)
204048e2:	4585                	li	a1,1
204048e4:	8d95                	sub	a1,a1,a3
204048e6:	03800713          	li	a4,56
204048ea:	feb745e3          	blt	a4,a1,204048d4 <__muldf3+0x388>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 60)
204048ee:	477d                	li	a4,31
204048f0:	04b74963          	blt	a4,a1,20404942 <__muldf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 62)
204048f4:	41e80813          	addi	a6,a6,1054
204048f8:	01041733          	sll	a4,s0,a6
204048fc:	00b7d6b3          	srl	a3,a5,a1
20404900:	010797b3          	sll	a5,a5,a6
20404904:	8f55                	or	a4,a4,a3
20404906:	00f037b3          	snez	a5,a5
2040490a:	8fd9                	or	a5,a5,a4
2040490c:	00b45433          	srl	s0,s0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 75)
20404910:	0077f713          	andi	a4,a5,7
20404914:	cf01                	beqz	a4,2040492c <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 76)
20404916:	00f7f713          	andi	a4,a5,15
2040491a:	4691                	li	a3,4
2040491c:	00d70863          	beq	a4,a3,2040492c <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 78)
20404920:	00478713          	addi	a4,a5,4
20404924:	00f737b3          	sltu	a5,a4,a5
20404928:	943e                	add	s0,s0,a5
2040492a:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 77)
2040492c:	00841713          	slli	a4,s0,0x8
20404930:	04074863          	bltz	a4,20404980 <__muldf3+0x434>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 93)
20404934:	01d41713          	slli	a4,s0,0x1d
20404938:	838d                	srli	a5,a5,0x3
2040493a:	8fd9                	or	a5,a5,a4
2040493c:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
2040493e:	4681                	li	a3,0
20404940:	b7b9                	j	2040488e <__muldf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 63)
20404942:	5705                	li	a4,-31
20404944:	8f15                	sub	a4,a4,a3
20404946:	02000513          	li	a0,32
2040494a:	00e45733          	srl	a4,s0,a4
2040494e:	4681                	li	a3,0
20404950:	00a58663          	beq	a1,a0,2040495c <__muldf3+0x410>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 71)
20404954:	43e80813          	addi	a6,a6,1086
20404958:	010416b3          	sll	a3,s0,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 74)
2040495c:	8fd5                	or	a5,a5,a3
2040495e:	00f037b3          	snez	a5,a5
20404962:	8fd9                	or	a5,a5,a4
20404964:	4401                	li	s0,0
20404966:	b76d                	j	20404910 <__muldf3+0x3c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404968:	00080437          	lui	s0,0x80
2040496c:	4781                	li	a5,0
2040496e:	7ff00693          	li	a3,2047
20404972:	4601                	li	a2,0
20404974:	bf29                	j	2040488e <__muldf3+0x342>
20404976:	4401                	li	s0,0
20404978:	4781                	li	a5,0
2040497a:	7ff00693          	li	a3,2047
2040497e:	bf01                	j	2040488e <__muldf3+0x342>
20404980:	4401                	li	s0,0
20404982:	4781                	li	a5,0
20404984:	4685                	li	a3,1
20404986:	b721                	j	2040488e <__muldf3+0x342>

20404988 <__subdf3>:
__subdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404988:	00100837          	lui	a6,0x100
2040498c:	187d                	addi	a6,a6,-1
2040498e:	00b878b3          	and	a7,a6,a1
20404992:	088e                	slli	a7,a7,0x3
20404994:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20404998:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
2040499a:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
2040499e:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
204049a2:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204049a6:	0146d893          	srli	a7,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
204049aa:	ca26                	sw	s1,20(sp)
204049ac:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
204049ae:	7ff77493          	andi	s1,a4,2047
204049b2:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204049b6:	01d65713          	srli	a4,a2,0x1d
204049ba:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
204049bc:	ce06                	sw	ra,28(sp)
204049be:	cc22                	sw	s0,24(sp)
204049c0:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204049c2:	7ff8f893          	andi	a7,a7,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204049c6:	7ff00593          	li	a1,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
204049ca:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204049cc:	82fd                	srli	a3,a3,0x1f
204049ce:	01076733          	or	a4,a4,a6
204049d2:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204049d4:	00b89563          	bne	a7,a1,204049de <__subdf3+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 2)
204049d8:	00c765b3          	or	a1,a4,a2
204049dc:	e199                	bnez	a1,204049e2 <__subdf3+0x5a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 3)
204049de:	0016c693          	xori	a3,a3,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 11)
204049e2:	41148833          	sub	a6,s1,a7
204049e6:	23269363          	bne	a3,s2,20404c0c <__subdf3+0x284>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 12)
204049ea:	0f005c63          	blez	a6,20404ae2 <__subdf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 14)
204049ee:	04089563          	bnez	a7,20404a38 <__subdf3+0xb0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 16)
204049f2:	00c766b3          	or	a3,a4,a2
204049f6:	c28d                	beqz	a3,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 19)
204049f8:	fff48813          	addi	a6,s1,-1 # 7ffff <__heap_size+0x7f7ff>
204049fc:	00081a63          	bnez	a6,20404a10 <__subdf3+0x88>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 28)
20404a00:	962a                	add	a2,a2,a0
20404a02:	00a63533          	sltu	a0,a2,a0
20404a06:	97ba                	add	a5,a5,a4
20404a08:	97aa                	add	a5,a5,a0
20404a0a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 85)
20404a0c:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
20404a0e:	a895                	j	20404a82 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 29)
20404a10:	7ff00693          	li	a3,2047
20404a14:	02d49963          	bne	s1,a3,20404a46 <__subdf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 422)
20404a18:	00757713          	andi	a4,a0,7
20404a1c:	4e070063          	beqz	a4,20404efc <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 37)
20404a20:	00f57713          	andi	a4,a0,15
20404a24:	4691                	li	a3,4
20404a26:	4cd70b63          	beq	a4,a3,20404efc <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 44)
20404a2a:	00450693          	addi	a3,a0,4
20404a2e:	00a6b533          	sltu	a0,a3,a0
20404a32:	97aa                	add	a5,a5,a0
20404a34:	8536                	mv	a0,a3
20404a36:	a1d9                	j	20404efc <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 17)
20404a38:	7ff00693          	li	a3,2047
20404a3c:	fcd48ee3          	beq	s1,a3,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 43)
20404a40:	008006b7          	lui	a3,0x800
20404a44:	8f55                	or	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 52)
20404a46:	03800693          	li	a3,56
20404a4a:	0906c863          	blt	a3,a6,20404ada <__subdf3+0x152>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 53)
20404a4e:	46fd                	li	a3,31
20404a50:	0706c063          	blt	a3,a6,20404ab0 <__subdf3+0x128>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 55)
20404a54:	02000593          	li	a1,32
20404a58:	410585b3          	sub	a1,a1,a6
20404a5c:	00b716b3          	sll	a3,a4,a1
20404a60:	010658b3          	srl	a7,a2,a6
20404a64:	00b61633          	sll	a2,a2,a1
20404a68:	0116e6b3          	or	a3,a3,a7
20404a6c:	00c03633          	snez	a2,a2
20404a70:	8e55                	or	a2,a2,a3
20404a72:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 69)
20404a76:	962a                	add	a2,a2,a0
20404a78:	973e                	add	a4,a4,a5
20404a7a:	00a637b3          	sltu	a5,a2,a0
20404a7e:	97ba                	add	a5,a5,a4
20404a80:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 127)
20404a82:	00879713          	slli	a4,a5,0x8
20404a86:	f80759e3          	bgez	a4,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 187)
20404a8a:	0485                	addi	s1,s1,1
20404a8c:	7ff00713          	li	a4,2047
20404a90:	46e48463          	beq	s1,a4,20404ef8 <__subdf3+0x570>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404a94:	ff8006b7          	lui	a3,0xff800
20404a98:	16fd                	addi	a3,a3,-1
20404a9a:	8efd                	and	a3,a3,a5
20404a9c:	00155593          	srli	a1,a0,0x1
20404aa0:	8905                	andi	a0,a0,1
20404aa2:	01f69793          	slli	a5,a3,0x1f
20404aa6:	8d4d                	or	a0,a0,a1
20404aa8:	8d5d                	or	a0,a0,a5
20404aaa:	0016d793          	srli	a5,a3,0x1
20404aae:	b7ad                	j	20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 56)
20404ab0:	fe080693          	addi	a3,a6,-32 # fffe0 <__heap_size+0xff7e0>
20404ab4:	02000893          	li	a7,32
20404ab8:	00d756b3          	srl	a3,a4,a3
20404abc:	4581                	li	a1,0
20404abe:	01180863          	beq	a6,a7,20404ace <__subdf3+0x146>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 63)
20404ac2:	04000593          	li	a1,64
20404ac6:	41058833          	sub	a6,a1,a6
20404aca:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 66)
20404ace:	8e4d                	or	a2,a2,a1
20404ad0:	00c03633          	snez	a2,a2
20404ad4:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 54)
20404ad6:	4701                	li	a4,0
20404ad8:	bf79                	j	20404a76 <__subdf3+0xee>
20404ada:	8e59                	or	a2,a2,a4
20404adc:	00c03633          	snez	a2,a2
20404ae0:	bfdd                	j	20404ad6 <__subdf3+0x14e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 15)
20404ae2:	0a080b63          	beqz	a6,20404b98 <__subdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 71)
20404ae6:	409885b3          	sub	a1,a7,s1
20404aea:	e48d                	bnez	s1,20404b14 <__subdf3+0x18c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 73)
20404aec:	00a7e6b3          	or	a3,a5,a0
20404af0:	3e068b63          	beqz	a3,20404ee6 <__subdf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 76)
20404af4:	fff58693          	addi	a3,a1,-1
20404af8:	e699                	bnez	a3,20404b06 <__subdf3+0x17e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
20404afa:	9532                	add	a0,a0,a2
20404afc:	97ba                	add	a5,a5,a4
20404afe:	00c53633          	sltu	a2,a0,a2
20404b02:	97b2                	add	a5,a5,a2
20404b04:	b721                	j	20404a0c <__subdf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 86)
20404b06:	7ff00813          	li	a6,2047
20404b0a:	01059d63          	bne	a1,a6,20404b24 <__subdf3+0x19c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404b0e:	87ba                	mv	a5,a4
20404b10:	8532                	mv	a0,a2
20404b12:	ace5                	j	20404e0a <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 74)
20404b14:	7ff00693          	li	a3,2047
20404b18:	fed88be3          	beq	a7,a3,20404b0e <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 100)
20404b1c:	008006b7          	lui	a3,0x800
20404b20:	8fd5                	or	a5,a5,a3
20404b22:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 109)
20404b24:	03800593          	li	a1,56
20404b28:	06d5c463          	blt	a1,a3,20404b90 <__subdf3+0x208>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 110)
20404b2c:	45fd                	li	a1,31
20404b2e:	02d5cb63          	blt	a1,a3,20404b64 <__subdf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 112)
20404b32:	02000813          	li	a6,32
20404b36:	40d80833          	sub	a6,a6,a3
20404b3a:	00d55333          	srl	t1,a0,a3
20404b3e:	010795b3          	sll	a1,a5,a6
20404b42:	01051533          	sll	a0,a0,a6
20404b46:	0065e5b3          	or	a1,a1,t1
20404b4a:	00a03533          	snez	a0,a0
20404b4e:	8d4d                	or	a0,a0,a1
20404b50:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 126)
20404b54:	9532                	add	a0,a0,a2
20404b56:	00e687b3          	add	a5,a3,a4
20404b5a:	00c53633          	sltu	a2,a0,a2
20404b5e:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 126)
20404b60:	84c6                	mv	s1,a7
20404b62:	b705                	j	20404a82 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 113)
20404b64:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20404b68:	02000313          	li	t1,32
20404b6c:	00b7d5b3          	srl	a1,a5,a1
20404b70:	4801                	li	a6,0
20404b72:	00668863          	beq	a3,t1,20404b82 <__subdf3+0x1fa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 120)
20404b76:	04000813          	li	a6,64
20404b7a:	40d806b3          	sub	a3,a6,a3
20404b7e:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 123)
20404b82:	00a86533          	or	a0,a6,a0
20404b86:	00a03533          	snez	a0,a0
20404b8a:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 111)
20404b8c:	4681                	li	a3,0
20404b8e:	b7d9                	j	20404b54 <__subdf3+0x1cc>
20404b90:	8d5d                	or	a0,a0,a5
20404b92:	00a03533          	snez	a0,a0
20404b96:	bfdd                	j	20404b8c <__subdf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 72)
20404b98:	00148693          	addi	a3,s1,1
20404b9c:	7fe6f593          	andi	a1,a3,2046
20404ba0:	e5a9                	bnez	a1,20404bea <__subdf3+0x262>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 128)
20404ba2:	00a7e6b3          	or	a3,a5,a0
20404ba6:	e49d                	bnez	s1,20404bd4 <__subdf3+0x24c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 130)
20404ba8:	34068363          	beqz	a3,20404eee <__subdf3+0x566>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 133)
20404bac:	00c766b3          	or	a3,a4,a2
20404bb0:	e60684e3          	beqz	a3,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 139)
20404bb4:	962a                	add	a2,a2,a0
20404bb6:	97ba                	add	a5,a5,a4
20404bb8:	00a63533          	sltu	a0,a2,a0
20404bbc:	97aa                	add	a5,a5,a0
20404bbe:	00879713          	slli	a4,a5,0x8
20404bc2:	8532                	mv	a0,a2
20404bc4:	e4075ae3          	bgez	a4,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 141)
20404bc8:	ff800737          	lui	a4,0xff800
20404bcc:	177d                	addi	a4,a4,-1
20404bce:	8ff9                	and	a5,a5,a4
20404bd0:	4485                	li	s1,1
20404bd2:	b599                	j	20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 158)
20404bd4:	de8d                	beqz	a3,20404b0e <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 160)
20404bd6:	8e59                	or	a2,a2,a4
20404bd8:	22060963          	beqz	a2,20404e0a <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404bdc:	4901                	li	s2,0
20404bde:	004007b7          	lui	a5,0x400
20404be2:	4501                	li	a0,0
20404be4:	7ff00493          	li	s1,2047
20404be8:	ae11                	j	20404efc <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 129)
20404bea:	7ff00593          	li	a1,2047
20404bee:	30b68363          	beq	a3,a1,20404ef4 <__subdf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404bf2:	962a                	add	a2,a2,a0
20404bf4:	973e                	add	a4,a4,a5
20404bf6:	00a637b3          	sltu	a5,a2,a0
20404bfa:	973e                	add	a4,a4,a5
20404bfc:	01f71513          	slli	a0,a4,0x1f
20404c00:	8205                	srli	a2,a2,0x1
20404c02:	8d51                	or	a0,a0,a2
20404c04:	00175793          	srli	a5,a4,0x1
20404c08:	84b6                	mv	s1,a3
20404c0a:	b539                	j	20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 13)
20404c0c:	0d005563          	blez	a6,20404cd6 <__subdf3+0x34e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 205)
20404c10:	08089263          	bnez	a7,20404c94 <__subdf3+0x30c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 207)
20404c14:	00c766b3          	or	a3,a4,a2
20404c18:	e00680e3          	beqz	a3,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 210)
20404c1c:	fff48813          	addi	a6,s1,-1
20404c20:	00081b63          	bnez	a6,20404c36 <__subdf3+0x2ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 219)
20404c24:	40c50633          	sub	a2,a0,a2
20404c28:	00c53533          	sltu	a0,a0,a2
20404c2c:	8f99                	sub	a5,a5,a4
20404c2e:	8f89                	sub	a5,a5,a0
20404c30:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 276)
20404c32:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20404c34:	a0b1                	j	20404c80 <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 220)
20404c36:	7ff00693          	li	a3,2047
20404c3a:	dcd48fe3          	beq	s1,a3,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 243)
20404c3e:	03800693          	li	a3,56
20404c42:	0906c663          	blt	a3,a6,20404cce <__subdf3+0x346>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 244)
20404c46:	46fd                	li	a3,31
20404c48:	0506ce63          	blt	a3,a6,20404ca4 <__subdf3+0x31c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 246)
20404c4c:	02000593          	li	a1,32
20404c50:	410585b3          	sub	a1,a1,a6
20404c54:	00b716b3          	sll	a3,a4,a1
20404c58:	010658b3          	srl	a7,a2,a6
20404c5c:	00b61633          	sll	a2,a2,a1
20404c60:	0116e6b3          	or	a3,a3,a7
20404c64:	00c03633          	snez	a2,a2
20404c68:	8e55                	or	a2,a2,a3
20404c6a:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 260)
20404c6e:	40c50633          	sub	a2,a0,a2
20404c72:	40e78733          	sub	a4,a5,a4
20404c76:	00c537b3          	sltu	a5,a0,a2
20404c7a:	40f707b3          	sub	a5,a4,a5
20404c7e:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 318)
20404c80:	00879713          	slli	a4,a5,0x8
20404c84:	d8075ae3          	bgez	a4,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 378)
20404c88:	00800437          	lui	s0,0x800
20404c8c:	147d                	addi	s0,s0,-1
20404c8e:	8c7d                	and	s0,s0,a5
20404c90:	89aa                	mv	s3,a0
20404c92:	a26d                	j	20404e3c <__subdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 208)
20404c94:	7ff00693          	li	a3,2047
20404c98:	d8d480e3          	beq	s1,a3,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 234)
20404c9c:	008006b7          	lui	a3,0x800
20404ca0:	8f55                	or	a4,a4,a3
20404ca2:	bf71                	j	20404c3e <__subdf3+0x2b6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 247)
20404ca4:	fe080693          	addi	a3,a6,-32
20404ca8:	02000893          	li	a7,32
20404cac:	00d756b3          	srl	a3,a4,a3
20404cb0:	4581                	li	a1,0
20404cb2:	01180863          	beq	a6,a7,20404cc2 <__subdf3+0x33a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 254)
20404cb6:	04000593          	li	a1,64
20404cba:	41058833          	sub	a6,a1,a6
20404cbe:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 257)
20404cc2:	8e4d                	or	a2,a2,a1
20404cc4:	00c03633          	snez	a2,a2
20404cc8:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 245)
20404cca:	4701                	li	a4,0
20404ccc:	b74d                	j	20404c6e <__subdf3+0x2e6>
20404cce:	8e59                	or	a2,a2,a4
20404cd0:	00c03633          	snez	a2,a2
20404cd4:	bfdd                	j	20404cca <__subdf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 206)
20404cd6:	0c080463          	beqz	a6,20404d9e <__subdf3+0x416>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 262)
20404cda:	40988833          	sub	a6,a7,s1
20404cde:	e895                	bnez	s1,20404d12 <__subdf3+0x38a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 264)
20404ce0:	00a7e5b3          	or	a1,a5,a0
20404ce4:	26058b63          	beqz	a1,20404f5a <__subdf3+0x5d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 267)
20404ce8:	fff80593          	addi	a1,a6,-1
20404cec:	e991                	bnez	a1,20404d00 <__subdf3+0x378>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20404cee:	40a60533          	sub	a0,a2,a0
20404cf2:	40f707b3          	sub	a5,a4,a5
20404cf6:	00a63633          	sltu	a2,a2,a0
20404cfa:	8f91                	sub	a5,a5,a2
20404cfc:	8936                	mv	s2,a3
20404cfe:	bf15                	j	20404c32 <__subdf3+0x2aa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 277)
20404d00:	7ff00313          	li	t1,2047
20404d04:	00681f63          	bne	a6,t1,20404d22 <__subdf3+0x39a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404d08:	87ba                	mv	a5,a4
20404d0a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404d0c:	7ff00493          	li	s1,2047
20404d10:	a07d                	j	20404dbe <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 265)
20404d12:	7ff00593          	li	a1,2047
20404d16:	feb889e3          	beq	a7,a1,20404d08 <__subdf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 291)
20404d1a:	008005b7          	lui	a1,0x800
20404d1e:	8fcd                	or	a5,a5,a1
20404d20:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 300)
20404d22:	03800813          	li	a6,56
20404d26:	06b84863          	blt	a6,a1,20404d96 <__subdf3+0x40e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 301)
20404d2a:	487d                	li	a6,31
20404d2c:	02b84e63          	blt	a6,a1,20404d68 <__subdf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 303)
20404d30:	02000313          	li	t1,32
20404d34:	40b30333          	sub	t1,t1,a1
20404d38:	00b55e33          	srl	t3,a0,a1
20404d3c:	00679833          	sll	a6,a5,t1
20404d40:	00651533          	sll	a0,a0,t1
20404d44:	01c86833          	or	a6,a6,t3
20404d48:	00a03533          	snez	a0,a0
20404d4c:	00a86533          	or	a0,a6,a0
20404d50:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 317)
20404d54:	40a60533          	sub	a0,a2,a0
20404d58:	40b707b3          	sub	a5,a4,a1
20404d5c:	00a63633          	sltu	a2,a2,a0
20404d60:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 317)
20404d62:	84c6                	mv	s1,a7
20404d64:	8936                	mv	s2,a3
20404d66:	bf29                	j	20404c80 <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 304)
20404d68:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20404d6c:	02000e13          	li	t3,32
20404d70:	0107d833          	srl	a6,a5,a6
20404d74:	4301                	li	t1,0
20404d76:	01c58863          	beq	a1,t3,20404d86 <__subdf3+0x3fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 311)
20404d7a:	04000313          	li	t1,64
20404d7e:	40b305b3          	sub	a1,t1,a1
20404d82:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 314)
20404d86:	00a36533          	or	a0,t1,a0
20404d8a:	00a03533          	snez	a0,a0
20404d8e:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 302)
20404d92:	4581                	li	a1,0
20404d94:	b7c1                	j	20404d54 <__subdf3+0x3cc>
20404d96:	8d5d                	or	a0,a0,a5
20404d98:	00a03533          	snez	a0,a0
20404d9c:	bfdd                	j	20404d92 <__subdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 263)
20404d9e:	00148593          	addi	a1,s1,1
20404da2:	7fe5f593          	andi	a1,a1,2046
20404da6:	e5bd                	bnez	a1,20404e14 <__subdf3+0x48c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 319)
20404da8:	00a7e833          	or	a6,a5,a0
20404dac:	00c765b3          	or	a1,a4,a2
20404db0:	e4b1                	bnez	s1,20404dfc <__subdf3+0x474>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 321)
20404db2:	00081863          	bnez	a6,20404dc2 <__subdf3+0x43a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 323)
20404db6:	1a058663          	beqz	a1,20404f62 <__subdf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404dba:	87ba                	mv	a5,a4
20404dbc:	8532                	mv	a0,a2
20404dbe:	8936                	mv	s2,a3
20404dc0:	b9a1                	j	20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 324)
20404dc2:	c4058be3          	beqz	a1,20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 331)
20404dc6:	40c50833          	sub	a6,a0,a2
20404dca:	40e785b3          	sub	a1,a5,a4
20404dce:	010538b3          	sltu	a7,a0,a6
20404dd2:	411585b3          	sub	a1,a1,a7
20404dd6:	00859413          	slli	s0,a1,0x8
20404dda:	00045a63          	bgez	s0,20404dee <__subdf3+0x466>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 333)
20404dde:	40a60533          	sub	a0,a2,a0
20404de2:	40f707b3          	sub	a5,a4,a5
20404de6:	00a63633          	sltu	a2,a2,a0
20404dea:	8f91                	sub	a5,a5,a2
20404dec:	bfc9                	j	20404dbe <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 334)
20404dee:	00b86533          	or	a0,a6,a1
20404df2:	16050c63          	beqz	a0,20404f6a <__subdf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404df6:	87ae                	mv	a5,a1
20404df8:	8542                	mv	a0,a6
20404dfa:	b939                	j	20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 353)
20404dfc:	00081a63          	bnez	a6,20404e10 <__subdf3+0x488>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 354)
20404e00:	16058763          	beqz	a1,20404f6e <__subdf3+0x5e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404e04:	87ba                	mv	a5,a4
20404e06:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404e08:	8936                	mv	s2,a3
20404e0a:	7ff00493          	li	s1,2047
20404e0e:	b129                	j	20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 355)
20404e10:	dded                	beqz	a1,20404e0a <__subdf3+0x482>
20404e12:	b3e9                	j	20404bdc <__subdf3+0x254>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 320)
20404e14:	40c509b3          	sub	s3,a0,a2
20404e18:	013535b3          	sltu	a1,a0,s3
20404e1c:	40e78433          	sub	s0,a5,a4
20404e20:	8c0d                	sub	s0,s0,a1
20404e22:	00841593          	slli	a1,s0,0x8
20404e26:	0605d663          	bgez	a1,20404e92 <__subdf3+0x50a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 371)
20404e2a:	40a609b3          	sub	s3,a2,a0
20404e2e:	40f707b3          	sub	a5,a4,a5
20404e32:	01363633          	sltu	a2,a2,s3
20404e36:	40c78433          	sub	s0,a5,a2
20404e3a:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 380)
20404e3c:	c02d                	beqz	s0,20404e9e <__subdf3+0x516>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 383)
20404e3e:	8522                	mv	a0,s0
20404e40:	2c65                	jal	204050f8 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 394)
20404e42:	ff850713          	addi	a4,a0,-8
20404e46:	47fd                	li	a5,31
20404e48:	06e7c063          	blt	a5,a4,20404ea8 <__subdf3+0x520>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 395)
20404e4c:	02000793          	li	a5,32
20404e50:	8f99                	sub	a5,a5,a4
20404e52:	00e41433          	sll	s0,s0,a4
20404e56:	00f9d7b3          	srl	a5,s3,a5
20404e5a:	8c5d                	or	s0,s0,a5
20404e5c:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 404)
20404e60:	06974d63          	blt	a4,s1,20404eda <__subdf3+0x552>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 405)
20404e64:	8f05                	sub	a4,a4,s1
20404e66:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7feb2d>
20404e6a:	46fd                	li	a3,31
20404e6c:	04f6c463          	blt	a3,a5,20404eb4 <__subdf3+0x52c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 407)
20404e70:	02000713          	li	a4,32
20404e74:	8f1d                	sub	a4,a4,a5
20404e76:	00f55633          	srl	a2,a0,a5
20404e7a:	00e416b3          	sll	a3,s0,a4
20404e7e:	00e51533          	sll	a0,a0,a4
20404e82:	8ed1                	or	a3,a3,a2
20404e84:	00a03533          	snez	a0,a0
20404e88:	8d55                	or	a0,a0,a3
20404e8a:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
20404e8e:	4481                	li	s1,0
20404e90:	b661                	j	20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 372)
20404e92:	0089e533          	or	a0,s3,s0
20404e96:	f15d                	bnez	a0,20404e3c <__subdf3+0x4b4>
20404e98:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404e9a:	4481                	li	s1,0
20404e9c:	a0e9                	j	20404f66 <__subdf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 387)
20404e9e:	854e                	mv	a0,s3
20404ea0:	2ca1                	jal	204050f8 <__clzsi2>
20404ea2:	02050513          	addi	a0,a0,32
20404ea6:	bf71                	j	20404e42 <__subdf3+0x4ba>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 396)
20404ea8:	fd850413          	addi	s0,a0,-40
20404eac:	00899433          	sll	s0,s3,s0
20404eb0:	4501                	li	a0,0
20404eb2:	b77d                	j	20404e60 <__subdf3+0x4d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 408)
20404eb4:	1705                	addi	a4,a4,-31
20404eb6:	02000613          	li	a2,32
20404eba:	00e45733          	srl	a4,s0,a4
20404ebe:	4681                	li	a3,0
20404ec0:	00c78763          	beq	a5,a2,20404ece <__subdf3+0x546>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 416)
20404ec4:	04000693          	li	a3,64
20404ec8:	8e9d                	sub	a3,a3,a5
20404eca:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
20404ece:	8d55                	or	a0,a0,a3
20404ed0:	00a03533          	snez	a0,a0
20404ed4:	8d59                	or	a0,a0,a4
20404ed6:	4781                	li	a5,0
20404ed8:	bf5d                	j	20404e8e <__subdf3+0x506>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 406)
20404eda:	ff8007b7          	lui	a5,0xff800
20404ede:	17fd                	addi	a5,a5,-1
20404ee0:	8c99                	sub	s1,s1,a4
20404ee2:	8fe1                	and	a5,a5,s0
20404ee4:	be15                	j	20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404ee6:	87ba                	mv	a5,a4
20404ee8:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404eea:	84ae                	mv	s1,a1
20404eec:	b635                	j	20404a18 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404eee:	87ba                	mv	a5,a4
20404ef0:	8532                	mv	a0,a2
20404ef2:	b61d                	j	20404a18 <__subdf3+0x90>
20404ef4:	7ff00493          	li	s1,2047
20404ef8:	4781                	li	a5,0
20404efa:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 47)
20404efc:	00879713          	slli	a4,a5,0x8
20404f00:	00075b63          	bgez	a4,20404f16 <__subdf3+0x58e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 63)
20404f04:	0485                	addi	s1,s1,1
20404f06:	7ff00713          	li	a4,2047
20404f0a:	06e48763          	beq	s1,a4,20404f78 <__subdf3+0x5f0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
20404f0e:	ff800737          	lui	a4,0xff800
20404f12:	177d                	addi	a4,a4,-1
20404f14:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 79)
20404f16:	01d79713          	slli	a4,a5,0x1d
20404f1a:	810d                	srli	a0,a0,0x3
20404f1c:	8d59                	or	a0,a0,a4
20404f1e:	7ff00713          	li	a4,2047
20404f22:	838d                	srli	a5,a5,0x3
20404f24:	00e49963          	bne	s1,a4,20404f36 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 80)
20404f28:	8d5d                	or	a0,a0,a5
20404f2a:	4781                	li	a5,0
20404f2c:	c509                	beqz	a0,20404f36 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
20404f2e:	000807b7          	lui	a5,0x80
20404f32:	4501                	li	a0,0
20404f34:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20404f36:	7ff4f713          	andi	a4,s1,2047
20404f3a:	07b2                	slli	a5,a5,0xc
20404f3c:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
20404f3e:	40f2                	lw	ra,28(sp)
20404f40:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20404f42:	83b1                	srli	a5,a5,0xc
20404f44:	01f91593          	slli	a1,s2,0x1f
20404f48:	8fd9                	or	a5,a5,a4
20404f4a:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
20404f4e:	44d2                	lw	s1,20(sp)
20404f50:	4942                	lw	s2,16(sp)
20404f52:	49b2                	lw	s3,12(sp)
20404f54:	85ba                	mv	a1,a4
20404f56:	6105                	addi	sp,sp,32
20404f58:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404f5a:	87ba                	mv	a5,a4
20404f5c:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404f5e:	84c2                	mv	s1,a6
20404f60:	bdb9                	j	20404dbe <__subdf3+0x436>
20404f62:	4781                	li	a5,0
20404f64:	4501                	li	a0,0
20404f66:	4901                	li	s2,0
20404f68:	bf51                	j	20404efc <__subdf3+0x574>
20404f6a:	4781                	li	a5,0
20404f6c:	bfed                	j	20404f66 <__subdf3+0x5de>
20404f6e:	4501                	li	a0,0
20404f70:	4901                	li	s2,0
20404f72:	004007b7          	lui	a5,0x400
20404f76:	b1bd                	j	20404be4 <__subdf3+0x25c>
20404f78:	4781                	li	a5,0
20404f7a:	4501                	li	a0,0
20404f7c:	bf69                	j	20404f16 <__subdf3+0x58e>

20404f7e <__fixdfsi>:
__fixdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
20404f7e:	0145d713          	srli	a4,a1,0x14
20404f82:	001006b7          	lui	a3,0x100
20404f86:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
20404f8a:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20404f8e:	3fe00613          	li	a2,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
20404f92:	8fed                	and	a5,a5,a1
20404f94:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20404f96:	04e65463          	bge	a2,a4,20404fde <__fixdfsi+0x60>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 10)
20404f9a:	41d00613          	li	a2,1053
20404f9e:	00e65863          	bge	a2,a4,20404fae <__fixdfsi+0x30>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 13)
20404fa2:	80000537          	lui	a0,0x80000
20404fa6:	fff54513          	not	a0,a0
20404faa:	952e                	add	a0,a0,a1
20404fac:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 12)
20404fae:	8fd5                	or	a5,a5,a3
20404fb0:	43300693          	li	a3,1075
20404fb4:	8e99                	sub	a3,a3,a4
20404fb6:	467d                	li	a2,31
20404fb8:	00d64d63          	blt	a2,a3,20404fd2 <__fixdfsi+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 29)
20404fbc:	bed70713          	addi	a4,a4,-1043 # ff7ffbed <metal_segment_heap_target_end+0x7f7fe719>
20404fc0:	00e797b3          	sll	a5,a5,a4
20404fc4:	00d55533          	srl	a0,a0,a3
20404fc8:	8d5d                	or	a0,a0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 42)
20404fca:	c999                	beqz	a1,20404fe0 <__fixdfsi+0x62>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 44)
20404fcc:	40a00533          	neg	a0,a0
20404fd0:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 41)
20404fd2:	41300513          	li	a0,1043
20404fd6:	8d19                	sub	a0,a0,a4
20404fd8:	00a7d533          	srl	a0,a5,a0
20404fdc:	b7fd                	j	20404fca <__fixdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20404fde:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:47
20404fe0:	8082                	ret

20404fe2 <__fixunsdfsi>:
__fixunsdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20404fe2:	0145d713          	srli	a4,a1,0x14
20404fe6:	001006b7          	lui	a3,0x100
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:36
20404fea:	862a                	mv	a2,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20404fec:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
20404ff0:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20404ff4:	3fe00513          	li	a0,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20404ff8:	8fed                	and	a5,a5,a1
20404ffa:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20404ffc:	02e55f63          	bge	a0,a4,2040503a <__fixunsdfsi+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 10)
20405000:	4501                	li	a0,0
20405002:	e591                	bnez	a1,2040500e <__fixunsdfsi+0x2c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20405004:	41e00593          	li	a1,1054
20405008:	557d                	li	a0,-1
2040500a:	00e5d363          	bge	a1,a4,20405010 <__fixunsdfsi+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:47
2040500e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 18)
20405010:	8fd5                	or	a5,a5,a3
20405012:	43300693          	li	a3,1075
20405016:	8e99                	sub	a3,a3,a4
20405018:	45fd                	li	a1,31
2040501a:	00d5ca63          	blt	a1,a3,2040502e <__fixunsdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 33)
2040501e:	bed70713          	addi	a4,a4,-1043
20405022:	00e797b3          	sll	a5,a5,a4
20405026:	00d65533          	srl	a0,a2,a3
2040502a:	8d5d                	or	a0,a0,a5
2040502c:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 45)
2040502e:	41300513          	li	a0,1043
20405032:	8d19                	sub	a0,a0,a4
20405034:	00a7d533          	srl	a0,a5,a0
20405038:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
2040503a:	4501                	li	a0,0
2040503c:	8082                	ret

2040503e <__floatsidf>:
__floatsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:37
2040503e:	1141                	addi	sp,sp,-16
20405040:	c606                	sw	ra,12(sp)
20405042:	c422                	sw	s0,8(sp)
20405044:	c226                	sw	s1,4(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
20405046:	cd31                	beqz	a0,204050a2 <__floatsidf+0x64>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 1)
20405048:	41f55793          	srai	a5,a0,0x1f
2040504c:	00a7c433          	xor	s0,a5,a0
20405050:	8c1d                	sub	s0,s0,a5
20405052:	01f55493          	srli	s1,a0,0x1f
20405056:	8522                	mv	a0,s0
20405058:	2045                	jal	204050f8 <__clzsi2>
2040505a:	41e00713          	li	a4,1054
2040505e:	47a9                	li	a5,10
20405060:	8f09                	sub	a4,a4,a0
20405062:	02a7ca63          	blt	a5,a0,20405096 <__floatsidf+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 23)
20405066:	47ad                	li	a5,11
20405068:	8f89                	sub	a5,a5,a0
2040506a:	0555                	addi	a0,a0,21
2040506c:	00f457b3          	srl	a5,s0,a5
20405070:	00a41433          	sll	s0,s0,a0
20405074:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:42
20405076:	07b2                	slli	a5,a5,0xc
20405078:	7ff77713          	andi	a4,a4,2047
2040507c:	0752                	slli	a4,a4,0x14
2040507e:	83b1                	srli	a5,a5,0xc
20405080:	057e                	slli	a0,a0,0x1f
20405082:	8fd9                	or	a5,a5,a4
20405084:	00a7e733          	or	a4,a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:45
20405088:	40b2                	lw	ra,12(sp)
2040508a:	8522                	mv	a0,s0
2040508c:	4422                	lw	s0,8(sp)
2040508e:	4492                	lw	s1,4(sp)
20405090:	85ba                	mv	a1,a4
20405092:	0141                	addi	sp,sp,16
20405094:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 24)
20405096:	1555                	addi	a0,a0,-11
20405098:	00a417b3          	sll	a5,s0,a0
2040509c:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
2040509e:	4401                	li	s0,0
204050a0:	bfd9                	j	20405076 <__floatsidf+0x38>
204050a2:	4701                	li	a4,0
204050a4:	4781                	li	a5,0
204050a6:	bfe5                	j	2040509e <__floatsidf+0x60>

204050a8 <__floatunsidf>:
__floatunsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:37
204050a8:	1141                	addi	sp,sp,-16
204050aa:	c422                	sw	s0,8(sp)
204050ac:	c606                	sw	ra,12(sp)
204050ae:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
204050b0:	c129                	beqz	a0,204050f2 <__floatunsidf+0x4a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 6)
204050b2:	2099                	jal	204050f8 <__clzsi2>
204050b4:	41e00713          	li	a4,1054
204050b8:	47a9                	li	a5,10
204050ba:	8f09                	sub	a4,a4,a0
204050bc:	02a7c663          	blt	a5,a0,204050e8 <__floatunsidf+0x40>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 23)
204050c0:	47ad                	li	a5,11
204050c2:	8f89                	sub	a5,a5,a0
204050c4:	0555                	addi	a0,a0,21
204050c6:	00f457b3          	srl	a5,s0,a5
204050ca:	00a41433          	sll	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
204050ce:	8522                	mv	a0,s0
204050d0:	40b2                	lw	ra,12(sp)
204050d2:	4422                	lw	s0,8(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:42
204050d4:	07b2                	slli	a5,a5,0xc
204050d6:	7ff77713          	andi	a4,a4,2047
204050da:	0752                	slli	a4,a4,0x14
204050dc:	83b1                	srli	a5,a5,0xc
204050de:	00e7e6b3          	or	a3,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
204050e2:	85b6                	mv	a1,a3
204050e4:	0141                	addi	sp,sp,16
204050e6:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 24)
204050e8:	1555                	addi	a0,a0,-11
204050ea:	00a417b3          	sll	a5,s0,a0
204050ee:	4401                	li	s0,0
204050f0:	bff9                	j	204050ce <__floatunsidf+0x26>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
204050f2:	4781                	li	a5,0
204050f4:	4701                	li	a4,0
204050f6:	bfe1                	j	204050ce <__floatunsidf+0x26>

204050f8 <__clzsi2>:
__clzsi2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
204050f8:	67c1                	lui	a5,0x10
204050fa:	02f57663          	bgeu	a0,a5,20405126 <__clzsi2+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 3)
204050fe:	0ff00793          	li	a5,255
20405102:	00a7b7b3          	sltu	a5,a5,a0
20405106:	078e                	slli	a5,a5,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 14)
20405108:	02000713          	li	a4,32
2040510c:	8f1d                	sub	a4,a4,a5
2040510e:	00f557b3          	srl	a5,a0,a5
20405112:	00004517          	auipc	a0,0x4
20405116:	e3650513          	addi	a0,a0,-458 # 20408f48 <__clz_tab>
2040511a:	97aa                	add	a5,a5,a0
2040511c:	0007c503          	lbu	a0,0(a5) # 10000 <__heap_size+0xf800>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:713 (discriminator 14)
20405120:	40a70533          	sub	a0,a4,a0
20405124:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 4)
20405126:	01000737          	lui	a4,0x1000
2040512a:	47c1                	li	a5,16
2040512c:	fce56ee3          	bltu	a0,a4,20405108 <__clzsi2+0x10>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
20405130:	47e1                	li	a5,24
20405132:	bfd9                	j	20405108 <__clzsi2+0x10>

20405134 <_write>:
_write():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:9
#include <unistd.h>

/* Write to a file.  */
ssize_t
_write(int file, const void *ptr, size_t len)
{
20405134:	7179                	addi	sp,sp,-48
20405136:	d606                	sw	ra,44(sp)
20405138:	d422                	sw	s0,40(sp)
2040513a:	1800                	addi	s0,sp,48
2040513c:	fca42e23          	sw	a0,-36(s0) # 7fffdc <__heap_size+0x7ff7dc>
20405140:	fcb42c23          	sw	a1,-40(s0)
20405144:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:10
  if (file != STDOUT_FILENO) {
20405148:	fdc42703          	lw	a4,-36(s0)
2040514c:	4785                	li	a5,1
2040514e:	00f70963          	beq	a4,a5,20405160 <_write+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:11
    errno = ENOSYS;
20405152:	28a9                	jal	204051ac <__errno>
20405154:	872a                	mv	a4,a0
20405156:	05800793          	li	a5,88
2040515a:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:12
    return -1;
2040515c:	57fd                	li	a5,-1
2040515e:	a82d                	j	20405198 <_write+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:15
  }

  const char *bptr = ptr;
20405160:	fd842783          	lw	a5,-40(s0)
20405164:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16
  for (size_t i = 0; i < len; ++i)
20405168:	fe042623          	sw	zero,-20(s0)
2040516c:	a839                	j	2040518a <_write+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:17 (discriminator 3)
    metal_tty_putc(bptr[i]);
2040516e:	fe842703          	lw	a4,-24(s0)
20405172:	fec42783          	lw	a5,-20(s0)
20405176:	97ba                	add	a5,a5,a4
20405178:	0007c783          	lbu	a5,0(a5)
2040517c:	853e                	mv	a0,a5
2040517e:	2c91                	jal	204053d2 <metal_tty_putc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 3)
  for (size_t i = 0; i < len; ++i)
20405180:	fec42783          	lw	a5,-20(s0)
20405184:	0785                	addi	a5,a5,1
20405186:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 1)
2040518a:	fec42703          	lw	a4,-20(s0)
2040518e:	fd442783          	lw	a5,-44(s0)
20405192:	fcf76ee3          	bltu	a4,a5,2040516e <_write+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:18
  return 0;
20405196:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:19
}
20405198:	853e                	mv	a0,a5
2040519a:	50b2                	lw	ra,44(sp)
2040519c:	5422                	lw	s0,40(sp)
2040519e:	6145                	addi	sp,sp,48
204051a0:	8082                	ret

204051a2 <atexit>:
atexit():
204051a2:	85aa                	mv	a1,a0
204051a4:	4681                	li	a3,0
204051a6:	4601                	li	a2,0
204051a8:	4501                	li	a0,0
204051aa:	a8f1                	j	20405286 <__register_exitproc>

204051ac <__errno>:
__errno():
204051ac:	5fbfb797          	auipc	a5,0x5fbfb
204051b0:	5dc78793          	addi	a5,a5,1500 # 80000788 <_impure_ptr>
204051b4:	4388                	lw	a0,0(a5)
204051b6:	8082                	ret

204051b8 <exit>:
exit():
204051b8:	1141                	addi	sp,sp,-16
204051ba:	c422                	sw	s0,8(sp)
204051bc:	c606                	sw	ra,12(sp)
204051be:	00000797          	auipc	a5,0x0
204051c2:	14c78793          	addi	a5,a5,332 # 2040530a <__call_exitprocs>
204051c6:	842a                	mv	s0,a0
204051c8:	c399                	beqz	a5,204051ce <exit+0x16>
204051ca:	4581                	li	a1,0
204051cc:	2a3d                	jal	2040530a <__call_exitprocs>
204051ce:	5fbfb797          	auipc	a5,0x5fbfb
204051d2:	5be78793          	addi	a5,a5,1470 # 8000078c <_global_impure_ptr>
204051d6:	4388                	lw	a0,0(a5)
204051d8:	551c                	lw	a5,40(a0)
204051da:	c391                	beqz	a5,204051de <exit+0x26>
204051dc:	9782                	jalr	a5
204051de:	8522                	mv	a0,s0
204051e0:	10f030ef          	jal	ra,20408aee <_exit>

204051e4 <__libc_fini_array>:
__libc_fini_array():
204051e4:	1141                	addi	sp,sp,-16
204051e6:	00004797          	auipc	a5,0x4
204051ea:	1b678793          	addi	a5,a5,438 # 2040939c <__fini_array_end>
204051ee:	c422                	sw	s0,8(sp)
204051f0:	00004417          	auipc	s0,0x4
204051f4:	1ac40413          	addi	s0,s0,428 # 2040939c <__fini_array_end>
204051f8:	8c1d                	sub	s0,s0,a5
204051fa:	c226                	sw	s1,4(sp)
204051fc:	c606                	sw	ra,12(sp)
204051fe:	8409                	srai	s0,s0,0x2
20405200:	84be                	mv	s1,a5
20405202:	e411                	bnez	s0,2040520e <__libc_fini_array+0x2a>
20405204:	40b2                	lw	ra,12(sp)
20405206:	4422                	lw	s0,8(sp)
20405208:	4492                	lw	s1,4(sp)
2040520a:	0141                	addi	sp,sp,16
2040520c:	8082                	ret
2040520e:	147d                	addi	s0,s0,-1
20405210:	00241793          	slli	a5,s0,0x2
20405214:	97a6                	add	a5,a5,s1
20405216:	439c                	lw	a5,0(a5)
20405218:	9782                	jalr	a5
2040521a:	b7e5                	j	20405202 <__libc_fini_array+0x1e>

2040521c <__libc_init_array>:
__libc_init_array():
2040521c:	1141                	addi	sp,sp,-16
2040521e:	00004797          	auipc	a5,0x4
20405222:	17a78793          	addi	a5,a5,378 # 20409398 <__init_array_start>
20405226:	c422                	sw	s0,8(sp)
20405228:	00004417          	auipc	s0,0x4
2040522c:	17040413          	addi	s0,s0,368 # 20409398 <__init_array_start>
20405230:	8c1d                	sub	s0,s0,a5
20405232:	c226                	sw	s1,4(sp)
20405234:	c04a                	sw	s2,0(sp)
20405236:	c606                	sw	ra,12(sp)
20405238:	8409                	srai	s0,s0,0x2
2040523a:	4481                	li	s1,0
2040523c:	893e                	mv	s2,a5
2040523e:	02849663          	bne	s1,s0,2040526a <__libc_init_array+0x4e>
20405242:	00004797          	auipc	a5,0x4
20405246:	15678793          	addi	a5,a5,342 # 20409398 <__init_array_start>
2040524a:	00004417          	auipc	s0,0x4
2040524e:	15240413          	addi	s0,s0,338 # 2040939c <__fini_array_end>
20405252:	8c1d                	sub	s0,s0,a5
20405254:	8409                	srai	s0,s0,0x2
20405256:	4481                	li	s1,0
20405258:	893e                	mv	s2,a5
2040525a:	00849f63          	bne	s1,s0,20405278 <__libc_init_array+0x5c>
2040525e:	40b2                	lw	ra,12(sp)
20405260:	4422                	lw	s0,8(sp)
20405262:	4492                	lw	s1,4(sp)
20405264:	4902                	lw	s2,0(sp)
20405266:	0141                	addi	sp,sp,16
20405268:	8082                	ret
2040526a:	00249793          	slli	a5,s1,0x2
2040526e:	97ca                	add	a5,a5,s2
20405270:	439c                	lw	a5,0(a5)
20405272:	0485                	addi	s1,s1,1
20405274:	9782                	jalr	a5
20405276:	b7e1                	j	2040523e <__libc_init_array+0x22>
20405278:	00249793          	slli	a5,s1,0x2
2040527c:	97ca                	add	a5,a5,s2
2040527e:	439c                	lw	a5,0(a5)
20405280:	0485                	addi	s1,s1,1
20405282:	9782                	jalr	a5
20405284:	bfd9                	j	2040525a <__libc_init_array+0x3e>

20405286 <__register_exitproc>:
__register_exitproc():
20405286:	5fbfb797          	auipc	a5,0x5fbfb
2040528a:	52a78793          	addi	a5,a5,1322 # 800007b0 <metal_segment_data_target_end>
2040528e:	439c                	lw	a5,0(a5)
20405290:	8e2a                	mv	t3,a0
20405292:	e38d                	bnez	a5,204052b4 <__register_exitproc+0x2e>
20405294:	8bc18713          	addi	a4,gp,-1860 # 80000844 <_global_atexit0>
20405298:	5fbfb797          	auipc	a5,0x5fbfb
2040529c:	50e7ac23          	sw	a4,1304(a5) # 800007b0 <metal_segment_data_target_end>
204052a0:	dfbfb517          	auipc	a0,0xdfbfb
204052a4:	d6050513          	addi	a0,a0,-672 # 0 <__metal_boot_hart>
204052a8:	87ba                	mv	a5,a4
204052aa:	c509                	beqz	a0,204052b4 <__register_exitproc+0x2e>
204052ac:	411c                	lw	a5,0(a0)
204052ae:	94f1a223          	sw	a5,-1724(gp) # 800008cc <_global_atexit0+0x88>
204052b2:	87ba                	mv	a5,a4
204052b4:	43d8                	lw	a4,4(a5)
204052b6:	487d                	li	a6,31
204052b8:	557d                	li	a0,-1
204052ba:	04e84763          	blt	a6,a4,20405308 <__register_exitproc+0x82>
204052be:	020e0e63          	beqz	t3,204052fa <__register_exitproc+0x74>
204052c2:	0887a803          	lw	a6,136(a5)
204052c6:	04080163          	beqz	a6,20405308 <__register_exitproc+0x82>
204052ca:	00271893          	slli	a7,a4,0x2
204052ce:	98c2                	add	a7,a7,a6
204052d0:	00c8a023          	sw	a2,0(a7)
204052d4:	10082303          	lw	t1,256(a6)
204052d8:	4605                	li	a2,1
204052da:	00e61633          	sll	a2,a2,a4
204052de:	00c36333          	or	t1,t1,a2
204052e2:	10682023          	sw	t1,256(a6)
204052e6:	08d8a023          	sw	a3,128(a7)
204052ea:	4689                	li	a3,2
204052ec:	00de1763          	bne	t3,a3,204052fa <__register_exitproc+0x74>
204052f0:	10482683          	lw	a3,260(a6)
204052f4:	8e55                	or	a2,a2,a3
204052f6:	10c82223          	sw	a2,260(a6)
204052fa:	00170693          	addi	a3,a4,1 # 1000001 <__heap_size+0xfff801>
204052fe:	070a                	slli	a4,a4,0x2
20405300:	c3d4                	sw	a3,4(a5)
20405302:	97ba                	add	a5,a5,a4
20405304:	c78c                	sw	a1,8(a5)
20405306:	4501                	li	a0,0
20405308:	8082                	ret

2040530a <__call_exitprocs>:
__call_exitprocs():
2040530a:	7179                	addi	sp,sp,-48
2040530c:	cc52                	sw	s4,24(sp)
2040530e:	ca56                	sw	s5,20(sp)
20405310:	c85a                	sw	s6,16(sp)
20405312:	c65e                	sw	s7,12(sp)
20405314:	d606                	sw	ra,44(sp)
20405316:	d422                	sw	s0,40(sp)
20405318:	d226                	sw	s1,36(sp)
2040531a:	d04a                	sw	s2,32(sp)
2040531c:	ce4e                	sw	s3,28(sp)
2040531e:	c462                	sw	s8,8(sp)
20405320:	8b2a                	mv	s6,a0
20405322:	8a2e                	mv	s4,a1
20405324:	5fbfba97          	auipc	s5,0x5fbfb
20405328:	48ca8a93          	addi	s5,s5,1164 # 800007b0 <metal_segment_data_target_end>
2040532c:	4b85                	li	s7,1
2040532e:	000aa403          	lw	s0,0(s5)
20405332:	c811                	beqz	s0,20405346 <__call_exitprocs+0x3c>
20405334:	4044                	lw	s1,4(s0)
20405336:	08842983          	lw	s3,136(s0)
2040533a:	fff48913          	addi	s2,s1,-1
2040533e:	048a                	slli	s1,s1,0x2
20405340:	94a2                	add	s1,s1,s0
20405342:	00095e63          	bgez	s2,2040535e <__call_exitprocs+0x54>
20405346:	50b2                	lw	ra,44(sp)
20405348:	5422                	lw	s0,40(sp)
2040534a:	5492                	lw	s1,36(sp)
2040534c:	5902                	lw	s2,32(sp)
2040534e:	49f2                	lw	s3,28(sp)
20405350:	4a62                	lw	s4,24(sp)
20405352:	4ad2                	lw	s5,20(sp)
20405354:	4b42                	lw	s6,16(sp)
20405356:	4bb2                	lw	s7,12(sp)
20405358:	4c22                	lw	s8,8(sp)
2040535a:	6145                	addi	sp,sp,48
2040535c:	8082                	ret
2040535e:	000a0e63          	beqz	s4,2040537a <__call_exitprocs+0x70>
20405362:	00099563          	bnez	s3,2040536c <__call_exitprocs+0x62>
20405366:	197d                	addi	s2,s2,-1
20405368:	14f1                	addi	s1,s1,-4
2040536a:	bfe1                	j	20405342 <__call_exitprocs+0x38>
2040536c:	00291793          	slli	a5,s2,0x2
20405370:	97ce                	add	a5,a5,s3
20405372:	0807a783          	lw	a5,128(a5)
20405376:	ff4798e3          	bne	a5,s4,20405366 <__call_exitprocs+0x5c>
2040537a:	4058                	lw	a4,4(s0)
2040537c:	40dc                	lw	a5,4(s1)
2040537e:	177d                	addi	a4,a4,-1
20405380:	03271863          	bne	a4,s2,204053b0 <__call_exitprocs+0xa6>
20405384:	01242223          	sw	s2,4(s0)
20405388:	dff9                	beqz	a5,20405366 <__call_exitprocs+0x5c>
2040538a:	00442c03          	lw	s8,4(s0)
2040538e:	00098863          	beqz	s3,2040539e <__call_exitprocs+0x94>
20405392:	1009a683          	lw	a3,256(s3)
20405396:	012b9733          	sll	a4,s7,s2
2040539a:	8ef9                	and	a3,a3,a4
2040539c:	ee89                	bnez	a3,204053b6 <__call_exitprocs+0xac>
2040539e:	9782                	jalr	a5
204053a0:	4058                	lw	a4,4(s0)
204053a2:	000aa783          	lw	a5,0(s5)
204053a6:	f98714e3          	bne	a4,s8,2040532e <__call_exitprocs+0x24>
204053aa:	faf40ee3          	beq	s0,a5,20405366 <__call_exitprocs+0x5c>
204053ae:	b741                	j	2040532e <__call_exitprocs+0x24>
204053b0:	0004a223          	sw	zero,4(s1)
204053b4:	bfd1                	j	20405388 <__call_exitprocs+0x7e>
204053b6:	00291693          	slli	a3,s2,0x2
204053ba:	96ce                	add	a3,a3,s3
204053bc:	428c                	lw	a1,0(a3)
204053be:	1049a683          	lw	a3,260(s3)
204053c2:	8f75                	and	a4,a4,a3
204053c4:	e701                	bnez	a4,204053cc <__call_exitprocs+0xc2>
204053c6:	855a                	mv	a0,s6
204053c8:	9782                	jalr	a5
204053ca:	bfd9                	j	204053a0 <__call_exitprocs+0x96>
204053cc:	852e                	mv	a0,a1
204053ce:	9782                	jalr	a5
204053d0:	bfc1                	j	204053a0 <__call_exitprocs+0x96>

204053d2 <metal_tty_putc>:
metal_tty_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:12

#if defined(__METAL_DT_STDOUT_UART_HANDLE)
/* This implementation serves as a small shim that interfaces with the first
 * UART on a system. */
int metal_tty_putc(int c)
{
204053d2:	1101                	addi	sp,sp,-32
204053d4:	ce06                	sw	ra,28(sp)
204053d6:	cc22                	sw	s0,24(sp)
204053d8:	1000                	addi	s0,sp,32
204053da:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:13
    if (c == '\n') {
204053de:	fec42703          	lw	a4,-20(s0)
204053e2:	47a9                	li	a5,10
204053e4:	00f71463          	bne	a4,a5,204053ec <metal_tty_putc+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:14
        metal_tty_putc_raw( '\r' );
204053e8:	4535                	li	a0,13
204053ea:	2811                	jal	204053fe <metal_tty_putc_raw>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:16
    }
    return metal_tty_putc_raw( c );
204053ec:	fec42503          	lw	a0,-20(s0)
204053f0:	2039                	jal	204053fe <metal_tty_putc_raw>
204053f2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:17
}
204053f4:	853e                	mv	a0,a5
204053f6:	40f2                	lw	ra,28(sp)
204053f8:	4462                	lw	s0,24(sp)
204053fa:	6105                	addi	sp,sp,32
204053fc:	8082                	ret

204053fe <metal_tty_putc_raw>:
metal_tty_putc_raw():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:20

int metal_tty_putc_raw(int c)
{
204053fe:	1101                	addi	sp,sp,-32
20405400:	ce06                	sw	ra,28(sp)
20405402:	cc22                	sw	s0,24(sp)
20405404:	1000                	addi	s0,sp,32
20405406:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:21
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
2040540a:	fec42583          	lw	a1,-20(s0)
2040540e:	800007b7          	lui	a5,0x80000
20405412:	76878513          	addi	a0,a5,1896 # 80000768 <metal_segment_heap_target_end+0xfffff294>
20405416:	28b1                	jal	20405472 <metal_uart_putc>
20405418:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:22
}
2040541a:	853e                	mv	a0,a5
2040541c:	40f2                	lw	ra,28(sp)
2040541e:	4462                	lw	s0,24(sp)
20405420:	6105                	addi	sp,sp,32
20405422:	8082                	ret

20405424 <metal_tty_init>:
metal_tty_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:40
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

static void metal_tty_init(void) __attribute__((constructor));
static void metal_tty_init(void)
{
20405424:	1141                	addi	sp,sp,-16
20405426:	c606                	sw	ra,12(sp)
20405428:	c422                	sw	s0,8(sp)
2040542a:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:41
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
2040542c:	67f1                	lui	a5,0x1c
2040542e:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20405432:	800007b7          	lui	a5,0x80000
20405436:	76878513          	addi	a0,a5,1896 # 80000768 <metal_segment_heap_target_end+0xfffff294>
2040543a:	2031                	jal	20405446 <metal_uart_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:42
}
2040543c:	0001                	nop
2040543e:	40b2                	lw	ra,12(sp)
20405440:	4422                	lw	s0,8(sp)
20405442:	0141                	addi	sp,sp,16
20405444:	8082                	ret

20405446 <metal_uart_init>:
metal_uart_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:44
 * other method on the UART can be invoked. It is invalid to initialize a UART more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) { uart->vtable->init(uart, baud_rate); }
20405446:	1101                	addi	sp,sp,-32
20405448:	ce06                	sw	ra,28(sp)
2040544a:	cc22                	sw	s0,24(sp)
2040544c:	1000                	addi	s0,sp,32
2040544e:	fea42623          	sw	a0,-20(s0)
20405452:	feb42423          	sw	a1,-24(s0)
20405456:	fec42783          	lw	a5,-20(s0)
2040545a:	439c                	lw	a5,0(a5)
2040545c:	439c                	lw	a5,0(a5)
2040545e:	fe842583          	lw	a1,-24(s0)
20405462:	fec42503          	lw	a0,-20(s0)
20405466:	9782                	jalr	a5
20405468:	0001                	nop
2040546a:	40f2                	lw	ra,28(sp)
2040546c:	4462                	lw	s0,24(sp)
2040546e:	6105                	addi	sp,sp,32
20405470:	8082                	ret

20405472 <metal_uart_putc>:
metal_uart_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:52
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) { return uart->vtable->putc(uart, c); }
20405472:	1101                	addi	sp,sp,-32
20405474:	ce06                	sw	ra,28(sp)
20405476:	cc22                	sw	s0,24(sp)
20405478:	1000                	addi	s0,sp,32
2040547a:	fea42623          	sw	a0,-20(s0)
2040547e:	feb42423          	sw	a1,-24(s0)
20405482:	fec42783          	lw	a5,-20(s0)
20405486:	439c                	lw	a5,0(a5)
20405488:	43dc                	lw	a5,4(a5)
2040548a:	fe842583          	lw	a1,-24(s0)
2040548e:	fec42503          	lw	a0,-20(s0)
20405492:	9782                	jalr	a5
20405494:	87aa                	mv	a5,a0
20405496:	853e                	mv	a0,a5
20405498:	40f2                	lw	ra,28(sp)
2040549a:	4462                	lw	s0,24(sp)
2040549c:	6105                	addi	sp,sp,32
2040549e:	8082                	ret

204054a0 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:85
 * @brief Set the baud rate of the UART peripheral
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart, int baud_rate) { return uart->vtable->set_baud_rate(uart, baud_rate); }
204054a0:	1101                	addi	sp,sp,-32
204054a2:	ce06                	sw	ra,28(sp)
204054a4:	cc22                	sw	s0,24(sp)
204054a6:	1000                	addi	s0,sp,32
204054a8:	fea42623          	sw	a0,-20(s0)
204054ac:	feb42423          	sw	a1,-24(s0)
204054b0:	fec42783          	lw	a5,-20(s0)
204054b4:	439c                	lw	a5,0(a5)
204054b6:	4bdc                	lw	a5,20(a5)
204054b8:	fe842583          	lw	a1,-24(s0)
204054bc:	fec42503          	lw	a0,-20(s0)
204054c0:	9782                	jalr	a5
204054c2:	87aa                	mv	a5,a0
204054c4:	853e                	mv	a0,a5
204054c6:	40f2                	lw	ra,28(sp)
204054c8:	4462                	lw	s0,24(sp)
204054ca:	6105                	addi	sp,sp,32
204054cc:	8082                	ret

204054ce <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:136
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
204054ce:	1101                	addi	sp,sp,-32
204054d0:	ce22                	sw	s0,28(sp)
204054d2:	1000                	addi	s0,sp,32
204054d4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:137
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
204054d8:	fec42703          	lw	a4,-20(s0)
204054dc:	800007b7          	lui	a5,0x80000
204054e0:	79478793          	addi	a5,a5,1940 # 80000794 <metal_segment_heap_target_end+0xfffff2c0>
204054e4:	00f71563          	bne	a4,a5,204054ee <__metal_driver_sifive_clint0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:138
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
204054e8:	020007b7          	lui	a5,0x2000
204054ec:	a011                	j	204054f0 <__metal_driver_sifive_clint0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:141
	}
	else {
		return 0;
204054ee:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:143
	}
}
204054f0:	853e                	mv	a0,a5
204054f2:	4472                	lw	s0,28(sp)
204054f4:	6105                	addi	sp,sp,32
204054f6:	8082                	ret

204054f8 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:156
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
204054f8:	1101                	addi	sp,sp,-32
204054fa:	ce22                	sw	s0,28(sp)
204054fc:	1000                	addi	s0,sp,32
204054fe:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:157
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20405502:	fec42703          	lw	a4,-20(s0)
20405506:	800007b7          	lui	a5,0x80000
2040550a:	79478793          	addi	a5,a5,1940 # 80000794 <metal_segment_heap_target_end+0xfffff2c0>
2040550e:	00f71463          	bne	a4,a5,20405516 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:158
		return METAL_MAX_CLINT_INTERRUPTS;
20405512:	4789                	li	a5,2
20405514:	a011                	j	20405518 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:161
	}
	else {
		return 0;
20405516:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:163
	}
}
20405518:	853e                	mv	a0,a5
2040551a:	4472                	lw	s0,28(sp)
2040551c:	6105                	addi	sp,sp,32
2040551e:	8082                	ret

20405520 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:166

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20405520:	1101                	addi	sp,sp,-32
20405522:	ce22                	sw	s0,28(sp)
20405524:	1000                	addi	s0,sp,32
20405526:	fea42623          	sw	a0,-20(s0)
2040552a:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:167
	if (idx == 0) {
2040552e:	fe842783          	lw	a5,-24(s0)
20405532:	e791                	bnez	a5,2040553e <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:168
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405534:	800007b7          	lui	a5,0x80000
20405538:	0b078793          	addi	a5,a5,176 # 800000b0 <metal_segment_heap_target_end+0xffffebdc>
2040553c:	a821                	j	20405554 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:170
	}
	else if (idx == 1) {
2040553e:	fe842703          	lw	a4,-24(s0)
20405542:	4785                	li	a5,1
20405544:	00f71763          	bne	a4,a5,20405552 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:171
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405548:	800007b7          	lui	a5,0x80000
2040554c:	0b078793          	addi	a5,a5,176 # 800000b0 <metal_segment_heap_target_end+0xffffebdc>
20405550:	a011                	j	20405554 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:174
	}
	else {
		return NULL;
20405552:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:176
	}
}
20405554:	853e                	mv	a0,a5
20405556:	4472                	lw	s0,28(sp)
20405558:	6105                	addi	sp,sp,32
2040555a:	8082                	ret

2040555c <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:179

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2040555c:	1101                	addi	sp,sp,-32
2040555e:	ce22                	sw	s0,28(sp)
20405560:	1000                	addi	s0,sp,32
20405562:	fea42623          	sw	a0,-20(s0)
20405566:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:180
	if (idx == 0) {
2040556a:	fe842783          	lw	a5,-24(s0)
2040556e:	e399                	bnez	a5,20405574 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:181
		return 3;
20405570:	478d                	li	a5,3
20405572:	a809                	j	20405584 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:183
	}
	else if (idx == 1) {
20405574:	fe842703          	lw	a4,-24(s0)
20405578:	4785                	li	a5,1
2040557a:	00f71463          	bne	a4,a5,20405582 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:184
		return 7;
2040557e:	479d                	li	a5,7
20405580:	a011                	j	20405584 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:187
	}
	else {
		return 0;
20405582:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:189
	}
}
20405584:	853e                	mv	a0,a5
20405586:	4472                	lw	s0,28(sp)
20405588:	6105                	addi	sp,sp,32
2040558a:	8082                	ret

2040558c <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/cpu.h>
#include <metal/drivers/riscv_clint0.h>
#include <metal/machine.h>

unsigned long long __metal_clint0_mtime_get (struct __metal_driver_riscv_clint0 *clint)
{
2040558c:	715d                	addi	sp,sp,-80
2040558e:	c686                	sw	ra,76(sp)
20405590:	c4a2                	sw	s0,72(sp)
20405592:	c2ca                	sw	s2,68(sp)
20405594:	c0ce                	sw	s3,64(sp)
20405596:	de52                	sw	s4,60(sp)
20405598:	dc56                	sw	s5,56(sp)
2040559a:	da5a                	sw	s6,52(sp)
2040559c:	d85e                	sw	s7,48(sp)
2040559e:	d662                	sw	s8,44(sp)
204055a0:	d466                	sw	s9,40(sp)
204055a2:	0880                	addi	s0,sp,80
204055a4:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:16
    __metal_io_u32 lo, hi;
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
204055a8:	fbc42783          	lw	a5,-68(s0)
204055ac:	853e                	mv	a0,a5
204055ae:	3705                	jal	204054ce <__metal_driver_sifive_clint0_control_base>
204055b0:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:20 (discriminator 1)

    /* Guard against rollover when reading */
    do {
	hi = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
204055b4:	fcc42703          	lw	a4,-52(s0)
204055b8:	67b1                	lui	a5,0xc
204055ba:	17f1                	addi	a5,a5,-4
204055bc:	97ba                	add	a5,a5,a4
204055be:	439c                	lw	a5,0(a5)
204055c0:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)
	lo = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
204055c4:	fcc42703          	lw	a4,-52(s0)
204055c8:	67b1                	lui	a5,0xc
204055ca:	17e1                	addi	a5,a5,-8
204055cc:	97ba                	add	a5,a5,a4
204055ce:	439c                	lw	a5,0(a5)
204055d0:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:22 (discriminator 1)
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4)) != hi);
204055d4:	fcc42703          	lw	a4,-52(s0)
204055d8:	67b1                	lui	a5,0xc
204055da:	17f1                	addi	a5,a5,-4
204055dc:	97ba                	add	a5,a5,a4
204055de:	439c                	lw	a5,0(a5)
204055e0:	fc842703          	lw	a4,-56(s0)
204055e4:	fcf718e3          	bne	a4,a5,204055b4 <__metal_clint0_mtime_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:24

    return (((unsigned long long)hi) << 32) | lo;
204055e8:	fc842783          	lw	a5,-56(s0)
204055ec:	8c3e                	mv	s8,a5
204055ee:	4c81                	li	s9,0
204055f0:	000c1993          	slli	s3,s8,0x0
204055f4:	4901                	li	s2,0
204055f6:	fc442783          	lw	a5,-60(s0)
204055fa:	8a3e                	mv	s4,a5
204055fc:	4a81                	li	s5,0
204055fe:	01496b33          	or	s6,s2,s4
20405602:	0159ebb3          	or	s7,s3,s5
20405606:	87da                	mv	a5,s6
20405608:	885e                	mv	a6,s7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25
}
2040560a:	853e                	mv	a0,a5
2040560c:	85c2                	mv	a1,a6
2040560e:	40b6                	lw	ra,76(sp)
20405610:	4426                	lw	s0,72(sp)
20405612:	4916                	lw	s2,68(sp)
20405614:	4986                	lw	s3,64(sp)
20405616:	5a72                	lw	s4,60(sp)
20405618:	5ae2                	lw	s5,56(sp)
2040561a:	5b52                	lw	s6,52(sp)
2040561c:	5bc2                	lw	s7,48(sp)
2040561e:	5c32                	lw	s8,44(sp)
20405620:	5ca2                	lw	s9,40(sp)
20405622:	6161                	addi	sp,sp,80
20405624:	8082                	ret

20405626 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time)
{   
20405626:	7179                	addi	sp,sp,-48
20405628:	d606                	sw	ra,44(sp)
2040562a:	d422                	sw	s0,40(sp)
2040562c:	d24a                	sw	s2,36(sp)
2040562e:	d04e                	sw	s3,32(sp)
20405630:	1800                	addi	s0,sp,48
20405632:	fca42e23          	sw	a0,-36(s0)
20405636:	fcb42c23          	sw	a1,-40(s0)
2040563a:	fcc42823          	sw	a2,-48(s0)
2040563e:	fcd42a23          	sw	a3,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:31
    struct __metal_driver_riscv_clint0 *clint =
20405642:	fdc42783          	lw	a5,-36(s0)
20405646:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:33
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
2040564a:	fec42783          	lw	a5,-20(s0)
2040564e:	853e                	mv	a0,a5
20405650:	3dbd                	jal	204054ce <__metal_driver_sifive_clint0_control_base>
20405652:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:40
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = 0xFFFFFFFF;
20405656:	fd842783          	lw	a5,-40(s0)
2040565a:	078e                	slli	a5,a5,0x3
2040565c:	873e                	mv	a4,a5
2040565e:	fe842783          	lw	a5,-24(s0)
20405662:	973e                	add	a4,a4,a5
20405664:	6791                	lui	a5,0x4
20405666:	0791                	addi	a5,a5,4
20405668:	97ba                	add	a5,a5,a4
2040566a:	873e                	mv	a4,a5
2040566c:	57fd                	li	a5,-1
2040566e:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:41
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE)) = (__metal_io_u32)time;
20405670:	fd842783          	lw	a5,-40(s0)
20405674:	078e                	slli	a5,a5,0x3
20405676:	873e                	mv	a4,a5
20405678:	fe842783          	lw	a5,-24(s0)
2040567c:	973e                	add	a4,a4,a5
2040567e:	6791                	lui	a5,0x4
20405680:	97ba                	add	a5,a5,a4
20405682:	873e                	mv	a4,a5
20405684:	fd042783          	lw	a5,-48(s0)
20405688:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:42
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = (__metal_io_u32)(time >> 32);
2040568a:	fd442783          	lw	a5,-44(s0)
2040568e:	0007d913          	srli	s2,a5,0x0
20405692:	4981                	li	s3,0
20405694:	fd842783          	lw	a5,-40(s0)
20405698:	078e                	slli	a5,a5,0x3
2040569a:	873e                	mv	a4,a5
2040569c:	fe842783          	lw	a5,-24(s0)
204056a0:	973e                	add	a4,a4,a5
204056a2:	6791                	lui	a5,0x4
204056a4:	0791                	addi	a5,a5,4
204056a6:	97ba                	add	a5,a5,a4
204056a8:	874a                	mv	a4,s2
204056aa:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:43
    return 0;
204056ac:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:44
}
204056ae:	853e                	mv	a0,a5
204056b0:	50b2                	lw	ra,44(sp)
204056b2:	5422                	lw	s0,40(sp)
204056b4:	5912                	lw	s2,36(sp)
204056b6:	5982                	lw	s3,32(sp)
204056b8:	6145                	addi	sp,sp,48
204056ba:	8082                	ret

204056bc <_get_cpu_intc>:
_get_cpu_intc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47

static struct metal_interrupt *_get_cpu_intc()
{
204056bc:	1101                	addi	sp,sp,-32
204056be:	ce06                	sw	ra,28(sp)
204056c0:	cc22                	sw	s0,24(sp)
204056c2:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    int hartid = 0;
204056c4:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
    __asm__ volatile("csrr %[hartid], mhartid"
204056c8:	f14027f3          	csrr	a5,mhartid
204056cc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:52
                     : [hartid] "=r" (hartid) :: "memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
204056d0:	fec42783          	lw	a5,-20(s0)
204056d4:	853e                	mv	a0,a5
204056d6:	256030ef          	jal	ra,2040892c <metal_cpu_get>
204056da:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54

    return metal_cpu_interrupt_controller(cpu);
204056de:	fe842503          	lw	a0,-24(s0)
204056e2:	224030ef          	jal	ra,20408906 <metal_cpu_interrupt_controller>
204056e6:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
204056e8:	853e                	mv	a0,a5
204056ea:	40f2                	lw	ra,28(sp)
204056ec:	4462                	lw	s0,24(sp)
204056ee:	6105                	addi	sp,sp,32
204056f0:	8082                	ret

204056f2 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58

void __metal_driver_riscv_clint0_init (struct metal_interrupt *controller)
{
204056f2:	7139                	addi	sp,sp,-64
204056f4:	de06                	sw	ra,60(sp)
204056f6:	dc22                	sw	s0,56(sp)
204056f8:	0080                	addi	s0,sp,64
204056fa:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
204056fe:	fcc42503          	lw	a0,-52(s0)
20405702:	3bdd                	jal	204054f8 <__metal_driver_sifive_clint0_num_interrupts>
20405704:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:60
    struct __metal_driver_riscv_clint0 *clint =
20405708:	fcc42783          	lw	a5,-52(s0)
2040570c:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:63
                              (struct __metal_driver_riscv_clint0 *)(controller);

    if ( !clint->init_done ) {
20405710:	fe442783          	lw	a5,-28(s0)
20405714:	43dc                	lw	a5,4(a5)
20405716:	efa9                	bnez	a5,20405770 <__metal_driver_riscv_clint0_init+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
	/* Register its interrupts with with parent controller, aka sw and timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20405718:	fe042623          	sw	zero,-20(s0)
2040571c:	a081                	j	2040575c <__metal_driver_riscv_clint0_init+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:66 (discriminator 3)
	  struct metal_interrupt *intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040571e:	fec42583          	lw	a1,-20(s0)
20405722:	fcc42503          	lw	a0,-52(s0)
20405726:	3bed                	jal	20405520 <__metal_driver_sifive_clint0_interrupt_parents>
20405728:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67 (discriminator 3)
	  int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040572c:	fec42583          	lw	a1,-20(s0)
20405730:	fcc42503          	lw	a0,-52(s0)
20405734:	3525                	jal	2040555c <__metal_driver_sifive_clint0_interrupt_lines>
20405736:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:68 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
2040573a:	fe042783          	lw	a5,-32(s0)
2040573e:	439c                	lw	a5,0(a5)
20405740:	4fdc                	lw	a5,28(a5)
20405742:	fcc42683          	lw	a3,-52(s0)
20405746:	4601                	li	a2,0
20405748:	fdc42583          	lw	a1,-36(s0)
2040574c:	fe042503          	lw	a0,-32(s0)
20405750:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20405752:	fec42783          	lw	a5,-20(s0)
20405756:	0785                	addi	a5,a5,1
20405758:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 1)
2040575c:	fec42703          	lw	a4,-20(s0)
20405760:	fe842783          	lw	a5,-24(s0)
20405764:	faf74de3          	blt	a4,a5,2040571e <__metal_driver_riscv_clint0_init+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
	}
	clint->init_done = 1;
20405768:	fe442783          	lw	a5,-28(s0)
2040576c:	4705                	li	a4,1
2040576e:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:72
    }	
}
20405770:	0001                	nop
20405772:	50f2                	lw	ra,60(sp)
20405774:	5462                	lw	s0,56(sp)
20405776:	6121                	addi	sp,sp,64
20405778:	8082                	ret

2040577a <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:77

int __metal_driver_riscv_clint0_register (struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv)
{
2040577a:	7139                	addi	sp,sp,-64
2040577c:	de06                	sw	ra,60(sp)
2040577e:	dc22                	sw	s0,56(sp)
20405780:	0080                	addi	s0,sp,64
20405782:	fca42623          	sw	a0,-52(s0)
20405786:	fcb42423          	sw	a1,-56(s0)
2040578a:	fcc42223          	sw	a2,-60(s0)
2040578e:	fcd42023          	sw	a3,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78
    int rc = -1;
20405792:	57fd                	li	a5,-1
20405794:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:79
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20405798:	3c2010ef          	jal	ra,20406b5a <__metal_controller_interrupt_vector_mode>
2040579c:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80
    struct metal_interrupt *intc = NULL;
204057a0:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
204057a4:	3f21                	jal	204056bc <_get_cpu_intc>
204057a6:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:82
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
204057aa:	fcc42503          	lw	a0,-52(s0)
204057ae:	33a9                	jal	204054f8 <__metal_driver_sifive_clint0_num_interrupts>
204057b0:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84

    if ( (mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE) ) {
204057b4:	fe042703          	lw	a4,-32(s0)
204057b8:	4785                	li	a5,1
204057ba:	00f70863          	beq	a4,a5,204057ca <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84 (discriminator 1)
204057be:	fe042783          	lw	a5,-32(s0)
204057c2:	c781                	beqz	a5,204057ca <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
        return rc;
204057c4:	fec42783          	lw	a5,-20(s0)
204057c8:	a049                	j	2040584a <__metal_driver_riscv_clint0_register+0xd0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88
    }

    for(int i = 0; i < num_interrupts; i++) {
204057ca:	fe042223          	sw	zero,-28(s0)
204057ce:	a091                	j	20405812 <__metal_driver_riscv_clint0_register+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89
	int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204057d0:	fe442583          	lw	a1,-28(s0)
204057d4:	fcc42503          	lw	a0,-52(s0)
204057d8:	3351                	jal	2040555c <__metal_driver_sifive_clint0_interrupt_lines>
204057da:	fca42a23          	sw	a0,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204057de:	fe442583          	lw	a1,-28(s0)
204057e2:	fcc42503          	lw	a0,-52(s0)
204057e6:	3b2d                	jal	20405520 <__metal_driver_sifive_clint0_interrupt_parents>
204057e8:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
        if (cpu_intc == intc && id == line) {
204057ec:	fdc42703          	lw	a4,-36(s0)
204057f0:	fe842783          	lw	a5,-24(s0)
204057f4:	00f71863          	bne	a4,a5,20405804 <__metal_driver_riscv_clint0_register+0x8a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91 (discriminator 1)
204057f8:	fc842703          	lw	a4,-56(s0)
204057fc:	fd442783          	lw	a5,-44(s0)
20405800:	02f70063          	beq	a4,a5,20405820 <__metal_driver_riscv_clint0_register+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:94 (discriminator 2)
            break;
        }
	intc = NULL;
20405804:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 2)
    for(int i = 0; i < num_interrupts; i++) {
20405808:	fe442783          	lw	a5,-28(s0)
2040580c:	0785                	addi	a5,a5,1
2040580e:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 1)
20405812:	fe442703          	lw	a4,-28(s0)
20405816:	fd842783          	lw	a5,-40(s0)
2040581a:	faf74be3          	blt	a4,a5,204057d0 <__metal_driver_riscv_clint0_register+0x56>
2040581e:	a011                	j	20405822 <__metal_driver_riscv_clint0_register+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
            break;
20405820:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20405822:	fe842783          	lw	a5,-24(s0)
20405826:	c385                	beqz	a5,20405846 <__metal_driver_riscv_clint0_register+0xcc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:99
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20405828:	fe842783          	lw	a5,-24(s0)
2040582c:	439c                	lw	a5,0(a5)
2040582e:	4fdc                	lw	a5,28(a5)
20405830:	fc042683          	lw	a3,-64(s0)
20405834:	fc442603          	lw	a2,-60(s0)
20405838:	fc842583          	lw	a1,-56(s0)
2040583c:	fe842503          	lw	a0,-24(s0)
20405840:	9782                	jalr	a5
20405842:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }
    return rc;
20405846:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
}
2040584a:	853e                	mv	a0,a5
2040584c:	50f2                	lw	ra,60(sp)
2040584e:	5462                	lw	s0,56(sp)
20405850:	6121                	addi	sp,sp,64
20405852:	8082                	ret

20405854 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107

int __metal_driver_riscv_clint0_vector_register (struct metal_interrupt *controller,
                                                 int id, metal_interrupt_vector_handler_t isr,
                                                 void *priv)
{   
20405854:	7179                	addi	sp,sp,-48
20405856:	d622                	sw	s0,44(sp)
20405858:	1800                	addi	s0,sp,48
2040585a:	fca42e23          	sw	a0,-36(s0)
2040585e:	fcb42c23          	sw	a1,-40(s0)
20405862:	fcc42a23          	sw	a2,-44(s0)
20405866:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:109
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
2040586a:	57fd                	li	a5,-1
2040586c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:110
    return rc;
20405870:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
}
20405874:	853e                	mv	a0,a5
20405876:	5432                	lw	s0,44(sp)
20405878:	6145                	addi	sp,sp,48
2040587a:	8082                	ret

2040587c <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode (struct metal_interrupt *controller)
{
2040587c:	1101                	addi	sp,sp,-32
2040587e:	ce06                	sw	ra,28(sp)
20405880:	cc22                	sw	s0,24(sp)
20405882:	1000                	addi	s0,sp,32
20405884:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
    return __metal_controller_interrupt_vector_mode();
20405888:	2d2010ef          	jal	ra,20406b5a <__metal_controller_interrupt_vector_mode>
2040588c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:116
}
2040588e:	853e                	mv	a0,a5
20405890:	40f2                	lw	ra,28(sp)
20405892:	4462                	lw	s0,24(sp)
20405894:	6105                	addi	sp,sp,32
20405896:	8082                	ret

20405898 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_set_vector_mode (struct metal_interrupt *controller, metal_vector_mode mode)
{
20405898:	7179                	addi	sp,sp,-48
2040589a:	d606                	sw	ra,44(sp)
2040589c:	d422                	sw	s0,40(sp)
2040589e:	1800                	addi	s0,sp,48
204058a0:	fca42e23          	sw	a0,-36(s0)
204058a4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:120
    int rc = -1;
204058a8:	57fd                	li	a5,-1
204058aa:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    struct metal_interrupt *intc = _get_cpu_intc();
204058ae:	3539                	jal	204056bc <_get_cpu_intc>
204058b0:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123

    if (intc) {
204058b4:	fe842783          	lw	a5,-24(s0)
204058b8:	c395                	beqz	a5,204058dc <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:125
	/* Valid vector modes are VECTOR and DIRECT, anything else is invalid (-1) */
        switch (mode) {
204058ba:	fd842703          	lw	a4,-40(s0)
204058be:	4785                	li	a5,1
204058c0:	00e7ef63          	bltu	a5,a4,204058de <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
204058c4:	fe842783          	lw	a5,-24(s0)
204058c8:	439c                	lw	a5,0(a5)
204058ca:	43dc                	lw	a5,4(a5)
204058cc:	fd842583          	lw	a1,-40(s0)
204058d0:	fe842503          	lw	a0,-24(s0)
204058d4:	9782                	jalr	a5
204058d6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:129
            break;
204058da:	a011                	j	204058de <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131
        }
    }
204058dc:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    return rc;
204058de:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
}
204058e2:	853e                	mv	a0,a5
204058e4:	50b2                	lw	ra,44(sp)
204058e6:	5422                	lw	s0,40(sp)
204058e8:	6145                	addi	sp,sp,48
204058ea:	8082                	ret

204058ec <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:136

int __metal_driver_riscv_clint0_enable (struct metal_interrupt *controller, int id)
{
204058ec:	7139                	addi	sp,sp,-64
204058ee:	de06                	sw	ra,60(sp)
204058f0:	dc22                	sw	s0,56(sp)
204058f2:	0080                	addi	s0,sp,64
204058f4:	fca42623          	sw	a0,-52(s0)
204058f8:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:137
    int rc = -1;
204058fc:	57fd                	li	a5,-1
204058fe:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:139

    if ( id ) {
20405902:	fc842783          	lw	a5,-56(s0)
20405906:	c7c9                	beqz	a5,20405990 <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:140
        struct metal_interrupt *intc = NULL;
20405908:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2040590c:	3b45                	jal	204056bc <_get_cpu_intc>
2040590e:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20405912:	fcc42503          	lw	a0,-52(s0)
20405916:	36cd                	jal	204054f8 <__metal_driver_sifive_clint0_num_interrupts>
20405918:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144

        for(int i = 0; i < num_interrupts; i++) {
2040591c:	fe042223          	sw	zero,-28(s0)
20405920:	a091                	j	20405964 <__metal_driver_riscv_clint0_enable+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:145
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20405922:	fe442583          	lw	a1,-28(s0)
20405926:	fcc42503          	lw	a0,-52(s0)
2040592a:	390d                	jal	2040555c <__metal_driver_sifive_clint0_interrupt_lines>
2040592c:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20405930:	fe442583          	lw	a1,-28(s0)
20405934:	fcc42503          	lw	a0,-52(s0)
20405938:	36e5                	jal	20405520 <__metal_driver_sifive_clint0_interrupt_parents>
2040593a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
            if(cpu_intc == intc && id == line) {
2040593e:	fe042703          	lw	a4,-32(s0)
20405942:	fe842783          	lw	a5,-24(s0)
20405946:	00f71863          	bne	a4,a5,20405956 <__metal_driver_riscv_clint0_enable+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147 (discriminator 1)
2040594a:	fc842703          	lw	a4,-56(s0)
2040594e:	fd842783          	lw	a5,-40(s0)
20405952:	02f70063          	beq	a4,a5,20405972 <__metal_driver_riscv_clint0_enable+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:150 (discriminator 2)
                break;
            }
	    intc = NULL;
20405956:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
2040595a:	fe442783          	lw	a5,-28(s0)
2040595e:	0785                	addi	a5,a5,1
20405960:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 1)
20405964:	fe442703          	lw	a4,-28(s0)
20405968:	fdc42783          	lw	a5,-36(s0)
2040596c:	faf74be3          	blt	a4,a5,20405922 <__metal_driver_riscv_clint0_enable+0x36>
20405970:	a011                	j	20405974 <__metal_driver_riscv_clint0_enable+0x88>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
                break;
20405972:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154
        }
        
        /* Enable its interrupts with parent controller */
        if (intc) {
20405974:	fe842783          	lw	a5,-24(s0)
20405978:	cf81                	beqz	a5,20405990 <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
            rc = intc->vtable->interrupt_enable(intc, id);
2040597a:	fe842783          	lw	a5,-24(s0)
2040597e:	439c                	lw	a5,0(a5)
20405980:	53dc                	lw	a5,36(a5)
20405982:	fc842583          	lw	a1,-56(s0)
20405986:	fe842503          	lw	a0,-24(s0)
2040598a:	9782                	jalr	a5
2040598c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:159
        }
    }

    return rc;
20405990:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160
}
20405994:	853e                	mv	a0,a5
20405996:	50f2                	lw	ra,60(sp)
20405998:	5462                	lw	s0,56(sp)
2040599a:	6121                	addi	sp,sp,64
2040599c:	8082                	ret

2040599e <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:163

int __metal_driver_riscv_clint0_disable (struct metal_interrupt *controller, int id)
{
2040599e:	7139                	addi	sp,sp,-64
204059a0:	de06                	sw	ra,60(sp)
204059a2:	dc22                	sw	s0,56(sp)
204059a4:	0080                	addi	s0,sp,64
204059a6:	fca42623          	sw	a0,-52(s0)
204059aa:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
    int rc = -1;
204059ae:	57fd                	li	a5,-1
204059b0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166

    if ( id ) {
204059b4:	fc842783          	lw	a5,-56(s0)
204059b8:	cbc1                	beqz	a5,20405a48 <__metal_driver_riscv_clint0_disable+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:167
        struct metal_interrupt *intc = NULL;
204059ba:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204059be:	39fd                	jal	204056bc <_get_cpu_intc>
204059c0:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:169
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
204059c4:	fcc42503          	lw	a0,-52(s0)
204059c8:	b31ff0ef          	jal	ra,204054f8 <__metal_driver_sifive_clint0_num_interrupts>
204059cc:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171

        for(int i = 0; i < num_interrupts; i++) {
204059d0:	fe042223          	sw	zero,-28(s0)
204059d4:	a0a1                	j	20405a1c <__metal_driver_riscv_clint0_disable+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204059d6:	fe442583          	lw	a1,-28(s0)
204059da:	fcc42503          	lw	a0,-52(s0)
204059de:	b7fff0ef          	jal	ra,2040555c <__metal_driver_sifive_clint0_interrupt_lines>
204059e2:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204059e6:	fe442583          	lw	a1,-28(s0)
204059ea:	fcc42503          	lw	a0,-52(s0)
204059ee:	b33ff0ef          	jal	ra,20405520 <__metal_driver_sifive_clint0_interrupt_parents>
204059f2:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174
            if(cpu_intc == intc && id == line) {
204059f6:	fe042703          	lw	a4,-32(s0)
204059fa:	fe842783          	lw	a5,-24(s0)
204059fe:	00f71863          	bne	a4,a5,20405a0e <__metal_driver_riscv_clint0_disable+0x70>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174 (discriminator 1)
20405a02:	fc842703          	lw	a4,-56(s0)
20405a06:	fd842783          	lw	a5,-40(s0)
20405a0a:	02f70063          	beq	a4,a5,20405a2a <__metal_driver_riscv_clint0_disable+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177 (discriminator 2)
                break;
            }
	    intc = NULL;
20405a0e:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
20405a12:	fe442783          	lw	a5,-28(s0)
20405a16:	0785                	addi	a5,a5,1
20405a18:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 1)
20405a1c:	fe442703          	lw	a4,-28(s0)
20405a20:	fdc42783          	lw	a5,-36(s0)
20405a24:	faf749e3          	blt	a4,a5,204059d6 <__metal_driver_riscv_clint0_disable+0x38>
20405a28:	a011                	j	20405a2c <__metal_driver_riscv_clint0_disable+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:175
                break;
20405a2a:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181
        }
        
        /* Disable its interrupts with parent controller */
        if (intc) {
20405a2c:	fe842783          	lw	a5,-24(s0)
20405a30:	cf81                	beqz	a5,20405a48 <__metal_driver_riscv_clint0_disable+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
            rc = intc->vtable->interrupt_disable(intc, id);
20405a32:	fe842783          	lw	a5,-24(s0)
20405a36:	439c                	lw	a5,0(a5)
20405a38:	579c                	lw	a5,40(a5)
20405a3a:	fc842583          	lw	a1,-56(s0)
20405a3e:	fe842503          	lw	a0,-24(s0)
20405a42:	9782                	jalr	a5
20405a44:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        }
    }

    return rc;
20405a48:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:187
}
20405a4c:	853e                	mv	a0,a5
20405a4e:	50f2                	lw	ra,60(sp)
20405a50:	5462                	lw	s0,56(sp)
20405a52:	6121                	addi	sp,sp,64
20405a54:	8082                	ret

20405a56 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:191

int __metal_driver_riscv_clint0_command_request (struct metal_interrupt *controller,
                                               int command, void *data)
{
20405a56:	7179                	addi	sp,sp,-48
20405a58:	d606                	sw	ra,44(sp)
20405a5a:	d422                	sw	s0,40(sp)
20405a5c:	1800                	addi	s0,sp,48
20405a5e:	fca42e23          	sw	a0,-36(s0)
20405a62:	fcb42c23          	sw	a1,-40(s0)
20405a66:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:193
    int hartid;
    int rc = -1;
20405a6a:	57fd                	li	a5,-1
20405a6c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
    struct __metal_driver_riscv_clint0 *clint =
20405a70:	fdc42783          	lw	a5,-36(s0)
20405a74:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(controller);
20405a78:	fdc42503          	lw	a0,-36(s0)
20405a7c:	a53ff0ef          	jal	ra,204054ce <__metal_driver_sifive_clint0_control_base>
20405a80:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198

    switch (command) {
20405a84:	fd842703          	lw	a4,-40(s0)
20405a88:	4789                	li	a5,2
20405a8a:	04f70963          	beq	a4,a5,20405adc <__metal_driver_riscv_clint0_command_request+0x86>
20405a8e:	fd842703          	lw	a4,-40(s0)
20405a92:	4789                	li	a5,2
20405a94:	00e7c863          	blt	a5,a4,20405aa4 <__metal_driver_riscv_clint0_command_request+0x4e>
20405a98:	fd842703          	lw	a4,-40(s0)
20405a9c:	4785                	li	a5,1
20405a9e:	00f70e63          	beq	a4,a5,20405aba <__metal_driver_riscv_clint0_command_request+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
						    (hartid * 4)));
        }
        break;
    default:
	break;
20405aa2:	a8f1                	j	20405b7e <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198
    switch (command) {
20405aa4:	fd842703          	lw	a4,-40(s0)
20405aa8:	478d                	li	a5,3
20405aaa:	04f70d63          	beq	a4,a5,20405b04 <__metal_driver_riscv_clint0_command_request+0xae>
20405aae:	fd842703          	lw	a4,-40(s0)
20405ab2:	4791                	li	a5,4
20405ab4:	08f70963          	beq	a4,a5,20405b46 <__metal_driver_riscv_clint0_command_request+0xf0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
	break;
20405ab8:	a0d9                	j	20405b7e <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:200
        if (data) {
20405aba:	fd442783          	lw	a5,-44(s0)
20405abe:	cbcd                	beqz	a5,20405b70 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:201
	    *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20405ac0:	fe842503          	lw	a0,-24(s0)
20405ac4:	ac9ff0ef          	jal	ra,2040558c <__metal_clint0_mtime_get>
20405ac8:	87aa                	mv	a5,a0
20405aca:	882e                	mv	a6,a1
20405acc:	fd442703          	lw	a4,-44(s0)
20405ad0:	c31c                	sw	a5,0(a4)
20405ad2:	01072223          	sw	a6,4(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
            rc = 0;
20405ad6:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20405ada:	a859                	j	20405b70 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:206
	if (data) {
20405adc:	fd442783          	lw	a5,-44(s0)
20405ae0:	cbd1                	beqz	a5,20405b74 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
	    hartid = *(int *)data;
20405ae2:	fd442783          	lw	a5,-44(s0)
20405ae6:	439c                	lw	a5,0(a5)
20405ae8:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405aec:	fe042783          	lw	a5,-32(s0)
20405af0:	078a                	slli	a5,a5,0x2
20405af2:	873e                	mv	a4,a5
20405af4:	fe442783          	lw	a5,-28(s0)
20405af8:	97ba                	add	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:209
					       (hartid * 4))) = METAL_DISABLE;
20405afa:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:210
            rc = 0;
20405afe:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20405b02:	a88d                	j	20405b74 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
	if (data) {
20405b04:	fd442783          	lw	a5,-44(s0)
20405b08:	cba5                	beqz	a5,20405b78 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:215
	    hartid = *(int *)data;
20405b0a:	fd442783          	lw	a5,-44(s0)
20405b0e:	439c                	lw	a5,0(a5)
20405b10:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:216
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405b14:	fe042783          	lw	a5,-32(s0)
20405b18:	078a                	slli	a5,a5,0x2
20405b1a:	873e                	mv	a4,a5
20405b1c:	fe442783          	lw	a5,-28(s0)
20405b20:	97ba                	add	a5,a5,a4
20405b22:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
					       (hartid * 4))) = METAL_ENABLE;
20405b24:	4785                	li	a5,1
20405b26:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
	    __METAL_IO_FENCE(o,i);
20405b28:	0480000f          	fence	o,i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405b2c:	fe042783          	lw	a5,-32(s0)
20405b30:	078a                	slli	a5,a5,0x2
20405b32:	873e                	mv	a4,a5
20405b34:	fe442783          	lw	a5,-28(s0)
20405b38:	97ba                	add	a5,a5,a4
20405b3a:	439c                	lw	a5,0(a5)
20405b3c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
            rc = 0;
20405b40:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20405b44:	a815                	j	20405b78 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:234
        rc = 0;
20405b46:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
	if (data) {
20405b4a:	fd442783          	lw	a5,-44(s0)
20405b4e:	c79d                	beqz	a5,20405b7c <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
	    hartid = *(int *)data;
20405b50:	fd442783          	lw	a5,-44(s0)
20405b54:	439c                	lw	a5,0(a5)
20405b56:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405b5a:	fe042783          	lw	a5,-32(s0)
20405b5e:	078a                	slli	a5,a5,0x2
20405b60:	873e                	mv	a4,a5
20405b62:	fe442783          	lw	a5,-28(s0)
20405b66:	97ba                	add	a5,a5,a4
20405b68:	439c                	lw	a5,0(a5)
20405b6a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20405b6e:	a039                	j	20405b7c <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20405b70:	0001                	nop
20405b72:	a031                	j	20405b7e <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20405b74:	0001                	nop
20405b76:	a021                	j	20405b7e <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20405b78:	0001                	nop
20405b7a:	a011                	j	20405b7e <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20405b7c:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:245
    }

    return rc;
20405b7e:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:246
}
20405b82:	853e                	mv	a0,a5
20405b84:	50b2                	lw	ra,44(sp)
20405b86:	5422                	lw	s0,40(sp)
20405b88:	6145                	addi	sp,sp,48
20405b8a:	8082                	ret

20405b8c <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249

int __metal_driver_riscv_clint0_clear_interrupt (struct metal_interrupt *controller, int id)
{
20405b8c:	7179                	addi	sp,sp,-48
20405b8e:	d606                	sw	ra,44(sp)
20405b90:	d422                	sw	s0,40(sp)
20405b92:	1800                	addi	s0,sp,48
20405b94:	fca42e23          	sw	a0,-36(s0)
20405b98:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:250
    int hartid = metal_cpu_get_current_hartid();
20405b9c:	5bf020ef          	jal	ra,2040895a <metal_cpu_get_current_hartid>
20405ba0:	87aa                	mv	a5,a0
20405ba2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
    return __metal_driver_riscv_clint0_command_request(controller,
20405ba6:	fec40793          	addi	a5,s0,-20
20405baa:	863e                	mv	a2,a5
20405bac:	4589                	li	a1,2
20405bae:	fdc42503          	lw	a0,-36(s0)
20405bb2:	3555                	jal	20405a56 <__metal_driver_riscv_clint0_command_request>
20405bb4:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
						METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20405bb6:	853e                	mv	a0,a5
20405bb8:	50b2                	lw	ra,44(sp)
20405bba:	5422                	lw	s0,40(sp)
20405bbc:	6145                	addi	sp,sp,48
20405bbe:	8082                	ret

20405bc0 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256

int __metal_driver_riscv_clint0_set_interrupt (struct metal_interrupt *controller, int id)
{
20405bc0:	7179                	addi	sp,sp,-48
20405bc2:	d606                	sw	ra,44(sp)
20405bc4:	d422                	sw	s0,40(sp)
20405bc6:	1800                	addi	s0,sp,48
20405bc8:	fca42e23          	sw	a0,-36(s0)
20405bcc:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
    int hartid = metal_cpu_get_current_hartid();
20405bd0:	58b020ef          	jal	ra,2040895a <metal_cpu_get_current_hartid>
20405bd4:	87aa                	mv	a5,a0
20405bd6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
    return __metal_driver_riscv_clint0_command_request(controller,
20405bda:	fec40793          	addi	a5,s0,-20
20405bde:	863e                	mv	a2,a5
20405be0:	458d                	li	a1,3
20405be2:	fdc42503          	lw	a0,-36(s0)
20405be6:	3d85                	jal	20405a56 <__metal_driver_riscv_clint0_command_request>
20405be8:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:260
						METAL_SOFTWARE_IPI_SET, &hartid);
}
20405bea:	853e                	mv	a0,a5
20405bec:	50b2                	lw	ra,44(sp)
20405bee:	5422                	lw	s0,40(sp)
20405bf0:	6145                	addi	sp,sp,48
20405bf2:	8082                	ret

20405bf4 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:195



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20405bf4:	1101                	addi	sp,sp,-32
20405bf6:	ce22                	sw	s0,28(sp)
20405bf8:	1000                	addi	s0,sp,32
20405bfa:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:196
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405bfe:	fec42703          	lw	a4,-20(s0)
20405c02:	81418793          	addi	a5,gp,-2028 # 8000079c <__metal_dt_cpu_0>
20405c06:	00f71463          	bne	a4,a5,20405c0e <__metal_driver_cpu_hartid+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:197
		return 0;
20405c0a:	4781                	li	a5,0
20405c0c:	a011                	j	20405c10 <__metal_driver_cpu_hartid+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:200
	}
	else {
		return -1;
20405c0e:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:202
	}
}
20405c10:	853e                	mv	a0,a5
20405c12:	4472                	lw	s0,28(sp)
20405c14:	6105                	addi	sp,sp,32
20405c16:	8082                	ret

20405c18 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:205

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20405c18:	1101                	addi	sp,sp,-32
20405c1a:	ce22                	sw	s0,28(sp)
20405c1c:	1000                	addi	s0,sp,32
20405c1e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:206
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405c22:	fec42703          	lw	a4,-20(s0)
20405c26:	81418793          	addi	a5,gp,-2028 # 8000079c <__metal_dt_cpu_0>
20405c2a:	00f71763          	bne	a4,a5,20405c38 <__metal_driver_cpu_timebase+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:207
		return 1000000;
20405c2e:	000f47b7          	lui	a5,0xf4
20405c32:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20405c36:	a011                	j	20405c3a <__metal_driver_cpu_timebase+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:210
	}
	else {
		return 0;
20405c38:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:212
	}
}
20405c3a:	853e                	mv	a0,a5
20405c3c:	4472                	lw	s0,28(sp)
20405c3e:	6105                	addi	sp,sp,32
20405c40:	8082                	ret

20405c42 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:215

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20405c42:	1101                	addi	sp,sp,-32
20405c44:	ce22                	sw	s0,28(sp)
20405c46:	1000                	addi	s0,sp,32
20405c48:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:216
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405c4c:	fec42703          	lw	a4,-20(s0)
20405c50:	81418793          	addi	a5,gp,-2028 # 8000079c <__metal_dt_cpu_0>
20405c54:	00f71763          	bne	a4,a5,20405c62 <__metal_driver_cpu_interrupt_controller+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:217
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20405c58:	800007b7          	lui	a5,0x80000
20405c5c:	0b078793          	addi	a5,a5,176 # 800000b0 <metal_segment_heap_target_end+0xffffebdc>
20405c60:	a011                	j	20405c64 <__metal_driver_cpu_interrupt_controller+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:220
	}
	else {
		return NULL;
20405c62:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:222
	}
}
20405c64:	853e                	mv	a0,a5
20405c66:	4472                	lw	s0,28(sp)
20405c68:	6105                	addi	sp,sp,32
20405c6a:	8082                	ret

20405c6c <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:14
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu, unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid)
{
20405c6c:	1101                	addi	sp,sp,-32
20405c6e:	ce22                	sw	s0,28(sp)
20405c70:	1000                	addi	s0,sp,32
20405c72:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:15
    if (hartid < __METAL_DT_MAX_HARTS) {
20405c76:	fec42783          	lw	a5,-20(s0)
20405c7a:	00f04c63          	bgtz	a5,20405c92 <__metal_driver_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:16
        return &(__metal_cpu_table[hartid]->cpu);
20405c7e:	800007b7          	lui	a5,0x80000
20405c82:	fec42703          	lw	a4,-20(s0)
20405c86:	070a                	slli	a4,a4,0x2
20405c88:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20405c8c:	97ba                	add	a5,a5,a4
20405c8e:	439c                	lw	a5,0(a5)
20405c90:	a011                	j	20405c94 <__metal_driver_cpu_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:18
    }
    return (struct metal_cpu *)NULL;
20405c92:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:19
}
20405c94:	853e                	mv	a0,a5
20405c96:	4472                	lw	s0,28(sp)
20405c98:	6105                	addi	sp,sp,32
20405c9a:	8082                	ret

20405c9c <__metal_myhart_id>:
__metal_myhart_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:22

uintptr_t __metal_myhart_id (void)
{
20405c9c:	1101                	addi	sp,sp,-32
20405c9e:	ce22                	sw	s0,28(sp)
20405ca0:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:24
    uintptr_t myhart;
    __asm__ volatile ("csrr %0, mhartid" : "=r"(myhart));
20405ca2:	f14027f3          	csrr	a5,mhartid
20405ca6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
    return myhart;
20405caa:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
}
20405cae:	853e                	mv	a0,a5
20405cb0:	4472                	lw	s0,28(sp)
20405cb2:	6105                	addi	sp,sp,32
20405cb4:	8082                	ret

20405cb6 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
    for (ptr = base; ptr < (base + size); ptr++){
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable (void) {
20405cb6:	1101                	addi	sp,sp,-32
20405cb8:	ce22                	sw	s0,28(sp)
20405cba:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:38
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20405cbc:	47a1                	li	a5,8
20405cbe:	3007a7f3          	csrrs	a5,mstatus,a5
20405cc2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:39
}
20405cc6:	0001                	nop
20405cc8:	4472                	lw	s0,28(sp)
20405cca:	6105                	addi	sp,sp,32
20405ccc:	8082                	ret

20405cce <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:41

void __metal_interrupt_global_disable (void) {
20405cce:	1101                	addi	sp,sp,-32
20405cd0:	ce22                	sw	s0,28(sp)
20405cd2:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:43
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20405cd4:	47a1                	li	a5,8
20405cd6:	3007b7f3          	csrrc	a5,mstatus,a5
20405cda:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:44
}
20405cde:	0001                	nop
20405ce0:	4472                	lw	s0,28(sp)
20405ce2:	6105                	addi	sp,sp,32
20405ce4:	8082                	ret

20405ce6 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:46

void __metal_interrupt_software_enable (void) {
20405ce6:	1101                	addi	sp,sp,-32
20405ce8:	ce22                	sw	s0,28(sp)
20405cea:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:48
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20405cec:	47a1                	li	a5,8
20405cee:	3047a7f3          	csrrs	a5,mie,a5
20405cf2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:49
}
20405cf6:	0001                	nop
20405cf8:	4472                	lw	s0,28(sp)
20405cfa:	6105                	addi	sp,sp,32
20405cfc:	8082                	ret

20405cfe <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:51

void __metal_interrupt_software_disable (void) {
20405cfe:	1101                	addi	sp,sp,-32
20405d00:	ce22                	sw	s0,28(sp)
20405d02:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:53
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20405d04:	47a1                	li	a5,8
20405d06:	3047b7f3          	csrrc	a5,mie,a5
20405d0a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
}
20405d0e:	0001                	nop
20405d10:	4472                	lw	s0,28(sp)
20405d12:	6105                	addi	sp,sp,32
20405d14:	8082                	ret

20405d16 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:56

void __metal_interrupt_timer_enable (void) {
20405d16:	1101                	addi	sp,sp,-32
20405d18:	ce22                	sw	s0,28(sp)
20405d1a:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:58
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20405d1c:	08000793          	li	a5,128
20405d20:	3047a7f3          	csrrs	a5,mie,a5
20405d24:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59
}
20405d28:	0001                	nop
20405d2a:	4472                	lw	s0,28(sp)
20405d2c:	6105                	addi	sp,sp,32
20405d2e:	8082                	ret

20405d30 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61

void __metal_interrupt_timer_disable (void) {
20405d30:	1101                	addi	sp,sp,-32
20405d32:	ce22                	sw	s0,28(sp)
20405d34:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:63
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20405d36:	08000793          	li	a5,128
20405d3a:	3047b7f3          	csrrc	a5,mie,a5
20405d3e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
}
20405d42:	0001                	nop
20405d44:	4472                	lw	s0,28(sp)
20405d46:	6105                	addi	sp,sp,32
20405d48:	8082                	ret

20405d4a <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_external_enable (void) {
20405d4a:	1101                	addi	sp,sp,-32
20405d4c:	ce22                	sw	s0,28(sp)
20405d4e:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20405d50:	6785                	lui	a5,0x1
20405d52:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20405d56:	3047a7f3          	csrrs	a5,mie,a5
20405d5a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:69
}
20405d5e:	0001                	nop
20405d60:	4472                	lw	s0,28(sp)
20405d62:	6105                	addi	sp,sp,32
20405d64:	8082                	ret

20405d66 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71

void __metal_interrupt_external_disable (void) {
20405d66:	1101                	addi	sp,sp,-32
20405d68:	ce22                	sw	s0,28(sp)
20405d6a:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73
    unsigned long m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20405d6c:	6785                	lui	a5,0x1
20405d6e:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20405d72:	3047b7f3          	csrrc	a5,mie,a5
20405d76:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:74
}
20405d7a:	0001                	nop
20405d7c:	4472                	lw	s0,28(sp)
20405d7e:	6105                	addi	sp,sp,32
20405d80:	8082                	ret

20405d82 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:76

void __metal_interrupt_local_enable (int id) {
20405d82:	7179                	addi	sp,sp,-48
20405d84:	d622                	sw	s0,44(sp)
20405d86:	1800                	addi	s0,sp,48
20405d88:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:77
    uintptr_t b = 1 << id;
20405d8c:	fdc42783          	lw	a5,-36(s0)
20405d90:	4705                	li	a4,1
20405d92:	00f717b3          	sll	a5,a4,a5
20405d96:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:79
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20405d9a:	fec42783          	lw	a5,-20(s0)
20405d9e:	3047a7f3          	csrrs	a5,mie,a5
20405da2:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80
}
20405da6:	0001                	nop
20405da8:	5432                	lw	s0,44(sp)
20405daa:	6145                	addi	sp,sp,48
20405dac:	8082                	ret

20405dae <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82

void __metal_interrupt_local_disable (int id) {
20405dae:	7179                	addi	sp,sp,-48
20405db0:	d622                	sw	s0,44(sp)
20405db2:	1800                	addi	s0,sp,48
20405db4:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:83
    uintptr_t b = 1 << id;
20405db8:	fdc42783          	lw	a5,-36(s0)
20405dbc:	4705                	li	a4,1
20405dbe:	00f717b3          	sll	a5,a4,a5
20405dc2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20405dc6:	fec42783          	lw	a5,-20(s0)
20405dca:	3047b7f3          	csrrc	a5,mie,a5
20405dce:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:86
}
20405dd2:	0001                	nop
20405dd4:	5432                	lw	s0,44(sp)
20405dd6:	6145                	addi	sp,sp,48
20405dd8:	8082                	ret

20405dda <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:88

void __metal_default_exception_handler (struct metal_cpu *cpu, int ecode) {
20405dda:	1101                	addi	sp,sp,-32
20405ddc:	ce06                	sw	ra,28(sp)
20405dde:	cc22                	sw	s0,24(sp)
20405de0:	1000                	addi	s0,sp,32
20405de2:	fea42623          	sw	a0,-20(s0)
20405de6:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    metal_shutdown(100);
20405dea:	06400513          	li	a0,100
20405dee:	387020ef          	jal	ra,20408974 <metal_shutdown>

20405df2 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
}

void __metal_default_interrupt_handler (int id, void *priv) {
20405df2:	1101                	addi	sp,sp,-32
20405df4:	ce06                	sw	ra,28(sp)
20405df6:	cc22                	sw	s0,24(sp)
20405df8:	1000                	addi	s0,sp,32
20405dfa:	fea42623          	sw	a0,-20(s0)
20405dfe:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:93
    metal_shutdown(200);
20405e02:	0c800513          	li	a0,200
20405e06:	36f020ef          	jal	ra,20408974 <metal_shutdown>

20405e0a <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:97
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler (void) {
20405e0a:	715d                	addi	sp,sp,-80
20405e0c:	c686                	sw	ra,76(sp)
20405e0e:	c496                	sw	t0,72(sp)
20405e10:	c29a                	sw	t1,68(sp)
20405e12:	c09e                	sw	t2,64(sp)
20405e14:	de22                	sw	s0,60(sp)
20405e16:	dc2a                	sw	a0,56(sp)
20405e18:	da2e                	sw	a1,52(sp)
20405e1a:	d832                	sw	a2,48(sp)
20405e1c:	d636                	sw	a3,44(sp)
20405e1e:	d43a                	sw	a4,40(sp)
20405e20:	d23e                	sw	a5,36(sp)
20405e22:	d042                	sw	a6,32(sp)
20405e24:	ce46                	sw	a7,28(sp)
20405e26:	cc72                	sw	t3,24(sp)
20405e28:	ca76                	sw	t4,20(sp)
20405e2a:	c87a                	sw	t5,16(sp)
20405e2c:	c67e                	sw	t6,12(sp)
20405e2e:	0880                	addi	s0,sp,80
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:98
    metal_shutdown(300);
20405e30:	12c00513          	li	a0,300
20405e34:	341020ef          	jal	ra,20408974 <metal_shutdown>

20405e38 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_software_interrupt_vector_handler (void) {
20405e38:	711d                	addi	sp,sp,-96
20405e3a:	ce86                	sw	ra,92(sp)
20405e3c:	cc96                	sw	t0,88(sp)
20405e3e:	ca9a                	sw	t1,84(sp)
20405e40:	c89e                	sw	t2,80(sp)
20405e42:	c6a2                	sw	s0,76(sp)
20405e44:	c4aa                	sw	a0,72(sp)
20405e46:	c2ae                	sw	a1,68(sp)
20405e48:	c0b2                	sw	a2,64(sp)
20405e4a:	de36                	sw	a3,60(sp)
20405e4c:	dc3a                	sw	a4,56(sp)
20405e4e:	da3e                	sw	a5,52(sp)
20405e50:	d842                	sw	a6,48(sp)
20405e52:	d646                	sw	a7,44(sp)
20405e54:	d472                	sw	t3,40(sp)
20405e56:	d276                	sw	t4,36(sp)
20405e58:	d07a                	sw	t5,32(sp)
20405e5a:	ce7e                	sw	t6,28(sp)
20405e5c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405e5e:	3d3d                	jal	20405c9c <__metal_myhart_id>
20405e60:	872a                	mv	a4,a0
20405e62:	800007b7          	lui	a5,0x80000
20405e66:	070a                	slli	a4,a4,0x2
20405e68:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20405e6c:	97ba                	add	a5,a5,a4
20405e6e:	439c                	lw	a5,0(a5)
20405e70:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

    if ( cpu ) {
20405e74:	fac42783          	lw	a5,-84(s0)
20405e78:	c785                	beqz	a5,20405ea0 <metal_software_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:109
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405e7a:	fac42503          	lw	a0,-84(s0)
20405e7e:	33d1                	jal	20405c42 <__metal_driver_cpu_interrupt_controller>
20405e80:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].exint_data;
20405e84:	fa842783          	lw	a5,-88(s0)
20405e88:	0e07a783          	lw	a5,224(a5)
20405e8c:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
        intc->metal_int_table[METAL_INTERRUPT_ID_SW].handler(METAL_INTERRUPT_ID_SW, priv);
20405e90:	fa842783          	lw	a5,-88(s0)
20405e94:	0d87a783          	lw	a5,216(a5)
20405e98:	fa442583          	lw	a1,-92(s0)
20405e9c:	450d                	li	a0,3
20405e9e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113
    }
}
20405ea0:	0001                	nop
20405ea2:	40f6                	lw	ra,92(sp)
20405ea4:	42e6                	lw	t0,88(sp)
20405ea6:	4356                	lw	t1,84(sp)
20405ea8:	43c6                	lw	t2,80(sp)
20405eaa:	4436                	lw	s0,76(sp)
20405eac:	4526                	lw	a0,72(sp)
20405eae:	4596                	lw	a1,68(sp)
20405eb0:	4606                	lw	a2,64(sp)
20405eb2:	56f2                	lw	a3,60(sp)
20405eb4:	5762                	lw	a4,56(sp)
20405eb6:	57d2                	lw	a5,52(sp)
20405eb8:	5842                	lw	a6,48(sp)
20405eba:	58b2                	lw	a7,44(sp)
20405ebc:	5e22                	lw	t3,40(sp)
20405ebe:	5e92                	lw	t4,36(sp)
20405ec0:	5f02                	lw	t5,32(sp)
20405ec2:	4ff2                	lw	t6,28(sp)
20405ec4:	6125                	addi	sp,sp,96
20405ec6:	30200073          	mret

20405eca <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:115

void __metal_default_sw_handler (int id, void *priv) {
20405eca:	7179                	addi	sp,sp,-48
20405ecc:	d606                	sw	ra,44(sp)
20405ece:	d422                	sw	s0,40(sp)
20405ed0:	1800                	addi	s0,sp,48
20405ed2:	fca42e23          	sw	a0,-36(s0)
20405ed6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405eda:	33c9                	jal	20405c9c <__metal_myhart_id>
20405edc:	872a                	mv	a4,a0
20405ede:	800007b7          	lui	a5,0x80000
20405ee2:	070a                	slli	a4,a4,0x2
20405ee4:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20405ee8:	97ba                	add	a5,a5,a4
20405eea:	439c                	lw	a5,0(a5)
20405eec:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:120

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
20405ef0:	342027f3          	csrr	a5,mcause
20405ef4:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:121
    if ( cpu ) {
20405ef8:	fec42783          	lw	a5,-20(s0)
20405efc:	c795                	beqz	a5,20405f28 <__metal_default_sw_handler+0x5e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405efe:	fec42503          	lw	a0,-20(s0)
20405f02:	3381                	jal	20405c42 <__metal_driver_cpu_interrupt_controller>
20405f04:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:124
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE]((struct metal_cpu *)cpu, id);
20405f08:	fe842783          	lw	a5,-24(s0)
20405f0c:	3ff7f793          	andi	a5,a5,1023
20405f10:	fe442703          	lw	a4,-28(s0)
20405f14:	0e078793          	addi	a5,a5,224
20405f18:	078a                	slli	a5,a5,0x2
20405f1a:	97ba                	add	a5,a5,a4
20405f1c:	479c                	lw	a5,8(a5)
20405f1e:	fdc42583          	lw	a1,-36(s0)
20405f22:	fec42503          	lw	a0,-20(s0)
20405f26:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:126
    }
}
20405f28:	0001                	nop
20405f2a:	50b2                	lw	ra,44(sp)
20405f2c:	5422                	lw	s0,40(sp)
20405f2e:	6145                	addi	sp,sp,48
20405f30:	8082                	ret

20405f32 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_timer_interrupt_vector_handler (void) {
20405f32:	711d                	addi	sp,sp,-96
20405f34:	ce86                	sw	ra,92(sp)
20405f36:	cc96                	sw	t0,88(sp)
20405f38:	ca9a                	sw	t1,84(sp)
20405f3a:	c89e                	sw	t2,80(sp)
20405f3c:	c6a2                	sw	s0,76(sp)
20405f3e:	c4aa                	sw	a0,72(sp)
20405f40:	c2ae                	sw	a1,68(sp)
20405f42:	c0b2                	sw	a2,64(sp)
20405f44:	de36                	sw	a3,60(sp)
20405f46:	dc3a                	sw	a4,56(sp)
20405f48:	da3e                	sw	a5,52(sp)
20405f4a:	d842                	sw	a6,48(sp)
20405f4c:	d646                	sw	a7,44(sp)
20405f4e:	d472                	sw	t3,40(sp)
20405f50:	d276                	sw	t4,36(sp)
20405f52:	d07a                	sw	t5,32(sp)
20405f54:	ce7e                	sw	t6,28(sp)
20405f56:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405f58:	3391                	jal	20405c9c <__metal_myhart_id>
20405f5a:	872a                	mv	a4,a0
20405f5c:	800007b7          	lui	a5,0x80000
20405f60:	070a                	slli	a4,a4,0x2
20405f62:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20405f66:	97ba                	add	a5,a5,a4
20405f68:	439c                	lw	a5,0(a5)
20405f6a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:134

    if ( cpu ) {
20405f6e:	fac42783          	lw	a5,-84(s0)
20405f72:	c785                	beqz	a5,20405f9a <metal_timer_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:136
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20405f74:	fac42503          	lw	a0,-84(s0)
20405f78:	31e9                	jal	20405c42 <__metal_driver_cpu_interrupt_controller>
20405f7a:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].exint_data;
20405f7e:	fa842783          	lw	a5,-88(s0)
20405f82:	1407a783          	lw	a5,320(a5)
20405f86:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
        intc->metal_int_table[METAL_INTERRUPT_ID_TMR].handler(METAL_INTERRUPT_ID_TMR, priv);
20405f8a:	fa842783          	lw	a5,-88(s0)
20405f8e:	1387a783          	lw	a5,312(a5)
20405f92:	fa442583          	lw	a1,-92(s0)
20405f96:	451d                	li	a0,7
20405f98:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
    }
}
20405f9a:	0001                	nop
20405f9c:	40f6                	lw	ra,92(sp)
20405f9e:	42e6                	lw	t0,88(sp)
20405fa0:	4356                	lw	t1,84(sp)
20405fa2:	43c6                	lw	t2,80(sp)
20405fa4:	4436                	lw	s0,76(sp)
20405fa6:	4526                	lw	a0,72(sp)
20405fa8:	4596                	lw	a1,68(sp)
20405faa:	4606                	lw	a2,64(sp)
20405fac:	56f2                	lw	a3,60(sp)
20405fae:	5762                	lw	a4,56(sp)
20405fb0:	57d2                	lw	a5,52(sp)
20405fb2:	5842                	lw	a6,48(sp)
20405fb4:	58b2                	lw	a7,44(sp)
20405fb6:	5e22                	lw	t3,40(sp)
20405fb8:	5e92                	lw	t4,36(sp)
20405fba:	5f02                	lw	t5,32(sp)
20405fbc:	4ff2                	lw	t6,28(sp)
20405fbe:	6125                	addi	sp,sp,96
20405fc0:	30200073          	mret

20405fc4 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:142

void __metal_default_timer_handler (int id, void *priv) {
20405fc4:	7179                	addi	sp,sp,-48
20405fc6:	d606                	sw	ra,44(sp)
20405fc8:	d422                	sw	s0,40(sp)
20405fca:	1800                	addi	s0,sp,48
20405fcc:	fca42e23          	sw	a0,-36(s0)
20405fd0:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:143
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20405fd4:	31e1                	jal	20405c9c <__metal_myhart_id>
20405fd6:	87aa                	mv	a5,a0
20405fd8:	853e                	mv	a0,a5
20405fda:	3949                	jal	20405c6c <__metal_driver_cpu_get>
20405fdc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20405fe0:	fec42503          	lw	a0,-20(s0)
20405fe4:	1d0010ef          	jal	ra,204071b4 <__metal_driver_cpu_mtime_get>
20405fe8:	fea42023          	sw	a0,-32(s0)
20405fec:	feb42223          	sw	a1,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:147

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20405ff0:	fe042783          	lw	a5,-32(s0)
20405ff4:	fe442803          	lw	a6,-28(s0)
20405ff8:	45a9                	li	a1,10
20405ffa:	4601                	li	a2,0
20405ffc:	00b786b3          	add	a3,a5,a1
20406000:	8536                	mv	a0,a3
20406002:	00f53533          	sltu	a0,a0,a5
20406006:	00c80733          	add	a4,a6,a2
2040600a:	00e507b3          	add	a5,a0,a4
2040600e:	873e                	mv	a4,a5
20406010:	87b6                	mv	a5,a3
20406012:	883a                	mv	a6,a4
20406014:	85be                	mv	a1,a5
20406016:	8642                	mv	a2,a6
20406018:	fec42503          	lw	a0,-20(s0)
2040601c:	1fe010ef          	jal	ra,2040721a <__metal_driver_cpu_mtimecmp_set>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148
}
20406020:	0001                	nop
20406022:	50b2                	lw	ra,44(sp)
20406024:	5422                	lw	s0,40(sp)
20406026:	6145                	addi	sp,sp,48
20406028:	8082                	ret
	...

20406080 <__metal_exception_handler>:
__metal_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:165
        intc->metal_int_table[METAL_INTERRUPT_ID_EXT].handler(METAL_INTERRUPT_ID_EXT, priv);
    }
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler (void) {
20406080:	7119                	addi	sp,sp,-128
20406082:	de86                	sw	ra,124(sp)
20406084:	dc96                	sw	t0,120(sp)
20406086:	da9a                	sw	t1,116(sp)
20406088:	d89e                	sw	t2,112(sp)
2040608a:	d6a2                	sw	s0,108(sp)
2040608c:	d4aa                	sw	a0,104(sp)
2040608e:	d2ae                	sw	a1,100(sp)
20406090:	d0b2                	sw	a2,96(sp)
20406092:	ceb6                	sw	a3,92(sp)
20406094:	ccba                	sw	a4,88(sp)
20406096:	cabe                	sw	a5,84(sp)
20406098:	c8c2                	sw	a6,80(sp)
2040609a:	c6c6                	sw	a7,76(sp)
2040609c:	c4f2                	sw	t3,72(sp)
2040609e:	c2f6                	sw	t4,68(sp)
204060a0:	c0fa                	sw	t5,64(sp)
204060a2:	de7e                	sw	t6,60(sp)
204060a4:	0100                	addi	s0,sp,128
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:170
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204060a6:	bf7ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
204060aa:	872a                	mv	a4,a0
204060ac:	800007b7          	lui	a5,0x80000
204060b0:	070a                	slli	a4,a4,0x2
204060b2:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
204060b6:	97ba                	add	a5,a5,a4
204060b8:	439c                	lw	a5,0(a5)
204060ba:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:172

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
204060be:	342027f3          	csrr	a5,mcause
204060c2:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:173
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
204060c6:	341027f3          	csrr	a5,mepc
204060ca:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    __asm__ volatile ("csrr %0, mtval" : "=r"(mtval));
204060ce:	343027f3          	csrr	a5,mtval
204060d2:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:175
    __asm__ volatile ("csrr %0, mtvec" : "=r"(mtvec));
204060d6:	305027f3          	csrr	a5,mtvec
204060da:	f8f42e23          	sw	a5,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177

    if ( cpu ) {
204060de:	fac42783          	lw	a5,-84(s0)
204060e2:	c7e9                	beqz	a5,204061ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204060e4:	fac42503          	lw	a0,-84(s0)
204060e8:	b5bff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
204060ec:	f8a42c23          	sw	a0,-104(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:180
        id = mcause & METAL_MCAUSE_CAUSE;
204060f0:	fa842783          	lw	a5,-88(s0)
204060f4:	3ff7f793          	andi	a5,a5,1023
204060f8:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181
        if (mcause & METAL_MCAUSE_INTR) {
204060fc:	fa842783          	lw	a5,-88(s0)
20406100:	0807d863          	bgez	a5,20406190 <__metal_exception_handler+0x110>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20406104:	f9442703          	lw	a4,-108(s0)
20406108:	47ad                	li	a5,11
2040610a:	00e7d763          	bge	a5,a4,20406118 <__metal_exception_handler+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183 (discriminator 1)
               ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
2040610e:	f9c42783          	lw	a5,-100(s0)
20406112:	03f7f793          	andi	a5,a5,63
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20406116:	ef9d                	bnez	a5,20406154 <__metal_exception_handler+0xd4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
                priv = intc->metal_int_table[id].exint_data;
20406118:	f9842683          	lw	a3,-104(s0)
2040611c:	f9442703          	lw	a4,-108(s0)
20406120:	87ba                	mv	a5,a4
20406122:	0786                	slli	a5,a5,0x1
20406124:	97ba                	add	a5,a5,a4
20406126:	078e                	slli	a5,a5,0x3
20406128:	97b6                	add	a5,a5,a3
2040612a:	0987a783          	lw	a5,152(a5)
2040612e:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
                intc->metal_int_table[id].handler(id, priv);
20406132:	f9842683          	lw	a3,-104(s0)
20406136:	f9442703          	lw	a4,-108(s0)
2040613a:	87ba                	mv	a5,a4
2040613c:	0786                	slli	a5,a5,0x1
2040613e:	97ba                	add	a5,a5,a4
20406140:	078e                	slli	a5,a5,0x3
20406142:	97b6                	add	a5,a5,a3
20406144:	0907a783          	lw	a5,144(a5)
20406148:	f8c42583          	lw	a1,-116(s0)
2040614c:	f9442503          	lw	a0,-108(s0)
20406150:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
		return;
20406152:	a8a9                	j	204061ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20406154:	f9c42783          	lw	a5,-100(s0)
20406158:	03f7f713          	andi	a4,a5,63
2040615c:	4789                	li	a5,2
2040615e:	04f71763          	bne	a4,a5,204061ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192
    		uintptr_t mtvt;
    		metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile ("csrr %0, 0x307" : "=r"(mtvt));
20406162:	307027f3          	csrr	a5,mtvt
20406166:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
               	priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2040616a:	f9842783          	lw	a5,-104(s0)
2040616e:	0dc7a783          	lw	a5,220(a5)
20406172:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
               	mtvt_handler = (metal_interrupt_handler_t)*(uintptr_t *)mtvt;
20406176:	f9042783          	lw	a5,-112(s0)
2040617a:	439c                	lw	a5,0(a5)
2040617c:	f8f42423          	sw	a5,-120(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
               	mtvt_handler(id, priv);
20406180:	f8842783          	lw	a5,-120(s0)
20406184:	f8c42583          	lw	a1,-116(s0)
20406188:	f9442503          	lw	a0,-108(s0)
2040618c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:196
		return;
2040618e:	a839                	j	204061ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:199
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20406190:	f9842703          	lw	a4,-104(s0)
20406194:	f9442783          	lw	a5,-108(s0)
20406198:	0e078793          	addi	a5,a5,224
2040619c:	078a                	slli	a5,a5,0x2
2040619e:	97ba                	add	a5,a5,a4
204061a0:	479c                	lw	a5,8(a5)
204061a2:	f9442583          	lw	a1,-108(s0)
204061a6:	fac42503          	lw	a0,-84(s0)
204061aa:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
        }
    }
}
204061ac:	50f6                	lw	ra,124(sp)
204061ae:	52e6                	lw	t0,120(sp)
204061b0:	5356                	lw	t1,116(sp)
204061b2:	53c6                	lw	t2,112(sp)
204061b4:	5436                	lw	s0,108(sp)
204061b6:	5526                	lw	a0,104(sp)
204061b8:	5596                	lw	a1,100(sp)
204061ba:	5606                	lw	a2,96(sp)
204061bc:	46f6                	lw	a3,92(sp)
204061be:	4766                	lw	a4,88(sp)
204061c0:	47d6                	lw	a5,84(sp)
204061c2:	4846                	lw	a6,80(sp)
204061c4:	48b6                	lw	a7,76(sp)
204061c6:	4e26                	lw	t3,72(sp)
204061c8:	4e96                	lw	t4,68(sp)
204061ca:	4f06                	lw	t5,64(sp)
204061cc:	5ff2                	lw	t6,60(sp)
204061ce:	6109                	addi	sp,sp,128
204061d0:	30200073          	mret
	...

204061fa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler (void) {
204061fa:	711d                	addi	sp,sp,-96
204061fc:	ce86                	sw	ra,92(sp)
204061fe:	cc96                	sw	t0,88(sp)
20406200:	ca9a                	sw	t1,84(sp)
20406202:	c89e                	sw	t2,80(sp)
20406204:	c6a2                	sw	s0,76(sp)
20406206:	c4aa                	sw	a0,72(sp)
20406208:	c2ae                	sw	a1,68(sp)
2040620a:	c0b2                	sw	a2,64(sp)
2040620c:	de36                	sw	a3,60(sp)
2040620e:	dc3a                	sw	a4,56(sp)
20406210:	da3e                	sw	a5,52(sp)
20406212:	d842                	sw	a6,48(sp)
20406214:	d646                	sw	a7,44(sp)
20406216:	d472                	sw	t3,40(sp)
20406218:	d276                	sw	t4,36(sp)
2040621a:	d07a                	sw	t5,32(sp)
2040621c:	ce7e                	sw	t6,28(sp)
2040621e:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406220:	a7dff0ef          	jal	ra,20405c9c <__metal_myhart_id>
20406224:	872a                	mv	a4,a0
20406226:	800007b7          	lui	a5,0x80000
2040622a:	070a                	slli	a4,a4,0x2
2040622c:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20406230:	97ba                	add	a5,a5,a4
20406232:	439c                	lw	a5,0(a5)
20406234:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:210

    if ( cpu ) {
20406238:	fac42783          	lw	a5,-84(s0)
2040623c:	c78d                	beqz	a5,20406266 <metal_lc0_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:212
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040623e:	fac42503          	lw	a0,-84(s0)
20406242:	a01ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
20406246:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:213
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC0].exint_data;
2040624a:	fa842783          	lw	a5,-88(s0)
2040624e:	2187a783          	lw	a5,536(a5)
20406252:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214
        intc->metal_int_table[METAL_INTERRUPT_ID_LC0].handler(METAL_INTERRUPT_ID_LC0, priv);
20406256:	fa842783          	lw	a5,-88(s0)
2040625a:	2107a783          	lw	a5,528(a5)
2040625e:	fa442583          	lw	a1,-92(s0)
20406262:	4541                	li	a0,16
20406264:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
    }
}
20406266:	0001                	nop
20406268:	40f6                	lw	ra,92(sp)
2040626a:	42e6                	lw	t0,88(sp)
2040626c:	4356                	lw	t1,84(sp)
2040626e:	43c6                	lw	t2,80(sp)
20406270:	4436                	lw	s0,76(sp)
20406272:	4526                	lw	a0,72(sp)
20406274:	4596                	lw	a1,68(sp)
20406276:	4606                	lw	a2,64(sp)
20406278:	56f2                	lw	a3,60(sp)
2040627a:	5762                	lw	a4,56(sp)
2040627c:	57d2                	lw	a5,52(sp)
2040627e:	5842                	lw	a6,48(sp)
20406280:	58b2                	lw	a7,44(sp)
20406282:	5e22                	lw	t3,40(sp)
20406284:	5e92                	lw	t4,36(sp)
20406286:	5f02                	lw	t5,32(sp)
20406288:	4ff2                	lw	t6,28(sp)
2040628a:	6125                	addi	sp,sp,96
2040628c:	30200073          	mret

20406290 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler (void) {
20406290:	711d                	addi	sp,sp,-96
20406292:	ce86                	sw	ra,92(sp)
20406294:	cc96                	sw	t0,88(sp)
20406296:	ca9a                	sw	t1,84(sp)
20406298:	c89e                	sw	t2,80(sp)
2040629a:	c6a2                	sw	s0,76(sp)
2040629c:	c4aa                	sw	a0,72(sp)
2040629e:	c2ae                	sw	a1,68(sp)
204062a0:	c0b2                	sw	a2,64(sp)
204062a2:	de36                	sw	a3,60(sp)
204062a4:	dc3a                	sw	a4,56(sp)
204062a6:	da3e                	sw	a5,52(sp)
204062a8:	d842                	sw	a6,48(sp)
204062aa:	d646                	sw	a7,44(sp)
204062ac:	d472                	sw	t3,40(sp)
204062ae:	d276                	sw	t4,36(sp)
204062b0:	d07a                	sw	t5,32(sp)
204062b2:	ce7e                	sw	t6,28(sp)
204062b4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:222
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204062b6:	9e7ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
204062ba:	872a                	mv	a4,a0
204062bc:	800007b7          	lui	a5,0x80000
204062c0:	070a                	slli	a4,a4,0x2
204062c2:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
204062c6:	97ba                	add	a5,a5,a4
204062c8:	439c                	lw	a5,0(a5)
204062ca:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

    if ( cpu ) {
204062ce:	fac42783          	lw	a5,-84(s0)
204062d2:	c78d                	beqz	a5,204062fc <metal_lc1_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204062d4:	fac42503          	lw	a0,-84(s0)
204062d8:	96bff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
204062dc:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:227
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC1].exint_data;
204062e0:	fa842783          	lw	a5,-88(s0)
204062e4:	2307a783          	lw	a5,560(a5)
204062e8:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:228
        intc->metal_int_table[METAL_INTERRUPT_ID_LC1].handler(METAL_INTERRUPT_ID_LC1, priv);
204062ec:	fa842783          	lw	a5,-88(s0)
204062f0:	2287a783          	lw	a5,552(a5)
204062f4:	fa442583          	lw	a1,-92(s0)
204062f8:	4545                	li	a0,17
204062fa:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    }
}
204062fc:	0001                	nop
204062fe:	40f6                	lw	ra,92(sp)
20406300:	42e6                	lw	t0,88(sp)
20406302:	4356                	lw	t1,84(sp)
20406304:	43c6                	lw	t2,80(sp)
20406306:	4436                	lw	s0,76(sp)
20406308:	4526                	lw	a0,72(sp)
2040630a:	4596                	lw	a1,68(sp)
2040630c:	4606                	lw	a2,64(sp)
2040630e:	56f2                	lw	a3,60(sp)
20406310:	5762                	lw	a4,56(sp)
20406312:	57d2                	lw	a5,52(sp)
20406314:	5842                	lw	a6,48(sp)
20406316:	58b2                	lw	a7,44(sp)
20406318:	5e22                	lw	t3,40(sp)
2040631a:	5e92                	lw	t4,36(sp)
2040631c:	5f02                	lw	t5,32(sp)
2040631e:	4ff2                	lw	t6,28(sp)
20406320:	6125                	addi	sp,sp,96
20406322:	30200073          	mret

20406326 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:233

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler (void) {
20406326:	711d                	addi	sp,sp,-96
20406328:	ce86                	sw	ra,92(sp)
2040632a:	cc96                	sw	t0,88(sp)
2040632c:	ca9a                	sw	t1,84(sp)
2040632e:	c89e                	sw	t2,80(sp)
20406330:	c6a2                	sw	s0,76(sp)
20406332:	c4aa                	sw	a0,72(sp)
20406334:	c2ae                	sw	a1,68(sp)
20406336:	c0b2                	sw	a2,64(sp)
20406338:	de36                	sw	a3,60(sp)
2040633a:	dc3a                	sw	a4,56(sp)
2040633c:	da3e                	sw	a5,52(sp)
2040633e:	d842                	sw	a6,48(sp)
20406340:	d646                	sw	a7,44(sp)
20406342:	d472                	sw	t3,40(sp)
20406344:	d276                	sw	t4,36(sp)
20406346:	d07a                	sw	t5,32(sp)
20406348:	ce7e                	sw	t6,28(sp)
2040634a:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040634c:	951ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
20406350:	872a                	mv	a4,a0
20406352:	800007b7          	lui	a5,0x80000
20406356:	070a                	slli	a4,a4,0x2
20406358:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
2040635c:	97ba                	add	a5,a5,a4
2040635e:	439c                	lw	a5,0(a5)
20406360:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:238

    if ( cpu ) {
20406364:	fac42783          	lw	a5,-84(s0)
20406368:	c78d                	beqz	a5,20406392 <metal_lc2_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040636a:	fac42503          	lw	a0,-84(s0)
2040636e:	8d5ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
20406372:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC2].exint_data;
20406376:	fa842783          	lw	a5,-88(s0)
2040637a:	2487a783          	lw	a5,584(a5)
2040637e:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:242
        intc->metal_int_table[METAL_INTERRUPT_ID_LC2].handler(METAL_INTERRUPT_ID_LC2, priv);
20406382:	fa842783          	lw	a5,-88(s0)
20406386:	2407a783          	lw	a5,576(a5)
2040638a:	fa442583          	lw	a1,-92(s0)
2040638e:	4549                	li	a0,18
20406390:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244
    }
}
20406392:	0001                	nop
20406394:	40f6                	lw	ra,92(sp)
20406396:	42e6                	lw	t0,88(sp)
20406398:	4356                	lw	t1,84(sp)
2040639a:	43c6                	lw	t2,80(sp)
2040639c:	4436                	lw	s0,76(sp)
2040639e:	4526                	lw	a0,72(sp)
204063a0:	4596                	lw	a1,68(sp)
204063a2:	4606                	lw	a2,64(sp)
204063a4:	56f2                	lw	a3,60(sp)
204063a6:	5762                	lw	a4,56(sp)
204063a8:	57d2                	lw	a5,52(sp)
204063aa:	5842                	lw	a6,48(sp)
204063ac:	58b2                	lw	a7,44(sp)
204063ae:	5e22                	lw	t3,40(sp)
204063b0:	5e92                	lw	t4,36(sp)
204063b2:	5f02                	lw	t5,32(sp)
204063b4:	4ff2                	lw	t6,28(sp)
204063b6:	6125                	addi	sp,sp,96
204063b8:	30200073          	mret

204063bc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:247

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler (void) {
204063bc:	711d                	addi	sp,sp,-96
204063be:	ce86                	sw	ra,92(sp)
204063c0:	cc96                	sw	t0,88(sp)
204063c2:	ca9a                	sw	t1,84(sp)
204063c4:	c89e                	sw	t2,80(sp)
204063c6:	c6a2                	sw	s0,76(sp)
204063c8:	c4aa                	sw	a0,72(sp)
204063ca:	c2ae                	sw	a1,68(sp)
204063cc:	c0b2                	sw	a2,64(sp)
204063ce:	de36                	sw	a3,60(sp)
204063d0:	dc3a                	sw	a4,56(sp)
204063d2:	da3e                	sw	a5,52(sp)
204063d4:	d842                	sw	a6,48(sp)
204063d6:	d646                	sw	a7,44(sp)
204063d8:	d472                	sw	t3,40(sp)
204063da:	d276                	sw	t4,36(sp)
204063dc:	d07a                	sw	t5,32(sp)
204063de:	ce7e                	sw	t6,28(sp)
204063e0:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204063e2:	8bbff0ef          	jal	ra,20405c9c <__metal_myhart_id>
204063e6:	872a                	mv	a4,a0
204063e8:	800007b7          	lui	a5,0x80000
204063ec:	070a                	slli	a4,a4,0x2
204063ee:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
204063f2:	97ba                	add	a5,a5,a4
204063f4:	439c                	lw	a5,0(a5)
204063f6:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:252

    if ( cpu ) {
204063fa:	fac42783          	lw	a5,-84(s0)
204063fe:	c78d                	beqz	a5,20406428 <metal_lc3_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406400:	fac42503          	lw	a0,-84(s0)
20406404:	83fff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
20406408:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC3].exint_data;
2040640c:	fa842783          	lw	a5,-88(s0)
20406410:	2607a783          	lw	a5,608(a5)
20406414:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
        intc->metal_int_table[METAL_INTERRUPT_ID_LC3].handler(METAL_INTERRUPT_ID_LC3, priv);
20406418:	fa842783          	lw	a5,-88(s0)
2040641c:	2587a783          	lw	a5,600(a5)
20406420:	fa442583          	lw	a1,-92(s0)
20406424:	454d                	li	a0,19
20406426:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:258
    }
}
20406428:	0001                	nop
2040642a:	40f6                	lw	ra,92(sp)
2040642c:	42e6                	lw	t0,88(sp)
2040642e:	4356                	lw	t1,84(sp)
20406430:	43c6                	lw	t2,80(sp)
20406432:	4436                	lw	s0,76(sp)
20406434:	4526                	lw	a0,72(sp)
20406436:	4596                	lw	a1,68(sp)
20406438:	4606                	lw	a2,64(sp)
2040643a:	56f2                	lw	a3,60(sp)
2040643c:	5762                	lw	a4,56(sp)
2040643e:	57d2                	lw	a5,52(sp)
20406440:	5842                	lw	a6,48(sp)
20406442:	58b2                	lw	a7,44(sp)
20406444:	5e22                	lw	t3,40(sp)
20406446:	5e92                	lw	t4,36(sp)
20406448:	5f02                	lw	t5,32(sp)
2040644a:	4ff2                	lw	t6,28(sp)
2040644c:	6125                	addi	sp,sp,96
2040644e:	30200073          	mret

20406452 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler (void) {
20406452:	711d                	addi	sp,sp,-96
20406454:	ce86                	sw	ra,92(sp)
20406456:	cc96                	sw	t0,88(sp)
20406458:	ca9a                	sw	t1,84(sp)
2040645a:	c89e                	sw	t2,80(sp)
2040645c:	c6a2                	sw	s0,76(sp)
2040645e:	c4aa                	sw	a0,72(sp)
20406460:	c2ae                	sw	a1,68(sp)
20406462:	c0b2                	sw	a2,64(sp)
20406464:	de36                	sw	a3,60(sp)
20406466:	dc3a                	sw	a4,56(sp)
20406468:	da3e                	sw	a5,52(sp)
2040646a:	d842                	sw	a6,48(sp)
2040646c:	d646                	sw	a7,44(sp)
2040646e:	d472                	sw	t3,40(sp)
20406470:	d276                	sw	t4,36(sp)
20406472:	d07a                	sw	t5,32(sp)
20406474:	ce7e                	sw	t6,28(sp)
20406476:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:264
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406478:	825ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
2040647c:	872a                	mv	a4,a0
2040647e:	800007b7          	lui	a5,0x80000
20406482:	070a                	slli	a4,a4,0x2
20406484:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20406488:	97ba                	add	a5,a5,a4
2040648a:	439c                	lw	a5,0(a5)
2040648c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266

    if ( cpu ) {
20406490:	fac42783          	lw	a5,-84(s0)
20406494:	c78d                	beqz	a5,204064be <metal_lc4_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:268
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406496:	fac42503          	lw	a0,-84(s0)
2040649a:	fa8ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
2040649e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:269
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC4].exint_data;
204064a2:	fa842783          	lw	a5,-88(s0)
204064a6:	2787a783          	lw	a5,632(a5)
204064aa:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:270
        intc->metal_int_table[METAL_INTERRUPT_ID_LC4].handler(METAL_INTERRUPT_ID_LC4, priv);
204064ae:	fa842783          	lw	a5,-88(s0)
204064b2:	2707a783          	lw	a5,624(a5)
204064b6:	fa442583          	lw	a1,-92(s0)
204064ba:	4551                	li	a0,20
204064bc:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    }
}
204064be:	0001                	nop
204064c0:	40f6                	lw	ra,92(sp)
204064c2:	42e6                	lw	t0,88(sp)
204064c4:	4356                	lw	t1,84(sp)
204064c6:	43c6                	lw	t2,80(sp)
204064c8:	4436                	lw	s0,76(sp)
204064ca:	4526                	lw	a0,72(sp)
204064cc:	4596                	lw	a1,68(sp)
204064ce:	4606                	lw	a2,64(sp)
204064d0:	56f2                	lw	a3,60(sp)
204064d2:	5762                	lw	a4,56(sp)
204064d4:	57d2                	lw	a5,52(sp)
204064d6:	5842                	lw	a6,48(sp)
204064d8:	58b2                	lw	a7,44(sp)
204064da:	5e22                	lw	t3,40(sp)
204064dc:	5e92                	lw	t4,36(sp)
204064de:	5f02                	lw	t5,32(sp)
204064e0:	4ff2                	lw	t6,28(sp)
204064e2:	6125                	addi	sp,sp,96
204064e4:	30200073          	mret

204064e8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:275

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler (void) {
204064e8:	711d                	addi	sp,sp,-96
204064ea:	ce86                	sw	ra,92(sp)
204064ec:	cc96                	sw	t0,88(sp)
204064ee:	ca9a                	sw	t1,84(sp)
204064f0:	c89e                	sw	t2,80(sp)
204064f2:	c6a2                	sw	s0,76(sp)
204064f4:	c4aa                	sw	a0,72(sp)
204064f6:	c2ae                	sw	a1,68(sp)
204064f8:	c0b2                	sw	a2,64(sp)
204064fa:	de36                	sw	a3,60(sp)
204064fc:	dc3a                	sw	a4,56(sp)
204064fe:	da3e                	sw	a5,52(sp)
20406500:	d842                	sw	a6,48(sp)
20406502:	d646                	sw	a7,44(sp)
20406504:	d472                	sw	t3,40(sp)
20406506:	d276                	sw	t4,36(sp)
20406508:	d07a                	sw	t5,32(sp)
2040650a:	ce7e                	sw	t6,28(sp)
2040650c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040650e:	f8eff0ef          	jal	ra,20405c9c <__metal_myhart_id>
20406512:	872a                	mv	a4,a0
20406514:	800007b7          	lui	a5,0x80000
20406518:	070a                	slli	a4,a4,0x2
2040651a:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
2040651e:	97ba                	add	a5,a5,a4
20406520:	439c                	lw	a5,0(a5)
20406522:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:280

    if ( cpu ) {
20406526:	fac42783          	lw	a5,-84(s0)
2040652a:	c78d                	beqz	a5,20406554 <metal_lc5_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:282
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040652c:	fac42503          	lw	a0,-84(s0)
20406530:	f12ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
20406534:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC5].exint_data;
20406538:	fa842783          	lw	a5,-88(s0)
2040653c:	2907a783          	lw	a5,656(a5)
20406540:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
        intc->metal_int_table[METAL_INTERRUPT_ID_LC5].handler(METAL_INTERRUPT_ID_LC5, priv);
20406544:	fa842783          	lw	a5,-88(s0)
20406548:	2887a783          	lw	a5,648(a5)
2040654c:	fa442583          	lw	a1,-92(s0)
20406550:	4555                	li	a0,21
20406552:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:286
    }
}
20406554:	0001                	nop
20406556:	40f6                	lw	ra,92(sp)
20406558:	42e6                	lw	t0,88(sp)
2040655a:	4356                	lw	t1,84(sp)
2040655c:	43c6                	lw	t2,80(sp)
2040655e:	4436                	lw	s0,76(sp)
20406560:	4526                	lw	a0,72(sp)
20406562:	4596                	lw	a1,68(sp)
20406564:	4606                	lw	a2,64(sp)
20406566:	56f2                	lw	a3,60(sp)
20406568:	5762                	lw	a4,56(sp)
2040656a:	57d2                	lw	a5,52(sp)
2040656c:	5842                	lw	a6,48(sp)
2040656e:	58b2                	lw	a7,44(sp)
20406570:	5e22                	lw	t3,40(sp)
20406572:	5e92                	lw	t4,36(sp)
20406574:	5f02                	lw	t5,32(sp)
20406576:	4ff2                	lw	t6,28(sp)
20406578:	6125                	addi	sp,sp,96
2040657a:	30200073          	mret

2040657e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler (void) {
2040657e:	711d                	addi	sp,sp,-96
20406580:	ce86                	sw	ra,92(sp)
20406582:	cc96                	sw	t0,88(sp)
20406584:	ca9a                	sw	t1,84(sp)
20406586:	c89e                	sw	t2,80(sp)
20406588:	c6a2                	sw	s0,76(sp)
2040658a:	c4aa                	sw	a0,72(sp)
2040658c:	c2ae                	sw	a1,68(sp)
2040658e:	c0b2                	sw	a2,64(sp)
20406590:	de36                	sw	a3,60(sp)
20406592:	dc3a                	sw	a4,56(sp)
20406594:	da3e                	sw	a5,52(sp)
20406596:	d842                	sw	a6,48(sp)
20406598:	d646                	sw	a7,44(sp)
2040659a:	d472                	sw	t3,40(sp)
2040659c:	d276                	sw	t4,36(sp)
2040659e:	d07a                	sw	t5,32(sp)
204065a0:	ce7e                	sw	t6,28(sp)
204065a2:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:292
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204065a4:	ef8ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
204065a8:	872a                	mv	a4,a0
204065aa:	800007b7          	lui	a5,0x80000
204065ae:	070a                	slli	a4,a4,0x2
204065b0:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
204065b4:	97ba                	add	a5,a5,a4
204065b6:	439c                	lw	a5,0(a5)
204065b8:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:294

    if ( cpu ) {
204065bc:	fac42783          	lw	a5,-84(s0)
204065c0:	c78d                	beqz	a5,204065ea <metal_lc6_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204065c2:	fac42503          	lw	a0,-84(s0)
204065c6:	e7cff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
204065ca:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC6].exint_data;
204065ce:	fa842783          	lw	a5,-88(s0)
204065d2:	2a87a783          	lw	a5,680(a5)
204065d6:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:298
        intc->metal_int_table[METAL_INTERRUPT_ID_LC6].handler(METAL_INTERRUPT_ID_LC6, priv);
204065da:	fa842783          	lw	a5,-88(s0)
204065de:	2a07a783          	lw	a5,672(a5)
204065e2:	fa442583          	lw	a1,-92(s0)
204065e6:	4559                	li	a0,22
204065e8:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:300
    }
}
204065ea:	0001                	nop
204065ec:	40f6                	lw	ra,92(sp)
204065ee:	42e6                	lw	t0,88(sp)
204065f0:	4356                	lw	t1,84(sp)
204065f2:	43c6                	lw	t2,80(sp)
204065f4:	4436                	lw	s0,76(sp)
204065f6:	4526                	lw	a0,72(sp)
204065f8:	4596                	lw	a1,68(sp)
204065fa:	4606                	lw	a2,64(sp)
204065fc:	56f2                	lw	a3,60(sp)
204065fe:	5762                	lw	a4,56(sp)
20406600:	57d2                	lw	a5,52(sp)
20406602:	5842                	lw	a6,48(sp)
20406604:	58b2                	lw	a7,44(sp)
20406606:	5e22                	lw	t3,40(sp)
20406608:	5e92                	lw	t4,36(sp)
2040660a:	5f02                	lw	t5,32(sp)
2040660c:	4ff2                	lw	t6,28(sp)
2040660e:	6125                	addi	sp,sp,96
20406610:	30200073          	mret

20406614 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler (void) {
20406614:	711d                	addi	sp,sp,-96
20406616:	ce86                	sw	ra,92(sp)
20406618:	cc96                	sw	t0,88(sp)
2040661a:	ca9a                	sw	t1,84(sp)
2040661c:	c89e                	sw	t2,80(sp)
2040661e:	c6a2                	sw	s0,76(sp)
20406620:	c4aa                	sw	a0,72(sp)
20406622:	c2ae                	sw	a1,68(sp)
20406624:	c0b2                	sw	a2,64(sp)
20406626:	de36                	sw	a3,60(sp)
20406628:	dc3a                	sw	a4,56(sp)
2040662a:	da3e                	sw	a5,52(sp)
2040662c:	d842                	sw	a6,48(sp)
2040662e:	d646                	sw	a7,44(sp)
20406630:	d472                	sw	t3,40(sp)
20406632:	d276                	sw	t4,36(sp)
20406634:	d07a                	sw	t5,32(sp)
20406636:	ce7e                	sw	t6,28(sp)
20406638:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:306
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040663a:	e62ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
2040663e:	872a                	mv	a4,a0
20406640:	800007b7          	lui	a5,0x80000
20406644:	070a                	slli	a4,a4,0x2
20406646:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
2040664a:	97ba                	add	a5,a5,a4
2040664c:	439c                	lw	a5,0(a5)
2040664e:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:308

    if ( cpu ) {
20406652:	fac42783          	lw	a5,-84(s0)
20406656:	c78d                	beqz	a5,20406680 <metal_lc7_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:310
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406658:	fac42503          	lw	a0,-84(s0)
2040665c:	de6ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
20406660:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC7].exint_data;
20406664:	fa842783          	lw	a5,-88(s0)
20406668:	2c07a783          	lw	a5,704(a5)
2040666c:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:312
        intc->metal_int_table[METAL_INTERRUPT_ID_LC7].handler(METAL_INTERRUPT_ID_LC7, priv);
20406670:	fa842783          	lw	a5,-88(s0)
20406674:	2b87a783          	lw	a5,696(a5)
20406678:	fa442583          	lw	a1,-92(s0)
2040667c:	455d                	li	a0,23
2040667e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
    }
}
20406680:	0001                	nop
20406682:	40f6                	lw	ra,92(sp)
20406684:	42e6                	lw	t0,88(sp)
20406686:	4356                	lw	t1,84(sp)
20406688:	43c6                	lw	t2,80(sp)
2040668a:	4436                	lw	s0,76(sp)
2040668c:	4526                	lw	a0,72(sp)
2040668e:	4596                	lw	a1,68(sp)
20406690:	4606                	lw	a2,64(sp)
20406692:	56f2                	lw	a3,60(sp)
20406694:	5762                	lw	a4,56(sp)
20406696:	57d2                	lw	a5,52(sp)
20406698:	5842                	lw	a6,48(sp)
2040669a:	58b2                	lw	a7,44(sp)
2040669c:	5e22                	lw	t3,40(sp)
2040669e:	5e92                	lw	t4,36(sp)
204066a0:	5f02                	lw	t5,32(sp)
204066a2:	4ff2                	lw	t6,28(sp)
204066a4:	6125                	addi	sp,sp,96
204066a6:	30200073          	mret

204066aa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler (void) {
204066aa:	711d                	addi	sp,sp,-96
204066ac:	ce86                	sw	ra,92(sp)
204066ae:	cc96                	sw	t0,88(sp)
204066b0:	ca9a                	sw	t1,84(sp)
204066b2:	c89e                	sw	t2,80(sp)
204066b4:	c6a2                	sw	s0,76(sp)
204066b6:	c4aa                	sw	a0,72(sp)
204066b8:	c2ae                	sw	a1,68(sp)
204066ba:	c0b2                	sw	a2,64(sp)
204066bc:	de36                	sw	a3,60(sp)
204066be:	dc3a                	sw	a4,56(sp)
204066c0:	da3e                	sw	a5,52(sp)
204066c2:	d842                	sw	a6,48(sp)
204066c4:	d646                	sw	a7,44(sp)
204066c6:	d472                	sw	t3,40(sp)
204066c8:	d276                	sw	t4,36(sp)
204066ca:	d07a                	sw	t5,32(sp)
204066cc:	ce7e                	sw	t6,28(sp)
204066ce:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204066d0:	dccff0ef          	jal	ra,20405c9c <__metal_myhart_id>
204066d4:	872a                	mv	a4,a0
204066d6:	800007b7          	lui	a5,0x80000
204066da:	070a                	slli	a4,a4,0x2
204066dc:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
204066e0:	97ba                	add	a5,a5,a4
204066e2:	439c                	lw	a5,0(a5)
204066e4:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322

    if ( cpu ) {
204066e8:	fac42783          	lw	a5,-84(s0)
204066ec:	c78d                	beqz	a5,20406716 <metal_lc8_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204066ee:	fac42503          	lw	a0,-84(s0)
204066f2:	d50ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
204066f6:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:325
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC8].exint_data;
204066fa:	fa842783          	lw	a5,-88(s0)
204066fe:	2d87a783          	lw	a5,728(a5)
20406702:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:326
        intc->metal_int_table[METAL_INTERRUPT_ID_LC8].handler(METAL_INTERRUPT_ID_LC8, priv);
20406706:	fa842783          	lw	a5,-88(s0)
2040670a:	2d07a783          	lw	a5,720(a5)
2040670e:	fa442583          	lw	a1,-92(s0)
20406712:	4561                	li	a0,24
20406714:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
    }
}
20406716:	0001                	nop
20406718:	40f6                	lw	ra,92(sp)
2040671a:	42e6                	lw	t0,88(sp)
2040671c:	4356                	lw	t1,84(sp)
2040671e:	43c6                	lw	t2,80(sp)
20406720:	4436                	lw	s0,76(sp)
20406722:	4526                	lw	a0,72(sp)
20406724:	4596                	lw	a1,68(sp)
20406726:	4606                	lw	a2,64(sp)
20406728:	56f2                	lw	a3,60(sp)
2040672a:	5762                	lw	a4,56(sp)
2040672c:	57d2                	lw	a5,52(sp)
2040672e:	5842                	lw	a6,48(sp)
20406730:	58b2                	lw	a7,44(sp)
20406732:	5e22                	lw	t3,40(sp)
20406734:	5e92                	lw	t4,36(sp)
20406736:	5f02                	lw	t5,32(sp)
20406738:	4ff2                	lw	t6,28(sp)
2040673a:	6125                	addi	sp,sp,96
2040673c:	30200073          	mret

20406740 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler (void) {
20406740:	711d                	addi	sp,sp,-96
20406742:	ce86                	sw	ra,92(sp)
20406744:	cc96                	sw	t0,88(sp)
20406746:	ca9a                	sw	t1,84(sp)
20406748:	c89e                	sw	t2,80(sp)
2040674a:	c6a2                	sw	s0,76(sp)
2040674c:	c4aa                	sw	a0,72(sp)
2040674e:	c2ae                	sw	a1,68(sp)
20406750:	c0b2                	sw	a2,64(sp)
20406752:	de36                	sw	a3,60(sp)
20406754:	dc3a                	sw	a4,56(sp)
20406756:	da3e                	sw	a5,52(sp)
20406758:	d842                	sw	a6,48(sp)
2040675a:	d646                	sw	a7,44(sp)
2040675c:	d472                	sw	t3,40(sp)
2040675e:	d276                	sw	t4,36(sp)
20406760:	d07a                	sw	t5,32(sp)
20406762:	ce7e                	sw	t6,28(sp)
20406764:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406766:	d36ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
2040676a:	872a                	mv	a4,a0
2040676c:	800007b7          	lui	a5,0x80000
20406770:	070a                	slli	a4,a4,0x2
20406772:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20406776:	97ba                	add	a5,a5,a4
20406778:	439c                	lw	a5,0(a5)
2040677a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336

    if ( cpu ) {
2040677e:	fac42783          	lw	a5,-84(s0)
20406782:	c78d                	beqz	a5,204067ac <metal_lc9_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406784:	fac42503          	lw	a0,-84(s0)
20406788:	cbaff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
2040678c:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:339
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC9].exint_data;
20406790:	fa842783          	lw	a5,-88(s0)
20406794:	2f07a783          	lw	a5,752(a5)
20406798:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        intc->metal_int_table[METAL_INTERRUPT_ID_LC9].handler(METAL_INTERRUPT_ID_LC9, priv);
2040679c:	fa842783          	lw	a5,-88(s0)
204067a0:	2e87a783          	lw	a5,744(a5)
204067a4:	fa442583          	lw	a1,-92(s0)
204067a8:	4565                	li	a0,25
204067aa:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
    }
}
204067ac:	0001                	nop
204067ae:	40f6                	lw	ra,92(sp)
204067b0:	42e6                	lw	t0,88(sp)
204067b2:	4356                	lw	t1,84(sp)
204067b4:	43c6                	lw	t2,80(sp)
204067b6:	4436                	lw	s0,76(sp)
204067b8:	4526                	lw	a0,72(sp)
204067ba:	4596                	lw	a1,68(sp)
204067bc:	4606                	lw	a2,64(sp)
204067be:	56f2                	lw	a3,60(sp)
204067c0:	5762                	lw	a4,56(sp)
204067c2:	57d2                	lw	a5,52(sp)
204067c4:	5842                	lw	a6,48(sp)
204067c6:	58b2                	lw	a7,44(sp)
204067c8:	5e22                	lw	t3,40(sp)
204067ca:	5e92                	lw	t4,36(sp)
204067cc:	5f02                	lw	t5,32(sp)
204067ce:	4ff2                	lw	t6,28(sp)
204067d0:	6125                	addi	sp,sp,96
204067d2:	30200073          	mret

204067d6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:345

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc10_interrupt_vector_handler (void) {
204067d6:	711d                	addi	sp,sp,-96
204067d8:	ce86                	sw	ra,92(sp)
204067da:	cc96                	sw	t0,88(sp)
204067dc:	ca9a                	sw	t1,84(sp)
204067de:	c89e                	sw	t2,80(sp)
204067e0:	c6a2                	sw	s0,76(sp)
204067e2:	c4aa                	sw	a0,72(sp)
204067e4:	c2ae                	sw	a1,68(sp)
204067e6:	c0b2                	sw	a2,64(sp)
204067e8:	de36                	sw	a3,60(sp)
204067ea:	dc3a                	sw	a4,56(sp)
204067ec:	da3e                	sw	a5,52(sp)
204067ee:	d842                	sw	a6,48(sp)
204067f0:	d646                	sw	a7,44(sp)
204067f2:	d472                	sw	t3,40(sp)
204067f4:	d276                	sw	t4,36(sp)
204067f6:	d07a                	sw	t5,32(sp)
204067f8:	ce7e                	sw	t6,28(sp)
204067fa:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:348
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204067fc:	ca0ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
20406800:	872a                	mv	a4,a0
20406802:	800007b7          	lui	a5,0x80000
20406806:	070a                	slli	a4,a4,0x2
20406808:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
2040680c:	97ba                	add	a5,a5,a4
2040680e:	439c                	lw	a5,0(a5)
20406810:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:350

    if ( cpu ) {
20406814:	fac42783          	lw	a5,-84(s0)
20406818:	c78d                	beqz	a5,20406842 <metal_lc10_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:352
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040681a:	fac42503          	lw	a0,-84(s0)
2040681e:	c24ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
20406822:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:353
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC10].exint_data;
20406826:	fa842783          	lw	a5,-88(s0)
2040682a:	3087a783          	lw	a5,776(a5)
2040682e:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:354
        intc->metal_int_table[METAL_INTERRUPT_ID_LC10].handler(METAL_INTERRUPT_ID_LC10, priv);
20406832:	fa842783          	lw	a5,-88(s0)
20406836:	3007a783          	lw	a5,768(a5)
2040683a:	fa442583          	lw	a1,-92(s0)
2040683e:	4569                	li	a0,26
20406840:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:356
    }
}
20406842:	0001                	nop
20406844:	40f6                	lw	ra,92(sp)
20406846:	42e6                	lw	t0,88(sp)
20406848:	4356                	lw	t1,84(sp)
2040684a:	43c6                	lw	t2,80(sp)
2040684c:	4436                	lw	s0,76(sp)
2040684e:	4526                	lw	a0,72(sp)
20406850:	4596                	lw	a1,68(sp)
20406852:	4606                	lw	a2,64(sp)
20406854:	56f2                	lw	a3,60(sp)
20406856:	5762                	lw	a4,56(sp)
20406858:	57d2                	lw	a5,52(sp)
2040685a:	5842                	lw	a6,48(sp)
2040685c:	58b2                	lw	a7,44(sp)
2040685e:	5e22                	lw	t3,40(sp)
20406860:	5e92                	lw	t4,36(sp)
20406862:	5f02                	lw	t5,32(sp)
20406864:	4ff2                	lw	t6,28(sp)
20406866:	6125                	addi	sp,sp,96
20406868:	30200073          	mret

2040686c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:359

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc11_interrupt_vector_handler (void) {
2040686c:	711d                	addi	sp,sp,-96
2040686e:	ce86                	sw	ra,92(sp)
20406870:	cc96                	sw	t0,88(sp)
20406872:	ca9a                	sw	t1,84(sp)
20406874:	c89e                	sw	t2,80(sp)
20406876:	c6a2                	sw	s0,76(sp)
20406878:	c4aa                	sw	a0,72(sp)
2040687a:	c2ae                	sw	a1,68(sp)
2040687c:	c0b2                	sw	a2,64(sp)
2040687e:	de36                	sw	a3,60(sp)
20406880:	dc3a                	sw	a4,56(sp)
20406882:	da3e                	sw	a5,52(sp)
20406884:	d842                	sw	a6,48(sp)
20406886:	d646                	sw	a7,44(sp)
20406888:	d472                	sw	t3,40(sp)
2040688a:	d276                	sw	t4,36(sp)
2040688c:	d07a                	sw	t5,32(sp)
2040688e:	ce7e                	sw	t6,28(sp)
20406890:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:362
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406892:	c0aff0ef          	jal	ra,20405c9c <__metal_myhart_id>
20406896:	872a                	mv	a4,a0
20406898:	800007b7          	lui	a5,0x80000
2040689c:	070a                	slli	a4,a4,0x2
2040689e:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
204068a2:	97ba                	add	a5,a5,a4
204068a4:	439c                	lw	a5,0(a5)
204068a6:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:364

    if ( cpu ) {
204068aa:	fac42783          	lw	a5,-84(s0)
204068ae:	c78d                	beqz	a5,204068d8 <metal_lc11_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:366
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204068b0:	fac42503          	lw	a0,-84(s0)
204068b4:	b8eff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
204068b8:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:367
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC11].exint_data;
204068bc:	fa842783          	lw	a5,-88(s0)
204068c0:	3207a783          	lw	a5,800(a5)
204068c4:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        intc->metal_int_table[METAL_INTERRUPT_ID_LC11].handler(METAL_INTERRUPT_ID_LC11, priv);
204068c8:	fa842783          	lw	a5,-88(s0)
204068cc:	3187a783          	lw	a5,792(a5)
204068d0:	fa442583          	lw	a1,-92(s0)
204068d4:	456d                	li	a0,27
204068d6:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    }
}
204068d8:	0001                	nop
204068da:	40f6                	lw	ra,92(sp)
204068dc:	42e6                	lw	t0,88(sp)
204068de:	4356                	lw	t1,84(sp)
204068e0:	43c6                	lw	t2,80(sp)
204068e2:	4436                	lw	s0,76(sp)
204068e4:	4526                	lw	a0,72(sp)
204068e6:	4596                	lw	a1,68(sp)
204068e8:	4606                	lw	a2,64(sp)
204068ea:	56f2                	lw	a3,60(sp)
204068ec:	5762                	lw	a4,56(sp)
204068ee:	57d2                	lw	a5,52(sp)
204068f0:	5842                	lw	a6,48(sp)
204068f2:	58b2                	lw	a7,44(sp)
204068f4:	5e22                	lw	t3,40(sp)
204068f6:	5e92                	lw	t4,36(sp)
204068f8:	5f02                	lw	t5,32(sp)
204068fa:	4ff2                	lw	t6,28(sp)
204068fc:	6125                	addi	sp,sp,96
204068fe:	30200073          	mret

20406902 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc12_interrupt_vector_handler (void) {
20406902:	711d                	addi	sp,sp,-96
20406904:	ce86                	sw	ra,92(sp)
20406906:	cc96                	sw	t0,88(sp)
20406908:	ca9a                	sw	t1,84(sp)
2040690a:	c89e                	sw	t2,80(sp)
2040690c:	c6a2                	sw	s0,76(sp)
2040690e:	c4aa                	sw	a0,72(sp)
20406910:	c2ae                	sw	a1,68(sp)
20406912:	c0b2                	sw	a2,64(sp)
20406914:	de36                	sw	a3,60(sp)
20406916:	dc3a                	sw	a4,56(sp)
20406918:	da3e                	sw	a5,52(sp)
2040691a:	d842                	sw	a6,48(sp)
2040691c:	d646                	sw	a7,44(sp)
2040691e:	d472                	sw	t3,40(sp)
20406920:	d276                	sw	t4,36(sp)
20406922:	d07a                	sw	t5,32(sp)
20406924:	ce7e                	sw	t6,28(sp)
20406926:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:376
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406928:	b74ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
2040692c:	872a                	mv	a4,a0
2040692e:	800007b7          	lui	a5,0x80000
20406932:	070a                	slli	a4,a4,0x2
20406934:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20406938:	97ba                	add	a5,a5,a4
2040693a:	439c                	lw	a5,0(a5)
2040693c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378

    if ( cpu ) {
20406940:	fac42783          	lw	a5,-84(s0)
20406944:	c78d                	beqz	a5,2040696e <metal_lc12_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406946:	fac42503          	lw	a0,-84(s0)
2040694a:	af8ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
2040694e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC12].exint_data;
20406952:	fa842783          	lw	a5,-88(s0)
20406956:	3387a783          	lw	a5,824(a5)
2040695a:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:382
        intc->metal_int_table[METAL_INTERRUPT_ID_LC12].handler(METAL_INTERRUPT_ID_LC12, priv);
2040695e:	fa842783          	lw	a5,-88(s0)
20406962:	3307a783          	lw	a5,816(a5)
20406966:	fa442583          	lw	a1,-92(s0)
2040696a:	4571                	li	a0,28
2040696c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }
}
2040696e:	0001                	nop
20406970:	40f6                	lw	ra,92(sp)
20406972:	42e6                	lw	t0,88(sp)
20406974:	4356                	lw	t1,84(sp)
20406976:	43c6                	lw	t2,80(sp)
20406978:	4436                	lw	s0,76(sp)
2040697a:	4526                	lw	a0,72(sp)
2040697c:	4596                	lw	a1,68(sp)
2040697e:	4606                	lw	a2,64(sp)
20406980:	56f2                	lw	a3,60(sp)
20406982:	5762                	lw	a4,56(sp)
20406984:	57d2                	lw	a5,52(sp)
20406986:	5842                	lw	a6,48(sp)
20406988:	58b2                	lw	a7,44(sp)
2040698a:	5e22                	lw	t3,40(sp)
2040698c:	5e92                	lw	t4,36(sp)
2040698e:	5f02                	lw	t5,32(sp)
20406990:	4ff2                	lw	t6,28(sp)
20406992:	6125                	addi	sp,sp,96
20406994:	30200073          	mret

20406998 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc13_interrupt_vector_handler (void) {
20406998:	711d                	addi	sp,sp,-96
2040699a:	ce86                	sw	ra,92(sp)
2040699c:	cc96                	sw	t0,88(sp)
2040699e:	ca9a                	sw	t1,84(sp)
204069a0:	c89e                	sw	t2,80(sp)
204069a2:	c6a2                	sw	s0,76(sp)
204069a4:	c4aa                	sw	a0,72(sp)
204069a6:	c2ae                	sw	a1,68(sp)
204069a8:	c0b2                	sw	a2,64(sp)
204069aa:	de36                	sw	a3,60(sp)
204069ac:	dc3a                	sw	a4,56(sp)
204069ae:	da3e                	sw	a5,52(sp)
204069b0:	d842                	sw	a6,48(sp)
204069b2:	d646                	sw	a7,44(sp)
204069b4:	d472                	sw	t3,40(sp)
204069b6:	d276                	sw	t4,36(sp)
204069b8:	d07a                	sw	t5,32(sp)
204069ba:	ce7e                	sw	t6,28(sp)
204069bc:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:390
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204069be:	adeff0ef          	jal	ra,20405c9c <__metal_myhart_id>
204069c2:	872a                	mv	a4,a0
204069c4:	800007b7          	lui	a5,0x80000
204069c8:	070a                	slli	a4,a4,0x2
204069ca:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
204069ce:	97ba                	add	a5,a5,a4
204069d0:	439c                	lw	a5,0(a5)
204069d2:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:392

    if ( cpu ) {
204069d6:	fac42783          	lw	a5,-84(s0)
204069da:	c78d                	beqz	a5,20406a04 <metal_lc13_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204069dc:	fac42503          	lw	a0,-84(s0)
204069e0:	a62ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
204069e4:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:395
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC13].exint_data;
204069e8:	fa842783          	lw	a5,-88(s0)
204069ec:	3507a783          	lw	a5,848(a5)
204069f0:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
        intc->metal_int_table[METAL_INTERRUPT_ID_LC13].handler(METAL_INTERRUPT_ID_LC13, priv);
204069f4:	fa842783          	lw	a5,-88(s0)
204069f8:	3487a783          	lw	a5,840(a5)
204069fc:	fa442583          	lw	a1,-92(s0)
20406a00:	4575                	li	a0,29
20406a02:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
    }
}
20406a04:	0001                	nop
20406a06:	40f6                	lw	ra,92(sp)
20406a08:	42e6                	lw	t0,88(sp)
20406a0a:	4356                	lw	t1,84(sp)
20406a0c:	43c6                	lw	t2,80(sp)
20406a0e:	4436                	lw	s0,76(sp)
20406a10:	4526                	lw	a0,72(sp)
20406a12:	4596                	lw	a1,68(sp)
20406a14:	4606                	lw	a2,64(sp)
20406a16:	56f2                	lw	a3,60(sp)
20406a18:	5762                	lw	a4,56(sp)
20406a1a:	57d2                	lw	a5,52(sp)
20406a1c:	5842                	lw	a6,48(sp)
20406a1e:	58b2                	lw	a7,44(sp)
20406a20:	5e22                	lw	t3,40(sp)
20406a22:	5e92                	lw	t4,36(sp)
20406a24:	5f02                	lw	t5,32(sp)
20406a26:	4ff2                	lw	t6,28(sp)
20406a28:	6125                	addi	sp,sp,96
20406a2a:	30200073          	mret

20406a2e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc14_interrupt_vector_handler (void) {
20406a2e:	711d                	addi	sp,sp,-96
20406a30:	ce86                	sw	ra,92(sp)
20406a32:	cc96                	sw	t0,88(sp)
20406a34:	ca9a                	sw	t1,84(sp)
20406a36:	c89e                	sw	t2,80(sp)
20406a38:	c6a2                	sw	s0,76(sp)
20406a3a:	c4aa                	sw	a0,72(sp)
20406a3c:	c2ae                	sw	a1,68(sp)
20406a3e:	c0b2                	sw	a2,64(sp)
20406a40:	de36                	sw	a3,60(sp)
20406a42:	dc3a                	sw	a4,56(sp)
20406a44:	da3e                	sw	a5,52(sp)
20406a46:	d842                	sw	a6,48(sp)
20406a48:	d646                	sw	a7,44(sp)
20406a4a:	d472                	sw	t3,40(sp)
20406a4c:	d276                	sw	t4,36(sp)
20406a4e:	d07a                	sw	t5,32(sp)
20406a50:	ce7e                	sw	t6,28(sp)
20406a52:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:404
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406a54:	a48ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
20406a58:	872a                	mv	a4,a0
20406a5a:	800007b7          	lui	a5,0x80000
20406a5e:	070a                	slli	a4,a4,0x2
20406a60:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20406a64:	97ba                	add	a5,a5,a4
20406a66:	439c                	lw	a5,0(a5)
20406a68:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:406

    if ( cpu ) {
20406a6c:	fac42783          	lw	a5,-84(s0)
20406a70:	c78d                	beqz	a5,20406a9a <metal_lc14_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406a72:	fac42503          	lw	a0,-84(s0)
20406a76:	9ccff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
20406a7a:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:409
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC14].exint_data;
20406a7e:	fa842783          	lw	a5,-88(s0)
20406a82:	3687a783          	lw	a5,872(a5)
20406a86:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
        intc->metal_int_table[METAL_INTERRUPT_ID_LC14].handler(METAL_INTERRUPT_ID_LC14, priv);
20406a8a:	fa842783          	lw	a5,-88(s0)
20406a8e:	3607a783          	lw	a5,864(a5)
20406a92:	fa442583          	lw	a1,-92(s0)
20406a96:	4579                	li	a0,30
20406a98:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
    }
}
20406a9a:	0001                	nop
20406a9c:	40f6                	lw	ra,92(sp)
20406a9e:	42e6                	lw	t0,88(sp)
20406aa0:	4356                	lw	t1,84(sp)
20406aa2:	43c6                	lw	t2,80(sp)
20406aa4:	4436                	lw	s0,76(sp)
20406aa6:	4526                	lw	a0,72(sp)
20406aa8:	4596                	lw	a1,68(sp)
20406aaa:	4606                	lw	a2,64(sp)
20406aac:	56f2                	lw	a3,60(sp)
20406aae:	5762                	lw	a4,56(sp)
20406ab0:	57d2                	lw	a5,52(sp)
20406ab2:	5842                	lw	a6,48(sp)
20406ab4:	58b2                	lw	a7,44(sp)
20406ab6:	5e22                	lw	t3,40(sp)
20406ab8:	5e92                	lw	t4,36(sp)
20406aba:	5f02                	lw	t5,32(sp)
20406abc:	4ff2                	lw	t6,28(sp)
20406abe:	6125                	addi	sp,sp,96
20406ac0:	30200073          	mret

20406ac4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:415

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc15_interrupt_vector_handler (void) {
20406ac4:	711d                	addi	sp,sp,-96
20406ac6:	ce86                	sw	ra,92(sp)
20406ac8:	cc96                	sw	t0,88(sp)
20406aca:	ca9a                	sw	t1,84(sp)
20406acc:	c89e                	sw	t2,80(sp)
20406ace:	c6a2                	sw	s0,76(sp)
20406ad0:	c4aa                	sw	a0,72(sp)
20406ad2:	c2ae                	sw	a1,68(sp)
20406ad4:	c0b2                	sw	a2,64(sp)
20406ad6:	de36                	sw	a3,60(sp)
20406ad8:	dc3a                	sw	a4,56(sp)
20406ada:	da3e                	sw	a5,52(sp)
20406adc:	d842                	sw	a6,48(sp)
20406ade:	d646                	sw	a7,44(sp)
20406ae0:	d472                	sw	t3,40(sp)
20406ae2:	d276                	sw	t4,36(sp)
20406ae4:	d07a                	sw	t5,32(sp)
20406ae6:	ce7e                	sw	t6,28(sp)
20406ae8:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:418
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406aea:	9b2ff0ef          	jal	ra,20405c9c <__metal_myhart_id>
20406aee:	872a                	mv	a4,a0
20406af0:	800007b7          	lui	a5,0x80000
20406af4:	070a                	slli	a4,a4,0x2
20406af6:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
20406afa:	97ba                	add	a5,a5,a4
20406afc:	439c                	lw	a5,0(a5)
20406afe:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:420

    if ( cpu ) {
20406b02:	fac42783          	lw	a5,-84(s0)
20406b06:	c78d                	beqz	a5,20406b30 <metal_lc15_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:422
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406b08:	fac42503          	lw	a0,-84(s0)
20406b0c:	936ff0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
20406b10:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:423
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC15].exint_data;
20406b14:	fa842783          	lw	a5,-88(s0)
20406b18:	3807a783          	lw	a5,896(a5)
20406b1c:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:424
        intc->metal_int_table[METAL_INTERRUPT_ID_LC15].handler(METAL_INTERRUPT_ID_LC15, priv);
20406b20:	fa842783          	lw	a5,-88(s0)
20406b24:	3787a783          	lw	a5,888(a5)
20406b28:	fa442583          	lw	a1,-92(s0)
20406b2c:	457d                	li	a0,31
20406b2e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:426
    }
}
20406b30:	0001                	nop
20406b32:	40f6                	lw	ra,92(sp)
20406b34:	42e6                	lw	t0,88(sp)
20406b36:	4356                	lw	t1,84(sp)
20406b38:	43c6                	lw	t2,80(sp)
20406b3a:	4436                	lw	s0,76(sp)
20406b3c:	4526                	lw	a0,72(sp)
20406b3e:	4596                	lw	a1,68(sp)
20406b40:	4606                	lw	a2,64(sp)
20406b42:	56f2                	lw	a3,60(sp)
20406b44:	5762                	lw	a4,56(sp)
20406b46:	57d2                	lw	a5,52(sp)
20406b48:	5842                	lw	a6,48(sp)
20406b4a:	58b2                	lw	a7,44(sp)
20406b4c:	5e22                	lw	t3,40(sp)
20406b4e:	5e92                	lw	t4,36(sp)
20406b50:	5f02                	lw	t5,32(sp)
20406b52:	4ff2                	lw	t6,28(sp)
20406b54:	6125                	addi	sp,sp,96
20406b56:	30200073          	mret

20406b5a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429

metal_vector_mode __metal_controller_interrupt_vector_mode (void)
{
20406b5a:	1101                	addi	sp,sp,-32
20406b5c:	ce22                	sw	s0,28(sp)
20406b5e:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
    uintptr_t val;

    asm volatile ("csrr %0, mtvec" : "=r"(val));
20406b60:	305027f3          	csrr	a5,mtvec
20406b64:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:433
    val &= METAL_MTVEC_MASK;
20406b68:	fec42783          	lw	a5,-20(s0)
20406b6c:	03f7f793          	andi	a5,a5,63
20406b70:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:435

    switch (val) {
20406b74:	fec42703          	lw	a4,-20(s0)
20406b78:	4789                	li	a5,2
20406b7a:	00f70d63          	beq	a4,a5,20406b94 <__metal_controller_interrupt_vector_mode+0x3a>
20406b7e:	fec42703          	lw	a4,-20(s0)
20406b82:	478d                	li	a5,3
20406b84:	00f70a63          	beq	a4,a5,20406b98 <__metal_controller_interrupt_vector_mode+0x3e>
20406b88:	fec42703          	lw	a4,-20(s0)
20406b8c:	4785                	li	a5,1
20406b8e:	00f70763          	beq	a4,a5,20406b9c <__metal_controller_interrupt_vector_mode+0x42>
20406b92:	a039                	j	20406ba0 <__metal_controller_interrupt_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:437
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20406b94:	478d                	li	a5,3
20406b96:	a031                	j	20406ba2 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20406b98:	4791                	li	a5,4
20406b9a:	a021                	j	20406ba2 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:441
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20406b9c:	4785                	li	a5,1
20406b9e:	a011                	j	20406ba2 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    }
    return METAL_DIRECT_MODE;
20406ba0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:444
}
20406ba2:	853e                	mv	a0,a5
20406ba4:	4472                	lw	s0,28(sp)
20406ba6:	6105                	addi	sp,sp,32
20406ba8:	8082                	ret

20406baa <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447

void __metal_controller_interrupt_vector (metal_vector_mode mode, void *vec_table)
{  
20406baa:	7179                	addi	sp,sp,-48
20406bac:	d622                	sw	s0,44(sp)
20406bae:	1800                	addi	s0,sp,48
20406bb0:	fca42e23          	sw	a0,-36(s0)
20406bb4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
    uintptr_t trap_entry, val;

    __asm__ volatile ("csrr %0, mtvec" : "=r"(val));
20406bb8:	305027f3          	csrr	a5,mtvec
20406bbc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:451
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20406bc0:	fec42783          	lw	a5,-20(s0)
20406bc4:	fc07f793          	andi	a5,a5,-64
20406bc8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:452
    trap_entry = (uintptr_t)vec_table;
20406bcc:	fd842783          	lw	a5,-40(s0)
20406bd0:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

    switch (mode) {
20406bd4:	fdc42703          	lw	a4,-36(s0)
20406bd8:	4791                	li	a5,4
20406bda:	06e7e063          	bltu	a5,a4,20406c3a <__metal_controller_interrupt_vector+0x90>
20406bde:	fdc42783          	lw	a5,-36(s0)
20406be2:	00279713          	slli	a4,a5,0x2
20406be6:	204097b7          	lui	a5,0x20409
20406bea:	0a878793          	addi	a5,a5,168 # 204090a8 <__metal_driver_vtable_riscv_clint0+0x4c>
20406bee:	97ba                	add	a5,a5,a4
20406bf0:	439c                	lw	a5,0(a5)
20406bf2:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20406bf4:	fe842783          	lw	a5,-24(s0)
20406bf8:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:458
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC));
20406bfc:	fec42783          	lw	a5,-20(s0)
20406c00:	0027e793          	ori	a5,a5,2
20406c04:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        break;
20406c08:	a80d                	j	20406c3a <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20406c0a:	fe842783          	lw	a5,-24(s0)
20406c0e:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC_VECTORED));
20406c12:	fec42783          	lw	a5,-20(s0)
20406c16:	0037e793          	ori	a5,a5,3
20406c1a:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:463
        break;
20406c1e:	a831                	j	20406c3a <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
    case METAL_VECTOR_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry | METAL_MTVEC_VECTORED));
20406c20:	fe842783          	lw	a5,-24(s0)
20406c24:	0017e793          	ori	a5,a5,1
20406c28:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466
        break;
20406c2c:	a039                	j	20406c3a <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:468
    case METAL_DIRECT_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20406c2e:	fe842783          	lw	a5,-24(s0)
20406c32:	9bf1                	andi	a5,a5,-4
20406c34:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:469
        break;
20406c38:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:471
    }
}
20406c3a:	0001                	nop
20406c3c:	5432                	lw	s0,44(sp)
20406c3e:	6145                	addi	sp,sp,48
20406c40:	8082                	ret

20406c42 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:474

int __metal_valid_interrupt_id (int id)
{
20406c42:	1101                	addi	sp,sp,-32
20406c44:	ce22                	sw	s0,28(sp)
20406c46:	1000                	addi	s0,sp,32
20406c48:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
    switch (id) {
20406c4c:	fec42783          	lw	a5,-20(s0)
20406c50:	17f5                	addi	a5,a5,-3
20406c52:	4771                	li	a4,28
20406c54:	00f76d63          	bltu	a4,a5,20406c6e <__metal_valid_interrupt_id+0x2c>
20406c58:	00279713          	slli	a4,a5,0x2
20406c5c:	204097b7          	lui	a5,0x20409
20406c60:	0bc78793          	addi	a5,a5,188 # 204090bc <__metal_driver_vtable_riscv_clint0+0x60>
20406c64:	97ba                	add	a5,a5,a4
20406c66:	439c                	lw	a5,0(a5)
20406c68:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        return 1;
20406c6a:	4785                	li	a5,1
20406c6c:	a019                	j	20406c72 <__metal_valid_interrupt_id+0x30>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:497
    default:
        break;
20406c6e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:500
    }

    return 0;
20406c70:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
}
20406c72:	853e                	mv	a0,a5
20406c74:	4472                	lw	s0,28(sp)
20406c76:	6105                	addi	sp,sp,32
20406c78:	8082                	ret

20406c7a <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506

 
int __metal_local_interrupt_enable (struct metal_interrupt *controller,
				  metal_interrupt_id_e id, int enable)
{
20406c7a:	7179                	addi	sp,sp,-48
20406c7c:	d606                	sw	ra,44(sp)
20406c7e:	d422                	sw	s0,40(sp)
20406c80:	1800                	addi	s0,sp,48
20406c82:	fca42e23          	sw	a0,-36(s0)
20406c86:	fcb42c23          	sw	a1,-40(s0)
20406c8a:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
    int rc = 0;
20406c8e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:509
  
    if ( !controller) {
20406c92:	fdc42783          	lw	a5,-36(s0)
20406c96:	e399                	bnez	a5,20406c9c <__metal_local_interrupt_enable+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        return -1;
20406c98:	57fd                	li	a5,-1
20406c9a:	a849                	j	20406d2c <__metal_local_interrupt_enable+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
    }

    switch (id) {
20406c9c:	fd842703          	lw	a4,-40(s0)
20406ca0:	47fd                	li	a5,31
20406ca2:	08e7e063          	bltu	a5,a4,20406d22 <__metal_local_interrupt_enable+0xa8>
20406ca6:	fd842783          	lw	a5,-40(s0)
20406caa:	00279713          	slli	a4,a5,0x2
20406cae:	204097b7          	lui	a5,0x20409
20406cb2:	13078793          	addi	a5,a5,304 # 20409130 <__metal_driver_vtable_riscv_clint0+0xd4>
20406cb6:	97ba                	add	a5,a5,a4
20406cb8:	439c                	lw	a5,0(a5)
20406cba:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:515
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20406cbc:	fd442783          	lw	a5,-44(s0)
20406cc0:	c781                	beqz	a5,20406cc8 <__metal_local_interrupt_enable+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
            __metal_interrupt_global_enable();
20406cc2:	ff5fe0ef          	jal	ra,20405cb6 <__metal_interrupt_global_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20406cc6:	a08d                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            __metal_interrupt_global_disable();
20406cc8:	806ff0ef          	jal	ra,20405cce <__metal_interrupt_global_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        break;
20406ccc:	a8b1                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20406cce:	fd442783          	lw	a5,-44(s0)
20406cd2:	c781                	beqz	a5,20406cda <__metal_local_interrupt_enable+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:523
            __metal_interrupt_software_enable();
20406cd4:	812ff0ef          	jal	ra,20405ce6 <__metal_interrupt_software_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20406cd8:	a881                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:525
            __metal_interrupt_software_disable();
20406cda:	824ff0ef          	jal	ra,20405cfe <__metal_interrupt_software_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        break;
20406cde:	a0a9                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:529
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20406ce0:	fd442783          	lw	a5,-44(s0)
20406ce4:	c781                	beqz	a5,20406cec <__metal_local_interrupt_enable+0x72>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:530
	    __metal_interrupt_timer_enable();
20406ce6:	830ff0ef          	jal	ra,20405d16 <__metal_interrupt_timer_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	} else {
	    __metal_interrupt_timer_disable();
	}
	break;
20406cea:	a83d                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:532
	    __metal_interrupt_timer_disable();
20406cec:	844ff0ef          	jal	ra,20405d30 <__metal_interrupt_timer_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	break;
20406cf0:	a825                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:536
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20406cf2:	fd442783          	lw	a5,-44(s0)
20406cf6:	c781                	beqz	a5,20406cfe <__metal_local_interrupt_enable+0x84>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:537
            __metal_interrupt_external_enable();
20406cf8:	852ff0ef          	jal	ra,20405d4a <__metal_interrupt_external_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20406cfc:	a035                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:539
            __metal_interrupt_external_disable();
20406cfe:	868ff0ef          	jal	ra,20405d66 <__metal_interrupt_external_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        break;
20406d02:	a01d                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20406d04:	fd442783          	lw	a5,-44(s0)
20406d08:	c799                	beqz	a5,20406d16 <__metal_local_interrupt_enable+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
            __metal_interrupt_local_enable(id);
20406d0a:	fd842783          	lw	a5,-40(s0)
20406d0e:	853e                	mv	a0,a5
20406d10:	872ff0ef          	jal	ra,20405d82 <__metal_interrupt_local_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20406d14:	a811                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:561
            __metal_interrupt_local_disable(id);
20406d16:	fd842783          	lw	a5,-40(s0)
20406d1a:	853e                	mv	a0,a5
20406d1c:	892ff0ef          	jal	ra,20405dae <__metal_interrupt_local_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        break;
20406d20:	a021                	j	20406d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:565
    default:
        rc = -1;
20406d22:	57fd                	li	a5,-1
20406d24:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:567
    }
    return rc;
20406d28:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:568
}
20406d2c:	853e                	mv	a0,a5
20406d2e:	50b2                	lw	ra,44(sp)
20406d30:	5422                	lw	s0,40(sp)
20406d32:	6145                	addi	sp,sp,48
20406d34:	8082                	ret

20406d36 <__metal_exception_register>:
__metal_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:572

int __metal_exception_register (struct metal_interrupt *controller,
                              int ecode, metal_exception_handler_t isr)
{
20406d36:	7179                	addi	sp,sp,-48
20406d38:	d622                	sw	s0,44(sp)
20406d3a:	1800                	addi	s0,sp,48
20406d3c:	fca42e23          	sw	a0,-36(s0)
20406d40:	fcb42c23          	sw	a1,-40(s0)
20406d44:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:573
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406d48:	fdc42783          	lw	a5,-36(s0)
20406d4c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20406d50:	fd842703          	lw	a4,-40(s0)
20406d54:	47ad                	li	a5,11
20406d56:	02e7c263          	blt	a5,a4,20406d7a <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575 (discriminator 1)
20406d5a:	fd442783          	lw	a5,-44(s0)
20406d5e:	cf91                	beqz	a5,20406d7a <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:576
        intc->metal_exception_table[ecode] = isr;
20406d60:	fec42703          	lw	a4,-20(s0)
20406d64:	fd842783          	lw	a5,-40(s0)
20406d68:	0e078793          	addi	a5,a5,224
20406d6c:	078a                	slli	a5,a5,0x2
20406d6e:	97ba                	add	a5,a5,a4
20406d70:	fd442703          	lw	a4,-44(s0)
20406d74:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:577
        return 0;
20406d76:	4781                	li	a5,0
20406d78:	a011                	j	20406d7c <__metal_exception_register+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:579
    }
    return -1;
20406d7a:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:580
}
20406d7c:	853e                	mv	a0,a5
20406d7e:	5432                	lw	s0,44(sp)
20406d80:	6145                	addi	sp,sp,48
20406d82:	8082                	ret

20406d84 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:583

void __metal_driver_riscv_cpu_controller_interrupt_init (struct metal_interrupt *controller)
{
20406d84:	7139                	addi	sp,sp,-64
20406d86:	de06                	sw	ra,60(sp)
20406d88:	dc22                	sw	s0,56(sp)
20406d8a:	0080                	addi	s0,sp,64
20406d8c:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:584
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406d90:	fcc42783          	lw	a5,-52(s0)
20406d94:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:587
    uintptr_t val;

    if ( !intc->init_done ) {
20406d98:	fe442783          	lw	a5,-28(s0)
20406d9c:	43dc                	lw	a5,4(a5)
20406d9e:	10079d63          	bnez	a5,20406eb8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x134>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:589
        /* Disable and clear all interrupt sources */
        __asm__ volatile ("csrc mie, %0" :: "r"(-1));
20406da2:	57fd                	li	a5,-1
20406da4:	3047b073          	csrc	mie,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:590
        __asm__ volatile ("csrc mip, %0" :: "r"(-1));
20406da8:	57fd                	li	a5,-1
20406daa:	3447b073          	csrc	mip,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:594

        /* Read the misa CSR to determine if the delegation registers exist */
        uintptr_t misa;
        __asm__ volatile ("csrr %0, misa" : "=r" (misa));
20406dae:	301027f3          	csrr	a5,misa
20406db2:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

        /* The delegation CSRs exist if user mode interrupts (N extension) or
         * supervisor mode (S extension) are supported */
        if((misa & METAL_ISA_N_EXTENSIONS) || (misa & METAL_ISA_S_EXTENSIONS)) {
20406db6:	fe042703          	lw	a4,-32(s0)
20406dba:	6789                	lui	a5,0x2
20406dbc:	8ff9                	and	a5,a5,a4
20406dbe:	e799                	bnez	a5,20406dcc <__metal_driver_riscv_cpu_controller_interrupt_init+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598 (discriminator 1)
20406dc0:	fe042703          	lw	a4,-32(s0)
20406dc4:	000407b7          	lui	a5,0x40
20406dc8:	8ff9                	and	a5,a5,a4
20406dca:	c799                	beqz	a5,20406dd8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:600
            /* Disable interrupt and exception delegation */
            __asm__ volatile ("csrc mideleg, %0" :: "r"(-1));
20406dcc:	57fd                	li	a5,-1
20406dce:	3037b073          	csrc	mideleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            __asm__ volatile ("csrc medeleg, %0" :: "r"(-1));
20406dd2:	57fd                	li	a5,-1
20406dd4:	3027b073          	csrc	medeleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:605
        }

        /* The satp CSR exists if supervisor mode (S extension) is supported */
        if(misa & METAL_ISA_S_EXTENSIONS) {
20406dd8:	fe042703          	lw	a4,-32(s0)
20406ddc:	000407b7          	lui	a5,0x40
20406de0:	8ff9                	and	a5,a5,a4
20406de2:	c781                	beqz	a5,20406dea <__metal_driver_riscv_cpu_controller_interrupt_init+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:607
            /* Clear the entire CSR to make sure that satp.MODE = 0 */
            __asm__ volatile ("csrc satp, %0" :: "r"(-1));
20406de4:	57fd                	li	a5,-1
20406de6:	1807b073          	csrc	satp,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611
        }

        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20406dea:	fe042623          	sw	zero,-20(s0)
20406dee:	a0b9                	j	20406e3c <__metal_driver_riscv_cpu_controller_interrupt_init+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20406df0:	fe442683          	lw	a3,-28(s0)
20406df4:	fec42703          	lw	a4,-20(s0)
20406df8:	87ba                	mv	a5,a4
20406dfa:	0786                	slli	a5,a5,0x1
20406dfc:	97ba                	add	a5,a5,a4
20406dfe:	078e                	slli	a5,a5,0x3
20406e00:	97b6                	add	a5,a5,a3
20406e02:	0807a823          	sw	zero,144(a5) # 40090 <__heap_size+0x3f890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:613 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20406e06:	fe442683          	lw	a3,-28(s0)
20406e0a:	fec42703          	lw	a4,-20(s0)
20406e0e:	87ba                	mv	a5,a4
20406e10:	0786                	slli	a5,a5,0x1
20406e12:	97ba                	add	a5,a5,a4
20406e14:	078e                	slli	a5,a5,0x3
20406e16:	97b6                	add	a5,a5,a3
20406e18:	0807aa23          	sw	zero,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:614 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20406e1c:	fe442683          	lw	a3,-28(s0)
20406e20:	fec42703          	lw	a4,-20(s0)
20406e24:	87ba                	mv	a5,a4
20406e26:	0786                	slli	a5,a5,0x1
20406e28:	97ba                	add	a5,a5,a4
20406e2a:	078e                	slli	a5,a5,0x3
20406e2c:	97b6                	add	a5,a5,a3
20406e2e:	0807ac23          	sw	zero,152(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20406e32:	fec42783          	lw	a5,-20(s0)
20406e36:	0785                	addi	a5,a5,1
20406e38:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 1)
20406e3c:	fec42703          	lw	a4,-20(s0)
20406e40:	47fd                	li	a5,31
20406e42:	fae7d7e3          	bge	a5,a4,20406df0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
	}
	for (int i = 0; i < METAL_MAX_ME; i++) {
20406e46:	fe042423          	sw	zero,-24(s0)
20406e4a:	a01d                	j	20406e70 <__metal_driver_riscv_cpu_controller_interrupt_init+0xec>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:617 (discriminator 3)
	    intc->metal_exception_table[i] = __metal_default_exception_handler;
20406e4c:	fe442703          	lw	a4,-28(s0)
20406e50:	fe842783          	lw	a5,-24(s0)
20406e54:	0e078793          	addi	a5,a5,224
20406e58:	078a                	slli	a5,a5,0x2
20406e5a:	97ba                	add	a5,a5,a4
20406e5c:	20406737          	lui	a4,0x20406
20406e60:	dda70713          	addi	a4,a4,-550 # 20405dda <__metal_default_exception_handler>
20406e64:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 3)
	for (int i = 0; i < METAL_MAX_ME; i++) {
20406e66:	fe842783          	lw	a5,-24(s0)
20406e6a:	0785                	addi	a5,a5,1
20406e6c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 1)
20406e70:	fe842703          	lw	a4,-24(s0)
20406e74:	47ad                	li	a5,11
20406e76:	fce7dbe3          	bge	a5,a4,20406e4c <__metal_driver_riscv_cpu_controller_interrupt_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:619
	}
        __metal_controller_interrupt_vector(METAL_DIRECT_MODE, (void *)(uintptr_t)&__metal_exception_handler);
20406e7a:	204067b7          	lui	a5,0x20406
20406e7e:	08078593          	addi	a1,a5,128 # 20406080 <__metal_exception_handler>
20406e82:	4501                	li	a0,0
20406e84:	331d                	jal	20406baa <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620
	__asm__ volatile ("csrr %0, misa" : "=r"(val));
20406e86:	301027f3          	csrr	a5,misa
20406e8a:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
	if (val & (METAL_ISA_D_EXTENSIONS | METAL_ISA_F_EXTENSIONS | METAL_ISA_Q_EXTENSIONS)) {
20406e8e:	fdc42703          	lw	a4,-36(s0)
20406e92:	67c1                	lui	a5,0x10
20406e94:	02878793          	addi	a5,a5,40 # 10028 <__heap_size+0xf828>
20406e98:	8ff9                	and	a5,a5,a4
20406e9a:	cb99                	beqz	a5,20406eb0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:623
	    /* Floating point architecture, so turn on FP register saving*/
	    __asm__ volatile ("csrr %0, mstatus" : "=r"(val));
20406e9c:	300027f3          	csrr	a5,mstatus
20406ea0:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:624
	    __asm__ volatile ("csrw mstatus, %0" :: "r"(val | METAL_MSTATUS_FS_INIT));
20406ea4:	fdc42703          	lw	a4,-36(s0)
20406ea8:	6789                	lui	a5,0x2
20406eaa:	8fd9                	or	a5,a5,a4
20406eac:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:626
	}
	intc->init_done = 1;
20406eb0:	fe442783          	lw	a5,-28(s0)
20406eb4:	4705                	li	a4,1
20406eb6:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628
    }
}
20406eb8:	0001                	nop
20406eba:	50f2                	lw	ra,60(sp)
20406ebc:	5462                	lw	s0,56(sp)
20406ebe:	6121                	addi	sp,sp,64
20406ec0:	8082                	ret

20406ec2 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:633

int __metal_driver_riscv_cpu_controller_interrupt_register(struct metal_interrupt *controller,
							 int id, metal_interrupt_handler_t isr,
							 void *priv)
{
20406ec2:	7179                	addi	sp,sp,-48
20406ec4:	d606                	sw	ra,44(sp)
20406ec6:	d422                	sw	s0,40(sp)
20406ec8:	1800                	addi	s0,sp,48
20406eca:	fca42e23          	sw	a0,-36(s0)
20406ece:	fcb42c23          	sw	a1,-40(s0)
20406ed2:	fcc42a23          	sw	a2,-44(s0)
20406ed6:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634
    int rc = 0;
20406eda:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:635
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406ede:	fdc42783          	lw	a5,-36(s0)
20406ee2:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:637
 
    if ( !__metal_valid_interrupt_id(id) ) {
20406ee6:	fd842503          	lw	a0,-40(s0)
20406eea:	3ba1                	jal	20406c42 <__metal_valid_interrupt_id>
20406eec:	87aa                	mv	a5,a0
20406eee:	e399                	bnez	a5,20406ef4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:638
        return -11;
20406ef0:	57d5                	li	a5,-11
20406ef2:	aa11                	j	20407006 <__metal_driver_riscv_cpu_controller_interrupt_register+0x144>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:641
    }

    if (isr) {
20406ef4:	fd442783          	lw	a5,-44(s0)
20406ef8:	cf85                	beqz	a5,20406f30 <__metal_driver_riscv_cpu_controller_interrupt_register+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642
        intc->metal_int_table[id].handler = isr;
20406efa:	fe842683          	lw	a3,-24(s0)
20406efe:	fd842703          	lw	a4,-40(s0)
20406f02:	87ba                	mv	a5,a4
20406f04:	0786                	slli	a5,a5,0x1
20406f06:	97ba                	add	a5,a5,a4
20406f08:	078e                	slli	a5,a5,0x3
20406f0a:	97b6                	add	a5,a5,a3
20406f0c:	fd442703          	lw	a4,-44(s0)
20406f10:	08e7a823          	sw	a4,144(a5) # 2090 <__heap_size+0x1890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:643
        intc->metal_int_table[id].exint_data = priv;
20406f14:	fe842683          	lw	a3,-24(s0)
20406f18:	fd842703          	lw	a4,-40(s0)
20406f1c:	87ba                	mv	a5,a4
20406f1e:	0786                	slli	a5,a5,0x1
20406f20:	97ba                	add	a5,a5,a4
20406f22:	078e                	slli	a5,a5,0x3
20406f24:	97b6                	add	a5,a5,a3
20406f26:	fd042703          	lw	a4,-48(s0)
20406f2a:	08e7ac23          	sw	a4,152(a5)
20406f2e:	a8d1                	j	20407002 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
    } else {
	switch (id) {
20406f30:	fd842783          	lw	a5,-40(s0)
20406f34:	17f5                	addi	a5,a5,-3
20406f36:	4771                	li	a4,28
20406f38:	0cf76263          	bltu	a4,a5,20406ffc <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20406f3c:	00279713          	slli	a4,a5,0x2
20406f40:	204097b7          	lui	a5,0x20409
20406f44:	1b078793          	addi	a5,a5,432 # 204091b0 <__metal_driver_vtable_riscv_clint0+0x154>
20406f48:	97ba                	add	a5,a5,a4
20406f4a:	439c                	lw	a5,0(a5)
20406f4c:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:647
	case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20406f4e:	fe842683          	lw	a3,-24(s0)
20406f52:	fd842703          	lw	a4,-40(s0)
20406f56:	87ba                	mv	a5,a4
20406f58:	0786                	slli	a5,a5,0x1
20406f5a:	97ba                	add	a5,a5,a4
20406f5c:	078e                	slli	a5,a5,0x3
20406f5e:	97b6                	add	a5,a5,a3
20406f60:	20406737          	lui	a4,0x20406
20406f64:	eca70713          	addi	a4,a4,-310 # 20405eca <__metal_default_sw_handler>
20406f68:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
            intc->metal_int_table[id].sub_int = priv;
20406f6c:	fe842683          	lw	a3,-24(s0)
20406f70:	fd842703          	lw	a4,-40(s0)
20406f74:	87ba                	mv	a5,a4
20406f76:	0786                	slli	a5,a5,0x1
20406f78:	97ba                	add	a5,a5,a4
20406f7a:	078e                	slli	a5,a5,0x3
20406f7c:	97b6                	add	a5,a5,a3
20406f7e:	fd042703          	lw	a4,-48(s0)
20406f82:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
	  break;
20406f86:	a8b5                	j	20407002 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:651
	case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20406f88:	fe842683          	lw	a3,-24(s0)
20406f8c:	fd842703          	lw	a4,-40(s0)
20406f90:	87ba                	mv	a5,a4
20406f92:	0786                	slli	a5,a5,0x1
20406f94:	97ba                	add	a5,a5,a4
20406f96:	078e                	slli	a5,a5,0x3
20406f98:	97b6                	add	a5,a5,a3
20406f9a:	20406737          	lui	a4,0x20406
20406f9e:	fc470713          	addi	a4,a4,-60 # 20405fc4 <__metal_default_timer_handler>
20406fa2:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652
            intc->metal_int_table[id].sub_int = priv;
20406fa6:	fe842683          	lw	a3,-24(s0)
20406faa:	fd842703          	lw	a4,-40(s0)
20406fae:	87ba                	mv	a5,a4
20406fb0:	0786                	slli	a5,a5,0x1
20406fb2:	97ba                	add	a5,a5,a4
20406fb4:	078e                	slli	a5,a5,0x3
20406fb6:	97b6                	add	a5,a5,a3
20406fb8:	fd042703          	lw	a4,-48(s0)
20406fbc:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
	  break;
20406fc0:	a089                	j	20407002 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
	case METAL_INTERRUPT_ID_LC11:
	case METAL_INTERRUPT_ID_LC12:
	case METAL_INTERRUPT_ID_LC13:
	case METAL_INTERRUPT_ID_LC14:
	case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler = __metal_default_interrupt_handler;
20406fc2:	fe842683          	lw	a3,-24(s0)
20406fc6:	fd842703          	lw	a4,-40(s0)
20406fca:	87ba                	mv	a5,a4
20406fcc:	0786                	slli	a5,a5,0x1
20406fce:	97ba                	add	a5,a5,a4
20406fd0:	078e                	slli	a5,a5,0x3
20406fd2:	97b6                	add	a5,a5,a3
20406fd4:	20406737          	lui	a4,0x20406
20406fd8:	df270713          	addi	a4,a4,-526 # 20405df2 <__metal_default_interrupt_handler>
20406fdc:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:672
            intc->metal_int_table[id].sub_int = priv;
20406fe0:	fe842683          	lw	a3,-24(s0)
20406fe4:	fd842703          	lw	a4,-40(s0)
20406fe8:	87ba                	mv	a5,a4
20406fea:	0786                	slli	a5,a5,0x1
20406fec:	97ba                	add	a5,a5,a4
20406fee:	078e                	slli	a5,a5,0x3
20406ff0:	97b6                	add	a5,a5,a3
20406ff2:	fd042703          	lw	a4,-48(s0)
20406ff6:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:673
	  break;
20406ffa:	a021                	j	20407002 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
	default:
	  rc = -12;
20406ffc:	57d1                	li	a5,-12
20406ffe:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
	}
    }
    return rc;
20407002:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
}
20407006:	853e                	mv	a0,a5
20407008:	50b2                	lw	ra,44(sp)
2040700a:	5422                	lw	s0,40(sp)
2040700c:	6145                	addi	sp,sp,48
2040700e:	8082                	ret

20407010 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:683

int __metal_driver_riscv_cpu_controller_interrupt_enable (struct metal_interrupt *controller,
                                                        int id)
{
20407010:	1101                	addi	sp,sp,-32
20407012:	ce06                	sw	ra,28(sp)
20407014:	cc22                	sw	s0,24(sp)
20407016:	1000                	addi	s0,sp,32
20407018:	fea42623          	sw	a0,-20(s0)
2040701c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20407020:	fe842783          	lw	a5,-24(s0)
20407024:	4605                	li	a2,1
20407026:	85be                	mv	a1,a5
20407028:	fec42503          	lw	a0,-20(s0)
2040702c:	c4fff0ef          	jal	ra,20406c7a <__metal_local_interrupt_enable>
20407030:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
20407032:	853e                	mv	a0,a5
20407034:	40f2                	lw	ra,28(sp)
20407036:	4462                	lw	s0,24(sp)
20407038:	6105                	addi	sp,sp,32
2040703a:	8082                	ret

2040703c <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:689

int __metal_driver_riscv_cpu_controller_interrupt_disable (struct metal_interrupt *controller,
                                                         int id)
{   
2040703c:	1101                	addi	sp,sp,-32
2040703e:	ce06                	sw	ra,28(sp)
20407040:	cc22                	sw	s0,24(sp)
20407042:	1000                	addi	s0,sp,32
20407044:	fea42623          	sw	a0,-20(s0)
20407048:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
2040704c:	fe842783          	lw	a5,-24(s0)
20407050:	4601                	li	a2,0
20407052:	85be                	mv	a1,a5
20407054:	fec42503          	lw	a0,-20(s0)
20407058:	c23ff0ef          	jal	ra,20406c7a <__metal_local_interrupt_enable>
2040705c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:691
}
2040705e:	853e                	mv	a0,a5
20407060:	40f2                	lw	ra,28(sp)
20407062:	4462                	lw	s0,24(sp)
20407064:	6105                	addi	sp,sp,32
20407066:	8082                	ret

20407068 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:722
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode (struct metal_interrupt *controller)
{   
20407068:	1101                	addi	sp,sp,-32
2040706a:	ce06                	sw	ra,28(sp)
2040706c:	cc22                	sw	s0,24(sp)
2040706e:	1000                	addi	s0,sp,32
20407070:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723
    return __metal_controller_interrupt_vector_mode();
20407074:	ae7ff0ef          	jal	ra,20406b5a <__metal_controller_interrupt_vector_mode>
20407078:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
}
2040707a:	853e                	mv	a0,a5
2040707c:	40f2                	lw	ra,28(sp)
2040707e:	4462                	lw	s0,24(sp)
20407080:	6105                	addi	sp,sp,32
20407082:	8082                	ret

20407084 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728

int __metal_driver_riscv_cpu_controller_set_vector_mode (struct metal_interrupt *controller,
                                                         metal_vector_mode mode)
{   
20407084:	7179                	addi	sp,sp,-48
20407086:	d606                	sw	ra,44(sp)
20407088:	d422                	sw	s0,40(sp)
2040708a:	1800                	addi	s0,sp,48
2040708c:	fca42e23          	sw	a0,-36(s0)
20407090:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:729
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20407094:	fdc42783          	lw	a5,-36(s0)
20407098:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731

    if (mode == METAL_DIRECT_MODE) {
2040709c:	fd842783          	lw	a5,-40(s0)
204070a0:	eb99                	bnez	a5,204070b6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        __metal_controller_interrupt_vector(mode, (void *)(uintptr_t)&__metal_exception_handler);
204070a2:	204067b7          	lui	a5,0x20406
204070a6:	08078593          	addi	a1,a5,128 # 20406080 <__metal_exception_handler>
204070aa:	fd842503          	lw	a0,-40(s0)
204070ae:	afdff0ef          	jal	ra,20406baa <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            return 0;
204070b2:	4781                	li	a5,0
204070b4:	a00d                	j	204070d6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:735
    }
    if (mode == METAL_VECTOR_MODE) {
204070b6:	fd842703          	lw	a4,-40(s0)
204070ba:	4785                	li	a5,1
204070bc:	00f71c63          	bne	a4,a5,204070d4 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:736
        __metal_controller_interrupt_vector(mode, (void *)__metal_vector_table);
204070c0:	204097b7          	lui	a5,0x20409
204070c4:	a0078593          	addi	a1,a5,-1536 # 20408a00 <__metal_vector_table>
204070c8:	fd842503          	lw	a0,-40(s0)
204070cc:	adfff0ef          	jal	ra,20406baa <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
        return 0;
204070d0:	4781                	li	a5,0
204070d2:	a011                	j	204070d6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:739
    }
    return -1;
204070d4:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740
}
204070d6:	853e                	mv	a0,a5
204070d8:	50b2                	lw	ra,44(sp)
204070da:	5422                	lw	s0,40(sp)
204070dc:	6145                	addi	sp,sp,48
204070de:	8082                	ret

204070e0 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:744

int __metal_driver_riscv_cpu_controller_command_request (struct metal_interrupt *controller,
						       int cmd, void *data)
{
204070e0:	1101                	addi	sp,sp,-32
204070e2:	ce22                	sw	s0,28(sp)
204070e4:	1000                	addi	s0,sp,32
204070e6:	fea42623          	sw	a0,-20(s0)
204070ea:	feb42423          	sw	a1,-24(s0)
204070ee:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:746
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic */
    return 0;
204070f2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747
}
204070f4:	853e                	mv	a0,a5
204070f6:	4472                	lw	s0,28(sp)
204070f8:	6105                	addi	sp,sp,32
204070fa:	8082                	ret

204070fc <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:752

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu)
{
204070fc:	7139                	addi	sp,sp,-64
204070fe:	de22                	sw	s0,60(sp)
20407100:	0080                	addi	s0,sp,64
20407102:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:753
    unsigned long long val = 0;
20407106:	4301                	li	t1,0
20407108:	4381                	li	t2,0
2040710a:	fe642423          	sw	t1,-24(s0)
2040710e:	fe742623          	sw	t2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi));
20407112:	b8002573          	csrr	a0,mcycleh
20407116:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:759
    __asm__ volatile ("csrr %0, mcycle" : "=r"(lo));
2040711a:	b0002573          	csrr	a0,mcycle
2040711e:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:760
    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi1));
20407122:	b8002573          	csrr	a0,mcycleh
20407126:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:761
    if (hi == hi1) {
2040712a:	fe442883          	lw	a7,-28(s0)
2040712e:	fdc42503          	lw	a0,-36(s0)
20407132:	02a89563          	bne	a7,a0,2040715c <__metal_driver_cpu_mcycle_get+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
        val = ((unsigned long long)hi << 32) | lo;
20407136:	fe442503          	lw	a0,-28(s0)
2040713a:	85aa                	mv	a1,a0
2040713c:	4601                	li	a2,0
2040713e:	00059813          	slli	a6,a1,0x0
20407142:	4781                	li	a5,0
20407144:	fe042603          	lw	a2,-32(s0)
20407148:	86b2                	mv	a3,a2
2040714a:	4701                	li	a4,0
2040714c:	00d7e633          	or	a2,a5,a3
20407150:	fec42423          	sw	a2,-24(s0)
20407154:	00e867b3          	or	a5,a6,a4
20407158:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:768
    }
#else
    __asm__ volatile ("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
2040715c:	fe842783          	lw	a5,-24(s0)
20407160:	fec42803          	lw	a6,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:769
}
20407164:	853e                	mv	a0,a5
20407166:	85c2                	mv	a1,a6
20407168:	5472                	lw	s0,60(sp)
2040716a:	6121                	addi	sp,sp,64
2040716c:	8082                	ret

2040716e <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu)
{
2040716e:	7179                	addi	sp,sp,-48
20407170:	d606                	sw	ra,44(sp)
20407172:	d422                	sw	s0,40(sp)
20407174:	d24a                	sw	s2,36(sp)
20407176:	d04e                	sw	s3,32(sp)
20407178:	1800                	addi	s0,sp,48
2040717a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:774
  int timebase;
    if (!cpu) {
2040717e:	fdc42783          	lw	a5,-36(s0)
20407182:	e781                	bnez	a5,2040718a <__metal_driver_cpu_timebase_get+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775
        return 0;
20407184:	4901                	li	s2,0
20407186:	4981                	li	s3,0
20407188:	a821                	j	204071a0 <__metal_driver_cpu_timebase_get+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:778
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
2040718a:	fdc42503          	lw	a0,-36(s0)
2040718e:	a8bfe0ef          	jal	ra,20405c18 <__metal_driver_cpu_timebase>
20407192:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:779
    return timebase;
20407196:	fec42783          	lw	a5,-20(s0)
2040719a:	893e                	mv	s2,a5
2040719c:	87fd                	srai	a5,a5,0x1f
2040719e:	89be                	mv	s3,a5
204071a0:	87ca                	mv	a5,s2
204071a2:	884e                	mv	a6,s3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:780
}
204071a4:	853e                	mv	a0,a5
204071a6:	85c2                	mv	a1,a6
204071a8:	50b2                	lw	ra,44(sp)
204071aa:	5422                	lw	s0,40(sp)
204071ac:	5912                	lw	s2,36(sp)
204071ae:	5982                	lw	s3,32(sp)
204071b0:	6145                	addi	sp,sp,48
204071b2:	8082                	ret

204071b4 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:783

unsigned long long  __metal_driver_cpu_mtime_get (struct metal_cpu *cpu)
{
204071b4:	7179                	addi	sp,sp,-48
204071b6:	d606                	sw	ra,44(sp)
204071b8:	d422                	sw	s0,40(sp)
204071ba:	1800                	addi	s0,sp,48
204071bc:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:784
    unsigned long long time = 0;
204071c0:	4781                	li	a5,0
204071c2:	4801                	li	a6,0
204071c4:	fef42023          	sw	a5,-32(s0)
204071c8:	ff042223          	sw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:787
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
204071cc:	fdc42503          	lw	a0,-36(s0)
204071d0:	a73fe0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
204071d4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:789

    if (intc) {
204071d8:	fec42783          	lw	a5,-20(s0)
204071dc:	c78d                	beqz	a5,20407206 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:790
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
204071de:	fec42783          	lw	a5,-20(s0)
204071e2:	13c7a783          	lw	a5,316(a5)
204071e6:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:791
        if (tmr_intc) {
204071ea:	fe842783          	lw	a5,-24(s0)
204071ee:	cf81                	beqz	a5,20407206 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:792
            tmr_intc->vtable->command_request(tmr_intc,
204071f0:	fe842783          	lw	a5,-24(s0)
204071f4:	439c                	lw	a5,0(a5)
204071f6:	43f8                	lw	a4,68(a5)
204071f8:	fe040793          	addi	a5,s0,-32
204071fc:	863e                	mv	a2,a5
204071fe:	4585                	li	a1,1
20407200:	fe842503          	lw	a0,-24(s0)
20407204:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:796
                                              METAL_TIMER_MTIME_GET, &time);
        }
    }
    return time;
20407206:	fe042783          	lw	a5,-32(s0)
2040720a:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:797
}
2040720e:	853e                	mv	a0,a5
20407210:	85c2                	mv	a1,a6
20407212:	50b2                	lw	ra,44(sp)
20407214:	5422                	lw	s0,40(sp)
20407216:	6145                	addi	sp,sp,48
20407218:	8082                	ret

2040721a <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:800

int __metal_driver_cpu_mtimecmp_set (struct metal_cpu *cpu, unsigned long long time)
{
2040721a:	7179                	addi	sp,sp,-48
2040721c:	d606                	sw	ra,44(sp)
2040721e:	d422                	sw	s0,40(sp)
20407220:	d226                	sw	s1,36(sp)
20407222:	1800                	addi	s0,sp,48
20407224:	fca42e23          	sw	a0,-36(s0)
20407228:	fcb42823          	sw	a1,-48(s0)
2040722c:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    int rc = -1;
20407230:	57fd                	li	a5,-1
20407232:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20407236:	fdc42503          	lw	a0,-36(s0)
2040723a:	a09fe0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
2040723e:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:806

    if (intc) {
20407242:	fe842783          	lw	a5,-24(s0)
20407246:	cf8d                	beqz	a5,20407280 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20407248:	fe842783          	lw	a5,-24(s0)
2040724c:	13c7a783          	lw	a5,316(a5)
20407250:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
        if (tmr_intc) {
20407254:	fe442783          	lw	a5,-28(s0)
20407258:	c785                	beqz	a5,20407280 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:809
            rc = tmr_intc->vtable->mtimecmp_set(tmr_intc,
2040725a:	fe442783          	lw	a5,-28(s0)
2040725e:	439c                	lw	a5,0(a5)
20407260:	47a4                	lw	s1,72(a5)
20407262:	fdc42503          	lw	a0,-36(s0)
20407266:	98ffe0ef          	jal	ra,20405bf4 <__metal_driver_cpu_hartid>
2040726a:	87aa                	mv	a5,a0
2040726c:	fd042603          	lw	a2,-48(s0)
20407270:	fd442683          	lw	a3,-44(s0)
20407274:	85be                	mv	a1,a5
20407276:	fe442503          	lw	a0,-28(s0)
2040727a:	9482                	jalr	s1
2040727c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:814
                                                __metal_driver_cpu_hartid(cpu),
                                                time);
        }
    }
    return rc;
20407280:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:815
}
20407284:	853e                	mv	a0,a5
20407286:	50b2                	lw	ra,44(sp)
20407288:	5422                	lw	s0,40(sp)
2040728a:	5492                	lw	s1,36(sp)
2040728c:	6145                	addi	sp,sp,48
2040728e:	8082                	ret

20407290 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:819

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu)
{
20407290:	1101                	addi	sp,sp,-32
20407292:	ce22                	sw	s0,28(sp)
20407294:	1000                	addi	s0,sp,32
20407296:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2040729a:	800007b7          	lui	a5,0x80000
2040729e:	79478793          	addi	a5,a5,1940 # 80000794 <metal_segment_heap_target_end+0xfffff2c0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
204072a2:	853e                	mv	a0,a5
204072a4:	4472                	lw	s0,28(sp)
204072a6:	6105                	addi	sp,sp,32
204072a8:	8082                	ret

204072aa <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:833

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu)
{
204072aa:	1101                	addi	sp,sp,-32
204072ac:	ce22                	sw	s0,28(sp)
204072ae:	1000                	addi	s0,sp,32
204072b0:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834
    return METAL_INTERRUPT_ID_TMR;
204072b4:	479d                	li	a5,7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
}
204072b6:	853e                	mv	a0,a5
204072b8:	4472                	lw	s0,28(sp)
204072ba:	6105                	addi	sp,sp,32
204072bc:	8082                	ret

204072be <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:839

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu)
{
204072be:	1101                	addi	sp,sp,-32
204072c0:	ce22                	sw	s0,28(sp)
204072c2:	1000                	addi	s0,sp,32
204072c4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:841
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
204072c8:	800007b7          	lui	a5,0x80000
204072cc:	79478793          	addi	a5,a5,1940 # 80000794 <metal_segment_heap_target_end+0xfffff2c0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:850
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
204072d0:	853e                	mv	a0,a5
204072d2:	4472                	lw	s0,28(sp)
204072d4:	6105                	addi	sp,sp,32
204072d6:	8082                	ret

204072d8 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:853

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu)
{
204072d8:	1101                	addi	sp,sp,-32
204072da:	ce22                	sw	s0,28(sp)
204072dc:	1000                	addi	s0,sp,32
204072de:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:854
    return METAL_INTERRUPT_ID_SW;
204072e2:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:855
}
204072e4:	853e                	mv	a0,a5
204072e6:	4472                	lw	s0,28(sp)
204072e8:	6105                	addi	sp,sp,32
204072ea:	8082                	ret

204072ec <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:858

int __metal_driver_cpu_set_sw_ipi (struct metal_cpu *cpu, int hartid)
{
204072ec:	7179                	addi	sp,sp,-48
204072ee:	d606                	sw	ra,44(sp)
204072f0:	d422                	sw	s0,40(sp)
204072f2:	1800                	addi	s0,sp,48
204072f4:	fca42e23          	sw	a0,-36(s0)
204072f8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:859
    int rc = -1;
204072fc:	57fd                	li	a5,-1
204072fe:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:862
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc = 
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20407302:	fdc42503          	lw	a0,-36(s0)
20407306:	93dfe0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
2040730a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:864

    if (intc) {
2040730e:	fe842783          	lw	a5,-24(s0)
20407312:	c79d                	beqz	a5,20407340 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:865
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20407314:	fe842783          	lw	a5,-24(s0)
20407318:	0dc7a783          	lw	a5,220(a5)
2040731c:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:866
        if (sw_intc) {
20407320:	fe442783          	lw	a5,-28(s0)
20407324:	cf91                	beqz	a5,20407340 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:867
            rc = sw_intc->vtable->command_request(sw_intc,
20407326:	fe442783          	lw	a5,-28(s0)
2040732a:	439c                	lw	a5,0(a5)
2040732c:	43f8                	lw	a4,68(a5)
2040732e:	fd840793          	addi	a5,s0,-40
20407332:	863e                	mv	a2,a5
20407334:	458d                	li	a1,3
20407336:	fe442503          	lw	a0,-28(s0)
2040733a:	9702                	jalr	a4
2040733c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:871
                                                  METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20407340:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:872
}
20407344:	853e                	mv	a0,a5
20407346:	50b2                	lw	ra,44(sp)
20407348:	5422                	lw	s0,40(sp)
2040734a:	6145                	addi	sp,sp,48
2040734c:	8082                	ret

2040734e <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:875

int __metal_driver_cpu_clear_sw_ipi (struct metal_cpu *cpu, int hartid)
{
2040734e:	7179                	addi	sp,sp,-48
20407350:	d606                	sw	ra,44(sp)
20407352:	d422                	sw	s0,40(sp)
20407354:	1800                	addi	s0,sp,48
20407356:	fca42e23          	sw	a0,-36(s0)
2040735a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:876
    int rc = -1;
2040735e:	57fd                	li	a5,-1
20407360:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:879
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20407364:	fdc42503          	lw	a0,-36(s0)
20407368:	8dbfe0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
2040736c:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:881

    if (intc) {
20407370:	fe842783          	lw	a5,-24(s0)
20407374:	c79d                	beqz	a5,204073a2 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:882
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20407376:	fe842783          	lw	a5,-24(s0)
2040737a:	0dc7a783          	lw	a5,220(a5)
2040737e:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:883
        if (sw_intc) {
20407382:	fe442783          	lw	a5,-28(s0)
20407386:	cf91                	beqz	a5,204073a2 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:884
            rc = sw_intc->vtable->command_request(sw_intc,
20407388:	fe442783          	lw	a5,-28(s0)
2040738c:	439c                	lw	a5,0(a5)
2040738e:	43f8                	lw	a4,68(a5)
20407390:	fd840793          	addi	a5,s0,-40
20407394:	863e                	mv	a2,a5
20407396:	4589                	li	a1,2
20407398:	fe442503          	lw	a0,-28(s0)
2040739c:	9702                	jalr	a4
2040739e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:888
                                                  METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
204073a2:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:889
}
204073a6:	853e                	mv	a0,a5
204073a8:	50b2                	lw	ra,44(sp)
204073aa:	5422                	lw	s0,40(sp)
204073ac:	6145                	addi	sp,sp,48
204073ae:	8082                	ret

204073b0 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:892

int __metal_driver_cpu_get_msip (struct metal_cpu *cpu, int hartid)
{
204073b0:	7179                	addi	sp,sp,-48
204073b2:	d606                	sw	ra,44(sp)
204073b4:	d422                	sw	s0,40(sp)
204073b6:	1800                	addi	s0,sp,48
204073b8:	fca42e23          	sw	a0,-36(s0)
204073bc:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:893
    int rc = 0;
204073c0:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:896
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
204073c4:	fdc42503          	lw	a0,-36(s0)
204073c8:	87bfe0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
204073cc:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:898

    if (intc) {
204073d0:	fe842783          	lw	a5,-24(s0)
204073d4:	c79d                	beqz	a5,20407402 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:899
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204073d6:	fe842783          	lw	a5,-24(s0)
204073da:	0dc7a783          	lw	a5,220(a5)
204073de:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:900
        if (sw_intc) {
204073e2:	fe442783          	lw	a5,-28(s0)
204073e6:	cf91                	beqz	a5,20407402 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:901
            rc = sw_intc->vtable->command_request(sw_intc,
204073e8:	fe442783          	lw	a5,-28(s0)
204073ec:	439c                	lw	a5,0(a5)
204073ee:	43f8                	lw	a4,68(a5)
204073f0:	fd840793          	addi	a5,s0,-40
204073f4:	863e                	mv	a2,a5
204073f6:	4591                	li	a1,4
204073f8:	fe442503          	lw	a0,-28(s0)
204073fc:	9702                	jalr	a4
204073fe:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:905
                                                  METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20407402:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:906
}
20407406:	853e                	mv	a0,a5
20407408:	50b2                	lw	ra,44(sp)
2040740a:	5422                	lw	s0,40(sp)
2040740c:	6145                	addi	sp,sp,48
2040740e:	8082                	ret

20407410 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:910

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu)
{
20407410:	1101                	addi	sp,sp,-32
20407412:	ce06                	sw	ra,28(sp)
20407414:	cc22                	sw	s0,24(sp)
20407416:	1000                	addi	s0,sp,32
20407418:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:911
    return __metal_driver_cpu_interrupt_controller(cpu);
2040741c:	fec42503          	lw	a0,-20(s0)
20407420:	823fe0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
20407424:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:912
}
20407426:	853e                	mv	a0,a5
20407428:	40f2                	lw	ra,28(sp)
2040742a:	4462                	lw	s0,24(sp)
2040742c:	6105                	addi	sp,sp,32
2040742e:	8082                	ret

20407430 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:936
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
				        metal_exception_handler_t isr)
{
20407430:	7179                	addi	sp,sp,-48
20407432:	d606                	sw	ra,44(sp)
20407434:	d422                	sw	s0,40(sp)
20407436:	1800                	addi	s0,sp,48
20407438:	fca42e23          	sw	a0,-36(s0)
2040743c:	fcb42c23          	sw	a1,-40(s0)
20407440:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:938
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20407444:	fdc42503          	lw	a0,-36(s0)
20407448:	ffafe0ef          	jal	ra,20405c42 <__metal_driver_cpu_interrupt_controller>
2040744c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:940

    if (intc) {
20407450:	fec42783          	lw	a5,-20(s0)
20407454:	cb99                	beqz	a5,2040746a <__metal_driver_cpu_exception_register+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:941
        return __metal_exception_register((struct metal_interrupt *)intc, ecode, isr);
20407456:	fd442603          	lw	a2,-44(s0)
2040745a:	fd842583          	lw	a1,-40(s0)
2040745e:	fec42503          	lw	a0,-20(s0)
20407462:	8d5ff0ef          	jal	ra,20406d36 <__metal_exception_register>
20407466:	87aa                	mv	a5,a0
20407468:	a011                	j	2040746c <__metal_driver_cpu_exception_register+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:943
    }
    return -1;
2040746a:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:944
}
2040746c:	853e                	mv	a0,a5
2040746e:	50b2                	lw	ra,44(sp)
20407470:	5422                	lw	s0,40(sp)
20407472:	6145                	addi	sp,sp,48
20407474:	8082                	ret

20407476 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:947

int  __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu, uintptr_t epc)
{
20407476:	1101                	addi	sp,sp,-32
20407478:	ce22                	sw	s0,28(sp)
2040747a:	1000                	addi	s0,sp,32
2040747c:	fea42623          	sw	a0,-20(s0)
20407480:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:953
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short*)epc & METAL_INSN_LENGTH_MASK)
20407484:	fe842783          	lw	a5,-24(s0)
20407488:	0007d783          	lhu	a5,0(a5)
2040748c:	0037f713          	andi	a4,a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954
            == METAL_INSN_NOT_COMPRESSED) ? 4 : 2;
20407490:	478d                	li	a5,3
20407492:	00f71463          	bne	a4,a5,2040749a <__metal_driver_cpu_get_instruction_length+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 1)
20407496:	4791                	li	a5,4
20407498:	a011                	j	2040749c <__metal_driver_cpu_get_instruction_length+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 2)
2040749a:	4789                	li	a5,2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:955 (discriminator 5)
}
2040749c:	853e                	mv	a0,a5
2040749e:	4472                	lw	s0,28(sp)
204074a0:	6105                	addi	sp,sp,32
204074a2:	8082                	ret

204074a4 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:958

uintptr_t  __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu)
{
204074a4:	7179                	addi	sp,sp,-48
204074a6:	d622                	sw	s0,44(sp)
204074a8:	1800                	addi	s0,sp,48
204074aa:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:960
    uintptr_t mepc;
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
204074ae:	341027f3          	csrr	a5,mepc
204074b2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:961
    return mepc;
204074b6:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:962
}
204074ba:	853e                	mv	a0,a5
204074bc:	5432                	lw	s0,44(sp)
204074be:	6145                	addi	sp,sp,48
204074c0:	8082                	ret

204074c2 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:965

int  __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc)
{
204074c2:	1101                	addi	sp,sp,-32
204074c4:	ce22                	sw	s0,28(sp)
204074c6:	1000                	addi	s0,sp,32
204074c8:	fea42623          	sw	a0,-20(s0)
204074cc:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:966
    __asm__ volatile ("csrw mepc, %0" :: "r"(mepc));
204074d0:	fe842783          	lw	a5,-24(s0)
204074d4:	34179073          	csrw	mepc,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:967
    return 0;
204074d8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:968
}
204074da:	853e                	mv	a0,a5
204074dc:	4472                	lw	s0,28(sp)
204074de:	6105                	addi	sp,sp,32
204074e0:	8082                	ret

204074e2 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:238



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
204074e2:	1101                	addi	sp,sp,-32
204074e4:	ce22                	sw	s0,28(sp)
204074e6:	1000                	addi	s0,sp,32
204074e8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:239
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204074ec:	fec42703          	lw	a4,-20(s0)
204074f0:	800007b7          	lui	a5,0x80000
204074f4:	46878793          	addi	a5,a5,1128 # 80000468 <metal_segment_heap_target_end+0xffffef94>
204074f8:	00f71563          	bne	a4,a5,20407502 <__metal_driver_sifive_plic0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:240
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
204074fc:	0c0007b7          	lui	a5,0xc000
20407500:	a011                	j	20407504 <__metal_driver_sifive_plic0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:243
	}
	else {
		return 0;
20407502:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:245
	}
}
20407504:	853e                	mv	a0,a5
20407506:	4472                	lw	s0,28(sp)
20407508:	6105                	addi	sp,sp,32
2040750a:	8082                	ret

2040750c <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:258
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2040750c:	1101                	addi	sp,sp,-32
2040750e:	ce22                	sw	s0,28(sp)
20407510:	1000                	addi	s0,sp,32
20407512:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:259
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20407516:	fec42703          	lw	a4,-20(s0)
2040751a:	800007b7          	lui	a5,0x80000
2040751e:	46878793          	addi	a5,a5,1128 # 80000468 <metal_segment_heap_target_end+0xffffef94>
20407522:	00f71463          	bne	a4,a5,2040752a <__metal_driver_sifive_plic0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:260
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20407526:	47ed                	li	a5,27
20407528:	a011                	j	2040752c <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:263
	}
	else {
		return 0;
2040752a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:265
	}
}
2040752c:	853e                	mv	a0,a5
2040752e:	4472                	lw	s0,28(sp)
20407530:	6105                	addi	sp,sp,32
20407532:	8082                	ret

20407534 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:268

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20407534:	1101                	addi	sp,sp,-32
20407536:	ce22                	sw	s0,28(sp)
20407538:	1000                	addi	s0,sp,32
2040753a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:269
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040753e:	fec42703          	lw	a4,-20(s0)
20407542:	800007b7          	lui	a5,0x80000
20407546:	46878793          	addi	a5,a5,1128 # 80000468 <metal_segment_heap_target_end+0xffffef94>
2040754a:	00f71463          	bne	a4,a5,20407552 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:270
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
2040754e:	479d                	li	a5,7
20407550:	a011                	j	20407554 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:273
	}
	else {
		return 0;
20407552:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:275
	}
}
20407554:	853e                	mv	a0,a5
20407556:	4472                	lw	s0,28(sp)
20407558:	6105                	addi	sp,sp,32
2040755a:	8082                	ret

2040755c <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:278

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2040755c:	1101                	addi	sp,sp,-32
2040755e:	ce22                	sw	s0,28(sp)
20407560:	1000                	addi	s0,sp,32
20407562:	fea42623          	sw	a0,-20(s0)
20407566:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:279
	if (idx == 0) {
2040756a:	fe842783          	lw	a5,-24(s0)
2040756e:	e791                	bnez	a5,2040757a <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:280
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20407570:	800007b7          	lui	a5,0x80000
20407574:	0b078793          	addi	a5,a5,176 # 800000b0 <metal_segment_heap_target_end+0xffffebdc>
20407578:	a011                	j	2040757c <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:283
	}
	else {
		return NULL;
2040757a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:285
	}
}
2040757c:	853e                	mv	a0,a5
2040757e:	4472                	lw	s0,28(sp)
20407580:	6105                	addi	sp,sp,32
20407582:	8082                	ret

20407584 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:288

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20407584:	1101                	addi	sp,sp,-32
20407586:	ce22                	sw	s0,28(sp)
20407588:	1000                	addi	s0,sp,32
2040758a:	fea42623          	sw	a0,-20(s0)
2040758e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:289
	if (idx == 0) {
20407592:	fe842783          	lw	a5,-24(s0)
20407596:	e399                	bnez	a5,2040759c <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:290
		return 11;
20407598:	47ad                	li	a5,11
2040759a:	a011                	j	2040759e <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:293
	}
	else {
		return 0;
2040759c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:295
	}
}
2040759e:	853e                	mv	a0,a5
204075a0:	4472                	lw	s0,28(sp)
204075a2:	6105                	addi	sp,sp,32
204075a4:	8082                	ret

204075a6 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:14
#include <metal/shutdown.h>
#include <metal/drivers/riscv_plic0.h>
#include <metal/machine.h>

unsigned int __metal_plic0_claim_interrupt (struct __metal_driver_riscv_plic0 *plic)
{
204075a6:	7179                	addi	sp,sp,-48
204075a8:	d606                	sw	ra,44(sp)
204075aa:	d422                	sw	s0,40(sp)
204075ac:	1800                	addi	s0,sp,48
204075ae:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:15
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
204075b2:	fdc42503          	lw	a0,-36(s0)
204075b6:	3735                	jal	204074e2 <__metal_driver_sifive_plic0_control_base>
204075b8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:16
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204075bc:	fec42703          	lw	a4,-20(s0)
204075c0:	002007b7          	lui	a5,0x200
204075c4:	0791                	addi	a5,a5,4
204075c6:	97ba                	add	a5,a5,a4
204075c8:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
					      METAL_RISCV_PLIC0_CLAIM));
}
204075ca:	853e                	mv	a0,a5
204075cc:	50b2                	lw	ra,44(sp)
204075ce:	5422                	lw	s0,40(sp)
204075d0:	6145                	addi	sp,sp,48
204075d2:	8082                	ret

204075d4 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:22

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
				    unsigned int id)
{
204075d4:	7179                	addi	sp,sp,-48
204075d6:	d606                	sw	ra,44(sp)
204075d8:	d422                	sw	s0,40(sp)
204075da:	1800                	addi	s0,sp,48
204075dc:	fca42e23          	sw	a0,-36(s0)
204075e0:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:23
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
204075e4:	fdc42503          	lw	a0,-36(s0)
204075e8:	3ded                	jal	204074e2 <__metal_driver_sifive_plic0_control_base>
204075ea:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:24
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204075ee:	fec42703          	lw	a4,-20(s0)
204075f2:	002007b7          	lui	a5,0x200
204075f6:	0791                	addi	a5,a5,4
204075f8:	97ba                	add	a5,a5,a4
204075fa:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
				       METAL_RISCV_PLIC0_CLAIM)) = id;
204075fc:	fd842783          	lw	a5,-40(s0)
20407600:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:26
}
20407602:	0001                	nop
20407604:	50b2                	lw	ra,44(sp)
20407606:	5422                	lw	s0,40(sp)
20407608:	6145                	addi	sp,sp,48
2040760a:	8082                	ret

2040760c <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29

int __metal_plic0_set_threshold(struct metal_interrupt *controller, unsigned int threshold)
{
2040760c:	7179                	addi	sp,sp,-48
2040760e:	d606                	sw	ra,44(sp)
20407610:	d422                	sw	s0,40(sp)
20407612:	1800                	addi	s0,sp,48
20407614:	fca42e23          	sw	a0,-36(s0)
20407618:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:30
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
2040761c:	fdc42503          	lw	a0,-36(s0)
20407620:	35c9                	jal	204074e2 <__metal_driver_sifive_plic0_control_base>
20407622:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20407626:	fec42703          	lw	a4,-20(s0)
2040762a:	002007b7          	lui	a5,0x200
2040762e:	97ba                	add	a5,a5,a4
20407630:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:32
				       METAL_RISCV_PLIC0_THRESHOLD)) = threshold;
20407632:	fd842783          	lw	a5,-40(s0)
20407636:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:33
    return 0;
20407638:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
}
2040763a:	853e                	mv	a0,a5
2040763c:	50b2                	lw	ra,44(sp)
2040763e:	5422                	lw	s0,40(sp)
20407640:	6145                	addi	sp,sp,48
20407642:	8082                	ret

20407644 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:37

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller)
{
20407644:	7179                	addi	sp,sp,-48
20407646:	d606                	sw	ra,44(sp)
20407648:	d422                	sw	s0,40(sp)
2040764a:	1800                	addi	s0,sp,48
2040764c:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
20407650:	fdc42503          	lw	a0,-36(s0)
20407654:	3579                	jal	204074e2 <__metal_driver_sifive_plic0_control_base>
20407656:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040765a:	fec42703          	lw	a4,-20(s0)
2040765e:	002007b7          	lui	a5,0x200
20407662:	97ba                	add	a5,a5,a4
20407664:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:42
				       METAL_RISCV_PLIC0_THRESHOLD));
}
20407666:	853e                	mv	a0,a5
20407668:	50b2                	lw	ra,44(sp)
2040766a:	5422                	lw	s0,40(sp)
2040766c:	6145                	addi	sp,sp,48
2040766e:	8082                	ret

20407670 <__metal_plic0_set_priority>:
__metal_plic0_set_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45

int __metal_plic0_set_priority(struct metal_interrupt *controller, int id, unsigned int priority)
{
20407670:	7179                	addi	sp,sp,-48
20407672:	d606                	sw	ra,44(sp)
20407674:	d422                	sw	s0,40(sp)
20407676:	1800                	addi	s0,sp,48
20407678:	fca42e23          	sw	a0,-36(s0)
2040767c:	fcb42c23          	sw	a1,-40(s0)
20407680:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)controller);
20407684:	fdc42503          	lw	a0,-36(s0)
20407688:	3da9                	jal	204074e2 <__metal_driver_sifive_plic0_control_base>
2040768a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:47
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority((struct metal_interrupt *)controller);
2040768e:	fdc42503          	lw	a0,-36(s0)
20407692:	354d                	jal	20407534 <__metal_driver_sifive_plic0_max_priority>
20407694:	87aa                	mv	a5,a0
20407696:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48
    if ( (max_priority) && (priority < max_priority) ) {
2040769a:	fe842783          	lw	a5,-24(s0)
2040769e:	c785                	beqz	a5,204076c6 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48 (discriminator 1)
204076a0:	fd442703          	lw	a4,-44(s0)
204076a4:	fe842783          	lw	a5,-24(s0)
204076a8:	00f77f63          	bgeu	a4,a5,204076c6 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49
        __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204076ac:	fd842783          	lw	a5,-40(s0)
204076b0:	078a                	slli	a5,a5,0x2
204076b2:	873e                	mv	a4,a5
204076b4:	fec42783          	lw	a5,-20(s0)
204076b8:	97ba                	add	a5,a5,a4
204076ba:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) = priority;
204076bc:	fd442783          	lw	a5,-44(s0)
204076c0:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
        return 0;
204076c2:	4781                	li	a5,0
204076c4:	a011                	j	204076c8 <__metal_plic0_set_priority+0x58>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:54
    }
    return -1;
204076c6:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:55
}
204076c8:	853e                	mv	a0,a5
204076ca:	50b2                	lw	ra,44(sp)
204076cc:	5422                	lw	s0,40(sp)
204076ce:	6145                	addi	sp,sp,48
204076d0:	8082                	ret

204076d2 <__metal_plic0_get_priority>:
__metal_plic0_get_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:58

unsigned int __metal_plic0_get_priority(struct metal_interrupt *controller, int id)
{
204076d2:	7179                	addi	sp,sp,-48
204076d4:	d606                	sw	ra,44(sp)
204076d6:	d422                	sw	s0,40(sp)
204076d8:	1800                	addi	s0,sp,48
204076da:	fca42e23          	sw	a0,-36(s0)
204076de:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
204076e2:	fdc42503          	lw	a0,-36(s0)
204076e6:	3bf5                	jal	204074e2 <__metal_driver_sifive_plic0_control_base>
204076e8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:61

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204076ec:	fd842783          	lw	a5,-40(s0)
204076f0:	078a                	slli	a5,a5,0x2
204076f2:	873e                	mv	a4,a5
204076f4:	fec42783          	lw	a5,-20(s0)
204076f8:	97ba                	add	a5,a5,a4
204076fa:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
204076fc:	853e                	mv	a0,a5
204076fe:	50b2                	lw	ra,44(sp)
20407700:	5422                	lw	s0,40(sp)
20407702:	6145                	addi	sp,sp,48
20407704:	8082                	ret

20407706 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67

void __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic, int id, int enable)
{
20407706:	7179                	addi	sp,sp,-48
20407708:	d606                	sw	ra,44(sp)
2040770a:	d422                	sw	s0,40(sp)
2040770c:	1800                	addi	s0,sp,48
2040770e:	fca42e23          	sw	a0,-36(s0)
20407712:	fcb42c23          	sw	a1,-40(s0)
20407716:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
2040771a:	fdc42503          	lw	a0,-36(s0)
2040771e:	33d1                	jal	204074e2 <__metal_driver_sifive_plic0_control_base>
20407720:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71

    current = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20407724:	fd842783          	lw	a5,-40(s0)
20407728:	8795                	srai	a5,a5,0x5
2040772a:	078a                	slli	a5,a5,0x2
2040772c:	873e                	mv	a4,a5
2040772e:	fec42783          	lw	a5,-20(s0)
20407732:	973e                	add	a4,a4,a5
20407734:	6789                	lui	a5,0x2
20407736:	97ba                	add	a5,a5,a4
20407738:	439c                	lw	a5,0(a5)
2040773a:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
						(id >> METAL_PLIC_SOURCE_SHIFT) * 4));
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
					METAL_RISCV_PLIC0_ENABLE_BASE +
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
2040773e:	fd442783          	lw	a5,-44(s0)
20407742:	cf81                	beqz	a5,2040775a <__metal_plic0_enable+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:77 (discriminator 1)
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20407744:	fd842783          	lw	a5,-40(s0)
20407748:	8bfd                	andi	a5,a5,31
2040774a:	4705                	li	a4,1
2040774c:	00f717b3          	sll	a5,a4,a5
20407750:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 1)
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20407752:	fe842783          	lw	a5,-24(s0)
20407756:	8fd9                	or	a5,a5,a4
20407758:	a829                	j	20407772 <__metal_plic0_enable+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 2)
2040775a:	fd842783          	lw	a5,-40(s0)
2040775e:	8bfd                	andi	a5,a5,31
20407760:	4705                	li	a4,1
20407762:	00f717b3          	sll	a5,a4,a5
20407766:	fff7c793          	not	a5,a5
2040776a:	873e                	mv	a4,a5
2040776c:	fe842783          	lw	a5,-24(s0)
20407770:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:74
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20407772:	fd842703          	lw	a4,-40(s0)
20407776:	8715                	srai	a4,a4,0x5
20407778:	070a                	slli	a4,a4,0x2
2040777a:	86ba                	mv	a3,a4
2040777c:	fec42703          	lw	a4,-20(s0)
20407780:	96ba                	add	a3,a3,a4
20407782:	6709                	lui	a4,0x2
20407784:	9736                	add	a4,a4,a3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20407786:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:79
}
20407788:	0001                	nop
2040778a:	50b2                	lw	ra,44(sp)
2040778c:	5422                	lw	s0,40(sp)
2040778e:	6145                	addi	sp,sp,48
20407790:	8082                	ret

20407792 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:81

void __metal_plic0_default_handler (int id, void *priv) {
20407792:	1101                	addi	sp,sp,-32
20407794:	ce06                	sw	ra,28(sp)
20407796:	cc22                	sw	s0,24(sp)
20407798:	1000                	addi	s0,sp,32
2040779a:	fea42623          	sw	a0,-20(s0)
2040779e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:82
    metal_shutdown(300);
204077a2:	12c00513          	li	a0,300
204077a6:	1ce010ef          	jal	ra,20408974 <metal_shutdown>

204077aa <__metal_plic0_handler>:
__metal_plic0_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86
}

void __metal_plic0_handler (int id, void *priv)
{
204077aa:	7179                	addi	sp,sp,-48
204077ac:	d606                	sw	ra,44(sp)
204077ae:	d422                	sw	s0,40(sp)
204077b0:	1800                	addi	s0,sp,48
204077b2:	fca42e23          	sw	a0,-36(s0)
204077b6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:87
    struct __metal_driver_riscv_plic0 *plic = priv;
204077ba:	fd842783          	lw	a5,-40(s0)
204077be:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int idx = __metal_plic0_claim_interrupt(plic);
204077c2:	fec42503          	lw	a0,-20(s0)
204077c6:	33c5                	jal	204075a6 <__metal_plic0_claim_interrupt>
204077c8:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:89
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts((struct metal_interrupt *)plic);
204077cc:	fec42503          	lw	a0,-20(s0)
204077d0:	3b35                	jal	2040750c <__metal_driver_sifive_plic0_num_interrupts>
204077d2:	87aa                	mv	a5,a0
204077d4:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91

    if ( (idx < num_interrupts) && (plic->metal_exint_table[idx]) ) {
204077d8:	fe842703          	lw	a4,-24(s0)
204077dc:	fe442783          	lw	a5,-28(s0)
204077e0:	04f77263          	bgeu	a4,a5,20407824 <__metal_plic0_handler+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91 (discriminator 1)
204077e4:	fec42703          	lw	a4,-20(s0)
204077e8:	fe842783          	lw	a5,-24(s0)
204077ec:	078a                	slli	a5,a5,0x2
204077ee:	97ba                	add	a5,a5,a4
204077f0:	479c                	lw	a5,8(a5)
204077f2:	cb8d                	beqz	a5,20407824 <__metal_plic0_handler+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:92
	plic->metal_exint_table[idx](idx,
204077f4:	fec42703          	lw	a4,-20(s0)
204077f8:	fe842783          	lw	a5,-24(s0)
204077fc:	078a                	slli	a5,a5,0x2
204077fe:	97ba                	add	a5,a5,a4
20407800:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20407804:	fe842603          	lw	a2,-24(s0)
20407808:	fec42683          	lw	a3,-20(s0)
2040780c:	fe842703          	lw	a4,-24(s0)
20407810:	87ba                	mv	a5,a4
20407812:	0786                	slli	a5,a5,0x1
20407814:	97ba                	add	a5,a5,a4
20407816:	078e                	slli	a5,a5,0x3
20407818:	97b6                	add	a5,a5,a3
2040781a:	0887a783          	lw	a5,136(a5)
2040781e:	85be                	mv	a1,a5
20407820:	8532                	mv	a0,a2
20407822:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:96
				  plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, idx);
20407824:	fe842583          	lw	a1,-24(s0)
20407828:	fec42503          	lw	a0,-20(s0)
2040782c:	3365                	jal	204075d4 <__metal_plic0_complete_interrupt>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:97
}
2040782e:	0001                	nop
20407830:	50b2                	lw	ra,44(sp)
20407832:	5422                	lw	s0,40(sp)
20407834:	6145                	addi	sp,sp,48
20407836:	8082                	ret

20407838 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100

void __metal_driver_riscv_plic0_init (struct metal_interrupt *controller)
{
20407838:	7139                	addi	sp,sp,-64
2040783a:	de06                	sw	ra,60(sp)
2040783c:	dc22                	sw	s0,56(sp)
2040783e:	0080                	addi	s0,sp,64
20407840:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:101
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407844:	fcc42783          	lw	a5,-52(s0)
20407848:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103

    if ( !plic->init_done ) {
2040784c:	fe442783          	lw	a5,-28(s0)
20407850:	43dc                	lw	a5,4(a5)
20407852:	12079063          	bnez	a5,20407972 <__metal_driver_riscv_plic0_init+0x13a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107
        int num_interrupts, line;
        struct metal_interrupt *intc;

	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20407856:	fe042623          	sw	zero,-20(s0)
2040785a:	a221                	j	20407962 <__metal_driver_riscv_plic0_init+0x12a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
	    num_interrupts = __metal_driver_sifive_plic0_num_interrupts(controller);
2040785c:	fcc42503          	lw	a0,-52(s0)
20407860:	cadff0ef          	jal	ra,2040750c <__metal_driver_sifive_plic0_num_interrupts>
20407864:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:109
	    intc = __metal_driver_sifive_plic0_interrupt_parents(controller, parent);
20407868:	fec42583          	lw	a1,-20(s0)
2040786c:	fcc42503          	lw	a0,-52(s0)
20407870:	cedff0ef          	jal	ra,2040755c <__metal_driver_sifive_plic0_interrupt_parents>
20407874:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
	    line = __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20407878:	fec42583          	lw	a1,-20(s0)
2040787c:	fcc42503          	lw	a0,-52(s0)
20407880:	d05ff0ef          	jal	ra,20407584 <__metal_driver_sifive_plic0_interrupt_lines>
20407884:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:113

	    /* Initialize ist parent controller, aka cpu_intc. */
	    intc->vtable->interrupt_init(intc);
20407888:	fdc42783          	lw	a5,-36(s0)
2040788c:	439c                	lw	a5,0(a5)
2040788e:	439c                	lw	a5,0(a5)
20407890:	fdc42503          	lw	a0,-36(s0)
20407894:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115

	    for (int i = 0; i < num_interrupts; i++) {
20407896:	fe042423          	sw	zero,-24(s0)
2040789a:	a085                	j	204078fa <__metal_driver_riscv_plic0_init+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116 (discriminator 3)
		__metal_plic0_enable(plic, i, METAL_DISABLE);
2040789c:	4601                	li	a2,0
2040789e:	fe842583          	lw	a1,-24(s0)
204078a2:	fe442503          	lw	a0,-28(s0)
204078a6:	3585                	jal	20407706 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:117 (discriminator 3)
		__metal_plic0_set_priority(controller, i, 0);
204078a8:	4601                	li	a2,0
204078aa:	fe842583          	lw	a1,-24(s0)
204078ae:	fcc42503          	lw	a0,-52(s0)
204078b2:	3b7d                	jal	20407670 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:118 (discriminator 3)
		plic->metal_exint_table[i] = NULL;
204078b4:	fe442703          	lw	a4,-28(s0)
204078b8:	fe842783          	lw	a5,-24(s0)
204078bc:	078a                	slli	a5,a5,0x2
204078be:	97ba                	add	a5,a5,a4
204078c0:	0007a423          	sw	zero,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:119 (discriminator 3)
		plic->metal_exdata_table[i].sub_int = NULL;
204078c4:	fe442683          	lw	a3,-28(s0)
204078c8:	fe842703          	lw	a4,-24(s0)
204078cc:	87ba                	mv	a5,a4
204078ce:	0786                	slli	a5,a5,0x1
204078d0:	97ba                	add	a5,a5,a4
204078d2:	078e                	slli	a5,a5,0x3
204078d4:	97b6                	add	a5,a5,a3
204078d6:	0807a223          	sw	zero,132(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120 (discriminator 3)
		plic->metal_exdata_table[i].exint_data = NULL;
204078da:	fe442683          	lw	a3,-28(s0)
204078de:	fe842703          	lw	a4,-24(s0)
204078e2:	87ba                	mv	a5,a4
204078e4:	0786                	slli	a5,a5,0x1
204078e6:	97ba                	add	a5,a5,a4
204078e8:	078e                	slli	a5,a5,0x3
204078ea:	97b6                	add	a5,a5,a3
204078ec:	0807a423          	sw	zero,136(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 3)
	    for (int i = 0; i < num_interrupts; i++) {
204078f0:	fe842783          	lw	a5,-24(s0)
204078f4:	0785                	addi	a5,a5,1
204078f6:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
204078fa:	fe842703          	lw	a4,-24(s0)
204078fe:	fe042783          	lw	a5,-32(s0)
20407902:	f8f74de3          	blt	a4,a5,2040789c <__metal_driver_riscv_plic0_init+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123 (discriminator 2)
	    }

	    __metal_plic0_set_threshold(controller, 0);
20407906:	4581                	li	a1,0
20407908:	fcc42503          	lw	a0,-52(s0)
2040790c:	d01ff0ef          	jal	ra,2040760c <__metal_plic0_set_threshold>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126 (discriminator 2)

	    /* Register plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_register(intc, line, NULL, plic);
20407910:	fdc42783          	lw	a5,-36(s0)
20407914:	439c                	lw	a5,0(a5)
20407916:	4fdc                	lw	a5,28(a5)
20407918:	fe442683          	lw	a3,-28(s0)
2040791c:	4601                	li	a2,0
2040791e:	fd842583          	lw	a1,-40(s0)
20407922:	fdc42503          	lw	a0,-36(s0)
20407926:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:128 (discriminator 2)
	    /* Register plic handler for dispatching its device interrupts */
	    intc->vtable->interrupt_register(intc, line, __metal_plic0_handler, plic);
20407928:	fdc42783          	lw	a5,-36(s0)
2040792c:	439c                	lw	a5,0(a5)
2040792e:	4fd8                	lw	a4,28(a5)
20407930:	fe442683          	lw	a3,-28(s0)
20407934:	204077b7          	lui	a5,0x20407
20407938:	7aa78613          	addi	a2,a5,1962 # 204077aa <__metal_plic0_handler>
2040793c:	fd842583          	lw	a1,-40(s0)
20407940:	fdc42503          	lw	a0,-36(s0)
20407944:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
	    /* Enable plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_enable(intc, line);
20407946:	fdc42783          	lw	a5,-36(s0)
2040794a:	439c                	lw	a5,0(a5)
2040794c:	53dc                	lw	a5,36(a5)
2040794e:	fd842583          	lw	a1,-40(s0)
20407952:	fdc42503          	lw	a0,-36(s0)
20407956:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 2)
	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20407958:	fec42783          	lw	a5,-20(s0)
2040795c:	0785                	addi	a5,a5,1
2040795e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 1)
20407962:	fec42783          	lw	a5,-20(s0)
20407966:	eef05be3          	blez	a5,2040785c <__metal_driver_riscv_plic0_init+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
	}
        plic->init_done = 1;
2040796a:	fe442783          	lw	a5,-28(s0)
2040796e:	4705                	li	a4,1
20407970:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:134
    }
}
20407972:	0001                	nop
20407974:	50f2                	lw	ra,60(sp)
20407976:	5462                	lw	s0,56(sp)
20407978:	6121                	addi	sp,sp,64
2040797a:	8082                	ret

2040797c <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

int __metal_driver_riscv_plic0_register (struct metal_interrupt *controller,
			               int id, metal_interrupt_handler_t isr,
			               void *priv)
{
2040797c:	7179                	addi	sp,sp,-48
2040797e:	d606                	sw	ra,44(sp)
20407980:	d422                	sw	s0,40(sp)
20407982:	1800                	addi	s0,sp,48
20407984:	fca42e23          	sw	a0,-36(s0)
20407988:	fcb42c23          	sw	a1,-40(s0)
2040798c:	fcc42a23          	sw	a2,-44(s0)
20407990:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:140
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407994:	fdc42783          	lw	a5,-36(s0)
20407998:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040799c:	fdc42503          	lw	a0,-36(s0)
204079a0:	b6dff0ef          	jal	ra,2040750c <__metal_driver_sifive_plic0_num_interrupts>
204079a4:	872a                	mv	a4,a0
204079a6:	fd842783          	lw	a5,-40(s0)
204079aa:	00e7c463          	blt	a5,a4,204079b2 <__metal_driver_riscv_plic0_register+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
        return -1;
204079ae:	57fd                	li	a5,-1
204079b0:	a051                	j	20407a34 <__metal_driver_riscv_plic0_register+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
    }
 
    if (isr) {
204079b2:	fd442783          	lw	a5,-44(s0)
204079b6:	cf9d                	beqz	a5,204079f4 <__metal_driver_riscv_plic0_register+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
        __metal_plic0_set_priority(controller, id, 2);
204079b8:	4609                	li	a2,2
204079ba:	fd842583          	lw	a1,-40(s0)
204079be:	fdc42503          	lw	a0,-36(s0)
204079c2:	cafff0ef          	jal	ra,20407670 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:148
	plic->metal_exint_table[id] = isr;
204079c6:	fec42703          	lw	a4,-20(s0)
204079ca:	fd842783          	lw	a5,-40(s0)
204079ce:	078a                	slli	a5,a5,0x2
204079d0:	97ba                	add	a5,a5,a4
204079d2:	fd442703          	lw	a4,-44(s0)
204079d6:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:149
	plic->metal_exdata_table[id].exint_data = priv;
204079d8:	fec42683          	lw	a3,-20(s0)
204079dc:	fd842703          	lw	a4,-40(s0)
204079e0:	87ba                	mv	a5,a4
204079e2:	0786                	slli	a5,a5,0x1
204079e4:	97ba                	add	a5,a5,a4
204079e6:	078e                	slli	a5,a5,0x3
204079e8:	97b6                	add	a5,a5,a3
204079ea:	fd042703          	lw	a4,-48(s0)
204079ee:	08e7a423          	sw	a4,136(a5)
204079f2:	a081                	j	20407a32 <__metal_driver_riscv_plic0_register+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151
    } else {
        __metal_plic0_set_priority(controller, id, 1);
204079f4:	4605                	li	a2,1
204079f6:	fd842583          	lw	a1,-40(s0)
204079fa:	fdc42503          	lw	a0,-36(s0)
204079fe:	c73ff0ef          	jal	ra,20407670 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:152
	plic->metal_exint_table[id] = __metal_plic0_default_handler;
20407a02:	fec42703          	lw	a4,-20(s0)
20407a06:	fd842783          	lw	a5,-40(s0)
20407a0a:	078a                	slli	a5,a5,0x2
20407a0c:	97ba                	add	a5,a5,a4
20407a0e:	20407737          	lui	a4,0x20407
20407a12:	79270713          	addi	a4,a4,1938 # 20407792 <__metal_plic0_default_handler>
20407a16:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:153
	plic->metal_exdata_table[id].sub_int = priv;
20407a18:	fec42683          	lw	a3,-20(s0)
20407a1c:	fd842703          	lw	a4,-40(s0)
20407a20:	87ba                	mv	a5,a4
20407a22:	0786                	slli	a5,a5,0x1
20407a24:	97ba                	add	a5,a5,a4
20407a26:	078e                	slli	a5,a5,0x3
20407a28:	97b6                	add	a5,a5,a3
20407a2a:	fd042703          	lw	a4,-48(s0)
20407a2e:	08e7a223          	sw	a4,132(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156
    }

    return 0;
20407a32:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:157
}
20407a34:	853e                	mv	a0,a5
20407a36:	50b2                	lw	ra,44(sp)
20407a38:	5422                	lw	s0,40(sp)
20407a3a:	6145                	addi	sp,sp,48
20407a3c:	8082                	ret

20407a3e <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:160

int __metal_driver_riscv_plic0_enable (struct metal_interrupt *controller, int id)
{
20407a3e:	7179                	addi	sp,sp,-48
20407a40:	d606                	sw	ra,44(sp)
20407a42:	d422                	sw	s0,40(sp)
20407a44:	1800                	addi	s0,sp,48
20407a46:	fca42e23          	sw	a0,-36(s0)
20407a4a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407a4e:	fdc42783          	lw	a5,-36(s0)
20407a52:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20407a56:	fdc42503          	lw	a0,-36(s0)
20407a5a:	ab3ff0ef          	jal	ra,2040750c <__metal_driver_sifive_plic0_num_interrupts>
20407a5e:	872a                	mv	a4,a0
20407a60:	fd842783          	lw	a5,-40(s0)
20407a64:	00e7c463          	blt	a5,a4,20407a6c <__metal_driver_riscv_plic0_enable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:164
        return -1;
20407a68:	57fd                	li	a5,-1
20407a6a:	a809                	j	20407a7c <__metal_driver_riscv_plic0_enable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167
    }

    __metal_plic0_enable(plic, id, METAL_ENABLE);
20407a6c:	4605                	li	a2,1
20407a6e:	fd842583          	lw	a1,-40(s0)
20407a72:	fec42503          	lw	a0,-20(s0)
20407a76:	c91ff0ef          	jal	ra,20407706 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    return 0;
20407a7a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:169
}
20407a7c:	853e                	mv	a0,a5
20407a7e:	50b2                	lw	ra,44(sp)
20407a80:	5422                	lw	s0,40(sp)
20407a82:	6145                	addi	sp,sp,48
20407a84:	8082                	ret

20407a86 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:172

int __metal_driver_riscv_plic0_disable (struct metal_interrupt *controller, int id)
{
20407a86:	7179                	addi	sp,sp,-48
20407a88:	d606                	sw	ra,44(sp)
20407a8a:	d422                	sw	s0,40(sp)
20407a8c:	1800                	addi	s0,sp,48
20407a8e:	fca42e23          	sw	a0,-36(s0)
20407a92:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:173
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407a96:	fdc42783          	lw	a5,-36(s0)
20407a9a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20407a9e:	fdc42503          	lw	a0,-36(s0)
20407aa2:	a6bff0ef          	jal	ra,2040750c <__metal_driver_sifive_plic0_num_interrupts>
20407aa6:	872a                	mv	a4,a0
20407aa8:	fd842783          	lw	a5,-40(s0)
20407aac:	00e7c463          	blt	a5,a4,20407ab4 <__metal_driver_riscv_plic0_disable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        return -1;
20407ab0:	57fd                	li	a5,-1
20407ab2:	a809                	j	20407ac4 <__metal_driver_riscv_plic0_disable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:178
    }
    __metal_plic0_enable(plic, id, METAL_DISABLE);
20407ab4:	4601                	li	a2,0
20407ab6:	fd842583          	lw	a1,-40(s0)
20407aba:	fec42503          	lw	a0,-20(s0)
20407abe:	c49ff0ef          	jal	ra,20407706 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    return 0;
20407ac2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
}
20407ac4:	853e                	mv	a0,a5
20407ac6:	50b2                	lw	ra,44(sp)
20407ac8:	5422                	lw	s0,40(sp)
20407aca:	6145                	addi	sp,sp,48
20407acc:	8082                	ret

20407ace <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:388
/* --------------------- sifive_global_external_interrupts0 ------------ */


/* --------------------- sifive_gpio0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_gpio0_base(struct metal_gpio *gpio)
{
20407ace:	1101                	addi	sp,sp,-32
20407ad0:	ce22                	sw	s0,28(sp)
20407ad2:	1000                	addi	s0,sp,32
20407ad4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:389
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20407ad8:	fec42703          	lw	a4,-20(s0)
20407adc:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407ae0:	00f71563          	bne	a4,a5,20407aea <__metal_driver_sifive_gpio0_base+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:390
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20407ae4:	100127b7          	lui	a5,0x10012
20407ae8:	a011                	j	20407aec <__metal_driver_sifive_gpio0_base+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:393
	}
	else {
		return 0;
20407aea:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:395
	}
}
20407aec:	853e                	mv	a0,a5
20407aee:	4472                	lw	s0,28(sp)
20407af0:	6105                	addi	sp,sp,32
20407af2:	8082                	ret

20407af4 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:418
		return 0;
	}
}

static __inline__ struct metal_interrupt * __metal_driver_sifive_gpio0_interrupt_parent(struct metal_gpio *gpio)
{
20407af4:	1101                	addi	sp,sp,-32
20407af6:	ce22                	sw	s0,28(sp)
20407af8:	1000                	addi	s0,sp,32
20407afa:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:419
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20407afe:	fec42703          	lw	a4,-20(s0)
20407b02:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407b06:	00f71763          	bne	a4,a5,20407b14 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:420
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20407b0a:	800007b7          	lui	a5,0x80000
20407b0e:	46878793          	addi	a5,a5,1128 # 80000468 <metal_segment_heap_target_end+0xffffef94>
20407b12:	a011                	j	20407b16 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:423
	}
	else {
		return 0;
20407b14:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:425
	}
}
20407b16:	853e                	mv	a0,a5
20407b18:	4472                	lw	s0,28(sp)
20407b1a:	6105                	addi	sp,sp,32
20407b1c:	8082                	ret

20407b1e <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:428

static __inline__ int __metal_driver_sifive_gpio0_interrupt_lines(struct metal_gpio *gpio, int idx)
{
20407b1e:	1101                	addi	sp,sp,-32
20407b20:	ce22                	sw	s0,28(sp)
20407b22:	1000                	addi	s0,sp,32
20407b24:	fea42623          	sw	a0,-20(s0)
20407b28:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:429
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20407b2c:	fec42703          	lw	a4,-20(s0)
20407b30:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407b34:	00f71763          	bne	a4,a5,20407b42 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:429 (discriminator 1)
20407b38:	fe842783          	lw	a5,-24(s0)
20407b3c:	e399                	bnez	a5,20407b42 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:430
		return 7;
20407b3e:	479d                	li	a5,7
20407b40:	a269                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:432
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20407b42:	fec42703          	lw	a4,-20(s0)
20407b46:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407b4a:	00f71963          	bne	a4,a5,20407b5c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:432 (discriminator 1)
20407b4e:	fe842703          	lw	a4,-24(s0)
20407b52:	4785                	li	a5,1
20407b54:	00f71463          	bne	a4,a5,20407b5c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:433
		return 8;
20407b58:	47a1                	li	a5,8
20407b5a:	aa85                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:435
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20407b5c:	fec42703          	lw	a4,-20(s0)
20407b60:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407b64:	00f71963          	bne	a4,a5,20407b76 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:435 (discriminator 1)
20407b68:	fe842703          	lw	a4,-24(s0)
20407b6c:	4789                	li	a5,2
20407b6e:	00f71463          	bne	a4,a5,20407b76 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:436
		return 9;
20407b72:	47a5                	li	a5,9
20407b74:	aa99                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:438
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20407b76:	fec42703          	lw	a4,-20(s0)
20407b7a:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407b7e:	00f71963          	bne	a4,a5,20407b90 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:438 (discriminator 1)
20407b82:	fe842703          	lw	a4,-24(s0)
20407b86:	478d                	li	a5,3
20407b88:	00f71463          	bne	a4,a5,20407b90 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:439
		return 10;
20407b8c:	47a9                	li	a5,10
20407b8e:	aa35                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:441
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20407b90:	fec42703          	lw	a4,-20(s0)
20407b94:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407b98:	00f71963          	bne	a4,a5,20407baa <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:441 (discriminator 1)
20407b9c:	fe842703          	lw	a4,-24(s0)
20407ba0:	4791                	li	a5,4
20407ba2:	00f71463          	bne	a4,a5,20407baa <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:442
		return 11;
20407ba6:	47ad                	li	a5,11
20407ba8:	a20d                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:444
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20407baa:	fec42703          	lw	a4,-20(s0)
20407bae:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407bb2:	00f71963          	bne	a4,a5,20407bc4 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:444 (discriminator 1)
20407bb6:	fe842703          	lw	a4,-24(s0)
20407bba:	4795                	li	a5,5
20407bbc:	00f71463          	bne	a4,a5,20407bc4 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:445
		return 12;
20407bc0:	47b1                	li	a5,12
20407bc2:	a221                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:447
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20407bc4:	fec42703          	lw	a4,-20(s0)
20407bc8:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407bcc:	00f71963          	bne	a4,a5,20407bde <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:447 (discriminator 1)
20407bd0:	fe842703          	lw	a4,-24(s0)
20407bd4:	4799                	li	a5,6
20407bd6:	00f71463          	bne	a4,a5,20407bde <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:448
		return 13;
20407bda:	47b5                	li	a5,13
20407bdc:	a0fd                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:450
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20407bde:	fec42703          	lw	a4,-20(s0)
20407be2:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407be6:	00f71963          	bne	a4,a5,20407bf8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:450 (discriminator 1)
20407bea:	fe842703          	lw	a4,-24(s0)
20407bee:	479d                	li	a5,7
20407bf0:	00f71463          	bne	a4,a5,20407bf8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:451
		return 14;
20407bf4:	47b9                	li	a5,14
20407bf6:	a8d1                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:453
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20407bf8:	fec42703          	lw	a4,-20(s0)
20407bfc:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407c00:	00f71963          	bne	a4,a5,20407c12 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:453 (discriminator 1)
20407c04:	fe842703          	lw	a4,-24(s0)
20407c08:	47a1                	li	a5,8
20407c0a:	00f71463          	bne	a4,a5,20407c12 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:454
		return 15;
20407c0e:	47bd                	li	a5,15
20407c10:	a86d                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:456
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20407c12:	fec42703          	lw	a4,-20(s0)
20407c16:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407c1a:	00f71963          	bne	a4,a5,20407c2c <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:456 (discriminator 1)
20407c1e:	fe842703          	lw	a4,-24(s0)
20407c22:	47a5                	li	a5,9
20407c24:	00f71463          	bne	a4,a5,20407c2c <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:457
		return 16;
20407c28:	47c1                	li	a5,16
20407c2a:	a045                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:459
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20407c2c:	fec42703          	lw	a4,-20(s0)
20407c30:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407c34:	00f71963          	bne	a4,a5,20407c46 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:459 (discriminator 1)
20407c38:	fe842703          	lw	a4,-24(s0)
20407c3c:	47a9                	li	a5,10
20407c3e:	00f71463          	bne	a4,a5,20407c46 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:460
		return 17;
20407c42:	47c5                	li	a5,17
20407c44:	a059                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:462
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20407c46:	fec42703          	lw	a4,-20(s0)
20407c4a:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407c4e:	00f71963          	bne	a4,a5,20407c60 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:462 (discriminator 1)
20407c52:	fe842703          	lw	a4,-24(s0)
20407c56:	47ad                	li	a5,11
20407c58:	00f71463          	bne	a4,a5,20407c60 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:463
		return 18;
20407c5c:	47c9                	li	a5,18
20407c5e:	a0b5                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:465
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20407c60:	fec42703          	lw	a4,-20(s0)
20407c64:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407c68:	00f71963          	bne	a4,a5,20407c7a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:465 (discriminator 1)
20407c6c:	fe842703          	lw	a4,-24(s0)
20407c70:	47b1                	li	a5,12
20407c72:	00f71463          	bne	a4,a5,20407c7a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:466
		return 19;
20407c76:	47cd                	li	a5,19
20407c78:	a889                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:468
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20407c7a:	fec42703          	lw	a4,-20(s0)
20407c7e:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407c82:	00f71963          	bne	a4,a5,20407c94 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:468 (discriminator 1)
20407c86:	fe842703          	lw	a4,-24(s0)
20407c8a:	47b5                	li	a5,13
20407c8c:	00f71463          	bne	a4,a5,20407c94 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:469
		return 20;
20407c90:	47d1                	li	a5,20
20407c92:	a825                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:471
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20407c94:	fec42703          	lw	a4,-20(s0)
20407c98:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407c9c:	00f71963          	bne	a4,a5,20407cae <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:471 (discriminator 1)
20407ca0:	fe842703          	lw	a4,-24(s0)
20407ca4:	47b9                	li	a5,14
20407ca6:	00f71463          	bne	a4,a5,20407cae <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:472
		return 21;
20407caa:	47d5                	li	a5,21
20407cac:	a839                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:474
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20407cae:	fec42703          	lw	a4,-20(s0)
20407cb2:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20407cb6:	00f71963          	bne	a4,a5,20407cc8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:474 (discriminator 1)
20407cba:	fe842703          	lw	a4,-24(s0)
20407cbe:	47bd                	li	a5,15
20407cc0:	00f71463          	bne	a4,a5,20407cc8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:475
		return 22;
20407cc4:	47d9                	li	a5,22
20407cc6:	a011                	j	20407cca <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:478
	}
	else {
		return 0;
20407cc8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:480
	}
}
20407cca:	853e                	mv	a0,a5
20407ccc:	4472                	lw	s0,28(sp)
20407cce:	6105                	addi	sp,sp,32
20407cd0:	8082                	ret

20407cd2 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio, long source)
{
20407cd2:	7179                	addi	sp,sp,-48
20407cd4:	d606                	sw	ra,44(sp)
20407cd6:	d422                	sw	s0,40(sp)
20407cd8:	1800                	addi	s0,sp,48
20407cda:	fca42e23          	sw	a0,-36(s0)
20407cde:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407ce2:	fdc42503          	lw	a0,-36(s0)
20407ce6:	33e5                	jal	20407ace <__metal_driver_sifive_gpio0_base>
20407ce8:	87aa                	mv	a5,a0
20407cea:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  |= source;
20407cee:	fec42783          	lw	a5,-20(s0)
20407cf2:	0791                	addi	a5,a5,4
20407cf4:	4398                	lw	a4,0(a5)
20407cf6:	fd842783          	lw	a5,-40(s0)
20407cfa:	fec42683          	lw	a3,-20(s0)
20407cfe:	0691                	addi	a3,a3,4
20407d00:	8fd9                	or	a5,a5,a4
20407d02:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:18

    return 0;
20407d04:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19
}
20407d06:	853e                	mv	a0,a5
20407d08:	50b2                	lw	ra,44(sp)
20407d0a:	5422                	lw	s0,40(sp)
20407d0c:	6145                	addi	sp,sp,48
20407d0e:	8082                	ret

20407d10 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:22

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio, long source)
{
20407d10:	7179                	addi	sp,sp,-48
20407d12:	d606                	sw	ra,44(sp)
20407d14:	d422                	sw	s0,40(sp)
20407d16:	1800                	addi	s0,sp,48
20407d18:	fca42e23          	sw	a0,-36(s0)
20407d1c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407d20:	fdc42503          	lw	a0,-36(s0)
20407d24:	dabff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407d28:	87aa                	mv	a5,a0
20407d2a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:25

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  &= ~source;
20407d2e:	fec42783          	lw	a5,-20(s0)
20407d32:	0791                	addi	a5,a5,4
20407d34:	439c                	lw	a5,0(a5)
20407d36:	fd842703          	lw	a4,-40(s0)
20407d3a:	fff74713          	not	a4,a4
20407d3e:	86ba                	mv	a3,a4
20407d40:	fec42703          	lw	a4,-20(s0)
20407d44:	0711                	addi	a4,a4,4
20407d46:	8ff5                	and	a5,a5,a3
20407d48:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    return 0;
20407d4a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:28
}
20407d4c:	853e                	mv	a0,a5
20407d4e:	50b2                	lw	ra,44(sp)
20407d50:	5422                	lw	s0,40(sp)
20407d52:	6145                	addi	sp,sp,48
20407d54:	8082                	ret

20407d56 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:31

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio)
{
20407d56:	7179                	addi	sp,sp,-48
20407d58:	d606                	sw	ra,44(sp)
20407d5a:	d422                	sw	s0,40(sp)
20407d5c:	1800                	addi	s0,sp,48
20407d5e:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407d62:	fdc42503          	lw	a0,-36(s0)
20407d66:	d69ff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407d6a:	87aa                	mv	a5,a0
20407d6c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:34

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
20407d70:	fec42783          	lw	a5,-20(s0)
20407d74:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35
}
20407d76:	853e                	mv	a0,a5
20407d78:	50b2                	lw	ra,44(sp)
20407d7a:	5422                	lw	s0,40(sp)
20407d7c:	6145                	addi	sp,sp,48
20407d7e:	8082                	ret

20407d80 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:38

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio)
{
20407d80:	7179                	addi	sp,sp,-48
20407d82:	d606                	sw	ra,44(sp)
20407d84:	d422                	sw	s0,40(sp)
20407d86:	1800                	addi	s0,sp,48
20407d88:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407d8c:	fdc42503          	lw	a0,-36(s0)
20407d90:	d3fff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407d94:	87aa                	mv	a5,a0
20407d96:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:41

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
20407d9a:	fec42783          	lw	a5,-20(s0)
20407d9e:	07b1                	addi	a5,a5,12
20407da0:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42
}
20407da2:	853e                	mv	a0,a5
20407da4:	50b2                	lw	ra,44(sp)
20407da6:	5422                	lw	s0,40(sp)
20407da8:	6145                	addi	sp,sp,48
20407daa:	8082                	ret

20407dac <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:46


int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio, long source)
{
20407dac:	7179                	addi	sp,sp,-48
20407dae:	d606                	sw	ra,44(sp)
20407db0:	d422                	sw	s0,40(sp)
20407db2:	1800                	addi	s0,sp,48
20407db4:	fca42e23          	sw	a0,-36(s0)
20407db8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407dbc:	fdc42503          	lw	a0,-36(s0)
20407dc0:	d0fff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407dc4:	87aa                	mv	a5,a0
20407dc6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:49

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  &= ~source;
20407dca:	fec42783          	lw	a5,-20(s0)
20407dce:	07a1                	addi	a5,a5,8
20407dd0:	439c                	lw	a5,0(a5)
20407dd2:	fd842703          	lw	a4,-40(s0)
20407dd6:	fff74713          	not	a4,a4
20407dda:	86ba                	mv	a3,a4
20407ddc:	fec42703          	lw	a4,-20(s0)
20407de0:	0721                	addi	a4,a4,8
20407de2:	8ff5                	and	a5,a5,a3
20407de4:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    return 0;
20407de6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:52
}
20407de8:	853e                	mv	a0,a5
20407dea:	50b2                	lw	ra,44(sp)
20407dec:	5422                	lw	s0,40(sp)
20407dee:	6145                	addi	sp,sp,48
20407df0:	8082                	ret

20407df2 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:55

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio, long source)
{
20407df2:	7179                	addi	sp,sp,-48
20407df4:	d606                	sw	ra,44(sp)
20407df6:	d422                	sw	s0,40(sp)
20407df8:	1800                	addi	s0,sp,48
20407dfa:	fca42e23          	sw	a0,-36(s0)
20407dfe:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:56
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407e02:	fdc42503          	lw	a0,-36(s0)
20407e06:	cc9ff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407e0a:	87aa                	mv	a5,a0
20407e0c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  |= source;
20407e10:	fec42783          	lw	a5,-20(s0)
20407e14:	07a1                	addi	a5,a5,8
20407e16:	4398                	lw	a4,0(a5)
20407e18:	fd842783          	lw	a5,-40(s0)
20407e1c:	fec42683          	lw	a3,-20(s0)
20407e20:	06a1                	addi	a3,a3,8
20407e22:	8fd9                	or	a5,a5,a4
20407e24:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:60

    return 0;
20407e26:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61
}
20407e28:	853e                	mv	a0,a5
20407e2a:	50b2                	lw	ra,44(sp)
20407e2c:	5422                	lw	s0,40(sp)
20407e2e:	6145                	addi	sp,sp,48
20407e30:	8082                	ret

20407e32 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio, long value)
{
20407e32:	7179                	addi	sp,sp,-48
20407e34:	d606                	sw	ra,44(sp)
20407e36:	d422                	sw	s0,40(sp)
20407e38:	1800                	addi	s0,sp,48
20407e3a:	fca42e23          	sw	a0,-36(s0)
20407e3e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:65
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407e42:	fdc42503          	lw	a0,-36(s0)
20407e46:	c89ff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407e4a:	87aa                	mv	a5,a0
20407e4c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |= value;
20407e50:	fec42783          	lw	a5,-20(s0)
20407e54:	07b1                	addi	a5,a5,12
20407e56:	4398                	lw	a4,0(a5)
20407e58:	fd842783          	lw	a5,-40(s0)
20407e5c:	fec42683          	lw	a3,-20(s0)
20407e60:	06b1                	addi	a3,a3,12
20407e62:	8fd9                	or	a5,a5,a4
20407e64:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:69

    return 0;
20407e66:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70
}
20407e68:	853e                	mv	a0,a5
20407e6a:	50b2                	lw	ra,44(sp)
20407e6c:	5422                	lw	s0,40(sp)
20407e6e:	6145                	addi	sp,sp,48
20407e70:	8082                	ret

20407e72 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio, long value)
{
20407e72:	7179                	addi	sp,sp,-48
20407e74:	d606                	sw	ra,44(sp)
20407e76:	d422                	sw	s0,40(sp)
20407e78:	1800                	addi	s0,sp,48
20407e7a:	fca42e23          	sw	a0,-36(s0)
20407e7e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407e82:	fdc42503          	lw	a0,-36(s0)
20407e86:	c49ff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407e8a:	87aa                	mv	a5,a0
20407e8c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:76

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &= ~value;
20407e90:	fec42783          	lw	a5,-20(s0)
20407e94:	07b1                	addi	a5,a5,12
20407e96:	439c                	lw	a5,0(a5)
20407e98:	fd842703          	lw	a4,-40(s0)
20407e9c:	fff74713          	not	a4,a4
20407ea0:	86ba                	mv	a3,a4
20407ea2:	fec42703          	lw	a4,-20(s0)
20407ea6:	0731                	addi	a4,a4,12
20407ea8:	8ff5                	and	a5,a5,a3
20407eaa:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78

    return 0;
20407eac:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:79
}
20407eae:	853e                	mv	a0,a5
20407eb0:	50b2                	lw	ra,44(sp)
20407eb2:	5422                	lw	s0,40(sp)
20407eb4:	6145                	addi	sp,sp,48
20407eb6:	8082                	ret

20407eb8 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:82

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio, long value)
{
20407eb8:	7179                	addi	sp,sp,-48
20407eba:	d606                	sw	ra,44(sp)
20407ebc:	d422                	sw	s0,40(sp)
20407ebe:	1800                	addi	s0,sp,48
20407ec0:	fca42e23          	sw	a0,-36(s0)
20407ec4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407ec8:	fdc42503          	lw	a0,-36(s0)
20407ecc:	c03ff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407ed0:	87aa                	mv	a5,a0
20407ed2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
20407ed6:	fec42783          	lw	a5,-20(s0)
20407eda:	07b1                	addi	a5,a5,12
20407edc:	4398                	lw	a4,0(a5)
20407ede:	fd842783          	lw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20407ee2:	fec42683          	lw	a3,-20(s0)
20407ee6:	06b1                	addi	a3,a3,12
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
20407ee8:	8fb9                	xor	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20407eea:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88

    return 0;
20407eec:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:89
}
20407eee:	853e                	mv	a0,a5
20407ef0:	50b2                	lw	ra,44(sp)
20407ef2:	5422                	lw	s0,40(sp)
20407ef4:	6145                	addi	sp,sp,48
20407ef6:	8082                	ret

20407ef8 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source, long dest)
{
20407ef8:	7179                	addi	sp,sp,-48
20407efa:	d606                	sw	ra,44(sp)
20407efc:	d422                	sw	s0,40(sp)
20407efe:	1800                	addi	s0,sp,48
20407f00:	fca42e23          	sw	a0,-36(s0)
20407f04:	fcb42c23          	sw	a1,-40(s0)
20407f08:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:93
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407f0c:	fdc42503          	lw	a0,-36(s0)
20407f10:	bbfff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407f14:	87aa                	mv	a5,a0
20407f16:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) &= ~source;
20407f1a:	fec42783          	lw	a5,-20(s0)
20407f1e:	03c78793          	addi	a5,a5,60
20407f22:	439c                	lw	a5,0(a5)
20407f24:	fd842703          	lw	a4,-40(s0)
20407f28:	fff74713          	not	a4,a4
20407f2c:	86ba                	mv	a3,a4
20407f2e:	fec42703          	lw	a4,-20(s0)
20407f32:	03c70713          	addi	a4,a4,60
20407f36:	8ff5                	and	a5,a5,a3
20407f38:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  |= dest;
20407f3a:	fec42783          	lw	a5,-20(s0)
20407f3e:	03878793          	addi	a5,a5,56
20407f42:	4398                	lw	a4,0(a5)
20407f44:	fd442783          	lw	a5,-44(s0)
20407f48:	fec42683          	lw	a3,-20(s0)
20407f4c:	03868693          	addi	a3,a3,56
20407f50:	8fd9                	or	a5,a5,a4
20407f52:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:98

    return 0;
20407f54:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99
}
20407f56:	853e                	mv	a0,a5
20407f58:	50b2                	lw	ra,44(sp)
20407f5a:	5422                	lw	s0,40(sp)
20407f5c:	6145                	addi	sp,sp,48
20407f5e:	8082                	ret

20407f60 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:102

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio, long source)
{
20407f60:	7179                	addi	sp,sp,-48
20407f62:	d606                	sw	ra,44(sp)
20407f64:	d422                	sw	s0,40(sp)
20407f66:	1800                	addi	s0,sp,48
20407f68:	fca42e23          	sw	a0,-36(s0)
20407f6c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407f70:	fdc42503          	lw	a0,-36(s0)
20407f74:	b5bff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407f78:	87aa                	mv	a5,a0
20407f7a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:105

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  &= ~source;
20407f7e:	fec42783          	lw	a5,-20(s0)
20407f82:	03878793          	addi	a5,a5,56
20407f86:	439c                	lw	a5,0(a5)
20407f88:	fd842703          	lw	a4,-40(s0)
20407f8c:	fff74713          	not	a4,a4
20407f90:	86ba                	mv	a3,a4
20407f92:	fec42703          	lw	a4,-20(s0)
20407f96:	03870713          	addi	a4,a4,56
20407f9a:	8ff5                	and	a5,a5,a3
20407f9c:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107

    return 0;
20407f9e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20407fa0:	853e                	mv	a0,a5
20407fa2:	50b2                	lw	ra,44(sp)
20407fa4:	5422                	lw	s0,40(sp)
20407fa6:	6145                	addi	sp,sp,48
20407fa8:	8082                	ret

20407faa <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio, long source, int intr_type)
{
20407faa:	7179                	addi	sp,sp,-48
20407fac:	d606                	sw	ra,44(sp)
20407fae:	d422                	sw	s0,40(sp)
20407fb0:	1800                	addi	s0,sp,48
20407fb2:	fca42e23          	sw	a0,-36(s0)
20407fb6:	fcb42c23          	sw	a1,-40(s0)
20407fba:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407fbe:	fdc42503          	lw	a0,-36(s0)
20407fc2:	b0dff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
20407fc6:	87aa                	mv	a5,a0
20407fc8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    switch (intr_type)
20407fcc:	fd442703          	lw	a4,-44(s0)
20407fd0:	479d                	li	a5,7
20407fd2:	1ce7e963          	bltu	a5,a4,204081a4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20407fd6:	fd442783          	lw	a5,-44(s0)
20407fda:	00279713          	slli	a4,a5,0x2
20407fde:	204097b7          	lui	a5,0x20409
20407fe2:	2fc78793          	addi	a5,a5,764 # 204092fc <__metal_driver_vtable_riscv_plic0+0x4c>
20407fe6:	97ba                	add	a5,a5,a4
20407fe8:	439c                	lw	a5,0(a5)
20407fea:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117
    {
        case METAL_GPIO_INT_DISABLE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  &= ~source;
20407fec:	fec42783          	lw	a5,-20(s0)
20407ff0:	07e1                	addi	a5,a5,24
20407ff2:	439c                	lw	a5,0(a5)
20407ff4:	fd842703          	lw	a4,-40(s0)
20407ff8:	fff74713          	not	a4,a4
20407ffc:	86ba                	mv	a3,a4
20407ffe:	fec42703          	lw	a4,-20(s0)
20408002:	0761                	addi	a4,a4,24
20408004:	8ff5                	and	a5,a5,a3
20408006:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  &= ~source;
20408008:	fec42783          	lw	a5,-20(s0)
2040800c:	02078793          	addi	a5,a5,32
20408010:	439c                	lw	a5,0(a5)
20408012:	fd842703          	lw	a4,-40(s0)
20408016:	fff74713          	not	a4,a4
2040801a:	86ba                	mv	a3,a4
2040801c:	fec42703          	lw	a4,-20(s0)
20408020:	02070713          	addi	a4,a4,32
20408024:	8ff5                	and	a5,a5,a3
20408026:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:119
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  &= ~source;
20408028:	fec42783          	lw	a5,-20(s0)
2040802c:	02878793          	addi	a5,a5,40
20408030:	439c                	lw	a5,0(a5)
20408032:	fd842703          	lw	a4,-40(s0)
20408036:	fff74713          	not	a4,a4
2040803a:	86ba                	mv	a3,a4
2040803c:	fec42703          	lw	a4,-20(s0)
20408040:	02870713          	addi	a4,a4,40
20408044:	8ff5                	and	a5,a5,a3
20408046:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:120
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  &= ~source;
20408048:	fec42783          	lw	a5,-20(s0)
2040804c:	03078793          	addi	a5,a5,48
20408050:	439c                	lw	a5,0(a5)
20408052:	fd842703          	lw	a4,-40(s0)
20408056:	fff74713          	not	a4,a4
2040805a:	86ba                	mv	a3,a4
2040805c:	fec42703          	lw	a4,-20(s0)
20408060:	03070713          	addi	a4,a4,48
20408064:	8ff5                	and	a5,a5,a3
20408066:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121
            break;
20408068:	aa35                	j	204081a4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:123
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
2040806a:	fec42783          	lw	a5,-20(s0)
2040806e:	07e1                	addi	a5,a5,24
20408070:	4398                	lw	a4,0(a5)
20408072:	fd842783          	lw	a5,-40(s0)
20408076:	fec42683          	lw	a3,-20(s0)
2040807a:	06e1                	addi	a3,a3,24
2040807c:	8fd9                	or	a5,a5,a4
2040807e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124
            break;
20408080:	a215                	j	204081a4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:126
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20408082:	fec42783          	lw	a5,-20(s0)
20408086:	02078793          	addi	a5,a5,32
2040808a:	4398                	lw	a4,0(a5)
2040808c:	fd842783          	lw	a5,-40(s0)
20408090:	fec42683          	lw	a3,-20(s0)
20408094:	02068693          	addi	a3,a3,32
20408098:	8fd9                	or	a5,a5,a4
2040809a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
            break;
2040809c:	a221                	j	204081a4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
2040809e:	fec42783          	lw	a5,-20(s0)
204080a2:	07e1                	addi	a5,a5,24
204080a4:	4398                	lw	a4,0(a5)
204080a6:	fd842783          	lw	a5,-40(s0)
204080aa:	fec42683          	lw	a3,-20(s0)
204080ae:	06e1                	addi	a3,a3,24
204080b0:	8fd9                	or	a5,a5,a4
204080b2:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:130
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
204080b4:	fec42783          	lw	a5,-20(s0)
204080b8:	02078793          	addi	a5,a5,32
204080bc:	4398                	lw	a4,0(a5)
204080be:	fd842783          	lw	a5,-40(s0)
204080c2:	fec42683          	lw	a3,-20(s0)
204080c6:	02068693          	addi	a3,a3,32
204080ca:	8fd9                	or	a5,a5,a4
204080cc:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
            break;
204080ce:	a8d9                	j	204081a4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
204080d0:	fec42783          	lw	a5,-20(s0)
204080d4:	02878793          	addi	a5,a5,40
204080d8:	4398                	lw	a4,0(a5)
204080da:	fd842783          	lw	a5,-40(s0)
204080de:	fec42683          	lw	a3,-20(s0)
204080e2:	02868693          	addi	a3,a3,40
204080e6:	8fd9                	or	a5,a5,a4
204080e8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
            break;
204080ea:	a86d                	j	204081a4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:136
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
204080ec:	fec42783          	lw	a5,-20(s0)
204080f0:	03078793          	addi	a5,a5,48
204080f4:	4398                	lw	a4,0(a5)
204080f6:	fd842783          	lw	a5,-40(s0)
204080fa:	fec42683          	lw	a3,-20(s0)
204080fe:	03068693          	addi	a3,a3,48
20408102:	8fd9                	or	a5,a5,a4
20408104:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
            break;
20408106:	a879                	j	204081a4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:139
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20408108:	fec42783          	lw	a5,-20(s0)
2040810c:	02878793          	addi	a5,a5,40
20408110:	4398                	lw	a4,0(a5)
20408112:	fd842783          	lw	a5,-40(s0)
20408116:	fec42683          	lw	a3,-20(s0)
2040811a:	02868693          	addi	a3,a3,40
2040811e:	8fd9                	or	a5,a5,a4
20408120:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:140
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20408122:	fec42783          	lw	a5,-20(s0)
20408126:	03078793          	addi	a5,a5,48
2040812a:	4398                	lw	a4,0(a5)
2040812c:	fd842783          	lw	a5,-40(s0)
20408130:	fec42683          	lw	a3,-20(s0)
20408134:	03068693          	addi	a3,a3,48
20408138:	8fd9                	or	a5,a5,a4
2040813a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
            break;
2040813c:	a0a5                	j	204081a4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:143
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
2040813e:	fec42783          	lw	a5,-20(s0)
20408142:	07e1                	addi	a5,a5,24
20408144:	4398                	lw	a4,0(a5)
20408146:	fd842783          	lw	a5,-40(s0)
2040814a:	fec42683          	lw	a3,-20(s0)
2040814e:	06e1                	addi	a3,a3,24
20408150:	8fd9                	or	a5,a5,a4
20408152:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:144
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20408154:	fec42783          	lw	a5,-20(s0)
20408158:	02078793          	addi	a5,a5,32
2040815c:	4398                	lw	a4,0(a5)
2040815e:	fd842783          	lw	a5,-40(s0)
20408162:	fec42683          	lw	a3,-20(s0)
20408166:	02068693          	addi	a3,a3,32
2040816a:	8fd9                	or	a5,a5,a4
2040816c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
2040816e:	fec42783          	lw	a5,-20(s0)
20408172:	02878793          	addi	a5,a5,40
20408176:	4398                	lw	a4,0(a5)
20408178:	fd842783          	lw	a5,-40(s0)
2040817c:	fec42683          	lw	a3,-20(s0)
20408180:	02868693          	addi	a3,a3,40
20408184:	8fd9                	or	a5,a5,a4
20408186:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:146
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20408188:	fec42783          	lw	a5,-20(s0)
2040818c:	03078793          	addi	a5,a5,48
20408190:	4398                	lw	a4,0(a5)
20408192:	fd842783          	lw	a5,-40(s0)
20408196:	fec42683          	lw	a3,-20(s0)
2040819a:	03068693          	addi	a3,a3,48
2040819e:	8fd9                	or	a5,a5,a4
204081a0:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
            break;
204081a2:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:149
    }
    return 0;
204081a4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:150
}
204081a6:	853e                	mv	a0,a5
204081a8:	50b2                	lw	ra,44(sp)
204081aa:	5422                	lw	s0,40(sp)
204081ac:	6145                	addi	sp,sp,48
204081ae:	8082                	ret

204081b0 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:153

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source, int intr_type)
{
204081b0:	7179                	addi	sp,sp,-48
204081b2:	d606                	sw	ra,44(sp)
204081b4:	d422                	sw	s0,40(sp)
204081b6:	1800                	addi	s0,sp,48
204081b8:	fca42e23          	sw	a0,-36(s0)
204081bc:	fcb42c23          	sw	a1,-40(s0)
204081c0:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:154
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204081c4:	fdc42503          	lw	a0,-36(s0)
204081c8:	907ff0ef          	jal	ra,20407ace <__metal_driver_sifive_gpio0_base>
204081cc:	87aa                	mv	a5,a0
204081ce:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156

    switch (intr_type)
204081d2:	fd442703          	lw	a4,-44(s0)
204081d6:	479d                	li	a5,7
204081d8:	14e7ea63          	bltu	a5,a4,2040832c <__metal_driver_sifive_gpio0_clear_int+0x17c>
204081dc:	fd442783          	lw	a5,-44(s0)
204081e0:	00279713          	slli	a4,a5,0x2
204081e4:	204097b7          	lui	a5,0x20409
204081e8:	31c78793          	addi	a5,a5,796 # 2040931c <__metal_driver_vtable_riscv_plic0+0x6c>
204081ec:	97ba                	add	a5,a5,a4
204081ee:	439c                	lw	a5,0(a5)
204081f0:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    {
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
204081f2:	fec42783          	lw	a5,-20(s0)
204081f6:	07f1                	addi	a5,a5,28
204081f8:	4398                	lw	a4,0(a5)
204081fa:	fd842783          	lw	a5,-40(s0)
204081fe:	fec42683          	lw	a3,-20(s0)
20408202:	06f1                	addi	a3,a3,28
20408204:	8fd9                	or	a5,a5,a4
20408206:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:160
            break;
20408208:	a215                	j	2040832c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
2040820a:	fec42783          	lw	a5,-20(s0)
2040820e:	02478793          	addi	a5,a5,36
20408212:	4398                	lw	a4,0(a5)
20408214:	fd842783          	lw	a5,-40(s0)
20408218:	fec42683          	lw	a3,-20(s0)
2040821c:	02468693          	addi	a3,a3,36
20408220:	8fd9                	or	a5,a5,a4
20408222:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:163
            break;
20408224:	a221                	j	2040832c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20408226:	fec42783          	lw	a5,-20(s0)
2040822a:	07f1                	addi	a5,a5,28
2040822c:	4398                	lw	a4,0(a5)
2040822e:	fd842783          	lw	a5,-40(s0)
20408232:	fec42683          	lw	a3,-20(s0)
20408236:	06f1                	addi	a3,a3,28
20408238:	8fd9                	or	a5,a5,a4
2040823a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:166
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
2040823c:	fec42783          	lw	a5,-20(s0)
20408240:	02478793          	addi	a5,a5,36
20408244:	4398                	lw	a4,0(a5)
20408246:	fd842783          	lw	a5,-40(s0)
2040824a:	fec42683          	lw	a3,-20(s0)
2040824e:	02468693          	addi	a3,a3,36
20408252:	8fd9                	or	a5,a5,a4
20408254:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
            break;
20408256:	a8d9                	j	2040832c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20408258:	fec42783          	lw	a5,-20(s0)
2040825c:	02c78793          	addi	a5,a5,44
20408260:	4398                	lw	a4,0(a5)
20408262:	fd842783          	lw	a5,-40(s0)
20408266:	fec42683          	lw	a3,-20(s0)
2040826a:	02c68693          	addi	a3,a3,44
2040826e:	8fd9                	or	a5,a5,a4
20408270:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:170
            break;
20408272:	a86d                	j	2040832c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20408274:	fec42783          	lw	a5,-20(s0)
20408278:	03478793          	addi	a5,a5,52
2040827c:	4398                	lw	a4,0(a5)
2040827e:	fd842783          	lw	a5,-40(s0)
20408282:	fec42683          	lw	a3,-20(s0)
20408286:	03468693          	addi	a3,a3,52
2040828a:	8fd9                	or	a5,a5,a4
2040828c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:173
            break;
2040828e:	a879                	j	2040832c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20408290:	fec42783          	lw	a5,-20(s0)
20408294:	02c78793          	addi	a5,a5,44
20408298:	4398                	lw	a4,0(a5)
2040829a:	fd842783          	lw	a5,-40(s0)
2040829e:	fec42683          	lw	a3,-20(s0)
204082a2:	02c68693          	addi	a3,a3,44
204082a6:	8fd9                	or	a5,a5,a4
204082a8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:176
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
204082aa:	fec42783          	lw	a5,-20(s0)
204082ae:	03478793          	addi	a5,a5,52
204082b2:	4398                	lw	a4,0(a5)
204082b4:	fd842783          	lw	a5,-40(s0)
204082b8:	fec42683          	lw	a3,-20(s0)
204082bc:	03468693          	addi	a3,a3,52
204082c0:	8fd9                	or	a5,a5,a4
204082c2:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:177
            break;
204082c4:	a0a5                	j	2040832c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
204082c6:	fec42783          	lw	a5,-20(s0)
204082ca:	07f1                	addi	a5,a5,28
204082cc:	4398                	lw	a4,0(a5)
204082ce:	fd842783          	lw	a5,-40(s0)
204082d2:	fec42683          	lw	a3,-20(s0)
204082d6:	06f1                	addi	a3,a3,28
204082d8:	8fd9                	or	a5,a5,a4
204082da:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:180
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
204082dc:	fec42783          	lw	a5,-20(s0)
204082e0:	02478793          	addi	a5,a5,36
204082e4:	4398                	lw	a4,0(a5)
204082e6:	fd842783          	lw	a5,-40(s0)
204082ea:	fec42683          	lw	a3,-20(s0)
204082ee:	02468693          	addi	a3,a3,36
204082f2:	8fd9                	or	a5,a5,a4
204082f4:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
204082f6:	fec42783          	lw	a5,-20(s0)
204082fa:	02c78793          	addi	a5,a5,44
204082fe:	4398                	lw	a4,0(a5)
20408300:	fd842783          	lw	a5,-40(s0)
20408304:	fec42683          	lw	a3,-20(s0)
20408308:	02c68693          	addi	a3,a3,44
2040830c:	8fd9                	or	a5,a5,a4
2040830e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:182
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20408310:	fec42783          	lw	a5,-20(s0)
20408314:	03478793          	addi	a5,a5,52
20408318:	4398                	lw	a4,0(a5)
2040831a:	fd842783          	lw	a5,-40(s0)
2040831e:	fec42683          	lw	a3,-20(s0)
20408322:	03468693          	addi	a3,a3,52
20408326:	8fd9                	or	a5,a5,a4
20408328:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:183
            break;
2040832a:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
    }
    return 0;
2040832c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:186
}
2040832e:	853e                	mv	a0,a5
20408330:	50b2                	lw	ra,44(sp)
20408332:	5422                	lw	s0,40(sp)
20408334:	6145                	addi	sp,sp,48
20408336:	8082                	ret

20408338 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:190

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio)
{
20408338:	1101                	addi	sp,sp,-32
2040833a:	ce06                	sw	ra,28(sp)
2040833c:	cc22                	sw	s0,24(sp)
2040833e:	1000                	addi	s0,sp,32
20408340:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:191
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20408344:	fec42503          	lw	a0,-20(s0)
20408348:	facff0ef          	jal	ra,20407af4 <__metal_driver_sifive_gpio0_interrupt_parent>
2040834c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
}
2040834e:	853e                	mv	a0,a5
20408350:	40f2                	lw	ra,28(sp)
20408352:	4462                	lw	s0,24(sp)
20408354:	6105                	addi	sp,sp,32
20408356:	8082                	ret

20408358 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin)
{
20408358:	7179                	addi	sp,sp,-48
2040835a:	d606                	sw	ra,44(sp)
2040835c:	d422                	sw	s0,40(sp)
2040835e:	1800                	addi	s0,sp,48
20408360:	fca42e23          	sw	a0,-36(s0)
20408364:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:197
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20408368:	fd842583          	lw	a1,-40(s0)
2040836c:	fdc42503          	lw	a0,-36(s0)
20408370:	faeff0ef          	jal	ra,20407b1e <__metal_driver_sifive_gpio0_interrupt_lines>
20408374:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    return irq;
20408378:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
}
2040837c:	853e                	mv	a0,a5
2040837e:	50b2                	lw	ra,44(sp)
20408380:	5422                	lw	s0,40(sp)
20408382:	6145                	addi	sp,sp,48
20408384:	8082                	ret

20408386 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:564

/* --------------------- sifive_trace ------------ */

/* --------------------- sifive_uart0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_uart0_control_base(struct metal_uart *uart)
{
20408386:	1101                	addi	sp,sp,-32
20408388:	ce22                	sw	s0,28(sp)
2040838a:	1000                	addi	s0,sp,32
2040838c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:565
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408390:	fec42703          	lw	a4,-20(s0)
20408394:	800007b7          	lui	a5,0x80000
20408398:	76878793          	addi	a5,a5,1896 # 80000768 <metal_segment_heap_target_end+0xfffff294>
2040839c:	00f71563          	bne	a4,a5,204083a6 <__metal_driver_sifive_uart0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:566
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
204083a0:	100137b7          	lui	a5,0x10013
204083a4:	a011                	j	204083a8 <__metal_driver_sifive_uart0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:569
	}
	else {
		return 0;
204083a6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:571
	}
}
204083a8:	853e                	mv	a0,a5
204083aa:	4472                	lw	s0,28(sp)
204083ac:	6105                	addi	sp,sp,32
204083ae:	8082                	ret

204083b0 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:594
		return 0;
	}
}

static __inline__ struct metal_interrupt * __metal_driver_sifive_uart0_interrupt_parent(struct metal_uart *uart)
{
204083b0:	1101                	addi	sp,sp,-32
204083b2:	ce22                	sw	s0,28(sp)
204083b4:	1000                	addi	s0,sp,32
204083b6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:595
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204083ba:	fec42703          	lw	a4,-20(s0)
204083be:	800007b7          	lui	a5,0x80000
204083c2:	76878793          	addi	a5,a5,1896 # 80000768 <metal_segment_heap_target_end+0xfffff294>
204083c6:	00f71763          	bne	a4,a5,204083d4 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:596
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
204083ca:	800007b7          	lui	a5,0x80000
204083ce:	46878793          	addi	a5,a5,1128 # 80000468 <metal_segment_heap_target_end+0xffffef94>
204083d2:	a011                	j	204083d6 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:599
	}
	else {
		return 0;
204083d4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:601
	}
}
204083d6:	853e                	mv	a0,a5
204083d8:	4472                	lw	s0,28(sp)
204083da:	6105                	addi	sp,sp,32
204083dc:	8082                	ret

204083de <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:604

static __inline__ int __metal_driver_sifive_uart0_interrupt_line(struct metal_uart *uart)
{
204083de:	1101                	addi	sp,sp,-32
204083e0:	ce22                	sw	s0,28(sp)
204083e2:	1000                	addi	s0,sp,32
204083e4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:605
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204083e8:	fec42703          	lw	a4,-20(s0)
204083ec:	800007b7          	lui	a5,0x80000
204083f0:	76878793          	addi	a5,a5,1896 # 80000768 <metal_segment_heap_target_end+0xfffff294>
204083f4:	00f71463          	bne	a4,a5,204083fc <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:606
		return 5;
204083f8:	4795                	li	a5,5
204083fa:	a011                	j	204083fe <__metal_driver_sifive_uart0_interrupt_line+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:609
	}
	else {
		return 0;
204083fc:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:611
	}
}
204083fe:	853e                	mv	a0,a5
20408400:	4472                	lw	s0,28(sp)
20408402:	6105                	addi	sp,sp,32
20408404:	8082                	ret

20408406 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:614

static __inline__ struct metal_clock * __metal_driver_sifive_uart0_clock(struct metal_uart *uart)
{
20408406:	1101                	addi	sp,sp,-32
20408408:	ce22                	sw	s0,28(sp)
2040840a:	1000                	addi	s0,sp,32
2040840c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:615
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408410:	fec42703          	lw	a4,-20(s0)
20408414:	800007b7          	lui	a5,0x80000
20408418:	76878793          	addi	a5,a5,1896 # 80000768 <metal_segment_heap_target_end+0xfffff294>
2040841c:	00f71763          	bne	a4,a5,2040842a <__metal_driver_sifive_uart0_clock+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:616
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20408420:	800007b7          	lui	a5,0x80000
20408424:	0a078793          	addi	a5,a5,160 # 800000a0 <metal_segment_heap_target_end+0xffffebcc>
20408428:	a011                	j	2040842c <__metal_driver_sifive_uart0_clock+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:619
	}
	else {
		return 0;
2040842a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:621
	}
}
2040842c:	853e                	mv	a0,a5
2040842e:	4472                	lw	s0,28(sp)
20408430:	6105                	addi	sp,sp,32
20408432:	8082                	ret

20408434 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:624

static __inline__ struct __metal_driver_sifive_gpio0 * __metal_driver_sifive_uart0_pinmux(struct metal_uart *uart)
{
20408434:	1101                	addi	sp,sp,-32
20408436:	ce22                	sw	s0,28(sp)
20408438:	1000                	addi	s0,sp,32
2040843a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:625
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040843e:	fec42703          	lw	a4,-20(s0)
20408442:	800007b7          	lui	a5,0x80000
20408446:	76878793          	addi	a5,a5,1896 # 80000768 <metal_segment_heap_target_end+0xfffff294>
2040844a:	00f71563          	bne	a4,a5,20408454 <__metal_driver_sifive_uart0_pinmux+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:626
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
2040844e:	81818793          	addi	a5,gp,-2024 # 800007a0 <__metal_dt_gpio_10012000>
20408452:	a011                	j	20408456 <__metal_driver_sifive_uart0_pinmux+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:629
	}
	else {
		return 0;
20408454:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:631
	}
}
20408456:	853e                	mv	a0,a5
20408458:	4472                	lw	s0,28(sp)
2040845a:	6105                	addi	sp,sp,32
2040845c:	8082                	ret

2040845e <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:634

static __inline__ unsigned long __metal_driver_sifive_uart0_pinmux_output_selector(struct metal_uart *uart)
{
2040845e:	1101                	addi	sp,sp,-32
20408460:	ce22                	sw	s0,28(sp)
20408462:	1000                	addi	s0,sp,32
20408464:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:635
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408468:	fec42703          	lw	a4,-20(s0)
2040846c:	800007b7          	lui	a5,0x80000
20408470:	76878793          	addi	a5,a5,1896 # 80000768 <metal_segment_heap_target_end+0xfffff294>
20408474:	00f71563          	bne	a4,a5,2040847e <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:636
		return 196608;
20408478:	000307b7          	lui	a5,0x30
2040847c:	a011                	j	20408480 <__metal_driver_sifive_uart0_pinmux_output_selector+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:639
	}
	else {
		return 0;
2040847e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:641
	}
}
20408480:	853e                	mv	a0,a5
20408482:	4472                	lw	s0,28(sp)
20408484:	6105                	addi	sp,sp,32
20408486:	8082                	ret

20408488 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:644

static __inline__ unsigned long __metal_driver_sifive_uart0_pinmux_source_selector(struct metal_uart *uart)
{
20408488:	1101                	addi	sp,sp,-32
2040848a:	ce22                	sw	s0,28(sp)
2040848c:	1000                	addi	s0,sp,32
2040848e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:645
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408492:	fec42703          	lw	a4,-20(s0)
20408496:	800007b7          	lui	a5,0x80000
2040849a:	76878793          	addi	a5,a5,1896 # 80000768 <metal_segment_heap_target_end+0xfffff294>
2040849e:	00f71563          	bne	a4,a5,204084a8 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:646
		return 196608;
204084a2:	000307b7          	lui	a5,0x30
204084a6:	a011                	j	204084aa <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:649
	}
	else {
		return 0;
204084a8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:651
	}
}
204084aa:	853e                	mv	a0,a5
204084ac:	4472                	lw	s0,28(sp)
204084ae:	6105                	addi	sp,sp,32
204084b0:	8082                	ret

204084b2 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:32
#define UART_REGB(offset)  (__METAL_ACCESS_ONCE((__metal_io_u8  *)UART_REG(offset)))
#define UART_REGW(offset)  (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart)
{
204084b2:	1101                	addi	sp,sp,-32
204084b4:	ce06                	sw	ra,28(sp)
204084b6:	cc22                	sw	s0,24(sp)
204084b8:	1000                	addi	s0,sp,32
204084ba:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:33
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
204084be:	fec42503          	lw	a0,-20(s0)
204084c2:	35fd                	jal	204083b0 <__metal_driver_sifive_uart0_interrupt_parent>
204084c4:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:34
}
204084c6:	853e                	mv	a0,a5
204084c8:	40f2                	lw	ra,28(sp)
204084ca:	4462                	lw	s0,24(sp)
204084cc:	6105                	addi	sp,sp,32
204084ce:	8082                	ret

204084d0 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:37

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart)
{
204084d0:	1101                	addi	sp,sp,-32
204084d2:	ce06                	sw	ra,28(sp)
204084d4:	cc22                	sw	s0,24(sp)
204084d6:	1000                	addi	s0,sp,32
204084d8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:38
    return (__metal_driver_sifive_uart0_interrupt_line(uart) + METAL_INTERRUPT_ID_GL0);
204084dc:	fec42503          	lw	a0,-20(s0)
204084e0:	3dfd                	jal	204083de <__metal_driver_sifive_uart0_interrupt_line>
204084e2:	87aa                	mv	a5,a0
204084e4:	02078793          	addi	a5,a5,32 # 30020 <__heap_size+0x2f820>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:39
}
204084e8:	853e                	mv	a0,a5
204084ea:	40f2                	lw	ra,28(sp)
204084ec:	4462                	lw	s0,24(sp)
204084ee:	6105                	addi	sp,sp,32
204084f0:	8082                	ret

204084f2 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:43


int __metal_driver_sifive_uart0_txready(struct metal_uart *uart)
{
204084f2:	7179                	addi	sp,sp,-48
204084f4:	d606                	sw	ra,44(sp)
204084f6:	d422                	sw	s0,40(sp)
204084f8:	1800                	addi	s0,sp,48
204084fa:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:44
  long control_base = __metal_driver_sifive_uart0_control_base(uart);
204084fe:	fdc42503          	lw	a0,-36(s0)
20408502:	3551                	jal	20408386 <__metal_driver_sifive_uart0_control_base>
20408504:	87aa                	mv	a5,a0
20408506:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:46

  return !((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
2040850a:	fec42783          	lw	a5,-20(s0)
2040850e:	439c                	lw	a5,0(a5)
20408510:	fff7c793          	not	a5,a5
20408514:	83fd                	srli	a5,a5,0x1f
20408516:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:47
}
2040851a:	853e                	mv	a0,a5
2040851c:	50b2                	lw	ra,44(sp)
2040851e:	5422                	lw	s0,40(sp)
20408520:	6145                	addi	sp,sp,48
20408522:	8082                	ret

20408524 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:51


int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c)
{
20408524:	7179                	addi	sp,sp,-48
20408526:	d606                	sw	ra,44(sp)
20408528:	d422                	sw	s0,40(sp)
2040852a:	1800                	addi	s0,sp,48
2040852c:	fca42e23          	sw	a0,-36(s0)
20408530:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:52
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20408534:	fdc42503          	lw	a0,-36(s0)
20408538:	35b9                	jal	20408386 <__metal_driver_sifive_uart0_control_base>
2040853a:	87aa                	mv	a5,a0
2040853c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54

    while (!__metal_driver_sifive_uart0_txready(uart)) {
20408540:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54 (discriminator 1)
20408542:	fdc42503          	lw	a0,-36(s0)
20408546:	3775                	jal	204084f2 <__metal_driver_sifive_uart0_txready>
20408548:	87aa                	mv	a5,a0
2040854a:	dfe5                	beqz	a5,20408542 <__metal_driver_sifive_uart0_putc+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:57
		/* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
2040854c:	fec42783          	lw	a5,-20(s0)
20408550:	fd842703          	lw	a4,-40(s0)
20408554:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:58
    return 0;
20408556:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:59
}
20408558:	853e                	mv	a0,a5
2040855a:	50b2                	lw	ra,44(sp)
2040855c:	5422                	lw	s0,40(sp)
2040855e:	6145                	addi	sp,sp,48
20408560:	8082                	ret

20408562 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:63


int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c)
{
20408562:	7179                	addi	sp,sp,-48
20408564:	d606                	sw	ra,44(sp)
20408566:	d422                	sw	s0,40(sp)
20408568:	1800                	addi	s0,sp,48
2040856a:	fca42e23          	sw	a0,-36(s0)
2040856e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:65
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20408572:	fdc42503          	lw	a0,-36(s0)
20408576:	e11ff0ef          	jal	ra,20408386 <__metal_driver_sifive_uart0_control_base>
2040857a:	87aa                	mv	a5,a0
2040857c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:67
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);;
20408580:	fec42783          	lw	a5,-20(s0)
20408584:	0791                	addi	a5,a5,4
20408586:	439c                	lw	a5,0(a5)
20408588:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:68
    if( ch & UART_RXEMPTY ){
2040858c:	fe842783          	lw	a5,-24(s0)
20408590:	0007d763          	bgez	a5,2040859e <__metal_driver_sifive_uart0_getc+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:69
      *c = -1; /* aka: EOF in most of the world */
20408594:	fd842783          	lw	a5,-40(s0)
20408598:	577d                	li	a4,-1
2040859a:	c398                	sw	a4,0(a5)
2040859c:	a801                	j	204085ac <__metal_driver_sifive_uart0_getc+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:71
    } else {
      *c = ch & 0x0ff;
2040859e:	fe842783          	lw	a5,-24(s0)
204085a2:	0ff7f713          	andi	a4,a5,255
204085a6:	fd842783          	lw	a5,-40(s0)
204085aa:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:73
    }
    return 0;
204085ac:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:74
}
204085ae:	853e                	mv	a0,a5
204085b0:	50b2                	lw	ra,44(sp)
204085b2:	5422                	lw	s0,40(sp)
204085b4:	6145                	addi	sp,sp,48
204085b6:	8082                	ret

204085b8 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:78


int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart)
{
204085b8:	7179                	addi	sp,sp,-48
204085ba:	d622                	sw	s0,44(sp)
204085bc:	1800                	addi	s0,sp,48
204085be:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:79
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
204085c2:	fdc42783          	lw	a5,-36(s0)
204085c6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:80
    return uart->baud_rate;
204085ca:	fec42783          	lw	a5,-20(s0)
204085ce:	43dc                	lw	a5,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:81
}
204085d0:	853e                	mv	a0,a5
204085d2:	5432                	lw	s0,44(sp)
204085d4:	6145                	addi	sp,sp,48
204085d6:	8082                	ret

204085d8 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:84

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart, int baud_rate)
{
204085d8:	7179                	addi	sp,sp,-48
204085da:	d606                	sw	ra,44(sp)
204085dc:	d422                	sw	s0,40(sp)
204085de:	1800                	addi	s0,sp,48
204085e0:	fca42e23          	sw	a0,-36(s0)
204085e4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:85
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
204085e8:	fdc42783          	lw	a5,-36(s0)
204085ec:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:86
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
204085f0:	fdc42503          	lw	a0,-36(s0)
204085f4:	d93ff0ef          	jal	ra,20408386 <__metal_driver_sifive_uart0_control_base>
204085f8:	87aa                	mv	a5,a0
204085fa:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:87
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
204085fe:	fdc42503          	lw	a0,-36(s0)
20408602:	e05ff0ef          	jal	ra,20408406 <__metal_driver_sifive_uart0_clock>
20408606:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:89

    uart->baud_rate = baud_rate;
2040860a:	fd842703          	lw	a4,-40(s0)
2040860e:	fec42783          	lw	a5,-20(s0)
20408612:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:91

    if (clock != NULL) {
20408614:	fe442783          	lw	a5,-28(s0)
20408618:	cbb1                	beqz	a5,2040866c <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:92
        long clock_rate = clock->vtable->get_rate_hz(clock);
2040861a:	fe442783          	lw	a5,-28(s0)
2040861e:	439c                	lw	a5,0(a5)
20408620:	439c                	lw	a5,0(a5)
20408622:	fe442503          	lw	a0,-28(s0)
20408626:	9782                	jalr	a5
20408628:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:93
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
2040862c:	fe042703          	lw	a4,-32(s0)
20408630:	fd842783          	lw	a5,-40(s0)
20408634:	02f747b3          	div	a5,a4,a5
20408638:	fff78713          	addi	a4,a5,-1
2040863c:	fe842783          	lw	a5,-24(s0)
20408640:	07e1                	addi	a5,a5,24
20408642:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:94
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20408644:	fe842783          	lw	a5,-24(s0)
20408648:	07a1                	addi	a5,a5,8
2040864a:	439c                	lw	a5,0(a5)
2040864c:	fe842703          	lw	a4,-24(s0)
20408650:	0721                	addi	a4,a4,8
20408652:	0017e793          	ori	a5,a5,1
20408656:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:95
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20408658:	fe842783          	lw	a5,-24(s0)
2040865c:	07b1                	addi	a5,a5,12
2040865e:	439c                	lw	a5,0(a5)
20408660:	fe842703          	lw	a4,-24(s0)
20408664:	0731                	addi	a4,a4,12
20408666:	0017e793          	ori	a5,a5,1
2040866a:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:97
    }
    return 0;
2040866c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:98
}
2040866e:	853e                	mv	a0,a5
20408670:	50b2                	lw	ra,44(sp)
20408672:	5422                	lw	s0,40(sp)
20408674:	6145                	addi	sp,sp,48
20408676:	8082                	ret

20408678 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:101

static void pre_rate_change_callback_func(void *priv)
{
20408678:	7139                	addi	sp,sp,-64
2040867a:	de06                	sw	ra,60(sp)
2040867c:	dc22                	sw	s0,56(sp)
2040867e:	0080                	addi	s0,sp,64
20408680:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:102
    struct __metal_driver_sifive_uart0 *uart = priv;
20408684:	fcc42783          	lw	a5,-52(s0)
20408688:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:103
    long control_base = __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
2040868c:	fcc42503          	lw	a0,-52(s0)
20408690:	cf7ff0ef          	jal	ra,20408386 <__metal_driver_sifive_uart0_control_base>
20408694:	87aa                	mv	a5,a0
20408696:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:104
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
2040869a:	fcc42503          	lw	a0,-52(s0)
2040869e:	d69ff0ef          	jal	ra,20408406 <__metal_driver_sifive_uart0_clock>
204086a2:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:109

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
204086a6:	fe842783          	lw	a5,-24(s0)
204086aa:	07a1                	addi	a5,a5,8
204086ac:	4398                	lw	a4,0(a5)
204086ae:	fe842783          	lw	a5,-24(s0)
204086b2:	07a1                	addi	a5,a5,8
204086b4:	86be                	mv	a3,a5
204086b6:	fff907b7          	lui	a5,0xfff90
204086ba:	17fd                	addi	a5,a5,-1
204086bc:	8ff9                	and	a5,a5,a4
204086be:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
204086c0:	fe842783          	lw	a5,-24(s0)
204086c4:	07a1                	addi	a5,a5,8
204086c6:	4398                	lw	a4,0(a5)
204086c8:	fe842783          	lw	a5,-24(s0)
204086cc:	07a1                	addi	a5,a5,8
204086ce:	86be                	mv	a3,a5
204086d0:	67c1                	lui	a5,0x10
204086d2:	8fd9                	or	a5,a5,a4
204086d4:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112

    while((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0) ;
204086d6:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112 (discriminator 1)
204086d8:	fe842783          	lw	a5,-24(s0)
204086dc:	07d1                	addi	a5,a5,20
204086de:	439c                	lw	a5,0(a5)
204086e0:	8b85                	andi	a5,a5,1
204086e2:	dbfd                	beqz	a5,204086d8 <pre_rate_change_callback_func+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118

    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol = (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
204086e4:	fe842783          	lw	a5,-24(s0)
204086e8:	07a1                	addi	a5,a5,8
204086ea:	439c                	lw	a5,0(a5)
204086ec:	8b89                	andi	a5,a5,2
204086ee:	c399                	beqz	a5,204086f4 <pre_rate_change_callback_func+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 1)
204086f0:	47a5                	li	a5,9
204086f2:	a011                	j	204086f6 <pre_rate_change_callback_func+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 2)
204086f4:	47a9                	li	a5,10
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 4)
204086f6:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:119 (discriminator 4)
    long clk_freq = clock->vtable->get_rate_hz(clock);
204086fa:	fe442783          	lw	a5,-28(s0)
204086fe:	439c                	lw	a5,0(a5)
20408700:	439c                	lw	a5,0(a5)
20408702:	fe442503          	lw	a0,-28(s0)
20408706:	9782                	jalr	a5
20408708:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:120 (discriminator 4)
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2040870c:	fe042703          	lw	a4,-32(s0)
20408710:	fdc42783          	lw	a5,-36(s0)
20408714:	02f707b3          	mul	a5,a4,a5
20408718:	873e                	mv	a4,a5
2040871a:	fec42783          	lw	a5,-20(s0)
2040871e:	43dc                	lw	a5,4(a5)
20408720:	02f757b3          	divu	a5,a4,a5
20408724:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 4)

    for(volatile long x = 0; x < cycles_to_wait; x++)
20408728:	fc042a23          	sw	zero,-44(s0)
2040872c:	a039                	j	2040873a <pre_rate_change_callback_func+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:123 (discriminator 3)
        __asm__("nop");
2040872e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 3)
    for(volatile long x = 0; x < cycles_to_wait; x++)
20408730:	fd442783          	lw	a5,-44(s0)
20408734:	0785                	addi	a5,a5,1
20408736:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 1)
2040873a:	fd442783          	lw	a5,-44(s0)
2040873e:	fd842703          	lw	a4,-40(s0)
20408742:	fee7c6e3          	blt	a5,a4,2040872e <pre_rate_change_callback_func+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:124
}
20408746:	0001                	nop
20408748:	50f2                	lw	ra,60(sp)
2040874a:	5462                	lw	s0,56(sp)
2040874c:	6121                	addi	sp,sp,64
2040874e:	8082                	ret

20408750 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:127

static void post_rate_change_callback_func(void *priv)
{
20408750:	7179                	addi	sp,sp,-48
20408752:	d606                	sw	ra,44(sp)
20408754:	d422                	sw	s0,40(sp)
20408756:	1800                	addi	s0,sp,48
20408758:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:128
    struct __metal_driver_sifive_uart0 *uart = priv;
2040875c:	fdc42783          	lw	a5,-36(s0)
20408760:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:129
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20408764:	fec42703          	lw	a4,-20(s0)
20408768:	fec42783          	lw	a5,-20(s0)
2040876c:	43dc                	lw	a5,4(a5)
2040876e:	85be                	mv	a1,a5
20408770:	853a                	mv	a0,a4
20408772:	d2ffc0ef          	jal	ra,204054a0 <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:130
}
20408776:	0001                	nop
20408778:	50b2                	lw	ra,44(sp)
2040877a:	5422                	lw	s0,40(sp)
2040877c:	6145                	addi	sp,sp,48
2040877e:	8082                	ret

20408780 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:133

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate)
{
20408780:	7139                	addi	sp,sp,-64
20408782:	de06                	sw	ra,60(sp)
20408784:	dc22                	sw	s0,56(sp)
20408786:	0080                	addi	s0,sp,64
20408788:	fca42623          	sw	a0,-52(s0)
2040878c:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:134
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20408790:	fcc42783          	lw	a5,-52(s0)
20408794:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:135
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20408798:	fcc42503          	lw	a0,-52(s0)
2040879c:	c6bff0ef          	jal	ra,20408406 <__metal_driver_sifive_uart0_clock>
204087a0:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:136
    struct __metal_driver_sifive_gpio0 *pinmux = __metal_driver_sifive_uart0_pinmux(guart);
204087a4:	fcc42503          	lw	a0,-52(s0)
204087a8:	c8dff0ef          	jal	ra,20408434 <__metal_driver_sifive_uart0_pinmux>
204087ac:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:138

    if(clock != NULL) {
204087b0:	fe842783          	lw	a5,-24(s0)
204087b4:	c7b9                	beqz	a5,20408802 <__metal_driver_sifive_uart0_init+0x82>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:139
        uart->pre_rate_change_callback.callback = &pre_rate_change_callback_func;
204087b6:	fec42783          	lw	a5,-20(s0)
204087ba:	20408737          	lui	a4,0x20408
204087be:	67870713          	addi	a4,a4,1656 # 20408678 <pre_rate_change_callback_func>
204087c2:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:140
        uart->pre_rate_change_callback.priv = guart;
204087c4:	fec42783          	lw	a5,-20(s0)
204087c8:	fcc42703          	lw	a4,-52(s0)
204087cc:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:141
        metal_clock_register_pre_rate_change_callback(clock, &(uart->pre_rate_change_callback));
204087ce:	fec42783          	lw	a5,-20(s0)
204087d2:	07a1                	addi	a5,a5,8
204087d4:	85be                	mv	a1,a5
204087d6:	fe842503          	lw	a0,-24(s0)
204087da:	20f1                	jal	204088a6 <metal_clock_register_pre_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:143

        uart->post_rate_change_callback.callback = &post_rate_change_callback_func;
204087dc:	fec42783          	lw	a5,-20(s0)
204087e0:	20408737          	lui	a4,0x20408
204087e4:	75070713          	addi	a4,a4,1872 # 20408750 <post_rate_change_callback_func>
204087e8:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:144
        uart->post_rate_change_callback.priv = guart;
204087ea:	fec42783          	lw	a5,-20(s0)
204087ee:	fcc42703          	lw	a4,-52(s0)
204087f2:	cf98                	sw	a4,24(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:145
        metal_clock_register_post_rate_change_callback(clock, &(uart->post_rate_change_callback));
204087f4:	fec42783          	lw	a5,-20(s0)
204087f8:	07d1                	addi	a5,a5,20
204087fa:	85be                	mv	a1,a5
204087fc:	fe842503          	lw	a0,-24(s0)
20408800:	28d9                	jal	204088d6 <metal_clock_register_post_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:148
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20408802:	fec42783          	lw	a5,-20(s0)
20408806:	fc842583          	lw	a1,-56(s0)
2040880a:	853e                	mv	a0,a5
2040880c:	c95fc0ef          	jal	ra,204054a0 <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:150

    if (pinmux != NULL) {
20408810:	fe442783          	lw	a5,-28(s0)
20408814:	cb95                	beqz	a5,20408848 <__metal_driver_sifive_uart0_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:151
        long pinmux_output_selector = __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20408816:	fcc42503          	lw	a0,-52(s0)
2040881a:	c45ff0ef          	jal	ra,2040845e <__metal_driver_sifive_uart0_pinmux_output_selector>
2040881e:	87aa                	mv	a5,a0
20408820:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:152
        long pinmux_source_selector = __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20408824:	fcc42503          	lw	a0,-52(s0)
20408828:	c61ff0ef          	jal	ra,20408488 <__metal_driver_sifive_uart0_pinmux_source_selector>
2040882c:	87aa                	mv	a5,a0
2040882e:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:153
        pinmux->gpio.vtable->enable_io(
20408832:	fe442783          	lw	a5,-28(s0)
20408836:	439c                	lw	a5,0(a5)
20408838:	53dc                	lw	a5,36(a5)
2040883a:	fdc42603          	lw	a2,-36(s0)
2040883e:	fe042583          	lw	a1,-32(s0)
20408842:	fe442503          	lw	a0,-28(s0)
20408846:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:159
            (struct metal_gpio *) pinmux,
            pinmux_output_selector,
            pinmux_source_selector
        );
    }
}
20408848:	0001                	nop
2040884a:	50f2                	lw	ra,60(sp)
2040884c:	5462                	lw	s0,56(sp)
2040884e:	6121                	addi	sp,sp,64
20408850:	8082                	ret

20408852 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:59
}

/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *_metal_clock_append_to_callbacks(metal_clock_callback *list, metal_clock_callback *const cb) {
20408852:	7179                	addi	sp,sp,-48
20408854:	d622                	sw	s0,44(sp)
20408856:	1800                	addi	s0,sp,48
20408858:	fca42e23          	sw	a0,-36(s0)
2040885c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:60
    cb->_next = NULL;
20408860:	fd842783          	lw	a5,-40(s0)
20408864:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:62

    if (!list) {
20408868:	fdc42783          	lw	a5,-36(s0)
2040886c:	e781                	bnez	a5,20408874 <_metal_clock_append_to_callbacks+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:63
        return cb;
2040886e:	fd842783          	lw	a5,-40(s0)
20408872:	a035                	j	2040889e <_metal_clock_append_to_callbacks+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:66
    }

    metal_clock_callback *current = list;
20408874:	fdc42783          	lw	a5,-36(s0)
20408878:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68

    while ((current->_next) != NULL) {
2040887c:	a031                	j	20408888 <_metal_clock_append_to_callbacks+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:69
        current = current->_next;
2040887e:	fec42783          	lw	a5,-20(s0)
20408882:	479c                	lw	a5,8(a5)
20408884:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68
    while ((current->_next) != NULL) {
20408888:	fec42783          	lw	a5,-20(s0)
2040888c:	479c                	lw	a5,8(a5)
2040888e:	fbe5                	bnez	a5,2040887e <_metal_clock_append_to_callbacks+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:72
    }

    current->_next = cb;
20408890:	fec42783          	lw	a5,-20(s0)
20408894:	fd842703          	lw	a4,-40(s0)
20408898:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:74

    return list;
2040889a:	fdc42783          	lw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:75
}
2040889e:	853e                	mv	a0,a5
204088a0:	5432                	lw	s0,44(sp)
204088a2:	6145                	addi	sp,sp,48
204088a4:	8082                	ret

204088a6 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:139
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_pre_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
204088a6:	1101                	addi	sp,sp,-32
204088a8:	ce06                	sw	ra,28(sp)
204088aa:	cc22                	sw	s0,24(sp)
204088ac:	1000                	addi	s0,sp,32
204088ae:	fea42623          	sw	a0,-20(s0)
204088b2:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:140
    clk->_pre_rate_change_callback = _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
204088b6:	fec42783          	lw	a5,-20(s0)
204088ba:	43dc                	lw	a5,4(a5)
204088bc:	fe842583          	lw	a1,-24(s0)
204088c0:	853e                	mv	a0,a5
204088c2:	3f41                	jal	20408852 <_metal_clock_append_to_callbacks>
204088c4:	872a                	mv	a4,a0
204088c6:	fec42783          	lw	a5,-20(s0)
204088ca:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:141
}
204088cc:	0001                	nop
204088ce:	40f2                	lw	ra,28(sp)
204088d0:	4462                	lw	s0,24(sp)
204088d2:	6105                	addi	sp,sp,32
204088d4:	8082                	ret

204088d6 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:150
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_post_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
204088d6:	1101                	addi	sp,sp,-32
204088d8:	ce06                	sw	ra,28(sp)
204088da:	cc22                	sw	s0,24(sp)
204088dc:	1000                	addi	s0,sp,32
204088de:	fea42623          	sw	a0,-20(s0)
204088e2:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:151
    clk->_post_rate_change_callback = _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
204088e6:	fec42783          	lw	a5,-20(s0)
204088ea:	479c                	lw	a5,8(a5)
204088ec:	fe842583          	lw	a1,-24(s0)
204088f0:	853e                	mv	a0,a5
204088f2:	3785                	jal	20408852 <_metal_clock_append_to_callbacks>
204088f4:	872a                	mv	a4,a0
204088f6:	fec42783          	lw	a5,-20(s0)
204088fa:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:152
}
204088fc:	0001                	nop
204088fe:	40f2                	lw	ra,28(sp)
20408900:	4462                	lw	s0,24(sp)
20408902:	6105                	addi	sp,sp,32
20408904:	8082                	ret

20408906 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/cpu.h:208
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt* metal_cpu_interrupt_controller(struct metal_cpu *cpu)
{ return cpu->vtable->controller_interrupt(cpu); }
20408906:	1101                	addi	sp,sp,-32
20408908:	ce06                	sw	ra,28(sp)
2040890a:	cc22                	sw	s0,24(sp)
2040890c:	1000                	addi	s0,sp,32
2040890e:	fea42623          	sw	a0,-20(s0)
20408912:	fec42783          	lw	a5,-20(s0)
20408916:	439c                	lw	a5,0(a5)
20408918:	57dc                	lw	a5,44(a5)
2040891a:	fec42503          	lw	a0,-20(s0)
2040891e:	9782                	jalr	a5
20408920:	87aa                	mv	a5,a0
20408922:	853e                	mv	a0,a5
20408924:	40f2                	lw	ra,28(sp)
20408926:	4462                	lw	s0,24(sp)
20408928:	6105                	addi	sp,sp,32
2040892a:	8082                	ret

2040892c <metal_cpu_get>:
metal_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:8

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu* metal_cpu_get(unsigned int hartid)
{
2040892c:	1101                	addi	sp,sp,-32
2040892e:	ce22                	sw	s0,28(sp)
20408930:	1000                	addi	s0,sp,32
20408932:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:9
    if (hartid < __METAL_DT_MAX_HARTS) {
20408936:	fec42783          	lw	a5,-20(s0)
2040893a:	eb99                	bnez	a5,20408950 <metal_cpu_get+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:10
        return (struct metal_cpu *)__metal_cpu_table[hartid];
2040893c:	800007b7          	lui	a5,0x80000
20408940:	fec42703          	lw	a4,-20(s0)
20408944:	070a                	slli	a4,a4,0x2
20408946:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2bc>
2040894a:	97ba                	add	a5,a5,a4
2040894c:	439c                	lw	a5,0(a5)
2040894e:	a011                	j	20408952 <metal_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:12
    }   
    return NULL;
20408950:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:13
}
20408952:	853e                	mv	a0,a5
20408954:	4472                	lw	s0,28(sp)
20408956:	6105                	addi	sp,sp,32
20408958:	8082                	ret

2040895a <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:16

int metal_cpu_get_current_hartid()
{
2040895a:	1101                	addi	sp,sp,-32
2040895c:	ce22                	sw	s0,28(sp)
2040895e:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:19
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r" (mhartid));
20408960:	f14027f3          	csrr	a5,mhartid
20408964:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:20
    return mhartid;
20408968:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:22
#endif
}
2040896c:	853e                	mv	a0,a5
2040896e:	4472                	lw	s0,28(sp)
20408970:	6105                	addi	sp,sp,32
20408972:	8082                	ret

20408974 <metal_shutdown>:
metal_shutdown():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message("There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code)
{
20408974:	1101                	addi	sp,sp,-32
20408976:	ce22                	sw	s0,28(sp)
20408978:	1000                	addi	s0,sp,32
2040897a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
      __asm__ volatile ("nop");
2040897e:	0001                	nop
20408980:	bffd                	j	2040897e <metal_shutdown+0xa>
	...

20408a00 <__metal_vector_table>:
IRQ_0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20408a00:	c0afd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a04 <IRQ_1>:
IRQ_1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20408a04:	c06fd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a08 <IRQ_2>:
IRQ_2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20408a08:	c02fd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a0c <IRQ_3>:
IRQ_3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20408a0c:	c2cfd06f          	j	20405e38 <metal_software_interrupt_vector_handler>

20408a10 <IRQ_4>:
IRQ_4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20408a10:	bfafd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a14 <IRQ_5>:
IRQ_5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20408a14:	bf6fd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a18 <IRQ_6>:
IRQ_6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20408a18:	bf2fd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a1c <IRQ_7>:
IRQ_7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20408a1c:	d16fd06f          	j	20405f32 <metal_timer_interrupt_vector_handler>

20408a20 <IRQ_8>:
IRQ_8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20408a20:	beafd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a24 <IRQ_9>:
IRQ_9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20408a24:	be6fd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a28 <IRQ_10>:
IRQ_10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20408a28:	be2fd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a2c <IRQ_11>:
IRQ_11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20408a2c:	bdefd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a30 <IRQ_12>:
IRQ_12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20408a30:	bdafd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a34 <IRQ_13>:
IRQ_13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20408a34:	bd6fd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a38 <IRQ_14>:
IRQ_14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20408a38:	bd2fd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a3c <IRQ_15>:
IRQ_15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20408a3c:	bcefd06f          	j	20405e0a <metal_interrupt_vector_handler>

20408a40 <IRQ_LC0>:
IRQ_LC0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20408a40:	fbafd06f          	j	204061fa <metal_lc0_interrupt_vector_handler>

20408a44 <IRQ_LC1>:
IRQ_LC1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20408a44:	84dfd06f          	j	20406290 <metal_lc1_interrupt_vector_handler>

20408a48 <IRQ_LC2>:
IRQ_LC2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20408a48:	8dffd06f          	j	20406326 <metal_lc2_interrupt_vector_handler>

20408a4c <IRQ_LC3>:
IRQ_LC3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20408a4c:	971fd06f          	j	204063bc <metal_lc3_interrupt_vector_handler>

20408a50 <IRQ_LC4>:
IRQ_LC4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20408a50:	a03fd06f          	j	20406452 <metal_lc4_interrupt_vector_handler>

20408a54 <IRQ_LC5>:
IRQ_LC5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20408a54:	a95fd06f          	j	204064e8 <metal_lc5_interrupt_vector_handler>

20408a58 <IRQ_LC6>:
IRQ_LC6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20408a58:	b27fd06f          	j	2040657e <metal_lc6_interrupt_vector_handler>

20408a5c <IRQ_LC7>:
IRQ_LC7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20408a5c:	bb9fd06f          	j	20406614 <metal_lc7_interrupt_vector_handler>

20408a60 <IRQ_LC8>:
IRQ_LC8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20408a60:	c4bfd06f          	j	204066aa <metal_lc8_interrupt_vector_handler>

20408a64 <IRQ_LC9>:
IRQ_LC9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20408a64:	cddfd06f          	j	20406740 <metal_lc9_interrupt_vector_handler>

20408a68 <IRQ_LC10>:
IRQ_LC10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20408a68:	d6ffd06f          	j	204067d6 <metal_lc10_interrupt_vector_handler>

20408a6c <IRQ_LC11>:
IRQ_LC11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20408a6c:	e01fd06f          	j	2040686c <metal_lc11_interrupt_vector_handler>

20408a70 <IRQ_LC12>:
IRQ_LC12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20408a70:	e93fd06f          	j	20406902 <metal_lc12_interrupt_vector_handler>

20408a74 <IRQ_LC13>:
IRQ_LC13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20408a74:	f25fd06f          	j	20406998 <metal_lc13_interrupt_vector_handler>

20408a78 <IRQ_LC14>:
IRQ_LC14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20408a78:	fb7fd06f          	j	20406a2e <metal_lc14_interrupt_vector_handler>

20408a7c <IRQ_LC15>:
IRQ_LC15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20408a7c:	848fe06f          	j	20406ac4 <metal_lc15_interrupt_vector_handler>

20408a80 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:120
{
20408a80:	1101                	addi	sp,sp,-32
20408a82:	ce22                	sw	s0,28(sp)
20408a84:	1000                	addi	s0,sp,32
20408a86:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:121
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20408a8a:	fec42703          	lw	a4,-20(s0)
20408a8e:	800007b7          	lui	a5,0x80000
20408a92:	0a078793          	addi	a5,a5,160 # 800000a0 <metal_segment_heap_target_end+0xffffebcc>
20408a96:	00f71763          	bne	a4,a5,20408aa4 <__metal_driver_fixed_clock_rate+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:122
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20408a9a:	03dfd7b7          	lui	a5,0x3dfd
20408a9e:	24078793          	addi	a5,a5,576 # 3dfd240 <__heap_size+0x3dfca40>
20408aa2:	a011                	j	20408aa6 <__metal_driver_fixed_clock_rate+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:125
		return 0;
20408aa4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:127
}
20408aa6:	853e                	mv	a0,a5
20408aa8:	4472                	lw	s0,28(sp)
20408aaa:	6105                	addi	sp,sp,32
20408aac:	8082                	ret

20408aae <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
#include <metal/drivers/fixed-clock.h>
#include <stddef.h>
#include <metal/machine.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk)
{
20408aae:	1101                	addi	sp,sp,-32
20408ab0:	ce06                	sw	ra,28(sp)
20408ab2:	cc22                	sw	s0,24(sp)
20408ab4:	1000                	addi	s0,sp,32
20408ab6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
    return __metal_driver_fixed_clock_rate(gclk);
20408aba:	fec42503          	lw	a0,-20(s0)
20408abe:	37c9                	jal	20408a80 <__metal_driver_fixed_clock_rate>
20408ac0:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:15
}
20408ac2:	853e                	mv	a0,a5
20408ac4:	40f2                	lw	ra,28(sp)
20408ac6:	4462                	lw	s0,24(sp)
20408ac8:	6105                	addi	sp,sp,32
20408aca:	8082                	ret

20408acc <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk, long target_hz)
{
20408acc:	1101                	addi	sp,sp,-32
20408ace:	ce06                	sw	ra,28(sp)
20408ad0:	cc22                	sw	s0,24(sp)
20408ad2:	1000                	addi	s0,sp,32
20408ad4:	fea42623          	sw	a0,-20(s0)
20408ad8:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20408adc:	fec42503          	lw	a0,-20(s0)
20408ae0:	37f9                	jal	20408aae <__metal_driver_fixed_clock_get_rate_hz>
20408ae2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:20
}
20408ae4:	853e                	mv	a0,a5
20408ae6:	40f2                	lw	ra,28(sp)
20408ae8:	4462                	lw	s0,24(sp)
20408aea:	6105                	addi	sp,sp,32
20408aec:	8082                	ret

20408aee <_exit>:
_exit():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:5
#include <metal/shutdown.h>

void
_exit(int exit_status)
{
20408aee:	1101                	addi	sp,sp,-32
20408af0:	ce06                	sw	ra,28(sp)
20408af2:	cc22                	sw	s0,24(sp)
20408af4:	1000                	addi	s0,sp,32
20408af6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:6
  metal_shutdown(exit_status);
20408afa:	fec42503          	lw	a0,-20(s0)
20408afe:	3d9d                	jal	20408974 <metal_shutdown>
