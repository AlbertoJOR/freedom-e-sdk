
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/debug/E300Ascon.elf:     file format elf32-littleriscv
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/debug/E300Ascon.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00009684 memsz 0x00009684 flags rwx
    LOAD off    0x0000a800 vaddr 0x80000800 paddr 0x80000800 align 2**12
         filesz 0x00000000 memsz 0x00000cd4 flags rw-
    LOAD off    0x0000b000 vaddr 0x80000000 paddr 0x20409688 align 2**12
         filesz 0x00000800 memsz 0x00000800 flags rw-
    LOAD off    0x0000b800 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x0000b800 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             00000194  20400000  20400000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text             00008a82  20400200  20400200  00001200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata           000009f8  20408c88  20408c88  00009c88  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array       00000004  20409680  20409680  0000a680  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .data             00000800  80000000  20409688  0000b000  2**3  CONTENTS, ALLOC, LOAD, DATA
  5 .bss              000000d4  80000800  80000800  0000a800  2**3  ALLOC
  6 .stack            00000400  800008d4  800008d4  0000a800  2**0  ALLOC
  7 .heap             00000800  80000cd4  80000cd4  0000a800  2**0  ALLOC
  8 .debug_info       00019cae  00000000  00000000  0000b800  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev     00003e2b  00000000  00000000  000254ae  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges    00000ad8  00000000  00000000  000292e0  2**3  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges     00001308  00000000  00000000  00029db8  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_line       0000f9e9  00000000  00000000  0002b0c0  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_str        00004196  00000000  00000000  0003aaa9  2**0  CONTENTS, READONLY, DEBUGGING
 14 .comment          00000028  00000000  00000000  0003ec3f  2**0  CONTENTS, READONLY
 15 .riscv.attributes 0000002b  00000000  00000000  0003ec67  2**0  CONTENTS, READONLY
 16 .debug_frame      00002a68  00000000  00000000  0003ec94  2**2  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc        00006236  00000000  00000000  000416fc  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
20400200 l    d  .text	00000000 .text
20408c88 l    d  .rodata	00000000 .rodata
20409680 l    d  .init_array	00000000 .init_array
80000000 l    d  .data	00000000 .data
80000800 l    d  .bss	00000000 .bss
800008d4 l    d  .stack	00000000 .stack
80000cd4 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 libriscv__mmachine__freedom-e310-arty-xmem_a-entry.o
20400060 l       .init	00000000 early_trap_vector
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400136 l       .init	00000000 _skip_init
20409330 l       .rodata	00000000 argv
20409334 l       .rodata	00000000 envp
20409338 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 E300Ascon.c
80000000 l     O .data	00000020 plain_text.2879
80000020 l     O .data	00000020 asso_text.2880
80000040 l     O .data	00000020 cipher_text.2881
80000060 l     O .data	00000020 dumm_array.2883
80000080 l     O .data	00000010 key.2884
80000834 l     O .bss	00000010 npub.2885
80000804 l     O .bss	00000030 cipher_text_sw.2882
00000000 l    df *ABS*	00000000 aead.c
204004f0 l     F .text	000000c2 ROR
204005b2 l     F .text	000005ae ROUND
20400b60 l     F .text	0000008e P12
20400bee l     F .text	00000052 P6
20400c40 l     F .text	000000a4 LOADBYTES
20400ce4 l     F .text	0000008e STOREBYTES
00000000 l    df *ABS*	00000000 printf.c
20401430 l     F .text	00000020 _out_null
20401450 l     F .text	00000032 _out_char
20401482 l     F .text	0000004e _strnlen_s
204014d0 l     F .text	00000038 _is_digit
20401508 l     F .text	0000005e _atoi
20401566 l     F .text	00000108 _out_rev
2040166e l     F .text	0000025e _ntoa_format
204018cc l     F .text	00000104 _ntoa_long
204019d0 l     F .text	0000012e _ntoa_long_long
20401afe l     F .text	000005d4 _ftoa
204020d2 l     F .text	0000066e _etoa
20409168 l     O .rodata	00000050 pow10.2193
20402740 l     F .text	00000b7c _vsnprintf
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 fixunsdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000844 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 tty.c
204055b8 l     F .text	00000022 metal_tty_init
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20405662 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
2040568c l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
204056b4 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
204056f0 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20405850 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20405d8c l     F .text	00000024 __metal_driver_cpu_hartid
20405db0 l     F .text	0000002a __metal_driver_cpu_timebase
20405dda l     F .text	0000002a __metal_driver_cpu_interrupt_controller
00000000 l    df *ABS*	00000000 riscv_plic0.c
20407664 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2040768e l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
204076b6 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
204076de l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20407706 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20407c54 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20407c7a l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20407ca4 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
2040850e l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20408538 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20408566 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
2040858e l     F .text	0000002e __metal_driver_sifive_uart0_clock
204085bc l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
204085e6 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_output_selector
20408610 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20408802 l     F .text	000000d8 pre_rate_change_callback_func
204088da l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 libriscv__mmachine__freedom-e310-arty-xmem_a-vector.o
20408b80 l       .text	00000000 IRQ_0
20408b84 l       .text	00000000 IRQ_1
20408b88 l       .text	00000000 IRQ_2
20408b8c l       .text	00000000 IRQ_3
20408b90 l       .text	00000000 IRQ_4
20408b94 l       .text	00000000 IRQ_5
20408b98 l       .text	00000000 IRQ_6
20408b9c l       .text	00000000 IRQ_7
20408ba0 l       .text	00000000 IRQ_8
20408ba4 l       .text	00000000 IRQ_9
20408ba8 l       .text	00000000 IRQ_10
20408bac l       .text	00000000 IRQ_11
20408bb0 l       .text	00000000 IRQ_12
20408bb4 l       .text	00000000 IRQ_13
20408bb8 l       .text	00000000 IRQ_14
20408bbc l       .text	00000000 IRQ_15
20408bc0 l       .text	00000000 IRQ_LC0
20408bc4 l       .text	00000000 IRQ_LC1
20408bc8 l       .text	00000000 IRQ_LC2
20408bcc l       .text	00000000 IRQ_LC3
20408bd0 l       .text	00000000 IRQ_LC4
20408bd4 l       .text	00000000 IRQ_LC5
20408bd8 l       .text	00000000 IRQ_LC6
20408bdc l       .text	00000000 IRQ_LC7
20408be0 l       .text	00000000 IRQ_LC8
20408be4 l       .text	00000000 IRQ_LC9
20408be8 l       .text	00000000 IRQ_LC10
20408bec l       .text	00000000 IRQ_LC11
20408bf0 l       .text	00000000 IRQ_LC12
20408bf4 l       .text	00000000 IRQ_LC13
20408bf8 l       .text	00000000 IRQ_LC14
20408bfc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20408c00 l     F .text	0000002e __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
80000090 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
20409684 l       .init_array	00000000 __fini_array_end
20409684 l       .init_array	00000000 __fini_array_start
20409684 l       .init_array	00000000 __init_array_end
20409680 l       .init_array	00000000 __preinit_array_end
20409680 l       .init_array	00000000 __init_array_start
20409680 l       .init_array	00000000 __preinit_array_start
20409660 g     O .rodata	00000020 __metal_driver_vtable_sifive_uart0
204065d2  w    F .text	00000096 metal_lc4_interrupt_vector_handler
2040140a g     F .text	00000026 _putchar
20408762 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20405a2c g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
2040452a g     F .text	0000006a .hidden __eqdf2
2040653c  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20400200 g     F .text	0000001e rdcycle
20406dc2 g     F .text	00000038 __metal_valid_interrupt_id
204071ea g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fd8 g       .data	00000000 __global_pointer$
204089dc g     F .text	00000054 _metal_clock_append_to_callbacks
20407756 g     F .text	00000038 __metal_plic0_complete_interrupt
20407044 g     F .text	0000014e __metal_driver_riscv_cpu_controller_interrupt_register
20408ab6 g     F .text	0000002e metal_cpu_get
800007b8 g     O .data	00000020 __metal_dt_serial_10013000
204080e8 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20409344 g     O .rodata	0000004c __metal_driver_vtable_riscv_clint0
800008d4 g       .bss	00000000 metal_segment_bss_target_end
20405720 g     F .text	0000009a __metal_clint0_mtime_get
204075f8 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000000 g       *ABS*	00000000 __metal_chicken_bit
20407e98 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20404594 g     F .text	000000a4 .hidden __gtdf2
2040533c g     F .text	0000000c __errno
08000000 g       .init_array	00000000 metal_segment_itim_target_start
2040867a g     F .text	00000032 __metal_driver_sifive_uart0_txready
20400070 g     F .init	0000000e __metal_synchronize_harts
80000800 g       .bss	00000000 metal_segment_bss_target_start
204057ba g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20408338 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800008d0 g     O .bss	00000004 errno
00000400 g       *ABS*	00000000 __stack_size
20408a30 g     F .text	00000030 metal_clock_register_pre_rate_change_callback
204068c0  w    F .text	00000096 metal_lc9_interrupt_vector_handler
20409598 g     O .rodata	0000004c __metal_driver_vtable_riscv_plic0
20409558 g     O .rodata	00000040 __metal_driver_vtable_cpu
20405634 g     F .text	0000002e metal_uart_set_baud_rate
2040890a g     F .text	000000d2 __metal_driver_sifive_uart0_init
2040727e g     F .text	00000072 __metal_driver_cpu_mcycle_get
80000cd4 g       .heap	00000000 metal_segment_heap_target_start
800007ec g     O .data	00000004 __metal_dt_cpu_0
204051ce g     F .text	0000006a .hidden __floatsidf
2040682a  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20404638 g     F .text	000000a4 .hidden __ltdf2
20406b18  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20405f72 g     F .text	00000018 __metal_default_exception_handler
20405d58 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
204077f2 g     F .text	00000062 __metal_plic0_set_priority
20407206 g     F .text	0000005c __metal_driver_riscv_cpu_controller_set_vector_mode
20405172 g     F .text	0000005c .hidden __fixunsdfsi
20405e04 g     F .text	00000030 __metal_driver_cpu_get
2040950c g     O .rodata	0000004c __metal_driver_vtable_riscv_cpu_intc
20405e66 g     F .text	00000018 __metal_interrupt_global_disable
20406794  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20406956  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20407c0c g     F .text	00000048 __metal_driver_riscv_plic0_disable
20406eb6 g     F .text	0000004e __metal_exception_register
20407412 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20407f7a g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
20406062 g     F .text	00000068 __metal_default_sw_handler
20403a02 g     F .text	000005f2 .hidden __adddf3
20408a60 g     F .text	00000030 metal_clock_register_post_rate_change_callback
2040863a g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
204036b0 g     F .text	00000352 .hidden __umoddi3
20408040 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
800007f4 g     O .data	00000008 __metal_driver_vtable_fixed_clock
800007dc g     O .data	00000004 _global_impure_ptr
204060ca  w    F .text	00000092 metal_timer_interrupt_vector_handler
204053ac g     F .text	0000006a __libc_init_array
20407fba g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
204069ec  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20403352 g     F .text	0000035e .hidden __udivdi3
20405238 g     F .text	00000050 .hidden __floatunsidf
20407192 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20407f34 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20400174 g     F .init	00000002 _init
20405ec8 g     F .text	0000001a __metal_interrupt_timer_disable
20408132 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
204074d0 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20409624 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20408080 g     F .text	00000068 __metal_driver_sifive_gpio0_enable_io
20405374 g     F .text	00000038 __libc_fini_array
204084c0 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
2040745a g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
2040510e g     F .text	00000064 .hidden __fixdfsi
80000000 g       .data	00000000 metal_segment_data_target_start
20405f1a g     F .text	0000002c __metal_interrupt_local_enable
20405d24 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20405566 g     F .text	0000002c metal_tty_putc
20407914 g     F .text	00000018 __metal_plic0_default_handler
20403312 g     F .text	00000012 write
800000f0 g     O .data	0000000c __metal_dt_clock_0
20404638 g     F .text	000000a4 .hidden __ledf2
00000800 g       *ABS*	00000000 __heap_size
20405efe g     F .text	0000001c __metal_interrupt_external_disable
20408658 g     F .text	00000022 __metal_driver_sifive_uart0_get_interrupt_id
20407262 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20406f04 g     F .text	00000140 __metal_driver_riscv_cpu_controller_interrupt_init
20405288 g     F .text	0000003c .hidden __clzsi2
204075b2 g     F .text	00000046 __metal_driver_cpu_exception_register
20405e7e g     F .text	00000018 __metal_interrupt_software_enable
20406410  w    F .text	00000096 metal_lc1_interrupt_vector_handler
80000800 g     O .bss	00000004 _global_atexit
20400e00 g     F .text	0000060a crypto_aead_encrypt
20406cda g     F .text	00000050 __metal_controller_interrupt_vector_mode
2040549e g     F .text	000000c8 __call_exitprocs
80000cd4 g       .stack	00000000 _sp
2040007e g     F .init	00000000 _start
20407592 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20407626 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20405ee2 g     F .text	0000001c __metal_interrupt_external_enable
20405416 g     F .text	00000088 __register_exitproc
204086ac g     F .text	00000040 __metal_driver_sifive_uart0_putc
204079be g     F .text	00000144 __metal_driver_riscv_plic0_init
20407bc4 g     F .text	00000048 __metal_driver_riscv_plic0_enable
20407f08 g     F .text	0000002c __metal_driver_sifive_gpio0_output
204066fe  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20405e34 g     F .text	0000001a __metal_myhart_id
204084e0 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20405fd0  w    F .text	00000092 metal_software_interrupt_vector_handler
204071be g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20408742 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
2040590e g     F .text	000000da __metal_driver_riscv_clint0_register
800007e4 g     O .data	00000008 __metal_dt_clint_2000000
20403ff4 g     F .text	00000536 .hidden __divdf3
204046dc g     F .text	0000043c .hidden __muldf3
20407e58 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
20400176  w    F .init	00000000 secondary_main
20405fa2  w    F .text	0000002e metal_interrupt_vector_handler
204077c6 g     F .text	0000002c __metal_plic0_get_threshold
20406dfa g     F .text	000000bc __metal_local_interrupt_enable
20405bee g     F .text	00000136 __metal_driver_riscv_clint0_command_request
20406668  w    F .text	00000096 metal_lc5_interrupt_vector_handler
2040021e g     F .text	000002d2 main
80000800 g       .data	00000000 metal_segment_data_target_end
2040746e g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20407532 g     F .text	00000060 __metal_driver_cpu_get_msip
20408afe g     F .text	0000000e metal_shutdown
08000000 g       .init_array	00000000 metal_segment_itim_target_end
20407644 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20407728 g     F .text	0000002e __metal_plic0_claim_interrupt
20406a82  w    F .text	00000096 metal_lc12_interrupt_vector_handler
20405a10 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
204072f0 g     F .text	00000046 __metal_driver_cpu_timebase_get
20400000 g       .init	00000000 _enter
20408ae4 g     F .text	0000001a metal_cpu_get_current_hartid
20408b80 g       .text	00000000 __metal_vector_table
20409688 g       *ABS*	00000000 metal_segment_itim_source_start
800007e0  w    O .data	00000004 __metal_cpu_table
2040452a g     F .text	0000006a .hidden __nedf2
80000100 g     O .data	000003b8 __metal_dt_cpu_0_interrupt_controller
20400174 g     F .init	00000002 _fini
20409230 g     O .rodata	00000100 .hidden __clz_tab
20405e4e g     F .text	00000018 __metal_interrupt_global_enable
20405332 g     F .text	0000000a atexit
20405592 g     F .text	00000026 metal_tty_putc_raw
20403324 g     F .text	0000002e _write_r
20405eae g     F .text	0000001a __metal_interrupt_timer_enable
204086ec g     F .text	00000056 __metal_driver_sifive_uart0_getc
20405b36 g     F .text	000000b8 __metal_driver_riscv_clint0_disable
800007d8 g     O .data	00000004 _impure_ptr
2040739c g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20400d72 g     F .text	0000008e printS
20408c2e g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20405a80 g     F .text	000000b6 __metal_driver_riscv_clint0_enable
20409688 g       *ABS*	00000000 metal_segment_data_source_start
800014d4 g       .heap	00000000 metal_segment_heap_target_end
20406d2a g     F .text	00000098 __metal_controller_interrupt_vector
800004b8 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20407ffa g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
204032bc g     F .text	00000056 printf_
2040615c g     F .text	00000066 __metal_default_timer_handler
204052c4 g     F .text	0000006e _write
2040792c g     F .text	00000092 __metal_plic0_handler
204064a6  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20406c44  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20408a90 g     F .text	00000026 metal_cpu_interrupt_controller
20405348 g     F .text	0000002c exit
20408c4c g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
800007f0 g     O .data	00000004 __metal_dt_gpio_10012000
20405f8a g     F .text	00000018 __metal_default_interrupt_handler
20405606 g     F .text	0000002e metal_uart_putc
20407ede g     F .text	0000002a __metal_driver_sifive_gpio0_input
20406200 g     F .text	00000154 __metal_exception_handler
2040637a  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20408c6e g     F .text	00000014 _exit
20407336 g     F .text	00000066 __metal_driver_cpu_mtime_get
204059e8 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20404594 g     F .text	000000a4 .hidden __gedf2
20406bae  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20405886 g     F .text	00000088 __metal_driver_riscv_clint0_init
20404b18 g     F .text	000005f6 .hidden __subdf3
2040742c g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20407888 g     F .text	0000008c __metal_plic0_enable
2040006e  w      .init	00000000 __register_frame_info
20407440 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20405f46 g     F .text	0000002c __metal_interrupt_local_disable
20405e96 g     F .text	00000018 __metal_interrupt_software_disable
20407854 g     F .text	00000034 __metal_plic0_get_priority
204055da g     F .text	0000002c metal_uart_init
2040778e g     F .text	00000038 __metal_plic0_set_threshold
00000000 g       *ABS*	00000000 __metal_boot_hart
20407b02 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fd818193          	addi	gp,gp,-40 # 80000fd8 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:29
.option pop

    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400008:	00000297          	auipc	t0,0x0
2040000c:	05828293          	addi	t0,t0,88 # 20400060 <early_trap_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:30
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:32
    /* enable chicken bit if core is bullet series*/
    la t0, __metal_chicken_bit
20400014:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:33
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:34
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:43
     * C, so here we set up a C environment.  First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
20400020:	dfc00117          	auipc	sp,0xdfc00
20400024:	fe010113          	addi	sp,sp,-32 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:52
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    .weak __metal_before_start
    la ra, __metal_before_start
20400028:	dfc00097          	auipc	ra,0xdfc00
2040002c:	fd808093          	addi	ra,ra,-40 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:53
    beqz ra, 1f
20400030:	00008363          	beqz	ra,20400036 <_enter+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:54
    jalr ra
20400034:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:60
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400036:	f1402573          	csrr	a0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:61
    li a1, 0
2040003a:	4581                	li	a1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:62
    li a2, 0
2040003c:	4601                	li	a2,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:63
    call _start
2040003e:	2081                	jal	2040007e <_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:68

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400040:	dfc00097          	auipc	ra,0xdfc00
20400044:	fc008093          	addi	ra,ra,-64 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:69
    beqz ra, 1f
20400048:	00008363          	beqz	ra,2040004e <_enter+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:70
    jalr ra
2040004c:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:75
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2040004e:	00000297          	auipc	t0,0x0
20400052:	00c28293          	addi	t0,t0,12 # 2040005a <_enter+0x5a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:76
     csrw mtvec, t0
20400056:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:78
1:
     lw t1, 0(x0)
2040005a:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:79
     j 1b
2040005e:	bff5                	j	2040005a <_enter+0x5a>

20400060 <early_trap_vector>:
early_trap_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:89
 * you end up here then there's a bug in the early boot code somewhere. */
.section .text.metal.init.trapvec
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400060:	342022f3          	csrr	t0,mcause
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:90
    csrr t1, mepc
20400064:	34102373          	csrr	t1,mepc
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:91
    csrr t2, mtval
20400068:	343023f3          	csrr	t2,mtval
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:92
    j early_trap_vector
2040006c:	bfd5                	j	20400060 <early_trap_vector>

2040006e <__register_frame_info>:
__register_frame_info():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:105
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2040006e:	8082                	ret

20400070 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init")))
void __metal_synchronize_harts() {
20400070:	1141                	addi	sp,sp,-16
20400072:	c622                	sw	s0,12(sp)
20400074:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:61
        /* Wait for hart 0 to clear the MSIP bit */
        while (METAL_MSIP(msip_base, hart) == 1) ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400076:	0001                	nop
20400078:	4432                	lw	s0,12(sp)
2040007a:	0141                	addi	sp,sp,16
2040007c:	8082                	ret

2040007e <_start>:
_start():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
2040007e:	8406                	mv	s0,ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400080:	5fc01197          	auipc	gp,0x5fc01
20400084:	f5818193          	addi	gp,gp,-168 # 80000fd8 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:51

  /* The METAL is designed for a bare-metal environment and therefor is expected
   * to define its own stack pointer.  We also align the stack pointer here
   * because the only RISC-V ABI that's currently defined mandates 16-byte
   * stack alignment. */
  la sp, _sp
20400088:	cfc18113          	addi	sp,gp,-772 # 80000cd4 <_sp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:54

  /* Increment by hartid number of stack sizes */
  li t0, 0
2040008c:	4281                	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:55
  la t1, __stack_size
2040008e:	40000313          	li	t1,1024
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:57
1:
  beq t0, a0, 1f
20400092:	00a28563          	beq	t0,a0,2040009c <_start+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:58
  add sp, sp, t1
20400096:	911a                	add	sp,sp,t1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:59
  addi t0, t0, 1
20400098:	0285                	addi	t0,t0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:60
  j 1b
2040009a:	bfe5                	j	20400092 <_start+0x14>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:62
1:
  andi sp, sp, -16
2040009c:	ff017113          	andi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:65

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
204000a0:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:66
  bne a0, t0, _skip_init
204000a4:	08551963          	bne	a0,t0,20400136 <_skip_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:75
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
204000a8:	00009297          	auipc	t0,0x9
204000ac:	5e028293          	addi	t0,t0,1504 # 20409688 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:76
  la t1, metal_segment_data_target_start
204000b0:	5fc00317          	auipc	t1,0x5fc00
204000b4:	f5030313          	addi	t1,t1,-176 # 80000000 <metal_segment_data_target_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:77
  la t2, metal_segment_data_target_end
204000b8:	82818393          	addi	t2,gp,-2008 # 80000800 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:79

  beq t0, t1, 2f
204000bc:	00628c63          	beq	t0,t1,204000d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:80
  bge t1, t2, 2f
204000c0:	00735a63          	bge	t1,t2,204000d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:84

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204000c4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  addi t0, t0, 4
204000c8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  sw   a0, 0(t1)
204000ca:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:87
  addi t1, t1, 4
204000ce:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:88
  blt  t1, t2, 1b
204000d0:	fe734ae3          	blt	t1,t2,204000c4 <_start+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:99
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
204000d4:	00009297          	auipc	t0,0x9
204000d8:	5b428293          	addi	t0,t0,1460 # 20409688 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:100
  la t1, metal_segment_itim_target_start
204000dc:	e7c00317          	auipc	t1,0xe7c00
204000e0:	f2430313          	addi	t1,t1,-220 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:101
  la t2, metal_segment_itim_target_end
204000e4:	e7c00397          	auipc	t2,0xe7c00
204000e8:	f1c38393          	addi	t2,t2,-228 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:103

  beq t0, t1, 2f
204000ec:	00628c63          	beq	t0,t1,20400104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:104
  bge t1, t2, 2f
204000f0:	00735a63          	bge	t1,t2,20400104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:108

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204000f4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:109
  addi t0, t0, 4
204000f8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:110
  sw   a0, 0(t1)
204000fa:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:111
  addi t1, t1, 4
204000fe:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:112
  blt  t1, t2, 1b
20400100:	fe734ae3          	blt	t1,t2,204000f4 <_start+0x76>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:124
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
20400104:	0000100f          	fence.i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:127

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20400108:	5fc00317          	auipc	t1,0x5fc00
2040010c:	6f830313          	addi	t1,t1,1784 # 80000800 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:128
  la t2, metal_segment_bss_target_end
20400110:	8fc18393          	addi	t2,gp,-1796 # 800008d4 <metal_segment_bss_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:130

  bge t1, t2, 2f
20400114:	00735763          	bge	t1,t2,20400122 <_start+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:134

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20400118:	00032023          	sw	zero,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:135
  addi t1, t1, 4
2040011c:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:136
  blt  t1, t2, 1b
2040011e:	fe734de3          	blt	t1,t2,20400118 <_start+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:147
2:

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400122:	c211                	beqz	a2,20400126 <_start+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:148
  jalr a2
20400124:	9602                	jalr	a2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:152
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400126:	00005517          	auipc	a0,0x5
2040012a:	24e50513          	addi	a0,a0,590 # 20405374 <__libc_fini_array>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:153
  call atexit
2040012e:	204050ef          	jal	ra,20405332 <atexit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:154
  call __libc_init_array
20400132:	27a050ef          	jal	ra,204053ac <__libc_init_array>

20400136 <_skip_init>:
_skip_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:160

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400136:	3f2d                	jal	20400070 <__metal_synchronize_harts>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:163

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  csrr a5, misa
20400138:	301027f3          	csrr	a5,misa
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:164
  li   a4, 0x10028
2040013c:	00010737          	lui	a4,0x10
20400140:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:165
  and  a5, a5, a4
20400144:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:166
  beqz a5, 1f
20400146:	cb89                	beqz	a5,20400158 <_skip_init+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  csrr a5, mstatus
20400148:	300027f3          	csrr	a5,mstatus
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:168
  lui  a4, 0x2
2040014c:	6709                	lui	a4,0x2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:169
  or   a5, a5, a4
2040014e:	8fd9                	or	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:170
  csrw mstatus, a5
20400150:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:171
  csrwi fcsr, 0
20400154:	00305073          	csrwi	fcsr,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:177
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20400158:	4505                	li	a0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  la a1, argv  /* argv = {"libgloss", NULL} */
2040015a:	00009597          	auipc	a1,0x9
2040015e:	1d658593          	addi	a1,a1,470 # 20409330 <argv>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  la a2, envp  /* envp = {NULL} */
20400162:	00009617          	auipc	a2,0x9
20400166:	1d260613          	addi	a2,a2,466 # 20409334 <envp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:180
  call secondary_main
2040016a:	2031                	jal	20400176 <secondary_main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:186

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2040016c:	1dc050ef          	jal	ra,20405348 <exit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:191

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
20400170:	80a2                	mv	ra,s0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:192
  ret
20400172:	8082                	ret

20400174 <_fini>:
_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:204
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
20400174:	8082                	ret

20400176 <secondary_main>:
secondary_main():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:215
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
20400176:	1141                	addi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:217
#if __riscv_xlen == 32
  sw ra, 4(sp)
20400178:	c206                	sw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:221
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
2040017a:	f14022f3          	csrr	t0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  la t1, __metal_boot_hart
2040017e:	00000313          	li	t1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  beq t0, t1, 2f
20400182:	00628563          	beq	t0,t1,2040018c <secondary_main+0x16>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:225
1:
  wfi
20400186:	10500073          	wfi
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  j 1b
2040018a:	bff5                	j	20400186 <secondary_main+0x10>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:228
2:
  call main
2040018c:	2849                	jal	2040021e <main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:230
#if __riscv_xlen == 32
  lw ra, 4(sp)
2040018e:	4092                	lw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:234
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
20400190:	0141                	addi	sp,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  ret
20400192:	8082                	ret

Disassembly of section .text:

20400200 <rdcycle>:
rdcycle():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:49

#define rdtime() read_csr(time)
//#define rdcycle() read_csr(cycle)
#define rdinstret() read_csr(instret)

int rdcycle() {
20400200:	1101                	addi	sp,sp,-32
20400202:	ce22                	sw	s0,28(sp)
20400204:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:50
    int tmp = 0;
20400206:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:51
    asm __volatile__ ("csrr %[dst01], mcycle\n" : [dst01]"=r"(tmp) : : );
2040020a:	b00027f3          	csrr	a5,mcycle
2040020e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:52
    return tmp;
20400212:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:53
}
20400216:	853e                	mv	a0,a5
20400218:	4472                	lw	s0,28(sp)
2040021a:	6105                	addi	sp,sp,32
2040021c:	8082                	ret

2040021e <main>:
main():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:10
#include "printf.h"
//#include "stdio.h"
#include "word.h"
#include <stdio.h>

int main(void) {
2040021e:	711d                	addi	sp,sp,-96
20400220:	ce86                	sw	ra,92(sp)
20400222:	cca2                	sw	s0,88(sp)
20400224:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:18
    static unsigned cipher_text [8]= {0xf, 0xf, 0xf , 0xf};
    static unsigned cipher_text_sw [12]= {0};
    static unsigned dumm_array [8]= {0x1, 0x1, 0x1, 0x1};
    static unsigned key[4] ={0,0,0, 518};
    static unsigned npub[4] ={0,0,0, 0};
    unsigned plain_len = 30;
20400226:	4779                	li	a4,30
20400228:	fee42223          	sw	a4,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:19
    unsigned asso_len = 7; /// CReo que asignaste a memoria
2040022c:	471d                	li	a4,7
2040022e:	fee42023          	sw	a4,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:20
    unsigned long long int c_len = plain_len;
20400232:	fe442703          	lw	a4,-28(s0)
20400236:	87ba                	mv	a5,a4
20400238:	4801                	li	a6,0
2040023a:	faf42823          	sw	a5,-80(s0)
2040023e:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:21
    unsigned long long int p_len = plain_len;
20400242:	fe442783          	lw	a5,-28(s0)
20400246:	fcf42c23          	sw	a5,-40(s0)
2040024a:	fc042e23          	sw	zero,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:22
    unsigned long long int a_len = asso_len;
2040024e:	fe042783          	lw	a5,-32(s0)
20400252:	fcf42823          	sw	a5,-48(s0)
20400256:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:23
    unsigned plain_len_int = plain_len / 4 ;
2040025a:	fe442783          	lw	a5,-28(s0)
2040025e:	8389                	srli	a5,a5,0x2
20400260:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:24
    plain_len_int = (plain_len % 4 == 0 )? plain_len_int :plain_len_int+1;
20400264:	fe442783          	lw	a5,-28(s0)
20400268:	8b8d                	andi	a5,a5,3
2040026a:	c789                	beqz	a5,20400274 <main+0x56>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:24 (discriminator 1)
2040026c:	fcc42783          	lw	a5,-52(s0)
20400270:	0785                	addi	a5,a5,1
20400272:	a019                	j	20400278 <main+0x5a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:24 (discriminator 2)
20400274:	fcc42783          	lw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:24 (discriminator 4)
20400278:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:27 (discriminator 4)


    printf("Init AEAD \n");
2040027c:	204097b7          	lui	a5,0x20409
20400280:	c8878513          	addi	a0,a5,-888 # 20408c88 <_exit+0x1a>
20400284:	038030ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:29 (discriminator 4)
    unsigned start, end, HWcycles;
    int rd = 0;
20400288:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:31 (discriminator 4)
    // RoCC
    start = rdcycle();
2040028c:	3f95                	jal	20400200 <rdcycle>
2040028e:	87aa                	mv	a5,a0
20400290:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:32 (discriminator 4)
    write_csr(mstatus, MSTATUS_XS); // Always initialize the CSR such that the accelerator is recognized
20400294:	67e1                	lui	a5,0x18
20400296:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:35 (discriminator 4)

    //rd = AEAD_E_Set_P( plain_text, plain_len);
    asm volatile("fence");
2040029a:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:36 (discriminator 4)
    ROCC_INSTRUCTION_DSS(0,rd, plain_text, plain_len, Enc_Set_P );
2040029e:	800007b7          	lui	a5,0x80000
204002a2:	00078793          	mv	a5,a5
204002a6:	85be                	mv	a1,a5
204002a8:	fe442603          	lw	a2,-28(s0)
204002ac:	22c5f50b          	0x22c5f50b
204002b0:	87aa                	mv	a5,a0
204002b2:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:37 (discriminator 4)
    asm volatile("fence" ::: "memory");
204002b6:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:38 (discriminator 4)
    printf("Set Plain text finish length : %d \n", rd);
204002ba:	fc842583          	lw	a1,-56(s0)
204002be:	204097b7          	lui	a5,0x20409
204002c2:	c9478513          	addi	a0,a5,-876 # 20408c94 <_exit+0x26>
204002c6:	7f7020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:41 (discriminator 4)

    //rd = AEAD_E_Set_AD(plain_text, plain_len );
    asm volatile("fence");
204002ca:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:42 (discriminator 4)
    ROCC_INSTRUCTION_DSS(0, rd,asso_text, asso_len, Enc_Set_AD );
204002ce:	800007b7          	lui	a5,0x80000
204002d2:	02078793          	addi	a5,a5,32 # 80000020 <metal_segment_heap_target_end+0xffffeb4c>
204002d6:	85be                	mv	a1,a5
204002d8:	fe042603          	lw	a2,-32(s0)
204002dc:	24c5f50b          	0x24c5f50b
204002e0:	87aa                	mv	a5,a0
204002e2:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:43 (discriminator 4)
    asm volatile("fence" ::: "memory");
204002e6:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:44 (discriminator 4)
    printf("Set Associated Data finish length: %d \n", rd);
204002ea:	fc842583          	lw	a1,-56(s0)
204002ee:	204097b7          	lui	a5,0x20409
204002f2:	cb878513          	addi	a0,a5,-840 # 20408cb8 <_exit+0x4a>
204002f6:	7c7020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:47 (discriminator 4)

    // rd = AEAD_E_Set_C_Tag(cipher_text,dumm_array);
    asm volatile("fence");
204002fa:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:48 (discriminator 4)
    ROCC_INSTRUCTION_DSS(0,rd, cipher_text, dumm_array, Enc_Set_C_Tag );
204002fe:	800007b7          	lui	a5,0x80000
20400302:	04078793          	addi	a5,a5,64 # 80000040 <metal_segment_heap_target_end+0xffffeb6c>
20400306:	85be                	mv	a1,a5
20400308:	800007b7          	lui	a5,0x80000
2040030c:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffeb8c>
20400310:	863e                	mv	a2,a5
20400312:	26c5f50b          	0x26c5f50b
20400316:	87aa                	mv	a5,a0
20400318:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:49 (discriminator 4)
    asm volatile("fence" ::: "memory");
2040031c:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:50 (discriminator 4)
    printf("Set Tag and C finish : %d \n", rd);
20400320:	fc842583          	lw	a1,-56(s0)
20400324:	204097b7          	lui	a5,0x20409
20400328:	ce078513          	addi	a0,a5,-800 # 20408ce0 <_exit+0x72>
2040032c:	791020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:53 (discriminator 4)

    // rd = AEAD_E_Set_Nonce(dumm_array );
    asm volatile("fence");
20400330:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:54 (discriminator 4)
    ROCC_INSTRUCTION_DS(0,rd, dumm_array, Enc_Set_Nonce );
20400334:	800007b7          	lui	a5,0x80000
20400338:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffeb8c>
2040033c:	85be                	mv	a1,a5
2040033e:	2805e50b          	0x2805e50b
20400342:	87aa                	mv	a5,a0
20400344:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:55 (discriminator 4)
    asm volatile("fence" ::: "memory");
20400348:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:56 (discriminator 4)
    printf("Set Nonce finish : %d \n", rd);
2040034c:	fc842583          	lw	a1,-56(s0)
20400350:	204097b7          	lui	a5,0x20409
20400354:	cfc78513          	addi	a0,a5,-772 # 20408cfc <_exit+0x8e>
20400358:	765020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:59 (discriminator 4)

    // rd = AEAD_E_Set_Key(rd);
    asm volatile("fence");
2040035c:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:60 (discriminator 4)
    ROCC_INSTRUCTION_DS(0,rd,  rd, Enc_Set_Key );
20400360:	fc842783          	lw	a5,-56(s0)
20400364:	85be                	mv	a1,a5
20400366:	2a05e50b          	0x2a05e50b
2040036a:	87aa                	mv	a5,a0
2040036c:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:61 (discriminator 4)
    asm volatile("fence" ::: "memory");
20400370:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:62 (discriminator 4)
    printf("Set Key  finish : %d \n", rd);
20400374:	fc842583          	lw	a1,-56(s0)
20400378:	204097b7          	lui	a5,0x20409
2040037c:	d1478513          	addi	a0,a5,-748 # 20408d14 <_exit+0xa6>
20400380:	73d020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:65 (discriminator 4)

    //rd = AEAD_E_Set_Init();
    asm volatile("fence");
20400384:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:66 (discriminator 4)
    ROCC_INSTRUCTION_DS(0,rd, rd,  Enc_Init );
20400388:	fc842783          	lw	a5,-56(s0)
2040038c:	85be                	mv	a1,a5
2040038e:	2c05e50b          	0x2c05e50b
20400392:	87aa                	mv	a5,a0
20400394:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:67 (discriminator 4)
    asm volatile("fence" ::: "memory");
20400398:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:68 (discriminator 4)
    printf("Finish AEAD : %x \n", rd);
2040039c:	fc842583          	lw	a1,-56(s0)
204003a0:	204097b7          	lui	a5,0x20409
204003a4:	d2c78513          	addi	a0,a5,-724 # 20408d2c <_exit+0xbe>
204003a8:	715020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:70 (discriminator 4)

    end = rdcycle();
204003ac:	3d91                	jal	20400200 <rdcycle>
204003ae:	87aa                	mv	a5,a0
204003b0:	fcf42023          	sw	a5,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:71 (discriminator 4)
    HWcycles = end - start;
204003b4:	fc042703          	lw	a4,-64(s0)
204003b8:	fc442783          	lw	a5,-60(s0)
204003bc:	40f707b3          	sub	a5,a4,a5
204003c0:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:72 (discriminator 4)
    printf("Total time = %d cycles\n",HWcycles);
204003c4:	fbc42583          	lw	a1,-68(s0)
204003c8:	204097b7          	lui	a5,0x20409
204003cc:	d4078513          	addi	a0,a5,-704 # 20408d40 <_exit+0xd2>
204003d0:	6ed020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:74 (discriminator 4)

    crypto_aead_encrypt((unsigned char *)cipher_text_sw,&c_len,(unsigned char*)plain_text,p_len, (unsigned char*)asso_text,a_len,(unsigned char*)npub,(unsigned char*)key);
204003d4:	fb040593          	addi	a1,s0,-80
204003d8:	800007b7          	lui	a5,0x80000
204003dc:	08078793          	addi	a5,a5,128 # 80000080 <metal_segment_heap_target_end+0xffffebac>
204003e0:	c23e                	sw	a5,4(sp)
204003e2:	800017b7          	lui	a5,0x80001
204003e6:	83478793          	addi	a5,a5,-1996 # 80000834 <metal_segment_heap_target_end+0xfffff360>
204003ea:	c03e                	sw	a5,0(sp)
204003ec:	fd042803          	lw	a6,-48(s0)
204003f0:	fd442883          	lw	a7,-44(s0)
204003f4:	800007b7          	lui	a5,0x80000
204003f8:	02078793          	addi	a5,a5,32 # 80000020 <metal_segment_heap_target_end+0xffffeb4c>
204003fc:	fd842683          	lw	a3,-40(s0)
20400400:	fdc42703          	lw	a4,-36(s0)
20400404:	80000637          	lui	a2,0x80000
20400408:	00060613          	mv	a2,a2
2040040c:	80001537          	lui	a0,0x80001
20400410:	80450513          	addi	a0,a0,-2044 # 80000804 <metal_segment_heap_target_end+0xfffff330>
20400414:	1ed000ef          	jal	ra,20400e00 <crypto_aead_encrypt>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:75 (discriminator 4)
    printf("Hardware \n");
20400418:	204097b7          	lui	a5,0x20409
2040041c:	d5878513          	addi	a0,a5,-680 # 20408d58 <_exit+0xea>
20400420:	69d020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:76 (discriminator 4)
    for(int i = 0; i < 8; i ++){
20400424:	fe042623          	sw	zero,-20(s0)
20400428:	a081                	j	20400468 <main+0x24a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:77
       if(i%2==0 ){
2040042a:	fec42783          	lw	a5,-20(s0)
2040042e:	8b85                	andi	a5,a5,1
20400430:	e799                	bnez	a5,2040043e <main+0x220>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:78
            printf("\n");
20400432:	204097b7          	lui	a5,0x20409
20400436:	d6478513          	addi	a0,a5,-668 # 20408d64 <_exit+0xf6>
2040043a:	683020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:80 (discriminator 2)
        }
        printf("%x ",cipher_text[i]);
2040043e:	800007b7          	lui	a5,0x80000
20400442:	04078713          	addi	a4,a5,64 # 80000040 <metal_segment_heap_target_end+0xffffeb6c>
20400446:	fec42783          	lw	a5,-20(s0)
2040044a:	078a                	slli	a5,a5,0x2
2040044c:	97ba                	add	a5,a5,a4
2040044e:	439c                	lw	a5,0(a5)
20400450:	85be                	mv	a1,a5
20400452:	204097b7          	lui	a5,0x20409
20400456:	d6878513          	addi	a0,a5,-664 # 20408d68 <_exit+0xfa>
2040045a:	663020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:76 (discriminator 2)
    for(int i = 0; i < 8; i ++){
2040045e:	fec42783          	lw	a5,-20(s0)
20400462:	0785                	addi	a5,a5,1
20400464:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:76 (discriminator 1)
20400468:	fec42703          	lw	a4,-20(s0)
2040046c:	479d                	li	a5,7
2040046e:	fae7dee3          	bge	a5,a4,2040042a <main+0x20c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:82
    }
    printf("\n");
20400472:	204097b7          	lui	a5,0x20409
20400476:	d6478513          	addi	a0,a5,-668 # 20408d64 <_exit+0xf6>
2040047a:	643020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:83
    printf("Software");
2040047e:	204097b7          	lui	a5,0x20409
20400482:	d6c78513          	addi	a0,a5,-660 # 20408d6c <_exit+0xfe>
20400486:	637020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:84
    for(int i = 0; i < 12; i ++){
2040048a:	fe042423          	sw	zero,-24(s0)
2040048e:	a081                	j	204004ce <main+0x2b0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:85
        if(i%2==0 ){
20400490:	fe842783          	lw	a5,-24(s0)
20400494:	8b85                	andi	a5,a5,1
20400496:	e799                	bnez	a5,204004a4 <main+0x286>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:86
            printf("\n");
20400498:	204097b7          	lui	a5,0x20409
2040049c:	d6478513          	addi	a0,a5,-668 # 20408d64 <_exit+0xf6>
204004a0:	61d020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:88 (discriminator 2)
        }
        printf("%x ",cipher_text_sw[i]);
204004a4:	800017b7          	lui	a5,0x80001
204004a8:	80478713          	addi	a4,a5,-2044 # 80000804 <metal_segment_heap_target_end+0xfffff330>
204004ac:	fe842783          	lw	a5,-24(s0)
204004b0:	078a                	slli	a5,a5,0x2
204004b2:	97ba                	add	a5,a5,a4
204004b4:	439c                	lw	a5,0(a5)
204004b6:	85be                	mv	a1,a5
204004b8:	204097b7          	lui	a5,0x20409
204004bc:	d6878513          	addi	a0,a5,-664 # 20408d68 <_exit+0xfa>
204004c0:	5fd020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:84 (discriminator 2)
    for(int i = 0; i < 12; i ++){
204004c4:	fe842783          	lw	a5,-24(s0)
204004c8:	0785                	addi	a5,a5,1
204004ca:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:84 (discriminator 1)
204004ce:	fe842703          	lw	a4,-24(s0)
204004d2:	47ad                	li	a5,11
204004d4:	fae7dee3          	bge	a5,a4,20400490 <main+0x272>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:90
    }
    printf("\n");
204004d8:	204097b7          	lui	a5,0x20409
204004dc:	d6478513          	addi	a0,a5,-668 # 20408d64 <_exit+0xf6>
204004e0:	5dd020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:95




    return 0;
204004e4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:96
}
204004e6:	853e                	mv	a0,a5
204004e8:	40f6                	lw	ra,92(sp)
204004ea:	4466                	lw	s0,88(sp)
204004ec:	6125                	addi	sp,sp,96
204004ee:	8082                	ret

204004f0 <ROR>:
ROR():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:7
#define ROUND_H_

#include "ascon.h"
#include "constants.h"

static inline uint64_t ROR(uint64_t x, int n) {
204004f0:	1101                	addi	sp,sp,-32
204004f2:	ce22                	sw	s0,28(sp)
204004f4:	1000                	addi	s0,sp,32
204004f6:	fea42423          	sw	a0,-24(s0)
204004fa:	feb42623          	sw	a1,-20(s0)
204004fe:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:8
  return x >> n | x << (-n & 63);
20400502:	fe842783          	lw	a5,-24(s0)
20400506:	fec42803          	lw	a6,-20(s0)
2040050a:	fe442603          	lw	a2,-28(s0)
2040050e:	1601                	addi	a2,a2,-32
20400510:	00064663          	bltz	a2,2040051c <ROR+0x2c>
20400514:	00c85333          	srl	t1,a6,a2
20400518:	4381                	li	t2,0
2040051a:	a025                	j	20400542 <ROR+0x52>
2040051c:	00181593          	slli	a1,a6,0x1
20400520:	457d                	li	a0,31
20400522:	fe442603          	lw	a2,-28(s0)
20400526:	40c50633          	sub	a2,a0,a2
2040052a:	00c59633          	sll	a2,a1,a2
2040052e:	fe442583          	lw	a1,-28(s0)
20400532:	00b7d333          	srl	t1,a5,a1
20400536:	00666333          	or	t1,a2,t1
2040053a:	fe442603          	lw	a2,-28(s0)
2040053e:	00c853b3          	srl	t2,a6,a2
20400542:	fe442603          	lw	a2,-28(s0)
20400546:	40c00633          	neg	a2,a2
2040054a:	03f67613          	andi	a2,a2,63
2040054e:	1601                	addi	a2,a2,-32
20400550:	00064663          	bltz	a2,2040055c <ROR+0x6c>
20400554:	00c79733          	sll	a4,a5,a2
20400558:	4681                	li	a3,0
2040055a:	a83d                	j	20400598 <ROR+0xa8>
2040055c:	0017d593          	srli	a1,a5,0x1
20400560:	457d                	li	a0,31
20400562:	fe442603          	lw	a2,-28(s0)
20400566:	40c00633          	neg	a2,a2
2040056a:	03f67613          	andi	a2,a2,63
2040056e:	40c50633          	sub	a2,a0,a2
20400572:	00c5d633          	srl	a2,a1,a2
20400576:	fe442583          	lw	a1,-28(s0)
2040057a:	40b005b3          	neg	a1,a1
2040057e:	03f5f593          	andi	a1,a1,63
20400582:	00b81733          	sll	a4,a6,a1
20400586:	8f51                	or	a4,a4,a2
20400588:	fe442603          	lw	a2,-28(s0)
2040058c:	40c00633          	neg	a2,a2
20400590:	03f67613          	andi	a2,a2,63
20400594:	00c796b3          	sll	a3,a5,a2
20400598:	0066ee33          	or	t3,a3,t1
2040059c:	00776eb3          	or	t4,a4,t2
204005a0:	86f2                	mv	a3,t3
204005a2:	8776                	mv	a4,t4
204005a4:	87b6                	mv	a5,a3
204005a6:	883a                	mv	a6,a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:9
}
204005a8:	853e                	mv	a0,a5
204005aa:	85c2                	mv	a1,a6
204005ac:	4472                	lw	s0,28(sp)
204005ae:	6105                	addi	sp,sp,32
204005b0:	8082                	ret

204005b2 <ROUND>:
ROUND():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:11

static inline void ROUND(ascon_state_t* s, uint8_t C) {
204005b2:	7169                	addi	sp,sp,-304
204005b4:	12112623          	sw	ra,300(sp)
204005b8:	12812423          	sw	s0,296(sp)
204005bc:	13212223          	sw	s2,292(sp)
204005c0:	13312023          	sw	s3,288(sp)
204005c4:	11412e23          	sw	s4,284(sp)
204005c8:	11512c23          	sw	s5,280(sp)
204005cc:	11612a23          	sw	s6,276(sp)
204005d0:	11712823          	sw	s7,272(sp)
204005d4:	11812623          	sw	s8,268(sp)
204005d8:	11912423          	sw	s9,264(sp)
204005dc:	11a12223          	sw	s10,260(sp)
204005e0:	11b12023          	sw	s11,256(sp)
204005e4:	1a00                	addi	s0,sp,304
204005e6:	f8a42e23          	sw	a0,-100(s0)
204005ea:	87ae                	mv	a5,a1
204005ec:	f8f40da3          	sb	a5,-101(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:14
  ascon_state_t t;
  /* addition of round constant */
  s->x[2] ^= C;
204005f0:	f9c42783          	lw	a5,-100(s0)
204005f4:	4b94                	lw	a3,16(a5)
204005f6:	4bd8                	lw	a4,20(a5)
204005f8:	f9b44783          	lbu	a5,-101(s0)
204005fc:	0ff7f793          	andi	a5,a5,255
20400600:	883e                	mv	a6,a5
20400602:	4881                	li	a7,0
20400604:	0106c333          	xor	t1,a3,a6
20400608:	011743b3          	xor	t2,a4,a7
2040060c:	f9c42783          	lw	a5,-100(s0)
20400610:	0067a823          	sw	t1,16(a5)
20400614:	0077aa23          	sw	t2,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:17
  /* printstate(" round constant", s); */
  /* substitution layer */
  s->x[0] ^= s->x[4];
20400618:	f9c42783          	lw	a5,-100(s0)
2040061c:	4394                	lw	a3,0(a5)
2040061e:	43d8                	lw	a4,4(a5)
20400620:	f9c42783          	lw	a5,-100(s0)
20400624:	0247a803          	lw	a6,36(a5)
20400628:	539c                	lw	a5,32(a5)
2040062a:	00f6ce33          	xor	t3,a3,a5
2040062e:	01074eb3          	xor	t4,a4,a6
20400632:	f9c42783          	lw	a5,-100(s0)
20400636:	01c7a023          	sw	t3,0(a5)
2040063a:	01d7a223          	sw	t4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:18
  s->x[4] ^= s->x[3];
2040063e:	f9c42783          	lw	a5,-100(s0)
20400642:	5394                	lw	a3,32(a5)
20400644:	53d8                	lw	a4,36(a5)
20400646:	f9c42783          	lw	a5,-100(s0)
2040064a:	01c7a803          	lw	a6,28(a5)
2040064e:	4f9c                	lw	a5,24(a5)
20400650:	00f6cc33          	xor	s8,a3,a5
20400654:	01074cb3          	xor	s9,a4,a6
20400658:	f9c42783          	lw	a5,-100(s0)
2040065c:	0387a023          	sw	s8,32(a5)
20400660:	0397a223          	sw	s9,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:19
  s->x[2] ^= s->x[1];
20400664:	f9c42783          	lw	a5,-100(s0)
20400668:	4b94                	lw	a3,16(a5)
2040066a:	4bd8                	lw	a4,20(a5)
2040066c:	f9c42783          	lw	a5,-100(s0)
20400670:	00c7a803          	lw	a6,12(a5)
20400674:	479c                	lw	a5,8(a5)
20400676:	00f6c633          	xor	a2,a3,a5
2040067a:	f8c42823          	sw	a2,-112(s0)
2040067e:	010747b3          	xor	a5,a4,a6
20400682:	f8f42a23          	sw	a5,-108(s0)
20400686:	f9c42783          	lw	a5,-100(s0)
2040068a:	f9042683          	lw	a3,-112(s0)
2040068e:	f9442703          	lw	a4,-108(s0)
20400692:	cb94                	sw	a3,16(a5)
20400694:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:21
  /* start of keccak s-box */
  t.x[0] = s->x[0] ^ (~s->x[1] & s->x[2]);
20400696:	f9c42783          	lw	a5,-100(s0)
2040069a:	4394                	lw	a3,0(a5)
2040069c:	43d8                	lw	a4,4(a5)
2040069e:	f9c42783          	lw	a5,-100(s0)
204006a2:	00c7a803          	lw	a6,12(a5)
204006a6:	479c                	lw	a5,8(a5)
204006a8:	fff7c913          	not	s2,a5
204006ac:	fff84993          	not	s3,a6
204006b0:	f9c42783          	lw	a5,-100(s0)
204006b4:	0147a803          	lw	a6,20(a5)
204006b8:	4b9c                	lw	a5,16(a5)
204006ba:	00f97f33          	and	t5,s2,a5
204006be:	0109ffb3          	and	t6,s3,a6
204006c2:	01e6c7b3          	xor	a5,a3,t5
204006c6:	f8f42423          	sw	a5,-120(s0)
204006ca:	01f747b3          	xor	a5,a4,t6
204006ce:	f8f42623          	sw	a5,-116(s0)
204006d2:	f8842783          	lw	a5,-120(s0)
204006d6:	f8c42803          	lw	a6,-116(s0)
204006da:	faf42423          	sw	a5,-88(s0)
204006de:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:22
  t.x[1] = s->x[1] ^ (~s->x[2] & s->x[3]);
204006e2:	f9c42783          	lw	a5,-100(s0)
204006e6:	4794                	lw	a3,8(a5)
204006e8:	47d8                	lw	a4,12(a5)
204006ea:	f9c42783          	lw	a5,-100(s0)
204006ee:	0147a803          	lw	a6,20(a5)
204006f2:	4b9c                	lw	a5,16(a5)
204006f4:	fff7cb13          	not	s6,a5
204006f8:	fff84b93          	not	s7,a6
204006fc:	f9c42783          	lw	a5,-100(s0)
20400700:	01c7a803          	lw	a6,28(a5)
20400704:	4f9c                	lw	a5,24(a5)
20400706:	00fb7a33          	and	s4,s6,a5
2040070a:	010bfab3          	and	s5,s7,a6
2040070e:	0146c7b3          	xor	a5,a3,s4
20400712:	f8f42023          	sw	a5,-128(s0)
20400716:	015747b3          	xor	a5,a4,s5
2040071a:	f8f42223          	sw	a5,-124(s0)
2040071e:	f8042783          	lw	a5,-128(s0)
20400722:	f8442803          	lw	a6,-124(s0)
20400726:	faf42823          	sw	a5,-80(s0)
2040072a:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:23
  t.x[2] = s->x[2] ^ (~s->x[3] & s->x[4]);
2040072e:	f9c42783          	lw	a5,-100(s0)
20400732:	4b94                	lw	a3,16(a5)
20400734:	4bd8                	lw	a4,20(a5)
20400736:	f9c42783          	lw	a5,-100(s0)
2040073a:	01c7a803          	lw	a6,28(a5)
2040073e:	4f9c                	lw	a5,24(a5)
20400740:	fff7c613          	not	a2,a5
20400744:	f6c42c23          	sw	a2,-136(s0)
20400748:	fff84793          	not	a5,a6
2040074c:	f6f42e23          	sw	a5,-132(s0)
20400750:	f9c42783          	lw	a5,-100(s0)
20400754:	0247a803          	lw	a6,36(a5)
20400758:	539c                	lw	a5,32(a5)
2040075a:	f7842583          	lw	a1,-136(s0)
2040075e:	f7c42603          	lw	a2,-132(s0)
20400762:	852e                	mv	a0,a1
20400764:	00f57d33          	and	s10,a0,a5
20400768:	01067db3          	and	s11,a2,a6
2040076c:	01a6c7b3          	xor	a5,a3,s10
20400770:	f6f42823          	sw	a5,-144(s0)
20400774:	01b747b3          	xor	a5,a4,s11
20400778:	f6f42a23          	sw	a5,-140(s0)
2040077c:	f7042783          	lw	a5,-144(s0)
20400780:	f7442803          	lw	a6,-140(s0)
20400784:	faf42c23          	sw	a5,-72(s0)
20400788:	fb042e23          	sw	a6,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:24
  t.x[3] = s->x[3] ^ (~s->x[4] & s->x[0]);
2040078c:	f9c42783          	lw	a5,-100(s0)
20400790:	4f94                	lw	a3,24(a5)
20400792:	4fd8                	lw	a4,28(a5)
20400794:	f9c42783          	lw	a5,-100(s0)
20400798:	0247a803          	lw	a6,36(a5)
2040079c:	539c                	lw	a5,32(a5)
2040079e:	fff7c613          	not	a2,a5
204007a2:	f6c42423          	sw	a2,-152(s0)
204007a6:	fff84793          	not	a5,a6
204007aa:	f6f42623          	sw	a5,-148(s0)
204007ae:	f9c42783          	lw	a5,-100(s0)
204007b2:	0047a803          	lw	a6,4(a5)
204007b6:	439c                	lw	a5,0(a5)
204007b8:	f6842583          	lw	a1,-152(s0)
204007bc:	f6c42603          	lw	a2,-148(s0)
204007c0:	852e                	mv	a0,a1
204007c2:	8d7d                	and	a0,a0,a5
204007c4:	f6a42023          	sw	a0,-160(s0)
204007c8:	010677b3          	and	a5,a2,a6
204007cc:	f6f42223          	sw	a5,-156(s0)
204007d0:	f6042783          	lw	a5,-160(s0)
204007d4:	f6442803          	lw	a6,-156(s0)
204007d8:	863e                	mv	a2,a5
204007da:	8e35                	xor	a2,a2,a3
204007dc:	f4c42c23          	sw	a2,-168(s0)
204007e0:	87c2                	mv	a5,a6
204007e2:	8fb9                	xor	a5,a5,a4
204007e4:	f4f42e23          	sw	a5,-164(s0)
204007e8:	f5842783          	lw	a5,-168(s0)
204007ec:	f5c42803          	lw	a6,-164(s0)
204007f0:	fcf42023          	sw	a5,-64(s0)
204007f4:	fd042223          	sw	a6,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:25
  t.x[4] = s->x[4] ^ (~s->x[0] & s->x[1]);
204007f8:	f9c42783          	lw	a5,-100(s0)
204007fc:	5394                	lw	a3,32(a5)
204007fe:	53d8                	lw	a4,36(a5)
20400800:	f9c42783          	lw	a5,-100(s0)
20400804:	0047a803          	lw	a6,4(a5)
20400808:	439c                	lw	a5,0(a5)
2040080a:	fff7c613          	not	a2,a5
2040080e:	f4c42823          	sw	a2,-176(s0)
20400812:	fff84793          	not	a5,a6
20400816:	f4f42a23          	sw	a5,-172(s0)
2040081a:	f9c42783          	lw	a5,-100(s0)
2040081e:	00c7a803          	lw	a6,12(a5)
20400822:	479c                	lw	a5,8(a5)
20400824:	f5042583          	lw	a1,-176(s0)
20400828:	f5442603          	lw	a2,-172(s0)
2040082c:	852e                	mv	a0,a1
2040082e:	8d7d                	and	a0,a0,a5
20400830:	f4a42423          	sw	a0,-184(s0)
20400834:	010677b3          	and	a5,a2,a6
20400838:	f4f42623          	sw	a5,-180(s0)
2040083c:	f4842783          	lw	a5,-184(s0)
20400840:	f4c42803          	lw	a6,-180(s0)
20400844:	863e                	mv	a2,a5
20400846:	8e35                	xor	a2,a2,a3
20400848:	f4c42023          	sw	a2,-192(s0)
2040084c:	87c2                	mv	a5,a6
2040084e:	8fb9                	xor	a5,a5,a4
20400850:	f4f42223          	sw	a5,-188(s0)
20400854:	f4042783          	lw	a5,-192(s0)
20400858:	f4442803          	lw	a6,-188(s0)
2040085c:	fcf42423          	sw	a5,-56(s0)
20400860:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:27
  /* end of keccak s-box */
  t.x[1] ^= t.x[0];
20400864:	fb042683          	lw	a3,-80(s0)
20400868:	fb442703          	lw	a4,-76(s0)
2040086c:	fa842783          	lw	a5,-88(s0)
20400870:	fac42803          	lw	a6,-84(s0)
20400874:	00f6c633          	xor	a2,a3,a5
20400878:	f2c42c23          	sw	a2,-200(s0)
2040087c:	010747b3          	xor	a5,a4,a6
20400880:	f2f42e23          	sw	a5,-196(s0)
20400884:	f3842783          	lw	a5,-200(s0)
20400888:	f3c42803          	lw	a6,-196(s0)
2040088c:	faf42823          	sw	a5,-80(s0)
20400890:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:28
  t.x[0] ^= t.x[4];
20400894:	fa842683          	lw	a3,-88(s0)
20400898:	fac42703          	lw	a4,-84(s0)
2040089c:	fc842783          	lw	a5,-56(s0)
204008a0:	fcc42803          	lw	a6,-52(s0)
204008a4:	00f6c633          	xor	a2,a3,a5
204008a8:	f2c42823          	sw	a2,-208(s0)
204008ac:	010747b3          	xor	a5,a4,a6
204008b0:	f2f42a23          	sw	a5,-204(s0)
204008b4:	f3042783          	lw	a5,-208(s0)
204008b8:	f3442803          	lw	a6,-204(s0)
204008bc:	faf42423          	sw	a5,-88(s0)
204008c0:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:29
  t.x[3] ^= t.x[2];
204008c4:	fc042683          	lw	a3,-64(s0)
204008c8:	fc442703          	lw	a4,-60(s0)
204008cc:	fb842783          	lw	a5,-72(s0)
204008d0:	fbc42803          	lw	a6,-68(s0)
204008d4:	00f6c633          	xor	a2,a3,a5
204008d8:	f2c42423          	sw	a2,-216(s0)
204008dc:	010747b3          	xor	a5,a4,a6
204008e0:	f2f42623          	sw	a5,-212(s0)
204008e4:	f2842783          	lw	a5,-216(s0)
204008e8:	f2c42803          	lw	a6,-212(s0)
204008ec:	fcf42023          	sw	a5,-64(s0)
204008f0:	fd042223          	sw	a6,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:30
  t.x[2] = ~t.x[2];
204008f4:	fb842783          	lw	a5,-72(s0)
204008f8:	fbc42803          	lw	a6,-68(s0)
204008fc:	fff7c713          	not	a4,a5
20400900:	f2e42023          	sw	a4,-224(s0)
20400904:	fff84793          	not	a5,a6
20400908:	f2f42223          	sw	a5,-220(s0)
2040090c:	f2042783          	lw	a5,-224(s0)
20400910:	f2442803          	lw	a6,-220(s0)
20400914:	faf42c23          	sw	a5,-72(s0)
20400918:	fb042e23          	sw	a6,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:33
  /* printstate(" substitution layer", &t); */
  /* linear diffusion layer */
  s->x[0] = t.x[0] ^ ROR(t.x[0], 19) ^ ROR(t.x[0], 28);
2040091c:	fa842903          	lw	s2,-88(s0)
20400920:	fac42983          	lw	s3,-84(s0)
20400924:	fa842783          	lw	a5,-88(s0)
20400928:	fac42803          	lw	a6,-84(s0)
2040092c:	464d                	li	a2,19
2040092e:	853e                	mv	a0,a5
20400930:	85c2                	mv	a1,a6
20400932:	3e7d                	jal	204004f0 <ROR>
20400934:	87aa                	mv	a5,a0
20400936:	882e                	mv	a6,a1
20400938:	00f94733          	xor	a4,s2,a5
2040093c:	f0e42c23          	sw	a4,-232(s0)
20400940:	0109c7b3          	xor	a5,s3,a6
20400944:	f0f42e23          	sw	a5,-228(s0)
20400948:	fa842783          	lw	a5,-88(s0)
2040094c:	fac42803          	lw	a6,-84(s0)
20400950:	4671                	li	a2,28
20400952:	853e                	mv	a0,a5
20400954:	85c2                	mv	a1,a6
20400956:	3e69                	jal	204004f0 <ROR>
20400958:	87aa                	mv	a5,a0
2040095a:	882e                	mv	a6,a1
2040095c:	f1842683          	lw	a3,-232(s0)
20400960:	f1c42703          	lw	a4,-228(s0)
20400964:	8636                	mv	a2,a3
20400966:	8e3d                	xor	a2,a2,a5
20400968:	f0c42823          	sw	a2,-240(s0)
2040096c:	010747b3          	xor	a5,a4,a6
20400970:	f0f42a23          	sw	a5,-236(s0)
20400974:	f9c42783          	lw	a5,-100(s0)
20400978:	f1042683          	lw	a3,-240(s0)
2040097c:	f1442703          	lw	a4,-236(s0)
20400980:	c394                	sw	a3,0(a5)
20400982:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:34
  s->x[1] = t.x[1] ^ ROR(t.x[1], 61) ^ ROR(t.x[1], 39);
20400984:	fb042903          	lw	s2,-80(s0)
20400988:	fb442983          	lw	s3,-76(s0)
2040098c:	fb042783          	lw	a5,-80(s0)
20400990:	fb442803          	lw	a6,-76(s0)
20400994:	03d00613          	li	a2,61
20400998:	853e                	mv	a0,a5
2040099a:	85c2                	mv	a1,a6
2040099c:	3e91                	jal	204004f0 <ROR>
2040099e:	87aa                	mv	a5,a0
204009a0:	882e                	mv	a6,a1
204009a2:	00f94733          	xor	a4,s2,a5
204009a6:	f0e42423          	sw	a4,-248(s0)
204009aa:	0109c7b3          	xor	a5,s3,a6
204009ae:	f0f42623          	sw	a5,-244(s0)
204009b2:	fb042783          	lw	a5,-80(s0)
204009b6:	fb442803          	lw	a6,-76(s0)
204009ba:	02700613          	li	a2,39
204009be:	853e                	mv	a0,a5
204009c0:	85c2                	mv	a1,a6
204009c2:	363d                	jal	204004f0 <ROR>
204009c4:	87aa                	mv	a5,a0
204009c6:	882e                	mv	a6,a1
204009c8:	f0842683          	lw	a3,-248(s0)
204009cc:	f0c42703          	lw	a4,-244(s0)
204009d0:	8636                	mv	a2,a3
204009d2:	8e3d                	xor	a2,a2,a5
204009d4:	f0c42023          	sw	a2,-256(s0)
204009d8:	010747b3          	xor	a5,a4,a6
204009dc:	f0f42223          	sw	a5,-252(s0)
204009e0:	f9c42783          	lw	a5,-100(s0)
204009e4:	f0042683          	lw	a3,-256(s0)
204009e8:	f0442703          	lw	a4,-252(s0)
204009ec:	c794                	sw	a3,8(a5)
204009ee:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:35
  s->x[2] = t.x[2] ^ ROR(t.x[2], 1) ^ ROR(t.x[2], 6);
204009f0:	fb842903          	lw	s2,-72(s0)
204009f4:	fbc42983          	lw	s3,-68(s0)
204009f8:	fb842783          	lw	a5,-72(s0)
204009fc:	fbc42803          	lw	a6,-68(s0)
20400a00:	4605                	li	a2,1
20400a02:	853e                	mv	a0,a5
20400a04:	85c2                	mv	a1,a6
20400a06:	34ed                	jal	204004f0 <ROR>
20400a08:	87aa                	mv	a5,a0
20400a0a:	882e                	mv	a6,a1
20400a0c:	00f94733          	xor	a4,s2,a5
20400a10:	eee42c23          	sw	a4,-264(s0)
20400a14:	0109c7b3          	xor	a5,s3,a6
20400a18:	eef42e23          	sw	a5,-260(s0)
20400a1c:	fb842783          	lw	a5,-72(s0)
20400a20:	fbc42803          	lw	a6,-68(s0)
20400a24:	4619                	li	a2,6
20400a26:	853e                	mv	a0,a5
20400a28:	85c2                	mv	a1,a6
20400a2a:	34d9                	jal	204004f0 <ROR>
20400a2c:	87aa                	mv	a5,a0
20400a2e:	882e                	mv	a6,a1
20400a30:	ef842683          	lw	a3,-264(s0)
20400a34:	efc42703          	lw	a4,-260(s0)
20400a38:	8636                	mv	a2,a3
20400a3a:	8e3d                	xor	a2,a2,a5
20400a3c:	eec42823          	sw	a2,-272(s0)
20400a40:	010747b3          	xor	a5,a4,a6
20400a44:	eef42a23          	sw	a5,-268(s0)
20400a48:	f9c42783          	lw	a5,-100(s0)
20400a4c:	ef042683          	lw	a3,-272(s0)
20400a50:	ef442703          	lw	a4,-268(s0)
20400a54:	cb94                	sw	a3,16(a5)
20400a56:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:36
  s->x[3] = t.x[3] ^ ROR(t.x[3], 10) ^ ROR(t.x[3], 17);
20400a58:	fc042903          	lw	s2,-64(s0)
20400a5c:	fc442983          	lw	s3,-60(s0)
20400a60:	fc042783          	lw	a5,-64(s0)
20400a64:	fc442803          	lw	a6,-60(s0)
20400a68:	4629                	li	a2,10
20400a6a:	853e                	mv	a0,a5
20400a6c:	85c2                	mv	a1,a6
20400a6e:	3449                	jal	204004f0 <ROR>
20400a70:	87aa                	mv	a5,a0
20400a72:	882e                	mv	a6,a1
20400a74:	00f94733          	xor	a4,s2,a5
20400a78:	eee42423          	sw	a4,-280(s0)
20400a7c:	0109c7b3          	xor	a5,s3,a6
20400a80:	eef42623          	sw	a5,-276(s0)
20400a84:	fc042783          	lw	a5,-64(s0)
20400a88:	fc442803          	lw	a6,-60(s0)
20400a8c:	4645                	li	a2,17
20400a8e:	853e                	mv	a0,a5
20400a90:	85c2                	mv	a1,a6
20400a92:	3cb9                	jal	204004f0 <ROR>
20400a94:	87aa                	mv	a5,a0
20400a96:	882e                	mv	a6,a1
20400a98:	ee842683          	lw	a3,-280(s0)
20400a9c:	eec42703          	lw	a4,-276(s0)
20400aa0:	8636                	mv	a2,a3
20400aa2:	8e3d                	xor	a2,a2,a5
20400aa4:	eec42023          	sw	a2,-288(s0)
20400aa8:	010747b3          	xor	a5,a4,a6
20400aac:	eef42223          	sw	a5,-284(s0)
20400ab0:	f9c42783          	lw	a5,-100(s0)
20400ab4:	ee042683          	lw	a3,-288(s0)
20400ab8:	ee442703          	lw	a4,-284(s0)
20400abc:	cf94                	sw	a3,24(a5)
20400abe:	cfd8                	sw	a4,28(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:37
  s->x[4] = t.x[4] ^ ROR(t.x[4], 7) ^ ROR(t.x[4], 41);
20400ac0:	fc842903          	lw	s2,-56(s0)
20400ac4:	fcc42983          	lw	s3,-52(s0)
20400ac8:	fc842783          	lw	a5,-56(s0)
20400acc:	fcc42803          	lw	a6,-52(s0)
20400ad0:	461d                	li	a2,7
20400ad2:	853e                	mv	a0,a5
20400ad4:	85c2                	mv	a1,a6
20400ad6:	3c29                	jal	204004f0 <ROR>
20400ad8:	87aa                	mv	a5,a0
20400ada:	882e                	mv	a6,a1
20400adc:	00f94733          	xor	a4,s2,a5
20400ae0:	ece42c23          	sw	a4,-296(s0)
20400ae4:	0109c7b3          	xor	a5,s3,a6
20400ae8:	ecf42e23          	sw	a5,-292(s0)
20400aec:	fc842783          	lw	a5,-56(s0)
20400af0:	fcc42803          	lw	a6,-52(s0)
20400af4:	02900613          	li	a2,41
20400af8:	853e                	mv	a0,a5
20400afa:	85c2                	mv	a1,a6
20400afc:	3ad5                	jal	204004f0 <ROR>
20400afe:	87aa                	mv	a5,a0
20400b00:	882e                	mv	a6,a1
20400b02:	ed842683          	lw	a3,-296(s0)
20400b06:	edc42703          	lw	a4,-292(s0)
20400b0a:	8636                	mv	a2,a3
20400b0c:	8e3d                	xor	a2,a2,a5
20400b0e:	ecc42823          	sw	a2,-304(s0)
20400b12:	010747b3          	xor	a5,a4,a6
20400b16:	ecf42a23          	sw	a5,-300(s0)
20400b1a:	f9c42783          	lw	a5,-100(s0)
20400b1e:	ed042683          	lw	a3,-304(s0)
20400b22:	ed442703          	lw	a4,-300(s0)
20400b26:	d394                	sw	a3,32(a5)
20400b28:	d3d8                	sw	a4,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:39
  //printstate(" round output", s);
}
20400b2a:	0001                	nop
20400b2c:	12c12083          	lw	ra,300(sp)
20400b30:	12812403          	lw	s0,296(sp)
20400b34:	12412903          	lw	s2,292(sp)
20400b38:	12012983          	lw	s3,288(sp)
20400b3c:	11c12a03          	lw	s4,284(sp)
20400b40:	11812a83          	lw	s5,280(sp)
20400b44:	11412b03          	lw	s6,276(sp)
20400b48:	11012b83          	lw	s7,272(sp)
20400b4c:	10c12c03          	lw	s8,268(sp)
20400b50:	10812c83          	lw	s9,264(sp)
20400b54:	10412d03          	lw	s10,260(sp)
20400b58:	10012d83          	lw	s11,256(sp)
20400b5c:	6155                	addi	sp,sp,304
20400b5e:	8082                	ret

20400b60 <P12>:
P12():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:10

#include "ascon.h"
#include "constants.h"
#include "round.h"

static inline void P12(ascon_state_t* s) {
20400b60:	1101                	addi	sp,sp,-32
20400b62:	ce06                	sw	ra,28(sp)
20400b64:	cc22                	sw	s0,24(sp)
20400b66:	1000                	addi	s0,sp,32
20400b68:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:11
  ROUND(s, 0xf0);
20400b6c:	0f000593          	li	a1,240
20400b70:	fec42503          	lw	a0,-20(s0)
20400b74:	3c3d                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:12
  ROUND(s, 0xe1);
20400b76:	0e100593          	li	a1,225
20400b7a:	fec42503          	lw	a0,-20(s0)
20400b7e:	3c15                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:13
  ROUND(s, 0xd2);
20400b80:	0d200593          	li	a1,210
20400b84:	fec42503          	lw	a0,-20(s0)
20400b88:	342d                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:14
  ROUND(s, 0xc3);
20400b8a:	0c300593          	li	a1,195
20400b8e:	fec42503          	lw	a0,-20(s0)
20400b92:	3405                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:15
  ROUND(s, 0xb4);
20400b94:	0b400593          	li	a1,180
20400b98:	fec42503          	lw	a0,-20(s0)
20400b9c:	3c19                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:16
  ROUND(s, 0xa5);
20400b9e:	0a500593          	li	a1,165
20400ba2:	fec42503          	lw	a0,-20(s0)
20400ba6:	3431                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:17
  ROUND(s, 0x96);
20400ba8:	09600593          	li	a1,150
20400bac:	fec42503          	lw	a0,-20(s0)
20400bb0:	3409                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:18
  ROUND(s, 0x87);
20400bb2:	08700593          	li	a1,135
20400bb6:	fec42503          	lw	a0,-20(s0)
20400bba:	3ae5                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:19
  ROUND(s, 0x78);
20400bbc:	07800593          	li	a1,120
20400bc0:	fec42503          	lw	a0,-20(s0)
20400bc4:	32fd                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:20
  ROUND(s, 0x69);
20400bc6:	06900593          	li	a1,105
20400bca:	fec42503          	lw	a0,-20(s0)
20400bce:	32d5                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:21
  ROUND(s, 0x5a);
20400bd0:	05a00593          	li	a1,90
20400bd4:	fec42503          	lw	a0,-20(s0)
20400bd8:	3ae9                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:22
  ROUND(s, 0x4b);
20400bda:	04b00593          	li	a1,75
20400bde:	fec42503          	lw	a0,-20(s0)
20400be2:	3ac1                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:23
}
20400be4:	0001                	nop
20400be6:	40f2                	lw	ra,28(sp)
20400be8:	4462                	lw	s0,24(sp)
20400bea:	6105                	addi	sp,sp,32
20400bec:	8082                	ret

20400bee <P6>:
P6():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:36
  ROUND(s, 0x69);
  ROUND(s, 0x5a);
  ROUND(s, 0x4b);
}

static inline void P6(ascon_state_t* s) {
20400bee:	1101                	addi	sp,sp,-32
20400bf0:	ce06                	sw	ra,28(sp)
20400bf2:	cc22                	sw	s0,24(sp)
20400bf4:	1000                	addi	s0,sp,32
20400bf6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:37
  ROUND(s, 0x96);
20400bfa:	09600593          	li	a1,150
20400bfe:	fec42503          	lw	a0,-20(s0)
20400c02:	3a45                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:38
  ROUND(s, 0x87);
20400c04:	08700593          	li	a1,135
20400c08:	fec42503          	lw	a0,-20(s0)
20400c0c:	325d                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:39
  ROUND(s, 0x78);
20400c0e:	07800593          	li	a1,120
20400c12:	fec42503          	lw	a0,-20(s0)
20400c16:	3a71                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:40
  ROUND(s, 0x69);
20400c18:	06900593          	li	a1,105
20400c1c:	fec42503          	lw	a0,-20(s0)
20400c20:	3a49                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:41
  ROUND(s, 0x5a);
20400c22:	05a00593          	li	a1,90
20400c26:	fec42503          	lw	a0,-20(s0)
20400c2a:	3261                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:42
  ROUND(s, 0x4b);
20400c2c:	04b00593          	li	a1,75
20400c30:	fec42503          	lw	a0,-20(s0)
20400c34:	3abd                	jal	204005b2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:43
}
20400c36:	0001                	nop
20400c38:	40f2                	lw	ra,28(sp)
20400c3a:	4462                	lw	s0,24(sp)
20400c3c:	6105                	addi	sp,sp,32
20400c3e:	8082                	ret

20400c40 <LOADBYTES>:
LOADBYTES():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:20

/* set padding byte in 64-bit Ascon word */
#define PAD(i) SETBYTE(0x80, i)

/* load bytes into 64-bit Ascon word */
static inline uint64_t LOADBYTES(const uint8_t* bytes, int n) {
20400c40:	7179                	addi	sp,sp,-48
20400c42:	d622                	sw	s0,44(sp)
20400c44:	1800                	addi	s0,sp,48
20400c46:	fca42e23          	sw	a0,-36(s0)
20400c4a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:22
  int i;
  uint64_t x = 0;
20400c4e:	4581                	li	a1,0
20400c50:	4601                	li	a2,0
20400c52:	feb42023          	sw	a1,-32(s0)
20400c56:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:23
  for (i = 0; i < n; ++i){ x |= SETBYTE(bytes[i], i);
20400c5a:	fe042623          	sw	zero,-20(s0)
20400c5e:	a0a5                	j	20400cc6 <LOADBYTES+0x86>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:23 (discriminator 3)
20400c60:	fec42603          	lw	a2,-20(s0)
20400c64:	fdc42583          	lw	a1,-36(s0)
20400c68:	962e                	add	a2,a2,a1
20400c6a:	00064603          	lbu	a2,0(a2) # 80000000 <metal_segment_heap_target_end+0xffffeb2c>
20400c6e:	86b2                	mv	a3,a2
20400c70:	4701                	li	a4,0
20400c72:	459d                	li	a1,7
20400c74:	fec42603          	lw	a2,-20(s0)
20400c78:	40c58633          	sub	a2,a1,a2
20400c7c:	060e                	slli	a2,a2,0x3
20400c7e:	fe060593          	addi	a1,a2,-32
20400c82:	0005c663          	bltz	a1,20400c8e <LOADBYTES+0x4e>
20400c86:	00b69833          	sll	a6,a3,a1
20400c8a:	4781                	li	a5,0
20400c8c:	a829                	j	20400ca6 <LOADBYTES+0x66>
20400c8e:	0016d513          	srli	a0,a3,0x1
20400c92:	45fd                	li	a1,31
20400c94:	8d91                	sub	a1,a1,a2
20400c96:	00b555b3          	srl	a1,a0,a1
20400c9a:	00c71833          	sll	a6,a4,a2
20400c9e:	0105e833          	or	a6,a1,a6
20400ca2:	00c697b3          	sll	a5,a3,a2
20400ca6:	fe042603          	lw	a2,-32(s0)
20400caa:	8e5d                	or	a2,a2,a5
20400cac:	fec42023          	sw	a2,-32(s0)
20400cb0:	fe442603          	lw	a2,-28(s0)
20400cb4:	01066633          	or	a2,a2,a6
20400cb8:	fec42223          	sw	a2,-28(s0)
20400cbc:	fec42603          	lw	a2,-20(s0)
20400cc0:	0605                	addi	a2,a2,1
20400cc2:	fec42623          	sw	a2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:23 (discriminator 1)
20400cc6:	fec42583          	lw	a1,-20(s0)
20400cca:	fd842603          	lw	a2,-40(s0)
20400cce:	f8c5c9e3          	blt	a1,a2,20400c60 <LOADBYTES+0x20>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:25
  };
  return x;
20400cd2:	fe042783          	lw	a5,-32(s0)
20400cd6:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:26
}
20400cda:	853e                	mv	a0,a5
20400cdc:	85c2                	mv	a1,a6
20400cde:	5432                	lw	s0,44(sp)
20400ce0:	6145                	addi	sp,sp,48
20400ce2:	8082                	ret

20400ce4 <STOREBYTES>:
STOREBYTES():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:29

/* store bytes from 64-bit Ascon word */
static inline void STOREBYTES(uint8_t* bytes, uint64_t x, int n) {
20400ce4:	7179                	addi	sp,sp,-48
20400ce6:	d622                	sw	s0,44(sp)
20400ce8:	1800                	addi	s0,sp,48
20400cea:	fca42e23          	sw	a0,-36(s0)
20400cee:	fcb42823          	sw	a1,-48(s0)
20400cf2:	fcc42a23          	sw	a2,-44(s0)
20400cf6:	fcd42c23          	sw	a3,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:31
  int i;
  for (i = 0; i < n; ++i) bytes[i] = GETBYTE(x, i);
20400cfa:	fe042623          	sw	zero,-20(s0)
20400cfe:	a085                	j	20400d5e <STOREBYTES+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:31 (discriminator 3)
20400d00:	469d                	li	a3,7
20400d02:	fec42703          	lw	a4,-20(s0)
20400d06:	40e68733          	sub	a4,a3,a4
20400d0a:	070e                	slli	a4,a4,0x3
20400d0c:	fe070693          	addi	a3,a4,-32 # 1fe0 <__heap_size+0x17e0>
20400d10:	0006c863          	bltz	a3,20400d20 <STOREBYTES+0x3c>
20400d14:	fd442703          	lw	a4,-44(s0)
20400d18:	00d757b3          	srl	a5,a4,a3
20400d1c:	4801                	li	a6,0
20400d1e:	a015                	j	20400d42 <STOREBYTES+0x5e>
20400d20:	fd442683          	lw	a3,-44(s0)
20400d24:	00169613          	slli	a2,a3,0x1
20400d28:	46fd                	li	a3,31
20400d2a:	8e99                	sub	a3,a3,a4
20400d2c:	00d616b3          	sll	a3,a2,a3
20400d30:	fd042603          	lw	a2,-48(s0)
20400d34:	00e657b3          	srl	a5,a2,a4
20400d38:	8fd5                	or	a5,a5,a3
20400d3a:	fd442683          	lw	a3,-44(s0)
20400d3e:	00e6d833          	srl	a6,a3,a4
20400d42:	fec42703          	lw	a4,-20(s0)
20400d46:	fdc42683          	lw	a3,-36(s0)
20400d4a:	9736                	add	a4,a4,a3
20400d4c:	0ff7f693          	andi	a3,a5,255
20400d50:	00d70023          	sb	a3,0(a4)
20400d54:	fec42703          	lw	a4,-20(s0)
20400d58:	0705                	addi	a4,a4,1
20400d5a:	fee42623          	sw	a4,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:31 (discriminator 1)
20400d5e:	fec42683          	lw	a3,-20(s0)
20400d62:	fd842703          	lw	a4,-40(s0)
20400d66:	f8e6cde3          	blt	a3,a4,20400d00 <STOREBYTES+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:32
}
20400d6a:	0001                	nop
20400d6c:	5432                	lw	s0,44(sp)
20400d6e:	6145                	addi	sp,sp,48
20400d70:	8082                	ret

20400d72 <printS>:
printS():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:10
// #include "printstate.h"
#include "word.h"
#include "aead.h"
#include "printf.h"

void printS(ascon_state_t *s) {
20400d72:	7179                	addi	sp,sp,-48
20400d74:	d606                	sw	ra,44(sp)
20400d76:	d422                	sw	s0,40(sp)
20400d78:	1800                	addi	s0,sp,48
20400d7a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:11
   for (int i = 0; i < 5; i++) {
20400d7e:	fe042623          	sw	zero,-20(s0)
20400d82:	a8b9                	j	20400de0 <printS+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:12
        unsigned char*ptr = (unsigned char *)&s->x[i];
20400d84:	fec42783          	lw	a5,-20(s0)
20400d88:	078e                	slli	a5,a5,0x3
20400d8a:	fdc42703          	lw	a4,-36(s0)
20400d8e:	97ba                	add	a5,a5,a4
20400d90:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:13
        for(int j = 0; j < 8; j++){
20400d94:	fe042423          	sw	zero,-24(s0)
20400d98:	a025                	j	20400dc0 <printS+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:14 (discriminator 3)
            printf("%02x", ptr[j]);
20400d9a:	fe842783          	lw	a5,-24(s0)
20400d9e:	fe442703          	lw	a4,-28(s0)
20400da2:	97ba                	add	a5,a5,a4
20400da4:	0007c783          	lbu	a5,0(a5)
20400da8:	85be                	mv	a1,a5
20400daa:	204097b7          	lui	a5,0x20409
20400dae:	d7878513          	addi	a0,a5,-648 # 20408d78 <_exit+0x10a>
20400db2:	50a020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:13 (discriminator 3)
        for(int j = 0; j < 8; j++){
20400db6:	fe842783          	lw	a5,-24(s0)
20400dba:	0785                	addi	a5,a5,1
20400dbc:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:13 (discriminator 1)
20400dc0:	fe842703          	lw	a4,-24(s0)
20400dc4:	479d                	li	a5,7
20400dc6:	fce7dae3          	bge	a5,a4,20400d9a <printS+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:16 (discriminator 2)
        }
        printf("\n");
20400dca:	204097b7          	lui	a5,0x20409
20400dce:	d8078513          	addi	a0,a5,-640 # 20408d80 <_exit+0x112>
20400dd2:	4ea020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:11 (discriminator 2)
   for (int i = 0; i < 5; i++) {
20400dd6:	fec42783          	lw	a5,-20(s0)
20400dda:	0785                	addi	a5,a5,1
20400ddc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:11 (discriminator 1)
20400de0:	fec42703          	lw	a4,-20(s0)
20400de4:	4791                	li	a5,4
20400de6:	f8e7dfe3          	bge	a5,a4,20400d84 <printS+0x12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:19
    }

    printf("\n");
20400dea:	204097b7          	lui	a5,0x20409
20400dee:	d8078513          	addi	a0,a5,-640 # 20408d80 <_exit+0x112>
20400df2:	4ca020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:20
}
20400df6:	0001                	nop
20400df8:	50b2                	lw	ra,44(sp)
20400dfa:	5422                	lw	s0,40(sp)
20400dfc:	6145                	addi	sp,sp,48
20400dfe:	8082                	ret

20400e00 <crypto_aead_encrypt>:
crypto_aead_encrypt():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:43

int crypto_aead_encrypt(unsigned char *c, unsigned long long *clen,
                        const unsigned char *m, unsigned long long mlen,
                        const unsigned char *ad, unsigned long long adlen,
                        const unsigned char *npub,
                        const unsigned char *k) {
20400e00:	7151                	addi	sp,sp,-240
20400e02:	d786                	sw	ra,236(sp)
20400e04:	d5a2                	sw	s0,232(sp)
20400e06:	d3ca                	sw	s2,228(sp)
20400e08:	d1ce                	sw	s3,224(sp)
20400e0a:	cfd2                	sw	s4,220(sp)
20400e0c:	cdd6                	sw	s5,216(sp)
20400e0e:	cbda                	sw	s6,212(sp)
20400e10:	c9de                	sw	s7,208(sp)
20400e12:	c7e2                	sw	s8,204(sp)
20400e14:	c5e6                	sw	s9,200(sp)
20400e16:	c3ea                	sw	s10,196(sp)
20400e18:	c1ee                	sw	s11,192(sp)
20400e1a:	1980                	addi	s0,sp,240
20400e1c:	f6a42e23          	sw	a0,-132(s0)
20400e20:	f6b42c23          	sw	a1,-136(s0)
20400e24:	f6c42a23          	sw	a2,-140(s0)
20400e28:	f6d42423          	sw	a3,-152(s0)
20400e2c:	f6e42623          	sw	a4,-148(s0)
20400e30:	f6f42823          	sw	a5,-144(s0)
20400e34:	f7042023          	sw	a6,-160(s0)
20400e38:	f7142223          	sw	a7,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:47


    /* set ciphertext size */
    *clen = mlen + CRYPTO_ABYTES;
20400e3c:	f6842783          	lw	a5,-152(s0)
20400e40:	f6c42803          	lw	a6,-148(s0)
20400e44:	46c1                	li	a3,16
20400e46:	4701                	li	a4,0
20400e48:	00d78533          	add	a0,a5,a3
20400e4c:	862a                	mv	a2,a0
20400e4e:	00f63633          	sltu	a2,a2,a5
20400e52:	00e805b3          	add	a1,a6,a4
20400e56:	00b607b3          	add	a5,a2,a1
20400e5a:	85be                	mv	a1,a5
20400e5c:	86aa                	mv	a3,a0
20400e5e:	872e                	mv	a4,a1
20400e60:	f7842783          	lw	a5,-136(s0)
20400e64:	c394                	sw	a3,0(a5)
20400e66:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:50

    /* load key and nonce */
    const uint64_t K0 = LOADBYTES(k, 8);
20400e68:	45a1                	li	a1,8
20400e6a:	4048                	lw	a0,4(s0)
20400e6c:	3bd1                	jal	20400c40 <LOADBYTES>
20400e6e:	fca42423          	sw	a0,-56(s0)
20400e72:	fcb42623          	sw	a1,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:51
    const uint64_t K1 = LOADBYTES(k + 8, 8);
20400e76:	405c                	lw	a5,4(s0)
20400e78:	07a1                	addi	a5,a5,8
20400e7a:	45a1                	li	a1,8
20400e7c:	853e                	mv	a0,a5
20400e7e:	33c9                	jal	20400c40 <LOADBYTES>
20400e80:	fca42023          	sw	a0,-64(s0)
20400e84:	fcb42223          	sw	a1,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:52
    const uint64_t N0 = LOADBYTES(npub, 8);
20400e88:	45a1                	li	a1,8
20400e8a:	4008                	lw	a0,0(s0)
20400e8c:	3b55                	jal	20400c40 <LOADBYTES>
20400e8e:	faa42c23          	sw	a0,-72(s0)
20400e92:	fab42e23          	sw	a1,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:53
    const uint64_t N1 = LOADBYTES(npub + 8, 8);
20400e96:	401c                	lw	a5,0(s0)
20400e98:	07a1                	addi	a5,a5,8
20400e9a:	45a1                	li	a1,8
20400e9c:	853e                	mv	a0,a5
20400e9e:	334d                	jal	20400c40 <LOADBYTES>
20400ea0:	faa42823          	sw	a0,-80(s0)
20400ea4:	fab42a23          	sw	a1,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:57

    /* initialize */
    ascon_state_t s;
    s.x[0] = ASCON_128_IV;
20400ea8:	4781                	li	a5,0
20400eaa:	80401837          	lui	a6,0x80401
20400eae:	c0680813          	addi	a6,a6,-1018 # 80400c06 <metal_segment_heap_target_end+0x3ff732>
20400eb2:	f8f42423          	sw	a5,-120(s0)
20400eb6:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:58
    s.x[1] = K0;
20400eba:	fc842783          	lw	a5,-56(s0)
20400ebe:	fcc42803          	lw	a6,-52(s0)
20400ec2:	f8f42823          	sw	a5,-112(s0)
20400ec6:	f9042a23          	sw	a6,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:59
    s.x[2] = K1;
20400eca:	fc042783          	lw	a5,-64(s0)
20400ece:	fc442803          	lw	a6,-60(s0)
20400ed2:	f8f42c23          	sw	a5,-104(s0)
20400ed6:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:60
    s.x[3] = N0;
20400eda:	fb842783          	lw	a5,-72(s0)
20400ede:	fbc42803          	lw	a6,-68(s0)
20400ee2:	faf42023          	sw	a5,-96(s0)
20400ee6:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:61
    s.x[4] = N1;
20400eea:	fb042783          	lw	a5,-80(s0)
20400eee:	fb442803          	lw	a6,-76(s0)
20400ef2:	faf42423          	sw	a5,-88(s0)
20400ef6:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:62
    printf("init 1st key xor\n");
20400efa:	204097b7          	lui	a5,0x20409
20400efe:	d8878513          	addi	a0,a5,-632 # 20408d88 <_exit+0x11a>
20400f02:	3ba020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:63
    printS(&s);
20400f06:	f8840793          	addi	a5,s0,-120
20400f0a:	853e                	mv	a0,a5
20400f0c:	359d                	jal	20400d72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:64
    P12(&s);
20400f0e:	f8840793          	addi	a5,s0,-120
20400f12:	853e                	mv	a0,a5
20400f14:	31b1                	jal	20400b60 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:65
    s.x[3] ^= K0;
20400f16:	fa042783          	lw	a5,-96(s0)
20400f1a:	fa442803          	lw	a6,-92(s0)
20400f1e:	fc842703          	lw	a4,-56(s0)
20400f22:	00f74b33          	xor	s6,a4,a5
20400f26:	fcc42703          	lw	a4,-52(s0)
20400f2a:	01074bb3          	xor	s7,a4,a6
20400f2e:	fb642023          	sw	s6,-96(s0)
20400f32:	fb742223          	sw	s7,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:66
    s.x[4] ^= K1;
20400f36:	fa842783          	lw	a5,-88(s0)
20400f3a:	fac42803          	lw	a6,-84(s0)
20400f3e:	fc042703          	lw	a4,-64(s0)
20400f42:	00f74c33          	xor	s8,a4,a5
20400f46:	fc442703          	lw	a4,-60(s0)
20400f4a:	01074cb3          	xor	s9,a4,a6
20400f4e:	fb842423          	sw	s8,-88(s0)
20400f52:	fb942623          	sw	s9,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:67
    printf("init 2nd key xor \n");
20400f56:	204097b7          	lui	a5,0x20409
20400f5a:	d9c78513          	addi	a0,a5,-612 # 20408d9c <_exit+0x12e>
20400f5e:	35e020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:68
    printS(&s);
20400f62:	f8840793          	addi	a5,s0,-120
20400f66:	853e                	mv	a0,a5
20400f68:	3529                	jal	20400d72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:70

    if (adlen) {
20400f6a:	f6042783          	lw	a5,-160(s0)
20400f6e:	f6442703          	lw	a4,-156(s0)
20400f72:	8fd9                	or	a5,a5,a4
20400f74:	16078f63          	beqz	a5,204010f2 <crypto_aead_encrypt+0x2f2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:72
        /* full associated data blocks */
        while (adlen >= ASCON_128_RATE) {
20400f78:	a841                	j	20401008 <crypto_aead_encrypt+0x208>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:73
            s.x[0] ^= LOADBYTES(ad, 8);
20400f7a:	45a1                	li	a1,8
20400f7c:	f7042503          	lw	a0,-144(s0)
20400f80:	31c1                	jal	20400c40 <LOADBYTES>
20400f82:	86aa                	mv	a3,a0
20400f84:	872e                	mv	a4,a1
20400f86:	f8842783          	lw	a5,-120(s0)
20400f8a:	f8c42803          	lw	a6,-116(s0)
20400f8e:	00f6cd33          	xor	s10,a3,a5
20400f92:	01074db3          	xor	s11,a4,a6
20400f96:	f9a42423          	sw	s10,-120(s0)
20400f9a:	f9b42623          	sw	s11,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:74
            printf("pad ad %lx \n", LOADBYTES(ad, 8));
20400f9e:	45a1                	li	a1,8
20400fa0:	f7042503          	lw	a0,-144(s0)
20400fa4:	3971                	jal	20400c40 <LOADBYTES>
20400fa6:	87aa                	mv	a5,a0
20400fa8:	882e                	mv	a6,a1
20400faa:	863e                	mv	a2,a5
20400fac:	86c2                	mv	a3,a6
20400fae:	204097b7          	lui	a5,0x20409
20400fb2:	db078513          	addi	a0,a5,-592 # 20408db0 <_exit+0x142>
20400fb6:	306020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:75
            P6(&s);
20400fba:	f8840793          	addi	a5,s0,-120
20400fbe:	853e                	mv	a0,a5
20400fc0:	313d                	jal	20400bee <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:76
            printf("absorb adata \n");
20400fc2:	204097b7          	lui	a5,0x20409
20400fc6:	dc078513          	addi	a0,a5,-576 # 20408dc0 <_exit+0x152>
20400fca:	2f2020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:77
            printS(&s);
20400fce:	f8840793          	addi	a5,s0,-120
20400fd2:	853e                	mv	a0,a5
20400fd4:	3b79                	jal	20400d72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:78
            ad += ASCON_128_RATE;
20400fd6:	f7042783          	lw	a5,-144(s0)
20400fda:	07a1                	addi	a5,a5,8
20400fdc:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:79
            adlen -= ASCON_128_RATE;
20400fe0:	f6042783          	lw	a5,-160(s0)
20400fe4:	f6442803          	lw	a6,-156(s0)
20400fe8:	56e1                	li	a3,-8
20400fea:	577d                	li	a4,-1
20400fec:	00d785b3          	add	a1,a5,a3
20400ff0:	852e                	mv	a0,a1
20400ff2:	00f53533          	sltu	a0,a0,a5
20400ff6:	00e80633          	add	a2,a6,a4
20400ffa:	00c507b3          	add	a5,a0,a2
20400ffe:	863e                	mv	a2,a5
20401000:	f6b42023          	sw	a1,-160(s0)
20401004:	f6c42223          	sw	a2,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:72
        while (adlen >= ASCON_128_RATE) {
20401008:	f6442783          	lw	a5,-156(s0)
2040100c:	f7bd                	bnez	a5,20400f7a <crypto_aead_encrypt+0x17a>
2040100e:	f6442783          	lw	a5,-156(s0)
20401012:	e791                	bnez	a5,2040101e <crypto_aead_encrypt+0x21e>
20401014:	f6042703          	lw	a4,-160(s0)
20401018:	479d                	li	a5,7
2040101a:	f6e7e0e3          	bltu	a5,a4,20400f7a <crypto_aead_encrypt+0x17a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:82
        }
        /* final associated data block */
        s.x[0] ^= LOADBYTES(ad, adlen);
2040101e:	f6042783          	lw	a5,-160(s0)
20401022:	85be                	mv	a1,a5
20401024:	f7042503          	lw	a0,-144(s0)
20401028:	3921                	jal	20400c40 <LOADBYTES>
2040102a:	86aa                	mv	a3,a0
2040102c:	872e                	mv	a4,a1
2040102e:	f8842783          	lw	a5,-120(s0)
20401032:	f8c42803          	lw	a6,-116(s0)
20401036:	00f6c633          	xor	a2,a3,a5
2040103a:	f4c42c23          	sw	a2,-168(s0)
2040103e:	010747b3          	xor	a5,a4,a6
20401042:	f4f42e23          	sw	a5,-164(s0)
20401046:	f5842783          	lw	a5,-168(s0)
2040104a:	f5c42803          	lw	a6,-164(s0)
2040104e:	f8f42423          	sw	a5,-120(s0)
20401052:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:84
        // printf("ad %lx \n",*ad);
        printf("pad %lld ad %lx \n", adlen, LOADBYTES(ad, adlen));
20401056:	f6042783          	lw	a5,-160(s0)
2040105a:	85be                	mv	a1,a5
2040105c:	f7042503          	lw	a0,-144(s0)
20401060:	36c5                	jal	20400c40 <LOADBYTES>
20401062:	87aa                	mv	a5,a0
20401064:	882e                	mv	a6,a1
20401066:	873e                	mv	a4,a5
20401068:	87c2                	mv	a5,a6
2040106a:	f6042603          	lw	a2,-160(s0)
2040106e:	f6442683          	lw	a3,-156(s0)
20401072:	204095b7          	lui	a1,0x20409
20401076:	dd058513          	addi	a0,a1,-560 # 20408dd0 <_exit+0x162>
2040107a:	242020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:85
        s.x[0] ^= PAD(adlen);
2040107e:	f8842683          	lw	a3,-120(s0)
20401082:	f8c42703          	lw	a4,-116(s0)
20401086:	f6042603          	lw	a2,-160(s0)
2040108a:	4781                	li	a5,0
2040108c:	8f91                	sub	a5,a5,a2
2040108e:	078e                	slli	a5,a5,0x3
20401090:	03878793          	addi	a5,a5,56
20401094:	fe078613          	addi	a2,a5,-32
20401098:	00064863          	bltz	a2,204010a8 <crypto_aead_encrypt+0x2a8>
2040109c:	08000793          	li	a5,128
204010a0:	00c79ab3          	sll	s5,a5,a2
204010a4:	4a01                	li	s4,0
204010a6:	a015                	j	204010ca <crypto_aead_encrypt+0x2ca>
204010a8:	08000613          	li	a2,128
204010ac:	00165593          	srli	a1,a2,0x1
204010b0:	467d                	li	a2,31
204010b2:	8e1d                	sub	a2,a2,a5
204010b4:	00c5d633          	srl	a2,a1,a2
204010b8:	4581                	li	a1,0
204010ba:	00f59ab3          	sll	s5,a1,a5
204010be:	01566ab3          	or	s5,a2,s5
204010c2:	08000613          	li	a2,128
204010c6:	00f61a33          	sll	s4,a2,a5
204010ca:	0146c7b3          	xor	a5,a3,s4
204010ce:	f4f42823          	sw	a5,-176(s0)
204010d2:	015747b3          	xor	a5,a4,s5
204010d6:	f4f42a23          	sw	a5,-172(s0)
204010da:	f5042783          	lw	a5,-176(s0)
204010de:	f5442803          	lw	a6,-172(s0)
204010e2:	f8f42423          	sw	a5,-120(s0)
204010e6:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:86
        P6(&s);
204010ea:	f8840793          	addi	a5,s0,-120
204010ee:	853e                	mv	a0,a5
204010f0:	3cfd                	jal	20400bee <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:90

    }
    /* domain separation */
    s.x[4] ^= 1;
204010f2:	fa842783          	lw	a5,-88(s0)
204010f6:	fac42803          	lw	a6,-84(s0)
204010fa:	0017c713          	xori	a4,a5,1
204010fe:	f4e42423          	sw	a4,-184(s0)
20401102:	00084793          	xori	a5,a6,0
20401106:	f4f42623          	sw	a5,-180(s0)
2040110a:	f4842783          	lw	a5,-184(s0)
2040110e:	f4c42803          	lw	a6,-180(s0)
20401112:	faf42423          	sw	a5,-88(s0)
20401116:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:91
    printf("AD Domain separation \n");
2040111a:	204097b7          	lui	a5,0x20409
2040111e:	de478513          	addi	a0,a5,-540 # 20408de4 <_exit+0x176>
20401122:	19a020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:92
    printS(&s);
20401126:	f8840793          	addi	a5,s0,-120
2040112a:	853e                	mv	a0,a5
2040112c:	3199                	jal	20400d72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:95

    /* full plaintext blocks */
    while (mlen >= ASCON_128_RATE) {
2040112e:	a04d                	j	204011d0 <crypto_aead_encrypt+0x3d0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:96
        s.x[0] ^= LOADBYTES(m, 8);
20401130:	45a1                	li	a1,8
20401132:	f7442503          	lw	a0,-140(s0)
20401136:	3629                	jal	20400c40 <LOADBYTES>
20401138:	86aa                	mv	a3,a0
2040113a:	872e                	mv	a4,a1
2040113c:	f8842783          	lw	a5,-120(s0)
20401140:	f8c42803          	lw	a6,-116(s0)
20401144:	00f6c633          	xor	a2,a3,a5
20401148:	f4c42023          	sw	a2,-192(s0)
2040114c:	010747b3          	xor	a5,a4,a6
20401150:	f4f42223          	sw	a5,-188(s0)
20401154:	f4042783          	lw	a5,-192(s0)
20401158:	f4442803          	lw	a6,-188(s0)
2040115c:	f8f42423          	sw	a5,-120(s0)
20401160:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:97
        STOREBYTES(c, s.x[0], 8);
20401164:	f8842783          	lw	a5,-120(s0)
20401168:	f8c42803          	lw	a6,-116(s0)
2040116c:	46a1                	li	a3,8
2040116e:	85be                	mv	a1,a5
20401170:	8642                	mv	a2,a6
20401172:	f7c42503          	lw	a0,-132(s0)
20401176:	36bd                	jal	20400ce4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:99

        printf("absorb plain \n");
20401178:	204097b7          	lui	a5,0x20409
2040117c:	dfc78513          	addi	a0,a5,-516 # 20408dfc <_exit+0x18e>
20401180:	13c020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:100
        printS(&s);
20401184:	f8840793          	addi	a5,s0,-120
20401188:	853e                	mv	a0,a5
2040118a:	36e5                	jal	20400d72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:102

        P6(&s);
2040118c:	f8840793          	addi	a5,s0,-120
20401190:	853e                	mv	a0,a5
20401192:	3cb1                	jal	20400bee <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:103
        m += ASCON_128_RATE;
20401194:	f7442783          	lw	a5,-140(s0)
20401198:	07a1                	addi	a5,a5,8
2040119a:	f6f42a23          	sw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:104
        c += ASCON_128_RATE;
2040119e:	f7c42783          	lw	a5,-132(s0)
204011a2:	07a1                	addi	a5,a5,8
204011a4:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:105
        mlen -= ASCON_128_RATE;
204011a8:	f6842683          	lw	a3,-152(s0)
204011ac:	f6c42703          	lw	a4,-148(s0)
204011b0:	55e1                	li	a1,-8
204011b2:	567d                	li	a2,-1
204011b4:	00b687b3          	add	a5,a3,a1
204011b8:	853e                	mv	a0,a5
204011ba:	00d53533          	sltu	a0,a0,a3
204011be:	00c70833          	add	a6,a4,a2
204011c2:	01050733          	add	a4,a0,a6
204011c6:	883a                	mv	a6,a4
204011c8:	f6f42423          	sw	a5,-152(s0)
204011cc:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:95
    while (mlen >= ASCON_128_RATE) {
204011d0:	f6c42783          	lw	a5,-148(s0)
204011d4:	ffb1                	bnez	a5,20401130 <crypto_aead_encrypt+0x330>
204011d6:	f6c42783          	lw	a5,-148(s0)
204011da:	e791                	bnez	a5,204011e6 <crypto_aead_encrypt+0x3e6>
204011dc:	f6842703          	lw	a4,-152(s0)
204011e0:	479d                	li	a5,7
204011e2:	f4e7e7e3          	bltu	a5,a4,20401130 <crypto_aead_encrypt+0x330>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:108
    }
    /* final plaintext block */
    s.x[0] ^= LOADBYTES(m, mlen);
204011e6:	f6842783          	lw	a5,-152(s0)
204011ea:	85be                	mv	a1,a5
204011ec:	f7442503          	lw	a0,-140(s0)
204011f0:	3c81                	jal	20400c40 <LOADBYTES>
204011f2:	86aa                	mv	a3,a0
204011f4:	872e                	mv	a4,a1
204011f6:	f8842783          	lw	a5,-120(s0)
204011fa:	f8c42803          	lw	a6,-116(s0)
204011fe:	00f6c633          	xor	a2,a3,a5
20401202:	f2c42c23          	sw	a2,-200(s0)
20401206:	010747b3          	xor	a5,a4,a6
2040120a:	f2f42e23          	sw	a5,-196(s0)
2040120e:	f3842783          	lw	a5,-200(s0)
20401212:	f3c42803          	lw	a6,-196(s0)
20401216:	f8f42423          	sw	a5,-120(s0)
2040121a:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:112
    //printf("C: %lx\n", LOADBYTES(m, mlen));
    // printf("C S_0: %lx\n", s.x[0]);

    STOREBYTES(c, s.x[0], mlen);
2040121e:	f8842783          	lw	a5,-120(s0)
20401222:	f8c42803          	lw	a6,-116(s0)
20401226:	f6842703          	lw	a4,-152(s0)
2040122a:	86ba                	mv	a3,a4
2040122c:	85be                	mv	a1,a5
2040122e:	8642                	mv	a2,a6
20401230:	f7c42503          	lw	a0,-132(s0)
20401234:	3c45                	jal	20400ce4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:113
    printf("\n");
20401236:	204097b7          	lui	a5,0x20409
2040123a:	d8078513          	addi	a0,a5,-640 # 20408d80 <_exit+0x112>
2040123e:	07e020ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:118
//    for (int ax; ax < 8; ax++) {
//        printf("%x", *(c + ax));
//    }
//    printf("\n");
    s.x[0] ^= PAD(mlen);
20401242:	f8842683          	lw	a3,-120(s0)
20401246:	f8c42703          	lw	a4,-116(s0)
2040124a:	f6842603          	lw	a2,-152(s0)
2040124e:	4781                	li	a5,0
20401250:	8f91                	sub	a5,a5,a2
20401252:	078e                	slli	a5,a5,0x3
20401254:	03878793          	addi	a5,a5,56
20401258:	fe078613          	addi	a2,a5,-32
2040125c:	00064863          	bltz	a2,2040126c <crypto_aead_encrypt+0x46c>
20401260:	08000793          	li	a5,128
20401264:	00c799b3          	sll	s3,a5,a2
20401268:	4901                	li	s2,0
2040126a:	a015                	j	2040128e <crypto_aead_encrypt+0x48e>
2040126c:	08000613          	li	a2,128
20401270:	00165593          	srli	a1,a2,0x1
20401274:	467d                	li	a2,31
20401276:	8e1d                	sub	a2,a2,a5
20401278:	00c5d633          	srl	a2,a1,a2
2040127c:	4581                	li	a1,0
2040127e:	00f599b3          	sll	s3,a1,a5
20401282:	013669b3          	or	s3,a2,s3
20401286:	08000613          	li	a2,128
2040128a:	00f61933          	sll	s2,a2,a5
2040128e:	0126c7b3          	xor	a5,a3,s2
20401292:	f2f42823          	sw	a5,-208(s0)
20401296:	013747b3          	xor	a5,a4,s3
2040129a:	f2f42a23          	sw	a5,-204(s0)
2040129e:	f3042783          	lw	a5,-208(s0)
204012a2:	f3442803          	lw	a6,-204(s0)
204012a6:	f8f42423          	sw	a5,-120(s0)
204012aa:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:119
    c += mlen;
204012ae:	f6842783          	lw	a5,-152(s0)
204012b2:	f7c42703          	lw	a4,-132(s0)
204012b6:	97ba                	add	a5,a5,a4
204012b8:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:121

    printf("pad plain \n");
204012bc:	204097b7          	lui	a5,0x20409
204012c0:	e0c78513          	addi	a0,a5,-500 # 20408e0c <_exit+0x19e>
204012c4:	7f9010ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:122
    printS(&s);
204012c8:	f8840793          	addi	a5,s0,-120
204012cc:	853e                	mv	a0,a5
204012ce:	3455                	jal	20400d72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:125

    /* finalize */
    s.x[1] ^= K0;
204012d0:	f9042783          	lw	a5,-112(s0)
204012d4:	f9442803          	lw	a6,-108(s0)
204012d8:	fc842703          	lw	a4,-56(s0)
204012dc:	8f3d                	xor	a4,a4,a5
204012de:	f2e42423          	sw	a4,-216(s0)
204012e2:	fcc42703          	lw	a4,-52(s0)
204012e6:	010747b3          	xor	a5,a4,a6
204012ea:	f2f42623          	sw	a5,-212(s0)
204012ee:	f2842783          	lw	a5,-216(s0)
204012f2:	f2c42803          	lw	a6,-212(s0)
204012f6:	f8f42823          	sw	a5,-112(s0)
204012fa:	f9042a23          	sw	a6,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:126
    s.x[2] ^= K1;
204012fe:	f9842783          	lw	a5,-104(s0)
20401302:	f9c42803          	lw	a6,-100(s0)
20401306:	fc042703          	lw	a4,-64(s0)
2040130a:	8f3d                	xor	a4,a4,a5
2040130c:	f2e42023          	sw	a4,-224(s0)
20401310:	fc442703          	lw	a4,-60(s0)
20401314:	010747b3          	xor	a5,a4,a6
20401318:	f2f42223          	sw	a5,-220(s0)
2040131c:	f2042783          	lw	a5,-224(s0)
20401320:	f2442803          	lw	a6,-220(s0)
20401324:	f8f42c23          	sw	a5,-104(s0)
20401328:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:128

    printf("key xor 1 \n");
2040132c:	204097b7          	lui	a5,0x20409
20401330:	e1878513          	addi	a0,a5,-488 # 20408e18 <_exit+0x1aa>
20401334:	789010ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:129
    printS(&s);
20401338:	f8840793          	addi	a5,s0,-120
2040133c:	853e                	mv	a0,a5
2040133e:	3c15                	jal	20400d72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:131

    P12(&s);
20401340:	f8840793          	addi	a5,s0,-120
20401344:	853e                	mv	a0,a5
20401346:	81bff0ef          	jal	ra,20400b60 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:132
    s.x[3] ^= K0;
2040134a:	fa042783          	lw	a5,-96(s0)
2040134e:	fa442803          	lw	a6,-92(s0)
20401352:	fc842703          	lw	a4,-56(s0)
20401356:	8f3d                	xor	a4,a4,a5
20401358:	f0e42c23          	sw	a4,-232(s0)
2040135c:	fcc42703          	lw	a4,-52(s0)
20401360:	010747b3          	xor	a5,a4,a6
20401364:	f0f42e23          	sw	a5,-228(s0)
20401368:	f1842783          	lw	a5,-232(s0)
2040136c:	f1c42803          	lw	a6,-228(s0)
20401370:	faf42023          	sw	a5,-96(s0)
20401374:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:133
    s.x[4] ^= K1;
20401378:	fa842783          	lw	a5,-88(s0)
2040137c:	fac42803          	lw	a6,-84(s0)
20401380:	fc042703          	lw	a4,-64(s0)
20401384:	8f3d                	xor	a4,a4,a5
20401386:	f0e42823          	sw	a4,-240(s0)
2040138a:	fc442703          	lw	a4,-60(s0)
2040138e:	010747b3          	xor	a5,a4,a6
20401392:	f0f42a23          	sw	a5,-236(s0)
20401396:	f1042783          	lw	a5,-240(s0)
2040139a:	f1442803          	lw	a6,-236(s0)
2040139e:	faf42423          	sw	a5,-88(s0)
204013a2:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:135

    printf("key kor 2 \n");
204013a6:	204097b7          	lui	a5,0x20409
204013aa:	e2478513          	addi	a0,a5,-476 # 20408e24 <_exit+0x1b6>
204013ae:	70f010ef          	jal	ra,204032bc <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:136
    printS(&s);
204013b2:	f8840793          	addi	a5,s0,-120
204013b6:	853e                	mv	a0,a5
204013b8:	3a6d                	jal	20400d72 <printS>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:139

    /* set tag */
    STOREBYTES(c, s.x[3], 8);
204013ba:	fa042783          	lw	a5,-96(s0)
204013be:	fa442803          	lw	a6,-92(s0)
204013c2:	46a1                	li	a3,8
204013c4:	85be                	mv	a1,a5
204013c6:	8642                	mv	a2,a6
204013c8:	f7c42503          	lw	a0,-132(s0)
204013cc:	3a21                	jal	20400ce4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:140
    STOREBYTES(c + 8, s.x[4], 8);
204013ce:	f7c42783          	lw	a5,-132(s0)
204013d2:	00878713          	addi	a4,a5,8
204013d6:	fa842783          	lw	a5,-88(s0)
204013da:	fac42803          	lw	a6,-84(s0)
204013de:	46a1                	li	a3,8
204013e0:	85be                	mv	a1,a5
204013e2:	8642                	mv	a2,a6
204013e4:	853a                	mv	a0,a4
204013e6:	8ffff0ef          	jal	ra,20400ce4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:142

    return 0;
204013ea:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:143
}
204013ec:	853e                	mv	a0,a5
204013ee:	50be                	lw	ra,236(sp)
204013f0:	542e                	lw	s0,232(sp)
204013f2:	591e                	lw	s2,228(sp)
204013f4:	598e                	lw	s3,224(sp)
204013f6:	4a7e                	lw	s4,220(sp)
204013f8:	4aee                	lw	s5,216(sp)
204013fa:	4b5e                	lw	s6,212(sp)
204013fc:	4bce                	lw	s7,208(sp)
204013fe:	4c3e                	lw	s8,204(sp)
20401400:	4cae                	lw	s9,200(sp)
20401402:	4d1e                	lw	s10,196(sp)
20401404:	4d8e                	lw	s11,192(sp)
20401406:	616d                	addi	sp,sp,240
20401408:	8082                	ret

2040140a <_putchar>:
_putchar():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:120
// import float.h for DBL_MAX
#if defined(PRINTF_SUPPORT_FLOAT)
#include <float.h>
#endif

void _putchar(char character){
2040140a:	1101                	addi	sp,sp,-32
2040140c:	ce06                	sw	ra,28(sp)
2040140e:	cc22                	sw	s0,24(sp)
20401410:	1000                	addi	s0,sp,32
20401412:	87aa                	mv	a5,a0
20401414:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:121
    write(1, &character, 1);
20401418:	fef40793          	addi	a5,s0,-17
2040141c:	4605                	li	a2,1
2040141e:	85be                	mv	a1,a5
20401420:	4505                	li	a0,1
20401422:	6f1010ef          	jal	ra,20403312 <write>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:122
}
20401426:	0001                	nop
20401428:	40f2                	lw	ra,28(sp)
2040142a:	4462                	lw	s0,24(sp)
2040142c:	6105                	addi	sp,sp,32
2040142e:	8082                	ret

20401430 <_out_null>:
_out_null():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:146
}


// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
20401430:	1101                	addi	sp,sp,-32
20401432:	ce22                	sw	s0,28(sp)
20401434:	1000                	addi	s0,sp,32
20401436:	87aa                	mv	a5,a0
20401438:	feb42423          	sw	a1,-24(s0)
2040143c:	fec42223          	sw	a2,-28(s0)
20401440:	fed42023          	sw	a3,-32(s0)
20401444:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:148
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
20401448:	0001                	nop
2040144a:	4472                	lw	s0,28(sp)
2040144c:	6105                	addi	sp,sp,32
2040144e:	8082                	ret

20401450 <_out_char>:
_out_char():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:153


// internal _putchar wrapper
static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
{
20401450:	1101                	addi	sp,sp,-32
20401452:	ce06                	sw	ra,28(sp)
20401454:	cc22                	sw	s0,24(sp)
20401456:	1000                	addi	s0,sp,32
20401458:	87aa                	mv	a5,a0
2040145a:	feb42423          	sw	a1,-24(s0)
2040145e:	fec42223          	sw	a2,-28(s0)
20401462:	fed42023          	sw	a3,-32(s0)
20401466:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:155
  (void)buffer; (void)idx; (void)maxlen;
  if (character) {
2040146a:	fef44783          	lbu	a5,-17(s0)
2040146e:	c789                	beqz	a5,20401478 <_out_char+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:156
    _putchar(character);
20401470:	fef44783          	lbu	a5,-17(s0)
20401474:	853e                	mv	a0,a5
20401476:	3f51                	jal	2040140a <_putchar>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:158
  }
}
20401478:	0001                	nop
2040147a:	40f2                	lw	ra,28(sp)
2040147c:	4462                	lw	s0,24(sp)
2040147e:	6105                	addi	sp,sp,32
20401480:	8082                	ret

20401482 <_strnlen_s>:
_strnlen_s():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:175


// internal secure strlen
// \return The length of the string (excluding the terminating 0) limited by 'maxsize'
static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
{
20401482:	7179                	addi	sp,sp,-48
20401484:	d622                	sw	s0,44(sp)
20401486:	1800                	addi	s0,sp,48
20401488:	fca42e23          	sw	a0,-36(s0)
2040148c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177
  const char* s;
  for (s = str; *s && maxsize--; ++s);
20401490:	fdc42783          	lw	a5,-36(s0)
20401494:	fef42623          	sw	a5,-20(s0)
20401498:	a031                	j	204014a4 <_strnlen_s+0x22>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177 (discriminator 4)
2040149a:	fec42783          	lw	a5,-20(s0)
2040149e:	0785                	addi	a5,a5,1
204014a0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177 (discriminator 1)
204014a4:	fec42783          	lw	a5,-20(s0)
204014a8:	0007c783          	lbu	a5,0(a5)
204014ac:	cb81                	beqz	a5,204014bc <_strnlen_s+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177 (discriminator 3)
204014ae:	fd842783          	lw	a5,-40(s0)
204014b2:	fff78713          	addi	a4,a5,-1
204014b6:	fce42c23          	sw	a4,-40(s0)
204014ba:	f3e5                	bnez	a5,2040149a <_strnlen_s+0x18>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:178
  return (unsigned int)(s - str);
204014bc:	fec42703          	lw	a4,-20(s0)
204014c0:	fdc42783          	lw	a5,-36(s0)
204014c4:	40f707b3          	sub	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:179
}
204014c8:	853e                	mv	a0,a5
204014ca:	5432                	lw	s0,44(sp)
204014cc:	6145                	addi	sp,sp,48
204014ce:	8082                	ret

204014d0 <_is_digit>:
_is_digit():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:185


// internal test if char is a digit (0-9)
// \return true if char is a digit
static inline bool _is_digit(char ch)
{
204014d0:	1101                	addi	sp,sp,-32
204014d2:	ce22                	sw	s0,28(sp)
204014d4:	1000                	addi	s0,sp,32
204014d6:	87aa                	mv	a5,a0
204014d8:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186
  return (ch >= '0') && (ch <= '9');
204014dc:	fef44703          	lbu	a4,-17(s0)
204014e0:	02f00793          	li	a5,47
204014e4:	00e7fa63          	bgeu	a5,a4,204014f8 <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 1)
204014e8:	fef44703          	lbu	a4,-17(s0)
204014ec:	03900793          	li	a5,57
204014f0:	00e7e463          	bltu	a5,a4,204014f8 <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 3)
204014f4:	4785                	li	a5,1
204014f6:	a011                	j	204014fa <_is_digit+0x2a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 4)
204014f8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 6)
204014fa:	8b85                	andi	a5,a5,1
204014fc:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:187 (discriminator 6)
}
20401500:	853e                	mv	a0,a5
20401502:	4472                	lw	s0,28(sp)
20401504:	6105                	addi	sp,sp,32
20401506:	8082                	ret

20401508 <_atoi>:
_atoi():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:192


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
20401508:	7179                	addi	sp,sp,-48
2040150a:	d606                	sw	ra,44(sp)
2040150c:	d422                	sw	s0,40(sp)
2040150e:	1800                	addi	s0,sp,48
20401510:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:193
  unsigned int i = 0U;
20401514:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:194
  while (_is_digit(**str)) {
20401518:	a03d                	j	20401546 <_atoi+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:195
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
2040151a:	fec42703          	lw	a4,-20(s0)
2040151e:	87ba                	mv	a5,a4
20401520:	078a                	slli	a5,a5,0x2
20401522:	97ba                	add	a5,a5,a4
20401524:	0786                	slli	a5,a5,0x1
20401526:	863e                	mv	a2,a5
20401528:	fdc42783          	lw	a5,-36(s0)
2040152c:	439c                	lw	a5,0(a5)
2040152e:	00178693          	addi	a3,a5,1
20401532:	fdc42703          	lw	a4,-36(s0)
20401536:	c314                	sw	a3,0(a4)
20401538:	0007c783          	lbu	a5,0(a5)
2040153c:	97b2                	add	a5,a5,a2
2040153e:	fd078793          	addi	a5,a5,-48
20401542:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:194
  while (_is_digit(**str)) {
20401546:	fdc42783          	lw	a5,-36(s0)
2040154a:	439c                	lw	a5,0(a5)
2040154c:	0007c783          	lbu	a5,0(a5)
20401550:	853e                	mv	a0,a5
20401552:	3fbd                	jal	204014d0 <_is_digit>
20401554:	87aa                	mv	a5,a0
20401556:	f3f1                	bnez	a5,2040151a <_atoi+0x12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:197
  }
  return i;
20401558:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:198
}
2040155c:	853e                	mv	a0,a5
2040155e:	50b2                	lw	ra,44(sp)
20401560:	5422                	lw	s0,40(sp)
20401562:	6145                	addi	sp,sp,48
20401564:	8082                	ret

20401566 <_out_rev>:
_out_rev():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:203


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
20401566:	7139                	addi	sp,sp,-64
20401568:	de06                	sw	ra,60(sp)
2040156a:	dc22                	sw	s0,56(sp)
2040156c:	0080                	addi	s0,sp,64
2040156e:	fca42e23          	sw	a0,-36(s0)
20401572:	fcb42c23          	sw	a1,-40(s0)
20401576:	fcc42a23          	sw	a2,-44(s0)
2040157a:	fcd42823          	sw	a3,-48(s0)
2040157e:	fce42623          	sw	a4,-52(s0)
20401582:	fcf42423          	sw	a5,-56(s0)
20401586:	fd042223          	sw	a6,-60(s0)
2040158a:	fd142023          	sw	a7,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:204
  const size_t start_idx = idx;
2040158e:	fd442783          	lw	a5,-44(s0)
20401592:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:207

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
20401596:	fc042783          	lw	a5,-64(s0)
2040159a:	8b89                	andi	a5,a5,2
2040159c:	e3c1                	bnez	a5,2040161c <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:207 (discriminator 1)
2040159e:	fc042783          	lw	a5,-64(s0)
204015a2:	8b85                	andi	a5,a5,1
204015a4:	efa5                	bnez	a5,2040161c <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:208
    for (size_t i = len; i < width; i++) {
204015a6:	fc842783          	lw	a5,-56(s0)
204015aa:	fef42623          	sw	a5,-20(s0)
204015ae:	a035                	j	204015da <_out_rev+0x74>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:209 (discriminator 3)
      out(' ', buffer, idx++, maxlen);
204015b0:	fd442783          	lw	a5,-44(s0)
204015b4:	00178713          	addi	a4,a5,1
204015b8:	fce42a23          	sw	a4,-44(s0)
204015bc:	fdc42703          	lw	a4,-36(s0)
204015c0:	fd042683          	lw	a3,-48(s0)
204015c4:	863e                	mv	a2,a5
204015c6:	fd842583          	lw	a1,-40(s0)
204015ca:	02000513          	li	a0,32
204015ce:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:208 (discriminator 3)
    for (size_t i = len; i < width; i++) {
204015d0:	fec42783          	lw	a5,-20(s0)
204015d4:	0785                	addi	a5,a5,1
204015d6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:208 (discriminator 1)
204015da:	fec42703          	lw	a4,-20(s0)
204015de:	fc442783          	lw	a5,-60(s0)
204015e2:	fcf767e3          	bltu	a4,a5,204015b0 <_out_rev+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:214
    }
  }

  // reverse string
  while (len) {
204015e6:	a81d                	j	2040161c <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:215
    out(buf[--len], buffer, idx++, maxlen);
204015e8:	fc842783          	lw	a5,-56(s0)
204015ec:	17fd                	addi	a5,a5,-1
204015ee:	fcf42423          	sw	a5,-56(s0)
204015f2:	fcc42703          	lw	a4,-52(s0)
204015f6:	fc842783          	lw	a5,-56(s0)
204015fa:	97ba                	add	a5,a5,a4
204015fc:	0007c503          	lbu	a0,0(a5)
20401600:	fd442783          	lw	a5,-44(s0)
20401604:	00178713          	addi	a4,a5,1
20401608:	fce42a23          	sw	a4,-44(s0)
2040160c:	fdc42703          	lw	a4,-36(s0)
20401610:	fd042683          	lw	a3,-48(s0)
20401614:	863e                	mv	a2,a5
20401616:	fd842583          	lw	a1,-40(s0)
2040161a:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:214
  while (len) {
2040161c:	fc842783          	lw	a5,-56(s0)
20401620:	f7e1                	bnez	a5,204015e8 <_out_rev+0x82>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:219
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
20401622:	fc042783          	lw	a5,-64(s0)
20401626:	8b89                	andi	a5,a5,2
20401628:	cf85                	beqz	a5,20401660 <_out_rev+0xfa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:220
    while (idx - start_idx < width) {
2040162a:	a00d                	j	2040164c <_out_rev+0xe6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:221
      out(' ', buffer, idx++, maxlen);
2040162c:	fd442783          	lw	a5,-44(s0)
20401630:	00178713          	addi	a4,a5,1
20401634:	fce42a23          	sw	a4,-44(s0)
20401638:	fdc42703          	lw	a4,-36(s0)
2040163c:	fd042683          	lw	a3,-48(s0)
20401640:	863e                	mv	a2,a5
20401642:	fd842583          	lw	a1,-40(s0)
20401646:	02000513          	li	a0,32
2040164a:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:220
    while (idx - start_idx < width) {
2040164c:	fd442703          	lw	a4,-44(s0)
20401650:	fe842783          	lw	a5,-24(s0)
20401654:	40f707b3          	sub	a5,a4,a5
20401658:	fc442703          	lw	a4,-60(s0)
2040165c:	fce7e8e3          	bltu	a5,a4,2040162c <_out_rev+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:225
    }
  }

  return idx;
20401660:	fd442783          	lw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:226
}
20401664:	853e                	mv	a0,a5
20401666:	50f2                	lw	ra,60(sp)
20401668:	5462                	lw	s0,56(sp)
2040166a:	6121                	addi	sp,sp,64
2040166c:	8082                	ret

2040166e <_ntoa_format>:
_ntoa_format():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:231


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
2040166e:	7179                	addi	sp,sp,-48
20401670:	d606                	sw	ra,44(sp)
20401672:	d422                	sw	s0,40(sp)
20401674:	1800                	addi	s0,sp,48
20401676:	fea42623          	sw	a0,-20(s0)
2040167a:	feb42423          	sw	a1,-24(s0)
2040167e:	fec42223          	sw	a2,-28(s0)
20401682:	fed42023          	sw	a3,-32(s0)
20401686:	fce42e23          	sw	a4,-36(s0)
2040168a:	fcf42c23          	sw	a5,-40(s0)
2040168e:	87c2                	mv	a5,a6
20401690:	fd142823          	sw	a7,-48(s0)
20401694:	fcf40ba3          	sb	a5,-41(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:233
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
20401698:	441c                	lw	a5,8(s0)
2040169a:	8b89                	andi	a5,a5,2
2040169c:	e3d1                	bnez	a5,20401720 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
2040169e:	405c                	lw	a5,4(s0)
204016a0:	cb9d                	beqz	a5,204016d6 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234 (discriminator 1)
204016a2:	441c                	lw	a5,8(s0)
204016a4:	8b85                	andi	a5,a5,1
204016a6:	cb85                	beqz	a5,204016d6 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234 (discriminator 2)
204016a8:	fd744783          	lbu	a5,-41(s0)
204016ac:	e781                	bnez	a5,204016b4 <_ntoa_format+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234 (discriminator 3)
204016ae:	441c                	lw	a5,8(s0)
204016b0:	8bb1                	andi	a5,a5,12
204016b2:	c395                	beqz	a5,204016d6 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:235
      width--;
204016b4:	405c                	lw	a5,4(s0)
204016b6:	17fd                	addi	a5,a5,-1
204016b8:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:237
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204016ba:	a831                	j	204016d6 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:238
      buf[len++] = '0';
204016bc:	fd842783          	lw	a5,-40(s0)
204016c0:	00178713          	addi	a4,a5,1
204016c4:	fce42c23          	sw	a4,-40(s0)
204016c8:	fdc42703          	lw	a4,-36(s0)
204016cc:	97ba                	add	a5,a5,a4
204016ce:	03000713          	li	a4,48
204016d2:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:237
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204016d6:	fd842703          	lw	a4,-40(s0)
204016da:	401c                	lw	a5,0(s0)
204016dc:	02f77563          	bgeu	a4,a5,20401706 <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:237 (discriminator 1)
204016e0:	fd842703          	lw	a4,-40(s0)
204016e4:	47fd                	li	a5,31
204016e6:	fce7fbe3          	bgeu	a5,a4,204016bc <_ntoa_format+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204016ea:	a831                	j	20401706 <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:241
      buf[len++] = '0';
204016ec:	fd842783          	lw	a5,-40(s0)
204016f0:	00178713          	addi	a4,a5,1
204016f4:	fce42c23          	sw	a4,-40(s0)
204016f8:	fdc42703          	lw	a4,-36(s0)
204016fc:	97ba                	add	a5,a5,a4
204016fe:	03000713          	li	a4,48
20401702:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20401706:	441c                	lw	a5,8(s0)
20401708:	8b85                	andi	a5,a5,1
2040170a:	cb99                	beqz	a5,20401720 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240 (discriminator 1)
2040170c:	fd842703          	lw	a4,-40(s0)
20401710:	405c                	lw	a5,4(s0)
20401712:	00f77763          	bgeu	a4,a5,20401720 <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240 (discriminator 2)
20401716:	fd842703          	lw	a4,-40(s0)
2040171a:	47fd                	li	a5,31
2040171c:	fce7f8e3          	bgeu	a5,a4,204016ec <_ntoa_format+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:246
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
20401720:	441c                	lw	a5,8(s0)
20401722:	8bc1                	andi	a5,a5,16
20401724:	10078663          	beqz	a5,20401830 <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
20401728:	441c                	lw	a5,8(s0)
2040172a:	4007f793          	andi	a5,a5,1024
2040172e:	e3a1                	bnez	a5,2040176e <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247 (discriminator 1)
20401730:	fd842783          	lw	a5,-40(s0)
20401734:	cf8d                	beqz	a5,2040176e <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247 (discriminator 2)
20401736:	fd842703          	lw	a4,-40(s0)
2040173a:	401c                	lw	a5,0(s0)
2040173c:	00f70763          	beq	a4,a5,2040174a <_ntoa_format+0xdc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247 (discriminator 3)
20401740:	fd842703          	lw	a4,-40(s0)
20401744:	405c                	lw	a5,4(s0)
20401746:	02f71463          	bne	a4,a5,2040176e <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:248
      len--;
2040174a:	fd842783          	lw	a5,-40(s0)
2040174e:	17fd                	addi	a5,a5,-1
20401750:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:249
      if (len && (base == 16U)) {
20401754:	fd842783          	lw	a5,-40(s0)
20401758:	cb99                	beqz	a5,2040176e <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:249 (discriminator 1)
2040175a:	fd042703          	lw	a4,-48(s0)
2040175e:	47c1                	li	a5,16
20401760:	00f71763          	bne	a4,a5,2040176e <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:250
        len--;
20401764:	fd842783          	lw	a5,-40(s0)
20401768:	17fd                	addi	a5,a5,-1
2040176a:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:253
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
2040176e:	fd042703          	lw	a4,-48(s0)
20401772:	47c1                	li	a5,16
20401774:	02f71963          	bne	a4,a5,204017a6 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:253 (discriminator 1)
20401778:	441c                	lw	a5,8(s0)
2040177a:	0207f793          	andi	a5,a5,32
2040177e:	e785                	bnez	a5,204017a6 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:253 (discriminator 2)
20401780:	fd842703          	lw	a4,-40(s0)
20401784:	47fd                	li	a5,31
20401786:	02e7e063          	bltu	a5,a4,204017a6 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:254
      buf[len++] = 'x';
2040178a:	fd842783          	lw	a5,-40(s0)
2040178e:	00178713          	addi	a4,a5,1
20401792:	fce42c23          	sw	a4,-40(s0)
20401796:	fdc42703          	lw	a4,-36(s0)
2040179a:	97ba                	add	a5,a5,a4
2040179c:	07800713          	li	a4,120
204017a0:	00e78023          	sb	a4,0(a5)
204017a4:	a0a5                	j	2040180c <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:256
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204017a6:	fd042703          	lw	a4,-48(s0)
204017aa:	47c1                	li	a5,16
204017ac:	02f71963          	bne	a4,a5,204017de <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:256 (discriminator 1)
204017b0:	441c                	lw	a5,8(s0)
204017b2:	0207f793          	andi	a5,a5,32
204017b6:	c785                	beqz	a5,204017de <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:256 (discriminator 2)
204017b8:	fd842703          	lw	a4,-40(s0)
204017bc:	47fd                	li	a5,31
204017be:	02e7e063          	bltu	a5,a4,204017de <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:257
      buf[len++] = 'X';
204017c2:	fd842783          	lw	a5,-40(s0)
204017c6:	00178713          	addi	a4,a5,1
204017ca:	fce42c23          	sw	a4,-40(s0)
204017ce:	fdc42703          	lw	a4,-36(s0)
204017d2:	97ba                	add	a5,a5,a4
204017d4:	05800713          	li	a4,88
204017d8:	00e78023          	sb	a4,0(a5)
204017dc:	a805                	j	2040180c <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:259
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
204017de:	fd042703          	lw	a4,-48(s0)
204017e2:	4789                	li	a5,2
204017e4:	02f71463          	bne	a4,a5,2040180c <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:259 (discriminator 1)
204017e8:	fd842703          	lw	a4,-40(s0)
204017ec:	47fd                	li	a5,31
204017ee:	00e7ef63          	bltu	a5,a4,2040180c <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:260
      buf[len++] = 'b';
204017f2:	fd842783          	lw	a5,-40(s0)
204017f6:	00178713          	addi	a4,a5,1
204017fa:	fce42c23          	sw	a4,-40(s0)
204017fe:	fdc42703          	lw	a4,-36(s0)
20401802:	97ba                	add	a5,a5,a4
20401804:	06200713          	li	a4,98
20401808:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:262
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
2040180c:	fd842703          	lw	a4,-40(s0)
20401810:	47fd                	li	a5,31
20401812:	00e7ef63          	bltu	a5,a4,20401830 <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:263
      buf[len++] = '0';
20401816:	fd842783          	lw	a5,-40(s0)
2040181a:	00178713          	addi	a4,a5,1
2040181e:	fce42c23          	sw	a4,-40(s0)
20401822:	fdc42703          	lw	a4,-36(s0)
20401826:	97ba                	add	a5,a5,a4
20401828:	03000713          	li	a4,48
2040182c:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:267
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
20401830:	fd842703          	lw	a4,-40(s0)
20401834:	47fd                	li	a5,31
20401836:	06e7e463          	bltu	a5,a4,2040189e <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:268
    if (negative) {
2040183a:	fd744783          	lbu	a5,-41(s0)
2040183e:	cf99                	beqz	a5,2040185c <_ntoa_format+0x1ee>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:269
      buf[len++] = '-';
20401840:	fd842783          	lw	a5,-40(s0)
20401844:	00178713          	addi	a4,a5,1
20401848:	fce42c23          	sw	a4,-40(s0)
2040184c:	fdc42703          	lw	a4,-36(s0)
20401850:	97ba                	add	a5,a5,a4
20401852:	02d00713          	li	a4,45
20401856:	00e78023          	sb	a4,0(a5)
2040185a:	a091                	j	2040189e <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:271
    }
    else if (flags & FLAGS_PLUS) {
2040185c:	441c                	lw	a5,8(s0)
2040185e:	8b91                	andi	a5,a5,4
20401860:	cf99                	beqz	a5,2040187e <_ntoa_format+0x210>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:272
      buf[len++] = '+';  // ignore the space if the '+' exists
20401862:	fd842783          	lw	a5,-40(s0)
20401866:	00178713          	addi	a4,a5,1
2040186a:	fce42c23          	sw	a4,-40(s0)
2040186e:	fdc42703          	lw	a4,-36(s0)
20401872:	97ba                	add	a5,a5,a4
20401874:	02b00713          	li	a4,43
20401878:	00e78023          	sb	a4,0(a5)
2040187c:	a00d                	j	2040189e <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:274
    }
    else if (flags & FLAGS_SPACE) {
2040187e:	441c                	lw	a5,8(s0)
20401880:	8ba1                	andi	a5,a5,8
20401882:	cf91                	beqz	a5,2040189e <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:275
      buf[len++] = ' ';
20401884:	fd842783          	lw	a5,-40(s0)
20401888:	00178713          	addi	a4,a5,1
2040188c:	fce42c23          	sw	a4,-40(s0)
20401890:	fdc42703          	lw	a4,-36(s0)
20401894:	97ba                	add	a5,a5,a4
20401896:	02000713          	li	a4,32
2040189a:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:279
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
2040189e:	00842883          	lw	a7,8(s0)
204018a2:	00442803          	lw	a6,4(s0)
204018a6:	fd842783          	lw	a5,-40(s0)
204018aa:	fdc42703          	lw	a4,-36(s0)
204018ae:	fe042683          	lw	a3,-32(s0)
204018b2:	fe442603          	lw	a2,-28(s0)
204018b6:	fe842583          	lw	a1,-24(s0)
204018ba:	fec42503          	lw	a0,-20(s0)
204018be:	3165                	jal	20401566 <_out_rev>
204018c0:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:280
}
204018c2:	853e                	mv	a0,a5
204018c4:	50b2                	lw	ra,44(sp)
204018c6:	5422                	lw	s0,40(sp)
204018c8:	6145                	addi	sp,sp,48
204018ca:	8082                	ret

204018cc <_ntoa_long>:
_ntoa_long():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:285


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
204018cc:	7159                	addi	sp,sp,-112
204018ce:	d686                	sw	ra,108(sp)
204018d0:	d4a2                	sw	s0,104(sp)
204018d2:	1880                	addi	s0,sp,112
204018d4:	faa42e23          	sw	a0,-68(s0)
204018d8:	fab42c23          	sw	a1,-72(s0)
204018dc:	fac42a23          	sw	a2,-76(s0)
204018e0:	fad42823          	sw	a3,-80(s0)
204018e4:	fae42623          	sw	a4,-84(s0)
204018e8:	fb042223          	sw	a6,-92(s0)
204018ec:	fb142023          	sw	a7,-96(s0)
204018f0:	faf405a3          	sb	a5,-85(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:287
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
204018f4:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:290

  // no hash for 0 values
  if (!value) {
204018f8:	fac42783          	lw	a5,-84(s0)
204018fc:	e781                	bnez	a5,20401904 <_ntoa_long+0x38>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:291
    flags &= ~FLAGS_HASH;
204018fe:	405c                	lw	a5,4(s0)
20401900:	9bbd                	andi	a5,a5,-17
20401902:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:295
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
20401904:	405c                	lw	a5,4(s0)
20401906:	4007f793          	andi	a5,a5,1024
2040190a:	c781                	beqz	a5,20401912 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:295 (discriminator 1)
2040190c:	fac42783          	lw	a5,-84(s0)
20401910:	c3c9                	beqz	a5,20401992 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:297
    do {
      const char digit = (char)(value % base);
20401912:	fac42703          	lw	a4,-84(s0)
20401916:	fa442783          	lw	a5,-92(s0)
2040191a:	02f777b3          	remu	a5,a4,a5
2040191e:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
20401922:	feb44703          	lbu	a4,-21(s0)
20401926:	47a5                	li	a5,9
20401928:	00e7e963          	bltu	a5,a4,2040193a <_ntoa_long+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 1)
2040192c:	feb44783          	lbu	a5,-21(s0)
20401930:	03078793          	addi	a5,a5,48
20401934:	0ff7f793          	andi	a5,a5,255
20401938:	a015                	j	2040195c <_ntoa_long+0x90>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 2)
2040193a:	405c                	lw	a5,4(s0)
2040193c:	0207f793          	andi	a5,a5,32
20401940:	c781                	beqz	a5,20401948 <_ntoa_long+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 4)
20401942:	04100793          	li	a5,65
20401946:	a019                	j	2040194c <_ntoa_long+0x80>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 5)
20401948:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 7)
2040194c:	feb44703          	lbu	a4,-21(s0)
20401950:	97ba                	add	a5,a5,a4
20401952:	0ff7f793          	andi	a5,a5,255
20401956:	17d9                	addi	a5,a5,-10
20401958:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 8)
2040195c:	fec42703          	lw	a4,-20(s0)
20401960:	00170693          	addi	a3,a4,1
20401964:	fed42623          	sw	a3,-20(s0)
20401968:	ff040693          	addi	a3,s0,-16
2040196c:	9736                	add	a4,a4,a3
2040196e:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:299 (discriminator 8)
      value /= base;
20401972:	fac42703          	lw	a4,-84(s0)
20401976:	fa442783          	lw	a5,-92(s0)
2040197a:	02f757b3          	divu	a5,a4,a5
2040197e:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:300 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
20401982:	fac42783          	lw	a5,-84(s0)
20401986:	c791                	beqz	a5,20401992 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:300 (discriminator 1)
20401988:	fec42703          	lw	a4,-20(s0)
2040198c:	47fd                	li	a5,31
2040198e:	f8e7f2e3          	bgeu	a5,a4,20401912 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:303
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20401992:	fab44683          	lbu	a3,-85(s0)
20401996:	fc840713          	addi	a4,s0,-56
2040199a:	405c                	lw	a5,4(s0)
2040199c:	c43e                	sw	a5,8(sp)
2040199e:	401c                	lw	a5,0(s0)
204019a0:	c23e                	sw	a5,4(sp)
204019a2:	fa042783          	lw	a5,-96(s0)
204019a6:	c03e                	sw	a5,0(sp)
204019a8:	fa442883          	lw	a7,-92(s0)
204019ac:	8836                	mv	a6,a3
204019ae:	fec42783          	lw	a5,-20(s0)
204019b2:	fb042683          	lw	a3,-80(s0)
204019b6:	fb442603          	lw	a2,-76(s0)
204019ba:	fb842583          	lw	a1,-72(s0)
204019be:	fbc42503          	lw	a0,-68(s0)
204019c2:	3175                	jal	2040166e <_ntoa_format>
204019c4:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:304
}
204019c6:	853e                	mv	a0,a5
204019c8:	50b6                	lw	ra,108(sp)
204019ca:	5426                	lw	s0,104(sp)
204019cc:	6165                	addi	sp,sp,112
204019ce:	8082                	ret

204019d0 <_ntoa_long_long>:
_ntoa_long_long():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:310


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
204019d0:	7119                	addi	sp,sp,-128
204019d2:	d686                	sw	ra,108(sp)
204019d4:	d4a2                	sw	s0,104(sp)
204019d6:	1880                	addi	s0,sp,112
204019d8:	faa42e23          	sw	a0,-68(s0)
204019dc:	fab42c23          	sw	a1,-72(s0)
204019e0:	fac42a23          	sw	a2,-76(s0)
204019e4:	fad42823          	sw	a3,-80(s0)
204019e8:	fae42423          	sw	a4,-88(s0)
204019ec:	faf42623          	sw	a5,-84(s0)
204019f0:	87c2                	mv	a5,a6
204019f2:	01142623          	sw	a7,12(s0)
204019f6:	faf403a3          	sb	a5,-89(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:312
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
204019fa:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:315

  // no hash for 0 values
  if (!value) {
204019fe:	fa842783          	lw	a5,-88(s0)
20401a02:	fac42703          	lw	a4,-84(s0)
20401a06:	8fd9                	or	a5,a5,a4
20401a08:	e781                	bnez	a5,20401a10 <_ntoa_long_long+0x40>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:316
    flags &= ~FLAGS_HASH;
20401a0a:	4c5c                	lw	a5,28(s0)
20401a0c:	9bbd                	andi	a5,a5,-17
20401a0e:	cc5c                	sw	a5,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:320
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
20401a10:	4c5c                	lw	a5,28(s0)
20401a12:	4007f793          	andi	a5,a5,1024
20401a16:	c799                	beqz	a5,20401a24 <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:320 (discriminator 1)
20401a18:	fa842783          	lw	a5,-88(s0)
20401a1c:	fac42703          	lw	a4,-84(s0)
20401a20:	8fd9                	or	a5,a5,a4
20401a22:	c3c5                	beqz	a5,20401ac2 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:322
    do {
      const char digit = (char)(value % base);
20401a24:	fa842783          	lw	a5,-88(s0)
20401a28:	fac42803          	lw	a6,-84(s0)
20401a2c:	4450                	lw	a2,12(s0)
20401a2e:	4814                	lw	a3,16(s0)
20401a30:	853e                	mv	a0,a5
20401a32:	85c2                	mv	a1,a6
20401a34:	47d010ef          	jal	ra,204036b0 <__umoddi3>
20401a38:	87aa                	mv	a5,a0
20401a3a:	882e                	mv	a6,a1
20401a3c:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
20401a40:	feb44703          	lbu	a4,-21(s0)
20401a44:	47a5                	li	a5,9
20401a46:	00e7e963          	bltu	a5,a4,20401a58 <_ntoa_long_long+0x88>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 1)
20401a4a:	feb44783          	lbu	a5,-21(s0)
20401a4e:	03078793          	addi	a5,a5,48
20401a52:	0ff7f793          	andi	a5,a5,255
20401a56:	a015                	j	20401a7a <_ntoa_long_long+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 2)
20401a58:	4c5c                	lw	a5,28(s0)
20401a5a:	0207f793          	andi	a5,a5,32
20401a5e:	c781                	beqz	a5,20401a66 <_ntoa_long_long+0x96>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 4)
20401a60:	04100793          	li	a5,65
20401a64:	a019                	j	20401a6a <_ntoa_long_long+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 5)
20401a66:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 7)
20401a6a:	feb44703          	lbu	a4,-21(s0)
20401a6e:	97ba                	add	a5,a5,a4
20401a70:	0ff7f793          	andi	a5,a5,255
20401a74:	17d9                	addi	a5,a5,-10
20401a76:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 8)
20401a7a:	fec42703          	lw	a4,-20(s0)
20401a7e:	00170693          	addi	a3,a4,1
20401a82:	fed42623          	sw	a3,-20(s0)
20401a86:	ff040693          	addi	a3,s0,-16
20401a8a:	9736                	add	a4,a4,a3
20401a8c:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:324 (discriminator 8)
      value /= base;
20401a90:	4450                	lw	a2,12(s0)
20401a92:	4814                	lw	a3,16(s0)
20401a94:	fa842503          	lw	a0,-88(s0)
20401a98:	fac42583          	lw	a1,-84(s0)
20401a9c:	0b7010ef          	jal	ra,20403352 <__udivdi3>
20401aa0:	87aa                	mv	a5,a0
20401aa2:	882e                	mv	a6,a1
20401aa4:	faf42423          	sw	a5,-88(s0)
20401aa8:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:325 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
20401aac:	fa842783          	lw	a5,-88(s0)
20401ab0:	fac42703          	lw	a4,-84(s0)
20401ab4:	8fd9                	or	a5,a5,a4
20401ab6:	c791                	beqz	a5,20401ac2 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:325 (discriminator 1)
20401ab8:	fec42703          	lw	a4,-20(s0)
20401abc:	47fd                	li	a5,31
20401abe:	f6e7f3e3          	bgeu	a5,a4,20401a24 <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:328
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20401ac2:	4450                	lw	a2,12(s0)
20401ac4:	fa744683          	lbu	a3,-89(s0)
20401ac8:	fc840713          	addi	a4,s0,-56
20401acc:	4c5c                	lw	a5,28(s0)
20401ace:	c43e                	sw	a5,8(sp)
20401ad0:	4c1c                	lw	a5,24(s0)
20401ad2:	c23e                	sw	a5,4(sp)
20401ad4:	485c                	lw	a5,20(s0)
20401ad6:	c03e                	sw	a5,0(sp)
20401ad8:	88b2                	mv	a7,a2
20401ada:	8836                	mv	a6,a3
20401adc:	fec42783          	lw	a5,-20(s0)
20401ae0:	fb042683          	lw	a3,-80(s0)
20401ae4:	fb442603          	lw	a2,-76(s0)
20401ae8:	fb842583          	lw	a1,-72(s0)
20401aec:	fbc42503          	lw	a0,-68(s0)
20401af0:	3ebd                	jal	2040166e <_ntoa_format>
20401af2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:329
}
20401af4:	853e                	mv	a0,a5
20401af6:	50b6                	lw	ra,108(sp)
20401af8:	5426                	lw	s0,104(sp)
20401afa:	6109                	addi	sp,sp,128
20401afc:	8082                	ret

20401afe <_ftoa>:
_ftoa():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:343
#endif


// internal ftoa for fixed decimal floating point
static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
20401afe:	7175                	addi	sp,sp,-144
20401b00:	c706                	sw	ra,140(sp)
20401b02:	c522                	sw	s0,136(sp)
20401b04:	c326                	sw	s1,132(sp)
20401b06:	0900                	addi	s0,sp,144
20401b08:	f8a42e23          	sw	a0,-100(s0)
20401b0c:	f8b42c23          	sw	a1,-104(s0)
20401b10:	f8c42a23          	sw	a2,-108(s0)
20401b14:	f8d42823          	sw	a3,-112(s0)
20401b18:	f8e42423          	sw	a4,-120(s0)
20401b1c:	f8f42623          	sw	a5,-116(s0)
20401b20:	f9042223          	sw	a6,-124(s0)
20401b24:	f9142023          	sw	a7,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:345
  char buf[PRINTF_FTOA_BUFFER_SIZE];
  size_t len  = 0U;
20401b28:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:346
  double diff = 0.0;
20401b2c:	fc042823          	sw	zero,-48(s0)
20401b30:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:352

  // powers of 10
  static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };

  // test for special values
  if (value != value)
20401b34:	f8842603          	lw	a2,-120(s0)
20401b38:	f8c42683          	lw	a3,-116(s0)
20401b3c:	f8842503          	lw	a0,-120(s0)
20401b40:	f8c42583          	lw	a1,-116(s0)
20401b44:	1e7020ef          	jal	ra,2040452a <__eqdf2>
20401b48:	87aa                	mv	a5,a0
20401b4a:	c78d                	beqz	a5,20401b74 <_ftoa+0x76>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:353
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
20401b4c:	00042883          	lw	a7,0(s0)
20401b50:	f8042803          	lw	a6,-128(s0)
20401b54:	478d                	li	a5,3
20401b56:	20409737          	lui	a4,0x20409
20401b5a:	ed870713          	addi	a4,a4,-296 # 20408ed8 <_exit+0x26a>
20401b5e:	f9042683          	lw	a3,-112(s0)
20401b62:	f9442603          	lw	a2,-108(s0)
20401b66:	f9842583          	lw	a1,-104(s0)
20401b6a:	f9c42503          	lw	a0,-100(s0)
20401b6e:	3ae5                	jal	20401566 <_out_rev>
20401b70:	87aa                	mv	a5,a0
20401b72:	ab91                	j	204020c6 <_ftoa+0x5c8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:354
  if (value < -DBL_MAX)
20401b74:	204097b7          	lui	a5,0x20409
20401b78:	ef07a603          	lw	a2,-272(a5) # 20408ef0 <_exit+0x282>
20401b7c:	ef47a683          	lw	a3,-268(a5)
20401b80:	f8842503          	lw	a0,-120(s0)
20401b84:	f8c42583          	lw	a1,-116(s0)
20401b88:	2b1020ef          	jal	ra,20404638 <__ledf2>
20401b8c:	87aa                	mv	a5,a0
20401b8e:	0207d763          	bgez	a5,20401bbc <_ftoa+0xbe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:355
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
20401b92:	00042883          	lw	a7,0(s0)
20401b96:	f8042803          	lw	a6,-128(s0)
20401b9a:	4791                	li	a5,4
20401b9c:	20409737          	lui	a4,0x20409
20401ba0:	edc70713          	addi	a4,a4,-292 # 20408edc <_exit+0x26e>
20401ba4:	f9042683          	lw	a3,-112(s0)
20401ba8:	f9442603          	lw	a2,-108(s0)
20401bac:	f9842583          	lw	a1,-104(s0)
20401bb0:	f9c42503          	lw	a0,-100(s0)
20401bb4:	9b3ff0ef          	jal	ra,20401566 <_out_rev>
20401bb8:	87aa                	mv	a5,a0
20401bba:	a331                	j	204020c6 <_ftoa+0x5c8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:356
  if (value > DBL_MAX)
20401bbc:	204097b7          	lui	a5,0x20409
20401bc0:	ef87a603          	lw	a2,-264(a5) # 20408ef8 <_exit+0x28a>
20401bc4:	efc7a683          	lw	a3,-260(a5)
20401bc8:	f8842503          	lw	a0,-120(s0)
20401bcc:	f8c42583          	lw	a1,-116(s0)
20401bd0:	1c5020ef          	jal	ra,20404594 <__gedf2>
20401bd4:	87aa                	mv	a5,a0
20401bd6:	04f05463          	blez	a5,20401c1e <_ftoa+0x120>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
20401bda:	401c                	lw	a5,0(s0)
20401bdc:	8b91                	andi	a5,a5,4
20401bde:	c791                	beqz	a5,20401bea <_ftoa+0xec>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 1)
20401be0:	204097b7          	lui	a5,0x20409
20401be4:	ee478713          	addi	a4,a5,-284 # 20408ee4 <_exit+0x276>
20401be8:	a029                	j	20401bf2 <_ftoa+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 2)
20401bea:	204097b7          	lui	a5,0x20409
20401bee:	eec78713          	addi	a4,a5,-276 # 20408eec <_exit+0x27e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 4)
20401bf2:	401c                	lw	a5,0(s0)
20401bf4:	8b91                	andi	a5,a5,4
20401bf6:	c399                	beqz	a5,20401bfc <_ftoa+0xfe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 5)
20401bf8:	4791                	li	a5,4
20401bfa:	a011                	j	20401bfe <_ftoa+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 6)
20401bfc:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 8)
20401bfe:	00042883          	lw	a7,0(s0)
20401c02:	f8042803          	lw	a6,-128(s0)
20401c06:	f9042683          	lw	a3,-112(s0)
20401c0a:	f9442603          	lw	a2,-108(s0)
20401c0e:	f9842583          	lw	a1,-104(s0)
20401c12:	f9c42503          	lw	a0,-100(s0)
20401c16:	951ff0ef          	jal	ra,20401566 <_out_rev>
20401c1a:	87aa                	mv	a5,a0
20401c1c:	a16d                	j	204020c6 <_ftoa+0x5c8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:361

  // test for very large values
  // standard printf behavior is to print EVERY whole number digit -- which could be 100s of characters overflowing your buffers == bad
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
20401c1e:	204097b7          	lui	a5,0x20409
20401c22:	f007a603          	lw	a2,-256(a5) # 20408f00 <_exit+0x292>
20401c26:	f047a683          	lw	a3,-252(a5)
20401c2a:	f8842503          	lw	a0,-120(s0)
20401c2e:	f8c42583          	lw	a1,-116(s0)
20401c32:	163020ef          	jal	ra,20404594 <__gedf2>
20401c36:	87aa                	mv	a5,a0
20401c38:	02f04163          	bgtz	a5,20401c5a <_ftoa+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:361 (discriminator 1)
20401c3c:	204097b7          	lui	a5,0x20409
20401c40:	f087a603          	lw	a2,-248(a5) # 20408f08 <_exit+0x29a>
20401c44:	f0c7a683          	lw	a3,-244(a5)
20401c48:	f8842503          	lw	a0,-120(s0)
20401c4c:	f8c42583          	lw	a1,-116(s0)
20401c50:	1e9020ef          	jal	ra,20404638 <__ledf2>
20401c54:	87aa                	mv	a5,a0
20401c56:	0207d763          	bgez	a5,20401c84 <_ftoa+0x186>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:363
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
20401c5a:	401c                	lw	a5,0(s0)
20401c5c:	c03e                	sw	a5,0(sp)
20401c5e:	f8042883          	lw	a7,-128(s0)
20401c62:	f8442803          	lw	a6,-124(s0)
20401c66:	f8842703          	lw	a4,-120(s0)
20401c6a:	f8c42783          	lw	a5,-116(s0)
20401c6e:	f9042683          	lw	a3,-112(s0)
20401c72:	f9442603          	lw	a2,-108(s0)
20401c76:	f9842583          	lw	a1,-104(s0)
20401c7a:	f9c42503          	lw	a0,-100(s0)
20401c7e:	2991                	jal	204020d2 <_etoa>
20401c80:	87aa                	mv	a5,a0
20401c82:	a191                	j	204020c6 <_ftoa+0x5c8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:370
    return 0U;
#endif
  }

  // test for negative
  bool negative = false;
20401c84:	fe0405a3          	sb	zero,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:371
  if (value < 0) {
20401c88:	4601                	li	a2,0
20401c8a:	4681                	li	a3,0
20401c8c:	f8842503          	lw	a0,-120(s0)
20401c90:	f8c42583          	lw	a1,-116(s0)
20401c94:	1a5020ef          	jal	ra,20404638 <__ledf2>
20401c98:	87aa                	mv	a5,a0
20401c9a:	0207d363          	bgez	a5,20401cc0 <_ftoa+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:372
    negative = true;
20401c9e:	4785                	li	a5,1
20401ca0:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:373
    value = 0 - value;
20401ca4:	f8842603          	lw	a2,-120(s0)
20401ca8:	f8c42683          	lw	a3,-116(s0)
20401cac:	4501                	li	a0,0
20401cae:	4581                	li	a1,0
20401cb0:	669020ef          	jal	ra,20404b18 <__subdf3>
20401cb4:	87aa                	mv	a5,a0
20401cb6:	882e                	mv	a6,a1
20401cb8:	f8f42423          	sw	a5,-120(s0)
20401cbc:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:377
  }

  // set default precision, if not set explicitly
  if (!(flags & FLAGS_PRECISION)) {
20401cc0:	401c                	lw	a5,0(s0)
20401cc2:	4007f793          	andi	a5,a5,1024
20401cc6:	e79d                	bnez	a5,20401cf4 <_ftoa+0x1f6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:378
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
20401cc8:	4799                	li	a5,6
20401cca:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:381
  }
  // limit precision to 9, cause a prec >= 10 can lead to overflow errors
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20401cce:	a01d                	j	20401cf4 <_ftoa+0x1f6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:382
    buf[len++] = '0';
20401cd0:	fec42783          	lw	a5,-20(s0)
20401cd4:	00178713          	addi	a4,a5,1
20401cd8:	fee42623          	sw	a4,-20(s0)
20401cdc:	ff040713          	addi	a4,s0,-16
20401ce0:	97ba                	add	a5,a5,a4
20401ce2:	03000713          	li	a4,48
20401ce6:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:383
    prec--;
20401cea:	f8442783          	lw	a5,-124(s0)
20401cee:	17fd                	addi	a5,a5,-1
20401cf0:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:381
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20401cf4:	fec42703          	lw	a4,-20(s0)
20401cf8:	47fd                	li	a5,31
20401cfa:	00e7e763          	bltu	a5,a4,20401d08 <_ftoa+0x20a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:381 (discriminator 1)
20401cfe:	f8442703          	lw	a4,-124(s0)
20401d02:	47a5                	li	a5,9
20401d04:	fce7e6e3          	bltu	a5,a4,20401cd0 <_ftoa+0x1d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:386
  }

  int whole = (int)value;
20401d08:	f8842503          	lw	a0,-120(s0)
20401d0c:	f8c42583          	lw	a1,-116(s0)
20401d10:	3fe030ef          	jal	ra,2040510e <__fixdfsi>
20401d14:	87aa                	mv	a5,a0
20401d16:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:387
  double tmp = (value - whole) * pow10[prec];
20401d1a:	fe442503          	lw	a0,-28(s0)
20401d1e:	4b0030ef          	jal	ra,204051ce <__floatsidf>
20401d22:	87aa                	mv	a5,a0
20401d24:	882e                	mv	a6,a1
20401d26:	863e                	mv	a2,a5
20401d28:	86c2                	mv	a3,a6
20401d2a:	f8842503          	lw	a0,-120(s0)
20401d2e:	f8c42583          	lw	a1,-116(s0)
20401d32:	5e7020ef          	jal	ra,20404b18 <__subdf3>
20401d36:	87aa                	mv	a5,a0
20401d38:	882e                	mv	a6,a1
20401d3a:	853e                	mv	a0,a5
20401d3c:	85c2                	mv	a1,a6
20401d3e:	204097b7          	lui	a5,0x20409
20401d42:	16878713          	addi	a4,a5,360 # 20409168 <pow10.2193>
20401d46:	f8442783          	lw	a5,-124(s0)
20401d4a:	078e                	slli	a5,a5,0x3
20401d4c:	97ba                	add	a5,a5,a4
20401d4e:	0047a803          	lw	a6,4(a5)
20401d52:	439c                	lw	a5,0(a5)
20401d54:	863e                	mv	a2,a5
20401d56:	86c2                	mv	a3,a6
20401d58:	185020ef          	jal	ra,204046dc <__muldf3>
20401d5c:	87aa                	mv	a5,a0
20401d5e:	882e                	mv	a6,a1
20401d60:	fcf42423          	sw	a5,-56(s0)
20401d64:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:388
  unsigned long frac = (unsigned long)tmp;
20401d68:	fc842503          	lw	a0,-56(s0)
20401d6c:	fcc42583          	lw	a1,-52(s0)
20401d70:	402030ef          	jal	ra,20405172 <__fixunsdfsi>
20401d74:	87aa                	mv	a5,a0
20401d76:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:389
  diff = tmp - frac;
20401d7a:	fe042503          	lw	a0,-32(s0)
20401d7e:	4ba030ef          	jal	ra,20405238 <__floatunsidf>
20401d82:	87aa                	mv	a5,a0
20401d84:	882e                	mv	a6,a1
20401d86:	863e                	mv	a2,a5
20401d88:	86c2                	mv	a3,a6
20401d8a:	fc842503          	lw	a0,-56(s0)
20401d8e:	fcc42583          	lw	a1,-52(s0)
20401d92:	587020ef          	jal	ra,20404b18 <__subdf3>
20401d96:	87aa                	mv	a5,a0
20401d98:	882e                	mv	a6,a1
20401d9a:	fcf42823          	sw	a5,-48(s0)
20401d9e:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:391

  if (diff > 0.5) {
20401da2:	204097b7          	lui	a5,0x20409
20401da6:	f107a603          	lw	a2,-240(a5) # 20408f10 <_exit+0x2a2>
20401daa:	f147a683          	lw	a3,-236(a5)
20401dae:	fd042503          	lw	a0,-48(s0)
20401db2:	fd442583          	lw	a1,-44(s0)
20401db6:	7de020ef          	jal	ra,20404594 <__gedf2>
20401dba:	87aa                	mv	a5,a0
20401dbc:	04f05563          	blez	a5,20401e06 <_ftoa+0x308>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:392
    ++frac;
20401dc0:	fe042783          	lw	a5,-32(s0)
20401dc4:	0785                	addi	a5,a5,1
20401dc6:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:394
    // handle rollover, e.g. case 0.99 with prec 1 is 1.0
    if (frac >= pow10[prec]) {
20401dca:	fe042503          	lw	a0,-32(s0)
20401dce:	46a030ef          	jal	ra,20405238 <__floatunsidf>
20401dd2:	204097b7          	lui	a5,0x20409
20401dd6:	16878713          	addi	a4,a5,360 # 20409168 <pow10.2193>
20401dda:	f8442783          	lw	a5,-124(s0)
20401dde:	078e                	slli	a5,a5,0x3
20401de0:	97ba                	add	a5,a5,a4
20401de2:	0047a803          	lw	a6,4(a5)
20401de6:	439c                	lw	a5,0(a5)
20401de8:	863e                	mv	a2,a5
20401dea:	86c2                	mv	a3,a6
20401dec:	7a8020ef          	jal	ra,20404594 <__gedf2>
20401df0:	87aa                	mv	a5,a0
20401df2:	0407c563          	bltz	a5,20401e3c <_ftoa+0x33e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:395
      frac = 0;
20401df6:	fe042023          	sw	zero,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:396
      ++whole;
20401dfa:	fe442783          	lw	a5,-28(s0)
20401dfe:	0785                	addi	a5,a5,1
20401e00:	fef42223          	sw	a5,-28(s0)
20401e04:	a825                	j	20401e3c <_ftoa+0x33e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:399
    }
  }
  else if (diff < 0.5) {
20401e06:	204097b7          	lui	a5,0x20409
20401e0a:	f107a603          	lw	a2,-240(a5) # 20408f10 <_exit+0x2a2>
20401e0e:	f147a683          	lw	a3,-236(a5)
20401e12:	fd042503          	lw	a0,-48(s0)
20401e16:	fd442583          	lw	a1,-44(s0)
20401e1a:	01f020ef          	jal	ra,20404638 <__ledf2>
20401e1e:	87aa                	mv	a5,a0
20401e20:	0007ce63          	bltz	a5,20401e3c <_ftoa+0x33e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:401
  }
  else if ((frac == 0U) || (frac & 1U)) {
20401e24:	fe042783          	lw	a5,-32(s0)
20401e28:	c789                	beqz	a5,20401e32 <_ftoa+0x334>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:401 (discriminator 1)
20401e2a:	fe042783          	lw	a5,-32(s0)
20401e2e:	8b85                	andi	a5,a5,1
20401e30:	c791                	beqz	a5,20401e3c <_ftoa+0x33e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:403
    // if halfway, round up if odd OR if last digit is 0
    ++frac;
20401e32:	fe042783          	lw	a5,-32(s0)
20401e36:	0785                	addi	a5,a5,1
20401e38:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:406
  }

  if (prec == 0U) {
20401e3c:	f8442783          	lw	a5,-124(s0)
20401e40:	e7d9                	bnez	a5,20401ece <_ftoa+0x3d0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:407
    diff = value - (double)whole;
20401e42:	fe442503          	lw	a0,-28(s0)
20401e46:	388030ef          	jal	ra,204051ce <__floatsidf>
20401e4a:	87aa                	mv	a5,a0
20401e4c:	882e                	mv	a6,a1
20401e4e:	863e                	mv	a2,a5
20401e50:	86c2                	mv	a3,a6
20401e52:	f8842503          	lw	a0,-120(s0)
20401e56:	f8c42583          	lw	a1,-116(s0)
20401e5a:	4bf020ef          	jal	ra,20404b18 <__subdf3>
20401e5e:	87aa                	mv	a5,a0
20401e60:	882e                	mv	a6,a1
20401e62:	fcf42823          	sw	a5,-48(s0)
20401e66:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:408
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
20401e6a:	4485                	li	s1,1
20401e6c:	204097b7          	lui	a5,0x20409
20401e70:	f107a603          	lw	a2,-240(a5) # 20408f10 <_exit+0x2a2>
20401e74:	f147a683          	lw	a3,-236(a5)
20401e78:	fd042503          	lw	a0,-48(s0)
20401e7c:	fd442583          	lw	a1,-44(s0)
20401e80:	7b8020ef          	jal	ra,20404638 <__ledf2>
20401e84:	87aa                	mv	a5,a0
20401e86:	0007c363          	bltz	a5,20401e8c <_ftoa+0x38e>
20401e8a:	4481                	li	s1,0
20401e8c:	0ff4f793          	andi	a5,s1,255
20401e90:	0017c793          	xori	a5,a5,1
20401e94:	0ff7f793          	andi	a5,a5,255
20401e98:	e385                	bnez	a5,20401eb8 <_ftoa+0x3ba>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:408 (discriminator 2)
20401e9a:	204097b7          	lui	a5,0x20409
20401e9e:	f107a603          	lw	a2,-240(a5) # 20408f10 <_exit+0x2a2>
20401ea2:	f147a683          	lw	a3,-236(a5)
20401ea6:	fd042503          	lw	a0,-48(s0)
20401eaa:	fd442583          	lw	a1,-44(s0)
20401eae:	6e6020ef          	jal	ra,20404594 <__gedf2>
20401eb2:	87aa                	mv	a5,a0
20401eb4:	0cf05a63          	blez	a5,20401f88 <_ftoa+0x48a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:408 (discriminator 3)
20401eb8:	fe442783          	lw	a5,-28(s0)
20401ebc:	8b85                	andi	a5,a5,1
20401ebe:	10078663          	beqz	a5,20401fca <_ftoa+0x4cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:411
      // exactly 0.5 and ODD, then round up
      // 1.5 -> 2, but 2.5 -> 2
      ++whole;
20401ec2:	fe442783          	lw	a5,-28(s0)
20401ec6:	0785                	addi	a5,a5,1
20401ec8:	fef42223          	sw	a5,-28(s0)
20401ecc:	a8fd                	j	20401fca <_ftoa+0x4cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:415
    }
  }
  else {
    unsigned int count = prec;
20401ece:	f8442783          	lw	a5,-124(s0)
20401ed2:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:417
    // now do fractional part, as an unsigned number
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401ed6:	a0b1                	j	20401f22 <_ftoa+0x424>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:418
      --count;
20401ed8:	fdc42783          	lw	a5,-36(s0)
20401edc:	17fd                	addi	a5,a5,-1
20401ede:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:419
      buf[len++] = (char)(48U + (frac % 10U));
20401ee2:	fe042703          	lw	a4,-32(s0)
20401ee6:	47a9                	li	a5,10
20401ee8:	02f777b3          	remu	a5,a4,a5
20401eec:	0ff7f713          	andi	a4,a5,255
20401ef0:	fec42783          	lw	a5,-20(s0)
20401ef4:	00178693          	addi	a3,a5,1
20401ef8:	fed42623          	sw	a3,-20(s0)
20401efc:	03070713          	addi	a4,a4,48
20401f00:	0ff77713          	andi	a4,a4,255
20401f04:	ff040693          	addi	a3,s0,-16
20401f08:	97b6                	add	a5,a5,a3
20401f0a:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:420
      if (!(frac /= 10U)) {
20401f0e:	fe042703          	lw	a4,-32(s0)
20401f12:	47a9                	li	a5,10
20401f14:	02f757b3          	divu	a5,a4,a5
20401f18:	fef42023          	sw	a5,-32(s0)
20401f1c:	fe042783          	lw	a5,-32(s0)
20401f20:	c799                	beqz	a5,20401f2e <_ftoa+0x430>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:417
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401f22:	fec42703          	lw	a4,-20(s0)
20401f26:	47fd                	li	a5,31
20401f28:	fae7f8e3          	bgeu	a5,a4,20401ed8 <_ftoa+0x3da>
20401f2c:	a005                	j	20401f4c <_ftoa+0x44e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:421
        break;
20401f2e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:425
      }
    }
    // add extra 0s
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20401f30:	a831                	j	20401f4c <_ftoa+0x44e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:426
      buf[len++] = '0';
20401f32:	fec42783          	lw	a5,-20(s0)
20401f36:	00178713          	addi	a4,a5,1
20401f3a:	fee42623          	sw	a4,-20(s0)
20401f3e:	ff040713          	addi	a4,s0,-16
20401f42:	97ba                	add	a5,a5,a4
20401f44:	03000713          	li	a4,48
20401f48:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:425
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20401f4c:	fec42703          	lw	a4,-20(s0)
20401f50:	47fd                	li	a5,31
20401f52:	00e7e963          	bltu	a5,a4,20401f64 <_ftoa+0x466>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:425 (discriminator 1)
20401f56:	fdc42783          	lw	a5,-36(s0)
20401f5a:	fff78713          	addi	a4,a5,-1
20401f5e:	fce42e23          	sw	a4,-36(s0)
20401f62:	fbe1                	bnez	a5,20401f32 <_ftoa+0x434>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:428
    }
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
20401f64:	fec42703          	lw	a4,-20(s0)
20401f68:	47fd                	li	a5,31
20401f6a:	06e7e063          	bltu	a5,a4,20401fca <_ftoa+0x4cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:430
      // add decimal
      buf[len++] = '.';
20401f6e:	fec42783          	lw	a5,-20(s0)
20401f72:	00178713          	addi	a4,a5,1
20401f76:	fee42623          	sw	a4,-20(s0)
20401f7a:	ff040713          	addi	a4,s0,-16
20401f7e:	97ba                	add	a5,a5,a4
20401f80:	02e00713          	li	a4,46
20401f84:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:435 (discriminator 1)
    }
  }

  // do whole part, number is reversed
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401f88:	a089                	j	20401fca <_ftoa+0x4cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:436
    buf[len++] = (char)(48 + (whole % 10));
20401f8a:	fe442703          	lw	a4,-28(s0)
20401f8e:	47a9                	li	a5,10
20401f90:	02f767b3          	rem	a5,a4,a5
20401f94:	0ff7f713          	andi	a4,a5,255
20401f98:	fec42783          	lw	a5,-20(s0)
20401f9c:	00178693          	addi	a3,a5,1
20401fa0:	fed42623          	sw	a3,-20(s0)
20401fa4:	03070713          	addi	a4,a4,48
20401fa8:	0ff77713          	andi	a4,a4,255
20401fac:	ff040693          	addi	a3,s0,-16
20401fb0:	97b6                	add	a5,a5,a3
20401fb2:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:437
    if (!(whole /= 10)) {
20401fb6:	fe442703          	lw	a4,-28(s0)
20401fba:	47a9                	li	a5,10
20401fbc:	02f747b3          	div	a5,a4,a5
20401fc0:	fef42223          	sw	a5,-28(s0)
20401fc4:	fe442783          	lw	a5,-28(s0)
20401fc8:	c799                	beqz	a5,20401fd6 <_ftoa+0x4d8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:435
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20401fca:	fec42703          	lw	a4,-20(s0)
20401fce:	47fd                	li	a5,31
20401fd0:	fae7fde3          	bgeu	a5,a4,20401f8a <_ftoa+0x48c>
20401fd4:	a011                	j	20401fd8 <_ftoa+0x4da>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:438
      break;
20401fd6:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:443
    }
  }

  // pad leading zeros
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
20401fd8:	401c                	lw	a5,0(s0)
20401fda:	8b89                	andi	a5,a5,2
20401fdc:	ebb9                	bnez	a5,20402032 <_ftoa+0x534>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:443 (discriminator 1)
20401fde:	401c                	lw	a5,0(s0)
20401fe0:	8b85                	andi	a5,a5,1
20401fe2:	cba1                	beqz	a5,20402032 <_ftoa+0x534>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:444
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
20401fe4:	f8042783          	lw	a5,-128(s0)
20401fe8:	cb95                	beqz	a5,2040201c <_ftoa+0x51e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:444 (discriminator 1)
20401fea:	feb44783          	lbu	a5,-21(s0)
20401fee:	e781                	bnez	a5,20401ff6 <_ftoa+0x4f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:444 (discriminator 2)
20401ff0:	401c                	lw	a5,0(s0)
20401ff2:	8bb1                	andi	a5,a5,12
20401ff4:	c785                	beqz	a5,2040201c <_ftoa+0x51e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:445
      width--;
20401ff6:	f8042783          	lw	a5,-128(s0)
20401ffa:	17fd                	addi	a5,a5,-1
20401ffc:	f8f42023          	sw	a5,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:447
    }
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20402000:	a831                	j	2040201c <_ftoa+0x51e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:448
      buf[len++] = '0';
20402002:	fec42783          	lw	a5,-20(s0)
20402006:	00178713          	addi	a4,a5,1
2040200a:	fee42623          	sw	a4,-20(s0)
2040200e:	ff040713          	addi	a4,s0,-16
20402012:	97ba                	add	a5,a5,a4
20402014:	03000713          	li	a4,48
20402018:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:447
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
2040201c:	fec42703          	lw	a4,-20(s0)
20402020:	f8042783          	lw	a5,-128(s0)
20402024:	00f77763          	bgeu	a4,a5,20402032 <_ftoa+0x534>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:447 (discriminator 1)
20402028:	fec42703          	lw	a4,-20(s0)
2040202c:	47fd                	li	a5,31
2040202e:	fce7fae3          	bgeu	a5,a4,20402002 <_ftoa+0x504>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:452
    }
  }

  if (len < PRINTF_FTOA_BUFFER_SIZE) {
20402032:	fec42703          	lw	a4,-20(s0)
20402036:	47fd                	li	a5,31
20402038:	06e7e463          	bltu	a5,a4,204020a0 <_ftoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:453
    if (negative) {
2040203c:	feb44783          	lbu	a5,-21(s0)
20402040:	cf99                	beqz	a5,2040205e <_ftoa+0x560>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:454
      buf[len++] = '-';
20402042:	fec42783          	lw	a5,-20(s0)
20402046:	00178713          	addi	a4,a5,1
2040204a:	fee42623          	sw	a4,-20(s0)
2040204e:	ff040713          	addi	a4,s0,-16
20402052:	97ba                	add	a5,a5,a4
20402054:	02d00713          	li	a4,45
20402058:	fae78c23          	sb	a4,-72(a5)
2040205c:	a091                	j	204020a0 <_ftoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:456
    }
    else if (flags & FLAGS_PLUS) {
2040205e:	401c                	lw	a5,0(s0)
20402060:	8b91                	andi	a5,a5,4
20402062:	cf99                	beqz	a5,20402080 <_ftoa+0x582>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:457
      buf[len++] = '+';  // ignore the space if the '+' exists
20402064:	fec42783          	lw	a5,-20(s0)
20402068:	00178713          	addi	a4,a5,1
2040206c:	fee42623          	sw	a4,-20(s0)
20402070:	ff040713          	addi	a4,s0,-16
20402074:	97ba                	add	a5,a5,a4
20402076:	02b00713          	li	a4,43
2040207a:	fae78c23          	sb	a4,-72(a5)
2040207e:	a00d                	j	204020a0 <_ftoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:459
    }
    else if (flags & FLAGS_SPACE) {
20402080:	401c                	lw	a5,0(s0)
20402082:	8ba1                	andi	a5,a5,8
20402084:	cf91                	beqz	a5,204020a0 <_ftoa+0x5a2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:460
      buf[len++] = ' ';
20402086:	fec42783          	lw	a5,-20(s0)
2040208a:	00178713          	addi	a4,a5,1
2040208e:	fee42623          	sw	a4,-20(s0)
20402092:	ff040713          	addi	a4,s0,-16
20402096:	97ba                	add	a5,a5,a4
20402098:	02000713          	li	a4,32
2040209c:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:464
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
204020a0:	fa840713          	addi	a4,s0,-88
204020a4:	00042883          	lw	a7,0(s0)
204020a8:	f8042803          	lw	a6,-128(s0)
204020ac:	fec42783          	lw	a5,-20(s0)
204020b0:	f9042683          	lw	a3,-112(s0)
204020b4:	f9442603          	lw	a2,-108(s0)
204020b8:	f9842583          	lw	a1,-104(s0)
204020bc:	f9c42503          	lw	a0,-100(s0)
204020c0:	ca6ff0ef          	jal	ra,20401566 <_out_rev>
204020c4:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:465 (discriminator 3)
}
204020c6:	853e                	mv	a0,a5
204020c8:	40ba                	lw	ra,140(sp)
204020ca:	442a                	lw	s0,136(sp)
204020cc:	449a                	lw	s1,132(sp)
204020ce:	6149                	addi	sp,sp,144
204020d0:	8082                	ret

204020d2 <_etoa>:
_etoa():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:471


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
204020d2:	7131                	addi	sp,sp,-192
204020d4:	df06                	sw	ra,188(sp)
204020d6:	dd22                	sw	s0,184(sp)
204020d8:	db26                	sw	s1,180(sp)
204020da:	d94a                	sw	s2,176(sp)
204020dc:	d74e                	sw	s3,172(sp)
204020de:	d552                	sw	s4,168(sp)
204020e0:	d356                	sw	s5,164(sp)
204020e2:	d15a                	sw	s6,160(sp)
204020e4:	cf5e                	sw	s7,156(sp)
204020e6:	cd62                	sw	s8,152(sp)
204020e8:	cb66                	sw	s9,148(sp)
204020ea:	c96a                	sw	s10,144(sp)
204020ec:	c76e                	sw	s11,140(sp)
204020ee:	0180                	addi	s0,sp,192
204020f0:	f6a42e23          	sw	a0,-132(s0)
204020f4:	f6b42c23          	sw	a1,-136(s0)
204020f8:	f6c42a23          	sw	a2,-140(s0)
204020fc:	f6d42823          	sw	a3,-144(s0)
20402100:	f6e42423          	sw	a4,-152(s0)
20402104:	f6f42623          	sw	a5,-148(s0)
20402108:	f7042223          	sw	a6,-156(s0)
2040210c:	f7142023          	sw	a7,-160(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:473
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
20402110:	f6842603          	lw	a2,-152(s0)
20402114:	f6c42683          	lw	a3,-148(s0)
20402118:	f6842503          	lw	a0,-152(s0)
2040211c:	f6c42583          	lw	a1,-148(s0)
20402120:	40a020ef          	jal	ra,2040452a <__eqdf2>
20402124:	87aa                	mv	a5,a0
20402126:	ef9d                	bnez	a5,20402164 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:473 (discriminator 1)
20402128:	204097b7          	lui	a5,0x20409
2040212c:	ef87a603          	lw	a2,-264(a5) # 20408ef8 <_exit+0x28a>
20402130:	efc7a683          	lw	a3,-260(a5)
20402134:	f6842503          	lw	a0,-152(s0)
20402138:	f6c42583          	lw	a1,-148(s0)
2040213c:	458020ef          	jal	ra,20404594 <__gedf2>
20402140:	87aa                	mv	a5,a0
20402142:	02f04163          	bgtz	a5,20402164 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:473 (discriminator 2)
20402146:	204097b7          	lui	a5,0x20409
2040214a:	ef07a603          	lw	a2,-272(a5) # 20408ef0 <_exit+0x282>
2040214e:	ef47a683          	lw	a3,-268(a5)
20402152:	f6842503          	lw	a0,-152(s0)
20402156:	f6c42583          	lw	a1,-148(s0)
2040215a:	4de020ef          	jal	ra,20404638 <__ledf2>
2040215e:	87aa                	mv	a5,a0
20402160:	0207d863          	bgez	a5,20402190 <_etoa+0xbe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:474
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
20402164:	401c                	lw	a5,0(s0)
20402166:	c03e                	sw	a5,0(sp)
20402168:	f6042883          	lw	a7,-160(s0)
2040216c:	f6442803          	lw	a6,-156(s0)
20402170:	f6842703          	lw	a4,-152(s0)
20402174:	f6c42783          	lw	a5,-148(s0)
20402178:	f7042683          	lw	a3,-144(s0)
2040217c:	f7442603          	lw	a2,-140(s0)
20402180:	f7842583          	lw	a1,-136(s0)
20402184:	f7c42503          	lw	a0,-132(s0)
20402188:	977ff0ef          	jal	ra,20401afe <_ftoa>
2040218c:	87aa                	mv	a5,a0
2040218e:	ab49                	j	20402720 <_etoa+0x64e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:478
  }

  // determine the sign
  const bool negative = value < 0;
20402190:	4485                	li	s1,1
20402192:	4601                	li	a2,0
20402194:	4681                	li	a3,0
20402196:	f6842503          	lw	a0,-152(s0)
2040219a:	f6c42583          	lw	a1,-148(s0)
2040219e:	49a020ef          	jal	ra,20404638 <__ledf2>
204021a2:	87aa                	mv	a5,a0
204021a4:	0007c363          	bltz	a5,204021aa <_etoa+0xd8>
204021a8:	4481                	li	s1,0
204021aa:	fa9409a3          	sb	s1,-77(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:479
  if (negative) {
204021ae:	fb344783          	lbu	a5,-77(s0)
204021b2:	cf81                	beqz	a5,204021ca <_etoa+0xf8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:480
    value = -value;
204021b4:	f6842783          	lw	a5,-152(s0)
204021b8:	f6f42423          	sw	a5,-152(s0)
204021bc:	f6c42703          	lw	a4,-148(s0)
204021c0:	800007b7          	lui	a5,0x80000
204021c4:	8fb9                	xor	a5,a5,a4
204021c6:	f6f42623          	sw	a5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:484
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
204021ca:	401c                	lw	a5,0(s0)
204021cc:	4007f793          	andi	a5,a5,1024
204021d0:	e781                	bnez	a5,204021d8 <_etoa+0x106>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:485
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
204021d2:	4799                	li	a5,6
204021d4:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:495
  union {
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
204021d8:	f6842783          	lw	a5,-152(s0)
204021dc:	f6c42803          	lw	a6,-148(s0)
204021e0:	f8f42423          	sw	a5,-120(s0)
204021e4:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:496
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
204021e8:	f8842783          	lw	a5,-120(s0)
204021ec:	f8c42803          	lw	a6,-116(s0)
204021f0:	01485793          	srli	a5,a6,0x14
204021f4:	f4f42c23          	sw	a5,-168(s0)
204021f8:	f4042e23          	sw	zero,-164(s0)
204021fc:	f5842783          	lw	a5,-168(s0)
20402200:	7ff7f793          	andi	a5,a5,2047
20402204:	c0178793          	addi	a5,a5,-1023 # 7ffffc01 <metal_segment_heap_target_end+0xffffe72d>
20402208:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:497
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
2040220c:	f8842783          	lw	a5,-120(s0)
20402210:	f8c42803          	lw	a6,-116(s0)
20402214:	fff7f913          	andi	s2,a5,-1
20402218:	00100737          	lui	a4,0x100
2040221c:	177d                	addi	a4,a4,-1
2040221e:	00e879b3          	and	s3,a6,a4
20402222:	00096b13          	ori	s6,s2,0
20402226:	3ff007b7          	lui	a5,0x3ff00
2040222a:	00f9ebb3          	or	s7,s3,a5
2040222e:	f9642423          	sw	s6,-120(s0)
20402232:	f9742623          	sw	s7,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:499
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
20402236:	fac42503          	lw	a0,-84(s0)
2040223a:	795020ef          	jal	ra,204051ce <__floatsidf>
2040223e:	204097b7          	lui	a5,0x20409
20402242:	f187a603          	lw	a2,-232(a5) # 20408f18 <_exit+0x2aa>
20402246:	f1c7a683          	lw	a3,-228(a5)
2040224a:	492020ef          	jal	ra,204046dc <__muldf3>
2040224e:	87aa                	mv	a5,a0
20402250:	882e                	mv	a6,a1
20402252:	853e                	mv	a0,a5
20402254:	85c2                	mv	a1,a6
20402256:	204097b7          	lui	a5,0x20409
2040225a:	f207a603          	lw	a2,-224(a5) # 20408f20 <_exit+0x2b2>
2040225e:	f247a683          	lw	a3,-220(a5)
20402262:	7a0010ef          	jal	ra,20403a02 <__adddf3>
20402266:	87aa                	mv	a5,a0
20402268:	882e                	mv	a6,a1
2040226a:	893e                	mv	s2,a5
2040226c:	89c2                	mv	s3,a6
2040226e:	f8842783          	lw	a5,-120(s0)
20402272:	f8c42803          	lw	a6,-116(s0)
20402276:	20409737          	lui	a4,0x20409
2040227a:	f2872603          	lw	a2,-216(a4) # 20408f28 <_exit+0x2ba>
2040227e:	f2c72683          	lw	a3,-212(a4)
20402282:	853e                	mv	a0,a5
20402284:	85c2                	mv	a1,a6
20402286:	093020ef          	jal	ra,20404b18 <__subdf3>
2040228a:	87aa                	mv	a5,a0
2040228c:	882e                	mv	a6,a1
2040228e:	853e                	mv	a0,a5
20402290:	85c2                	mv	a1,a6
20402292:	204097b7          	lui	a5,0x20409
20402296:	f307a603          	lw	a2,-208(a5) # 20408f30 <_exit+0x2c2>
2040229a:	f347a683          	lw	a3,-204(a5)
2040229e:	43e020ef          	jal	ra,204046dc <__muldf3>
204022a2:	87aa                	mv	a5,a0
204022a4:	882e                	mv	a6,a1
204022a6:	863e                	mv	a2,a5
204022a8:	86c2                	mv	a3,a6
204022aa:	854a                	mv	a0,s2
204022ac:	85ce                	mv	a1,s3
204022ae:	754010ef          	jal	ra,20403a02 <__adddf3>
204022b2:	87aa                	mv	a5,a0
204022b4:	882e                	mv	a6,a1
204022b6:	853e                	mv	a0,a5
204022b8:	85c2                	mv	a1,a6
204022ba:	655020ef          	jal	ra,2040510e <__fixdfsi>
204022be:	87aa                	mv	a5,a0
204022c0:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:501
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
204022c4:	fbc42503          	lw	a0,-68(s0)
204022c8:	707020ef          	jal	ra,204051ce <__floatsidf>
204022cc:	204097b7          	lui	a5,0x20409
204022d0:	f387a603          	lw	a2,-200(a5) # 20408f38 <_exit+0x2ca>
204022d4:	f3c7a683          	lw	a3,-196(a5)
204022d8:	404020ef          	jal	ra,204046dc <__muldf3>
204022dc:	87aa                	mv	a5,a0
204022de:	882e                	mv	a6,a1
204022e0:	853e                	mv	a0,a5
204022e2:	85c2                	mv	a1,a6
204022e4:	204097b7          	lui	a5,0x20409
204022e8:	f107a603          	lw	a2,-240(a5) # 20408f10 <_exit+0x2a2>
204022ec:	f147a683          	lw	a3,-236(a5)
204022f0:	712010ef          	jal	ra,20403a02 <__adddf3>
204022f4:	87aa                	mv	a5,a0
204022f6:	882e                	mv	a6,a1
204022f8:	853e                	mv	a0,a5
204022fa:	85c2                	mv	a1,a6
204022fc:	613020ef          	jal	ra,2040510e <__fixdfsi>
20402300:	87aa                	mv	a5,a0
20402302:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:502
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
20402306:	fbc42503          	lw	a0,-68(s0)
2040230a:	6c5020ef          	jal	ra,204051ce <__floatsidf>
2040230e:	204097b7          	lui	a5,0x20409
20402312:	f407a603          	lw	a2,-192(a5) # 20408f40 <_exit+0x2d2>
20402316:	f447a683          	lw	a3,-188(a5)
2040231a:	3c2020ef          	jal	ra,204046dc <__muldf3>
2040231e:	87aa                	mv	a5,a0
20402320:	882e                	mv	a6,a1
20402322:	893e                	mv	s2,a5
20402324:	89c2                	mv	s3,a6
20402326:	fac42503          	lw	a0,-84(s0)
2040232a:	6a5020ef          	jal	ra,204051ce <__floatsidf>
2040232e:	204097b7          	lui	a5,0x20409
20402332:	f487a603          	lw	a2,-184(a5) # 20408f48 <_exit+0x2da>
20402336:	f4c7a683          	lw	a3,-180(a5)
2040233a:	3a2020ef          	jal	ra,204046dc <__muldf3>
2040233e:	87aa                	mv	a5,a0
20402340:	882e                	mv	a6,a1
20402342:	863e                	mv	a2,a5
20402344:	86c2                	mv	a3,a6
20402346:	854a                	mv	a0,s2
20402348:	85ce                	mv	a1,s3
2040234a:	7ce020ef          	jal	ra,20404b18 <__subdf3>
2040234e:	87aa                	mv	a5,a0
20402350:	882e                	mv	a6,a1
20402352:	faf42023          	sw	a5,-96(s0)
20402356:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:503
  const double z2 = z * z;
2040235a:	fa042603          	lw	a2,-96(s0)
2040235e:	fa442683          	lw	a3,-92(s0)
20402362:	fa042503          	lw	a0,-96(s0)
20402366:	fa442583          	lw	a1,-92(s0)
2040236a:	372020ef          	jal	ra,204046dc <__muldf3>
2040236e:	87aa                	mv	a5,a0
20402370:	882e                	mv	a6,a1
20402372:	f8f42c23          	sw	a5,-104(s0)
20402376:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:504
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
2040237a:	fac42783          	lw	a5,-84(s0)
2040237e:	3ff78793          	addi	a5,a5,1023
20402382:	8d3e                	mv	s10,a5
20402384:	87fd                	srai	a5,a5,0x1f
20402386:	8dbe                	mv	s11,a5
20402388:	014d1c93          	slli	s9,s10,0x14
2040238c:	4c01                	li	s8,0
2040238e:	f9842423          	sw	s8,-120(s0)
20402392:	f9942623          	sw	s9,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:506
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
20402396:	f8842903          	lw	s2,-120(s0)
2040239a:	f8c42983          	lw	s3,-116(s0)
2040239e:	fa042783          	lw	a5,-96(s0)
204023a2:	fa442803          	lw	a6,-92(s0)
204023a6:	863e                	mv	a2,a5
204023a8:	86c2                	mv	a3,a6
204023aa:	853e                	mv	a0,a5
204023ac:	85c2                	mv	a1,a6
204023ae:	654010ef          	jal	ra,20403a02 <__adddf3>
204023b2:	87aa                	mv	a5,a0
204023b4:	882e                	mv	a6,a1
204023b6:	8b3e                	mv	s6,a5
204023b8:	8bc2                	mv	s7,a6
204023ba:	204097b7          	lui	a5,0x20409
204023be:	fa042603          	lw	a2,-96(s0)
204023c2:	fa442683          	lw	a3,-92(s0)
204023c6:	f507a503          	lw	a0,-176(a5) # 20408f50 <_exit+0x2e2>
204023ca:	f547a583          	lw	a1,-172(a5)
204023ce:	74a020ef          	jal	ra,20404b18 <__subdf3>
204023d2:	87aa                	mv	a5,a0
204023d4:	882e                	mv	a6,a1
204023d6:	8c3e                	mv	s8,a5
204023d8:	8cc2                	mv	s9,a6
204023da:	204097b7          	lui	a5,0x20409
204023de:	f587a603          	lw	a2,-168(a5) # 20408f58 <_exit+0x2ea>
204023e2:	f5c7a683          	lw	a3,-164(a5)
204023e6:	f9842503          	lw	a0,-104(s0)
204023ea:	f9c42583          	lw	a1,-100(s0)
204023ee:	407010ef          	jal	ra,20403ff4 <__divdf3>
204023f2:	87aa                	mv	a5,a0
204023f4:	882e                	mv	a6,a1
204023f6:	853e                	mv	a0,a5
204023f8:	85c2                	mv	a1,a6
204023fa:	204097b7          	lui	a5,0x20409
204023fe:	f607a603          	lw	a2,-160(a5) # 20408f60 <_exit+0x2f2>
20402402:	f647a683          	lw	a3,-156(a5)
20402406:	5fc010ef          	jal	ra,20403a02 <__adddf3>
2040240a:	87aa                	mv	a5,a0
2040240c:	882e                	mv	a6,a1
2040240e:	863e                	mv	a2,a5
20402410:	86c2                	mv	a3,a6
20402412:	f9842503          	lw	a0,-104(s0)
20402416:	f9c42583          	lw	a1,-100(s0)
2040241a:	3db010ef          	jal	ra,20403ff4 <__divdf3>
2040241e:	87aa                	mv	a5,a0
20402420:	882e                	mv	a6,a1
20402422:	853e                	mv	a0,a5
20402424:	85c2                	mv	a1,a6
20402426:	204097b7          	lui	a5,0x20409
2040242a:	f687a603          	lw	a2,-152(a5) # 20408f68 <_exit+0x2fa>
2040242e:	f6c7a683          	lw	a3,-148(a5)
20402432:	5d0010ef          	jal	ra,20403a02 <__adddf3>
20402436:	87aa                	mv	a5,a0
20402438:	882e                	mv	a6,a1
2040243a:	863e                	mv	a2,a5
2040243c:	86c2                	mv	a3,a6
2040243e:	f9842503          	lw	a0,-104(s0)
20402442:	f9c42583          	lw	a1,-100(s0)
20402446:	3af010ef          	jal	ra,20403ff4 <__divdf3>
2040244a:	87aa                	mv	a5,a0
2040244c:	882e                	mv	a6,a1
2040244e:	863e                	mv	a2,a5
20402450:	86c2                	mv	a3,a6
20402452:	8562                	mv	a0,s8
20402454:	85e6                	mv	a1,s9
20402456:	5ac010ef          	jal	ra,20403a02 <__adddf3>
2040245a:	87aa                	mv	a5,a0
2040245c:	882e                	mv	a6,a1
2040245e:	863e                	mv	a2,a5
20402460:	86c2                	mv	a3,a6
20402462:	855a                	mv	a0,s6
20402464:	85de                	mv	a1,s7
20402466:	38f010ef          	jal	ra,20403ff4 <__divdf3>
2040246a:	87aa                	mv	a5,a0
2040246c:	882e                	mv	a6,a1
2040246e:	853e                	mv	a0,a5
20402470:	85c2                	mv	a1,a6
20402472:	204097b7          	lui	a5,0x20409
20402476:	f707a603          	lw	a2,-144(a5) # 20408f70 <_exit+0x302>
2040247a:	f747a683          	lw	a3,-140(a5)
2040247e:	584010ef          	jal	ra,20403a02 <__adddf3>
20402482:	87aa                	mv	a5,a0
20402484:	882e                	mv	a6,a1
20402486:	863e                	mv	a2,a5
20402488:	86c2                	mv	a3,a6
2040248a:	854a                	mv	a0,s2
2040248c:	85ce                	mv	a1,s3
2040248e:	24e020ef          	jal	ra,204046dc <__muldf3>
20402492:	87aa                	mv	a5,a0
20402494:	882e                	mv	a6,a1
20402496:	f8f42423          	sw	a5,-120(s0)
2040249a:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:508
  // correct for rounding errors
  if (value < conv.F) {
2040249e:	f8842783          	lw	a5,-120(s0)
204024a2:	f8c42803          	lw	a6,-116(s0)
204024a6:	863e                	mv	a2,a5
204024a8:	86c2                	mv	a3,a6
204024aa:	f6842503          	lw	a0,-152(s0)
204024ae:	f6c42583          	lw	a1,-148(s0)
204024b2:	186020ef          	jal	ra,20404638 <__ledf2>
204024b6:	87aa                	mv	a5,a0
204024b8:	0207db63          	bgez	a5,204024ee <_etoa+0x41c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:509
    expval--;
204024bc:	fbc42783          	lw	a5,-68(s0)
204024c0:	17fd                	addi	a5,a5,-1
204024c2:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:510
    conv.F /= 10;
204024c6:	f8842783          	lw	a5,-120(s0)
204024ca:	f8c42803          	lw	a6,-116(s0)
204024ce:	20409737          	lui	a4,0x20409
204024d2:	f6072603          	lw	a2,-160(a4) # 20408f60 <_exit+0x2f2>
204024d6:	f6472683          	lw	a3,-156(a4)
204024da:	853e                	mv	a0,a5
204024dc:	85c2                	mv	a1,a6
204024de:	317010ef          	jal	ra,20403ff4 <__divdf3>
204024e2:	87aa                	mv	a5,a0
204024e4:	882e                	mv	a6,a1
204024e6:	f8f42423          	sw	a5,-120(s0)
204024ea:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
204024ee:	fbc42703          	lw	a4,-68(s0)
204024f2:	06300793          	li	a5,99
204024f6:	00e7ca63          	blt	a5,a4,2040250a <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 1)
204024fa:	fbc42703          	lw	a4,-68(s0)
204024fe:	f9d00793          	li	a5,-99
20402502:	00f74463          	blt	a4,a5,2040250a <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 3)
20402506:	4791                	li	a5,4
20402508:	a011                	j	2040250c <_etoa+0x43a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 4)
2040250a:	4795                	li	a5,5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 6)
2040250c:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:517 (discriminator 6)

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
20402510:	4018                	lw	a4,0(s0)
20402512:	6785                	lui	a5,0x1
20402514:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402518:	8ff9                	and	a5,a5,a4
2040251a:	c7d1                	beqz	a5,204025a6 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:519
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
2040251c:	204097b7          	lui	a5,0x20409
20402520:	f787a603          	lw	a2,-136(a5) # 20408f78 <_exit+0x30a>
20402524:	f7c7a683          	lw	a3,-132(a5)
20402528:	f6842503          	lw	a0,-152(s0)
2040252c:	f6c42583          	lw	a1,-148(s0)
20402530:	064020ef          	jal	ra,20404594 <__gedf2>
20402534:	87aa                	mv	a5,a0
20402536:	0407cc63          	bltz	a5,2040258e <_etoa+0x4bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:519 (discriminator 1)
2040253a:	204097b7          	lui	a5,0x20409
2040253e:	f807a603          	lw	a2,-128(a5) # 20408f80 <_exit+0x312>
20402542:	f847a683          	lw	a3,-124(a5)
20402546:	f6842503          	lw	a0,-152(s0)
2040254a:	f6c42583          	lw	a1,-148(s0)
2040254e:	0ea020ef          	jal	ra,20404638 <__ledf2>
20402552:	87aa                	mv	a5,a0
20402554:	0207dd63          	bgez	a5,2040258e <_etoa+0x4bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:520
      if ((int)prec > expval) {
20402558:	f6442783          	lw	a5,-156(s0)
2040255c:	fbc42703          	lw	a4,-68(s0)
20402560:	00f75c63          	bge	a4,a5,20402578 <_etoa+0x4a6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:521
        prec = (unsigned)((int)prec - expval - 1);
20402564:	f6442703          	lw	a4,-156(s0)
20402568:	fbc42783          	lw	a5,-68(s0)
2040256c:	40f707b3          	sub	a5,a4,a5
20402570:	17fd                	addi	a5,a5,-1
20402572:	f6f42223          	sw	a5,-156(s0)
20402576:	a019                	j	2040257c <_etoa+0x4aa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:524
      }
      else {
        prec = 0;
20402578:	f6042223          	sw	zero,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:526
      }
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
2040257c:	401c                	lw	a5,0(s0)
2040257e:	4007e793          	ori	a5,a5,1024
20402582:	c01c                	sw	a5,0(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:528
      // no characters in exponent
      minwidth = 0U;
20402584:	fa042c23          	sw	zero,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:529
      expval   = 0;
20402588:	fa042e23          	sw	zero,-68(s0)
2040258c:	a829                	j	204025a6 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:533
    }
    else {
      // we use one sigfig for the whole part
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
2040258e:	f6442783          	lw	a5,-156(s0)
20402592:	cb91                	beqz	a5,204025a6 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:533 (discriminator 1)
20402594:	401c                	lw	a5,0(s0)
20402596:	4007f793          	andi	a5,a5,1024
2040259a:	c791                	beqz	a5,204025a6 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:534
        --prec;
2040259c:	f6442783          	lw	a5,-156(s0)
204025a0:	17fd                	addi	a5,a5,-1
204025a2:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:540
      }
    }
  }

  // will everything fit?
  unsigned int fwidth = width;
204025a6:	f6042783          	lw	a5,-160(s0)
204025aa:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:541
  if (width > minwidth) {
204025ae:	f6042703          	lw	a4,-160(s0)
204025b2:	fb842783          	lw	a5,-72(s0)
204025b6:	00e7fb63          	bgeu	a5,a4,204025cc <_etoa+0x4fa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:543
    // we didn't fall-back so subtract the characters required for the exponent
    fwidth -= minwidth;
204025ba:	fb442703          	lw	a4,-76(s0)
204025be:	fb842783          	lw	a5,-72(s0)
204025c2:	40f707b3          	sub	a5,a4,a5
204025c6:	faf42a23          	sw	a5,-76(s0)
204025ca:	a019                	j	204025d0 <_etoa+0x4fe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:546
  } else {
    // not enough characters, so go back to default sizing
    fwidth = 0U;
204025cc:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:548
  }
  if ((flags & FLAGS_LEFT) && minwidth) {
204025d0:	401c                	lw	a5,0(s0)
204025d2:	8b89                	andi	a5,a5,2
204025d4:	c791                	beqz	a5,204025e0 <_etoa+0x50e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:548 (discriminator 1)
204025d6:	fb842783          	lw	a5,-72(s0)
204025da:	c399                	beqz	a5,204025e0 <_etoa+0x50e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:550
    // if we're padding on the right, DON'T pad the floating part
    fwidth = 0U;
204025dc:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:554
  }

  // rescale the float value
  if (expval) {
204025e0:	fbc42783          	lw	a5,-68(s0)
204025e4:	c39d                	beqz	a5,2040260a <_etoa+0x538>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:555
    value /= conv.F;
204025e6:	f8842783          	lw	a5,-120(s0)
204025ea:	f8c42803          	lw	a6,-116(s0)
204025ee:	863e                	mv	a2,a5
204025f0:	86c2                	mv	a3,a6
204025f2:	f6842503          	lw	a0,-152(s0)
204025f6:	f6c42583          	lw	a1,-148(s0)
204025fa:	1fb010ef          	jal	ra,20403ff4 <__divdf3>
204025fe:	87aa                	mv	a5,a0
20402600:	882e                	mv	a6,a1
20402602:	f6f42423          	sw	a5,-152(s0)
20402606:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:559
  }

  // output the floating part
  const size_t start_idx = idx;
2040260a:	f7442783          	lw	a5,-140(s0)
2040260e:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
20402612:	fb344783          	lbu	a5,-77(s0)
20402616:	cb91                	beqz	a5,2040262a <_etoa+0x558>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560 (discriminator 1)
20402618:	f6842a03          	lw	s4,-152(s0)
2040261c:	f6c42703          	lw	a4,-148(s0)
20402620:	800007b7          	lui	a5,0x80000
20402624:	00f74ab3          	xor	s5,a4,a5
20402628:	a029                	j	20402632 <_etoa+0x560>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560 (discriminator 2)
2040262a:	f6842a03          	lw	s4,-152(s0)
2040262e:	f6c42a83          	lw	s5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560 (discriminator 4)
20402632:	4018                	lw	a4,0(s0)
20402634:	77fd                	lui	a5,0xfffff
20402636:	7ff78793          	addi	a5,a5,2047 # fffff7ff <metal_segment_heap_target_end+0x7fffe32b>
2040263a:	8ff9                	and	a5,a5,a4
2040263c:	c03e                	sw	a5,0(sp)
2040263e:	fb442883          	lw	a7,-76(s0)
20402642:	f6442803          	lw	a6,-156(s0)
20402646:	8752                	mv	a4,s4
20402648:	87d6                	mv	a5,s5
2040264a:	f7042683          	lw	a3,-144(s0)
2040264e:	f7442603          	lw	a2,-140(s0)
20402652:	f7842583          	lw	a1,-136(s0)
20402656:	f7c42503          	lw	a0,-132(s0)
2040265a:	ca4ff0ef          	jal	ra,20401afe <_ftoa>
2040265e:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:563 (discriminator 4)

  // output the exponent part
  if (minwidth) {
20402662:	fb842783          	lw	a5,-72(s0)
20402666:	cbdd                	beqz	a5,2040271c <_etoa+0x64a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565
    // output the exponential symbol
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
20402668:	401c                	lw	a5,0(s0)
2040266a:	0207f793          	andi	a5,a5,32
2040266e:	c781                	beqz	a5,20402676 <_etoa+0x5a4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565 (discriminator 1)
20402670:	04500793          	li	a5,69
20402674:	a019                	j	2040267a <_etoa+0x5a8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565 (discriminator 2)
20402676:	06500793          	li	a5,101
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565 (discriminator 4)
2040267a:	f7442703          	lw	a4,-140(s0)
2040267e:	00170693          	addi	a3,a4,1
20402682:	f6d42a23          	sw	a3,-140(s0)
20402686:	f7c42803          	lw	a6,-132(s0)
2040268a:	f7042683          	lw	a3,-144(s0)
2040268e:	863a                	mv	a2,a4
20402690:	f7842583          	lw	a1,-136(s0)
20402694:	853e                	mv	a0,a5
20402696:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:567 (discriminator 4)
    // output the exponent value
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
20402698:	fbc42783          	lw	a5,-68(s0)
2040269c:	41f7d713          	srai	a4,a5,0x1f
204026a0:	fbc42783          	lw	a5,-68(s0)
204026a4:	8fb9                	xor	a5,a5,a4
204026a6:	8f99                	sub	a5,a5,a4
204026a8:	863e                	mv	a2,a5
204026aa:	fbc42783          	lw	a5,-68(s0)
204026ae:	83fd                	srli	a5,a5,0x1f
204026b0:	0ff7f693          	andi	a3,a5,255
204026b4:	fb842783          	lw	a5,-72(s0)
204026b8:	17fd                	addi	a5,a5,-1
204026ba:	4715                	li	a4,5
204026bc:	c23a                	sw	a4,4(sp)
204026be:	c03e                	sw	a5,0(sp)
204026c0:	4881                	li	a7,0
204026c2:	4829                	li	a6,10
204026c4:	87b6                	mv	a5,a3
204026c6:	8732                	mv	a4,a2
204026c8:	f7042683          	lw	a3,-144(s0)
204026cc:	f7442603          	lw	a2,-140(s0)
204026d0:	f7842583          	lw	a1,-136(s0)
204026d4:	f7c42503          	lw	a0,-132(s0)
204026d8:	9f4ff0ef          	jal	ra,204018cc <_ntoa_long>
204026dc:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:569 (discriminator 4)
    // might need to right-pad spaces
    if (flags & FLAGS_LEFT) {
204026e0:	401c                	lw	a5,0(s0)
204026e2:	8b89                	andi	a5,a5,2
204026e4:	cf85                	beqz	a5,2040271c <_etoa+0x64a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:570
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
204026e6:	a00d                	j	20402708 <_etoa+0x636>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:570 (discriminator 2)
204026e8:	f7442783          	lw	a5,-140(s0)
204026ec:	00178713          	addi	a4,a5,1
204026f0:	f6e42a23          	sw	a4,-140(s0)
204026f4:	f7c42703          	lw	a4,-132(s0)
204026f8:	f7042683          	lw	a3,-144(s0)
204026fc:	863e                	mv	a2,a5
204026fe:	f7842583          	lw	a1,-136(s0)
20402702:	02000513          	li	a0,32
20402706:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:570 (discriminator 1)
20402708:	f7442703          	lw	a4,-140(s0)
2040270c:	f9442783          	lw	a5,-108(s0)
20402710:	40f707b3          	sub	a5,a4,a5
20402714:	f6042703          	lw	a4,-160(s0)
20402718:	fce7e8e3          	bltu	a5,a4,204026e8 <_etoa+0x616>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:573
    }
  }
  return idx;
2040271c:	f7442783          	lw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:574 (discriminator 1)
}
20402720:	853e                	mv	a0,a5
20402722:	50fa                	lw	ra,188(sp)
20402724:	546a                	lw	s0,184(sp)
20402726:	54da                	lw	s1,180(sp)
20402728:	594a                	lw	s2,176(sp)
2040272a:	59ba                	lw	s3,172(sp)
2040272c:	5a2a                	lw	s4,168(sp)
2040272e:	5a9a                	lw	s5,164(sp)
20402730:	5b0a                	lw	s6,160(sp)
20402732:	4bfa                	lw	s7,156(sp)
20402734:	4c6a                	lw	s8,152(sp)
20402736:	4cda                	lw	s9,148(sp)
20402738:	4d4a                	lw	s10,144(sp)
2040273a:	4dba                	lw	s11,140(sp)
2040273c:	6129                	addi	sp,sp,192
2040273e:	8082                	ret

20402740 <_vsnprintf>:
_vsnprintf():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:581
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
20402740:	7171                	addi	sp,sp,-176
20402742:	d706                	sw	ra,172(sp)
20402744:	d522                	sw	s0,168(sp)
20402746:	d34a                	sw	s2,164(sp)
20402748:	d14e                	sw	s3,160(sp)
2040274a:	cf52                	sw	s4,156(sp)
2040274c:	cd56                	sw	s5,152(sp)
2040274e:	cb5a                	sw	s6,148(sp)
20402750:	c95e                	sw	s7,144(sp)
20402752:	c762                	sw	s8,140(sp)
20402754:	c566                	sw	s9,136(sp)
20402756:	c36a                	sw	s10,132(sp)
20402758:	c16e                	sw	s11,128(sp)
2040275a:	1900                	addi	s0,sp,176
2040275c:	f6a42e23          	sw	a0,-132(s0)
20402760:	f6b42c23          	sw	a1,-136(s0)
20402764:	f6c42a23          	sw	a2,-140(s0)
20402768:	f6d42823          	sw	a3,-144(s0)
2040276c:	f6e42623          	sw	a4,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:583
  unsigned int flags, width, precision, n;
  size_t idx = 0U;
20402770:	fa042e23          	sw	zero,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:585

  if (!buffer) {
20402774:	f7842783          	lw	a5,-136(s0)
20402778:	2e0796e3          	bnez	a5,20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:587
    // use null output function
    out = _out_null;
2040277c:	204017b7          	lui	a5,0x20401
20402780:	43078793          	addi	a5,a5,1072 # 20401430 <_out_null>
20402784:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:590
  }

  while (*format)
20402788:	2dd0006f          	j	20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:593
  {
    // format specifier?  %[flags][width][.precision][length]
    if (*format != '%') {
2040278c:	f7042783          	lw	a5,-144(s0)
20402790:	0007c703          	lbu	a4,0(a5)
20402794:	02500793          	li	a5,37
20402798:	02f70b63          	beq	a4,a5,204027ce <_vsnprintf+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:595
      // no
      out(*format, buffer, idx++, maxlen);
2040279c:	f7042783          	lw	a5,-144(s0)
204027a0:	0007c503          	lbu	a0,0(a5)
204027a4:	fbc42783          	lw	a5,-68(s0)
204027a8:	00178713          	addi	a4,a5,1
204027ac:	fae42e23          	sw	a4,-68(s0)
204027b0:	f7c42703          	lw	a4,-132(s0)
204027b4:	f7442683          	lw	a3,-140(s0)
204027b8:	863e                	mv	a2,a5
204027ba:	f7842583          	lw	a1,-136(s0)
204027be:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:596
      format++;
204027c0:	f7042783          	lw	a5,-144(s0)
204027c4:	0785                	addi	a5,a5,1
204027c6:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:597
      continue;
204027ca:	29b0006f          	j	20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:601
    }
    else {
      // yes, evaluate it
      format++;
204027ce:	f7042783          	lw	a5,-144(s0)
204027d2:	0785                	addi	a5,a5,1
204027d4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:605
    }

    // evaluate flags
    flags = 0U;
204027d8:	fc042623          	sw	zero,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:607
    do {
      switch (*format) {
204027dc:	f7042783          	lw	a5,-144(s0)
204027e0:	0007c783          	lbu	a5,0(a5)
204027e4:	1781                	addi	a5,a5,-32
204027e6:	4741                	li	a4,16
204027e8:	0af76663          	bltu	a4,a5,20402894 <_vsnprintf+0x154>
204027ec:	00279713          	slli	a4,a5,0x2
204027f0:	204097b7          	lui	a5,0x20409
204027f4:	f8878793          	addi	a5,a5,-120 # 20408f88 <_exit+0x31a>
204027f8:	97ba                	add	a5,a5,a4
204027fa:	439c                	lw	a5,0(a5)
204027fc:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:608
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
204027fe:	fcc42783          	lw	a5,-52(s0)
20402802:	0017e793          	ori	a5,a5,1
20402806:	fcf42623          	sw	a5,-52(s0)
2040280a:	f7042783          	lw	a5,-144(s0)
2040280e:	0785                	addi	a5,a5,1
20402810:	f6f42823          	sw	a5,-144(s0)
20402814:	4785                	li	a5,1
20402816:	fcf42023          	sw	a5,-64(s0)
2040281a:	a041                	j	2040289a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:609
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
2040281c:	fcc42783          	lw	a5,-52(s0)
20402820:	0027e793          	ori	a5,a5,2
20402824:	fcf42623          	sw	a5,-52(s0)
20402828:	f7042783          	lw	a5,-144(s0)
2040282c:	0785                	addi	a5,a5,1
2040282e:	f6f42823          	sw	a5,-144(s0)
20402832:	4785                	li	a5,1
20402834:	fcf42023          	sw	a5,-64(s0)
20402838:	a08d                	j	2040289a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:610
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
2040283a:	fcc42783          	lw	a5,-52(s0)
2040283e:	0047e793          	ori	a5,a5,4
20402842:	fcf42623          	sw	a5,-52(s0)
20402846:	f7042783          	lw	a5,-144(s0)
2040284a:	0785                	addi	a5,a5,1
2040284c:	f6f42823          	sw	a5,-144(s0)
20402850:	4785                	li	a5,1
20402852:	fcf42023          	sw	a5,-64(s0)
20402856:	a091                	j	2040289a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:611
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
20402858:	fcc42783          	lw	a5,-52(s0)
2040285c:	0087e793          	ori	a5,a5,8
20402860:	fcf42623          	sw	a5,-52(s0)
20402864:	f7042783          	lw	a5,-144(s0)
20402868:	0785                	addi	a5,a5,1
2040286a:	f6f42823          	sw	a5,-144(s0)
2040286e:	4785                	li	a5,1
20402870:	fcf42023          	sw	a5,-64(s0)
20402874:	a01d                	j	2040289a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:612
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
20402876:	fcc42783          	lw	a5,-52(s0)
2040287a:	0107e793          	ori	a5,a5,16
2040287e:	fcf42623          	sw	a5,-52(s0)
20402882:	f7042783          	lw	a5,-144(s0)
20402886:	0785                	addi	a5,a5,1
20402888:	f6f42823          	sw	a5,-144(s0)
2040288c:	4785                	li	a5,1
2040288e:	fcf42023          	sw	a5,-64(s0)
20402892:	a021                	j	2040289a <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:613
        default :                                   n = 0U; break;
20402894:	fc042023          	sw	zero,-64(s0)
20402898:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:615
      }
    } while (n);
2040289a:	fc042783          	lw	a5,-64(s0)
2040289e:	ff9d                	bnez	a5,204027dc <_vsnprintf+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:618

    // evaluate width field
    width = 0U;
204028a0:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:619
    if (_is_digit(*format)) {
204028a4:	f7042783          	lw	a5,-144(s0)
204028a8:	0007c783          	lbu	a5,0(a5)
204028ac:	853e                	mv	a0,a5
204028ae:	c23fe0ef          	jal	ra,204014d0 <_is_digit>
204028b2:	87aa                	mv	a5,a0
204028b4:	cb89                	beqz	a5,204028c6 <_vsnprintf+0x186>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:620
      width = _atoi(&format);
204028b6:	f7040793          	addi	a5,s0,-144
204028ba:	853e                	mv	a0,a5
204028bc:	c4dfe0ef          	jal	ra,20401508 <_atoi>
204028c0:	fca42423          	sw	a0,-56(s0)
204028c4:	a8a1                	j	2040291c <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:622
    }
    else if (*format == '*') {
204028c6:	f7042783          	lw	a5,-144(s0)
204028ca:	0007c703          	lbu	a4,0(a5)
204028ce:	02a00793          	li	a5,42
204028d2:	04f71563          	bne	a4,a5,2040291c <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:623
      const int w = va_arg(va, int);
204028d6:	f6c42783          	lw	a5,-148(s0)
204028da:	00478713          	addi	a4,a5,4
204028de:	f6e42623          	sw	a4,-148(s0)
204028e2:	439c                	lw	a5,0(a5)
204028e4:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:624
      if (w < 0) {
204028e8:	fa842783          	lw	a5,-88(s0)
204028ec:	0007df63          	bgez	a5,2040290a <_vsnprintf+0x1ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:625
        flags |= FLAGS_LEFT;    // reverse padding
204028f0:	fcc42783          	lw	a5,-52(s0)
204028f4:	0027e793          	ori	a5,a5,2
204028f8:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:626
        width = (unsigned int)-w;
204028fc:	fa842783          	lw	a5,-88(s0)
20402900:	40f007b3          	neg	a5,a5
20402904:	fcf42423          	sw	a5,-56(s0)
20402908:	a029                	j	20402912 <_vsnprintf+0x1d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:629
      }
      else {
        width = (unsigned int)w;
2040290a:	fa842783          	lw	a5,-88(s0)
2040290e:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:631
      }
      format++;
20402912:	f7042783          	lw	a5,-144(s0)
20402916:	0785                	addi	a5,a5,1
20402918:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:635
    }

    // evaluate precision field
    precision = 0U;
2040291c:	fc042223          	sw	zero,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:636
    if (*format == '.') {
20402920:	f7042783          	lw	a5,-144(s0)
20402924:	0007c703          	lbu	a4,0(a5)
20402928:	02e00793          	li	a5,46
2040292c:	06f71b63          	bne	a4,a5,204029a2 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:637
      flags |= FLAGS_PRECISION;
20402930:	fcc42783          	lw	a5,-52(s0)
20402934:	4007e793          	ori	a5,a5,1024
20402938:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:638
      format++;
2040293c:	f7042783          	lw	a5,-144(s0)
20402940:	0785                	addi	a5,a5,1
20402942:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:639
      if (_is_digit(*format)) {
20402946:	f7042783          	lw	a5,-144(s0)
2040294a:	0007c783          	lbu	a5,0(a5)
2040294e:	853e                	mv	a0,a5
20402950:	b81fe0ef          	jal	ra,204014d0 <_is_digit>
20402954:	87aa                	mv	a5,a0
20402956:	cb89                	beqz	a5,20402968 <_vsnprintf+0x228>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:640
        precision = _atoi(&format);
20402958:	f7040793          	addi	a5,s0,-144
2040295c:	853e                	mv	a0,a5
2040295e:	babfe0ef          	jal	ra,20401508 <_atoi>
20402962:	fca42223          	sw	a0,-60(s0)
20402966:	a835                	j	204029a2 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:642
      }
      else if (*format == '*') {
20402968:	f7042783          	lw	a5,-144(s0)
2040296c:	0007c703          	lbu	a4,0(a5)
20402970:	02a00793          	li	a5,42
20402974:	02f71763          	bne	a4,a5,204029a2 <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:643
        const int prec = (int)va_arg(va, int);
20402978:	f6c42783          	lw	a5,-148(s0)
2040297c:	00478713          	addi	a4,a5,4
20402980:	f6e42623          	sw	a4,-148(s0)
20402984:	439c                	lw	a5,0(a5)
20402986:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:644
        precision = prec > 0 ? (unsigned int)prec : 0U;
2040298a:	fa442783          	lw	a5,-92(s0)
2040298e:	0007d363          	bgez	a5,20402994 <_vsnprintf+0x254>
20402992:	4781                	li	a5,0
20402994:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:645
        format++;
20402998:	f7042783          	lw	a5,-144(s0)
2040299c:	0785                	addi	a5,a5,1
2040299e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:650
      }
    }

    // evaluate length field
    switch (*format) {
204029a2:	f7042783          	lw	a5,-144(s0)
204029a6:	0007c783          	lbu	a5,0(a5)
204029aa:	f9878793          	addi	a5,a5,-104
204029ae:	4749                	li	a4,18
204029b0:	0cf76d63          	bltu	a4,a5,20402a8a <_vsnprintf+0x34a>
204029b4:	00279713          	slli	a4,a5,0x2
204029b8:	204097b7          	lui	a5,0x20409
204029bc:	fcc78793          	addi	a5,a5,-52 # 20408fcc <_exit+0x35e>
204029c0:	97ba                	add	a5,a5,a4
204029c2:	439c                	lw	a5,0(a5)
204029c4:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:652
      case 'l' :
        flags |= FLAGS_LONG;
204029c6:	fcc42783          	lw	a5,-52(s0)
204029ca:	1007e793          	ori	a5,a5,256
204029ce:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:653
        format++;
204029d2:	f7042783          	lw	a5,-144(s0)
204029d6:	0785                	addi	a5,a5,1
204029d8:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:654
        if (*format == 'l') {
204029dc:	f7042783          	lw	a5,-144(s0)
204029e0:	0007c703          	lbu	a4,0(a5)
204029e4:	06c00793          	li	a5,108
204029e8:	0af71363          	bne	a4,a5,20402a8e <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:655
          flags |= FLAGS_LONG_LONG;
204029ec:	fcc42783          	lw	a5,-52(s0)
204029f0:	2007e793          	ori	a5,a5,512
204029f4:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:656
          format++;
204029f8:	f7042783          	lw	a5,-144(s0)
204029fc:	0785                	addi	a5,a5,1
204029fe:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:658
        }
        break;
20402a02:	a071                	j	20402a8e <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:660
      case 'h' :
        flags |= FLAGS_SHORT;
20402a04:	fcc42783          	lw	a5,-52(s0)
20402a08:	0807e793          	ori	a5,a5,128
20402a0c:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:661
        format++;
20402a10:	f7042783          	lw	a5,-144(s0)
20402a14:	0785                	addi	a5,a5,1
20402a16:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:662
        if (*format == 'h') {
20402a1a:	f7042783          	lw	a5,-144(s0)
20402a1e:	0007c703          	lbu	a4,0(a5)
20402a22:	06800793          	li	a5,104
20402a26:	06f71663          	bne	a4,a5,20402a92 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:663
          flags |= FLAGS_CHAR;
20402a2a:	fcc42783          	lw	a5,-52(s0)
20402a2e:	0407e793          	ori	a5,a5,64
20402a32:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:664
          format++;
20402a36:	f7042783          	lw	a5,-144(s0)
20402a3a:	0785                	addi	a5,a5,1
20402a3c:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:666
        }
        break;
20402a40:	a889                	j	20402a92 <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:669
#if defined(PRINTF_SUPPORT_PTRDIFF_T)
      case 't' :
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
20402a42:	fcc42783          	lw	a5,-52(s0)
20402a46:	1007e793          	ori	a5,a5,256
20402a4a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:670
        format++;
20402a4e:	f7042783          	lw	a5,-144(s0)
20402a52:	0785                	addi	a5,a5,1
20402a54:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:671
        break;
20402a58:	a835                	j	20402a94 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:674
#endif
      case 'j' :
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
20402a5a:	fcc42783          	lw	a5,-52(s0)
20402a5e:	2007e793          	ori	a5,a5,512
20402a62:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:675
        format++;
20402a66:	f7042783          	lw	a5,-144(s0)
20402a6a:	0785                	addi	a5,a5,1
20402a6c:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:676
        break;
20402a70:	a015                	j	20402a94 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:678
      case 'z' :
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
20402a72:	fcc42783          	lw	a5,-52(s0)
20402a76:	1007e793          	ori	a5,a5,256
20402a7a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:679
        format++;
20402a7e:	f7042783          	lw	a5,-144(s0)
20402a82:	0785                	addi	a5,a5,1
20402a84:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:680
        break;
20402a88:	a031                	j	20402a94 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:682
      default :
        break;
20402a8a:	0001                	nop
20402a8c:	a021                	j	20402a94 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:658
        break;
20402a8e:	0001                	nop
20402a90:	a011                	j	20402a94 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:666
        break;
20402a92:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:686
    }

    // evaluate specifier
    switch (*format) {
20402a94:	f7042783          	lw	a5,-144(s0)
20402a98:	0007c783          	lbu	a5,0(a5)
20402a9c:	fdb78793          	addi	a5,a5,-37
20402aa0:	05300713          	li	a4,83
20402aa4:	78f76863          	bltu	a4,a5,20403234 <_vsnprintf+0xaf4>
20402aa8:	00279713          	slli	a4,a5,0x2
20402aac:	204097b7          	lui	a5,0x20409
20402ab0:	01878793          	addi	a5,a5,24 # 20409018 <_exit+0x3aa>
20402ab4:	97ba                	add	a5,a5,a4
20402ab6:	439c                	lw	a5,0(a5)
20402ab8:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:696
      case 'X' :
      case 'o' :
      case 'b' : {
        // set the base
        unsigned int base;
        if (*format == 'x' || *format == 'X') {
20402aba:	f7042783          	lw	a5,-144(s0)
20402abe:	0007c703          	lbu	a4,0(a5)
20402ac2:	07800793          	li	a5,120
20402ac6:	00f70a63          	beq	a4,a5,20402ada <_vsnprintf+0x39a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:696 (discriminator 1)
20402aca:	f7042783          	lw	a5,-144(s0)
20402ace:	0007c703          	lbu	a4,0(a5)
20402ad2:	05800793          	li	a5,88
20402ad6:	00f71663          	bne	a4,a5,20402ae2 <_vsnprintf+0x3a2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:697
          base = 16U;
20402ada:	47c1                	li	a5,16
20402adc:	faf42c23          	sw	a5,-72(s0)
20402ae0:	a089                	j	20402b22 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:699
        }
        else if (*format == 'o') {
20402ae2:	f7042783          	lw	a5,-144(s0)
20402ae6:	0007c703          	lbu	a4,0(a5)
20402aea:	06f00793          	li	a5,111
20402aee:	00f71663          	bne	a4,a5,20402afa <_vsnprintf+0x3ba>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:700
          base =  8U;
20402af2:	47a1                	li	a5,8
20402af4:	faf42c23          	sw	a5,-72(s0)
20402af8:	a02d                	j	20402b22 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:702
        }
        else if (*format == 'b') {
20402afa:	f7042783          	lw	a5,-144(s0)
20402afe:	0007c703          	lbu	a4,0(a5)
20402b02:	06200793          	li	a5,98
20402b06:	00f71663          	bne	a4,a5,20402b12 <_vsnprintf+0x3d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:703
          base =  2U;
20402b0a:	4789                	li	a5,2
20402b0c:	faf42c23          	sw	a5,-72(s0)
20402b10:	a809                	j	20402b22 <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:706
        }
        else {
          base = 10U;
20402b12:	47a9                	li	a5,10
20402b14:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:707
          flags &= ~FLAGS_HASH;   // no hash for dec format
20402b18:	fcc42783          	lw	a5,-52(s0)
20402b1c:	9bbd                	andi	a5,a5,-17
20402b1e:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:710
        }
        // uppercase
        if (*format == 'X') {
20402b22:	f7042783          	lw	a5,-144(s0)
20402b26:	0007c703          	lbu	a4,0(a5)
20402b2a:	05800793          	li	a5,88
20402b2e:	00f71863          	bne	a4,a5,20402b3e <_vsnprintf+0x3fe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:711
          flags |= FLAGS_UPPERCASE;
20402b32:	fcc42783          	lw	a5,-52(s0)
20402b36:	0207e793          	ori	a5,a5,32
20402b3a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:715
        }

        // no plus or space flag for u, x, X, o, b
        if ((*format != 'i') && (*format != 'd')) {
20402b3e:	f7042783          	lw	a5,-144(s0)
20402b42:	0007c703          	lbu	a4,0(a5)
20402b46:	06900793          	li	a5,105
20402b4a:	00f70f63          	beq	a4,a5,20402b68 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:715 (discriminator 1)
20402b4e:	f7042783          	lw	a5,-144(s0)
20402b52:	0007c703          	lbu	a4,0(a5)
20402b56:	06400793          	li	a5,100
20402b5a:	00f70763          	beq	a4,a5,20402b68 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:716
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
20402b5e:	fcc42783          	lw	a5,-52(s0)
20402b62:	9bcd                	andi	a5,a5,-13
20402b64:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:720
        }

        // ignore '0' flag when precision is given
        if (flags & FLAGS_PRECISION) {
20402b68:	fcc42783          	lw	a5,-52(s0)
20402b6c:	4007f793          	andi	a5,a5,1024
20402b70:	c791                	beqz	a5,20402b7c <_vsnprintf+0x43c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:721
          flags &= ~FLAGS_ZEROPAD;
20402b72:	fcc42783          	lw	a5,-52(s0)
20402b76:	9bf9                	andi	a5,a5,-2
20402b78:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:725
        }

        // convert the integer
        if ((*format == 'i') || (*format == 'd')) {
20402b7c:	f7042783          	lw	a5,-144(s0)
20402b80:	0007c703          	lbu	a4,0(a5)
20402b84:	06900793          	li	a5,105
20402b88:	00f70a63          	beq	a4,a5,20402b9c <_vsnprintf+0x45c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:725 (discriminator 1)
20402b8c:	f7042783          	lw	a5,-144(s0)
20402b90:	0007c703          	lbu	a4,0(a5)
20402b94:	06400793          	li	a5,100
20402b98:	1af71b63          	bne	a4,a5,20402d4e <_vsnprintf+0x60e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727
          // signed
          if (flags & FLAGS_LONG_LONG) {
20402b9c:	fcc42783          	lw	a5,-52(s0)
20402ba0:	2007f793          	andi	a5,a5,512
20402ba4:	c3d5                	beqz	a5,20402c48 <_vsnprintf+0x508>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:729
#if defined(PRINTF_SUPPORT_LONG_LONG)
            const long long value = va_arg(va, long long);
20402ba6:	f6c42783          	lw	a5,-148(s0)
20402baa:	079d                	addi	a5,a5,7
20402bac:	9be1                	andi	a5,a5,-8
20402bae:	00878713          	addi	a4,a5,8
20402bb2:	f6e42623          	sw	a4,-148(s0)
20402bb6:	0047a803          	lw	a6,4(a5)
20402bba:	439c                	lw	a5,0(a5)
20402bbc:	f8f42c23          	sw	a5,-104(s0)
20402bc0:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:730
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402bc4:	f9c42783          	lw	a5,-100(s0)
20402bc8:	41f7d913          	srai	s2,a5,0x1f
20402bcc:	f9c42783          	lw	a5,-100(s0)
20402bd0:	41f7d993          	srai	s3,a5,0x1f
20402bd4:	f9842783          	lw	a5,-104(s0)
20402bd8:	0127ca33          	xor	s4,a5,s2
20402bdc:	f9c42783          	lw	a5,-100(s0)
20402be0:	0137cab3          	xor	s5,a5,s3
20402be4:	412a07b3          	sub	a5,s4,s2
20402be8:	873e                	mv	a4,a5
20402bea:	00ea3733          	sltu	a4,s4,a4
20402bee:	413a8833          	sub	a6,s5,s3
20402bf2:	40e80733          	sub	a4,a6,a4
20402bf6:	883a                	mv	a6,a4
20402bf8:	8a3e                	mv	s4,a5
20402bfa:	8ac2                	mv	s5,a6
20402bfc:	8652                	mv	a2,s4
20402bfe:	86d6                	mv	a3,s5
20402c00:	f9c42783          	lw	a5,-100(s0)
20402c04:	83fd                	srli	a5,a5,0x1f
20402c06:	0ff7f713          	andi	a4,a5,255
20402c0a:	fb842783          	lw	a5,-72(s0)
20402c0e:	8b3e                	mv	s6,a5
20402c10:	4b81                	li	s7,0
20402c12:	fcc42783          	lw	a5,-52(s0)
20402c16:	c63e                	sw	a5,12(sp)
20402c18:	fc842783          	lw	a5,-56(s0)
20402c1c:	c43e                	sw	a5,8(sp)
20402c1e:	fc442783          	lw	a5,-60(s0)
20402c22:	c23e                	sw	a5,4(sp)
20402c24:	c05e                	sw	s7,0(sp)
20402c26:	88da                	mv	a7,s6
20402c28:	883a                	mv	a6,a4
20402c2a:	8732                	mv	a4,a2
20402c2c:	87b6                	mv	a5,a3
20402c2e:	f7442683          	lw	a3,-140(s0)
20402c32:	fbc42603          	lw	a2,-68(s0)
20402c36:	f7842583          	lw	a1,-136(s0)
20402c3a:	f7c42503          	lw	a0,-132(s0)
20402c3e:	d93fe0ef          	jal	ra,204019d0 <_ntoa_long_long>
20402c42:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20402c46:	a425                	j	20402e6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:733
#endif
          }
          else if (flags & FLAGS_LONG) {
20402c48:	fcc42783          	lw	a5,-52(s0)
20402c4c:	1007f793          	andi	a5,a5,256
20402c50:	c3ad                	beqz	a5,20402cb2 <_vsnprintf+0x572>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:734
            const long value = va_arg(va, long);
20402c52:	f6c42783          	lw	a5,-148(s0)
20402c56:	00478713          	addi	a4,a5,4
20402c5a:	f6e42623          	sw	a4,-148(s0)
20402c5e:	439c                	lw	a5,0(a5)
20402c60:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:735
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402c64:	f9442783          	lw	a5,-108(s0)
20402c68:	41f7d713          	srai	a4,a5,0x1f
20402c6c:	f9442783          	lw	a5,-108(s0)
20402c70:	8fb9                	xor	a5,a5,a4
20402c72:	8f99                	sub	a5,a5,a4
20402c74:	86be                	mv	a3,a5
20402c76:	f9442783          	lw	a5,-108(s0)
20402c7a:	83fd                	srli	a5,a5,0x1f
20402c7c:	0ff7f713          	andi	a4,a5,255
20402c80:	fcc42783          	lw	a5,-52(s0)
20402c84:	c23e                	sw	a5,4(sp)
20402c86:	fc842783          	lw	a5,-56(s0)
20402c8a:	c03e                	sw	a5,0(sp)
20402c8c:	fc442883          	lw	a7,-60(s0)
20402c90:	fb842803          	lw	a6,-72(s0)
20402c94:	87ba                	mv	a5,a4
20402c96:	8736                	mv	a4,a3
20402c98:	f7442683          	lw	a3,-140(s0)
20402c9c:	fbc42603          	lw	a2,-68(s0)
20402ca0:	f7842583          	lw	a1,-136(s0)
20402ca4:	f7c42503          	lw	a0,-132(s0)
20402ca8:	c25fe0ef          	jal	ra,204018cc <_ntoa_long>
20402cac:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20402cb0:	aa7d                	j	20402e6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738
          }
          else {
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
20402cb2:	fcc42783          	lw	a5,-52(s0)
20402cb6:	0407f793          	andi	a5,a5,64
20402cba:	cb99                	beqz	a5,20402cd0 <_vsnprintf+0x590>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 1)
20402cbc:	f6c42783          	lw	a5,-148(s0)
20402cc0:	00478713          	addi	a4,a5,4
20402cc4:	f6e42623          	sw	a4,-148(s0)
20402cc8:	439c                	lw	a5,0(a5)
20402cca:	0ff7f793          	andi	a5,a5,255
20402cce:	a03d                	j	20402cfc <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 2)
20402cd0:	fcc42783          	lw	a5,-52(s0)
20402cd4:	0807f793          	andi	a5,a5,128
20402cd8:	cb99                	beqz	a5,20402cee <_vsnprintf+0x5ae>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 4)
20402cda:	f6c42783          	lw	a5,-148(s0)
20402cde:	00478713          	addi	a4,a5,4
20402ce2:	f6e42623          	sw	a4,-148(s0)
20402ce6:	439c                	lw	a5,0(a5)
20402ce8:	07c2                	slli	a5,a5,0x10
20402cea:	87c1                	srai	a5,a5,0x10
20402cec:	a801                	j	20402cfc <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 5)
20402cee:	f6c42783          	lw	a5,-148(s0)
20402cf2:	00478713          	addi	a4,a5,4
20402cf6:	f6e42623          	sw	a4,-148(s0)
20402cfa:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 8)
20402cfc:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:739 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20402d00:	f9042783          	lw	a5,-112(s0)
20402d04:	41f7d713          	srai	a4,a5,0x1f
20402d08:	f9042783          	lw	a5,-112(s0)
20402d0c:	8fb9                	xor	a5,a5,a4
20402d0e:	8f99                	sub	a5,a5,a4
20402d10:	86be                	mv	a3,a5
20402d12:	f9042783          	lw	a5,-112(s0)
20402d16:	83fd                	srli	a5,a5,0x1f
20402d18:	0ff7f713          	andi	a4,a5,255
20402d1c:	fcc42783          	lw	a5,-52(s0)
20402d20:	c23e                	sw	a5,4(sp)
20402d22:	fc842783          	lw	a5,-56(s0)
20402d26:	c03e                	sw	a5,0(sp)
20402d28:	fc442883          	lw	a7,-60(s0)
20402d2c:	fb842803          	lw	a6,-72(s0)
20402d30:	87ba                	mv	a5,a4
20402d32:	8736                	mv	a4,a3
20402d34:	f7442683          	lw	a3,-140(s0)
20402d38:	fbc42603          	lw	a2,-68(s0)
20402d3c:	f7842583          	lw	a1,-136(s0)
20402d40:	f7c42503          	lw	a0,-132(s0)
20402d44:	b89fe0ef          	jal	ra,204018cc <_ntoa_long>
20402d48:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727 (discriminator 8)
          if (flags & FLAGS_LONG_LONG) {
20402d4c:	a20d                	j	20402e6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:744
          }
        }
        else {
          // unsigned
          if (flags & FLAGS_LONG_LONG) {
20402d4e:	fcc42783          	lw	a5,-52(s0)
20402d52:	2007f793          	andi	a5,a5,512
20402d56:	cba1                	beqz	a5,20402da6 <_vsnprintf+0x666>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:746
#if defined(PRINTF_SUPPORT_LONG_LONG)
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
20402d58:	f6c42783          	lw	a5,-148(s0)
20402d5c:	079d                	addi	a5,a5,7
20402d5e:	9be1                	andi	a5,a5,-8
20402d60:	00878713          	addi	a4,a5,8
20402d64:	f6e42623          	sw	a4,-148(s0)
20402d68:	4398                	lw	a4,0(a5)
20402d6a:	43dc                	lw	a5,4(a5)
20402d6c:	fb842683          	lw	a3,-72(s0)
20402d70:	8c36                	mv	s8,a3
20402d72:	4c81                	li	s9,0
20402d74:	fcc42683          	lw	a3,-52(s0)
20402d78:	c636                	sw	a3,12(sp)
20402d7a:	fc842683          	lw	a3,-56(s0)
20402d7e:	c436                	sw	a3,8(sp)
20402d80:	fc442683          	lw	a3,-60(s0)
20402d84:	c236                	sw	a3,4(sp)
20402d86:	c066                	sw	s9,0(sp)
20402d88:	88e2                	mv	a7,s8
20402d8a:	4801                	li	a6,0
20402d8c:	f7442683          	lw	a3,-140(s0)
20402d90:	fbc42603          	lw	a2,-68(s0)
20402d94:	f7842583          	lw	a1,-136(s0)
20402d98:	f7c42503          	lw	a0,-132(s0)
20402d9c:	c35fe0ef          	jal	ra,204019d0 <_ntoa_long_long>
20402da0:	faa42e23          	sw	a0,-68(s0)
20402da4:	a0e9                	j	20402e6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:749
#endif
          }
          else if (flags & FLAGS_LONG) {
20402da6:	fcc42783          	lw	a5,-52(s0)
20402daa:	1007f793          	andi	a5,a5,256
20402dae:	c3a1                	beqz	a5,20402dee <_vsnprintf+0x6ae>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:750
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
20402db0:	f6c42783          	lw	a5,-148(s0)
20402db4:	00478713          	addi	a4,a5,4
20402db8:	f6e42623          	sw	a4,-148(s0)
20402dbc:	4398                	lw	a4,0(a5)
20402dbe:	fcc42783          	lw	a5,-52(s0)
20402dc2:	c23e                	sw	a5,4(sp)
20402dc4:	fc842783          	lw	a5,-56(s0)
20402dc8:	c03e                	sw	a5,0(sp)
20402dca:	fc442883          	lw	a7,-60(s0)
20402dce:	fb842803          	lw	a6,-72(s0)
20402dd2:	4781                	li	a5,0
20402dd4:	f7442683          	lw	a3,-140(s0)
20402dd8:	fbc42603          	lw	a2,-68(s0)
20402ddc:	f7842583          	lw	a1,-136(s0)
20402de0:	f7c42503          	lw	a0,-132(s0)
20402de4:	ae9fe0ef          	jal	ra,204018cc <_ntoa_long>
20402de8:	faa42e23          	sw	a0,-68(s0)
20402dec:	a049                	j	20402e6e <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753
          }
          else {
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
20402dee:	fcc42783          	lw	a5,-52(s0)
20402df2:	0407f793          	andi	a5,a5,64
20402df6:	cb99                	beqz	a5,20402e0c <_vsnprintf+0x6cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 1)
20402df8:	f6c42783          	lw	a5,-148(s0)
20402dfc:	00478713          	addi	a4,a5,4
20402e00:	f6e42623          	sw	a4,-148(s0)
20402e04:	439c                	lw	a5,0(a5)
20402e06:	0ff7f793          	andi	a5,a5,255
20402e0a:	a03d                	j	20402e38 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 2)
20402e0c:	fcc42783          	lw	a5,-52(s0)
20402e10:	0807f793          	andi	a5,a5,128
20402e14:	cb99                	beqz	a5,20402e2a <_vsnprintf+0x6ea>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 4)
20402e16:	f6c42783          	lw	a5,-148(s0)
20402e1a:	00478713          	addi	a4,a5,4
20402e1e:	f6e42623          	sw	a4,-148(s0)
20402e22:	439c                	lw	a5,0(a5)
20402e24:	07c2                	slli	a5,a5,0x10
20402e26:	83c1                	srli	a5,a5,0x10
20402e28:	a801                	j	20402e38 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 5)
20402e2a:	f6c42783          	lw	a5,-148(s0)
20402e2e:	00478713          	addi	a4,a5,4
20402e32:	f6e42623          	sw	a4,-148(s0)
20402e36:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 8)
20402e38:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:754 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
20402e3c:	fcc42783          	lw	a5,-52(s0)
20402e40:	c23e                	sw	a5,4(sp)
20402e42:	fc842783          	lw	a5,-56(s0)
20402e46:	c03e                	sw	a5,0(sp)
20402e48:	fc442883          	lw	a7,-60(s0)
20402e4c:	fb842803          	lw	a6,-72(s0)
20402e50:	4781                	li	a5,0
20402e52:	fa042703          	lw	a4,-96(s0)
20402e56:	f7442683          	lw	a3,-140(s0)
20402e5a:	fbc42603          	lw	a2,-68(s0)
20402e5e:	f7842583          	lw	a1,-136(s0)
20402e62:	f7c42503          	lw	a0,-132(s0)
20402e66:	a67fe0ef          	jal	ra,204018cc <_ntoa_long>
20402e6a:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:757
          }
        }
        format++;
20402e6e:	f7042783          	lw	a5,-144(s0)
20402e72:	0785                	addi	a5,a5,1
20402e74:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:758
        break;
20402e78:	a6f5                	j	20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:763
      }
#if defined(PRINTF_SUPPORT_FLOAT)
      case 'f' :
      case 'F' :
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
20402e7a:	f7042783          	lw	a5,-144(s0)
20402e7e:	0007c703          	lbu	a4,0(a5)
20402e82:	04600793          	li	a5,70
20402e86:	00f71863          	bne	a4,a5,20402e96 <_vsnprintf+0x756>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:763 (discriminator 1)
20402e8a:	fcc42783          	lw	a5,-52(s0)
20402e8e:	0207e793          	ori	a5,a5,32
20402e92:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:764
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20402e96:	f6c42783          	lw	a5,-148(s0)
20402e9a:	079d                	addi	a5,a5,7
20402e9c:	9be1                	andi	a5,a5,-8
20402e9e:	00878713          	addi	a4,a5,8
20402ea2:	f6e42623          	sw	a4,-148(s0)
20402ea6:	4398                	lw	a4,0(a5)
20402ea8:	43dc                	lw	a5,4(a5)
20402eaa:	fcc42683          	lw	a3,-52(s0)
20402eae:	c036                	sw	a3,0(sp)
20402eb0:	fc842883          	lw	a7,-56(s0)
20402eb4:	fc442803          	lw	a6,-60(s0)
20402eb8:	f7442683          	lw	a3,-140(s0)
20402ebc:	fbc42603          	lw	a2,-68(s0)
20402ec0:	f7842583          	lw	a1,-136(s0)
20402ec4:	f7c42503          	lw	a0,-132(s0)
20402ec8:	c37fe0ef          	jal	ra,20401afe <_ftoa>
20402ecc:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:765
        format++;
20402ed0:	f7042783          	lw	a5,-144(s0)
20402ed4:	0785                	addi	a5,a5,1
20402ed6:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:766
        break;
20402eda:	a669                	j	20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:772
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
      case 'e':
      case 'E':
      case 'g':
      case 'G':
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
20402edc:	f7042783          	lw	a5,-144(s0)
20402ee0:	0007c703          	lbu	a4,0(a5)
20402ee4:	06700793          	li	a5,103
20402ee8:	00f70a63          	beq	a4,a5,20402efc <_vsnprintf+0x7bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:772 (discriminator 2)
20402eec:	f7042783          	lw	a5,-144(s0)
20402ef0:	0007c703          	lbu	a4,0(a5)
20402ef4:	04700793          	li	a5,71
20402ef8:	00f71a63          	bne	a4,a5,20402f0c <_vsnprintf+0x7cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:772 (discriminator 3)
20402efc:	fcc42703          	lw	a4,-52(s0)
20402f00:	6785                	lui	a5,0x1
20402f02:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402f06:	8fd9                	or	a5,a5,a4
20402f08:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:773
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
20402f0c:	f7042783          	lw	a5,-144(s0)
20402f10:	0007c703          	lbu	a4,0(a5)
20402f14:	04500793          	li	a5,69
20402f18:	00f70a63          	beq	a4,a5,20402f2c <_vsnprintf+0x7ec>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:773 (discriminator 2)
20402f1c:	f7042783          	lw	a5,-144(s0)
20402f20:	0007c703          	lbu	a4,0(a5)
20402f24:	04700793          	li	a5,71
20402f28:	00f71863          	bne	a4,a5,20402f38 <_vsnprintf+0x7f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:773 (discriminator 3)
20402f2c:	fcc42783          	lw	a5,-52(s0)
20402f30:	0207e793          	ori	a5,a5,32
20402f34:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:774
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20402f38:	f6c42783          	lw	a5,-148(s0)
20402f3c:	079d                	addi	a5,a5,7
20402f3e:	9be1                	andi	a5,a5,-8
20402f40:	00878713          	addi	a4,a5,8
20402f44:	f6e42623          	sw	a4,-148(s0)
20402f48:	4398                	lw	a4,0(a5)
20402f4a:	43dc                	lw	a5,4(a5)
20402f4c:	fcc42683          	lw	a3,-52(s0)
20402f50:	c036                	sw	a3,0(sp)
20402f52:	fc842883          	lw	a7,-56(s0)
20402f56:	fc442803          	lw	a6,-60(s0)
20402f5a:	f7442683          	lw	a3,-140(s0)
20402f5e:	fbc42603          	lw	a2,-68(s0)
20402f62:	f7842583          	lw	a1,-136(s0)
20402f66:	f7c42503          	lw	a0,-132(s0)
20402f6a:	968ff0ef          	jal	ra,204020d2 <_etoa>
20402f6e:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:775
        format++;
20402f72:	f7042783          	lw	a5,-144(s0)
20402f76:	0785                	addi	a5,a5,1
20402f78:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:776
        break;
20402f7c:	a4e5                	j	20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:780
#endif  // PRINTF_SUPPORT_EXPONENTIAL
#endif  // PRINTF_SUPPORT_FLOAT
      case 'c' : {
        unsigned int l = 1U;
20402f7e:	4785                	li	a5,1
20402f80:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:782
        // pre padding
        if (!(flags & FLAGS_LEFT)) {
20402f84:	fcc42783          	lw	a5,-52(s0)
20402f88:	8b89                	andi	a5,a5,2
20402f8a:	ef85                	bnez	a5,20402fc2 <_vsnprintf+0x882>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:783
          while (l++ < width) {
20402f8c:	a00d                	j	20402fae <_vsnprintf+0x86e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:784
            out(' ', buffer, idx++, maxlen);
20402f8e:	fbc42783          	lw	a5,-68(s0)
20402f92:	00178713          	addi	a4,a5,1
20402f96:	fae42e23          	sw	a4,-68(s0)
20402f9a:	f7c42703          	lw	a4,-132(s0)
20402f9e:	f7442683          	lw	a3,-140(s0)
20402fa2:	863e                	mv	a2,a5
20402fa4:	f7842583          	lw	a1,-136(s0)
20402fa8:	02000513          	li	a0,32
20402fac:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:783
          while (l++ < width) {
20402fae:	fb442783          	lw	a5,-76(s0)
20402fb2:	00178713          	addi	a4,a5,1
20402fb6:	fae42a23          	sw	a4,-76(s0)
20402fba:	fc842703          	lw	a4,-56(s0)
20402fbe:	fce7e8e3          	bltu	a5,a4,20402f8e <_vsnprintf+0x84e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:788
          }
        }
        // char output
        out((char)va_arg(va, int), buffer, idx++, maxlen);
20402fc2:	f6c42783          	lw	a5,-148(s0)
20402fc6:	00478713          	addi	a4,a5,4
20402fca:	f6e42623          	sw	a4,-148(s0)
20402fce:	439c                	lw	a5,0(a5)
20402fd0:	0ff7f513          	andi	a0,a5,255
20402fd4:	fbc42783          	lw	a5,-68(s0)
20402fd8:	00178713          	addi	a4,a5,1
20402fdc:	fae42e23          	sw	a4,-68(s0)
20402fe0:	f7c42703          	lw	a4,-132(s0)
20402fe4:	f7442683          	lw	a3,-140(s0)
20402fe8:	863e                	mv	a2,a5
20402fea:	f7842583          	lw	a1,-136(s0)
20402fee:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:790
        // post padding
        if (flags & FLAGS_LEFT) {
20402ff0:	fcc42783          	lw	a5,-52(s0)
20402ff4:	8b89                	andi	a5,a5,2
20402ff6:	cf85                	beqz	a5,2040302e <_vsnprintf+0x8ee>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:791
          while (l++ < width) {
20402ff8:	a00d                	j	2040301a <_vsnprintf+0x8da>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:792
            out(' ', buffer, idx++, maxlen);
20402ffa:	fbc42783          	lw	a5,-68(s0)
20402ffe:	00178713          	addi	a4,a5,1
20403002:	fae42e23          	sw	a4,-68(s0)
20403006:	f7c42703          	lw	a4,-132(s0)
2040300a:	f7442683          	lw	a3,-140(s0)
2040300e:	863e                	mv	a2,a5
20403010:	f7842583          	lw	a1,-136(s0)
20403014:	02000513          	li	a0,32
20403018:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:791
          while (l++ < width) {
2040301a:	fb442783          	lw	a5,-76(s0)
2040301e:	00178713          	addi	a4,a5,1
20403022:	fae42a23          	sw	a4,-76(s0)
20403026:	fc842703          	lw	a4,-56(s0)
2040302a:	fce7e8e3          	bltu	a5,a4,20402ffa <_vsnprintf+0x8ba>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:795
          }
        }
        format++;
2040302e:	f7042783          	lw	a5,-144(s0)
20403032:	0785                	addi	a5,a5,1
20403034:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:796
        break;
20403038:	a435                	j	20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:800
      }

      case 's' : {
        const char* p = va_arg(va, char*);
2040303a:	f6c42783          	lw	a5,-148(s0)
2040303e:	00478713          	addi	a4,a5,4
20403042:	f6e42623          	sw	a4,-148(s0)
20403046:	439c                	lw	a5,0(a5)
20403048:	faf42823          	sw	a5,-80(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
2040304c:	fc442783          	lw	a5,-60(s0)
20403050:	c781                	beqz	a5,20403058 <_vsnprintf+0x918>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801 (discriminator 1)
20403052:	fc442783          	lw	a5,-60(s0)
20403056:	a011                	j	2040305a <_vsnprintf+0x91a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801 (discriminator 2)
20403058:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801 (discriminator 4)
2040305a:	85be                	mv	a1,a5
2040305c:	fb042503          	lw	a0,-80(s0)
20403060:	c22fe0ef          	jal	ra,20401482 <_strnlen_s>
20403064:	faa42623          	sw	a0,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:803 (discriminator 4)
        // pre padding
        if (flags & FLAGS_PRECISION) {
20403068:	fcc42783          	lw	a5,-52(s0)
2040306c:	4007f793          	andi	a5,a5,1024
20403070:	cb91                	beqz	a5,20403084 <_vsnprintf+0x944>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:804
          l = (l < precision ? l : precision);
20403072:	fac42703          	lw	a4,-84(s0)
20403076:	fc442783          	lw	a5,-60(s0)
2040307a:	00f77363          	bgeu	a4,a5,20403080 <_vsnprintf+0x940>
2040307e:	87ba                	mv	a5,a4
20403080:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:806
        }
        if (!(flags & FLAGS_LEFT)) {
20403084:	fcc42783          	lw	a5,-52(s0)
20403088:	8b89                	andi	a5,a5,2
2040308a:	e3bd                	bnez	a5,204030f0 <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:807
          while (l++ < width) {
2040308c:	a00d                	j	204030ae <_vsnprintf+0x96e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:808
            out(' ', buffer, idx++, maxlen);
2040308e:	fbc42783          	lw	a5,-68(s0)
20403092:	00178713          	addi	a4,a5,1
20403096:	fae42e23          	sw	a4,-68(s0)
2040309a:	f7c42703          	lw	a4,-132(s0)
2040309e:	f7442683          	lw	a3,-140(s0)
204030a2:	863e                	mv	a2,a5
204030a4:	f7842583          	lw	a1,-136(s0)
204030a8:	02000513          	li	a0,32
204030ac:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:807
          while (l++ < width) {
204030ae:	fac42783          	lw	a5,-84(s0)
204030b2:	00178713          	addi	a4,a5,1
204030b6:	fae42623          	sw	a4,-84(s0)
204030ba:	fc842703          	lw	a4,-56(s0)
204030be:	fce7e8e3          	bltu	a5,a4,2040308e <_vsnprintf+0x94e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
204030c2:	a03d                	j	204030f0 <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:813
          out(*(p++), buffer, idx++, maxlen);
204030c4:	fb042783          	lw	a5,-80(s0)
204030c8:	00178713          	addi	a4,a5,1
204030cc:	fae42823          	sw	a4,-80(s0)
204030d0:	0007c503          	lbu	a0,0(a5)
204030d4:	fbc42783          	lw	a5,-68(s0)
204030d8:	00178713          	addi	a4,a5,1
204030dc:	fae42e23          	sw	a4,-68(s0)
204030e0:	f7c42703          	lw	a4,-132(s0)
204030e4:	f7442683          	lw	a3,-140(s0)
204030e8:	863e                	mv	a2,a5
204030ea:	f7842583          	lw	a1,-136(s0)
204030ee:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
204030f0:	fb042783          	lw	a5,-80(s0)
204030f4:	0007c783          	lbu	a5,0(a5)
204030f8:	cf89                	beqz	a5,20403112 <_vsnprintf+0x9d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812 (discriminator 1)
204030fa:	fcc42783          	lw	a5,-52(s0)
204030fe:	4007f793          	andi	a5,a5,1024
20403102:	d3e9                	beqz	a5,204030c4 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812 (discriminator 2)
20403104:	fc442783          	lw	a5,-60(s0)
20403108:	fff78713          	addi	a4,a5,-1
2040310c:	fce42223          	sw	a4,-60(s0)
20403110:	fbd5                	bnez	a5,204030c4 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:816
        }
        // post padding
        if (flags & FLAGS_LEFT) {
20403112:	fcc42783          	lw	a5,-52(s0)
20403116:	8b89                	andi	a5,a5,2
20403118:	cf85                	beqz	a5,20403150 <_vsnprintf+0xa10>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:817
          while (l++ < width) {
2040311a:	a00d                	j	2040313c <_vsnprintf+0x9fc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:818
            out(' ', buffer, idx++, maxlen);
2040311c:	fbc42783          	lw	a5,-68(s0)
20403120:	00178713          	addi	a4,a5,1
20403124:	fae42e23          	sw	a4,-68(s0)
20403128:	f7c42703          	lw	a4,-132(s0)
2040312c:	f7442683          	lw	a3,-140(s0)
20403130:	863e                	mv	a2,a5
20403132:	f7842583          	lw	a1,-136(s0)
20403136:	02000513          	li	a0,32
2040313a:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:817
          while (l++ < width) {
2040313c:	fac42783          	lw	a5,-84(s0)
20403140:	00178713          	addi	a4,a5,1
20403144:	fae42623          	sw	a4,-84(s0)
20403148:	fc842703          	lw	a4,-56(s0)
2040314c:	fce7e8e3          	bltu	a5,a4,2040311c <_vsnprintf+0x9dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:821
          }
        }
        format++;
20403150:	f7042783          	lw	a5,-144(s0)
20403154:	0785                	addi	a5,a5,1
20403156:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:822
        break;
2040315a:	a229                	j	20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:826
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
2040315c:	47a1                	li	a5,8
2040315e:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:827
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
20403162:	fcc42783          	lw	a5,-52(s0)
20403166:	0217e793          	ori	a5,a5,33
2040316a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:829
#if defined(PRINTF_SUPPORT_LONG_LONG)
        const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
2040316e:	f80407a3          	sb	zero,-113(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:830
        if (is_ll) {
20403172:	f8f44783          	lbu	a5,-113(s0)
20403176:	c7a9                	beqz	a5,204031c0 <_vsnprintf+0xa80>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:831
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
20403178:	f6c42783          	lw	a5,-148(s0)
2040317c:	00478713          	addi	a4,a5,4
20403180:	f6e42623          	sw	a4,-148(s0)
20403184:	439c                	lw	a5,0(a5)
20403186:	8d3e                	mv	s10,a5
20403188:	4d81                	li	s11,0
2040318a:	fcc42783          	lw	a5,-52(s0)
2040318e:	c63e                	sw	a5,12(sp)
20403190:	fc842783          	lw	a5,-56(s0)
20403194:	c43e                	sw	a5,8(sp)
20403196:	fc442783          	lw	a5,-60(s0)
2040319a:	c23e                	sw	a5,4(sp)
2040319c:	c002                	sw	zero,0(sp)
2040319e:	48c1                	li	a7,16
204031a0:	4801                	li	a6,0
204031a2:	876a                	mv	a4,s10
204031a4:	87ee                	mv	a5,s11
204031a6:	f7442683          	lw	a3,-140(s0)
204031aa:	fbc42603          	lw	a2,-68(s0)
204031ae:	f7842583          	lw	a1,-136(s0)
204031b2:	f7c42503          	lw	a0,-132(s0)
204031b6:	81bfe0ef          	jal	ra,204019d0 <_ntoa_long_long>
204031ba:	faa42e23          	sw	a0,-68(s0)
204031be:	a83d                	j	204031fc <_vsnprintf+0xabc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:835
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
204031c0:	f6c42783          	lw	a5,-148(s0)
204031c4:	00478713          	addi	a4,a5,4
204031c8:	f6e42623          	sw	a4,-148(s0)
204031cc:	439c                	lw	a5,0(a5)
204031ce:	873e                	mv	a4,a5
204031d0:	fcc42783          	lw	a5,-52(s0)
204031d4:	c23e                	sw	a5,4(sp)
204031d6:	fc842783          	lw	a5,-56(s0)
204031da:	c03e                	sw	a5,0(sp)
204031dc:	fc442883          	lw	a7,-60(s0)
204031e0:	4841                	li	a6,16
204031e2:	4781                	li	a5,0
204031e4:	f7442683          	lw	a3,-140(s0)
204031e8:	fbc42603          	lw	a2,-68(s0)
204031ec:	f7842583          	lw	a1,-136(s0)
204031f0:	f7c42503          	lw	a0,-132(s0)
204031f4:	ed8fe0ef          	jal	ra,204018cc <_ntoa_long>
204031f8:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:839
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
204031fc:	f7042783          	lw	a5,-144(s0)
20403200:	0785                	addi	a5,a5,1
20403202:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:840
        break;
20403206:	a8b9                	j	20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:844
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
20403208:	fbc42783          	lw	a5,-68(s0)
2040320c:	00178713          	addi	a4,a5,1
20403210:	fae42e23          	sw	a4,-68(s0)
20403214:	f7c42703          	lw	a4,-132(s0)
20403218:	f7442683          	lw	a3,-140(s0)
2040321c:	863e                	mv	a2,a5
2040321e:	f7842583          	lw	a1,-136(s0)
20403222:	02500513          	li	a0,37
20403226:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:845
        format++;
20403228:	f7042783          	lw	a5,-144(s0)
2040322c:	0785                	addi	a5,a5,1
2040322e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:846
        break;
20403232:	a80d                	j	20403264 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:849

      default :
        out(*format, buffer, idx++, maxlen);
20403234:	f7042783          	lw	a5,-144(s0)
20403238:	0007c503          	lbu	a0,0(a5)
2040323c:	fbc42783          	lw	a5,-68(s0)
20403240:	00178713          	addi	a4,a5,1
20403244:	fae42e23          	sw	a4,-68(s0)
20403248:	f7c42703          	lw	a4,-132(s0)
2040324c:	f7442683          	lw	a3,-140(s0)
20403250:	863e                	mv	a2,a5
20403252:	f7842583          	lw	a1,-136(s0)
20403256:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:850
        format++;
20403258:	f7042783          	lw	a5,-144(s0)
2040325c:	0785                	addi	a5,a5,1
2040325e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:851
        break;
20403262:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:590
  while (*format)
20403264:	f7042783          	lw	a5,-144(s0)
20403268:	0007c783          	lbu	a5,0(a5)
2040326c:	d2079063          	bnez	a5,2040278c <_vsnprintf+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
20403270:	fbc42703          	lw	a4,-68(s0)
20403274:	f7442783          	lw	a5,-140(s0)
20403278:	00f76663          	bltu	a4,a5,20403284 <_vsnprintf+0xb44>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856 (discriminator 1)
2040327c:	f7442783          	lw	a5,-140(s0)
20403280:	17fd                	addi	a5,a5,-1
20403282:	a019                	j	20403288 <_vsnprintf+0xb48>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856 (discriminator 2)
20403284:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856 (discriminator 4)
20403288:	f7c42703          	lw	a4,-132(s0)
2040328c:	f7442683          	lw	a3,-140(s0)
20403290:	863e                	mv	a2,a5
20403292:	f7842583          	lw	a1,-136(s0)
20403296:	4501                	li	a0,0
20403298:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:859 (discriminator 4)

  // return written chars without terminating \0
  return (int)idx;
2040329a:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:860 (discriminator 4)
}
2040329e:	853e                	mv	a0,a5
204032a0:	50ba                	lw	ra,172(sp)
204032a2:	542a                	lw	s0,168(sp)
204032a4:	591a                	lw	s2,164(sp)
204032a6:	598a                	lw	s3,160(sp)
204032a8:	4a7a                	lw	s4,156(sp)
204032aa:	4aea                	lw	s5,152(sp)
204032ac:	4b5a                	lw	s6,148(sp)
204032ae:	4bca                	lw	s7,144(sp)
204032b0:	4c3a                	lw	s8,140(sp)
204032b2:	4caa                	lw	s9,136(sp)
204032b4:	4d1a                	lw	s10,132(sp)
204032b6:	4d8a                	lw	s11,128(sp)
204032b8:	614d                	addi	sp,sp,176
204032ba:	8082                	ret

204032bc <printf_>:
printf_():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:866


///////////////////////////////////////////////////////////////////////////////

int printf_(const char* format, ...)
{
204032bc:	715d                	addi	sp,sp,-80
204032be:	d606                	sw	ra,44(sp)
204032c0:	d422                	sw	s0,40(sp)
204032c2:	1800                	addi	s0,sp,48
204032c4:	fca42e23          	sw	a0,-36(s0)
204032c8:	c04c                	sw	a1,4(s0)
204032ca:	c410                	sw	a2,8(s0)
204032cc:	c454                	sw	a3,12(s0)
204032ce:	c818                	sw	a4,16(s0)
204032d0:	c85c                	sw	a5,20(s0)
204032d2:	01042c23          	sw	a6,24(s0)
204032d6:	01142e23          	sw	a7,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:868
  va_list va;
  va_start(va, format);
204032da:	02040793          	addi	a5,s0,32
204032de:	1791                	addi	a5,a5,-28
204032e0:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:870
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
204032e4:	fe842703          	lw	a4,-24(s0)
204032e8:	fe440793          	addi	a5,s0,-28
204032ec:	fdc42683          	lw	a3,-36(s0)
204032f0:	567d                	li	a2,-1
204032f2:	85be                	mv	a1,a5
204032f4:	204017b7          	lui	a5,0x20401
204032f8:	45078513          	addi	a0,a5,1104 # 20401450 <_out_char>
204032fc:	c44ff0ef          	jal	ra,20402740 <_vsnprintf>
20403300:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:872
  va_end(va);
  return ret;
20403304:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:873
}
20403308:	853e                	mv	a0,a5
2040330a:	50b2                	lw	ra,44(sp)
2040330c:	5422                	lw	s0,40(sp)
2040330e:	6161                	addi	sp,sp,80
20403310:	8082                	ret

20403312 <write>:
write():
20403312:	5fbfd797          	auipc	a5,0x5fbfd
20403316:	4c678793          	addi	a5,a5,1222 # 800007d8 <_impure_ptr>
2040331a:	86b2                	mv	a3,a2
2040331c:	862e                	mv	a2,a1
2040331e:	85aa                	mv	a1,a0
20403320:	4388                	lw	a0,0(a5)
20403322:	a009                	j	20403324 <_write_r>

20403324 <_write_r>:
_write_r():
20403324:	1141                	addi	sp,sp,-16
20403326:	c422                	sw	s0,8(sp)
20403328:	842a                	mv	s0,a0
2040332a:	852e                	mv	a0,a1
2040332c:	85b2                	mv	a1,a2
2040332e:	8636                	mv	a2,a3
20403330:	8e01ac23          	sw	zero,-1800(gp) # 800008d0 <errno>
20403334:	c606                	sw	ra,12(sp)
20403336:	78f010ef          	jal	ra,204052c4 <_write>
2040333a:	57fd                	li	a5,-1
2040333c:	00f51763          	bne	a0,a5,2040334a <_write_r+0x26>
20403340:	8f818793          	addi	a5,gp,-1800 # 800008d0 <errno>
20403344:	439c                	lw	a5,0(a5)
20403346:	c391                	beqz	a5,2040334a <_write_r+0x26>
20403348:	c01c                	sw	a5,0(s0)
2040334a:	40b2                	lw	ra,12(sp)
2040334c:	4422                	lw	s0,8(sp)
2040334e:	0141                	addi	sp,sp,16
20403350:	8082                	ret

20403352 <__udivdi3>:
__udivdi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
20403352:	87ae                	mv	a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20403354:	8832                	mv	a6,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20403356:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20403358:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
2040335a:	20069663          	bnez	a3,20403566 <__udivdi3+0x214>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
2040335e:	00006897          	auipc	a7,0x6
20403362:	ed288893          	addi	a7,a7,-302 # 20409230 <__clz_tab>
20403366:	0ac5fe63          	bgeu	a1,a2,20403422 <__udivdi3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
2040336a:	6741                	lui	a4,0x10
2040336c:	0ae67463          	bgeu	a2,a4,20403414 <__udivdi3+0xc2>
20403370:	0ff00713          	li	a4,255
20403374:	00c73733          	sltu	a4,a4,a2
20403378:	070e                	slli	a4,a4,0x3
2040337a:	00e656b3          	srl	a3,a2,a4
2040337e:	98b6                	add	a7,a7,a3
20403380:	0008c683          	lbu	a3,0(a7)
20403384:	9736                	add	a4,a4,a3
20403386:	02000693          	li	a3,32
2040338a:	8e99                	sub	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
2040338c:	ca99                	beqz	a3,204033a2 <__udivdi3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2040338e:	00d797b3          	sll	a5,a5,a3
20403392:	00e55733          	srl	a4,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20403396:	00d61833          	sll	a6,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2040339a:	00f765b3          	or	a1,a4,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2040339e:	00d51333          	sll	t1,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
204033a2:	01085513          	srli	a0,a6,0x10
204033a6:	02a5f733          	remu	a4,a1,a0
204033aa:	01081613          	slli	a2,a6,0x10
204033ae:	8241                	srli	a2,a2,0x10
204033b0:	01035693          	srli	a3,t1,0x10
204033b4:	02a5d5b3          	divu	a1,a1,a0
204033b8:	0742                	slli	a4,a4,0x10
204033ba:	8ed9                	or	a3,a3,a4
204033bc:	02b607b3          	mul	a5,a2,a1
204033c0:	872e                	mv	a4,a1
204033c2:	00f6fc63          	bgeu	a3,a5,204033da <__udivdi3+0x88>
204033c6:	96c2                	add	a3,a3,a6
204033c8:	fff58713          	addi	a4,a1,-1
204033cc:	0106e763          	bltu	a3,a6,204033da <__udivdi3+0x88>
204033d0:	00f6f563          	bgeu	a3,a5,204033da <__udivdi3+0x88>
204033d4:	ffe58713          	addi	a4,a1,-2
204033d8:	96c2                	add	a3,a3,a6
204033da:	8e9d                	sub	a3,a3,a5
204033dc:	02a6f7b3          	remu	a5,a3,a0
204033e0:	0342                	slli	t1,t1,0x10
204033e2:	01035313          	srli	t1,t1,0x10
204033e6:	02a6d6b3          	divu	a3,a3,a0
204033ea:	07c2                	slli	a5,a5,0x10
204033ec:	0067e333          	or	t1,a5,t1
204033f0:	02d605b3          	mul	a1,a2,a3
204033f4:	8536                	mv	a0,a3
204033f6:	00b37b63          	bgeu	t1,a1,2040340c <__udivdi3+0xba>
204033fa:	9342                	add	t1,t1,a6
204033fc:	fff68513          	addi	a0,a3,-1
20403400:	01036663          	bltu	t1,a6,2040340c <__udivdi3+0xba>
20403404:	00b37463          	bgeu	t1,a1,2040340c <__udivdi3+0xba>
20403408:	ffe68513          	addi	a0,a3,-2
2040340c:	0742                	slli	a4,a4,0x10
2040340e:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20403410:	4581                	li	a1,0
20403412:	a84d                	j	204034c4 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20403414:	010006b7          	lui	a3,0x1000
20403418:	4741                	li	a4,16
2040341a:	f6d660e3          	bltu	a2,a3,2040337a <__udivdi3+0x28>
2040341e:	4761                	li	a4,24
20403420:	bfa9                	j	2040337a <__udivdi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20403422:	e601                	bnez	a2,2040342a <__udivdi3+0xd8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20403424:	4685                	li	a3,1
20403426:	02c6d833          	divu	a6,a3,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
2040342a:	66c1                	lui	a3,0x10
2040342c:	08d87e63          	bgeu	a6,a3,204034c8 <__udivdi3+0x176>
20403430:	0ff00693          	li	a3,255
20403434:	0106f363          	bgeu	a3,a6,2040343a <__udivdi3+0xe8>
20403438:	4721                	li	a4,8
2040343a:	00e856b3          	srl	a3,a6,a4
2040343e:	98b6                	add	a7,a7,a3
20403440:	0008c683          	lbu	a3,0(a7)
20403444:	96ba                	add	a3,a3,a4
20403446:	02000713          	li	a4,32
2040344a:	8f15                	sub	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
2040344c:	e749                	bnez	a4,204034d6 <__udivdi3+0x184>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
2040344e:	410787b3          	sub	a5,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
20403452:	4585                	li	a1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20403454:	01085613          	srli	a2,a6,0x10
20403458:	01081893          	slli	a7,a6,0x10
2040345c:	0108d893          	srli	a7,a7,0x10
20403460:	01035693          	srli	a3,t1,0x10
20403464:	02c7f733          	remu	a4,a5,a2
20403468:	02c7d7b3          	divu	a5,a5,a2
2040346c:	0742                	slli	a4,a4,0x10
2040346e:	8ed9                	or	a3,a3,a4
20403470:	02f88533          	mul	a0,a7,a5
20403474:	873e                	mv	a4,a5
20403476:	00a6fc63          	bgeu	a3,a0,2040348e <__udivdi3+0x13c>
2040347a:	96c2                	add	a3,a3,a6
2040347c:	fff78713          	addi	a4,a5,-1
20403480:	0106e763          	bltu	a3,a6,2040348e <__udivdi3+0x13c>
20403484:	00a6f563          	bgeu	a3,a0,2040348e <__udivdi3+0x13c>
20403488:	ffe78713          	addi	a4,a5,-2
2040348c:	96c2                	add	a3,a3,a6
2040348e:	8e89                	sub	a3,a3,a0
20403490:	02c6f7b3          	remu	a5,a3,a2
20403494:	0342                	slli	t1,t1,0x10
20403496:	01035313          	srli	t1,t1,0x10
2040349a:	02c6d6b3          	divu	a3,a3,a2
2040349e:	07c2                	slli	a5,a5,0x10
204034a0:	0067e333          	or	t1,a5,t1
204034a4:	02d888b3          	mul	a7,a7,a3
204034a8:	8536                	mv	a0,a3
204034aa:	01137b63          	bgeu	t1,a7,204034c0 <__udivdi3+0x16e>
204034ae:	9342                	add	t1,t1,a6
204034b0:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
204034b4:	01036663          	bltu	t1,a6,204034c0 <__udivdi3+0x16e>
204034b8:	01137463          	bgeu	t1,a7,204034c0 <__udivdi3+0x16e>
204034bc:	ffe68513          	addi	a0,a3,-2
204034c0:	0742                	slli	a4,a4,0x10
204034c2:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
204034c4:	853a                	mv	a0,a4
204034c6:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
204034c8:	010006b7          	lui	a3,0x1000
204034cc:	4741                	li	a4,16
204034ce:	f6d866e3          	bltu	a6,a3,2040343a <__udivdi3+0xe8>
204034d2:	4761                	li	a4,24
204034d4:	b79d                	j	2040343a <__udivdi3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
204034d6:	00e81833          	sll	a6,a6,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
204034da:	00d7d5b3          	srl	a1,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
204034de:	00e51333          	sll	t1,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
204034e2:	00d556b3          	srl	a3,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
204034e6:	01085513          	srli	a0,a6,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
204034ea:	00e797b3          	sll	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
204034ee:	02a5f733          	remu	a4,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
204034f2:	00f6e8b3          	or	a7,a3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
204034f6:	01081793          	slli	a5,a6,0x10
204034fa:	83c1                	srli	a5,a5,0x10
204034fc:	0108d613          	srli	a2,a7,0x10
20403500:	02a5d5b3          	divu	a1,a1,a0
20403504:	0742                	slli	a4,a4,0x10
20403506:	8f51                	or	a4,a4,a2
20403508:	02b786b3          	mul	a3,a5,a1
2040350c:	862e                	mv	a2,a1
2040350e:	00d77c63          	bgeu	a4,a3,20403526 <__udivdi3+0x1d4>
20403512:	9742                	add	a4,a4,a6
20403514:	fff58613          	addi	a2,a1,-1
20403518:	01076763          	bltu	a4,a6,20403526 <__udivdi3+0x1d4>
2040351c:	00d77563          	bgeu	a4,a3,20403526 <__udivdi3+0x1d4>
20403520:	ffe58613          	addi	a2,a1,-2
20403524:	9742                	add	a4,a4,a6
20403526:	40d706b3          	sub	a3,a4,a3
2040352a:	02a6f733          	remu	a4,a3,a0
2040352e:	08c2                	slli	a7,a7,0x10
20403530:	0108d893          	srli	a7,a7,0x10
20403534:	02a6d6b3          	divu	a3,a3,a0
20403538:	0742                	slli	a4,a4,0x10
2040353a:	02d785b3          	mul	a1,a5,a3
2040353e:	011767b3          	or	a5,a4,a7
20403542:	8736                	mv	a4,a3
20403544:	00b7fc63          	bgeu	a5,a1,2040355c <__udivdi3+0x20a>
20403548:	97c2                	add	a5,a5,a6
2040354a:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
2040354e:	0107e763          	bltu	a5,a6,2040355c <__udivdi3+0x20a>
20403552:	00b7f563          	bgeu	a5,a1,2040355c <__udivdi3+0x20a>
20403556:	ffe68713          	addi	a4,a3,-2
2040355a:	97c2                	add	a5,a5,a6
2040355c:	8f8d                	sub	a5,a5,a1
2040355e:	01061593          	slli	a1,a2,0x10
20403562:	8dd9                	or	a1,a1,a4
20403564:	bdc5                	j	20403454 <__udivdi3+0x102>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20403566:	14d5e263          	bltu	a1,a3,204036aa <__udivdi3+0x358>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
2040356a:	6741                	lui	a4,0x10
2040356c:	02e6fe63          	bgeu	a3,a4,204035a8 <__udivdi3+0x256>
20403570:	0ff00813          	li	a6,255
20403574:	00d83733          	sltu	a4,a6,a3
20403578:	070e                	slli	a4,a4,0x3
2040357a:	00e6d833          	srl	a6,a3,a4
2040357e:	00006597          	auipc	a1,0x6
20403582:	cb258593          	addi	a1,a1,-846 # 20409230 <__clz_tab>
20403586:	95c2                	add	a1,a1,a6
20403588:	0005c803          	lbu	a6,0(a1)
2040358c:	02000593          	li	a1,32
20403590:	983a                	add	a6,a6,a4
20403592:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20403596:	e185                	bnez	a1,204035b6 <__udivdi3+0x264>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20403598:	4705                	li	a4,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
2040359a:	f2f6e5e3          	bltu	a3,a5,204034c4 <__udivdi3+0x172>
2040359e:	00c53533          	sltu	a0,a0,a2
204035a2:	00154713          	xori	a4,a0,1
204035a6:	bf39                	j	204034c4 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
204035a8:	010005b7          	lui	a1,0x1000
204035ac:	4741                	li	a4,16
204035ae:	fcb6e6e3          	bltu	a3,a1,2040357a <__udivdi3+0x228>
204035b2:	4761                	li	a4,24
204035b4:	b7d9                	j	2040357a <__udivdi3+0x228>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
204035b6:	01065733          	srl	a4,a2,a6
204035ba:	00b696b3          	sll	a3,a3,a1
204035be:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204035c0:	0106de93          	srli	t4,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
204035c4:	0107d733          	srl	a4,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204035c8:	03d778b3          	remu	a7,a4,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
204035cc:	00b797b3          	sll	a5,a5,a1
204035d0:	01055833          	srl	a6,a0,a6
204035d4:	00f86333          	or	t1,a6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204035d8:	01069793          	slli	a5,a3,0x10
204035dc:	83c1                	srli	a5,a5,0x10
204035de:	01035813          	srli	a6,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
204035e2:	00b61633          	sll	a2,a2,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204035e6:	03d75733          	divu	a4,a4,t4
204035ea:	08c2                	slli	a7,a7,0x10
204035ec:	0108e833          	or	a6,a7,a6
204035f0:	02e78f33          	mul	t5,a5,a4
204035f4:	8e3a                	mv	t3,a4
204035f6:	01e87c63          	bgeu	a6,t5,2040360e <__udivdi3+0x2bc>
204035fa:	9836                	add	a6,a6,a3
204035fc:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
20403600:	00d86763          	bltu	a6,a3,2040360e <__udivdi3+0x2bc>
20403604:	01e87563          	bgeu	a6,t5,2040360e <__udivdi3+0x2bc>
20403608:	ffe70e13          	addi	t3,a4,-2
2040360c:	9836                	add	a6,a6,a3
2040360e:	41e80833          	sub	a6,a6,t5
20403612:	03d878b3          	remu	a7,a6,t4
20403616:	03d85833          	divu	a6,a6,t4
2040361a:	08c2                	slli	a7,a7,0x10
2040361c:	03078eb3          	mul	t4,a5,a6
20403620:	01031793          	slli	a5,t1,0x10
20403624:	83c1                	srli	a5,a5,0x10
20403626:	00f8e7b3          	or	a5,a7,a5
2040362a:	8742                	mv	a4,a6
2040362c:	01d7fc63          	bgeu	a5,t4,20403644 <__udivdi3+0x2f2>
20403630:	97b6                	add	a5,a5,a3
20403632:	fff80713          	addi	a4,a6,-1
20403636:	00d7e763          	bltu	a5,a3,20403644 <__udivdi3+0x2f2>
2040363a:	01d7f563          	bgeu	a5,t4,20403644 <__udivdi3+0x2f2>
2040363e:	ffe80713          	addi	a4,a6,-2
20403642:	97b6                	add	a5,a5,a3
20403644:	0e42                	slli	t3,t3,0x10
20403646:	41d787b3          	sub	a5,a5,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040364a:	6ec1                	lui	t4,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2040364c:	00ee6733          	or	a4,t3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20403650:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
20403654:	01077333          	and	t1,a4,a6
20403658:	01075893          	srli	a7,a4,0x10
2040365c:	01067833          	and	a6,a2,a6
20403660:	8241                	srli	a2,a2,0x10
20403662:	03030e33          	mul	t3,t1,a6
20403666:	03088833          	mul	a6,a7,a6
2040366a:	010e5693          	srli	a3,t3,0x10
2040366e:	02c30333          	mul	t1,t1,a2
20403672:	9342                	add	t1,t1,a6
20403674:	969a                	add	a3,a3,t1
20403676:	02c888b3          	mul	a7,a7,a2
2040367a:	0106f363          	bgeu	a3,a6,20403680 <__udivdi3+0x32e>
2040367e:	98f6                	add	a7,a7,t4
20403680:	0106d613          	srli	a2,a3,0x10
20403684:	98b2                	add	a7,a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20403686:	0317e063          	bltu	a5,a7,204036a6 <__udivdi3+0x354>
2040368a:	d91793e3          	bne	a5,a7,20403410 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040368e:	67c1                	lui	a5,0x10
20403690:	17fd                	addi	a5,a5,-1
20403692:	8efd                	and	a3,a3,a5
20403694:	06c2                	slli	a3,a3,0x10
20403696:	00fe7e33          	and	t3,t3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
2040369a:	00b51533          	sll	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040369e:	96f2                	add	a3,a3,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
204036a0:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
204036a2:	e2d571e3          	bgeu	a0,a3,204034c4 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
204036a6:	177d                	addi	a4,a4,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
204036a8:	b3a5                	j	20403410 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
204036aa:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
204036ac:	4701                	li	a4,0
204036ae:	bd19                	j	204034c4 <__udivdi3+0x172>

204036b0 <__umoddi3>:
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
204036b0:	88b2                	mv	a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
204036b2:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
204036b4:	87aa                	mv	a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
204036b6:	882e                	mv	a6,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
204036b8:	1c069863          	bnez	a3,20403888 <__umoddi3+0x1d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
204036bc:	00006697          	auipc	a3,0x6
204036c0:	b7468693          	addi	a3,a3,-1164 # 20409230 <__clz_tab>
204036c4:	0ac5f863          	bgeu	a1,a2,20403774 <__umoddi3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
204036c8:	6341                	lui	t1,0x10
204036ca:	08667e63          	bgeu	a2,t1,20403766 <__umoddi3+0xb6>
204036ce:	0ff00313          	li	t1,255
204036d2:	00c37363          	bgeu	t1,a2,204036d8 <__umoddi3+0x28>
204036d6:	4721                	li	a4,8
204036d8:	00e65333          	srl	t1,a2,a4
204036dc:	969a                	add	a3,a3,t1
204036de:	0006ce03          	lbu	t3,0(a3)
204036e2:	02000313          	li	t1,32
204036e6:	9e3a                	add	t3,t3,a4
204036e8:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
204036ec:	00030c63          	beqz	t1,20403704 <__umoddi3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
204036f0:	006595b3          	sll	a1,a1,t1
204036f4:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
204036f8:	006618b3          	sll	a7,a2,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
204036fc:	00be6833          	or	a6,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20403700:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20403704:	0108d613          	srli	a2,a7,0x10
20403708:	02c87733          	remu	a4,a6,a2
2040370c:	01089513          	slli	a0,a7,0x10
20403710:	8141                	srli	a0,a0,0x10
20403712:	0107d693          	srli	a3,a5,0x10
20403716:	02c85833          	divu	a6,a6,a2
2040371a:	0742                	slli	a4,a4,0x10
2040371c:	8ed9                	or	a3,a3,a4
2040371e:	03050833          	mul	a6,a0,a6
20403722:	0106f863          	bgeu	a3,a6,20403732 <__umoddi3+0x82>
20403726:	96c6                	add	a3,a3,a7
20403728:	0116e563          	bltu	a3,a7,20403732 <__umoddi3+0x82>
2040372c:	0106f363          	bgeu	a3,a6,20403732 <__umoddi3+0x82>
20403730:	96c6                	add	a3,a3,a7
20403732:	410686b3          	sub	a3,a3,a6
20403736:	02c6f733          	remu	a4,a3,a2
2040373a:	07c2                	slli	a5,a5,0x10
2040373c:	83c1                	srli	a5,a5,0x10
2040373e:	02c6d6b3          	divu	a3,a3,a2
20403742:	02d506b3          	mul	a3,a0,a3
20403746:	01071513          	slli	a0,a4,0x10
2040374a:	8fc9                	or	a5,a5,a0
2040374c:	00d7f863          	bgeu	a5,a3,2040375c <__umoddi3+0xac>
20403750:	97c6                	add	a5,a5,a7
20403752:	0117e563          	bltu	a5,a7,2040375c <__umoddi3+0xac>
20403756:	00d7f363          	bgeu	a5,a3,2040375c <__umoddi3+0xac>
2040375a:	97c6                	add	a5,a5,a7
2040375c:	8f95                	sub	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
2040375e:	0067d533          	srl	a0,a5,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
20403762:	4581                	li	a1,0
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
20403764:	8082                	ret
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20403766:	01000337          	lui	t1,0x1000
2040376a:	4741                	li	a4,16
2040376c:	f66666e3          	bltu	a2,t1,204036d8 <__umoddi3+0x28>
20403770:	4761                	li	a4,24
20403772:	b79d                	j	204036d8 <__umoddi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20403774:	e601                	bnez	a2,2040377c <__umoddi3+0xcc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20403776:	4605                	li	a2,1
20403778:	031658b3          	divu	a7,a2,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
2040377c:	6641                	lui	a2,0x10
2040377e:	08c8f363          	bgeu	a7,a2,20403804 <__umoddi3+0x154>
20403782:	0ff00613          	li	a2,255
20403786:	01167363          	bgeu	a2,a7,2040378c <__umoddi3+0xdc>
2040378a:	4721                	li	a4,8
2040378c:	00e8d633          	srl	a2,a7,a4
20403790:	96b2                	add	a3,a3,a2
20403792:	0006ce03          	lbu	t3,0(a3)
20403796:	02000313          	li	t1,32
2040379a:	9e3a                	add	t3,t3,a4
2040379c:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
204037a0:	06031963          	bnez	t1,20403812 <__umoddi3+0x162>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
204037a4:	411585b3          	sub	a1,a1,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
204037a8:	0108d713          	srli	a4,a7,0x10
204037ac:	01089513          	slli	a0,a7,0x10
204037b0:	8141                	srli	a0,a0,0x10
204037b2:	0107d613          	srli	a2,a5,0x10
204037b6:	02e5f6b3          	remu	a3,a1,a4
204037ba:	02e5d5b3          	divu	a1,a1,a4
204037be:	06c2                	slli	a3,a3,0x10
204037c0:	8ed1                	or	a3,a3,a2
204037c2:	02b505b3          	mul	a1,a0,a1
204037c6:	00b6f863          	bgeu	a3,a1,204037d6 <__umoddi3+0x126>
204037ca:	96c6                	add	a3,a3,a7
204037cc:	0116e563          	bltu	a3,a7,204037d6 <__umoddi3+0x126>
204037d0:	00b6f363          	bgeu	a3,a1,204037d6 <__umoddi3+0x126>
204037d4:	96c6                	add	a3,a3,a7
204037d6:	40b685b3          	sub	a1,a3,a1
204037da:	02e5f6b3          	remu	a3,a1,a4
204037de:	07c2                	slli	a5,a5,0x10
204037e0:	83c1                	srli	a5,a5,0x10
204037e2:	02e5d5b3          	divu	a1,a1,a4
204037e6:	02b505b3          	mul	a1,a0,a1
204037ea:	01069513          	slli	a0,a3,0x10
204037ee:	8fc9                	or	a5,a5,a0
204037f0:	00b7f863          	bgeu	a5,a1,20403800 <__umoddi3+0x150>
204037f4:	97c6                	add	a5,a5,a7
204037f6:	0117e563          	bltu	a5,a7,20403800 <__umoddi3+0x150>
204037fa:	00b7f363          	bgeu	a5,a1,20403800 <__umoddi3+0x150>
204037fe:	97c6                	add	a5,a5,a7
20403800:	8f8d                	sub	a5,a5,a1
20403802:	bfb1                	j	2040375e <__umoddi3+0xae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20403804:	01000637          	lui	a2,0x1000
20403808:	4741                	li	a4,16
2040380a:	f8c8e1e3          	bltu	a7,a2,2040378c <__umoddi3+0xdc>
2040380e:	4761                	li	a4,24
20403810:	bfb5                	j	2040378c <__umoddi3+0xdc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20403812:	006898b3          	sll	a7,a7,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20403816:	01c5d733          	srl	a4,a1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
2040381a:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2040381e:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20403822:	0108d513          	srli	a0,a7,0x10
20403826:	02a776b3          	remu	a3,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2040382a:	006595b3          	sll	a1,a1,t1
2040382e:	00be6e33          	or	t3,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20403832:	01089593          	slli	a1,a7,0x10
20403836:	81c1                	srli	a1,a1,0x10
20403838:	010e5613          	srli	a2,t3,0x10
2040383c:	02a75733          	divu	a4,a4,a0
20403840:	06c2                	slli	a3,a3,0x10
20403842:	8ed1                	or	a3,a3,a2
20403844:	02e58733          	mul	a4,a1,a4
20403848:	00e6f863          	bgeu	a3,a4,20403858 <__umoddi3+0x1a8>
2040384c:	96c6                	add	a3,a3,a7
2040384e:	0116e563          	bltu	a3,a7,20403858 <__umoddi3+0x1a8>
20403852:	00e6f363          	bgeu	a3,a4,20403858 <__umoddi3+0x1a8>
20403856:	96c6                	add	a3,a3,a7
20403858:	40e68633          	sub	a2,a3,a4
2040385c:	02a676b3          	remu	a3,a2,a0
20403860:	0e42                	slli	t3,t3,0x10
20403862:	010e5e13          	srli	t3,t3,0x10
20403866:	02a65633          	divu	a2,a2,a0
2040386a:	06c2                	slli	a3,a3,0x10
2040386c:	02c58633          	mul	a2,a1,a2
20403870:	01c6e5b3          	or	a1,a3,t3
20403874:	00c5f863          	bgeu	a1,a2,20403884 <__umoddi3+0x1d4>
20403878:	95c6                	add	a1,a1,a7
2040387a:	0115e563          	bltu	a1,a7,20403884 <__umoddi3+0x1d4>
2040387e:	00c5f363          	bgeu	a1,a2,20403884 <__umoddi3+0x1d4>
20403882:	95c6                	add	a1,a1,a7
20403884:	8d91                	sub	a1,a1,a2
20403886:	b70d                	j	204037a8 <__umoddi3+0xf8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20403888:	ecd5eee3          	bltu	a1,a3,20403764 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
2040388c:	6741                	lui	a4,0x10
2040388e:	04e6f563          	bgeu	a3,a4,204038d8 <__umoddi3+0x228>
20403892:	0ff00e93          	li	t4,255
20403896:	00deb733          	sltu	a4,t4,a3
2040389a:	070e                	slli	a4,a4,0x3
2040389c:	00e6d333          	srl	t1,a3,a4
204038a0:	00006897          	auipc	a7,0x6
204038a4:	99088893          	addi	a7,a7,-1648 # 20409230 <__clz_tab>
204038a8:	989a                	add	a7,a7,t1
204038aa:	0008ce83          	lbu	t4,0(a7)
204038ae:	02000e13          	li	t3,32
204038b2:	9eba                	add	t4,t4,a4
204038b4:	41de0e33          	sub	t3,t3,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
204038b8:	020e1763          	bnez	t3,204038e6 <__umoddi3+0x236>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
204038bc:	00b6e463          	bltu	a3,a1,204038c4 <__umoddi3+0x214>
204038c0:	00c56963          	bltu	a0,a2,204038d2 <__umoddi3+0x222>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
204038c4:	40c507b3          	sub	a5,a0,a2
204038c8:	8d95                	sub	a1,a1,a3
204038ca:	00f53533          	sltu	a0,a0,a5
204038ce:	40a58833          	sub	a6,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
204038d2:	853e                	mv	a0,a5
204038d4:	85c2                	mv	a1,a6
204038d6:	b579                	j	20403764 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
204038d8:	010008b7          	lui	a7,0x1000
204038dc:	4741                	li	a4,16
204038de:	fb16efe3          	bltu	a3,a7,2040389c <__umoddi3+0x1ec>
204038e2:	4761                	li	a4,24
204038e4:	bf65                	j	2040389c <__umoddi3+0x1ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
204038e6:	01d65733          	srl	a4,a2,t4
204038ea:	01c696b3          	sll	a3,a3,t3
204038ee:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204038f0:	0106d813          	srli	a6,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
204038f4:	01d5d733          	srl	a4,a1,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
204038f8:	03077333          	remu	t1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
204038fc:	01c595b3          	sll	a1,a1,t3
20403900:	01d557b3          	srl	a5,a0,t4
20403904:	8fcd                	or	a5,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403906:	01069593          	slli	a1,a3,0x10
2040390a:	81c1                	srli	a1,a1,0x10
2040390c:	0107d893          	srli	a7,a5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20403910:	01c61633          	sll	a2,a2,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20403914:	01c51533          	sll	a0,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403918:	03075733          	divu	a4,a4,a6
2040391c:	0342                	slli	t1,t1,0x10
2040391e:	011368b3          	or	a7,t1,a7
20403922:	02e58f33          	mul	t5,a1,a4
20403926:	833a                	mv	t1,a4
20403928:	01e8fc63          	bgeu	a7,t5,20403940 <__umoddi3+0x290>
2040392c:	98b6                	add	a7,a7,a3
2040392e:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
20403932:	00d8e763          	bltu	a7,a3,20403940 <__umoddi3+0x290>
20403936:	01e8f563          	bgeu	a7,t5,20403940 <__umoddi3+0x290>
2040393a:	ffe70313          	addi	t1,a4,-2
2040393e:	98b6                	add	a7,a7,a3
20403940:	41e888b3          	sub	a7,a7,t5
20403944:	0308ff33          	remu	t5,a7,a6
20403948:	0308d8b3          	divu	a7,a7,a6
2040394c:	0f42                	slli	t5,t5,0x10
2040394e:	03158833          	mul	a6,a1,a7
20403952:	01079593          	slli	a1,a5,0x10
20403956:	81c1                	srli	a1,a1,0x10
20403958:	00bf65b3          	or	a1,t5,a1
2040395c:	87c6                	mv	a5,a7
2040395e:	0105fc63          	bgeu	a1,a6,20403976 <__umoddi3+0x2c6>
20403962:	95b6                	add	a1,a1,a3
20403964:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
20403968:	00d5e763          	bltu	a1,a3,20403976 <__umoddi3+0x2c6>
2040396c:	0105f563          	bgeu	a1,a6,20403976 <__umoddi3+0x2c6>
20403970:	ffe88793          	addi	a5,a7,-2
20403974:	95b6                	add	a1,a1,a3
20403976:	0342                	slli	t1,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20403978:	6f41                	lui	t5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2040397a:	00f36333          	or	t1,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040397e:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
20403982:	00f378b3          	and	a7,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20403986:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2040398a:	01035313          	srli	t1,t1,0x10
2040398e:	01065813          	srli	a6,a2,0x10
20403992:	8ff1                	and	a5,a5,a2
20403994:	02f88733          	mul	a4,a7,a5
20403998:	02f307b3          	mul	a5,t1,a5
2040399c:	030888b3          	mul	a7,a7,a6
204039a0:	03030333          	mul	t1,t1,a6
204039a4:	98be                	add	a7,a7,a5
204039a6:	01075813          	srli	a6,a4,0x10
204039aa:	9846                	add	a6,a6,a7
204039ac:	00f87363          	bgeu	a6,a5,204039b2 <__umoddi3+0x302>
204039b0:	937a                	add	t1,t1,t5
204039b2:	01085793          	srli	a5,a6,0x10
204039b6:	933e                	add	t1,t1,a5
204039b8:	67c1                	lui	a5,0x10
204039ba:	17fd                	addi	a5,a5,-1
204039bc:	00f87833          	and	a6,a6,a5
204039c0:	0842                	slli	a6,a6,0x10
204039c2:	8f7d                	and	a4,a4,a5
204039c4:	9742                	add	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
204039c6:	0065e663          	bltu	a1,t1,204039d2 <__umoddi3+0x322>
204039ca:	00659c63          	bne	a1,t1,204039e2 <__umoddi3+0x332>
204039ce:	00e57a63          	bgeu	a0,a4,204039e2 <__umoddi3+0x332>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
204039d2:	40c70633          	sub	a2,a4,a2
204039d6:	00c73733          	sltu	a4,a4,a2
204039da:	9736                	add	a4,a4,a3
204039dc:	40e30333          	sub	t1,t1,a4
204039e0:	8732                	mv	a4,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
204039e2:	40e50733          	sub	a4,a0,a4
204039e6:	00e53533          	sltu	a0,a0,a4
204039ea:	406585b3          	sub	a1,a1,t1
204039ee:	8d89                	sub	a1,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
204039f0:	01d597b3          	sll	a5,a1,t4
204039f4:	01c75733          	srl	a4,a4,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
204039f8:	00e7e533          	or	a0,a5,a4
204039fc:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
20403a00:	b395                	j	20403764 <__umoddi3+0xb4>

20403a02 <__adddf3>:
__adddf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403a02:	00100837          	lui	a6,0x100
20403a06:	187d                	addi	a6,a6,-1
20403a08:	00b878b3          	and	a7,a6,a1
20403a0c:	088e                	slli	a7,a7,0x3
20403a0e:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403a12:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403a14:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403a18:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403a1c:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403a20:	0146d893          	srli	a7,a3,0x14
20403a24:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403a26:	ca26                	sw	s1,20(sp)
20403a28:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403a2a:	7ff77493          	andi	s1,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403a2e:	7ff8f893          	andi	a7,a7,2047
20403a32:	01d65713          	srli	a4,a2,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20403a36:	ce06                	sw	ra,28(sp)
20403a38:	cc22                	sw	s0,24(sp)
20403a3a:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403a3c:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403a40:	82fd                	srli	a3,a3,0x1f
20403a42:	01076733          	or	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20403a46:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403a48:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403a4a:	41148833          	sub	a6,s1,a7
20403a4e:	22d91663          	bne	s2,a3,20403c7a <__adddf3+0x278>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 7)
20403a52:	0f005163          	blez	a6,20403b34 <__adddf3+0x132>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 9)
20403a56:	02089863          	bnez	a7,20403a86 <__adddf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 11)
20403a5a:	00c766b3          	or	a3,a4,a2
20403a5e:	56068763          	beqz	a3,20403fcc <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 14)
20403a62:	fff80593          	addi	a1,a6,-1 # fffff <__heap_size+0xff7ff>
20403a66:	e989                	bnez	a1,20403a78 <__adddf3+0x76>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 23)
20403a68:	962a                	add	a2,a2,a0
20403a6a:	00a63533          	sltu	a0,a2,a0
20403a6e:	97ba                	add	a5,a5,a4
20403a70:	97aa                	add	a5,a5,a0
20403a72:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 80)
20403a74:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
20403a76:	a8b1                	j	20403ad2 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 24)
20403a78:	7ff00693          	li	a3,2047
20403a7c:	00d81d63          	bne	a6,a3,20403a96 <__adddf3+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403a80:	7ff00493          	li	s1,2047
20403a84:	aa79                	j	20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 12)
20403a86:	7ff00693          	li	a3,2047
20403a8a:	18d48c63          	beq	s1,a3,20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 38)
20403a8e:	008006b7          	lui	a3,0x800
20403a92:	8f55                	or	a4,a4,a3
20403a94:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 47)
20403a96:	03800693          	li	a3,56
20403a9a:	08b6c963          	blt	a3,a1,20403b2c <__adddf3+0x12a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 48)
20403a9e:	46fd                	li	a3,31
20403aa0:	06b6c063          	blt	a3,a1,20403b00 <__adddf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 50)
20403aa4:	02000813          	li	a6,32
20403aa8:	40b80833          	sub	a6,a6,a1
20403aac:	010716b3          	sll	a3,a4,a6
20403ab0:	00b658b3          	srl	a7,a2,a1
20403ab4:	01061633          	sll	a2,a2,a6
20403ab8:	0116e6b3          	or	a3,a3,a7
20403abc:	00c03633          	snez	a2,a2
20403ac0:	8e55                	or	a2,a2,a3
20403ac2:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 64)
20403ac6:	962a                	add	a2,a2,a0
20403ac8:	973e                	add	a4,a4,a5
20403aca:	00a637b3          	sltu	a5,a2,a0
20403ace:	97ba                	add	a5,a5,a4
20403ad0:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 122)
20403ad2:	00879713          	slli	a4,a5,0x8
20403ad6:	14075663          	bgez	a4,20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 182)
20403ada:	0485                	addi	s1,s1,1
20403adc:	7ff00713          	li	a4,2047
20403ae0:	48e48563          	beq	s1,a4,20403f6a <__adddf3+0x568>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403ae4:	ff8006b7          	lui	a3,0xff800
20403ae8:	16fd                	addi	a3,a3,-1
20403aea:	8efd                	and	a3,a3,a5
20403aec:	00155593          	srli	a1,a0,0x1
20403af0:	8905                	andi	a0,a0,1
20403af2:	01f69793          	slli	a5,a3,0x1f
20403af6:	8d4d                	or	a0,a0,a1
20403af8:	8d5d                	or	a0,a0,a5
20403afa:	0016d793          	srli	a5,a3,0x1
20403afe:	a215                	j	20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 51)
20403b00:	fe058693          	addi	a3,a1,-32 # ffffe0 <__heap_size+0xfff7e0>
20403b04:	02000893          	li	a7,32
20403b08:	00d756b3          	srl	a3,a4,a3
20403b0c:	4801                	li	a6,0
20403b0e:	01158863          	beq	a1,a7,20403b1e <__adddf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 58)
20403b12:	04000813          	li	a6,64
20403b16:	40b805b3          	sub	a1,a6,a1
20403b1a:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 61)
20403b1e:	00c86633          	or	a2,a6,a2
20403b22:	00c03633          	snez	a2,a2
20403b26:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 49)
20403b28:	4701                	li	a4,0
20403b2a:	bf71                	j	20403ac6 <__adddf3+0xc4>
20403b2c:	8e59                	or	a2,a2,a4
20403b2e:	00c03633          	snez	a2,a2
20403b32:	bfdd                	j	20403b28 <__adddf3+0x126>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 10)
20403b34:	0a080b63          	beqz	a6,20403bea <__adddf3+0x1e8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 66)
20403b38:	409885b3          	sub	a1,a7,s1
20403b3c:	e48d                	bnez	s1,20403b66 <__adddf3+0x164>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 68)
20403b3e:	00a7e6b3          	or	a3,a5,a0
20403b42:	40068b63          	beqz	a3,20403f58 <__adddf3+0x556>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 71)
20403b46:	fff58693          	addi	a3,a1,-1
20403b4a:	e699                	bnez	a3,20403b58 <__adddf3+0x156>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
20403b4c:	9532                	add	a0,a0,a2
20403b4e:	97ba                	add	a5,a5,a4
20403b50:	00c53633          	sltu	a2,a0,a2
20403b54:	97b2                	add	a5,a5,a2
20403b56:	bf39                	j	20403a74 <__adddf3+0x72>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 81)
20403b58:	7ff00813          	li	a6,2047
20403b5c:	01059d63          	bne	a1,a6,20403b76 <__adddf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403b60:	87ba                	mv	a5,a4
20403b62:	8532                	mv	a0,a2
20403b64:	bf31                	j	20403a80 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 69)
20403b66:	7ff00693          	li	a3,2047
20403b6a:	fed88be3          	beq	a7,a3,20403b60 <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 95)
20403b6e:	008006b7          	lui	a3,0x800
20403b72:	8fd5                	or	a5,a5,a3
20403b74:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 104)
20403b76:	03800593          	li	a1,56
20403b7a:	06d5c463          	blt	a1,a3,20403be2 <__adddf3+0x1e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 105)
20403b7e:	45fd                	li	a1,31
20403b80:	02d5cb63          	blt	a1,a3,20403bb6 <__adddf3+0x1b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 107)
20403b84:	02000813          	li	a6,32
20403b88:	40d80833          	sub	a6,a6,a3
20403b8c:	00d55333          	srl	t1,a0,a3
20403b90:	010795b3          	sll	a1,a5,a6
20403b94:	01051533          	sll	a0,a0,a6
20403b98:	0065e5b3          	or	a1,a1,t1
20403b9c:	00a03533          	snez	a0,a0
20403ba0:	8d4d                	or	a0,a0,a1
20403ba2:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 121)
20403ba6:	9532                	add	a0,a0,a2
20403ba8:	00e687b3          	add	a5,a3,a4
20403bac:	00c53633          	sltu	a2,a0,a2
20403bb0:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 121)
20403bb2:	84c6                	mv	s1,a7
20403bb4:	bf39                	j	20403ad2 <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 108)
20403bb6:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20403bba:	02000313          	li	t1,32
20403bbe:	00b7d5b3          	srl	a1,a5,a1
20403bc2:	4801                	li	a6,0
20403bc4:	00668863          	beq	a3,t1,20403bd4 <__adddf3+0x1d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 115)
20403bc8:	04000813          	li	a6,64
20403bcc:	40d806b3          	sub	a3,a6,a3
20403bd0:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 118)
20403bd4:	00a86533          	or	a0,a6,a0
20403bd8:	00a03533          	snez	a0,a0
20403bdc:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 106)
20403bde:	4681                	li	a3,0
20403be0:	b7d9                	j	20403ba6 <__adddf3+0x1a4>
20403be2:	8d5d                	or	a0,a0,a5
20403be4:	00a03533          	snez	a0,a0
20403be8:	bfdd                	j	20403bde <__adddf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 67)
20403bea:	00148693          	addi	a3,s1,1
20403bee:	7fe6f593          	andi	a1,a3,2046
20403bf2:	e1bd                	bnez	a1,20403c58 <__adddf3+0x256>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 123)
20403bf4:	00a7e6b3          	or	a3,a5,a0
20403bf8:	e4a9                	bnez	s1,20403c42 <__adddf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 125)
20403bfa:	36068363          	beqz	a3,20403f60 <__adddf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 128)
20403bfe:	00c766b3          	or	a3,a4,a2
20403c02:	c285                	beqz	a3,20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 134)
20403c04:	962a                	add	a2,a2,a0
20403c06:	97ba                	add	a5,a5,a4
20403c08:	00a63533          	sltu	a0,a2,a0
20403c0c:	97aa                	add	a5,a5,a0
20403c0e:	00879713          	slli	a4,a5,0x8
20403c12:	8532                	mv	a0,a2
20403c14:	00075763          	bgez	a4,20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 136)
20403c18:	ff800737          	lui	a4,0xff800
20403c1c:	177d                	addi	a4,a4,-1
20403c1e:	8ff9                	and	a5,a5,a4
20403c20:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 417)
20403c22:	00757713          	andi	a4,a0,7
20403c26:	34070463          	beqz	a4,20403f6e <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 37)
20403c2a:	00f57713          	andi	a4,a0,15
20403c2e:	4691                	li	a3,4
20403c30:	32d70f63          	beq	a4,a3,20403f6e <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 44)
20403c34:	00450693          	addi	a3,a0,4
20403c38:	00a6b533          	sltu	a0,a3,a0
20403c3c:	97aa                	add	a5,a5,a0
20403c3e:	8536                	mv	a0,a3
20403c40:	a63d                	j	20403f6e <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 153)
20403c42:	de99                	beqz	a3,20403b60 <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 155)
20403c44:	8e59                	or	a2,a2,a4
20403c46:	e2060de3          	beqz	a2,20403a80 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403c4a:	4901                	li	s2,0
20403c4c:	004007b7          	lui	a5,0x400
20403c50:	4501                	li	a0,0
20403c52:	7ff00493          	li	s1,2047
20403c56:	ae21                	j	20403f6e <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 124)
20403c58:	7ff00593          	li	a1,2047
20403c5c:	30b68563          	beq	a3,a1,20403f66 <__adddf3+0x564>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403c60:	962a                	add	a2,a2,a0
20403c62:	973e                	add	a4,a4,a5
20403c64:	00a637b3          	sltu	a5,a2,a0
20403c68:	973e                	add	a4,a4,a5
20403c6a:	01f71513          	slli	a0,a4,0x1f
20403c6e:	8205                	srli	a2,a2,0x1
20403c70:	8d51                	or	a0,a0,a2
20403c72:	00175793          	srli	a5,a4,0x1
20403c76:	84b6                	mv	s1,a3
20403c78:	b76d                	j	20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 8)
20403c7a:	0d005663          	blez	a6,20403d46 <__adddf3+0x344>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 200)
20403c7e:	08089163          	bnez	a7,20403d00 <__adddf3+0x2fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 202)
20403c82:	00c766b3          	or	a3,a4,a2
20403c86:	34068363          	beqz	a3,20403fcc <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 205)
20403c8a:	fff80593          	addi	a1,a6,-1
20403c8e:	e991                	bnez	a1,20403ca2 <__adddf3+0x2a0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 214)
20403c90:	40c50633          	sub	a2,a0,a2
20403c94:	00c53533          	sltu	a0,a0,a2
20403c98:	8f99                	sub	a5,a5,a4
20403c9a:	8f89                	sub	a5,a5,a0
20403c9c:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 271)
20403c9e:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20403ca0:	a0b1                	j	20403cec <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 215)
20403ca2:	7ff00693          	li	a3,2047
20403ca6:	dcd80de3          	beq	a6,a3,20403a80 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 238)
20403caa:	03800693          	li	a3,56
20403cae:	08b6c863          	blt	a3,a1,20403d3e <__adddf3+0x33c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 239)
20403cb2:	46fd                	li	a3,31
20403cb4:	04b6cf63          	blt	a3,a1,20403d12 <__adddf3+0x310>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 241)
20403cb8:	02000813          	li	a6,32
20403cbc:	40b80833          	sub	a6,a6,a1
20403cc0:	010716b3          	sll	a3,a4,a6
20403cc4:	00b658b3          	srl	a7,a2,a1
20403cc8:	01061633          	sll	a2,a2,a6
20403ccc:	0116e6b3          	or	a3,a3,a7
20403cd0:	00c03633          	snez	a2,a2
20403cd4:	8e55                	or	a2,a2,a3
20403cd6:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 255)
20403cda:	40c50633          	sub	a2,a0,a2
20403cde:	40e78733          	sub	a4,a5,a4
20403ce2:	00c537b3          	sltu	a5,a0,a2
20403ce6:	40f707b3          	sub	a5,a4,a5
20403cea:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 313)
20403cec:	00879713          	slli	a4,a5,0x8
20403cf0:	f20759e3          	bgez	a4,20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 373)
20403cf4:	00800437          	lui	s0,0x800
20403cf8:	147d                	addi	s0,s0,-1
20403cfa:	8c7d                	and	s0,s0,a5
20403cfc:	89aa                	mv	s3,a0
20403cfe:	a275                	j	20403eaa <__adddf3+0x4a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 203)
20403d00:	7ff00693          	li	a3,2047
20403d04:	f0d48fe3          	beq	s1,a3,20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 229)
20403d08:	008006b7          	lui	a3,0x800
20403d0c:	8f55                	or	a4,a4,a3
20403d0e:	85c2                	mv	a1,a6
20403d10:	bf69                	j	20403caa <__adddf3+0x2a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 242)
20403d12:	fe058693          	addi	a3,a1,-32
20403d16:	02000893          	li	a7,32
20403d1a:	00d756b3          	srl	a3,a4,a3
20403d1e:	4801                	li	a6,0
20403d20:	01158863          	beq	a1,a7,20403d30 <__adddf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 249)
20403d24:	04000813          	li	a6,64
20403d28:	40b805b3          	sub	a1,a6,a1
20403d2c:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 252)
20403d30:	00c86633          	or	a2,a6,a2
20403d34:	00c03633          	snez	a2,a2
20403d38:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 240)
20403d3a:	4701                	li	a4,0
20403d3c:	bf79                	j	20403cda <__adddf3+0x2d8>
20403d3e:	8e59                	or	a2,a2,a4
20403d40:	00c03633          	snez	a2,a2
20403d44:	bfdd                	j	20403d3a <__adddf3+0x338>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 201)
20403d46:	0c080463          	beqz	a6,20403e0e <__adddf3+0x40c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 257)
20403d4a:	40988833          	sub	a6,a7,s1
20403d4e:	e895                	bnez	s1,20403d82 <__adddf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 259)
20403d50:	00a7e5b3          	or	a1,a5,a0
20403d54:	26058e63          	beqz	a1,20403fd0 <__adddf3+0x5ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 262)
20403d58:	fff80593          	addi	a1,a6,-1
20403d5c:	e991                	bnez	a1,20403d70 <__adddf3+0x36e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20403d5e:	40a60533          	sub	a0,a2,a0
20403d62:	40f707b3          	sub	a5,a4,a5
20403d66:	00a63633          	sltu	a2,a2,a0
20403d6a:	8f91                	sub	a5,a5,a2
20403d6c:	8936                	mv	s2,a3
20403d6e:	bf05                	j	20403c9e <__adddf3+0x29c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 272)
20403d70:	7ff00313          	li	t1,2047
20403d74:	00681f63          	bne	a6,t1,20403d92 <__adddf3+0x390>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403d78:	87ba                	mv	a5,a4
20403d7a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403d7c:	7ff00493          	li	s1,2047
20403d80:	a07d                	j	20403e2e <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 260)
20403d82:	7ff00593          	li	a1,2047
20403d86:	feb889e3          	beq	a7,a1,20403d78 <__adddf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 286)
20403d8a:	008005b7          	lui	a1,0x800
20403d8e:	8fcd                	or	a5,a5,a1
20403d90:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 295)
20403d92:	03800813          	li	a6,56
20403d96:	06b84863          	blt	a6,a1,20403e06 <__adddf3+0x404>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 296)
20403d9a:	487d                	li	a6,31
20403d9c:	02b84e63          	blt	a6,a1,20403dd8 <__adddf3+0x3d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 298)
20403da0:	02000313          	li	t1,32
20403da4:	40b30333          	sub	t1,t1,a1
20403da8:	00b55e33          	srl	t3,a0,a1
20403dac:	00679833          	sll	a6,a5,t1
20403db0:	00651533          	sll	a0,a0,t1
20403db4:	01c86833          	or	a6,a6,t3
20403db8:	00a03533          	snez	a0,a0
20403dbc:	00a86533          	or	a0,a6,a0
20403dc0:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 312)
20403dc4:	40a60533          	sub	a0,a2,a0
20403dc8:	40b707b3          	sub	a5,a4,a1
20403dcc:	00a63633          	sltu	a2,a2,a0
20403dd0:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 312)
20403dd2:	84c6                	mv	s1,a7
20403dd4:	8936                	mv	s2,a3
20403dd6:	bf19                	j	20403cec <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 299)
20403dd8:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20403ddc:	02000e13          	li	t3,32
20403de0:	0107d833          	srl	a6,a5,a6
20403de4:	4301                	li	t1,0
20403de6:	01c58863          	beq	a1,t3,20403df6 <__adddf3+0x3f4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 306)
20403dea:	04000313          	li	t1,64
20403dee:	40b305b3          	sub	a1,t1,a1
20403df2:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 309)
20403df6:	00a36533          	or	a0,t1,a0
20403dfa:	00a03533          	snez	a0,a0
20403dfe:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 297)
20403e02:	4581                	li	a1,0
20403e04:	b7c1                	j	20403dc4 <__adddf3+0x3c2>
20403e06:	8d5d                	or	a0,a0,a5
20403e08:	00a03533          	snez	a0,a0
20403e0c:	bfdd                	j	20403e02 <__adddf3+0x400>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 258)
20403e0e:	00148593          	addi	a1,s1,1
20403e12:	7fe5f593          	andi	a1,a1,2046
20403e16:	e5b5                	bnez	a1,20403e82 <__adddf3+0x480>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 314)
20403e18:	00a7e833          	or	a6,a5,a0
20403e1c:	00c765b3          	or	a1,a4,a2
20403e20:	e4b1                	bnez	s1,20403e6c <__adddf3+0x46a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 316)
20403e22:	00081863          	bnez	a6,20403e32 <__adddf3+0x430>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 318)
20403e26:	1a058963          	beqz	a1,20403fd8 <__adddf3+0x5d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403e2a:	87ba                	mv	a5,a4
20403e2c:	8532                	mv	a0,a2
20403e2e:	8936                	mv	s2,a3
20403e30:	bbcd                	j	20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 319)
20403e32:	de0588e3          	beqz	a1,20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 326)
20403e36:	40c50833          	sub	a6,a0,a2
20403e3a:	40e785b3          	sub	a1,a5,a4
20403e3e:	010538b3          	sltu	a7,a0,a6
20403e42:	411585b3          	sub	a1,a1,a7
20403e46:	00859413          	slli	s0,a1,0x8
20403e4a:	00045a63          	bgez	s0,20403e5e <__adddf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 328)
20403e4e:	40a60533          	sub	a0,a2,a0
20403e52:	40f707b3          	sub	a5,a4,a5
20403e56:	00a63633          	sltu	a2,a2,a0
20403e5a:	8f91                	sub	a5,a5,a2
20403e5c:	bfc9                	j	20403e2e <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 329)
20403e5e:	00b86533          	or	a0,a6,a1
20403e62:	16050f63          	beqz	a0,20403fe0 <__adddf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403e66:	87ae                	mv	a5,a1
20403e68:	8542                	mv	a0,a6
20403e6a:	bb65                	j	20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 348)
20403e6c:	00081863          	bnez	a6,20403e7c <__adddf3+0x47a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 349)
20403e70:	16058a63          	beqz	a1,20403fe4 <__adddf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403e74:	87ba                	mv	a5,a4
20403e76:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403e78:	8936                	mv	s2,a3
20403e7a:	b119                	j	20403a80 <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 350)
20403e7c:	c00582e3          	beqz	a1,20403a80 <__adddf3+0x7e>
20403e80:	b3e9                	j	20403c4a <__adddf3+0x248>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 315)
20403e82:	40c509b3          	sub	s3,a0,a2
20403e86:	013535b3          	sltu	a1,a0,s3
20403e8a:	40e78433          	sub	s0,a5,a4
20403e8e:	8c0d                	sub	s0,s0,a1
20403e90:	00841593          	slli	a1,s0,0x8
20403e94:	0605d763          	bgez	a1,20403f02 <__adddf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 366)
20403e98:	40a609b3          	sub	s3,a2,a0
20403e9c:	40f707b3          	sub	a5,a4,a5
20403ea0:	01363633          	sltu	a2,a2,s3
20403ea4:	40c78433          	sub	s0,a5,a2
20403ea8:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 375)
20403eaa:	c035                	beqz	s0,20403f0e <__adddf3+0x50c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 378)
20403eac:	8522                	mv	a0,s0
20403eae:	3da010ef          	jal	ra,20405288 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 389)
20403eb2:	ff850713          	addi	a4,a0,-8
20403eb6:	47fd                	li	a5,31
20403eb8:	06e7c163          	blt	a5,a4,20403f1a <__adddf3+0x518>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 390)
20403ebc:	02000793          	li	a5,32
20403ec0:	8f99                	sub	a5,a5,a4
20403ec2:	00e41433          	sll	s0,s0,a4
20403ec6:	00f9d7b3          	srl	a5,s3,a5
20403eca:	8c5d                	or	s0,s0,a5
20403ecc:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 399)
20403ed0:	06974e63          	blt	a4,s1,20403f4c <__adddf3+0x54a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 400)
20403ed4:	8f05                	sub	a4,a4,s1
20403ed6:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7feb2d>
20403eda:	46fd                	li	a3,31
20403edc:	04f6c563          	blt	a3,a5,20403f26 <__adddf3+0x524>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 402)
20403ee0:	02000713          	li	a4,32
20403ee4:	8f1d                	sub	a4,a4,a5
20403ee6:	00f55633          	srl	a2,a0,a5
20403eea:	00e416b3          	sll	a3,s0,a4
20403eee:	00e51533          	sll	a0,a0,a4
20403ef2:	8ed1                	or	a3,a3,a2
20403ef4:	00a03533          	snez	a0,a0
20403ef8:	8d55                	or	a0,a0,a3
20403efa:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20403efe:	4481                	li	s1,0
20403f00:	b30d                	j	20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 367)
20403f02:	0089e533          	or	a0,s3,s0
20403f06:	f155                	bnez	a0,20403eaa <__adddf3+0x4a8>
20403f08:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403f0a:	4481                	li	s1,0
20403f0c:	a8c1                	j	20403fdc <__adddf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 382)
20403f0e:	854e                	mv	a0,s3
20403f10:	378010ef          	jal	ra,20405288 <__clzsi2>
20403f14:	02050513          	addi	a0,a0,32
20403f18:	bf69                	j	20403eb2 <__adddf3+0x4b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 391)
20403f1a:	fd850413          	addi	s0,a0,-40
20403f1e:	00899433          	sll	s0,s3,s0
20403f22:	4501                	li	a0,0
20403f24:	b775                	j	20403ed0 <__adddf3+0x4ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 403)
20403f26:	1705                	addi	a4,a4,-31
20403f28:	02000613          	li	a2,32
20403f2c:	00e45733          	srl	a4,s0,a4
20403f30:	4681                	li	a3,0
20403f32:	00c78763          	beq	a5,a2,20403f40 <__adddf3+0x53e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 411)
20403f36:	04000693          	li	a3,64
20403f3a:	8e9d                	sub	a3,a3,a5
20403f3c:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20403f40:	8d55                	or	a0,a0,a3
20403f42:	00a03533          	snez	a0,a0
20403f46:	8d59                	or	a0,a0,a4
20403f48:	4781                	li	a5,0
20403f4a:	bf55                	j	20403efe <__adddf3+0x4fc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 401)
20403f4c:	ff8007b7          	lui	a5,0xff800
20403f50:	17fd                	addi	a5,a5,-1
20403f52:	8c99                	sub	s1,s1,a4
20403f54:	8fe1                	and	a5,a5,s0
20403f56:	b1f1                	j	20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403f58:	87ba                	mv	a5,a4
20403f5a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403f5c:	84ae                	mv	s1,a1
20403f5e:	b1d1                	j	20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403f60:	87ba                	mv	a5,a4
20403f62:	8532                	mv	a0,a2
20403f64:	b97d                	j	20403c22 <__adddf3+0x220>
20403f66:	7ff00493          	li	s1,2047
20403f6a:	4781                	li	a5,0
20403f6c:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 47)
20403f6e:	00879713          	slli	a4,a5,0x8
20403f72:	00075b63          	bgez	a4,20403f88 <__adddf3+0x586>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 63)
20403f76:	0485                	addi	s1,s1,1
20403f78:	7ff00713          	li	a4,2047
20403f7c:	06e48963          	beq	s1,a4,20403fee <__adddf3+0x5ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20403f80:	ff800737          	lui	a4,0xff800
20403f84:	177d                	addi	a4,a4,-1
20403f86:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 79)
20403f88:	01d79713          	slli	a4,a5,0x1d
20403f8c:	810d                	srli	a0,a0,0x3
20403f8e:	8d59                	or	a0,a0,a4
20403f90:	7ff00713          	li	a4,2047
20403f94:	838d                	srli	a5,a5,0x3
20403f96:	00e49963          	bne	s1,a4,20403fa8 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 80)
20403f9a:	8d5d                	or	a0,a0,a5
20403f9c:	4781                	li	a5,0
20403f9e:	c509                	beqz	a0,20403fa8 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20403fa0:	000807b7          	lui	a5,0x80
20403fa4:	4501                	li	a0,0
20403fa6:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20403fa8:	7ff4f713          	andi	a4,s1,2047
20403fac:	07b2                	slli	a5,a5,0xc
20403fae:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20403fb0:	40f2                	lw	ra,28(sp)
20403fb2:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20403fb4:	83b1                	srli	a5,a5,0xc
20403fb6:	01f91593          	slli	a1,s2,0x1f
20403fba:	8fd9                	or	a5,a5,a4
20403fbc:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20403fc0:	44d2                	lw	s1,20(sp)
20403fc2:	4942                	lw	s2,16(sp)
20403fc4:	49b2                	lw	s3,12(sp)
20403fc6:	85ba                	mv	a1,a4
20403fc8:	6105                	addi	sp,sp,32
20403fca:	8082                	ret
20403fcc:	84c2                	mv	s1,a6
20403fce:	b991                	j	20403c22 <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20403fd0:	87ba                	mv	a5,a4
20403fd2:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20403fd4:	84c2                	mv	s1,a6
20403fd6:	bda1                	j	20403e2e <__adddf3+0x42c>
20403fd8:	4781                	li	a5,0
20403fda:	4501                	li	a0,0
20403fdc:	4901                	li	s2,0
20403fde:	bf41                	j	20403f6e <__adddf3+0x56c>
20403fe0:	4781                	li	a5,0
20403fe2:	bfed                	j	20403fdc <__adddf3+0x5da>
20403fe4:	4501                	li	a0,0
20403fe6:	4901                	li	s2,0
20403fe8:	004007b7          	lui	a5,0x400
20403fec:	b19d                	j	20403c52 <__adddf3+0x250>
20403fee:	4781                	li	a5,0
20403ff0:	4501                	li	a0,0
20403ff2:	bf59                	j	20403f88 <__adddf3+0x586>

20403ff4 <__divdf3>:
__divdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403ff4:	7179                	addi	sp,sp,-48
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20403ff6:	0145d813          	srli	a6,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20403ffa:	d226                	sw	s1,36(sp)
20403ffc:	ce4e                	sw	s3,28(sp)
20403ffe:	cc52                	sw	s4,24(sp)
20404000:	c85a                	sw	s6,16(sp)
20404002:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20404004:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20404008:	d606                	sw	ra,44(sp)
2040400a:	d422                	sw	s0,40(sp)
2040400c:	d04a                	sw	s2,32(sp)
2040400e:	ca56                	sw	s5,20(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20404010:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20404014:	8b2a                	mv	s6,a0
20404016:	8bb2                	mv	s7,a2
20404018:	8a36                	mv	s4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
2040401a:	80b1                	srli	s1,s1,0xc
2040401c:	01f5d993          	srli	s3,a1,0x1f
20404020:	08080463          	beqz	a6,204040a8 <__divdf3+0xb4>
20404024:	7ff00793          	li	a5,2047
20404028:	0cf80a63          	beq	a6,a5,204040fc <__divdf3+0x108>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 1)
2040402c:	01d55a93          	srli	s5,a0,0x1d
20404030:	048e                	slli	s1,s1,0x3
20404032:	009ae4b3          	or	s1,s5,s1
20404036:	00800ab7          	lui	s5,0x800
2040403a:	0154eab3          	or	s5,s1,s5
2040403e:	00351413          	slli	s0,a0,0x3
20404042:	c0180913          	addi	s2,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20404046:	4b01                	li	s6,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20404048:	014a5513          	srli	a0,s4,0x14
2040404c:	00ca1493          	slli	s1,s4,0xc
20404050:	7ff57813          	andi	a6,a0,2047
20404054:	80b1                	srli	s1,s1,0xc
20404056:	01fa5a13          	srli	s4,s4,0x1f
2040405a:	0c080463          	beqz	a6,20404122 <__divdf3+0x12e>
2040405e:	7ff00793          	li	a5,2047
20404062:	10f80963          	beq	a6,a5,20404174 <__divdf3+0x180>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 1)
20404066:	00349513          	slli	a0,s1,0x3
2040406a:	01dbd793          	srli	a5,s7,0x1d
2040406e:	8d5d                	or	a0,a0,a5
20404070:	008004b7          	lui	s1,0x800
20404074:	8cc9                	or	s1,s1,a0
20404076:	003b9f13          	slli	t5,s7,0x3
2040407a:	c0180513          	addi	a0,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
2040407e:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20404080:	002b1713          	slli	a4,s6,0x2
20404084:	8f5d                	or	a4,a4,a5
20404086:	177d                	addi	a4,a4,-1
20404088:	46b9                	li	a3,14
2040408a:	0149c633          	xor	a2,s3,s4
2040408e:	40a90833          	sub	a6,s2,a0
20404092:	10e6e363          	bltu	a3,a4,20404198 <__divdf3+0x1a4>
20404096:	00005697          	auipc	a3,0x5
2040409a:	12268693          	addi	a3,a3,290 # 204091b8 <pow10.2193+0x50>
2040409e:	070a                	slli	a4,a4,0x2
204040a0:	9736                	add	a4,a4,a3
204040a2:	4318                	lw	a4,0(a4)
204040a4:	9736                	add	a4,a4,a3
204040a6:	8702                	jr	a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 2)
204040a8:	00a4eab3          	or	s5,s1,a0
204040ac:	060a8263          	beqz	s5,20404110 <__divdf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 12)
204040b0:	c89d                	beqz	s1,204040e6 <__divdf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 16)
204040b2:	8526                	mv	a0,s1
204040b4:	1d4010ef          	jal	ra,20405288 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 27)
204040b8:	ff550793          	addi	a5,a0,-11
204040bc:	4771                	li	a4,28
204040be:	02f74963          	blt	a4,a5,204040f0 <__divdf3+0xfc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 28)
204040c2:	4af5                	li	s5,29
204040c4:	ff850413          	addi	s0,a0,-8
204040c8:	40fa8ab3          	sub	s5,s5,a5
204040cc:	008494b3          	sll	s1,s1,s0
204040d0:	015b5ab3          	srl	s5,s6,s5
204040d4:	009aeab3          	or	s5,s5,s1
204040d8:	008b1433          	sll	s0,s6,s0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
204040dc:	c0d00813          	li	a6,-1011
204040e0:	40a80933          	sub	s2,a6,a0
204040e4:	b78d                	j	20404046 <__divdf3+0x52>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 20)
204040e6:	1a2010ef          	jal	ra,20405288 <__clzsi2>
204040ea:	02050513          	addi	a0,a0,32
204040ee:	b7e9                	j	204040b8 <__divdf3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 29)
204040f0:	fd850493          	addi	s1,a0,-40
204040f4:	009b1ab3          	sll	s5,s6,s1
204040f8:	4401                	li	s0,0
204040fa:	b7cd                	j	204040dc <__divdf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 3)
204040fc:	00a4eab3          	or	s5,s1,a0
20404100:	000a8c63          	beqz	s5,20404118 <__divdf3+0x124>
20404104:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20404106:	8aa6                	mv	s5,s1
20404108:	7ff00913          	li	s2,2047
2040410c:	4b0d                	li	s6,3
2040410e:	bf2d                	j	20404048 <__divdf3+0x54>
20404110:	4401                	li	s0,0
20404112:	4901                	li	s2,0
20404114:	4b05                	li	s6,1
20404116:	bf0d                	j	20404048 <__divdf3+0x54>
20404118:	4401                	li	s0,0
2040411a:	7ff00913          	li	s2,2047
2040411e:	4b09                	li	s6,2
20404120:	b725                	j	20404048 <__divdf3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 2)
20404122:	0174ef33          	or	t5,s1,s7
20404126:	060f0063          	beqz	t5,20404186 <__divdf3+0x192>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 12)
2040412a:	c88d                	beqz	s1,2040415c <__divdf3+0x168>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 16)
2040412c:	8526                	mv	a0,s1
2040412e:	15a010ef          	jal	ra,20405288 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 27)
20404132:	ff550793          	addi	a5,a0,-11
20404136:	4771                	li	a4,28
20404138:	02f74863          	blt	a4,a5,20404168 <__divdf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 28)
2040413c:	4775                	li	a4,29
2040413e:	ff850f13          	addi	t5,a0,-8
20404142:	8f1d                	sub	a4,a4,a5
20404144:	01e494b3          	sll	s1,s1,t5
20404148:	00ebd733          	srl	a4,s7,a4
2040414c:	8cd9                	or	s1,s1,a4
2040414e:	01eb9f33          	sll	t5,s7,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20404152:	c0d00613          	li	a2,-1011
20404156:	40a60533          	sub	a0,a2,a0
2040415a:	b715                	j	2040407e <__divdf3+0x8a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 20)
2040415c:	855e                	mv	a0,s7
2040415e:	12a010ef          	jal	ra,20405288 <__clzsi2>
20404162:	02050513          	addi	a0,a0,32
20404166:	b7f1                	j	20404132 <__divdf3+0x13e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 29)
20404168:	fd850493          	addi	s1,a0,-40
2040416c:	009b94b3          	sll	s1,s7,s1
20404170:	4f01                	li	t5,0
20404172:	b7c5                	j	20404152 <__divdf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 3)
20404174:	0174ef33          	or	t5,s1,s7
20404178:	000f0b63          	beqz	t5,2040418e <__divdf3+0x19a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
2040417c:	8f5e                	mv	t5,s7
2040417e:	7ff00513          	li	a0,2047
20404182:	478d                	li	a5,3
20404184:	bdf5                	j	20404080 <__divdf3+0x8c>
20404186:	4481                	li	s1,0
20404188:	4501                	li	a0,0
2040418a:	4785                	li	a5,1
2040418c:	bdd5                	j	20404080 <__divdf3+0x8c>
2040418e:	4481                	li	s1,0
20404190:	7ff00513          	li	a0,2047
20404194:	4789                	li	a5,2
20404196:	b5ed                	j	20404080 <__divdf3+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 2)
20404198:	0154e663          	bltu	s1,s5,204041a4 <__divdf3+0x1b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 11)
2040419c:	2a9a9363          	bne	s5,s1,20404442 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 12)
204041a0:	2be46163          	bltu	s0,t5,20404442 <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 14)
204041a4:	01fa9693          	slli	a3,s5,0x1f
204041a8:	00145713          	srli	a4,s0,0x1
204041ac:	01f41793          	slli	a5,s0,0x1f
204041b0:	001ada93          	srli	s5,s5,0x1
204041b4:	00e6e433          	or	s0,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 19)
204041b8:	00849513          	slli	a0,s1,0x8
204041bc:	018f5493          	srli	s1,t5,0x18
204041c0:	8d45                	or	a0,a0,s1
204041c2:	01055e13          	srli	t3,a0,0x10
204041c6:	03cad8b3          	divu	a7,s5,t3
204041ca:	01051313          	slli	t1,a0,0x10
204041ce:	01035313          	srli	t1,t1,0x10
204041d2:	01045713          	srli	a4,s0,0x10
204041d6:	008f1593          	slli	a1,t5,0x8
204041da:	03caf4b3          	remu	s1,s5,t3
204041de:	8fc6                	mv	t6,a7
204041e0:	031306b3          	mul	a3,t1,a7
204041e4:	01049a93          	slli	s5,s1,0x10
204041e8:	01576733          	or	a4,a4,s5
204041ec:	00d77c63          	bgeu	a4,a3,20404204 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 22)
204041f0:	972a                	add	a4,a4,a0
204041f2:	fff88f93          	addi	t6,a7,-1
204041f6:	00a76763          	bltu	a4,a0,20404204 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 24)
204041fa:	00d77563          	bgeu	a4,a3,20404204 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 26)
204041fe:	ffe88f93          	addi	t6,a7,-2
20404202:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 28)
20404204:	8f15                	sub	a4,a4,a3
20404206:	03c75eb3          	divu	t4,a4,t3
2040420a:	0442                	slli	s0,s0,0x10
2040420c:	8041                	srli	s0,s0,0x10
2040420e:	03c77733          	remu	a4,a4,t3
20404212:	86f6                	mv	a3,t4
20404214:	03d308b3          	mul	a7,t1,t4
20404218:	0742                	slli	a4,a4,0x10
2040421a:	8f41                	or	a4,a4,s0
2040421c:	01177c63          	bgeu	a4,a7,20404234 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 29)
20404220:	972a                	add	a4,a4,a0
20404222:	fffe8693          	addi	a3,t4,-1
20404226:	00a76763          	bltu	a4,a0,20404234 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 31)
2040422a:	01177563          	bgeu	a4,a7,20404234 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 33)
2040422e:	ffee8693          	addi	a3,t4,-2
20404232:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 35)
20404234:	0fc2                	slli	t6,t6,0x10
20404236:	00dfefb3          	or	t6,t6,a3
2040423a:	66c1                	lui	a3,0x10
2040423c:	41170433          	sub	s0,a4,a7
20404240:	fff68893          	addi	a7,a3,-1 # ffff <__heap_size+0xf7ff>
20404244:	010fdf13          	srli	t5,t6,0x10
20404248:	011ff733          	and	a4,t6,a7
2040424c:	0105de93          	srli	t4,a1,0x10
20404250:	0115f8b3          	and	a7,a1,a7
20404254:	031703b3          	mul	t2,a4,a7
20404258:	031f04b3          	mul	s1,t5,a7
2040425c:	02ee8733          	mul	a4,t4,a4
20404260:	03df02b3          	mul	t0,t5,t4
20404264:	00970f33          	add	t5,a4,s1
20404268:	0103d713          	srli	a4,t2,0x10
2040426c:	977a                	add	a4,a4,t5
2040426e:	00977363          	bgeu	a4,s1,20404274 <__divdf3+0x280>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 36)
20404272:	92b6                	add	t0,t0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 38)
20404274:	01075f13          	srli	t5,a4,0x10
20404278:	9f16                	add	t5,t5,t0
2040427a:	62c1                	lui	t0,0x10
2040427c:	12fd                	addi	t0,t0,-1
2040427e:	005776b3          	and	a3,a4,t0
20404282:	06c2                	slli	a3,a3,0x10
20404284:	0053f3b3          	and	t2,t2,t0
20404288:	969e                	add	a3,a3,t2
2040428a:	01e46763          	bltu	s0,t5,20404298 <__divdf3+0x2a4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 40)
2040428e:	84fe                	mv	s1,t6
20404290:	03e41e63          	bne	s0,t5,204042cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 41)
20404294:	02d7fc63          	bgeu	a5,a3,204042cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 43)
20404298:	97ae                	add	a5,a5,a1
2040429a:	00b7b733          	sltu	a4,a5,a1
2040429e:	972a                	add	a4,a4,a0
204042a0:	943a                	add	s0,s0,a4
204042a2:	ffff8493          	addi	s1,t6,-1
204042a6:	00856663          	bltu	a0,s0,204042b2 <__divdf3+0x2be>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 46)
204042aa:	02851163          	bne	a0,s0,204042cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 47)
204042ae:	00b7ef63          	bltu	a5,a1,204042cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 49)
204042b2:	01e46663          	bltu	s0,t5,204042be <__divdf3+0x2ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 52)
204042b6:	008f1b63          	bne	t5,s0,204042cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 53)
204042ba:	00d7f963          	bgeu	a5,a3,204042cc <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 55)
204042be:	97ae                	add	a5,a5,a1
204042c0:	00b7b733          	sltu	a4,a5,a1
204042c4:	972a                	add	a4,a4,a0
204042c6:	ffef8493          	addi	s1,t6,-2
204042ca:	943a                	add	s0,s0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 57)
204042cc:	40d786b3          	sub	a3,a5,a3
204042d0:	41e40433          	sub	s0,s0,t5
204042d4:	00d7b7b3          	sltu	a5,a5,a3
204042d8:	8c1d                	sub	s0,s0,a5
204042da:	5f7d                	li	t5,-1
204042dc:	0e850563          	beq	a0,s0,204043c6 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 59)
204042e0:	03c45f33          	divu	t5,s0,t3
204042e4:	0106d713          	srli	a4,a3,0x10
204042e8:	03c47433          	remu	s0,s0,t3
204042ec:	03e307b3          	mul	a5,t1,t5
204042f0:	0442                	slli	s0,s0,0x10
204042f2:	8c59                	or	s0,s0,a4
204042f4:	877a                	mv	a4,t5
204042f6:	00f47c63          	bgeu	s0,a5,2040430e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 61)
204042fa:	942a                	add	s0,s0,a0
204042fc:	ffff0713          	addi	a4,t5,-1
20404300:	00a46763          	bltu	s0,a0,2040430e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 63)
20404304:	00f47563          	bgeu	s0,a5,2040430e <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 65)
20404308:	ffef0713          	addi	a4,t5,-2
2040430c:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 67)
2040430e:	8c1d                	sub	s0,s0,a5
20404310:	03c45f33          	divu	t5,s0,t3
20404314:	06c2                	slli	a3,a3,0x10
20404316:	82c1                	srli	a3,a3,0x10
20404318:	03c47433          	remu	s0,s0,t3
2040431c:	87fa                	mv	a5,t5
2040431e:	03e30333          	mul	t1,t1,t5
20404322:	0442                	slli	s0,s0,0x10
20404324:	8c55                	or	s0,s0,a3
20404326:	00647c63          	bgeu	s0,t1,2040433e <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 68)
2040432a:	942a                	add	s0,s0,a0
2040432c:	ffff0793          	addi	a5,t5,-1
20404330:	00a46763          	bltu	s0,a0,2040433e <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 70)
20404334:	00647563          	bgeu	s0,t1,2040433e <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 72)
20404338:	ffef0793          	addi	a5,t5,-2
2040433c:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 74)
2040433e:	0742                	slli	a4,a4,0x10
20404340:	8f5d                	or	a4,a4,a5
20404342:	01071793          	slli	a5,a4,0x10
20404346:	83c1                	srli	a5,a5,0x10
20404348:	40640433          	sub	s0,s0,t1
2040434c:	01075313          	srli	t1,a4,0x10
20404350:	03178e33          	mul	t3,a5,a7
20404354:	031308b3          	mul	a7,t1,a7
20404358:	026e8333          	mul	t1,t4,t1
2040435c:	02fe8eb3          	mul	t4,t4,a5
20404360:	010e5793          	srli	a5,t3,0x10
20404364:	9ec6                	add	t4,t4,a7
20404366:	97f6                	add	a5,a5,t4
20404368:	0117f463          	bgeu	a5,a7,20404370 <__divdf3+0x37c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 75)
2040436c:	66c1                	lui	a3,0x10
2040436e:	9336                	add	t1,t1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 77)
20404370:	0107d893          	srli	a7,a5,0x10
20404374:	989a                	add	a7,a7,t1
20404376:	6341                	lui	t1,0x10
20404378:	137d                	addi	t1,t1,-1
2040437a:	0067f6b3          	and	a3,a5,t1
2040437e:	06c2                	slli	a3,a3,0x10
20404380:	006e7e33          	and	t3,t3,t1
20404384:	96f2                	add	a3,a3,t3
20404386:	01146663          	bltu	s0,a7,20404392 <__divdf3+0x39e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 79)
2040438a:	19141e63          	bne	s0,a7,20404526 <__divdf3+0x532>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 80)
2040438e:	8f3a                	mv	t5,a4
20404390:	ca9d                	beqz	a3,204043c6 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 82)
20404392:	942a                	add	s0,s0,a0
20404394:	fff70f13          	addi	t5,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7feb2b>
20404398:	02a46163          	bltu	s0,a0,204043ba <__divdf3+0x3c6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 88)
2040439c:	01146663          	bltu	s0,a7,204043a8 <__divdf3+0x3b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 91)
204043a0:	19141263          	bne	s0,a7,20404524 <__divdf3+0x530>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 92)
204043a4:	00d5fd63          	bgeu	a1,a3,204043be <__divdf3+0x3ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 94)
204043a8:	00159793          	slli	a5,a1,0x1
204043ac:	00b7b5b3          	sltu	a1,a5,a1
204043b0:	952e                	add	a0,a0,a1
204043b2:	ffe70f13          	addi	t5,a4,-2
204043b6:	942a                	add	s0,s0,a0
204043b8:	85be                	mv	a1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 96)
204043ba:	01141463          	bne	s0,a7,204043c2 <__divdf3+0x3ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 98)
204043be:	00b68463          	beq	a3,a1,204043c6 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 99)
204043c2:	001f6f13          	ori	t5,t5,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 2)
204043c6:	3ff80713          	addi	a4,a6,1023
204043ca:	0ae05763          	blez	a4,20404478 <__divdf3+0x484>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 6)
204043ce:	007f7793          	andi	a5,t5,7
204043d2:	cf81                	beqz	a5,204043ea <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 8)
204043d4:	00ff7793          	andi	a5,t5,15
204043d8:	4691                	li	a3,4
204043da:	00d78863          	beq	a5,a3,204043ea <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 10)
204043de:	004f0693          	addi	a3,t5,4
204043e2:	01e6bf33          	sltu	t5,a3,t5
204043e6:	94fa                	add	s1,s1,t5
204043e8:	8f36                	mv	t5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 9)
204043ea:	00749793          	slli	a5,s1,0x7
204043ee:	0007d863          	bgez	a5,204043fe <__divdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 24)
204043f2:	ff0007b7          	lui	a5,0xff000
204043f6:	17fd                	addi	a5,a5,-1
204043f8:	8cfd                	and	s1,s1,a5
204043fa:	40080713          	addi	a4,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 26)
204043fe:	7fe00793          	li	a5,2046
20404402:	10e7c863          	blt	a5,a4,20404512 <__divdf3+0x51e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20404406:	003f5f13          	srli	t5,t5,0x3
2040440a:	01d49793          	slli	a5,s1,0x1d
2040440e:	01e7e7b3          	or	a5,a5,t5
20404412:	0034d513          	srli	a0,s1,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20404416:	0532                	slli	a0,a0,0xc
20404418:	7ff77713          	andi	a4,a4,2047
2040441c:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
2040441e:	50b2                	lw	ra,44(sp)
20404420:	5422                	lw	s0,40(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20404422:	8131                	srli	a0,a0,0xc
20404424:	8d59                	or	a0,a0,a4
20404426:	067e                	slli	a2,a2,0x1f
20404428:	00c56733          	or	a4,a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
2040442c:	5492                	lw	s1,36(sp)
2040442e:	5902                	lw	s2,32(sp)
20404430:	49f2                	lw	s3,28(sp)
20404432:	4a62                	lw	s4,24(sp)
20404434:	4ad2                	lw	s5,20(sp)
20404436:	4b42                	lw	s6,16(sp)
20404438:	4bb2                	lw	s7,12(sp)
2040443a:	853e                	mv	a0,a5
2040443c:	85ba                	mv	a1,a4
2040443e:	6145                	addi	sp,sp,48
20404440:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 15)
20404442:	187d                	addi	a6,a6,-1
20404444:	4781                	li	a5,0
20404446:	bb8d                	j	204041b8 <__divdf3+0x1c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 8)
20404448:	864e                	mv	a2,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 8)
2040444a:	84d6                	mv	s1,s5
2040444c:	8f22                	mv	t5,s0
2040444e:	87da                	mv	a5,s6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20404450:	4709                	li	a4,2
20404452:	0ce78063          	beq	a5,a4,20404512 <__divdf3+0x51e>
20404456:	470d                	li	a4,3
20404458:	0ae78663          	beq	a5,a4,20404504 <__divdf3+0x510>
2040445c:	4705                	li	a4,1
2040445e:	f6e794e3          	bne	a5,a4,204043c6 <__divdf3+0x3d2>
20404462:	4501                	li	a0,0
20404464:	4781                	li	a5,0
20404466:	a885                	j	204044d6 <__divdf3+0x4e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 5)
20404468:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 5)
2040446a:	b7dd                	j	20404450 <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
2040446c:	000804b7          	lui	s1,0x80
20404470:	4f01                	li	t5,0
20404472:	4601                	li	a2,0
20404474:	478d                	li	a5,3
20404476:	bfe9                	j	20404450 <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 59)
20404478:	4505                	li	a0,1
2040447a:	8d19                	sub	a0,a0,a4
2040447c:	03800793          	li	a5,56
20404480:	fea7c1e3          	blt	a5,a0,20404462 <__divdf3+0x46e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 60)
20404484:	47fd                	li	a5,31
20404486:	04a7ca63          	blt	a5,a0,204044da <__divdf3+0x4e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 62)
2040448a:	41e80813          	addi	a6,a6,1054
2040448e:	010497b3          	sll	a5,s1,a6
20404492:	00af5733          	srl	a4,t5,a0
20404496:	010f1833          	sll	a6,t5,a6
2040449a:	8fd9                	or	a5,a5,a4
2040449c:	01003833          	snez	a6,a6
204044a0:	0107e7b3          	or	a5,a5,a6
204044a4:	00a4d533          	srl	a0,s1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 75)
204044a8:	0077f713          	andi	a4,a5,7
204044ac:	cf01                	beqz	a4,204044c4 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 76)
204044ae:	00f7f713          	andi	a4,a5,15
204044b2:	4691                	li	a3,4
204044b4:	00d70863          	beq	a4,a3,204044c4 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 78)
204044b8:	00478713          	addi	a4,a5,4 # ff000004 <metal_segment_heap_target_end+0x7effeb30>
204044bc:	00f737b3          	sltu	a5,a4,a5
204044c0:	953e                	add	a0,a0,a5
204044c2:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 77)
204044c4:	00851713          	slli	a4,a0,0x8
204044c8:	04074a63          	bltz	a4,2040451c <__divdf3+0x528>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 93)
204044cc:	01d51713          	slli	a4,a0,0x1d
204044d0:	838d                	srli	a5,a5,0x3
204044d2:	8fd9                	or	a5,a5,a4
204044d4:	810d                	srli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
204044d6:	4701                	li	a4,0
204044d8:	bf3d                	j	20404416 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 63)
204044da:	5785                	li	a5,-31
204044dc:	8f99                	sub	a5,a5,a4
204044de:	02000693          	li	a3,32
204044e2:	00f4d7b3          	srl	a5,s1,a5
204044e6:	4701                	li	a4,0
204044e8:	00d50663          	beq	a0,a3,204044f4 <__divdf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 71)
204044ec:	43e80813          	addi	a6,a6,1086
204044f0:	01049733          	sll	a4,s1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 74)
204044f4:	01e76f33          	or	t5,a4,t5
204044f8:	01e03f33          	snez	t5,t5
204044fc:	01e7e7b3          	or	a5,a5,t5
20404500:	4501                	li	a0,0
20404502:	b75d                	j	204044a8 <__divdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20404504:	00080537          	lui	a0,0x80
20404508:	4781                	li	a5,0
2040450a:	7ff00713          	li	a4,2047
2040450e:	4601                	li	a2,0
20404510:	b719                	j	20404416 <__divdf3+0x422>
20404512:	4501                	li	a0,0
20404514:	4781                	li	a5,0
20404516:	7ff00713          	li	a4,2047
2040451a:	bdf5                	j	20404416 <__divdf3+0x422>
2040451c:	4501                	li	a0,0
2040451e:	4781                	li	a5,0
20404520:	4705                	li	a4,1
20404522:	bdd5                	j	20404416 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20404524:	877a                	mv	a4,t5
20404526:	8f3a                	mv	t5,a4
20404528:	bd69                	j	204043c2 <__divdf3+0x3ce>

2040452a <__eqdf2>:
__eqdf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
2040452a:	0145d713          	srli	a4,a1,0x14
2040452e:	001007b7          	lui	a5,0x100
20404532:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
20404534:	0146d813          	srli	a6,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:36
20404538:	832a                	mv	t1,a0
2040453a:	8eaa                	mv	t4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
2040453c:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20404540:	7ff00513          	li	a0,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
20404544:	00b7f8b3          	and	a7,a5,a1
20404548:	8f32                	mv	t5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
2040454a:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
2040454c:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
2040454e:	7ff87813          	andi	a6,a6,2047
20404552:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20404554:	00a71a63          	bne	a4,a0,20404568 <__eqdf2+0x3e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 18)
20404558:	0068ee33          	or	t3,a7,t1
2040455c:	4505                	li	a0,1
2040455e:	000e1463          	bnez	t3,20404566 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20404562:	00e80563          	beq	a6,a4,2040456c <__eqdf2+0x42>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:49
20404566:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 21)
20404568:	00a81563          	bne	a6,a0,20404572 <__eqdf2+0x48>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 22)
2040456c:	8e5d                	or	a2,a2,a5
2040456e:	4505                	li	a0,1
20404570:	fa7d                	bnez	a2,20404566 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 73)
20404572:	4505                	li	a0,1
20404574:	ff0719e3          	bne	a4,a6,20404566 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 75)
20404578:	fef897e3          	bne	a7,a5,20404566 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 77)
2040457c:	ffee95e3          	bne	t4,t5,20404566 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 79)
20404580:	00d58863          	beq	a1,a3,20404590 <__eqdf2+0x66>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 80)
20404584:	f36d                	bnez	a4,20404566 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 83)
20404586:	0068e533          	or	a0,a7,t1
2040458a:	00a03533          	snez	a0,a0
2040458e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
20404590:	4501                	li	a0,0
20404592:	8082                	ret

20404594 <__gedf2>:
__gedf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20404594:	0145d813          	srli	a6,a1,0x14
20404598:	001007b7          	lui	a5,0x100
2040459c:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
2040459e:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
204045a2:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204045a6:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
204045aa:	00b7f8b3          	and	a7,a5,a1
204045ae:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
204045b0:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
204045b2:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
204045b4:	8e32                	mv	t3,a2
204045b6:	7ff77713          	andi	a4,a4,2047
204045ba:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204045bc:	01d81863          	bne	a6,t4,204045cc <__gedf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 18)
204045c0:	00a8eeb3          	or	t4,a7,a0
204045c4:	060e8563          	beqz	t4,2040462e <__gedf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204045c8:	55f9                	li	a1,-2
204045ca:	a80d                	j	204045fc <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 21)
204045cc:	01d71663          	bne	a4,t4,204045d8 <__gedf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 22)
204045d0:	00c7eeb3          	or	t4,a5,a2
204045d4:	fe0e9ae3          	bnez	t4,204045c8 <__gedf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 57)
204045d8:	04081d63          	bnez	a6,20404632 <__gedf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 58)
204045dc:	00a8e533          	or	a0,a7,a0
204045e0:	00153513          	seqz	a0,a0
204045e4:	e319                	bnez	a4,204045ea <__gedf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 64)
204045e6:	8e5d                	or	a2,a2,a5
204045e8:	ce15                	beqz	a2,20404624 <__gedf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204045ea:	e511                	bnez	a0,204045f6 <__gedf2+0x62>
204045ec:	00d58a63          	beq	a1,a3,20404600 <__gedf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 108)
204045f0:	c985                	beqz	a1,20404620 <__gedf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204045f2:	55fd                	li	a1,-1
204045f4:	a021                	j	204045fc <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 74)
204045f6:	55fd                	li	a1,-1
204045f8:	c291                	beqz	a3,204045fc <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
204045fa:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:49
204045fc:	852e                	mv	a0,a1
204045fe:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 87)
20404600:	ff0748e3          	blt	a4,a6,204045f0 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 93)
20404604:	00e85463          	bge	a6,a4,2040460c <__gedf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 118)
20404608:	f9f5                	bnez	a1,204045fc <__gedf2+0x68>
2040460a:	b7e5                	j	204045f2 <__gedf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 99)
2040460c:	ff17e2e3          	bltu	a5,a7,204045f0 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 105)
20404610:	00f89c63          	bne	a7,a5,20404628 <__gedf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 106)
20404614:	fc6e6ee3          	bltu	t3,t1,204045f0 <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 116)
20404618:	ffc368e3          	bltu	t1,t3,20404608 <__gedf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
2040461c:	4581                	li	a1,0
2040461e:	bff9                	j	204045fc <__gedf2+0x68>
20404620:	4585                	li	a1,1
20404622:	bfe9                	j	204045fc <__gedf2+0x68>
20404624:	fd65                	bnez	a0,2040461c <__gedf2+0x88>
20404626:	b7e9                	j	204045f0 <__gedf2+0x5c>
20404628:	fef8e0e3          	bltu	a7,a5,20404608 <__gedf2+0x74>
2040462c:	bfc5                	j	2040461c <__gedf2+0x88>
2040462e:	fb0701e3          	beq	a4,a6,204045d0 <__gedf2+0x3c>
20404632:	ff4d                	bnez	a4,204045ec <__gedf2+0x58>
20404634:	4501                	li	a0,0
20404636:	bf45                	j	204045e6 <__gedf2+0x52>

20404638 <__ledf2>:
__ledf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20404638:	0145d813          	srli	a6,a1,0x14
2040463c:	001007b7          	lui	a5,0x100
20404640:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20404642:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20404646:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2040464a:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
2040464e:	00b7f8b3          	and	a7,a5,a1
20404652:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20404654:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
20404656:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
20404658:	8e32                	mv	t3,a2
2040465a:	7ff77713          	andi	a4,a4,2047
2040465e:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20404660:	01d81863          	bne	a6,t4,20404670 <__ledf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 18)
20404664:	00a8eeb3          	or	t4,a7,a0
20404668:	060e8563          	beqz	t4,204046d2 <__ledf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2040466c:	4589                	li	a1,2
2040466e:	a80d                	j	204046a0 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 21)
20404670:	01d71663          	bne	a4,t4,2040467c <__ledf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 22)
20404674:	00c7eeb3          	or	t4,a5,a2
20404678:	fe0e9ae3          	bnez	t4,2040466c <__ledf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 57)
2040467c:	04081d63          	bnez	a6,204046d6 <__ledf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 58)
20404680:	00a8e533          	or	a0,a7,a0
20404684:	00153513          	seqz	a0,a0
20404688:	e319                	bnez	a4,2040468e <__ledf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 64)
2040468a:	8e5d                	or	a2,a2,a5
2040468c:	ce15                	beqz	a2,204046c8 <__ledf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2040468e:	e511                	bnez	a0,2040469a <__ledf2+0x62>
20404690:	00d58a63          	beq	a1,a3,204046a4 <__ledf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 108)
20404694:	c985                	beqz	a1,204046c4 <__ledf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20404696:	55fd                	li	a1,-1
20404698:	a021                	j	204046a0 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 74)
2040469a:	55fd                	li	a1,-1
2040469c:	c291                	beqz	a3,204046a0 <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2040469e:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:49
204046a0:	852e                	mv	a0,a1
204046a2:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 87)
204046a4:	ff0748e3          	blt	a4,a6,20404694 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 93)
204046a8:	00e85463          	bge	a6,a4,204046b0 <__ledf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 118)
204046ac:	f9f5                	bnez	a1,204046a0 <__ledf2+0x68>
204046ae:	b7e5                	j	20404696 <__ledf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 99)
204046b0:	ff17e2e3          	bltu	a5,a7,20404694 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 105)
204046b4:	00f89c63          	bne	a7,a5,204046cc <__ledf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 106)
204046b8:	fc6e6ee3          	bltu	t3,t1,20404694 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 116)
204046bc:	ffc368e3          	bltu	t1,t3,204046ac <__ledf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
204046c0:	4581                	li	a1,0
204046c2:	bff9                	j	204046a0 <__ledf2+0x68>
204046c4:	4585                	li	a1,1
204046c6:	bfe9                	j	204046a0 <__ledf2+0x68>
204046c8:	fd65                	bnez	a0,204046c0 <__ledf2+0x88>
204046ca:	b7e9                	j	20404694 <__ledf2+0x5c>
204046cc:	fef8e0e3          	bltu	a7,a5,204046ac <__ledf2+0x74>
204046d0:	bfc5                	j	204046c0 <__ledf2+0x88>
204046d2:	fb0701e3          	beq	a4,a6,20404674 <__ledf2+0x3c>
204046d6:	ff4d                	bnez	a4,20404690 <__ledf2+0x58>
204046d8:	4501                	li	a0,0
204046da:	bf45                	j	2040468a <__ledf2+0x52>

204046dc <__muldf3>:
__muldf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
204046dc:	7179                	addi	sp,sp,-48
204046de:	ce4e                	sw	s3,28(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
204046e0:	0145d993          	srli	s3,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
204046e4:	d422                	sw	s0,40(sp)
204046e6:	d226                	sw	s1,36(sp)
204046e8:	cc52                	sw	s4,24(sp)
204046ea:	ca56                	sw	s5,20(sp)
204046ec:	c85a                	sw	s6,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
204046ee:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
204046f2:	d606                	sw	ra,44(sp)
204046f4:	d04a                	sw	s2,32(sp)
204046f6:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
204046f8:	7ff9f993          	andi	s3,s3,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
204046fc:	842a                	mv	s0,a0
204046fe:	8b32                	mv	s6,a2
20404700:	8ab6                	mv	s5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20404702:	80b1                	srli	s1,s1,0xc
20404704:	01f5da13          	srli	s4,a1,0x1f
20404708:	08098163          	beqz	s3,2040478a <__muldf3+0xae>
2040470c:	7ff00793          	li	a5,2047
20404710:	0cf98563          	beq	s3,a5,204047da <__muldf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 1)
20404714:	01d55793          	srli	a5,a0,0x1d
20404718:	048e                	slli	s1,s1,0x3
2040471a:	8cdd                	or	s1,s1,a5
2040471c:	008007b7          	lui	a5,0x800
20404720:	8cdd                	or	s1,s1,a5
20404722:	00351913          	slli	s2,a0,0x3
20404726:	c0198993          	addi	s3,s3,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
2040472a:	4b81                	li	s7,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
2040472c:	014ad513          	srli	a0,s5,0x14
20404730:	00ca9413          	slli	s0,s5,0xc
20404734:	7ff57513          	andi	a0,a0,2047
20404738:	8031                	srli	s0,s0,0xc
2040473a:	01fada93          	srli	s5,s5,0x1f
2040473e:	c161                	beqz	a0,204047fe <__muldf3+0x122>
20404740:	7ff00793          	li	a5,2047
20404744:	10f50563          	beq	a0,a5,2040484e <__muldf3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 1)
20404748:	01db5793          	srli	a5,s6,0x1d
2040474c:	040e                	slli	s0,s0,0x3
2040474e:	8c5d                	or	s0,s0,a5
20404750:	008007b7          	lui	a5,0x800
20404754:	8c5d                	or	s0,s0,a5
20404756:	c0150513          	addi	a0,a0,-1023 # 7fc01 <__heap_size+0x7f401>
2040475a:	003b1793          	slli	a5,s6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
2040475e:	4701                	li	a4,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
20404760:	002b9693          	slli	a3,s7,0x2
20404764:	8ed9                	or	a3,a3,a4
20404766:	954e                	add	a0,a0,s3
20404768:	16fd                	addi	a3,a3,-1
2040476a:	45b9                	li	a1,14
2040476c:	015a4633          	xor	a2,s4,s5
20404770:	00150813          	addi	a6,a0,1
20404774:	0ed5ee63          	bltu	a1,a3,20404870 <__muldf3+0x194>
20404778:	00005597          	auipc	a1,0x5
2040477c:	a7c58593          	addi	a1,a1,-1412 # 204091f4 <pow10.2193+0x8c>
20404780:	068a                	slli	a3,a3,0x2
20404782:	96ae                	add	a3,a3,a1
20404784:	4294                	lw	a3,0(a3)
20404786:	96ae                	add	a3,a3,a1
20404788:	8682                	jr	a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 2)
2040478a:	00a4e933          	or	s2,s1,a0
2040478e:	04090f63          	beqz	s2,204047ec <__muldf3+0x110>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 12)
20404792:	c88d                	beqz	s1,204047c4 <__muldf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 16)
20404794:	8526                	mv	a0,s1
20404796:	2f3000ef          	jal	ra,20405288 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 27)
2040479a:	ff550713          	addi	a4,a0,-11
2040479e:	47f1                	li	a5,28
204047a0:	02e7c763          	blt	a5,a4,204047ce <__muldf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 28)
204047a4:	47f5                	li	a5,29
204047a6:	ff850913          	addi	s2,a0,-8
204047aa:	8f99                	sub	a5,a5,a4
204047ac:	012494b3          	sll	s1,s1,s2
204047b0:	00f457b3          	srl	a5,s0,a5
204047b4:	8cdd                	or	s1,s1,a5
204047b6:	01241933          	sll	s2,s0,s2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
204047ba:	c0d00993          	li	s3,-1011
204047be:	40a989b3          	sub	s3,s3,a0
204047c2:	b7a5                	j	2040472a <__muldf3+0x4e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 20)
204047c4:	2c5000ef          	jal	ra,20405288 <__clzsi2>
204047c8:	02050513          	addi	a0,a0,32
204047cc:	b7f9                	j	2040479a <__muldf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 29)
204047ce:	fd850493          	addi	s1,a0,-40
204047d2:	009414b3          	sll	s1,s0,s1
204047d6:	4901                	li	s2,0
204047d8:	b7cd                	j	204047ba <__muldf3+0xde>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 3)
204047da:	00a4e933          	or	s2,s1,a0
204047de:	00090b63          	beqz	s2,204047f4 <__muldf3+0x118>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
204047e2:	892a                	mv	s2,a0
204047e4:	7ff00993          	li	s3,2047
204047e8:	4b8d                	li	s7,3
204047ea:	b789                	j	2040472c <__muldf3+0x50>
204047ec:	4481                	li	s1,0
204047ee:	4981                	li	s3,0
204047f0:	4b85                	li	s7,1
204047f2:	bf2d                	j	2040472c <__muldf3+0x50>
204047f4:	4481                	li	s1,0
204047f6:	7ff00993          	li	s3,2047
204047fa:	4b89                	li	s7,2
204047fc:	bf05                	j	2040472c <__muldf3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 2)
204047fe:	016467b3          	or	a5,s0,s6
20404802:	cfb1                	beqz	a5,2040485e <__muldf3+0x182>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 12)
20404804:	c80d                	beqz	s0,20404836 <__muldf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 16)
20404806:	8522                	mv	a0,s0
20404808:	281000ef          	jal	ra,20405288 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 27)
2040480c:	ff550693          	addi	a3,a0,-11
20404810:	47f1                	li	a5,28
20404812:	02d7c863          	blt	a5,a3,20404842 <__muldf3+0x166>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 28)
20404816:	4775                	li	a4,29
20404818:	ff850793          	addi	a5,a0,-8
2040481c:	8f15                	sub	a4,a4,a3
2040481e:	00f41433          	sll	s0,s0,a5
20404822:	00eb5733          	srl	a4,s6,a4
20404826:	8c59                	or	s0,s0,a4
20404828:	00fb17b3          	sll	a5,s6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
2040482c:	c0d00713          	li	a4,-1011
20404830:	40a70533          	sub	a0,a4,a0
20404834:	b72d                	j	2040475e <__muldf3+0x82>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 20)
20404836:	855a                	mv	a0,s6
20404838:	251000ef          	jal	ra,20405288 <__clzsi2>
2040483c:	02050513          	addi	a0,a0,32
20404840:	b7f1                	j	2040480c <__muldf3+0x130>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 29)
20404842:	fd850413          	addi	s0,a0,-40
20404846:	008b1433          	sll	s0,s6,s0
2040484a:	4781                	li	a5,0
2040484c:	b7c5                	j	2040482c <__muldf3+0x150>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 3)
2040484e:	016467b3          	or	a5,s0,s6
20404852:	cb91                	beqz	a5,20404866 <__muldf3+0x18a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
20404854:	87da                	mv	a5,s6
20404856:	7ff00513          	li	a0,2047
2040485a:	470d                	li	a4,3
2040485c:	b711                	j	20404760 <__muldf3+0x84>
2040485e:	4401                	li	s0,0
20404860:	4501                	li	a0,0
20404862:	4705                	li	a4,1
20404864:	bdf5                	j	20404760 <__muldf3+0x84>
20404866:	4401                	li	s0,0
20404868:	7ff00513          	li	a0,2047
2040486c:	4709                	li	a4,2
2040486e:	bdcd                	j	20404760 <__muldf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 2)
20404870:	6f41                	lui	t5,0x10
20404872:	ffff0e93          	addi	t4,t5,-1 # ffff <__heap_size+0xf7ff>
20404876:	01095713          	srli	a4,s2,0x10
2040487a:	0107d893          	srli	a7,a5,0x10
2040487e:	01d97933          	and	s2,s2,t4
20404882:	01d7f7b3          	and	a5,a5,t4
20404886:	032885b3          	mul	a1,a7,s2
2040488a:	032786b3          	mul	a3,a5,s2
2040488e:	02f70fb3          	mul	t6,a4,a5
20404892:	01f58333          	add	t1,a1,t6
20404896:	0106d593          	srli	a1,a3,0x10
2040489a:	959a                	add	a1,a1,t1
2040489c:	03170e33          	mul	t3,a4,a7
204048a0:	01f5f363          	bgeu	a1,t6,204048a6 <__muldf3+0x1ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 9)
204048a4:	9e7a                	add	t3,t3,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 11)
204048a6:	0105d393          	srli	t2,a1,0x10
204048aa:	01d5f5b3          	and	a1,a1,t4
204048ae:	01d6f6b3          	and	a3,a3,t4
204048b2:	01045f13          	srli	t5,s0,0x10
204048b6:	01d472b3          	and	t0,s0,t4
204048ba:	05c2                	slli	a1,a1,0x10
204048bc:	95b6                	add	a1,a1,a3
204048be:	02570eb3          	mul	t4,a4,t0
204048c2:	032286b3          	mul	a3,t0,s2
204048c6:	032f0933          	mul	s2,t5,s2
204048ca:	01d90333          	add	t1,s2,t4
204048ce:	0106d913          	srli	s2,a3,0x10
204048d2:	991a                	add	s2,s2,t1
204048d4:	03e70733          	mul	a4,a4,t5
204048d8:	01d97463          	bgeu	s2,t4,204048e0 <__muldf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 12)
204048dc:	6341                	lui	t1,0x10
204048de:	971a                	add	a4,a4,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 14)
204048e0:	01095e93          	srli	t4,s2,0x10
204048e4:	69c1                	lui	s3,0x10
204048e6:	9eba                	add	t4,t4,a4
204048e8:	fff98713          	addi	a4,s3,-1 # ffff <__heap_size+0xf7ff>
204048ec:	00e97933          	and	s2,s2,a4
204048f0:	8ef9                	and	a3,a3,a4
204048f2:	0104d413          	srli	s0,s1,0x10
204048f6:	0942                	slli	s2,s2,0x10
204048f8:	8cf9                	and	s1,s1,a4
204048fa:	9936                	add	s2,s2,a3
204048fc:	02978733          	mul	a4,a5,s1
20404900:	93ca                	add	t2,t2,s2
20404902:	02f40333          	mul	t1,s0,a5
20404906:	029886b3          	mul	a3,a7,s1
2040490a:	028887b3          	mul	a5,a7,s0
2040490e:	006688b3          	add	a7,a3,t1
20404912:	01075693          	srli	a3,a4,0x10
20404916:	96c6                	add	a3,a3,a7
20404918:	0066f363          	bgeu	a3,t1,2040491e <__muldf3+0x242>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 15)
2040491c:	97ce                	add	a5,a5,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 17)
2040491e:	0106d893          	srli	a7,a3,0x10
20404922:	69c1                	lui	s3,0x10
20404924:	00f88fb3          	add	t6,a7,a5
20404928:	fff98793          	addi	a5,s3,-1 # ffff <__heap_size+0xf7ff>
2040492c:	8efd                	and	a3,a3,a5
2040492e:	8f7d                	and	a4,a4,a5
20404930:	029288b3          	mul	a7,t0,s1
20404934:	06c2                	slli	a3,a3,0x10
20404936:	96ba                	add	a3,a3,a4
20404938:	025407b3          	mul	a5,s0,t0
2040493c:	029f04b3          	mul	s1,t5,s1
20404940:	028f0333          	mul	t1,t5,s0
20404944:	94be                	add	s1,s1,a5
20404946:	0108d413          	srli	s0,a7,0x10
2040494a:	94a2                	add	s1,s1,s0
2040494c:	00f4f363          	bgeu	s1,a5,20404952 <__muldf3+0x276>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 18)
20404950:	934e                	add	t1,t1,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 20)
20404952:	67c1                	lui	a5,0x10
20404954:	17fd                	addi	a5,a5,-1
20404956:	00f4f733          	and	a4,s1,a5
2040495a:	00f8f8b3          	and	a7,a7,a5
2040495e:	0742                	slli	a4,a4,0x10
20404960:	9e1e                	add	t3,t3,t2
20404962:	9746                	add	a4,a4,a7
20404964:	012e3933          	sltu	s2,t3,s2
20404968:	9776                	add	a4,a4,t4
2040496a:	01270433          	add	s0,a4,s2
2040496e:	9e36                	add	t3,t3,a3
20404970:	00de36b3          	sltu	a3,t3,a3
20404974:	01f408b3          	add	a7,s0,t6
20404978:	00d88f33          	add	t5,a7,a3
2040497c:	01d73733          	sltu	a4,a4,t4
20404980:	01243433          	sltu	s0,s0,s2
20404984:	8c59                	or	s0,s0,a4
20404986:	80c1                	srli	s1,s1,0x10
20404988:	01f8b8b3          	sltu	a7,a7,t6
2040498c:	00df36b3          	sltu	a3,t5,a3
20404990:	9426                	add	s0,s0,s1
20404992:	00d8e6b3          	or	a3,a7,a3
20404996:	9436                	add	s0,s0,a3
20404998:	941a                	add	s0,s0,t1
2040499a:	017f5793          	srli	a5,t5,0x17
2040499e:	0426                	slli	s0,s0,0x9
204049a0:	8c5d                	or	s0,s0,a5
204049a2:	009e1793          	slli	a5,t3,0x9
204049a6:	8fcd                	or	a5,a5,a1
204049a8:	00f037b3          	snez	a5,a5
204049ac:	017e5e13          	srli	t3,t3,0x17
204049b0:	009f1713          	slli	a4,t5,0x9
204049b4:	01c7e7b3          	or	a5,a5,t3
204049b8:	8fd9                	or	a5,a5,a4
204049ba:	00741713          	slli	a4,s0,0x7
204049be:	0a075863          	bgez	a4,20404a6e <__muldf3+0x392>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 38)
204049c2:	0017d713          	srli	a4,a5,0x1
204049c6:	8b85                	andi	a5,a5,1
204049c8:	8fd9                	or	a5,a5,a4
204049ca:	01f41713          	slli	a4,s0,0x1f
204049ce:	8fd9                	or	a5,a5,a4
204049d0:	8005                	srli	s0,s0,0x1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 2)
204049d2:	3ff80693          	addi	a3,a6,1023
204049d6:	08d05e63          	blez	a3,20404a72 <__muldf3+0x396>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 6)
204049da:	0077f713          	andi	a4,a5,7
204049de:	cf01                	beqz	a4,204049f6 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 8)
204049e0:	00f7f713          	andi	a4,a5,15
204049e4:	4591                	li	a1,4
204049e6:	00b70863          	beq	a4,a1,204049f6 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 10)
204049ea:	00478713          	addi	a4,a5,4 # 10004 <__heap_size+0xf804>
204049ee:	00f737b3          	sltu	a5,a4,a5
204049f2:	943e                	add	s0,s0,a5
204049f4:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 9)
204049f6:	00741713          	slli	a4,s0,0x7
204049fa:	00075863          	bgez	a4,20404a0a <__muldf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 24)
204049fe:	ff000737          	lui	a4,0xff000
20404a02:	177d                	addi	a4,a4,-1
20404a04:	8c79                	and	s0,s0,a4
20404a06:	40080693          	addi	a3,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 26)
20404a0a:	7fe00713          	li	a4,2046
20404a0e:	0ed74c63          	blt	a4,a3,20404b06 <__muldf3+0x42a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404a12:	0037d713          	srli	a4,a5,0x3
20404a16:	01d41793          	slli	a5,s0,0x1d
20404a1a:	8fd9                	or	a5,a5,a4
20404a1c:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 120)
20404a1e:	0432                	slli	s0,s0,0xc
20404a20:	7ff6f713          	andi	a4,a3,2047
20404a24:	0752                	slli	a4,a4,0x14
20404a26:	8031                	srli	s0,s0,0xc
20404a28:	8c59                	or	s0,s0,a4
20404a2a:	067e                	slli	a2,a2,0x1f
20404a2c:	00c46733          	or	a4,s0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:51 (discriminator 120)
20404a30:	50b2                	lw	ra,44(sp)
20404a32:	5422                	lw	s0,40(sp)
20404a34:	5492                	lw	s1,36(sp)
20404a36:	5902                	lw	s2,32(sp)
20404a38:	49f2                	lw	s3,28(sp)
20404a3a:	4a62                	lw	s4,24(sp)
20404a3c:	4ad2                	lw	s5,20(sp)
20404a3e:	4b42                	lw	s6,16(sp)
20404a40:	4bb2                	lw	s7,12(sp)
20404a42:	853e                	mv	a0,a5
20404a44:	85ba                	mv	a1,a4
20404a46:	6145                	addi	sp,sp,48
20404a48:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 7)
20404a4a:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 7)
20404a4c:	8426                	mv	s0,s1
20404a4e:	87ca                	mv	a5,s2
20404a50:	875e                	mv	a4,s7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404a52:	4689                	li	a3,2
20404a54:	0ad70963          	beq	a4,a3,20404b06 <__muldf3+0x42a>
20404a58:	468d                	li	a3,3
20404a5a:	08d70f63          	beq	a4,a3,20404af8 <__muldf3+0x41c>
20404a5e:	4685                	li	a3,1
20404a60:	f6d719e3          	bne	a4,a3,204049d2 <__muldf3+0x2f6>
20404a64:	4401                	li	s0,0
20404a66:	4781                	li	a5,0
20404a68:	a09d                	j	20404ace <__muldf3+0x3f2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 4)
20404a6a:	8656                	mv	a2,s5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 4)
20404a6c:	b7dd                	j	20404a52 <__muldf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
20404a6e:	882a                	mv	a6,a0
20404a70:	b78d                	j	204049d2 <__muldf3+0x2f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 59)
20404a72:	4585                	li	a1,1
20404a74:	8d95                	sub	a1,a1,a3
20404a76:	03800713          	li	a4,56
20404a7a:	feb745e3          	blt	a4,a1,20404a64 <__muldf3+0x388>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 60)
20404a7e:	477d                	li	a4,31
20404a80:	04b74963          	blt	a4,a1,20404ad2 <__muldf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 62)
20404a84:	41e80813          	addi	a6,a6,1054
20404a88:	01041733          	sll	a4,s0,a6
20404a8c:	00b7d6b3          	srl	a3,a5,a1
20404a90:	010797b3          	sll	a5,a5,a6
20404a94:	8f55                	or	a4,a4,a3
20404a96:	00f037b3          	snez	a5,a5
20404a9a:	8fd9                	or	a5,a5,a4
20404a9c:	00b45433          	srl	s0,s0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 75)
20404aa0:	0077f713          	andi	a4,a5,7
20404aa4:	cf01                	beqz	a4,20404abc <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 76)
20404aa6:	00f7f713          	andi	a4,a5,15
20404aaa:	4691                	li	a3,4
20404aac:	00d70863          	beq	a4,a3,20404abc <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 78)
20404ab0:	00478713          	addi	a4,a5,4
20404ab4:	00f737b3          	sltu	a5,a4,a5
20404ab8:	943e                	add	s0,s0,a5
20404aba:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 77)
20404abc:	00841713          	slli	a4,s0,0x8
20404ac0:	04074863          	bltz	a4,20404b10 <__muldf3+0x434>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 93)
20404ac4:	01d41713          	slli	a4,s0,0x1d
20404ac8:	838d                	srli	a5,a5,0x3
20404aca:	8fd9                	or	a5,a5,a4
20404acc:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404ace:	4681                	li	a3,0
20404ad0:	b7b9                	j	20404a1e <__muldf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 63)
20404ad2:	5705                	li	a4,-31
20404ad4:	8f15                	sub	a4,a4,a3
20404ad6:	02000513          	li	a0,32
20404ada:	00e45733          	srl	a4,s0,a4
20404ade:	4681                	li	a3,0
20404ae0:	00a58663          	beq	a1,a0,20404aec <__muldf3+0x410>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 71)
20404ae4:	43e80813          	addi	a6,a6,1086
20404ae8:	010416b3          	sll	a3,s0,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 74)
20404aec:	8fd5                	or	a5,a5,a3
20404aee:	00f037b3          	snez	a5,a5
20404af2:	8fd9                	or	a5,a5,a4
20404af4:	4401                	li	s0,0
20404af6:	b76d                	j	20404aa0 <__muldf3+0x3c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20404af8:	00080437          	lui	s0,0x80
20404afc:	4781                	li	a5,0
20404afe:	7ff00693          	li	a3,2047
20404b02:	4601                	li	a2,0
20404b04:	bf29                	j	20404a1e <__muldf3+0x342>
20404b06:	4401                	li	s0,0
20404b08:	4781                	li	a5,0
20404b0a:	7ff00693          	li	a3,2047
20404b0e:	bf01                	j	20404a1e <__muldf3+0x342>
20404b10:	4401                	li	s0,0
20404b12:	4781                	li	a5,0
20404b14:	4685                	li	a3,1
20404b16:	b721                	j	20404a1e <__muldf3+0x342>

20404b18 <__subdf3>:
__subdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404b18:	00100837          	lui	a6,0x100
20404b1c:	187d                	addi	a6,a6,-1
20404b1e:	00b878b3          	and	a7,a6,a1
20404b22:	088e                	slli	a7,a7,0x3
20404b24:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20404b28:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404b2a:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404b2e:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404b32:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404b36:	0146d893          	srli	a7,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20404b3a:	ca26                	sw	s1,20(sp)
20404b3c:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404b3e:	7ff77493          	andi	s1,a4,2047
20404b42:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404b46:	01d65713          	srli	a4,a2,0x1d
20404b4a:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20404b4c:	ce06                	sw	ra,28(sp)
20404b4e:	cc22                	sw	s0,24(sp)
20404b50:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404b52:	7ff8f893          	andi	a7,a7,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404b56:	7ff00593          	li	a1,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20404b5a:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404b5c:	82fd                	srli	a3,a3,0x1f
20404b5e:	01076733          	or	a4,a4,a6
20404b62:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404b64:	00b89563          	bne	a7,a1,20404b6e <__subdf3+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 2)
20404b68:	00c765b3          	or	a1,a4,a2
20404b6c:	e199                	bnez	a1,20404b72 <__subdf3+0x5a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 3)
20404b6e:	0016c693          	xori	a3,a3,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 11)
20404b72:	41148833          	sub	a6,s1,a7
20404b76:	23269363          	bne	a3,s2,20404d9c <__subdf3+0x284>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 12)
20404b7a:	0f005c63          	blez	a6,20404c72 <__subdf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 14)
20404b7e:	04089563          	bnez	a7,20404bc8 <__subdf3+0xb0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 16)
20404b82:	00c766b3          	or	a3,a4,a2
20404b86:	c28d                	beqz	a3,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 19)
20404b88:	fff48813          	addi	a6,s1,-1 # 7ffff <__heap_size+0x7f7ff>
20404b8c:	00081a63          	bnez	a6,20404ba0 <__subdf3+0x88>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 28)
20404b90:	962a                	add	a2,a2,a0
20404b92:	00a63533          	sltu	a0,a2,a0
20404b96:	97ba                	add	a5,a5,a4
20404b98:	97aa                	add	a5,a5,a0
20404b9a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 85)
20404b9c:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
20404b9e:	a895                	j	20404c12 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 29)
20404ba0:	7ff00693          	li	a3,2047
20404ba4:	02d49963          	bne	s1,a3,20404bd6 <__subdf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 422)
20404ba8:	00757713          	andi	a4,a0,7
20404bac:	4e070063          	beqz	a4,2040508c <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 37)
20404bb0:	00f57713          	andi	a4,a0,15
20404bb4:	4691                	li	a3,4
20404bb6:	4cd70b63          	beq	a4,a3,2040508c <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 44)
20404bba:	00450693          	addi	a3,a0,4
20404bbe:	00a6b533          	sltu	a0,a3,a0
20404bc2:	97aa                	add	a5,a5,a0
20404bc4:	8536                	mv	a0,a3
20404bc6:	a1d9                	j	2040508c <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 17)
20404bc8:	7ff00693          	li	a3,2047
20404bcc:	fcd48ee3          	beq	s1,a3,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 43)
20404bd0:	008006b7          	lui	a3,0x800
20404bd4:	8f55                	or	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 52)
20404bd6:	03800693          	li	a3,56
20404bda:	0906c863          	blt	a3,a6,20404c6a <__subdf3+0x152>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 53)
20404bde:	46fd                	li	a3,31
20404be0:	0706c063          	blt	a3,a6,20404c40 <__subdf3+0x128>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 55)
20404be4:	02000593          	li	a1,32
20404be8:	410585b3          	sub	a1,a1,a6
20404bec:	00b716b3          	sll	a3,a4,a1
20404bf0:	010658b3          	srl	a7,a2,a6
20404bf4:	00b61633          	sll	a2,a2,a1
20404bf8:	0116e6b3          	or	a3,a3,a7
20404bfc:	00c03633          	snez	a2,a2
20404c00:	8e55                	or	a2,a2,a3
20404c02:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 69)
20404c06:	962a                	add	a2,a2,a0
20404c08:	973e                	add	a4,a4,a5
20404c0a:	00a637b3          	sltu	a5,a2,a0
20404c0e:	97ba                	add	a5,a5,a4
20404c10:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 127)
20404c12:	00879713          	slli	a4,a5,0x8
20404c16:	f80759e3          	bgez	a4,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 187)
20404c1a:	0485                	addi	s1,s1,1
20404c1c:	7ff00713          	li	a4,2047
20404c20:	46e48463          	beq	s1,a4,20405088 <__subdf3+0x570>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404c24:	ff8006b7          	lui	a3,0xff800
20404c28:	16fd                	addi	a3,a3,-1
20404c2a:	8efd                	and	a3,a3,a5
20404c2c:	00155593          	srli	a1,a0,0x1
20404c30:	8905                	andi	a0,a0,1
20404c32:	01f69793          	slli	a5,a3,0x1f
20404c36:	8d4d                	or	a0,a0,a1
20404c38:	8d5d                	or	a0,a0,a5
20404c3a:	0016d793          	srli	a5,a3,0x1
20404c3e:	b7ad                	j	20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 56)
20404c40:	fe080693          	addi	a3,a6,-32 # fffe0 <__heap_size+0xff7e0>
20404c44:	02000893          	li	a7,32
20404c48:	00d756b3          	srl	a3,a4,a3
20404c4c:	4581                	li	a1,0
20404c4e:	01180863          	beq	a6,a7,20404c5e <__subdf3+0x146>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 63)
20404c52:	04000593          	li	a1,64
20404c56:	41058833          	sub	a6,a1,a6
20404c5a:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 66)
20404c5e:	8e4d                	or	a2,a2,a1
20404c60:	00c03633          	snez	a2,a2
20404c64:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 54)
20404c66:	4701                	li	a4,0
20404c68:	bf79                	j	20404c06 <__subdf3+0xee>
20404c6a:	8e59                	or	a2,a2,a4
20404c6c:	00c03633          	snez	a2,a2
20404c70:	bfdd                	j	20404c66 <__subdf3+0x14e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 15)
20404c72:	0a080b63          	beqz	a6,20404d28 <__subdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 71)
20404c76:	409885b3          	sub	a1,a7,s1
20404c7a:	e48d                	bnez	s1,20404ca4 <__subdf3+0x18c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 73)
20404c7c:	00a7e6b3          	or	a3,a5,a0
20404c80:	3e068b63          	beqz	a3,20405076 <__subdf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 76)
20404c84:	fff58693          	addi	a3,a1,-1
20404c88:	e699                	bnez	a3,20404c96 <__subdf3+0x17e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
20404c8a:	9532                	add	a0,a0,a2
20404c8c:	97ba                	add	a5,a5,a4
20404c8e:	00c53633          	sltu	a2,a0,a2
20404c92:	97b2                	add	a5,a5,a2
20404c94:	b721                	j	20404b9c <__subdf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 86)
20404c96:	7ff00813          	li	a6,2047
20404c9a:	01059d63          	bne	a1,a6,20404cb4 <__subdf3+0x19c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404c9e:	87ba                	mv	a5,a4
20404ca0:	8532                	mv	a0,a2
20404ca2:	ace5                	j	20404f9a <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 74)
20404ca4:	7ff00693          	li	a3,2047
20404ca8:	fed88be3          	beq	a7,a3,20404c9e <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 100)
20404cac:	008006b7          	lui	a3,0x800
20404cb0:	8fd5                	or	a5,a5,a3
20404cb2:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 109)
20404cb4:	03800593          	li	a1,56
20404cb8:	06d5c463          	blt	a1,a3,20404d20 <__subdf3+0x208>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 110)
20404cbc:	45fd                	li	a1,31
20404cbe:	02d5cb63          	blt	a1,a3,20404cf4 <__subdf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 112)
20404cc2:	02000813          	li	a6,32
20404cc6:	40d80833          	sub	a6,a6,a3
20404cca:	00d55333          	srl	t1,a0,a3
20404cce:	010795b3          	sll	a1,a5,a6
20404cd2:	01051533          	sll	a0,a0,a6
20404cd6:	0065e5b3          	or	a1,a1,t1
20404cda:	00a03533          	snez	a0,a0
20404cde:	8d4d                	or	a0,a0,a1
20404ce0:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 126)
20404ce4:	9532                	add	a0,a0,a2
20404ce6:	00e687b3          	add	a5,a3,a4
20404cea:	00c53633          	sltu	a2,a0,a2
20404cee:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 126)
20404cf0:	84c6                	mv	s1,a7
20404cf2:	b705                	j	20404c12 <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 113)
20404cf4:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20404cf8:	02000313          	li	t1,32
20404cfc:	00b7d5b3          	srl	a1,a5,a1
20404d00:	4801                	li	a6,0
20404d02:	00668863          	beq	a3,t1,20404d12 <__subdf3+0x1fa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 120)
20404d06:	04000813          	li	a6,64
20404d0a:	40d806b3          	sub	a3,a6,a3
20404d0e:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 123)
20404d12:	00a86533          	or	a0,a6,a0
20404d16:	00a03533          	snez	a0,a0
20404d1a:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 111)
20404d1c:	4681                	li	a3,0
20404d1e:	b7d9                	j	20404ce4 <__subdf3+0x1cc>
20404d20:	8d5d                	or	a0,a0,a5
20404d22:	00a03533          	snez	a0,a0
20404d26:	bfdd                	j	20404d1c <__subdf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 72)
20404d28:	00148693          	addi	a3,s1,1
20404d2c:	7fe6f593          	andi	a1,a3,2046
20404d30:	e5a9                	bnez	a1,20404d7a <__subdf3+0x262>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 128)
20404d32:	00a7e6b3          	or	a3,a5,a0
20404d36:	e49d                	bnez	s1,20404d64 <__subdf3+0x24c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 130)
20404d38:	34068363          	beqz	a3,2040507e <__subdf3+0x566>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 133)
20404d3c:	00c766b3          	or	a3,a4,a2
20404d40:	e60684e3          	beqz	a3,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 139)
20404d44:	962a                	add	a2,a2,a0
20404d46:	97ba                	add	a5,a5,a4
20404d48:	00a63533          	sltu	a0,a2,a0
20404d4c:	97aa                	add	a5,a5,a0
20404d4e:	00879713          	slli	a4,a5,0x8
20404d52:	8532                	mv	a0,a2
20404d54:	e4075ae3          	bgez	a4,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 141)
20404d58:	ff800737          	lui	a4,0xff800
20404d5c:	177d                	addi	a4,a4,-1
20404d5e:	8ff9                	and	a5,a5,a4
20404d60:	4485                	li	s1,1
20404d62:	b599                	j	20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 158)
20404d64:	de8d                	beqz	a3,20404c9e <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 160)
20404d66:	8e59                	or	a2,a2,a4
20404d68:	22060963          	beqz	a2,20404f9a <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404d6c:	4901                	li	s2,0
20404d6e:	004007b7          	lui	a5,0x400
20404d72:	4501                	li	a0,0
20404d74:	7ff00493          	li	s1,2047
20404d78:	ae11                	j	2040508c <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 129)
20404d7a:	7ff00593          	li	a1,2047
20404d7e:	30b68363          	beq	a3,a1,20405084 <__subdf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404d82:	962a                	add	a2,a2,a0
20404d84:	973e                	add	a4,a4,a5
20404d86:	00a637b3          	sltu	a5,a2,a0
20404d8a:	973e                	add	a4,a4,a5
20404d8c:	01f71513          	slli	a0,a4,0x1f
20404d90:	8205                	srli	a2,a2,0x1
20404d92:	8d51                	or	a0,a0,a2
20404d94:	00175793          	srli	a5,a4,0x1
20404d98:	84b6                	mv	s1,a3
20404d9a:	b539                	j	20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 13)
20404d9c:	0d005563          	blez	a6,20404e66 <__subdf3+0x34e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 205)
20404da0:	08089263          	bnez	a7,20404e24 <__subdf3+0x30c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 207)
20404da4:	00c766b3          	or	a3,a4,a2
20404da8:	e00680e3          	beqz	a3,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 210)
20404dac:	fff48813          	addi	a6,s1,-1
20404db0:	00081b63          	bnez	a6,20404dc6 <__subdf3+0x2ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 219)
20404db4:	40c50633          	sub	a2,a0,a2
20404db8:	00c53533          	sltu	a0,a0,a2
20404dbc:	8f99                	sub	a5,a5,a4
20404dbe:	8f89                	sub	a5,a5,a0
20404dc0:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 276)
20404dc2:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20404dc4:	a0b1                	j	20404e10 <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 220)
20404dc6:	7ff00693          	li	a3,2047
20404dca:	dcd48fe3          	beq	s1,a3,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 243)
20404dce:	03800693          	li	a3,56
20404dd2:	0906c663          	blt	a3,a6,20404e5e <__subdf3+0x346>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 244)
20404dd6:	46fd                	li	a3,31
20404dd8:	0506ce63          	blt	a3,a6,20404e34 <__subdf3+0x31c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 246)
20404ddc:	02000593          	li	a1,32
20404de0:	410585b3          	sub	a1,a1,a6
20404de4:	00b716b3          	sll	a3,a4,a1
20404de8:	010658b3          	srl	a7,a2,a6
20404dec:	00b61633          	sll	a2,a2,a1
20404df0:	0116e6b3          	or	a3,a3,a7
20404df4:	00c03633          	snez	a2,a2
20404df8:	8e55                	or	a2,a2,a3
20404dfa:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 260)
20404dfe:	40c50633          	sub	a2,a0,a2
20404e02:	40e78733          	sub	a4,a5,a4
20404e06:	00c537b3          	sltu	a5,a0,a2
20404e0a:	40f707b3          	sub	a5,a4,a5
20404e0e:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 318)
20404e10:	00879713          	slli	a4,a5,0x8
20404e14:	d8075ae3          	bgez	a4,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 378)
20404e18:	00800437          	lui	s0,0x800
20404e1c:	147d                	addi	s0,s0,-1
20404e1e:	8c7d                	and	s0,s0,a5
20404e20:	89aa                	mv	s3,a0
20404e22:	a26d                	j	20404fcc <__subdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 208)
20404e24:	7ff00693          	li	a3,2047
20404e28:	d8d480e3          	beq	s1,a3,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 234)
20404e2c:	008006b7          	lui	a3,0x800
20404e30:	8f55                	or	a4,a4,a3
20404e32:	bf71                	j	20404dce <__subdf3+0x2b6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 247)
20404e34:	fe080693          	addi	a3,a6,-32
20404e38:	02000893          	li	a7,32
20404e3c:	00d756b3          	srl	a3,a4,a3
20404e40:	4581                	li	a1,0
20404e42:	01180863          	beq	a6,a7,20404e52 <__subdf3+0x33a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 254)
20404e46:	04000593          	li	a1,64
20404e4a:	41058833          	sub	a6,a1,a6
20404e4e:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 257)
20404e52:	8e4d                	or	a2,a2,a1
20404e54:	00c03633          	snez	a2,a2
20404e58:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 245)
20404e5a:	4701                	li	a4,0
20404e5c:	b74d                	j	20404dfe <__subdf3+0x2e6>
20404e5e:	8e59                	or	a2,a2,a4
20404e60:	00c03633          	snez	a2,a2
20404e64:	bfdd                	j	20404e5a <__subdf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 206)
20404e66:	0c080463          	beqz	a6,20404f2e <__subdf3+0x416>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 262)
20404e6a:	40988833          	sub	a6,a7,s1
20404e6e:	e895                	bnez	s1,20404ea2 <__subdf3+0x38a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 264)
20404e70:	00a7e5b3          	or	a1,a5,a0
20404e74:	26058b63          	beqz	a1,204050ea <__subdf3+0x5d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 267)
20404e78:	fff80593          	addi	a1,a6,-1
20404e7c:	e991                	bnez	a1,20404e90 <__subdf3+0x378>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20404e7e:	40a60533          	sub	a0,a2,a0
20404e82:	40f707b3          	sub	a5,a4,a5
20404e86:	00a63633          	sltu	a2,a2,a0
20404e8a:	8f91                	sub	a5,a5,a2
20404e8c:	8936                	mv	s2,a3
20404e8e:	bf15                	j	20404dc2 <__subdf3+0x2aa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 277)
20404e90:	7ff00313          	li	t1,2047
20404e94:	00681f63          	bne	a6,t1,20404eb2 <__subdf3+0x39a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404e98:	87ba                	mv	a5,a4
20404e9a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404e9c:	7ff00493          	li	s1,2047
20404ea0:	a07d                	j	20404f4e <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 265)
20404ea2:	7ff00593          	li	a1,2047
20404ea6:	feb889e3          	beq	a7,a1,20404e98 <__subdf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 291)
20404eaa:	008005b7          	lui	a1,0x800
20404eae:	8fcd                	or	a5,a5,a1
20404eb0:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 300)
20404eb2:	03800813          	li	a6,56
20404eb6:	06b84863          	blt	a6,a1,20404f26 <__subdf3+0x40e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 301)
20404eba:	487d                	li	a6,31
20404ebc:	02b84e63          	blt	a6,a1,20404ef8 <__subdf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 303)
20404ec0:	02000313          	li	t1,32
20404ec4:	40b30333          	sub	t1,t1,a1
20404ec8:	00b55e33          	srl	t3,a0,a1
20404ecc:	00679833          	sll	a6,a5,t1
20404ed0:	00651533          	sll	a0,a0,t1
20404ed4:	01c86833          	or	a6,a6,t3
20404ed8:	00a03533          	snez	a0,a0
20404edc:	00a86533          	or	a0,a6,a0
20404ee0:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 317)
20404ee4:	40a60533          	sub	a0,a2,a0
20404ee8:	40b707b3          	sub	a5,a4,a1
20404eec:	00a63633          	sltu	a2,a2,a0
20404ef0:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 317)
20404ef2:	84c6                	mv	s1,a7
20404ef4:	8936                	mv	s2,a3
20404ef6:	bf29                	j	20404e10 <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 304)
20404ef8:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20404efc:	02000e13          	li	t3,32
20404f00:	0107d833          	srl	a6,a5,a6
20404f04:	4301                	li	t1,0
20404f06:	01c58863          	beq	a1,t3,20404f16 <__subdf3+0x3fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 311)
20404f0a:	04000313          	li	t1,64
20404f0e:	40b305b3          	sub	a1,t1,a1
20404f12:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 314)
20404f16:	00a36533          	or	a0,t1,a0
20404f1a:	00a03533          	snez	a0,a0
20404f1e:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 302)
20404f22:	4581                	li	a1,0
20404f24:	b7c1                	j	20404ee4 <__subdf3+0x3cc>
20404f26:	8d5d                	or	a0,a0,a5
20404f28:	00a03533          	snez	a0,a0
20404f2c:	bfdd                	j	20404f22 <__subdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 263)
20404f2e:	00148593          	addi	a1,s1,1
20404f32:	7fe5f593          	andi	a1,a1,2046
20404f36:	e5bd                	bnez	a1,20404fa4 <__subdf3+0x48c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 319)
20404f38:	00a7e833          	or	a6,a5,a0
20404f3c:	00c765b3          	or	a1,a4,a2
20404f40:	e4b1                	bnez	s1,20404f8c <__subdf3+0x474>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 321)
20404f42:	00081863          	bnez	a6,20404f52 <__subdf3+0x43a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 323)
20404f46:	1a058663          	beqz	a1,204050f2 <__subdf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404f4a:	87ba                	mv	a5,a4
20404f4c:	8532                	mv	a0,a2
20404f4e:	8936                	mv	s2,a3
20404f50:	b9a1                	j	20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 324)
20404f52:	c4058be3          	beqz	a1,20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 331)
20404f56:	40c50833          	sub	a6,a0,a2
20404f5a:	40e785b3          	sub	a1,a5,a4
20404f5e:	010538b3          	sltu	a7,a0,a6
20404f62:	411585b3          	sub	a1,a1,a7
20404f66:	00859413          	slli	s0,a1,0x8
20404f6a:	00045a63          	bgez	s0,20404f7e <__subdf3+0x466>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 333)
20404f6e:	40a60533          	sub	a0,a2,a0
20404f72:	40f707b3          	sub	a5,a4,a5
20404f76:	00a63633          	sltu	a2,a2,a0
20404f7a:	8f91                	sub	a5,a5,a2
20404f7c:	bfc9                	j	20404f4e <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 334)
20404f7e:	00b86533          	or	a0,a6,a1
20404f82:	16050c63          	beqz	a0,204050fa <__subdf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404f86:	87ae                	mv	a5,a1
20404f88:	8542                	mv	a0,a6
20404f8a:	b939                	j	20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 353)
20404f8c:	00081a63          	bnez	a6,20404fa0 <__subdf3+0x488>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 354)
20404f90:	16058763          	beqz	a1,204050fe <__subdf3+0x5e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20404f94:	87ba                	mv	a5,a4
20404f96:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20404f98:	8936                	mv	s2,a3
20404f9a:	7ff00493          	li	s1,2047
20404f9e:	b129                	j	20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 355)
20404fa0:	dded                	beqz	a1,20404f9a <__subdf3+0x482>
20404fa2:	b3e9                	j	20404d6c <__subdf3+0x254>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 320)
20404fa4:	40c509b3          	sub	s3,a0,a2
20404fa8:	013535b3          	sltu	a1,a0,s3
20404fac:	40e78433          	sub	s0,a5,a4
20404fb0:	8c0d                	sub	s0,s0,a1
20404fb2:	00841593          	slli	a1,s0,0x8
20404fb6:	0605d663          	bgez	a1,20405022 <__subdf3+0x50a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 371)
20404fba:	40a609b3          	sub	s3,a2,a0
20404fbe:	40f707b3          	sub	a5,a4,a5
20404fc2:	01363633          	sltu	a2,a2,s3
20404fc6:	40c78433          	sub	s0,a5,a2
20404fca:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 380)
20404fcc:	c02d                	beqz	s0,2040502e <__subdf3+0x516>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 383)
20404fce:	8522                	mv	a0,s0
20404fd0:	2c65                	jal	20405288 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 394)
20404fd2:	ff850713          	addi	a4,a0,-8
20404fd6:	47fd                	li	a5,31
20404fd8:	06e7c063          	blt	a5,a4,20405038 <__subdf3+0x520>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 395)
20404fdc:	02000793          	li	a5,32
20404fe0:	8f99                	sub	a5,a5,a4
20404fe2:	00e41433          	sll	s0,s0,a4
20404fe6:	00f9d7b3          	srl	a5,s3,a5
20404fea:	8c5d                	or	s0,s0,a5
20404fec:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 404)
20404ff0:	06974d63          	blt	a4,s1,2040506a <__subdf3+0x552>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 405)
20404ff4:	8f05                	sub	a4,a4,s1
20404ff6:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7feb2d>
20404ffa:	46fd                	li	a3,31
20404ffc:	04f6c463          	blt	a3,a5,20405044 <__subdf3+0x52c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 407)
20405000:	02000713          	li	a4,32
20405004:	8f1d                	sub	a4,a4,a5
20405006:	00f55633          	srl	a2,a0,a5
2040500a:	00e416b3          	sll	a3,s0,a4
2040500e:	00e51533          	sll	a0,a0,a4
20405012:	8ed1                	or	a3,a3,a2
20405014:	00a03533          	snez	a0,a0
20405018:	8d55                	or	a0,a0,a3
2040501a:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
2040501e:	4481                	li	s1,0
20405020:	b661                	j	20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 372)
20405022:	0089e533          	or	a0,s3,s0
20405026:	f15d                	bnez	a0,20404fcc <__subdf3+0x4b4>
20405028:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
2040502a:	4481                	li	s1,0
2040502c:	a0e9                	j	204050f6 <__subdf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 387)
2040502e:	854e                	mv	a0,s3
20405030:	2ca1                	jal	20405288 <__clzsi2>
20405032:	02050513          	addi	a0,a0,32
20405036:	bf71                	j	20404fd2 <__subdf3+0x4ba>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 396)
20405038:	fd850413          	addi	s0,a0,-40
2040503c:	00899433          	sll	s0,s3,s0
20405040:	4501                	li	a0,0
20405042:	b77d                	j	20404ff0 <__subdf3+0x4d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 408)
20405044:	1705                	addi	a4,a4,-31
20405046:	02000613          	li	a2,32
2040504a:	00e45733          	srl	a4,s0,a4
2040504e:	4681                	li	a3,0
20405050:	00c78763          	beq	a5,a2,2040505e <__subdf3+0x546>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 416)
20405054:	04000693          	li	a3,64
20405058:	8e9d                	sub	a3,a3,a5
2040505a:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
2040505e:	8d55                	or	a0,a0,a3
20405060:	00a03533          	snez	a0,a0
20405064:	8d59                	or	a0,a0,a4
20405066:	4781                	li	a5,0
20405068:	bf5d                	j	2040501e <__subdf3+0x506>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 406)
2040506a:	ff8007b7          	lui	a5,0xff800
2040506e:	17fd                	addi	a5,a5,-1
20405070:	8c99                	sub	s1,s1,a4
20405072:	8fe1                	and	a5,a5,s0
20405074:	be15                	j	20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20405076:	87ba                	mv	a5,a4
20405078:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
2040507a:	84ae                	mv	s1,a1
2040507c:	b635                	j	20404ba8 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
2040507e:	87ba                	mv	a5,a4
20405080:	8532                	mv	a0,a2
20405082:	b61d                	j	20404ba8 <__subdf3+0x90>
20405084:	7ff00493          	li	s1,2047
20405088:	4781                	li	a5,0
2040508a:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 47)
2040508c:	00879713          	slli	a4,a5,0x8
20405090:	00075b63          	bgez	a4,204050a6 <__subdf3+0x58e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 63)
20405094:	0485                	addi	s1,s1,1
20405096:	7ff00713          	li	a4,2047
2040509a:	06e48763          	beq	s1,a4,20405108 <__subdf3+0x5f0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
2040509e:	ff800737          	lui	a4,0xff800
204050a2:	177d                	addi	a4,a4,-1
204050a4:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 79)
204050a6:	01d79713          	slli	a4,a5,0x1d
204050aa:	810d                	srli	a0,a0,0x3
204050ac:	8d59                	or	a0,a0,a4
204050ae:	7ff00713          	li	a4,2047
204050b2:	838d                	srli	a5,a5,0x3
204050b4:	00e49963          	bne	s1,a4,204050c6 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 80)
204050b8:	8d5d                	or	a0,a0,a5
204050ba:	4781                	li	a5,0
204050bc:	c509                	beqz	a0,204050c6 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
204050be:	000807b7          	lui	a5,0x80
204050c2:	4501                	li	a0,0
204050c4:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
204050c6:	7ff4f713          	andi	a4,s1,2047
204050ca:	07b2                	slli	a5,a5,0xc
204050cc:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
204050ce:	40f2                	lw	ra,28(sp)
204050d0:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
204050d2:	83b1                	srli	a5,a5,0xc
204050d4:	01f91593          	slli	a1,s2,0x1f
204050d8:	8fd9                	or	a5,a5,a4
204050da:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
204050de:	44d2                	lw	s1,20(sp)
204050e0:	4942                	lw	s2,16(sp)
204050e2:	49b2                	lw	s3,12(sp)
204050e4:	85ba                	mv	a1,a4
204050e6:	6105                	addi	sp,sp,32
204050e8:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
204050ea:	87ba                	mv	a5,a4
204050ec:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
204050ee:	84c2                	mv	s1,a6
204050f0:	bdb9                	j	20404f4e <__subdf3+0x436>
204050f2:	4781                	li	a5,0
204050f4:	4501                	li	a0,0
204050f6:	4901                	li	s2,0
204050f8:	bf51                	j	2040508c <__subdf3+0x574>
204050fa:	4781                	li	a5,0
204050fc:	bfed                	j	204050f6 <__subdf3+0x5de>
204050fe:	4501                	li	a0,0
20405100:	4901                	li	s2,0
20405102:	004007b7          	lui	a5,0x400
20405106:	b1bd                	j	20404d74 <__subdf3+0x25c>
20405108:	4781                	li	a5,0
2040510a:	4501                	li	a0,0
2040510c:	bf69                	j	204050a6 <__subdf3+0x58e>

2040510e <__fixdfsi>:
__fixdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
2040510e:	0145d713          	srli	a4,a1,0x14
20405112:	001006b7          	lui	a3,0x100
20405116:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
2040511a:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
2040511e:	3fe00613          	li	a2,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
20405122:	8fed                	and	a5,a5,a1
20405124:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20405126:	04e65463          	bge	a2,a4,2040516e <__fixdfsi+0x60>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 10)
2040512a:	41d00613          	li	a2,1053
2040512e:	00e65863          	bge	a2,a4,2040513e <__fixdfsi+0x30>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 13)
20405132:	80000537          	lui	a0,0x80000
20405136:	fff54513          	not	a0,a0
2040513a:	952e                	add	a0,a0,a1
2040513c:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 12)
2040513e:	8fd5                	or	a5,a5,a3
20405140:	43300693          	li	a3,1075
20405144:	8e99                	sub	a3,a3,a4
20405146:	467d                	li	a2,31
20405148:	00d64d63          	blt	a2,a3,20405162 <__fixdfsi+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 29)
2040514c:	bed70713          	addi	a4,a4,-1043 # ff7ffbed <metal_segment_heap_target_end+0x7f7fe719>
20405150:	00e797b3          	sll	a5,a5,a4
20405154:	00d55533          	srl	a0,a0,a3
20405158:	8d5d                	or	a0,a0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 42)
2040515a:	c999                	beqz	a1,20405170 <__fixdfsi+0x62>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 44)
2040515c:	40a00533          	neg	a0,a0
20405160:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 41)
20405162:	41300513          	li	a0,1043
20405166:	8d19                	sub	a0,a0,a4
20405168:	00a7d533          	srl	a0,a5,a0
2040516c:	b7fd                	j	2040515a <__fixdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
2040516e:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:47
20405170:	8082                	ret

20405172 <__fixunsdfsi>:
__fixunsdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20405172:	0145d713          	srli	a4,a1,0x14
20405176:	001006b7          	lui	a3,0x100
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:36
2040517a:	862a                	mv	a2,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
2040517c:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
20405180:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20405184:	3fe00513          	li	a0,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20405188:	8fed                	and	a5,a5,a1
2040518a:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
2040518c:	02e55f63          	bge	a0,a4,204051ca <__fixunsdfsi+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 10)
20405190:	4501                	li	a0,0
20405192:	e591                	bnez	a1,2040519e <__fixunsdfsi+0x2c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20405194:	41e00593          	li	a1,1054
20405198:	557d                	li	a0,-1
2040519a:	00e5d363          	bge	a1,a4,204051a0 <__fixunsdfsi+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:47
2040519e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 18)
204051a0:	8fd5                	or	a5,a5,a3
204051a2:	43300693          	li	a3,1075
204051a6:	8e99                	sub	a3,a3,a4
204051a8:	45fd                	li	a1,31
204051aa:	00d5ca63          	blt	a1,a3,204051be <__fixunsdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 33)
204051ae:	bed70713          	addi	a4,a4,-1043
204051b2:	00e797b3          	sll	a5,a5,a4
204051b6:	00d65533          	srl	a0,a2,a3
204051ba:	8d5d                	or	a0,a0,a5
204051bc:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 45)
204051be:	41300513          	li	a0,1043
204051c2:	8d19                	sub	a0,a0,a4
204051c4:	00a7d533          	srl	a0,a5,a0
204051c8:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
204051ca:	4501                	li	a0,0
204051cc:	8082                	ret

204051ce <__floatsidf>:
__floatsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:37
204051ce:	1141                	addi	sp,sp,-16
204051d0:	c606                	sw	ra,12(sp)
204051d2:	c422                	sw	s0,8(sp)
204051d4:	c226                	sw	s1,4(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
204051d6:	cd31                	beqz	a0,20405232 <__floatsidf+0x64>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 1)
204051d8:	41f55793          	srai	a5,a0,0x1f
204051dc:	00a7c433          	xor	s0,a5,a0
204051e0:	8c1d                	sub	s0,s0,a5
204051e2:	01f55493          	srli	s1,a0,0x1f
204051e6:	8522                	mv	a0,s0
204051e8:	2045                	jal	20405288 <__clzsi2>
204051ea:	41e00713          	li	a4,1054
204051ee:	47a9                	li	a5,10
204051f0:	8f09                	sub	a4,a4,a0
204051f2:	02a7ca63          	blt	a5,a0,20405226 <__floatsidf+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 23)
204051f6:	47ad                	li	a5,11
204051f8:	8f89                	sub	a5,a5,a0
204051fa:	0555                	addi	a0,a0,21
204051fc:	00f457b3          	srl	a5,s0,a5
20405200:	00a41433          	sll	s0,s0,a0
20405204:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:42
20405206:	07b2                	slli	a5,a5,0xc
20405208:	7ff77713          	andi	a4,a4,2047
2040520c:	0752                	slli	a4,a4,0x14
2040520e:	83b1                	srli	a5,a5,0xc
20405210:	057e                	slli	a0,a0,0x1f
20405212:	8fd9                	or	a5,a5,a4
20405214:	00a7e733          	or	a4,a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:45
20405218:	40b2                	lw	ra,12(sp)
2040521a:	8522                	mv	a0,s0
2040521c:	4422                	lw	s0,8(sp)
2040521e:	4492                	lw	s1,4(sp)
20405220:	85ba                	mv	a1,a4
20405222:	0141                	addi	sp,sp,16
20405224:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 24)
20405226:	1555                	addi	a0,a0,-11
20405228:	00a417b3          	sll	a5,s0,a0
2040522c:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
2040522e:	4401                	li	s0,0
20405230:	bfd9                	j	20405206 <__floatsidf+0x38>
20405232:	4701                	li	a4,0
20405234:	4781                	li	a5,0
20405236:	bfe5                	j	2040522e <__floatsidf+0x60>

20405238 <__floatunsidf>:
__floatunsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:37
20405238:	1141                	addi	sp,sp,-16
2040523a:	c422                	sw	s0,8(sp)
2040523c:	c606                	sw	ra,12(sp)
2040523e:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
20405240:	c129                	beqz	a0,20405282 <__floatunsidf+0x4a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 6)
20405242:	2099                	jal	20405288 <__clzsi2>
20405244:	41e00713          	li	a4,1054
20405248:	47a9                	li	a5,10
2040524a:	8f09                	sub	a4,a4,a0
2040524c:	02a7c663          	blt	a5,a0,20405278 <__floatunsidf+0x40>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 23)
20405250:	47ad                	li	a5,11
20405252:	8f89                	sub	a5,a5,a0
20405254:	0555                	addi	a0,a0,21
20405256:	00f457b3          	srl	a5,s0,a5
2040525a:	00a41433          	sll	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
2040525e:	8522                	mv	a0,s0
20405260:	40b2                	lw	ra,12(sp)
20405262:	4422                	lw	s0,8(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:42
20405264:	07b2                	slli	a5,a5,0xc
20405266:	7ff77713          	andi	a4,a4,2047
2040526a:	0752                	slli	a4,a4,0x14
2040526c:	83b1                	srli	a5,a5,0xc
2040526e:	00e7e6b3          	or	a3,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
20405272:	85b6                	mv	a1,a3
20405274:	0141                	addi	sp,sp,16
20405276:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 24)
20405278:	1555                	addi	a0,a0,-11
2040527a:	00a417b3          	sll	a5,s0,a0
2040527e:	4401                	li	s0,0
20405280:	bff9                	j	2040525e <__floatunsidf+0x26>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
20405282:	4781                	li	a5,0
20405284:	4701                	li	a4,0
20405286:	bfe1                	j	2040525e <__floatunsidf+0x26>

20405288 <__clzsi2>:
__clzsi2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
20405288:	67c1                	lui	a5,0x10
2040528a:	02f57663          	bgeu	a0,a5,204052b6 <__clzsi2+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 3)
2040528e:	0ff00793          	li	a5,255
20405292:	00a7b7b3          	sltu	a5,a5,a0
20405296:	078e                	slli	a5,a5,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 14)
20405298:	02000713          	li	a4,32
2040529c:	8f1d                	sub	a4,a4,a5
2040529e:	00f557b3          	srl	a5,a0,a5
204052a2:	00004517          	auipc	a0,0x4
204052a6:	f8e50513          	addi	a0,a0,-114 # 20409230 <__clz_tab>
204052aa:	97aa                	add	a5,a5,a0
204052ac:	0007c503          	lbu	a0,0(a5) # 10000 <__heap_size+0xf800>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:713 (discriminator 14)
204052b0:	40a70533          	sub	a0,a4,a0
204052b4:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 4)
204052b6:	01000737          	lui	a4,0x1000
204052ba:	47c1                	li	a5,16
204052bc:	fce56ee3          	bltu	a0,a4,20405298 <__clzsi2+0x10>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
204052c0:	47e1                	li	a5,24
204052c2:	bfd9                	j	20405298 <__clzsi2+0x10>

204052c4 <_write>:
_write():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:9
#include <unistd.h>

/* Write to a file.  */
ssize_t
_write(int file, const void *ptr, size_t len)
{
204052c4:	7179                	addi	sp,sp,-48
204052c6:	d606                	sw	ra,44(sp)
204052c8:	d422                	sw	s0,40(sp)
204052ca:	1800                	addi	s0,sp,48
204052cc:	fca42e23          	sw	a0,-36(s0) # 7fffdc <__heap_size+0x7ff7dc>
204052d0:	fcb42c23          	sw	a1,-40(s0)
204052d4:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:10
  if (file != STDOUT_FILENO) {
204052d8:	fdc42703          	lw	a4,-36(s0)
204052dc:	4785                	li	a5,1
204052de:	00f70963          	beq	a4,a5,204052f0 <_write+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:11
    errno = ENOSYS;
204052e2:	28a9                	jal	2040533c <__errno>
204052e4:	872a                	mv	a4,a0
204052e6:	05800793          	li	a5,88
204052ea:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:12
    return -1;
204052ec:	57fd                	li	a5,-1
204052ee:	a82d                	j	20405328 <_write+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:15
  }

  const char *bptr = ptr;
204052f0:	fd842783          	lw	a5,-40(s0)
204052f4:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16
  for (size_t i = 0; i < len; ++i)
204052f8:	fe042623          	sw	zero,-20(s0)
204052fc:	a839                	j	2040531a <_write+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:17 (discriminator 3)
    metal_tty_putc(bptr[i]);
204052fe:	fe842703          	lw	a4,-24(s0)
20405302:	fec42783          	lw	a5,-20(s0)
20405306:	97ba                	add	a5,a5,a4
20405308:	0007c783          	lbu	a5,0(a5)
2040530c:	853e                	mv	a0,a5
2040530e:	2ca1                	jal	20405566 <metal_tty_putc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 3)
  for (size_t i = 0; i < len; ++i)
20405310:	fec42783          	lw	a5,-20(s0)
20405314:	0785                	addi	a5,a5,1
20405316:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 1)
2040531a:	fec42703          	lw	a4,-20(s0)
2040531e:	fd442783          	lw	a5,-44(s0)
20405322:	fcf76ee3          	bltu	a4,a5,204052fe <_write+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:18
  return 0;
20405326:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:19
}
20405328:	853e                	mv	a0,a5
2040532a:	50b2                	lw	ra,44(sp)
2040532c:	5422                	lw	s0,40(sp)
2040532e:	6145                	addi	sp,sp,48
20405330:	8082                	ret

20405332 <atexit>:
atexit():
20405332:	85aa                	mv	a1,a0
20405334:	4681                	li	a3,0
20405336:	4601                	li	a2,0
20405338:	4501                	li	a0,0
2040533a:	a8f1                	j	20405416 <__register_exitproc>

2040533c <__errno>:
__errno():
2040533c:	5fbfb797          	auipc	a5,0x5fbfb
20405340:	49c78793          	addi	a5,a5,1180 # 800007d8 <_impure_ptr>
20405344:	4388                	lw	a0,0(a5)
20405346:	8082                	ret

20405348 <exit>:
exit():
20405348:	1141                	addi	sp,sp,-16
2040534a:	c422                	sw	s0,8(sp)
2040534c:	c606                	sw	ra,12(sp)
2040534e:	00000797          	auipc	a5,0x0
20405352:	15078793          	addi	a5,a5,336 # 2040549e <__call_exitprocs>
20405356:	842a                	mv	s0,a0
20405358:	c399                	beqz	a5,2040535e <exit+0x16>
2040535a:	4581                	li	a1,0
2040535c:	2289                	jal	2040549e <__call_exitprocs>
2040535e:	5fbfb797          	auipc	a5,0x5fbfb
20405362:	47e78793          	addi	a5,a5,1150 # 800007dc <_global_impure_ptr>
20405366:	4388                	lw	a0,0(a5)
20405368:	551c                	lw	a5,40(a0)
2040536a:	c391                	beqz	a5,2040536e <exit+0x26>
2040536c:	9782                	jalr	a5
2040536e:	8522                	mv	a0,s0
20405370:	0ff030ef          	jal	ra,20408c6e <_exit>

20405374 <__libc_fini_array>:
__libc_fini_array():
20405374:	1141                	addi	sp,sp,-16
20405376:	00004797          	auipc	a5,0x4
2040537a:	30e78793          	addi	a5,a5,782 # 20409684 <__fini_array_end>
2040537e:	c422                	sw	s0,8(sp)
20405380:	00004417          	auipc	s0,0x4
20405384:	30440413          	addi	s0,s0,772 # 20409684 <__fini_array_end>
20405388:	8c1d                	sub	s0,s0,a5
2040538a:	c226                	sw	s1,4(sp)
2040538c:	c606                	sw	ra,12(sp)
2040538e:	8409                	srai	s0,s0,0x2
20405390:	84be                	mv	s1,a5
20405392:	e411                	bnez	s0,2040539e <__libc_fini_array+0x2a>
20405394:	40b2                	lw	ra,12(sp)
20405396:	4422                	lw	s0,8(sp)
20405398:	4492                	lw	s1,4(sp)
2040539a:	0141                	addi	sp,sp,16
2040539c:	8082                	ret
2040539e:	147d                	addi	s0,s0,-1
204053a0:	00241793          	slli	a5,s0,0x2
204053a4:	97a6                	add	a5,a5,s1
204053a6:	439c                	lw	a5,0(a5)
204053a8:	9782                	jalr	a5
204053aa:	b7e5                	j	20405392 <__libc_fini_array+0x1e>

204053ac <__libc_init_array>:
__libc_init_array():
204053ac:	1141                	addi	sp,sp,-16
204053ae:	00004797          	auipc	a5,0x4
204053b2:	2d278793          	addi	a5,a5,722 # 20409680 <__init_array_start>
204053b6:	c422                	sw	s0,8(sp)
204053b8:	00004417          	auipc	s0,0x4
204053bc:	2c840413          	addi	s0,s0,712 # 20409680 <__init_array_start>
204053c0:	8c1d                	sub	s0,s0,a5
204053c2:	c226                	sw	s1,4(sp)
204053c4:	c04a                	sw	s2,0(sp)
204053c6:	c606                	sw	ra,12(sp)
204053c8:	8409                	srai	s0,s0,0x2
204053ca:	4481                	li	s1,0
204053cc:	893e                	mv	s2,a5
204053ce:	02849663          	bne	s1,s0,204053fa <__libc_init_array+0x4e>
204053d2:	00004797          	auipc	a5,0x4
204053d6:	2ae78793          	addi	a5,a5,686 # 20409680 <__init_array_start>
204053da:	00004417          	auipc	s0,0x4
204053de:	2aa40413          	addi	s0,s0,682 # 20409684 <__fini_array_end>
204053e2:	8c1d                	sub	s0,s0,a5
204053e4:	8409                	srai	s0,s0,0x2
204053e6:	4481                	li	s1,0
204053e8:	893e                	mv	s2,a5
204053ea:	00849f63          	bne	s1,s0,20405408 <__libc_init_array+0x5c>
204053ee:	40b2                	lw	ra,12(sp)
204053f0:	4422                	lw	s0,8(sp)
204053f2:	4492                	lw	s1,4(sp)
204053f4:	4902                	lw	s2,0(sp)
204053f6:	0141                	addi	sp,sp,16
204053f8:	8082                	ret
204053fa:	00249793          	slli	a5,s1,0x2
204053fe:	97ca                	add	a5,a5,s2
20405400:	439c                	lw	a5,0(a5)
20405402:	0485                	addi	s1,s1,1
20405404:	9782                	jalr	a5
20405406:	b7e1                	j	204053ce <__libc_init_array+0x22>
20405408:	00249793          	slli	a5,s1,0x2
2040540c:	97ca                	add	a5,a5,s2
2040540e:	439c                	lw	a5,0(a5)
20405410:	0485                	addi	s1,s1,1
20405412:	9782                	jalr	a5
20405414:	bfd9                	j	204053ea <__libc_init_array+0x3e>

20405416 <__register_exitproc>:
__register_exitproc():
20405416:	5fbfb797          	auipc	a5,0x5fbfb
2040541a:	3ea78793          	addi	a5,a5,1002 # 80000800 <metal_segment_data_target_end>
2040541e:	439c                	lw	a5,0(a5)
20405420:	8e2a                	mv	t3,a0
20405422:	e39d                	bnez	a5,20405448 <__register_exitproc+0x32>
20405424:	5fbfb717          	auipc	a4,0x5fbfb
20405428:	42070713          	addi	a4,a4,1056 # 80000844 <_global_atexit0>
2040542c:	5fbfb797          	auipc	a5,0x5fbfb
20405430:	3ce7aa23          	sw	a4,980(a5) # 80000800 <metal_segment_data_target_end>
20405434:	dfbfb517          	auipc	a0,0xdfbfb
20405438:	bcc50513          	addi	a0,a0,-1076 # 0 <__metal_boot_hart>
2040543c:	87ba                	mv	a5,a4
2040543e:	c509                	beqz	a0,20405448 <__register_exitproc+0x32>
20405440:	411c                	lw	a5,0(a0)
20405442:	8ef1aa23          	sw	a5,-1804(gp) # 800008cc <_global_atexit0+0x88>
20405446:	87ba                	mv	a5,a4
20405448:	43d8                	lw	a4,4(a5)
2040544a:	487d                	li	a6,31
2040544c:	557d                	li	a0,-1
2040544e:	04e84763          	blt	a6,a4,2040549c <__register_exitproc+0x86>
20405452:	020e0e63          	beqz	t3,2040548e <__register_exitproc+0x78>
20405456:	0887a803          	lw	a6,136(a5)
2040545a:	04080163          	beqz	a6,2040549c <__register_exitproc+0x86>
2040545e:	00271893          	slli	a7,a4,0x2
20405462:	98c2                	add	a7,a7,a6
20405464:	00c8a023          	sw	a2,0(a7)
20405468:	10082303          	lw	t1,256(a6)
2040546c:	4605                	li	a2,1
2040546e:	00e61633          	sll	a2,a2,a4
20405472:	00c36333          	or	t1,t1,a2
20405476:	10682023          	sw	t1,256(a6)
2040547a:	08d8a023          	sw	a3,128(a7)
2040547e:	4689                	li	a3,2
20405480:	00de1763          	bne	t3,a3,2040548e <__register_exitproc+0x78>
20405484:	10482683          	lw	a3,260(a6)
20405488:	8e55                	or	a2,a2,a3
2040548a:	10c82223          	sw	a2,260(a6)
2040548e:	00170693          	addi	a3,a4,1
20405492:	070a                	slli	a4,a4,0x2
20405494:	c3d4                	sw	a3,4(a5)
20405496:	97ba                	add	a5,a5,a4
20405498:	c78c                	sw	a1,8(a5)
2040549a:	4501                	li	a0,0
2040549c:	8082                	ret

2040549e <__call_exitprocs>:
__call_exitprocs():
2040549e:	7179                	addi	sp,sp,-48
204054a0:	cc52                	sw	s4,24(sp)
204054a2:	ca56                	sw	s5,20(sp)
204054a4:	c85a                	sw	s6,16(sp)
204054a6:	c65e                	sw	s7,12(sp)
204054a8:	d606                	sw	ra,44(sp)
204054aa:	d422                	sw	s0,40(sp)
204054ac:	d226                	sw	s1,36(sp)
204054ae:	d04a                	sw	s2,32(sp)
204054b0:	ce4e                	sw	s3,28(sp)
204054b2:	c462                	sw	s8,8(sp)
204054b4:	8b2a                	mv	s6,a0
204054b6:	8a2e                	mv	s4,a1
204054b8:	5fbfba97          	auipc	s5,0x5fbfb
204054bc:	348a8a93          	addi	s5,s5,840 # 80000800 <metal_segment_data_target_end>
204054c0:	4b85                	li	s7,1
204054c2:	000aa403          	lw	s0,0(s5)
204054c6:	c811                	beqz	s0,204054da <__call_exitprocs+0x3c>
204054c8:	4044                	lw	s1,4(s0)
204054ca:	08842983          	lw	s3,136(s0)
204054ce:	fff48913          	addi	s2,s1,-1
204054d2:	048a                	slli	s1,s1,0x2
204054d4:	94a2                	add	s1,s1,s0
204054d6:	00095e63          	bgez	s2,204054f2 <__call_exitprocs+0x54>
204054da:	50b2                	lw	ra,44(sp)
204054dc:	5422                	lw	s0,40(sp)
204054de:	5492                	lw	s1,36(sp)
204054e0:	5902                	lw	s2,32(sp)
204054e2:	49f2                	lw	s3,28(sp)
204054e4:	4a62                	lw	s4,24(sp)
204054e6:	4ad2                	lw	s5,20(sp)
204054e8:	4b42                	lw	s6,16(sp)
204054ea:	4bb2                	lw	s7,12(sp)
204054ec:	4c22                	lw	s8,8(sp)
204054ee:	6145                	addi	sp,sp,48
204054f0:	8082                	ret
204054f2:	000a0e63          	beqz	s4,2040550e <__call_exitprocs+0x70>
204054f6:	00099563          	bnez	s3,20405500 <__call_exitprocs+0x62>
204054fa:	197d                	addi	s2,s2,-1
204054fc:	14f1                	addi	s1,s1,-4
204054fe:	bfe1                	j	204054d6 <__call_exitprocs+0x38>
20405500:	00291793          	slli	a5,s2,0x2
20405504:	97ce                	add	a5,a5,s3
20405506:	0807a783          	lw	a5,128(a5)
2040550a:	ff4798e3          	bne	a5,s4,204054fa <__call_exitprocs+0x5c>
2040550e:	4058                	lw	a4,4(s0)
20405510:	40dc                	lw	a5,4(s1)
20405512:	177d                	addi	a4,a4,-1
20405514:	03271863          	bne	a4,s2,20405544 <__call_exitprocs+0xa6>
20405518:	01242223          	sw	s2,4(s0)
2040551c:	dff9                	beqz	a5,204054fa <__call_exitprocs+0x5c>
2040551e:	00442c03          	lw	s8,4(s0)
20405522:	00098863          	beqz	s3,20405532 <__call_exitprocs+0x94>
20405526:	1009a683          	lw	a3,256(s3)
2040552a:	012b9733          	sll	a4,s7,s2
2040552e:	8ef9                	and	a3,a3,a4
20405530:	ee89                	bnez	a3,2040554a <__call_exitprocs+0xac>
20405532:	9782                	jalr	a5
20405534:	4058                	lw	a4,4(s0)
20405536:	000aa783          	lw	a5,0(s5)
2040553a:	f98714e3          	bne	a4,s8,204054c2 <__call_exitprocs+0x24>
2040553e:	faf40ee3          	beq	s0,a5,204054fa <__call_exitprocs+0x5c>
20405542:	b741                	j	204054c2 <__call_exitprocs+0x24>
20405544:	0004a223          	sw	zero,4(s1)
20405548:	bfd1                	j	2040551c <__call_exitprocs+0x7e>
2040554a:	00291693          	slli	a3,s2,0x2
2040554e:	96ce                	add	a3,a3,s3
20405550:	428c                	lw	a1,0(a3)
20405552:	1049a683          	lw	a3,260(s3)
20405556:	8f75                	and	a4,a4,a3
20405558:	e701                	bnez	a4,20405560 <__call_exitprocs+0xc2>
2040555a:	855a                	mv	a0,s6
2040555c:	9782                	jalr	a5
2040555e:	bfd9                	j	20405534 <__call_exitprocs+0x96>
20405560:	852e                	mv	a0,a1
20405562:	9782                	jalr	a5
20405564:	bfc1                	j	20405534 <__call_exitprocs+0x96>

20405566 <metal_tty_putc>:
metal_tty_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:12

#if defined(__METAL_DT_STDOUT_UART_HANDLE)
/* This implementation serves as a small shim that interfaces with the first
 * UART on a system. */
int metal_tty_putc(int c)
{
20405566:	1101                	addi	sp,sp,-32
20405568:	ce06                	sw	ra,28(sp)
2040556a:	cc22                	sw	s0,24(sp)
2040556c:	1000                	addi	s0,sp,32
2040556e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:13
    if (c == '\n') {
20405572:	fec42703          	lw	a4,-20(s0)
20405576:	47a9                	li	a5,10
20405578:	00f71463          	bne	a4,a5,20405580 <metal_tty_putc+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:14
        metal_tty_putc_raw( '\r' );
2040557c:	4535                	li	a0,13
2040557e:	2811                	jal	20405592 <metal_tty_putc_raw>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:16
    }
    return metal_tty_putc_raw( c );
20405580:	fec42503          	lw	a0,-20(s0)
20405584:	2039                	jal	20405592 <metal_tty_putc_raw>
20405586:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:17
}
20405588:	853e                	mv	a0,a5
2040558a:	40f2                	lw	ra,28(sp)
2040558c:	4462                	lw	s0,24(sp)
2040558e:	6105                	addi	sp,sp,32
20405590:	8082                	ret

20405592 <metal_tty_putc_raw>:
metal_tty_putc_raw():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:20

int metal_tty_putc_raw(int c)
{
20405592:	1101                	addi	sp,sp,-32
20405594:	ce06                	sw	ra,28(sp)
20405596:	cc22                	sw	s0,24(sp)
20405598:	1000                	addi	s0,sp,32
2040559a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:21
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
2040559e:	fec42583          	lw	a1,-20(s0)
204055a2:	800007b7          	lui	a5,0x80000
204055a6:	7b878513          	addi	a0,a5,1976 # 800007b8 <metal_segment_heap_target_end+0xfffff2e4>
204055aa:	28b1                	jal	20405606 <metal_uart_putc>
204055ac:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:22
}
204055ae:	853e                	mv	a0,a5
204055b0:	40f2                	lw	ra,28(sp)
204055b2:	4462                	lw	s0,24(sp)
204055b4:	6105                	addi	sp,sp,32
204055b6:	8082                	ret

204055b8 <metal_tty_init>:
metal_tty_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:40
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

static void metal_tty_init(void) __attribute__((constructor));
static void metal_tty_init(void)
{
204055b8:	1141                	addi	sp,sp,-16
204055ba:	c606                	sw	ra,12(sp)
204055bc:	c422                	sw	s0,8(sp)
204055be:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:41
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204055c0:	67f1                	lui	a5,0x1c
204055c2:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204055c6:	800007b7          	lui	a5,0x80000
204055ca:	7b878513          	addi	a0,a5,1976 # 800007b8 <metal_segment_heap_target_end+0xfffff2e4>
204055ce:	2031                	jal	204055da <metal_uart_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:42
}
204055d0:	0001                	nop
204055d2:	40b2                	lw	ra,12(sp)
204055d4:	4422                	lw	s0,8(sp)
204055d6:	0141                	addi	sp,sp,16
204055d8:	8082                	ret

204055da <metal_uart_init>:
metal_uart_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:44
 * other method on the UART can be invoked. It is invalid to initialize a UART more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) { uart->vtable->init(uart, baud_rate); }
204055da:	1101                	addi	sp,sp,-32
204055dc:	ce06                	sw	ra,28(sp)
204055de:	cc22                	sw	s0,24(sp)
204055e0:	1000                	addi	s0,sp,32
204055e2:	fea42623          	sw	a0,-20(s0)
204055e6:	feb42423          	sw	a1,-24(s0)
204055ea:	fec42783          	lw	a5,-20(s0)
204055ee:	439c                	lw	a5,0(a5)
204055f0:	439c                	lw	a5,0(a5)
204055f2:	fe842583          	lw	a1,-24(s0)
204055f6:	fec42503          	lw	a0,-20(s0)
204055fa:	9782                	jalr	a5
204055fc:	0001                	nop
204055fe:	40f2                	lw	ra,28(sp)
20405600:	4462                	lw	s0,24(sp)
20405602:	6105                	addi	sp,sp,32
20405604:	8082                	ret

20405606 <metal_uart_putc>:
metal_uart_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:52
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) { return uart->vtable->putc(uart, c); }
20405606:	1101                	addi	sp,sp,-32
20405608:	ce06                	sw	ra,28(sp)
2040560a:	cc22                	sw	s0,24(sp)
2040560c:	1000                	addi	s0,sp,32
2040560e:	fea42623          	sw	a0,-20(s0)
20405612:	feb42423          	sw	a1,-24(s0)
20405616:	fec42783          	lw	a5,-20(s0)
2040561a:	439c                	lw	a5,0(a5)
2040561c:	43dc                	lw	a5,4(a5)
2040561e:	fe842583          	lw	a1,-24(s0)
20405622:	fec42503          	lw	a0,-20(s0)
20405626:	9782                	jalr	a5
20405628:	87aa                	mv	a5,a0
2040562a:	853e                	mv	a0,a5
2040562c:	40f2                	lw	ra,28(sp)
2040562e:	4462                	lw	s0,24(sp)
20405630:	6105                	addi	sp,sp,32
20405632:	8082                	ret

20405634 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:85
 * @brief Set the baud rate of the UART peripheral
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart, int baud_rate) { return uart->vtable->set_baud_rate(uart, baud_rate); }
20405634:	1101                	addi	sp,sp,-32
20405636:	ce06                	sw	ra,28(sp)
20405638:	cc22                	sw	s0,24(sp)
2040563a:	1000                	addi	s0,sp,32
2040563c:	fea42623          	sw	a0,-20(s0)
20405640:	feb42423          	sw	a1,-24(s0)
20405644:	fec42783          	lw	a5,-20(s0)
20405648:	439c                	lw	a5,0(a5)
2040564a:	4bdc                	lw	a5,20(a5)
2040564c:	fe842583          	lw	a1,-24(s0)
20405650:	fec42503          	lw	a0,-20(s0)
20405654:	9782                	jalr	a5
20405656:	87aa                	mv	a5,a0
20405658:	853e                	mv	a0,a5
2040565a:	40f2                	lw	ra,28(sp)
2040565c:	4462                	lw	s0,24(sp)
2040565e:	6105                	addi	sp,sp,32
20405660:	8082                	ret

20405662 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:136
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20405662:	1101                	addi	sp,sp,-32
20405664:	ce22                	sw	s0,28(sp)
20405666:	1000                	addi	s0,sp,32
20405668:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:137
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2040566c:	fec42703          	lw	a4,-20(s0)
20405670:	800007b7          	lui	a5,0x80000
20405674:	7e478793          	addi	a5,a5,2020 # 800007e4 <metal_segment_heap_target_end+0xfffff310>
20405678:	00f71563          	bne	a4,a5,20405682 <__metal_driver_sifive_clint0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:138
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
2040567c:	020007b7          	lui	a5,0x2000
20405680:	a011                	j	20405684 <__metal_driver_sifive_clint0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:141
	}
	else {
		return 0;
20405682:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:143
	}
}
20405684:	853e                	mv	a0,a5
20405686:	4472                	lw	s0,28(sp)
20405688:	6105                	addi	sp,sp,32
2040568a:	8082                	ret

2040568c <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:156
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
2040568c:	1101                	addi	sp,sp,-32
2040568e:	ce22                	sw	s0,28(sp)
20405690:	1000                	addi	s0,sp,32
20405692:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:157
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20405696:	fec42703          	lw	a4,-20(s0)
2040569a:	800007b7          	lui	a5,0x80000
2040569e:	7e478793          	addi	a5,a5,2020 # 800007e4 <metal_segment_heap_target_end+0xfffff310>
204056a2:	00f71463          	bne	a4,a5,204056aa <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:158
		return METAL_MAX_CLINT_INTERRUPTS;
204056a6:	4789                	li	a5,2
204056a8:	a011                	j	204056ac <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:161
	}
	else {
		return 0;
204056aa:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:163
	}
}
204056ac:	853e                	mv	a0,a5
204056ae:	4472                	lw	s0,28(sp)
204056b0:	6105                	addi	sp,sp,32
204056b2:	8082                	ret

204056b4 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:166

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204056b4:	1101                	addi	sp,sp,-32
204056b6:	ce22                	sw	s0,28(sp)
204056b8:	1000                	addi	s0,sp,32
204056ba:	fea42623          	sw	a0,-20(s0)
204056be:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:167
	if (idx == 0) {
204056c2:	fe842783          	lw	a5,-24(s0)
204056c6:	e791                	bnez	a5,204056d2 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:168
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204056c8:	800007b7          	lui	a5,0x80000
204056cc:	10078793          	addi	a5,a5,256 # 80000100 <metal_segment_heap_target_end+0xffffec2c>
204056d0:	a821                	j	204056e8 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:170
	}
	else if (idx == 1) {
204056d2:	fe842703          	lw	a4,-24(s0)
204056d6:	4785                	li	a5,1
204056d8:	00f71763          	bne	a4,a5,204056e6 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:171
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204056dc:	800007b7          	lui	a5,0x80000
204056e0:	10078793          	addi	a5,a5,256 # 80000100 <metal_segment_heap_target_end+0xffffec2c>
204056e4:	a011                	j	204056e8 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:174
	}
	else {
		return NULL;
204056e6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:176
	}
}
204056e8:	853e                	mv	a0,a5
204056ea:	4472                	lw	s0,28(sp)
204056ec:	6105                	addi	sp,sp,32
204056ee:	8082                	ret

204056f0 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:179

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
204056f0:	1101                	addi	sp,sp,-32
204056f2:	ce22                	sw	s0,28(sp)
204056f4:	1000                	addi	s0,sp,32
204056f6:	fea42623          	sw	a0,-20(s0)
204056fa:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:180
	if (idx == 0) {
204056fe:	fe842783          	lw	a5,-24(s0)
20405702:	e399                	bnez	a5,20405708 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:181
		return 3;
20405704:	478d                	li	a5,3
20405706:	a809                	j	20405718 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:183
	}
	else if (idx == 1) {
20405708:	fe842703          	lw	a4,-24(s0)
2040570c:	4785                	li	a5,1
2040570e:	00f71463          	bne	a4,a5,20405716 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:184
		return 7;
20405712:	479d                	li	a5,7
20405714:	a011                	j	20405718 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:187
	}
	else {
		return 0;
20405716:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:189
	}
}
20405718:	853e                	mv	a0,a5
2040571a:	4472                	lw	s0,28(sp)
2040571c:	6105                	addi	sp,sp,32
2040571e:	8082                	ret

20405720 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/cpu.h>
#include <metal/drivers/riscv_clint0.h>
#include <metal/machine.h>

unsigned long long __metal_clint0_mtime_get (struct __metal_driver_riscv_clint0 *clint)
{
20405720:	715d                	addi	sp,sp,-80
20405722:	c686                	sw	ra,76(sp)
20405724:	c4a2                	sw	s0,72(sp)
20405726:	c2ca                	sw	s2,68(sp)
20405728:	c0ce                	sw	s3,64(sp)
2040572a:	de52                	sw	s4,60(sp)
2040572c:	dc56                	sw	s5,56(sp)
2040572e:	da5a                	sw	s6,52(sp)
20405730:	d85e                	sw	s7,48(sp)
20405732:	d662                	sw	s8,44(sp)
20405734:	d466                	sw	s9,40(sp)
20405736:	0880                	addi	s0,sp,80
20405738:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:16
    __metal_io_u32 lo, hi;
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
2040573c:	fbc42783          	lw	a5,-68(s0)
20405740:	853e                	mv	a0,a5
20405742:	3705                	jal	20405662 <__metal_driver_sifive_clint0_control_base>
20405744:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:20 (discriminator 1)

    /* Guard against rollover when reading */
    do {
	hi = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
20405748:	fcc42703          	lw	a4,-52(s0)
2040574c:	67b1                	lui	a5,0xc
2040574e:	17f1                	addi	a5,a5,-4
20405750:	97ba                	add	a5,a5,a4
20405752:	439c                	lw	a5,0(a5)
20405754:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)
	lo = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
20405758:	fcc42703          	lw	a4,-52(s0)
2040575c:	67b1                	lui	a5,0xc
2040575e:	17e1                	addi	a5,a5,-8
20405760:	97ba                	add	a5,a5,a4
20405762:	439c                	lw	a5,0(a5)
20405764:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:22 (discriminator 1)
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4)) != hi);
20405768:	fcc42703          	lw	a4,-52(s0)
2040576c:	67b1                	lui	a5,0xc
2040576e:	17f1                	addi	a5,a5,-4
20405770:	97ba                	add	a5,a5,a4
20405772:	439c                	lw	a5,0(a5)
20405774:	fc842703          	lw	a4,-56(s0)
20405778:	fcf718e3          	bne	a4,a5,20405748 <__metal_clint0_mtime_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:24

    return (((unsigned long long)hi) << 32) | lo;
2040577c:	fc842783          	lw	a5,-56(s0)
20405780:	8c3e                	mv	s8,a5
20405782:	4c81                	li	s9,0
20405784:	000c1993          	slli	s3,s8,0x0
20405788:	4901                	li	s2,0
2040578a:	fc442783          	lw	a5,-60(s0)
2040578e:	8a3e                	mv	s4,a5
20405790:	4a81                	li	s5,0
20405792:	01496b33          	or	s6,s2,s4
20405796:	0159ebb3          	or	s7,s3,s5
2040579a:	87da                	mv	a5,s6
2040579c:	885e                	mv	a6,s7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25
}
2040579e:	853e                	mv	a0,a5
204057a0:	85c2                	mv	a1,a6
204057a2:	40b6                	lw	ra,76(sp)
204057a4:	4426                	lw	s0,72(sp)
204057a6:	4916                	lw	s2,68(sp)
204057a8:	4986                	lw	s3,64(sp)
204057aa:	5a72                	lw	s4,60(sp)
204057ac:	5ae2                	lw	s5,56(sp)
204057ae:	5b52                	lw	s6,52(sp)
204057b0:	5bc2                	lw	s7,48(sp)
204057b2:	5c32                	lw	s8,44(sp)
204057b4:	5ca2                	lw	s9,40(sp)
204057b6:	6161                	addi	sp,sp,80
204057b8:	8082                	ret

204057ba <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time)
{   
204057ba:	7179                	addi	sp,sp,-48
204057bc:	d606                	sw	ra,44(sp)
204057be:	d422                	sw	s0,40(sp)
204057c0:	d24a                	sw	s2,36(sp)
204057c2:	d04e                	sw	s3,32(sp)
204057c4:	1800                	addi	s0,sp,48
204057c6:	fca42e23          	sw	a0,-36(s0)
204057ca:	fcb42c23          	sw	a1,-40(s0)
204057ce:	fcc42823          	sw	a2,-48(s0)
204057d2:	fcd42a23          	sw	a3,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:31
    struct __metal_driver_riscv_clint0 *clint =
204057d6:	fdc42783          	lw	a5,-36(s0)
204057da:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:33
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
204057de:	fec42783          	lw	a5,-20(s0)
204057e2:	853e                	mv	a0,a5
204057e4:	3dbd                	jal	20405662 <__metal_driver_sifive_clint0_control_base>
204057e6:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:40
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = 0xFFFFFFFF;
204057ea:	fd842783          	lw	a5,-40(s0)
204057ee:	078e                	slli	a5,a5,0x3
204057f0:	873e                	mv	a4,a5
204057f2:	fe842783          	lw	a5,-24(s0)
204057f6:	973e                	add	a4,a4,a5
204057f8:	6791                	lui	a5,0x4
204057fa:	0791                	addi	a5,a5,4
204057fc:	97ba                	add	a5,a5,a4
204057fe:	873e                	mv	a4,a5
20405800:	57fd                	li	a5,-1
20405802:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:41
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE)) = (__metal_io_u32)time;
20405804:	fd842783          	lw	a5,-40(s0)
20405808:	078e                	slli	a5,a5,0x3
2040580a:	873e                	mv	a4,a5
2040580c:	fe842783          	lw	a5,-24(s0)
20405810:	973e                	add	a4,a4,a5
20405812:	6791                	lui	a5,0x4
20405814:	97ba                	add	a5,a5,a4
20405816:	873e                	mv	a4,a5
20405818:	fd042783          	lw	a5,-48(s0)
2040581c:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:42
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = (__metal_io_u32)(time >> 32);
2040581e:	fd442783          	lw	a5,-44(s0)
20405822:	0007d913          	srli	s2,a5,0x0
20405826:	4981                	li	s3,0
20405828:	fd842783          	lw	a5,-40(s0)
2040582c:	078e                	slli	a5,a5,0x3
2040582e:	873e                	mv	a4,a5
20405830:	fe842783          	lw	a5,-24(s0)
20405834:	973e                	add	a4,a4,a5
20405836:	6791                	lui	a5,0x4
20405838:	0791                	addi	a5,a5,4
2040583a:	97ba                	add	a5,a5,a4
2040583c:	874a                	mv	a4,s2
2040583e:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:43
    return 0;
20405840:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:44
}
20405842:	853e                	mv	a0,a5
20405844:	50b2                	lw	ra,44(sp)
20405846:	5422                	lw	s0,40(sp)
20405848:	5912                	lw	s2,36(sp)
2040584a:	5982                	lw	s3,32(sp)
2040584c:	6145                	addi	sp,sp,48
2040584e:	8082                	ret

20405850 <_get_cpu_intc>:
_get_cpu_intc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47

static struct metal_interrupt *_get_cpu_intc()
{
20405850:	1101                	addi	sp,sp,-32
20405852:	ce06                	sw	ra,28(sp)
20405854:	cc22                	sw	s0,24(sp)
20405856:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    int hartid = 0;
20405858:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
    __asm__ volatile("csrr %[hartid], mhartid"
2040585c:	f14027f3          	csrr	a5,mhartid
20405860:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:52
                     : [hartid] "=r" (hartid) :: "memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20405864:	fec42783          	lw	a5,-20(s0)
20405868:	853e                	mv	a0,a5
2040586a:	24c030ef          	jal	ra,20408ab6 <metal_cpu_get>
2040586e:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54

    return metal_cpu_interrupt_controller(cpu);
20405872:	fe842503          	lw	a0,-24(s0)
20405876:	21a030ef          	jal	ra,20408a90 <metal_cpu_interrupt_controller>
2040587a:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
2040587c:	853e                	mv	a0,a5
2040587e:	40f2                	lw	ra,28(sp)
20405880:	4462                	lw	s0,24(sp)
20405882:	6105                	addi	sp,sp,32
20405884:	8082                	ret

20405886 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58

void __metal_driver_riscv_clint0_init (struct metal_interrupt *controller)
{
20405886:	7139                	addi	sp,sp,-64
20405888:	de06                	sw	ra,60(sp)
2040588a:	dc22                	sw	s0,56(sp)
2040588c:	0080                	addi	s0,sp,64
2040588e:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20405892:	fcc42503          	lw	a0,-52(s0)
20405896:	3bdd                	jal	2040568c <__metal_driver_sifive_clint0_num_interrupts>
20405898:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:60
    struct __metal_driver_riscv_clint0 *clint =
2040589c:	fcc42783          	lw	a5,-52(s0)
204058a0:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:63
                              (struct __metal_driver_riscv_clint0 *)(controller);

    if ( !clint->init_done ) {
204058a4:	fe442783          	lw	a5,-28(s0)
204058a8:	43dc                	lw	a5,4(a5)
204058aa:	efa9                	bnez	a5,20405904 <__metal_driver_riscv_clint0_init+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
	/* Register its interrupts with with parent controller, aka sw and timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
204058ac:	fe042623          	sw	zero,-20(s0)
204058b0:	a081                	j	204058f0 <__metal_driver_riscv_clint0_init+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:66 (discriminator 3)
	  struct metal_interrupt *intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204058b2:	fec42583          	lw	a1,-20(s0)
204058b6:	fcc42503          	lw	a0,-52(s0)
204058ba:	3bed                	jal	204056b4 <__metal_driver_sifive_clint0_interrupt_parents>
204058bc:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67 (discriminator 3)
	  int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204058c0:	fec42583          	lw	a1,-20(s0)
204058c4:	fcc42503          	lw	a0,-52(s0)
204058c8:	3525                	jal	204056f0 <__metal_driver_sifive_clint0_interrupt_lines>
204058ca:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:68 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
204058ce:	fe042783          	lw	a5,-32(s0)
204058d2:	439c                	lw	a5,0(a5)
204058d4:	4fdc                	lw	a5,28(a5)
204058d6:	fcc42683          	lw	a3,-52(s0)
204058da:	4601                	li	a2,0
204058dc:	fdc42583          	lw	a1,-36(s0)
204058e0:	fe042503          	lw	a0,-32(s0)
204058e4:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
204058e6:	fec42783          	lw	a5,-20(s0)
204058ea:	0785                	addi	a5,a5,1
204058ec:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 1)
204058f0:	fec42703          	lw	a4,-20(s0)
204058f4:	fe842783          	lw	a5,-24(s0)
204058f8:	faf74de3          	blt	a4,a5,204058b2 <__metal_driver_riscv_clint0_init+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
	}
	clint->init_done = 1;
204058fc:	fe442783          	lw	a5,-28(s0)
20405900:	4705                	li	a4,1
20405902:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:72
    }	
}
20405904:	0001                	nop
20405906:	50f2                	lw	ra,60(sp)
20405908:	5462                	lw	s0,56(sp)
2040590a:	6121                	addi	sp,sp,64
2040590c:	8082                	ret

2040590e <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:77

int __metal_driver_riscv_clint0_register (struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv)
{
2040590e:	7139                	addi	sp,sp,-64
20405910:	de06                	sw	ra,60(sp)
20405912:	dc22                	sw	s0,56(sp)
20405914:	0080                	addi	s0,sp,64
20405916:	fca42623          	sw	a0,-52(s0)
2040591a:	fcb42423          	sw	a1,-56(s0)
2040591e:	fcc42223          	sw	a2,-60(s0)
20405922:	fcd42023          	sw	a3,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78
    int rc = -1;
20405926:	57fd                	li	a5,-1
20405928:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:79
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
2040592c:	3ae010ef          	jal	ra,20406cda <__metal_controller_interrupt_vector_mode>
20405930:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80
    struct metal_interrupt *intc = NULL;
20405934:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20405938:	3f21                	jal	20405850 <_get_cpu_intc>
2040593a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:82
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
2040593e:	fcc42503          	lw	a0,-52(s0)
20405942:	33a9                	jal	2040568c <__metal_driver_sifive_clint0_num_interrupts>
20405944:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84

    if ( (mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE) ) {
20405948:	fe042703          	lw	a4,-32(s0)
2040594c:	4785                	li	a5,1
2040594e:	00f70863          	beq	a4,a5,2040595e <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84 (discriminator 1)
20405952:	fe042783          	lw	a5,-32(s0)
20405956:	c781                	beqz	a5,2040595e <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
        return rc;
20405958:	fec42783          	lw	a5,-20(s0)
2040595c:	a049                	j	204059de <__metal_driver_riscv_clint0_register+0xd0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88
    }

    for(int i = 0; i < num_interrupts; i++) {
2040595e:	fe042223          	sw	zero,-28(s0)
20405962:	a091                	j	204059a6 <__metal_driver_riscv_clint0_register+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89
	int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20405964:	fe442583          	lw	a1,-28(s0)
20405968:	fcc42503          	lw	a0,-52(s0)
2040596c:	3351                	jal	204056f0 <__metal_driver_sifive_clint0_interrupt_lines>
2040596e:	fca42a23          	sw	a0,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20405972:	fe442583          	lw	a1,-28(s0)
20405976:	fcc42503          	lw	a0,-52(s0)
2040597a:	3b2d                	jal	204056b4 <__metal_driver_sifive_clint0_interrupt_parents>
2040597c:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
        if (cpu_intc == intc && id == line) {
20405980:	fdc42703          	lw	a4,-36(s0)
20405984:	fe842783          	lw	a5,-24(s0)
20405988:	00f71863          	bne	a4,a5,20405998 <__metal_driver_riscv_clint0_register+0x8a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91 (discriminator 1)
2040598c:	fc842703          	lw	a4,-56(s0)
20405990:	fd442783          	lw	a5,-44(s0)
20405994:	02f70063          	beq	a4,a5,204059b4 <__metal_driver_riscv_clint0_register+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:94 (discriminator 2)
            break;
        }
	intc = NULL;
20405998:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 2)
    for(int i = 0; i < num_interrupts; i++) {
2040599c:	fe442783          	lw	a5,-28(s0)
204059a0:	0785                	addi	a5,a5,1
204059a2:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 1)
204059a6:	fe442703          	lw	a4,-28(s0)
204059aa:	fd842783          	lw	a5,-40(s0)
204059ae:	faf74be3          	blt	a4,a5,20405964 <__metal_driver_riscv_clint0_register+0x56>
204059b2:	a011                	j	204059b6 <__metal_driver_riscv_clint0_register+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
            break;
204059b4:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
    }

    /* Register its interrupts with parent controller */
    if (intc) {
204059b6:	fe842783          	lw	a5,-24(s0)
204059ba:	c385                	beqz	a5,204059da <__metal_driver_riscv_clint0_register+0xcc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:99
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
204059bc:	fe842783          	lw	a5,-24(s0)
204059c0:	439c                	lw	a5,0(a5)
204059c2:	4fdc                	lw	a5,28(a5)
204059c4:	fc042683          	lw	a3,-64(s0)
204059c8:	fc442603          	lw	a2,-60(s0)
204059cc:	fc842583          	lw	a1,-56(s0)
204059d0:	fe842503          	lw	a0,-24(s0)
204059d4:	9782                	jalr	a5
204059d6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }
    return rc;
204059da:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
}
204059de:	853e                	mv	a0,a5
204059e0:	50f2                	lw	ra,60(sp)
204059e2:	5462                	lw	s0,56(sp)
204059e4:	6121                	addi	sp,sp,64
204059e6:	8082                	ret

204059e8 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107

int __metal_driver_riscv_clint0_vector_register (struct metal_interrupt *controller,
                                                 int id, metal_interrupt_vector_handler_t isr,
                                                 void *priv)
{   
204059e8:	7179                	addi	sp,sp,-48
204059ea:	d622                	sw	s0,44(sp)
204059ec:	1800                	addi	s0,sp,48
204059ee:	fca42e23          	sw	a0,-36(s0)
204059f2:	fcb42c23          	sw	a1,-40(s0)
204059f6:	fcc42a23          	sw	a2,-44(s0)
204059fa:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:109
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
204059fe:	57fd                	li	a5,-1
20405a00:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:110
    return rc;
20405a04:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
}
20405a08:	853e                	mv	a0,a5
20405a0a:	5432                	lw	s0,44(sp)
20405a0c:	6145                	addi	sp,sp,48
20405a0e:	8082                	ret

20405a10 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode (struct metal_interrupt *controller)
{
20405a10:	1101                	addi	sp,sp,-32
20405a12:	ce06                	sw	ra,28(sp)
20405a14:	cc22                	sw	s0,24(sp)
20405a16:	1000                	addi	s0,sp,32
20405a18:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
    return __metal_controller_interrupt_vector_mode();
20405a1c:	2be010ef          	jal	ra,20406cda <__metal_controller_interrupt_vector_mode>
20405a20:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:116
}
20405a22:	853e                	mv	a0,a5
20405a24:	40f2                	lw	ra,28(sp)
20405a26:	4462                	lw	s0,24(sp)
20405a28:	6105                	addi	sp,sp,32
20405a2a:	8082                	ret

20405a2c <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_set_vector_mode (struct metal_interrupt *controller, metal_vector_mode mode)
{
20405a2c:	7179                	addi	sp,sp,-48
20405a2e:	d606                	sw	ra,44(sp)
20405a30:	d422                	sw	s0,40(sp)
20405a32:	1800                	addi	s0,sp,48
20405a34:	fca42e23          	sw	a0,-36(s0)
20405a38:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:120
    int rc = -1;
20405a3c:	57fd                	li	a5,-1
20405a3e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    struct metal_interrupt *intc = _get_cpu_intc();
20405a42:	3539                	jal	20405850 <_get_cpu_intc>
20405a44:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123

    if (intc) {
20405a48:	fe842783          	lw	a5,-24(s0)
20405a4c:	c395                	beqz	a5,20405a70 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:125
	/* Valid vector modes are VECTOR and DIRECT, anything else is invalid (-1) */
        switch (mode) {
20405a4e:	fd842703          	lw	a4,-40(s0)
20405a52:	4785                	li	a5,1
20405a54:	00e7ef63          	bltu	a5,a4,20405a72 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20405a58:	fe842783          	lw	a5,-24(s0)
20405a5c:	439c                	lw	a5,0(a5)
20405a5e:	43dc                	lw	a5,4(a5)
20405a60:	fd842583          	lw	a1,-40(s0)
20405a64:	fe842503          	lw	a0,-24(s0)
20405a68:	9782                	jalr	a5
20405a6a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:129
            break;
20405a6e:	a011                	j	20405a72 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131
        }
    }
20405a70:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    return rc;
20405a72:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
}
20405a76:	853e                	mv	a0,a5
20405a78:	50b2                	lw	ra,44(sp)
20405a7a:	5422                	lw	s0,40(sp)
20405a7c:	6145                	addi	sp,sp,48
20405a7e:	8082                	ret

20405a80 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:136

int __metal_driver_riscv_clint0_enable (struct metal_interrupt *controller, int id)
{
20405a80:	7139                	addi	sp,sp,-64
20405a82:	de06                	sw	ra,60(sp)
20405a84:	dc22                	sw	s0,56(sp)
20405a86:	0080                	addi	s0,sp,64
20405a88:	fca42623          	sw	a0,-52(s0)
20405a8c:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:137
    int rc = -1;
20405a90:	57fd                	li	a5,-1
20405a92:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:139

    if ( id ) {
20405a96:	fc842783          	lw	a5,-56(s0)
20405a9a:	c7d9                	beqz	a5,20405b28 <__metal_driver_riscv_clint0_enable+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:140
        struct metal_interrupt *intc = NULL;
20405a9c:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20405aa0:	3b45                	jal	20405850 <_get_cpu_intc>
20405aa2:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20405aa6:	fcc42503          	lw	a0,-52(s0)
20405aaa:	be3ff0ef          	jal	ra,2040568c <__metal_driver_sifive_clint0_num_interrupts>
20405aae:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144

        for(int i = 0; i < num_interrupts; i++) {
20405ab2:	fe042223          	sw	zero,-28(s0)
20405ab6:	a099                	j	20405afc <__metal_driver_riscv_clint0_enable+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:145
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20405ab8:	fe442583          	lw	a1,-28(s0)
20405abc:	fcc42503          	lw	a0,-52(s0)
20405ac0:	3905                	jal	204056f0 <__metal_driver_sifive_clint0_interrupt_lines>
20405ac2:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20405ac6:	fe442583          	lw	a1,-28(s0)
20405aca:	fcc42503          	lw	a0,-52(s0)
20405ace:	be7ff0ef          	jal	ra,204056b4 <__metal_driver_sifive_clint0_interrupt_parents>
20405ad2:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
            if(cpu_intc == intc && id == line) {
20405ad6:	fe042703          	lw	a4,-32(s0)
20405ada:	fe842783          	lw	a5,-24(s0)
20405ade:	00f71863          	bne	a4,a5,20405aee <__metal_driver_riscv_clint0_enable+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147 (discriminator 1)
20405ae2:	fc842703          	lw	a4,-56(s0)
20405ae6:	fd842783          	lw	a5,-40(s0)
20405aea:	02f70063          	beq	a4,a5,20405b0a <__metal_driver_riscv_clint0_enable+0x8a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:150 (discriminator 2)
                break;
            }
	    intc = NULL;
20405aee:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
20405af2:	fe442783          	lw	a5,-28(s0)
20405af6:	0785                	addi	a5,a5,1
20405af8:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 1)
20405afc:	fe442703          	lw	a4,-28(s0)
20405b00:	fdc42783          	lw	a5,-36(s0)
20405b04:	faf74ae3          	blt	a4,a5,20405ab8 <__metal_driver_riscv_clint0_enable+0x38>
20405b08:	a011                	j	20405b0c <__metal_driver_riscv_clint0_enable+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
                break;
20405b0a:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154
        }
        
        /* Enable its interrupts with parent controller */
        if (intc) {
20405b0c:	fe842783          	lw	a5,-24(s0)
20405b10:	cf81                	beqz	a5,20405b28 <__metal_driver_riscv_clint0_enable+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
            rc = intc->vtable->interrupt_enable(intc, id);
20405b12:	fe842783          	lw	a5,-24(s0)
20405b16:	439c                	lw	a5,0(a5)
20405b18:	53dc                	lw	a5,36(a5)
20405b1a:	fc842583          	lw	a1,-56(s0)
20405b1e:	fe842503          	lw	a0,-24(s0)
20405b22:	9782                	jalr	a5
20405b24:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:159
        }
    }

    return rc;
20405b28:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160
}
20405b2c:	853e                	mv	a0,a5
20405b2e:	50f2                	lw	ra,60(sp)
20405b30:	5462                	lw	s0,56(sp)
20405b32:	6121                	addi	sp,sp,64
20405b34:	8082                	ret

20405b36 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:163

int __metal_driver_riscv_clint0_disable (struct metal_interrupt *controller, int id)
{
20405b36:	7139                	addi	sp,sp,-64
20405b38:	de06                	sw	ra,60(sp)
20405b3a:	dc22                	sw	s0,56(sp)
20405b3c:	0080                	addi	s0,sp,64
20405b3e:	fca42623          	sw	a0,-52(s0)
20405b42:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
    int rc = -1;
20405b46:	57fd                	li	a5,-1
20405b48:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166

    if ( id ) {
20405b4c:	fc842783          	lw	a5,-56(s0)
20405b50:	cbc1                	beqz	a5,20405be0 <__metal_driver_riscv_clint0_disable+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:167
        struct metal_interrupt *intc = NULL;
20405b52:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20405b56:	39ed                	jal	20405850 <_get_cpu_intc>
20405b58:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:169
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20405b5c:	fcc42503          	lw	a0,-52(s0)
20405b60:	b2dff0ef          	jal	ra,2040568c <__metal_driver_sifive_clint0_num_interrupts>
20405b64:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171

        for(int i = 0; i < num_interrupts; i++) {
20405b68:	fe042223          	sw	zero,-28(s0)
20405b6c:	a0a1                	j	20405bb4 <__metal_driver_riscv_clint0_disable+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20405b6e:	fe442583          	lw	a1,-28(s0)
20405b72:	fcc42503          	lw	a0,-52(s0)
20405b76:	b7bff0ef          	jal	ra,204056f0 <__metal_driver_sifive_clint0_interrupt_lines>
20405b7a:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20405b7e:	fe442583          	lw	a1,-28(s0)
20405b82:	fcc42503          	lw	a0,-52(s0)
20405b86:	b2fff0ef          	jal	ra,204056b4 <__metal_driver_sifive_clint0_interrupt_parents>
20405b8a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174
            if(cpu_intc == intc && id == line) {
20405b8e:	fe042703          	lw	a4,-32(s0)
20405b92:	fe842783          	lw	a5,-24(s0)
20405b96:	00f71863          	bne	a4,a5,20405ba6 <__metal_driver_riscv_clint0_disable+0x70>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174 (discriminator 1)
20405b9a:	fc842703          	lw	a4,-56(s0)
20405b9e:	fd842783          	lw	a5,-40(s0)
20405ba2:	02f70063          	beq	a4,a5,20405bc2 <__metal_driver_riscv_clint0_disable+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177 (discriminator 2)
                break;
            }
	    intc = NULL;
20405ba6:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
20405baa:	fe442783          	lw	a5,-28(s0)
20405bae:	0785                	addi	a5,a5,1
20405bb0:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 1)
20405bb4:	fe442703          	lw	a4,-28(s0)
20405bb8:	fdc42783          	lw	a5,-36(s0)
20405bbc:	faf749e3          	blt	a4,a5,20405b6e <__metal_driver_riscv_clint0_disable+0x38>
20405bc0:	a011                	j	20405bc4 <__metal_driver_riscv_clint0_disable+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:175
                break;
20405bc2:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181
        }
        
        /* Disable its interrupts with parent controller */
        if (intc) {
20405bc4:	fe842783          	lw	a5,-24(s0)
20405bc8:	cf81                	beqz	a5,20405be0 <__metal_driver_riscv_clint0_disable+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
            rc = intc->vtable->interrupt_disable(intc, id);
20405bca:	fe842783          	lw	a5,-24(s0)
20405bce:	439c                	lw	a5,0(a5)
20405bd0:	579c                	lw	a5,40(a5)
20405bd2:	fc842583          	lw	a1,-56(s0)
20405bd6:	fe842503          	lw	a0,-24(s0)
20405bda:	9782                	jalr	a5
20405bdc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        }
    }

    return rc;
20405be0:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:187
}
20405be4:	853e                	mv	a0,a5
20405be6:	50f2                	lw	ra,60(sp)
20405be8:	5462                	lw	s0,56(sp)
20405bea:	6121                	addi	sp,sp,64
20405bec:	8082                	ret

20405bee <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:191

int __metal_driver_riscv_clint0_command_request (struct metal_interrupt *controller,
                                               int command, void *data)
{
20405bee:	7179                	addi	sp,sp,-48
20405bf0:	d606                	sw	ra,44(sp)
20405bf2:	d422                	sw	s0,40(sp)
20405bf4:	1800                	addi	s0,sp,48
20405bf6:	fca42e23          	sw	a0,-36(s0)
20405bfa:	fcb42c23          	sw	a1,-40(s0)
20405bfe:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:193
    int hartid;
    int rc = -1;
20405c02:	57fd                	li	a5,-1
20405c04:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
    struct __metal_driver_riscv_clint0 *clint =
20405c08:	fdc42783          	lw	a5,-36(s0)
20405c0c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(controller);
20405c10:	fdc42503          	lw	a0,-36(s0)
20405c14:	a4fff0ef          	jal	ra,20405662 <__metal_driver_sifive_clint0_control_base>
20405c18:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198

    switch (command) {
20405c1c:	fd842703          	lw	a4,-40(s0)
20405c20:	4789                	li	a5,2
20405c22:	04f70963          	beq	a4,a5,20405c74 <__metal_driver_riscv_clint0_command_request+0x86>
20405c26:	fd842703          	lw	a4,-40(s0)
20405c2a:	4789                	li	a5,2
20405c2c:	00e7c863          	blt	a5,a4,20405c3c <__metal_driver_riscv_clint0_command_request+0x4e>
20405c30:	fd842703          	lw	a4,-40(s0)
20405c34:	4785                	li	a5,1
20405c36:	00f70e63          	beq	a4,a5,20405c52 <__metal_driver_riscv_clint0_command_request+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
						    (hartid * 4)));
        }
        break;
    default:
	break;
20405c3a:	a8f1                	j	20405d16 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198
    switch (command) {
20405c3c:	fd842703          	lw	a4,-40(s0)
20405c40:	478d                	li	a5,3
20405c42:	04f70d63          	beq	a4,a5,20405c9c <__metal_driver_riscv_clint0_command_request+0xae>
20405c46:	fd842703          	lw	a4,-40(s0)
20405c4a:	4791                	li	a5,4
20405c4c:	08f70963          	beq	a4,a5,20405cde <__metal_driver_riscv_clint0_command_request+0xf0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
	break;
20405c50:	a0d9                	j	20405d16 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:200
        if (data) {
20405c52:	fd442783          	lw	a5,-44(s0)
20405c56:	cbcd                	beqz	a5,20405d08 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:201
	    *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20405c58:	fe842503          	lw	a0,-24(s0)
20405c5c:	ac5ff0ef          	jal	ra,20405720 <__metal_clint0_mtime_get>
20405c60:	87aa                	mv	a5,a0
20405c62:	882e                	mv	a6,a1
20405c64:	fd442703          	lw	a4,-44(s0)
20405c68:	c31c                	sw	a5,0(a4)
20405c6a:	01072223          	sw	a6,4(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
            rc = 0;
20405c6e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20405c72:	a859                	j	20405d08 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:206
	if (data) {
20405c74:	fd442783          	lw	a5,-44(s0)
20405c78:	cbd1                	beqz	a5,20405d0c <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
	    hartid = *(int *)data;
20405c7a:	fd442783          	lw	a5,-44(s0)
20405c7e:	439c                	lw	a5,0(a5)
20405c80:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405c84:	fe042783          	lw	a5,-32(s0)
20405c88:	078a                	slli	a5,a5,0x2
20405c8a:	873e                	mv	a4,a5
20405c8c:	fe442783          	lw	a5,-28(s0)
20405c90:	97ba                	add	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:209
					       (hartid * 4))) = METAL_DISABLE;
20405c92:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:210
            rc = 0;
20405c96:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20405c9a:	a88d                	j	20405d0c <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
	if (data) {
20405c9c:	fd442783          	lw	a5,-44(s0)
20405ca0:	cba5                	beqz	a5,20405d10 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:215
	    hartid = *(int *)data;
20405ca2:	fd442783          	lw	a5,-44(s0)
20405ca6:	439c                	lw	a5,0(a5)
20405ca8:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:216
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405cac:	fe042783          	lw	a5,-32(s0)
20405cb0:	078a                	slli	a5,a5,0x2
20405cb2:	873e                	mv	a4,a5
20405cb4:	fe442783          	lw	a5,-28(s0)
20405cb8:	97ba                	add	a5,a5,a4
20405cba:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
					       (hartid * 4))) = METAL_ENABLE;
20405cbc:	4785                	li	a5,1
20405cbe:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
	    __METAL_IO_FENCE(o,i);
20405cc0:	0480000f          	fence	o,i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405cc4:	fe042783          	lw	a5,-32(s0)
20405cc8:	078a                	slli	a5,a5,0x2
20405cca:	873e                	mv	a4,a5
20405ccc:	fe442783          	lw	a5,-28(s0)
20405cd0:	97ba                	add	a5,a5,a4
20405cd2:	439c                	lw	a5,0(a5)
20405cd4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
            rc = 0;
20405cd8:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20405cdc:	a815                	j	20405d10 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:234
        rc = 0;
20405cde:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
	if (data) {
20405ce2:	fd442783          	lw	a5,-44(s0)
20405ce6:	c79d                	beqz	a5,20405d14 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
	    hartid = *(int *)data;
20405ce8:	fd442783          	lw	a5,-44(s0)
20405cec:	439c                	lw	a5,0(a5)
20405cee:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20405cf2:	fe042783          	lw	a5,-32(s0)
20405cf6:	078a                	slli	a5,a5,0x2
20405cf8:	873e                	mv	a4,a5
20405cfa:	fe442783          	lw	a5,-28(s0)
20405cfe:	97ba                	add	a5,a5,a4
20405d00:	439c                	lw	a5,0(a5)
20405d02:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20405d06:	a039                	j	20405d14 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20405d08:	0001                	nop
20405d0a:	a031                	j	20405d16 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20405d0c:	0001                	nop
20405d0e:	a021                	j	20405d16 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20405d10:	0001                	nop
20405d12:	a011                	j	20405d16 <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20405d14:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:245
    }

    return rc;
20405d16:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:246
}
20405d1a:	853e                	mv	a0,a5
20405d1c:	50b2                	lw	ra,44(sp)
20405d1e:	5422                	lw	s0,40(sp)
20405d20:	6145                	addi	sp,sp,48
20405d22:	8082                	ret

20405d24 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249

int __metal_driver_riscv_clint0_clear_interrupt (struct metal_interrupt *controller, int id)
{
20405d24:	7179                	addi	sp,sp,-48
20405d26:	d606                	sw	ra,44(sp)
20405d28:	d422                	sw	s0,40(sp)
20405d2a:	1800                	addi	s0,sp,48
20405d2c:	fca42e23          	sw	a0,-36(s0)
20405d30:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:250
    int hartid = metal_cpu_get_current_hartid();
20405d34:	5b1020ef          	jal	ra,20408ae4 <metal_cpu_get_current_hartid>
20405d38:	87aa                	mv	a5,a0
20405d3a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
    return __metal_driver_riscv_clint0_command_request(controller,
20405d3e:	fec40793          	addi	a5,s0,-20
20405d42:	863e                	mv	a2,a5
20405d44:	4589                	li	a1,2
20405d46:	fdc42503          	lw	a0,-36(s0)
20405d4a:	3555                	jal	20405bee <__metal_driver_riscv_clint0_command_request>
20405d4c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
						METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20405d4e:	853e                	mv	a0,a5
20405d50:	50b2                	lw	ra,44(sp)
20405d52:	5422                	lw	s0,40(sp)
20405d54:	6145                	addi	sp,sp,48
20405d56:	8082                	ret

20405d58 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256

int __metal_driver_riscv_clint0_set_interrupt (struct metal_interrupt *controller, int id)
{
20405d58:	7179                	addi	sp,sp,-48
20405d5a:	d606                	sw	ra,44(sp)
20405d5c:	d422                	sw	s0,40(sp)
20405d5e:	1800                	addi	s0,sp,48
20405d60:	fca42e23          	sw	a0,-36(s0)
20405d64:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
    int hartid = metal_cpu_get_current_hartid();
20405d68:	57d020ef          	jal	ra,20408ae4 <metal_cpu_get_current_hartid>
20405d6c:	87aa                	mv	a5,a0
20405d6e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
    return __metal_driver_riscv_clint0_command_request(controller,
20405d72:	fec40793          	addi	a5,s0,-20
20405d76:	863e                	mv	a2,a5
20405d78:	458d                	li	a1,3
20405d7a:	fdc42503          	lw	a0,-36(s0)
20405d7e:	3d85                	jal	20405bee <__metal_driver_riscv_clint0_command_request>
20405d80:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:260
						METAL_SOFTWARE_IPI_SET, &hartid);
}
20405d82:	853e                	mv	a0,a5
20405d84:	50b2                	lw	ra,44(sp)
20405d86:	5422                	lw	s0,40(sp)
20405d88:	6145                	addi	sp,sp,48
20405d8a:	8082                	ret

20405d8c <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:195



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20405d8c:	1101                	addi	sp,sp,-32
20405d8e:	ce22                	sw	s0,28(sp)
20405d90:	1000                	addi	s0,sp,32
20405d92:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:196
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405d96:	fec42703          	lw	a4,-20(s0)
20405d9a:	81418793          	addi	a5,gp,-2028 # 800007ec <__metal_dt_cpu_0>
20405d9e:	00f71463          	bne	a4,a5,20405da6 <__metal_driver_cpu_hartid+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:197
		return 0;
20405da2:	4781                	li	a5,0
20405da4:	a011                	j	20405da8 <__metal_driver_cpu_hartid+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:200
	}
	else {
		return -1;
20405da6:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:202
	}
}
20405da8:	853e                	mv	a0,a5
20405daa:	4472                	lw	s0,28(sp)
20405dac:	6105                	addi	sp,sp,32
20405dae:	8082                	ret

20405db0 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:205

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20405db0:	1101                	addi	sp,sp,-32
20405db2:	ce22                	sw	s0,28(sp)
20405db4:	1000                	addi	s0,sp,32
20405db6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:206
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405dba:	fec42703          	lw	a4,-20(s0)
20405dbe:	81418793          	addi	a5,gp,-2028 # 800007ec <__metal_dt_cpu_0>
20405dc2:	00f71763          	bne	a4,a5,20405dd0 <__metal_driver_cpu_timebase+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:207
		return 1000000;
20405dc6:	000f47b7          	lui	a5,0xf4
20405dca:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20405dce:	a011                	j	20405dd2 <__metal_driver_cpu_timebase+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:210
	}
	else {
		return 0;
20405dd0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:212
	}
}
20405dd2:	853e                	mv	a0,a5
20405dd4:	4472                	lw	s0,28(sp)
20405dd6:	6105                	addi	sp,sp,32
20405dd8:	8082                	ret

20405dda <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:215

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20405dda:	1101                	addi	sp,sp,-32
20405ddc:	ce22                	sw	s0,28(sp)
20405dde:	1000                	addi	s0,sp,32
20405de0:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:216
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20405de4:	fec42703          	lw	a4,-20(s0)
20405de8:	81418793          	addi	a5,gp,-2028 # 800007ec <__metal_dt_cpu_0>
20405dec:	00f71763          	bne	a4,a5,20405dfa <__metal_driver_cpu_interrupt_controller+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:217
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20405df0:	800007b7          	lui	a5,0x80000
20405df4:	10078793          	addi	a5,a5,256 # 80000100 <metal_segment_heap_target_end+0xffffec2c>
20405df8:	a011                	j	20405dfc <__metal_driver_cpu_interrupt_controller+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:220
	}
	else {
		return NULL;
20405dfa:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:222
	}
}
20405dfc:	853e                	mv	a0,a5
20405dfe:	4472                	lw	s0,28(sp)
20405e00:	6105                	addi	sp,sp,32
20405e02:	8082                	ret

20405e04 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:14
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu, unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid)
{
20405e04:	1101                	addi	sp,sp,-32
20405e06:	ce22                	sw	s0,28(sp)
20405e08:	1000                	addi	s0,sp,32
20405e0a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:15
    if (hartid < __METAL_DT_MAX_HARTS) {
20405e0e:	fec42783          	lw	a5,-20(s0)
20405e12:	00f04c63          	bgtz	a5,20405e2a <__metal_driver_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:16
        return &(__metal_cpu_table[hartid]->cpu);
20405e16:	800007b7          	lui	a5,0x80000
20405e1a:	fec42703          	lw	a4,-20(s0)
20405e1e:	070a                	slli	a4,a4,0x2
20405e20:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20405e24:	97ba                	add	a5,a5,a4
20405e26:	439c                	lw	a5,0(a5)
20405e28:	a011                	j	20405e2c <__metal_driver_cpu_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:18
    }
    return (struct metal_cpu *)NULL;
20405e2a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:19
}
20405e2c:	853e                	mv	a0,a5
20405e2e:	4472                	lw	s0,28(sp)
20405e30:	6105                	addi	sp,sp,32
20405e32:	8082                	ret

20405e34 <__metal_myhart_id>:
__metal_myhart_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:22

uintptr_t __metal_myhart_id (void)
{
20405e34:	1101                	addi	sp,sp,-32
20405e36:	ce22                	sw	s0,28(sp)
20405e38:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:24
    uintptr_t myhart;
    __asm__ volatile ("csrr %0, mhartid" : "=r"(myhart));
20405e3a:	f14027f3          	csrr	a5,mhartid
20405e3e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
    return myhart;
20405e42:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
}
20405e46:	853e                	mv	a0,a5
20405e48:	4472                	lw	s0,28(sp)
20405e4a:	6105                	addi	sp,sp,32
20405e4c:	8082                	ret

20405e4e <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
    for (ptr = base; ptr < (base + size); ptr++){
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable (void) {
20405e4e:	1101                	addi	sp,sp,-32
20405e50:	ce22                	sw	s0,28(sp)
20405e52:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:38
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20405e54:	47a1                	li	a5,8
20405e56:	3007a7f3          	csrrs	a5,mstatus,a5
20405e5a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:39
}
20405e5e:	0001                	nop
20405e60:	4472                	lw	s0,28(sp)
20405e62:	6105                	addi	sp,sp,32
20405e64:	8082                	ret

20405e66 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:41

void __metal_interrupt_global_disable (void) {
20405e66:	1101                	addi	sp,sp,-32
20405e68:	ce22                	sw	s0,28(sp)
20405e6a:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:43
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20405e6c:	47a1                	li	a5,8
20405e6e:	3007b7f3          	csrrc	a5,mstatus,a5
20405e72:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:44
}
20405e76:	0001                	nop
20405e78:	4472                	lw	s0,28(sp)
20405e7a:	6105                	addi	sp,sp,32
20405e7c:	8082                	ret

20405e7e <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:46

void __metal_interrupt_software_enable (void) {
20405e7e:	1101                	addi	sp,sp,-32
20405e80:	ce22                	sw	s0,28(sp)
20405e82:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:48
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20405e84:	47a1                	li	a5,8
20405e86:	3047a7f3          	csrrs	a5,mie,a5
20405e8a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:49
}
20405e8e:	0001                	nop
20405e90:	4472                	lw	s0,28(sp)
20405e92:	6105                	addi	sp,sp,32
20405e94:	8082                	ret

20405e96 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:51

void __metal_interrupt_software_disable (void) {
20405e96:	1101                	addi	sp,sp,-32
20405e98:	ce22                	sw	s0,28(sp)
20405e9a:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:53
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20405e9c:	47a1                	li	a5,8
20405e9e:	3047b7f3          	csrrc	a5,mie,a5
20405ea2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
}
20405ea6:	0001                	nop
20405ea8:	4472                	lw	s0,28(sp)
20405eaa:	6105                	addi	sp,sp,32
20405eac:	8082                	ret

20405eae <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:56

void __metal_interrupt_timer_enable (void) {
20405eae:	1101                	addi	sp,sp,-32
20405eb0:	ce22                	sw	s0,28(sp)
20405eb2:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:58
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20405eb4:	08000793          	li	a5,128
20405eb8:	3047a7f3          	csrrs	a5,mie,a5
20405ebc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59
}
20405ec0:	0001                	nop
20405ec2:	4472                	lw	s0,28(sp)
20405ec4:	6105                	addi	sp,sp,32
20405ec6:	8082                	ret

20405ec8 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61

void __metal_interrupt_timer_disable (void) {
20405ec8:	1101                	addi	sp,sp,-32
20405eca:	ce22                	sw	s0,28(sp)
20405ecc:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:63
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20405ece:	08000793          	li	a5,128
20405ed2:	3047b7f3          	csrrc	a5,mie,a5
20405ed6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
}
20405eda:	0001                	nop
20405edc:	4472                	lw	s0,28(sp)
20405ede:	6105                	addi	sp,sp,32
20405ee0:	8082                	ret

20405ee2 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_external_enable (void) {
20405ee2:	1101                	addi	sp,sp,-32
20405ee4:	ce22                	sw	s0,28(sp)
20405ee6:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20405ee8:	6785                	lui	a5,0x1
20405eea:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20405eee:	3047a7f3          	csrrs	a5,mie,a5
20405ef2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:69
}
20405ef6:	0001                	nop
20405ef8:	4472                	lw	s0,28(sp)
20405efa:	6105                	addi	sp,sp,32
20405efc:	8082                	ret

20405efe <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71

void __metal_interrupt_external_disable (void) {
20405efe:	1101                	addi	sp,sp,-32
20405f00:	ce22                	sw	s0,28(sp)
20405f02:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73
    unsigned long m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20405f04:	6785                	lui	a5,0x1
20405f06:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20405f0a:	3047b7f3          	csrrc	a5,mie,a5
20405f0e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:74
}
20405f12:	0001                	nop
20405f14:	4472                	lw	s0,28(sp)
20405f16:	6105                	addi	sp,sp,32
20405f18:	8082                	ret

20405f1a <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:76

void __metal_interrupt_local_enable (int id) {
20405f1a:	7179                	addi	sp,sp,-48
20405f1c:	d622                	sw	s0,44(sp)
20405f1e:	1800                	addi	s0,sp,48
20405f20:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:77
    uintptr_t b = 1 << id;
20405f24:	fdc42783          	lw	a5,-36(s0)
20405f28:	4705                	li	a4,1
20405f2a:	00f717b3          	sll	a5,a4,a5
20405f2e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:79
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20405f32:	fec42783          	lw	a5,-20(s0)
20405f36:	3047a7f3          	csrrs	a5,mie,a5
20405f3a:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80
}
20405f3e:	0001                	nop
20405f40:	5432                	lw	s0,44(sp)
20405f42:	6145                	addi	sp,sp,48
20405f44:	8082                	ret

20405f46 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82

void __metal_interrupt_local_disable (int id) {
20405f46:	7179                	addi	sp,sp,-48
20405f48:	d622                	sw	s0,44(sp)
20405f4a:	1800                	addi	s0,sp,48
20405f4c:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:83
    uintptr_t b = 1 << id;
20405f50:	fdc42783          	lw	a5,-36(s0)
20405f54:	4705                	li	a4,1
20405f56:	00f717b3          	sll	a5,a4,a5
20405f5a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20405f5e:	fec42783          	lw	a5,-20(s0)
20405f62:	3047b7f3          	csrrc	a5,mie,a5
20405f66:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:86
}
20405f6a:	0001                	nop
20405f6c:	5432                	lw	s0,44(sp)
20405f6e:	6145                	addi	sp,sp,48
20405f70:	8082                	ret

20405f72 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:88

void __metal_default_exception_handler (struct metal_cpu *cpu, int ecode) {
20405f72:	1101                	addi	sp,sp,-32
20405f74:	ce06                	sw	ra,28(sp)
20405f76:	cc22                	sw	s0,24(sp)
20405f78:	1000                	addi	s0,sp,32
20405f7a:	fea42623          	sw	a0,-20(s0)
20405f7e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    metal_shutdown(100);
20405f82:	06400513          	li	a0,100
20405f86:	379020ef          	jal	ra,20408afe <metal_shutdown>

20405f8a <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
}

void __metal_default_interrupt_handler (int id, void *priv) {
20405f8a:	1101                	addi	sp,sp,-32
20405f8c:	ce06                	sw	ra,28(sp)
20405f8e:	cc22                	sw	s0,24(sp)
20405f90:	1000                	addi	s0,sp,32
20405f92:	fea42623          	sw	a0,-20(s0)
20405f96:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:93
    metal_shutdown(200);
20405f9a:	0c800513          	li	a0,200
20405f9e:	361020ef          	jal	ra,20408afe <metal_shutdown>

20405fa2 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:97
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler (void) {
20405fa2:	715d                	addi	sp,sp,-80
20405fa4:	c686                	sw	ra,76(sp)
20405fa6:	c496                	sw	t0,72(sp)
20405fa8:	c29a                	sw	t1,68(sp)
20405faa:	c09e                	sw	t2,64(sp)
20405fac:	de22                	sw	s0,60(sp)
20405fae:	dc2a                	sw	a0,56(sp)
20405fb0:	da2e                	sw	a1,52(sp)
20405fb2:	d832                	sw	a2,48(sp)
20405fb4:	d636                	sw	a3,44(sp)
20405fb6:	d43a                	sw	a4,40(sp)
20405fb8:	d23e                	sw	a5,36(sp)
20405fba:	d042                	sw	a6,32(sp)
20405fbc:	ce46                	sw	a7,28(sp)
20405fbe:	cc72                	sw	t3,24(sp)
20405fc0:	ca76                	sw	t4,20(sp)
20405fc2:	c87a                	sw	t5,16(sp)
20405fc4:	c67e                	sw	t6,12(sp)
20405fc6:	0880                	addi	s0,sp,80
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:98
    metal_shutdown(300);
20405fc8:	12c00513          	li	a0,300
20405fcc:	333020ef          	jal	ra,20408afe <metal_shutdown>

20405fd0 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_software_interrupt_vector_handler (void) {
20405fd0:	711d                	addi	sp,sp,-96
20405fd2:	ce86                	sw	ra,92(sp)
20405fd4:	cc96                	sw	t0,88(sp)
20405fd6:	ca9a                	sw	t1,84(sp)
20405fd8:	c89e                	sw	t2,80(sp)
20405fda:	c6a2                	sw	s0,76(sp)
20405fdc:	c4aa                	sw	a0,72(sp)
20405fde:	c2ae                	sw	a1,68(sp)
20405fe0:	c0b2                	sw	a2,64(sp)
20405fe2:	de36                	sw	a3,60(sp)
20405fe4:	dc3a                	sw	a4,56(sp)
20405fe6:	da3e                	sw	a5,52(sp)
20405fe8:	d842                	sw	a6,48(sp)
20405fea:	d646                	sw	a7,44(sp)
20405fec:	d472                	sw	t3,40(sp)
20405fee:	d276                	sw	t4,36(sp)
20405ff0:	d07a                	sw	t5,32(sp)
20405ff2:	ce7e                	sw	t6,28(sp)
20405ff4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20405ff6:	3d3d                	jal	20405e34 <__metal_myhart_id>
20405ff8:	872a                	mv	a4,a0
20405ffa:	800007b7          	lui	a5,0x80000
20405ffe:	070a                	slli	a4,a4,0x2
20406000:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406004:	97ba                	add	a5,a5,a4
20406006:	439c                	lw	a5,0(a5)
20406008:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

    if ( cpu ) {
2040600c:	fac42783          	lw	a5,-84(s0)
20406010:	c785                	beqz	a5,20406038 <metal_software_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:109
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406012:	fac42503          	lw	a0,-84(s0)
20406016:	33d1                	jal	20405dda <__metal_driver_cpu_interrupt_controller>
20406018:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].exint_data;
2040601c:	fa842783          	lw	a5,-88(s0)
20406020:	0e07a783          	lw	a5,224(a5)
20406024:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
        intc->metal_int_table[METAL_INTERRUPT_ID_SW].handler(METAL_INTERRUPT_ID_SW, priv);
20406028:	fa842783          	lw	a5,-88(s0)
2040602c:	0d87a783          	lw	a5,216(a5)
20406030:	fa442583          	lw	a1,-92(s0)
20406034:	450d                	li	a0,3
20406036:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113
    }
}
20406038:	0001                	nop
2040603a:	40f6                	lw	ra,92(sp)
2040603c:	42e6                	lw	t0,88(sp)
2040603e:	4356                	lw	t1,84(sp)
20406040:	43c6                	lw	t2,80(sp)
20406042:	4436                	lw	s0,76(sp)
20406044:	4526                	lw	a0,72(sp)
20406046:	4596                	lw	a1,68(sp)
20406048:	4606                	lw	a2,64(sp)
2040604a:	56f2                	lw	a3,60(sp)
2040604c:	5762                	lw	a4,56(sp)
2040604e:	57d2                	lw	a5,52(sp)
20406050:	5842                	lw	a6,48(sp)
20406052:	58b2                	lw	a7,44(sp)
20406054:	5e22                	lw	t3,40(sp)
20406056:	5e92                	lw	t4,36(sp)
20406058:	5f02                	lw	t5,32(sp)
2040605a:	4ff2                	lw	t6,28(sp)
2040605c:	6125                	addi	sp,sp,96
2040605e:	30200073          	mret

20406062 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:115

void __metal_default_sw_handler (int id, void *priv) {
20406062:	7179                	addi	sp,sp,-48
20406064:	d606                	sw	ra,44(sp)
20406066:	d422                	sw	s0,40(sp)
20406068:	1800                	addi	s0,sp,48
2040606a:	fca42e23          	sw	a0,-36(s0)
2040606e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406072:	33c9                	jal	20405e34 <__metal_myhart_id>
20406074:	872a                	mv	a4,a0
20406076:	800007b7          	lui	a5,0x80000
2040607a:	070a                	slli	a4,a4,0x2
2040607c:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406080:	97ba                	add	a5,a5,a4
20406082:	439c                	lw	a5,0(a5)
20406084:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:120

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
20406088:	342027f3          	csrr	a5,mcause
2040608c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:121
    if ( cpu ) {
20406090:	fec42783          	lw	a5,-20(s0)
20406094:	c795                	beqz	a5,204060c0 <__metal_default_sw_handler+0x5e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406096:	fec42503          	lw	a0,-20(s0)
2040609a:	3381                	jal	20405dda <__metal_driver_cpu_interrupt_controller>
2040609c:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:124
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE]((struct metal_cpu *)cpu, id);
204060a0:	fe842783          	lw	a5,-24(s0)
204060a4:	3ff7f793          	andi	a5,a5,1023
204060a8:	fe442703          	lw	a4,-28(s0)
204060ac:	0e078793          	addi	a5,a5,224
204060b0:	078a                	slli	a5,a5,0x2
204060b2:	97ba                	add	a5,a5,a4
204060b4:	479c                	lw	a5,8(a5)
204060b6:	fdc42583          	lw	a1,-36(s0)
204060ba:	fec42503          	lw	a0,-20(s0)
204060be:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:126
    }
}
204060c0:	0001                	nop
204060c2:	50b2                	lw	ra,44(sp)
204060c4:	5422                	lw	s0,40(sp)
204060c6:	6145                	addi	sp,sp,48
204060c8:	8082                	ret

204060ca <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_timer_interrupt_vector_handler (void) {
204060ca:	711d                	addi	sp,sp,-96
204060cc:	ce86                	sw	ra,92(sp)
204060ce:	cc96                	sw	t0,88(sp)
204060d0:	ca9a                	sw	t1,84(sp)
204060d2:	c89e                	sw	t2,80(sp)
204060d4:	c6a2                	sw	s0,76(sp)
204060d6:	c4aa                	sw	a0,72(sp)
204060d8:	c2ae                	sw	a1,68(sp)
204060da:	c0b2                	sw	a2,64(sp)
204060dc:	de36                	sw	a3,60(sp)
204060de:	dc3a                	sw	a4,56(sp)
204060e0:	da3e                	sw	a5,52(sp)
204060e2:	d842                	sw	a6,48(sp)
204060e4:	d646                	sw	a7,44(sp)
204060e6:	d472                	sw	t3,40(sp)
204060e8:	d276                	sw	t4,36(sp)
204060ea:	d07a                	sw	t5,32(sp)
204060ec:	ce7e                	sw	t6,28(sp)
204060ee:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204060f0:	3391                	jal	20405e34 <__metal_myhart_id>
204060f2:	872a                	mv	a4,a0
204060f4:	800007b7          	lui	a5,0x80000
204060f8:	070a                	slli	a4,a4,0x2
204060fa:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
204060fe:	97ba                	add	a5,a5,a4
20406100:	439c                	lw	a5,0(a5)
20406102:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:134

    if ( cpu ) {
20406106:	fac42783          	lw	a5,-84(s0)
2040610a:	c785                	beqz	a5,20406132 <metal_timer_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:136
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040610c:	fac42503          	lw	a0,-84(s0)
20406110:	31e9                	jal	20405dda <__metal_driver_cpu_interrupt_controller>
20406112:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].exint_data;
20406116:	fa842783          	lw	a5,-88(s0)
2040611a:	1407a783          	lw	a5,320(a5)
2040611e:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
        intc->metal_int_table[METAL_INTERRUPT_ID_TMR].handler(METAL_INTERRUPT_ID_TMR, priv);
20406122:	fa842783          	lw	a5,-88(s0)
20406126:	1387a783          	lw	a5,312(a5)
2040612a:	fa442583          	lw	a1,-92(s0)
2040612e:	451d                	li	a0,7
20406130:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
    }
}
20406132:	0001                	nop
20406134:	40f6                	lw	ra,92(sp)
20406136:	42e6                	lw	t0,88(sp)
20406138:	4356                	lw	t1,84(sp)
2040613a:	43c6                	lw	t2,80(sp)
2040613c:	4436                	lw	s0,76(sp)
2040613e:	4526                	lw	a0,72(sp)
20406140:	4596                	lw	a1,68(sp)
20406142:	4606                	lw	a2,64(sp)
20406144:	56f2                	lw	a3,60(sp)
20406146:	5762                	lw	a4,56(sp)
20406148:	57d2                	lw	a5,52(sp)
2040614a:	5842                	lw	a6,48(sp)
2040614c:	58b2                	lw	a7,44(sp)
2040614e:	5e22                	lw	t3,40(sp)
20406150:	5e92                	lw	t4,36(sp)
20406152:	5f02                	lw	t5,32(sp)
20406154:	4ff2                	lw	t6,28(sp)
20406156:	6125                	addi	sp,sp,96
20406158:	30200073          	mret

2040615c <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:142

void __metal_default_timer_handler (int id, void *priv) {
2040615c:	7179                	addi	sp,sp,-48
2040615e:	d606                	sw	ra,44(sp)
20406160:	d422                	sw	s0,40(sp)
20406162:	1800                	addi	s0,sp,48
20406164:	fca42e23          	sw	a0,-36(s0)
20406168:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:143
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
2040616c:	31e1                	jal	20405e34 <__metal_myhart_id>
2040616e:	87aa                	mv	a5,a0
20406170:	853e                	mv	a0,a5
20406172:	3949                	jal	20405e04 <__metal_driver_cpu_get>
20406174:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20406178:	fec42503          	lw	a0,-20(s0)
2040617c:	1ba010ef          	jal	ra,20407336 <__metal_driver_cpu_mtime_get>
20406180:	fea42023          	sw	a0,-32(s0)
20406184:	feb42223          	sw	a1,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:147

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20406188:	fe042783          	lw	a5,-32(s0)
2040618c:	fe442803          	lw	a6,-28(s0)
20406190:	45a9                	li	a1,10
20406192:	4601                	li	a2,0
20406194:	00b786b3          	add	a3,a5,a1
20406198:	8536                	mv	a0,a3
2040619a:	00f53533          	sltu	a0,a0,a5
2040619e:	00c80733          	add	a4,a6,a2
204061a2:	00e507b3          	add	a5,a0,a4
204061a6:	873e                	mv	a4,a5
204061a8:	87b6                	mv	a5,a3
204061aa:	883a                	mv	a6,a4
204061ac:	85be                	mv	a1,a5
204061ae:	8642                	mv	a2,a6
204061b0:	fec42503          	lw	a0,-20(s0)
204061b4:	1e8010ef          	jal	ra,2040739c <__metal_driver_cpu_mtimecmp_set>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148
}
204061b8:	0001                	nop
204061ba:	50b2                	lw	ra,44(sp)
204061bc:	5422                	lw	s0,40(sp)
204061be:	6145                	addi	sp,sp,48
204061c0:	8082                	ret
	...

20406200 <__metal_exception_handler>:
__metal_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:165
        intc->metal_int_table[METAL_INTERRUPT_ID_EXT].handler(METAL_INTERRUPT_ID_EXT, priv);
    }
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler (void) {
20406200:	7119                	addi	sp,sp,-128
20406202:	de86                	sw	ra,124(sp)
20406204:	dc96                	sw	t0,120(sp)
20406206:	da9a                	sw	t1,116(sp)
20406208:	d89e                	sw	t2,112(sp)
2040620a:	d6a2                	sw	s0,108(sp)
2040620c:	d4aa                	sw	a0,104(sp)
2040620e:	d2ae                	sw	a1,100(sp)
20406210:	d0b2                	sw	a2,96(sp)
20406212:	ceb6                	sw	a3,92(sp)
20406214:	ccba                	sw	a4,88(sp)
20406216:	cabe                	sw	a5,84(sp)
20406218:	c8c2                	sw	a6,80(sp)
2040621a:	c6c6                	sw	a7,76(sp)
2040621c:	c4f2                	sw	t3,72(sp)
2040621e:	c2f6                	sw	t4,68(sp)
20406220:	c0fa                	sw	t5,64(sp)
20406222:	de7e                	sw	t6,60(sp)
20406224:	0100                	addi	s0,sp,128
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:170
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406226:	c0fff0ef          	jal	ra,20405e34 <__metal_myhart_id>
2040622a:	872a                	mv	a4,a0
2040622c:	800007b7          	lui	a5,0x80000
20406230:	070a                	slli	a4,a4,0x2
20406232:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406236:	97ba                	add	a5,a5,a4
20406238:	439c                	lw	a5,0(a5)
2040623a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:172

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
2040623e:	342027f3          	csrr	a5,mcause
20406242:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:173
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
20406246:	341027f3          	csrr	a5,mepc
2040624a:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    __asm__ volatile ("csrr %0, mtval" : "=r"(mtval));
2040624e:	343027f3          	csrr	a5,mtval
20406252:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:175
    __asm__ volatile ("csrr %0, mtvec" : "=r"(mtvec));
20406256:	305027f3          	csrr	a5,mtvec
2040625a:	f8f42e23          	sw	a5,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177

    if ( cpu ) {
2040625e:	fac42783          	lw	a5,-84(s0)
20406262:	c7e9                	beqz	a5,2040632c <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406264:	fac42503          	lw	a0,-84(s0)
20406268:	b73ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
2040626c:	f8a42c23          	sw	a0,-104(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:180
        id = mcause & METAL_MCAUSE_CAUSE;
20406270:	fa842783          	lw	a5,-88(s0)
20406274:	3ff7f793          	andi	a5,a5,1023
20406278:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181
        if (mcause & METAL_MCAUSE_INTR) {
2040627c:	fa842783          	lw	a5,-88(s0)
20406280:	0807d863          	bgez	a5,20406310 <__metal_exception_handler+0x110>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20406284:	f9442703          	lw	a4,-108(s0)
20406288:	47ad                	li	a5,11
2040628a:	00e7d763          	bge	a5,a4,20406298 <__metal_exception_handler+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183 (discriminator 1)
               ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
2040628e:	f9c42783          	lw	a5,-100(s0)
20406292:	03f7f793          	andi	a5,a5,63
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20406296:	ef9d                	bnez	a5,204062d4 <__metal_exception_handler+0xd4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
                priv = intc->metal_int_table[id].exint_data;
20406298:	f9842683          	lw	a3,-104(s0)
2040629c:	f9442703          	lw	a4,-108(s0)
204062a0:	87ba                	mv	a5,a4
204062a2:	0786                	slli	a5,a5,0x1
204062a4:	97ba                	add	a5,a5,a4
204062a6:	078e                	slli	a5,a5,0x3
204062a8:	97b6                	add	a5,a5,a3
204062aa:	0987a783          	lw	a5,152(a5)
204062ae:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
                intc->metal_int_table[id].handler(id, priv);
204062b2:	f9842683          	lw	a3,-104(s0)
204062b6:	f9442703          	lw	a4,-108(s0)
204062ba:	87ba                	mv	a5,a4
204062bc:	0786                	slli	a5,a5,0x1
204062be:	97ba                	add	a5,a5,a4
204062c0:	078e                	slli	a5,a5,0x3
204062c2:	97b6                	add	a5,a5,a3
204062c4:	0907a783          	lw	a5,144(a5)
204062c8:	f8c42583          	lw	a1,-116(s0)
204062cc:	f9442503          	lw	a0,-108(s0)
204062d0:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
		return;
204062d2:	a8a9                	j	2040632c <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
204062d4:	f9c42783          	lw	a5,-100(s0)
204062d8:	03f7f713          	andi	a4,a5,63
204062dc:	4789                	li	a5,2
204062de:	04f71763          	bne	a4,a5,2040632c <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192
    		uintptr_t mtvt;
    		metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile ("csrr %0, 0x307" : "=r"(mtvt));
204062e2:	307027f3          	csrr	a5,mtvt
204062e6:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
               	priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204062ea:	f9842783          	lw	a5,-104(s0)
204062ee:	0dc7a783          	lw	a5,220(a5)
204062f2:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
               	mtvt_handler = (metal_interrupt_handler_t)*(uintptr_t *)mtvt;
204062f6:	f9042783          	lw	a5,-112(s0)
204062fa:	439c                	lw	a5,0(a5)
204062fc:	f8f42423          	sw	a5,-120(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
               	mtvt_handler(id, priv);
20406300:	f8842783          	lw	a5,-120(s0)
20406304:	f8c42583          	lw	a1,-116(s0)
20406308:	f9442503          	lw	a0,-108(s0)
2040630c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:196
		return;
2040630e:	a839                	j	2040632c <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:199
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20406310:	f9842703          	lw	a4,-104(s0)
20406314:	f9442783          	lw	a5,-108(s0)
20406318:	0e078793          	addi	a5,a5,224
2040631c:	078a                	slli	a5,a5,0x2
2040631e:	97ba                	add	a5,a5,a4
20406320:	479c                	lw	a5,8(a5)
20406322:	f9442583          	lw	a1,-108(s0)
20406326:	fac42503          	lw	a0,-84(s0)
2040632a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
        }
    }
}
2040632c:	50f6                	lw	ra,124(sp)
2040632e:	52e6                	lw	t0,120(sp)
20406330:	5356                	lw	t1,116(sp)
20406332:	53c6                	lw	t2,112(sp)
20406334:	5436                	lw	s0,108(sp)
20406336:	5526                	lw	a0,104(sp)
20406338:	5596                	lw	a1,100(sp)
2040633a:	5606                	lw	a2,96(sp)
2040633c:	46f6                	lw	a3,92(sp)
2040633e:	4766                	lw	a4,88(sp)
20406340:	47d6                	lw	a5,84(sp)
20406342:	4846                	lw	a6,80(sp)
20406344:	48b6                	lw	a7,76(sp)
20406346:	4e26                	lw	t3,72(sp)
20406348:	4e96                	lw	t4,68(sp)
2040634a:	4f06                	lw	t5,64(sp)
2040634c:	5ff2                	lw	t6,60(sp)
2040634e:	6109                	addi	sp,sp,128
20406350:	30200073          	mret
	...

2040637a <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler (void) {
2040637a:	711d                	addi	sp,sp,-96
2040637c:	ce86                	sw	ra,92(sp)
2040637e:	cc96                	sw	t0,88(sp)
20406380:	ca9a                	sw	t1,84(sp)
20406382:	c89e                	sw	t2,80(sp)
20406384:	c6a2                	sw	s0,76(sp)
20406386:	c4aa                	sw	a0,72(sp)
20406388:	c2ae                	sw	a1,68(sp)
2040638a:	c0b2                	sw	a2,64(sp)
2040638c:	de36                	sw	a3,60(sp)
2040638e:	dc3a                	sw	a4,56(sp)
20406390:	da3e                	sw	a5,52(sp)
20406392:	d842                	sw	a6,48(sp)
20406394:	d646                	sw	a7,44(sp)
20406396:	d472                	sw	t3,40(sp)
20406398:	d276                	sw	t4,36(sp)
2040639a:	d07a                	sw	t5,32(sp)
2040639c:	ce7e                	sw	t6,28(sp)
2040639e:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204063a0:	a95ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
204063a4:	872a                	mv	a4,a0
204063a6:	800007b7          	lui	a5,0x80000
204063aa:	070a                	slli	a4,a4,0x2
204063ac:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
204063b0:	97ba                	add	a5,a5,a4
204063b2:	439c                	lw	a5,0(a5)
204063b4:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:210

    if ( cpu ) {
204063b8:	fac42783          	lw	a5,-84(s0)
204063bc:	c78d                	beqz	a5,204063e6 <metal_lc0_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:212
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204063be:	fac42503          	lw	a0,-84(s0)
204063c2:	a19ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
204063c6:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:213
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC0].exint_data;
204063ca:	fa842783          	lw	a5,-88(s0)
204063ce:	2187a783          	lw	a5,536(a5)
204063d2:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214
        intc->metal_int_table[METAL_INTERRUPT_ID_LC0].handler(METAL_INTERRUPT_ID_LC0, priv);
204063d6:	fa842783          	lw	a5,-88(s0)
204063da:	2107a783          	lw	a5,528(a5)
204063de:	fa442583          	lw	a1,-92(s0)
204063e2:	4541                	li	a0,16
204063e4:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
    }
}
204063e6:	0001                	nop
204063e8:	40f6                	lw	ra,92(sp)
204063ea:	42e6                	lw	t0,88(sp)
204063ec:	4356                	lw	t1,84(sp)
204063ee:	43c6                	lw	t2,80(sp)
204063f0:	4436                	lw	s0,76(sp)
204063f2:	4526                	lw	a0,72(sp)
204063f4:	4596                	lw	a1,68(sp)
204063f6:	4606                	lw	a2,64(sp)
204063f8:	56f2                	lw	a3,60(sp)
204063fa:	5762                	lw	a4,56(sp)
204063fc:	57d2                	lw	a5,52(sp)
204063fe:	5842                	lw	a6,48(sp)
20406400:	58b2                	lw	a7,44(sp)
20406402:	5e22                	lw	t3,40(sp)
20406404:	5e92                	lw	t4,36(sp)
20406406:	5f02                	lw	t5,32(sp)
20406408:	4ff2                	lw	t6,28(sp)
2040640a:	6125                	addi	sp,sp,96
2040640c:	30200073          	mret

20406410 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler (void) {
20406410:	711d                	addi	sp,sp,-96
20406412:	ce86                	sw	ra,92(sp)
20406414:	cc96                	sw	t0,88(sp)
20406416:	ca9a                	sw	t1,84(sp)
20406418:	c89e                	sw	t2,80(sp)
2040641a:	c6a2                	sw	s0,76(sp)
2040641c:	c4aa                	sw	a0,72(sp)
2040641e:	c2ae                	sw	a1,68(sp)
20406420:	c0b2                	sw	a2,64(sp)
20406422:	de36                	sw	a3,60(sp)
20406424:	dc3a                	sw	a4,56(sp)
20406426:	da3e                	sw	a5,52(sp)
20406428:	d842                	sw	a6,48(sp)
2040642a:	d646                	sw	a7,44(sp)
2040642c:	d472                	sw	t3,40(sp)
2040642e:	d276                	sw	t4,36(sp)
20406430:	d07a                	sw	t5,32(sp)
20406432:	ce7e                	sw	t6,28(sp)
20406434:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:222
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406436:	9ffff0ef          	jal	ra,20405e34 <__metal_myhart_id>
2040643a:	872a                	mv	a4,a0
2040643c:	800007b7          	lui	a5,0x80000
20406440:	070a                	slli	a4,a4,0x2
20406442:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406446:	97ba                	add	a5,a5,a4
20406448:	439c                	lw	a5,0(a5)
2040644a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

    if ( cpu ) {
2040644e:	fac42783          	lw	a5,-84(s0)
20406452:	c78d                	beqz	a5,2040647c <metal_lc1_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406454:	fac42503          	lw	a0,-84(s0)
20406458:	983ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
2040645c:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:227
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC1].exint_data;
20406460:	fa842783          	lw	a5,-88(s0)
20406464:	2307a783          	lw	a5,560(a5)
20406468:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:228
        intc->metal_int_table[METAL_INTERRUPT_ID_LC1].handler(METAL_INTERRUPT_ID_LC1, priv);
2040646c:	fa842783          	lw	a5,-88(s0)
20406470:	2287a783          	lw	a5,552(a5)
20406474:	fa442583          	lw	a1,-92(s0)
20406478:	4545                	li	a0,17
2040647a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    }
}
2040647c:	0001                	nop
2040647e:	40f6                	lw	ra,92(sp)
20406480:	42e6                	lw	t0,88(sp)
20406482:	4356                	lw	t1,84(sp)
20406484:	43c6                	lw	t2,80(sp)
20406486:	4436                	lw	s0,76(sp)
20406488:	4526                	lw	a0,72(sp)
2040648a:	4596                	lw	a1,68(sp)
2040648c:	4606                	lw	a2,64(sp)
2040648e:	56f2                	lw	a3,60(sp)
20406490:	5762                	lw	a4,56(sp)
20406492:	57d2                	lw	a5,52(sp)
20406494:	5842                	lw	a6,48(sp)
20406496:	58b2                	lw	a7,44(sp)
20406498:	5e22                	lw	t3,40(sp)
2040649a:	5e92                	lw	t4,36(sp)
2040649c:	5f02                	lw	t5,32(sp)
2040649e:	4ff2                	lw	t6,28(sp)
204064a0:	6125                	addi	sp,sp,96
204064a2:	30200073          	mret

204064a6 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:233

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler (void) {
204064a6:	711d                	addi	sp,sp,-96
204064a8:	ce86                	sw	ra,92(sp)
204064aa:	cc96                	sw	t0,88(sp)
204064ac:	ca9a                	sw	t1,84(sp)
204064ae:	c89e                	sw	t2,80(sp)
204064b0:	c6a2                	sw	s0,76(sp)
204064b2:	c4aa                	sw	a0,72(sp)
204064b4:	c2ae                	sw	a1,68(sp)
204064b6:	c0b2                	sw	a2,64(sp)
204064b8:	de36                	sw	a3,60(sp)
204064ba:	dc3a                	sw	a4,56(sp)
204064bc:	da3e                	sw	a5,52(sp)
204064be:	d842                	sw	a6,48(sp)
204064c0:	d646                	sw	a7,44(sp)
204064c2:	d472                	sw	t3,40(sp)
204064c4:	d276                	sw	t4,36(sp)
204064c6:	d07a                	sw	t5,32(sp)
204064c8:	ce7e                	sw	t6,28(sp)
204064ca:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204064cc:	969ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
204064d0:	872a                	mv	a4,a0
204064d2:	800007b7          	lui	a5,0x80000
204064d6:	070a                	slli	a4,a4,0x2
204064d8:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
204064dc:	97ba                	add	a5,a5,a4
204064de:	439c                	lw	a5,0(a5)
204064e0:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:238

    if ( cpu ) {
204064e4:	fac42783          	lw	a5,-84(s0)
204064e8:	c78d                	beqz	a5,20406512 <metal_lc2_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204064ea:	fac42503          	lw	a0,-84(s0)
204064ee:	8edff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
204064f2:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC2].exint_data;
204064f6:	fa842783          	lw	a5,-88(s0)
204064fa:	2487a783          	lw	a5,584(a5)
204064fe:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:242
        intc->metal_int_table[METAL_INTERRUPT_ID_LC2].handler(METAL_INTERRUPT_ID_LC2, priv);
20406502:	fa842783          	lw	a5,-88(s0)
20406506:	2407a783          	lw	a5,576(a5)
2040650a:	fa442583          	lw	a1,-92(s0)
2040650e:	4549                	li	a0,18
20406510:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244
    }
}
20406512:	0001                	nop
20406514:	40f6                	lw	ra,92(sp)
20406516:	42e6                	lw	t0,88(sp)
20406518:	4356                	lw	t1,84(sp)
2040651a:	43c6                	lw	t2,80(sp)
2040651c:	4436                	lw	s0,76(sp)
2040651e:	4526                	lw	a0,72(sp)
20406520:	4596                	lw	a1,68(sp)
20406522:	4606                	lw	a2,64(sp)
20406524:	56f2                	lw	a3,60(sp)
20406526:	5762                	lw	a4,56(sp)
20406528:	57d2                	lw	a5,52(sp)
2040652a:	5842                	lw	a6,48(sp)
2040652c:	58b2                	lw	a7,44(sp)
2040652e:	5e22                	lw	t3,40(sp)
20406530:	5e92                	lw	t4,36(sp)
20406532:	5f02                	lw	t5,32(sp)
20406534:	4ff2                	lw	t6,28(sp)
20406536:	6125                	addi	sp,sp,96
20406538:	30200073          	mret

2040653c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:247

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler (void) {
2040653c:	711d                	addi	sp,sp,-96
2040653e:	ce86                	sw	ra,92(sp)
20406540:	cc96                	sw	t0,88(sp)
20406542:	ca9a                	sw	t1,84(sp)
20406544:	c89e                	sw	t2,80(sp)
20406546:	c6a2                	sw	s0,76(sp)
20406548:	c4aa                	sw	a0,72(sp)
2040654a:	c2ae                	sw	a1,68(sp)
2040654c:	c0b2                	sw	a2,64(sp)
2040654e:	de36                	sw	a3,60(sp)
20406550:	dc3a                	sw	a4,56(sp)
20406552:	da3e                	sw	a5,52(sp)
20406554:	d842                	sw	a6,48(sp)
20406556:	d646                	sw	a7,44(sp)
20406558:	d472                	sw	t3,40(sp)
2040655a:	d276                	sw	t4,36(sp)
2040655c:	d07a                	sw	t5,32(sp)
2040655e:	ce7e                	sw	t6,28(sp)
20406560:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406562:	8d3ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406566:	872a                	mv	a4,a0
20406568:	800007b7          	lui	a5,0x80000
2040656c:	070a                	slli	a4,a4,0x2
2040656e:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406572:	97ba                	add	a5,a5,a4
20406574:	439c                	lw	a5,0(a5)
20406576:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:252

    if ( cpu ) {
2040657a:	fac42783          	lw	a5,-84(s0)
2040657e:	c78d                	beqz	a5,204065a8 <metal_lc3_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406580:	fac42503          	lw	a0,-84(s0)
20406584:	857ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
20406588:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC3].exint_data;
2040658c:	fa842783          	lw	a5,-88(s0)
20406590:	2607a783          	lw	a5,608(a5)
20406594:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
        intc->metal_int_table[METAL_INTERRUPT_ID_LC3].handler(METAL_INTERRUPT_ID_LC3, priv);
20406598:	fa842783          	lw	a5,-88(s0)
2040659c:	2587a783          	lw	a5,600(a5)
204065a0:	fa442583          	lw	a1,-92(s0)
204065a4:	454d                	li	a0,19
204065a6:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:258
    }
}
204065a8:	0001                	nop
204065aa:	40f6                	lw	ra,92(sp)
204065ac:	42e6                	lw	t0,88(sp)
204065ae:	4356                	lw	t1,84(sp)
204065b0:	43c6                	lw	t2,80(sp)
204065b2:	4436                	lw	s0,76(sp)
204065b4:	4526                	lw	a0,72(sp)
204065b6:	4596                	lw	a1,68(sp)
204065b8:	4606                	lw	a2,64(sp)
204065ba:	56f2                	lw	a3,60(sp)
204065bc:	5762                	lw	a4,56(sp)
204065be:	57d2                	lw	a5,52(sp)
204065c0:	5842                	lw	a6,48(sp)
204065c2:	58b2                	lw	a7,44(sp)
204065c4:	5e22                	lw	t3,40(sp)
204065c6:	5e92                	lw	t4,36(sp)
204065c8:	5f02                	lw	t5,32(sp)
204065ca:	4ff2                	lw	t6,28(sp)
204065cc:	6125                	addi	sp,sp,96
204065ce:	30200073          	mret

204065d2 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler (void) {
204065d2:	711d                	addi	sp,sp,-96
204065d4:	ce86                	sw	ra,92(sp)
204065d6:	cc96                	sw	t0,88(sp)
204065d8:	ca9a                	sw	t1,84(sp)
204065da:	c89e                	sw	t2,80(sp)
204065dc:	c6a2                	sw	s0,76(sp)
204065de:	c4aa                	sw	a0,72(sp)
204065e0:	c2ae                	sw	a1,68(sp)
204065e2:	c0b2                	sw	a2,64(sp)
204065e4:	de36                	sw	a3,60(sp)
204065e6:	dc3a                	sw	a4,56(sp)
204065e8:	da3e                	sw	a5,52(sp)
204065ea:	d842                	sw	a6,48(sp)
204065ec:	d646                	sw	a7,44(sp)
204065ee:	d472                	sw	t3,40(sp)
204065f0:	d276                	sw	t4,36(sp)
204065f2:	d07a                	sw	t5,32(sp)
204065f4:	ce7e                	sw	t6,28(sp)
204065f6:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:264
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204065f8:	83dff0ef          	jal	ra,20405e34 <__metal_myhart_id>
204065fc:	872a                	mv	a4,a0
204065fe:	800007b7          	lui	a5,0x80000
20406602:	070a                	slli	a4,a4,0x2
20406604:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406608:	97ba                	add	a5,a5,a4
2040660a:	439c                	lw	a5,0(a5)
2040660c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266

    if ( cpu ) {
20406610:	fac42783          	lw	a5,-84(s0)
20406614:	c78d                	beqz	a5,2040663e <metal_lc4_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:268
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406616:	fac42503          	lw	a0,-84(s0)
2040661a:	fc0ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
2040661e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:269
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC4].exint_data;
20406622:	fa842783          	lw	a5,-88(s0)
20406626:	2787a783          	lw	a5,632(a5)
2040662a:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:270
        intc->metal_int_table[METAL_INTERRUPT_ID_LC4].handler(METAL_INTERRUPT_ID_LC4, priv);
2040662e:	fa842783          	lw	a5,-88(s0)
20406632:	2707a783          	lw	a5,624(a5)
20406636:	fa442583          	lw	a1,-92(s0)
2040663a:	4551                	li	a0,20
2040663c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    }
}
2040663e:	0001                	nop
20406640:	40f6                	lw	ra,92(sp)
20406642:	42e6                	lw	t0,88(sp)
20406644:	4356                	lw	t1,84(sp)
20406646:	43c6                	lw	t2,80(sp)
20406648:	4436                	lw	s0,76(sp)
2040664a:	4526                	lw	a0,72(sp)
2040664c:	4596                	lw	a1,68(sp)
2040664e:	4606                	lw	a2,64(sp)
20406650:	56f2                	lw	a3,60(sp)
20406652:	5762                	lw	a4,56(sp)
20406654:	57d2                	lw	a5,52(sp)
20406656:	5842                	lw	a6,48(sp)
20406658:	58b2                	lw	a7,44(sp)
2040665a:	5e22                	lw	t3,40(sp)
2040665c:	5e92                	lw	t4,36(sp)
2040665e:	5f02                	lw	t5,32(sp)
20406660:	4ff2                	lw	t6,28(sp)
20406662:	6125                	addi	sp,sp,96
20406664:	30200073          	mret

20406668 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:275

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler (void) {
20406668:	711d                	addi	sp,sp,-96
2040666a:	ce86                	sw	ra,92(sp)
2040666c:	cc96                	sw	t0,88(sp)
2040666e:	ca9a                	sw	t1,84(sp)
20406670:	c89e                	sw	t2,80(sp)
20406672:	c6a2                	sw	s0,76(sp)
20406674:	c4aa                	sw	a0,72(sp)
20406676:	c2ae                	sw	a1,68(sp)
20406678:	c0b2                	sw	a2,64(sp)
2040667a:	de36                	sw	a3,60(sp)
2040667c:	dc3a                	sw	a4,56(sp)
2040667e:	da3e                	sw	a5,52(sp)
20406680:	d842                	sw	a6,48(sp)
20406682:	d646                	sw	a7,44(sp)
20406684:	d472                	sw	t3,40(sp)
20406686:	d276                	sw	t4,36(sp)
20406688:	d07a                	sw	t5,32(sp)
2040668a:	ce7e                	sw	t6,28(sp)
2040668c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040668e:	fa6ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406692:	872a                	mv	a4,a0
20406694:	800007b7          	lui	a5,0x80000
20406698:	070a                	slli	a4,a4,0x2
2040669a:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
2040669e:	97ba                	add	a5,a5,a4
204066a0:	439c                	lw	a5,0(a5)
204066a2:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:280

    if ( cpu ) {
204066a6:	fac42783          	lw	a5,-84(s0)
204066aa:	c78d                	beqz	a5,204066d4 <metal_lc5_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:282
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204066ac:	fac42503          	lw	a0,-84(s0)
204066b0:	f2aff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
204066b4:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC5].exint_data;
204066b8:	fa842783          	lw	a5,-88(s0)
204066bc:	2907a783          	lw	a5,656(a5)
204066c0:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
        intc->metal_int_table[METAL_INTERRUPT_ID_LC5].handler(METAL_INTERRUPT_ID_LC5, priv);
204066c4:	fa842783          	lw	a5,-88(s0)
204066c8:	2887a783          	lw	a5,648(a5)
204066cc:	fa442583          	lw	a1,-92(s0)
204066d0:	4555                	li	a0,21
204066d2:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:286
    }
}
204066d4:	0001                	nop
204066d6:	40f6                	lw	ra,92(sp)
204066d8:	42e6                	lw	t0,88(sp)
204066da:	4356                	lw	t1,84(sp)
204066dc:	43c6                	lw	t2,80(sp)
204066de:	4436                	lw	s0,76(sp)
204066e0:	4526                	lw	a0,72(sp)
204066e2:	4596                	lw	a1,68(sp)
204066e4:	4606                	lw	a2,64(sp)
204066e6:	56f2                	lw	a3,60(sp)
204066e8:	5762                	lw	a4,56(sp)
204066ea:	57d2                	lw	a5,52(sp)
204066ec:	5842                	lw	a6,48(sp)
204066ee:	58b2                	lw	a7,44(sp)
204066f0:	5e22                	lw	t3,40(sp)
204066f2:	5e92                	lw	t4,36(sp)
204066f4:	5f02                	lw	t5,32(sp)
204066f6:	4ff2                	lw	t6,28(sp)
204066f8:	6125                	addi	sp,sp,96
204066fa:	30200073          	mret

204066fe <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler (void) {
204066fe:	711d                	addi	sp,sp,-96
20406700:	ce86                	sw	ra,92(sp)
20406702:	cc96                	sw	t0,88(sp)
20406704:	ca9a                	sw	t1,84(sp)
20406706:	c89e                	sw	t2,80(sp)
20406708:	c6a2                	sw	s0,76(sp)
2040670a:	c4aa                	sw	a0,72(sp)
2040670c:	c2ae                	sw	a1,68(sp)
2040670e:	c0b2                	sw	a2,64(sp)
20406710:	de36                	sw	a3,60(sp)
20406712:	dc3a                	sw	a4,56(sp)
20406714:	da3e                	sw	a5,52(sp)
20406716:	d842                	sw	a6,48(sp)
20406718:	d646                	sw	a7,44(sp)
2040671a:	d472                	sw	t3,40(sp)
2040671c:	d276                	sw	t4,36(sp)
2040671e:	d07a                	sw	t5,32(sp)
20406720:	ce7e                	sw	t6,28(sp)
20406722:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:292
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406724:	f10ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406728:	872a                	mv	a4,a0
2040672a:	800007b7          	lui	a5,0x80000
2040672e:	070a                	slli	a4,a4,0x2
20406730:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406734:	97ba                	add	a5,a5,a4
20406736:	439c                	lw	a5,0(a5)
20406738:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:294

    if ( cpu ) {
2040673c:	fac42783          	lw	a5,-84(s0)
20406740:	c78d                	beqz	a5,2040676a <metal_lc6_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406742:	fac42503          	lw	a0,-84(s0)
20406746:	e94ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
2040674a:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC6].exint_data;
2040674e:	fa842783          	lw	a5,-88(s0)
20406752:	2a87a783          	lw	a5,680(a5)
20406756:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:298
        intc->metal_int_table[METAL_INTERRUPT_ID_LC6].handler(METAL_INTERRUPT_ID_LC6, priv);
2040675a:	fa842783          	lw	a5,-88(s0)
2040675e:	2a07a783          	lw	a5,672(a5)
20406762:	fa442583          	lw	a1,-92(s0)
20406766:	4559                	li	a0,22
20406768:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:300
    }
}
2040676a:	0001                	nop
2040676c:	40f6                	lw	ra,92(sp)
2040676e:	42e6                	lw	t0,88(sp)
20406770:	4356                	lw	t1,84(sp)
20406772:	43c6                	lw	t2,80(sp)
20406774:	4436                	lw	s0,76(sp)
20406776:	4526                	lw	a0,72(sp)
20406778:	4596                	lw	a1,68(sp)
2040677a:	4606                	lw	a2,64(sp)
2040677c:	56f2                	lw	a3,60(sp)
2040677e:	5762                	lw	a4,56(sp)
20406780:	57d2                	lw	a5,52(sp)
20406782:	5842                	lw	a6,48(sp)
20406784:	58b2                	lw	a7,44(sp)
20406786:	5e22                	lw	t3,40(sp)
20406788:	5e92                	lw	t4,36(sp)
2040678a:	5f02                	lw	t5,32(sp)
2040678c:	4ff2                	lw	t6,28(sp)
2040678e:	6125                	addi	sp,sp,96
20406790:	30200073          	mret

20406794 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler (void) {
20406794:	711d                	addi	sp,sp,-96
20406796:	ce86                	sw	ra,92(sp)
20406798:	cc96                	sw	t0,88(sp)
2040679a:	ca9a                	sw	t1,84(sp)
2040679c:	c89e                	sw	t2,80(sp)
2040679e:	c6a2                	sw	s0,76(sp)
204067a0:	c4aa                	sw	a0,72(sp)
204067a2:	c2ae                	sw	a1,68(sp)
204067a4:	c0b2                	sw	a2,64(sp)
204067a6:	de36                	sw	a3,60(sp)
204067a8:	dc3a                	sw	a4,56(sp)
204067aa:	da3e                	sw	a5,52(sp)
204067ac:	d842                	sw	a6,48(sp)
204067ae:	d646                	sw	a7,44(sp)
204067b0:	d472                	sw	t3,40(sp)
204067b2:	d276                	sw	t4,36(sp)
204067b4:	d07a                	sw	t5,32(sp)
204067b6:	ce7e                	sw	t6,28(sp)
204067b8:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:306
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204067ba:	e7aff0ef          	jal	ra,20405e34 <__metal_myhart_id>
204067be:	872a                	mv	a4,a0
204067c0:	800007b7          	lui	a5,0x80000
204067c4:	070a                	slli	a4,a4,0x2
204067c6:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
204067ca:	97ba                	add	a5,a5,a4
204067cc:	439c                	lw	a5,0(a5)
204067ce:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:308

    if ( cpu ) {
204067d2:	fac42783          	lw	a5,-84(s0)
204067d6:	c78d                	beqz	a5,20406800 <metal_lc7_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:310
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204067d8:	fac42503          	lw	a0,-84(s0)
204067dc:	dfeff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
204067e0:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC7].exint_data;
204067e4:	fa842783          	lw	a5,-88(s0)
204067e8:	2c07a783          	lw	a5,704(a5)
204067ec:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:312
        intc->metal_int_table[METAL_INTERRUPT_ID_LC7].handler(METAL_INTERRUPT_ID_LC7, priv);
204067f0:	fa842783          	lw	a5,-88(s0)
204067f4:	2b87a783          	lw	a5,696(a5)
204067f8:	fa442583          	lw	a1,-92(s0)
204067fc:	455d                	li	a0,23
204067fe:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
    }
}
20406800:	0001                	nop
20406802:	40f6                	lw	ra,92(sp)
20406804:	42e6                	lw	t0,88(sp)
20406806:	4356                	lw	t1,84(sp)
20406808:	43c6                	lw	t2,80(sp)
2040680a:	4436                	lw	s0,76(sp)
2040680c:	4526                	lw	a0,72(sp)
2040680e:	4596                	lw	a1,68(sp)
20406810:	4606                	lw	a2,64(sp)
20406812:	56f2                	lw	a3,60(sp)
20406814:	5762                	lw	a4,56(sp)
20406816:	57d2                	lw	a5,52(sp)
20406818:	5842                	lw	a6,48(sp)
2040681a:	58b2                	lw	a7,44(sp)
2040681c:	5e22                	lw	t3,40(sp)
2040681e:	5e92                	lw	t4,36(sp)
20406820:	5f02                	lw	t5,32(sp)
20406822:	4ff2                	lw	t6,28(sp)
20406824:	6125                	addi	sp,sp,96
20406826:	30200073          	mret

2040682a <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler (void) {
2040682a:	711d                	addi	sp,sp,-96
2040682c:	ce86                	sw	ra,92(sp)
2040682e:	cc96                	sw	t0,88(sp)
20406830:	ca9a                	sw	t1,84(sp)
20406832:	c89e                	sw	t2,80(sp)
20406834:	c6a2                	sw	s0,76(sp)
20406836:	c4aa                	sw	a0,72(sp)
20406838:	c2ae                	sw	a1,68(sp)
2040683a:	c0b2                	sw	a2,64(sp)
2040683c:	de36                	sw	a3,60(sp)
2040683e:	dc3a                	sw	a4,56(sp)
20406840:	da3e                	sw	a5,52(sp)
20406842:	d842                	sw	a6,48(sp)
20406844:	d646                	sw	a7,44(sp)
20406846:	d472                	sw	t3,40(sp)
20406848:	d276                	sw	t4,36(sp)
2040684a:	d07a                	sw	t5,32(sp)
2040684c:	ce7e                	sw	t6,28(sp)
2040684e:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406850:	de4ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406854:	872a                	mv	a4,a0
20406856:	800007b7          	lui	a5,0x80000
2040685a:	070a                	slli	a4,a4,0x2
2040685c:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406860:	97ba                	add	a5,a5,a4
20406862:	439c                	lw	a5,0(a5)
20406864:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322

    if ( cpu ) {
20406868:	fac42783          	lw	a5,-84(s0)
2040686c:	c78d                	beqz	a5,20406896 <metal_lc8_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040686e:	fac42503          	lw	a0,-84(s0)
20406872:	d68ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
20406876:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:325
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC8].exint_data;
2040687a:	fa842783          	lw	a5,-88(s0)
2040687e:	2d87a783          	lw	a5,728(a5)
20406882:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:326
        intc->metal_int_table[METAL_INTERRUPT_ID_LC8].handler(METAL_INTERRUPT_ID_LC8, priv);
20406886:	fa842783          	lw	a5,-88(s0)
2040688a:	2d07a783          	lw	a5,720(a5)
2040688e:	fa442583          	lw	a1,-92(s0)
20406892:	4561                	li	a0,24
20406894:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
    }
}
20406896:	0001                	nop
20406898:	40f6                	lw	ra,92(sp)
2040689a:	42e6                	lw	t0,88(sp)
2040689c:	4356                	lw	t1,84(sp)
2040689e:	43c6                	lw	t2,80(sp)
204068a0:	4436                	lw	s0,76(sp)
204068a2:	4526                	lw	a0,72(sp)
204068a4:	4596                	lw	a1,68(sp)
204068a6:	4606                	lw	a2,64(sp)
204068a8:	56f2                	lw	a3,60(sp)
204068aa:	5762                	lw	a4,56(sp)
204068ac:	57d2                	lw	a5,52(sp)
204068ae:	5842                	lw	a6,48(sp)
204068b0:	58b2                	lw	a7,44(sp)
204068b2:	5e22                	lw	t3,40(sp)
204068b4:	5e92                	lw	t4,36(sp)
204068b6:	5f02                	lw	t5,32(sp)
204068b8:	4ff2                	lw	t6,28(sp)
204068ba:	6125                	addi	sp,sp,96
204068bc:	30200073          	mret

204068c0 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler (void) {
204068c0:	711d                	addi	sp,sp,-96
204068c2:	ce86                	sw	ra,92(sp)
204068c4:	cc96                	sw	t0,88(sp)
204068c6:	ca9a                	sw	t1,84(sp)
204068c8:	c89e                	sw	t2,80(sp)
204068ca:	c6a2                	sw	s0,76(sp)
204068cc:	c4aa                	sw	a0,72(sp)
204068ce:	c2ae                	sw	a1,68(sp)
204068d0:	c0b2                	sw	a2,64(sp)
204068d2:	de36                	sw	a3,60(sp)
204068d4:	dc3a                	sw	a4,56(sp)
204068d6:	da3e                	sw	a5,52(sp)
204068d8:	d842                	sw	a6,48(sp)
204068da:	d646                	sw	a7,44(sp)
204068dc:	d472                	sw	t3,40(sp)
204068de:	d276                	sw	t4,36(sp)
204068e0:	d07a                	sw	t5,32(sp)
204068e2:	ce7e                	sw	t6,28(sp)
204068e4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204068e6:	d4eff0ef          	jal	ra,20405e34 <__metal_myhart_id>
204068ea:	872a                	mv	a4,a0
204068ec:	800007b7          	lui	a5,0x80000
204068f0:	070a                	slli	a4,a4,0x2
204068f2:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
204068f6:	97ba                	add	a5,a5,a4
204068f8:	439c                	lw	a5,0(a5)
204068fa:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336

    if ( cpu ) {
204068fe:	fac42783          	lw	a5,-84(s0)
20406902:	c78d                	beqz	a5,2040692c <metal_lc9_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406904:	fac42503          	lw	a0,-84(s0)
20406908:	cd2ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
2040690c:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:339
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC9].exint_data;
20406910:	fa842783          	lw	a5,-88(s0)
20406914:	2f07a783          	lw	a5,752(a5)
20406918:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        intc->metal_int_table[METAL_INTERRUPT_ID_LC9].handler(METAL_INTERRUPT_ID_LC9, priv);
2040691c:	fa842783          	lw	a5,-88(s0)
20406920:	2e87a783          	lw	a5,744(a5)
20406924:	fa442583          	lw	a1,-92(s0)
20406928:	4565                	li	a0,25
2040692a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
    }
}
2040692c:	0001                	nop
2040692e:	40f6                	lw	ra,92(sp)
20406930:	42e6                	lw	t0,88(sp)
20406932:	4356                	lw	t1,84(sp)
20406934:	43c6                	lw	t2,80(sp)
20406936:	4436                	lw	s0,76(sp)
20406938:	4526                	lw	a0,72(sp)
2040693a:	4596                	lw	a1,68(sp)
2040693c:	4606                	lw	a2,64(sp)
2040693e:	56f2                	lw	a3,60(sp)
20406940:	5762                	lw	a4,56(sp)
20406942:	57d2                	lw	a5,52(sp)
20406944:	5842                	lw	a6,48(sp)
20406946:	58b2                	lw	a7,44(sp)
20406948:	5e22                	lw	t3,40(sp)
2040694a:	5e92                	lw	t4,36(sp)
2040694c:	5f02                	lw	t5,32(sp)
2040694e:	4ff2                	lw	t6,28(sp)
20406950:	6125                	addi	sp,sp,96
20406952:	30200073          	mret

20406956 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:345

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc10_interrupt_vector_handler (void) {
20406956:	711d                	addi	sp,sp,-96
20406958:	ce86                	sw	ra,92(sp)
2040695a:	cc96                	sw	t0,88(sp)
2040695c:	ca9a                	sw	t1,84(sp)
2040695e:	c89e                	sw	t2,80(sp)
20406960:	c6a2                	sw	s0,76(sp)
20406962:	c4aa                	sw	a0,72(sp)
20406964:	c2ae                	sw	a1,68(sp)
20406966:	c0b2                	sw	a2,64(sp)
20406968:	de36                	sw	a3,60(sp)
2040696a:	dc3a                	sw	a4,56(sp)
2040696c:	da3e                	sw	a5,52(sp)
2040696e:	d842                	sw	a6,48(sp)
20406970:	d646                	sw	a7,44(sp)
20406972:	d472                	sw	t3,40(sp)
20406974:	d276                	sw	t4,36(sp)
20406976:	d07a                	sw	t5,32(sp)
20406978:	ce7e                	sw	t6,28(sp)
2040697a:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:348
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040697c:	cb8ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406980:	872a                	mv	a4,a0
20406982:	800007b7          	lui	a5,0x80000
20406986:	070a                	slli	a4,a4,0x2
20406988:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
2040698c:	97ba                	add	a5,a5,a4
2040698e:	439c                	lw	a5,0(a5)
20406990:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:350

    if ( cpu ) {
20406994:	fac42783          	lw	a5,-84(s0)
20406998:	c78d                	beqz	a5,204069c2 <metal_lc10_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:352
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040699a:	fac42503          	lw	a0,-84(s0)
2040699e:	c3cff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
204069a2:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:353
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC10].exint_data;
204069a6:	fa842783          	lw	a5,-88(s0)
204069aa:	3087a783          	lw	a5,776(a5)
204069ae:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:354
        intc->metal_int_table[METAL_INTERRUPT_ID_LC10].handler(METAL_INTERRUPT_ID_LC10, priv);
204069b2:	fa842783          	lw	a5,-88(s0)
204069b6:	3007a783          	lw	a5,768(a5)
204069ba:	fa442583          	lw	a1,-92(s0)
204069be:	4569                	li	a0,26
204069c0:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:356
    }
}
204069c2:	0001                	nop
204069c4:	40f6                	lw	ra,92(sp)
204069c6:	42e6                	lw	t0,88(sp)
204069c8:	4356                	lw	t1,84(sp)
204069ca:	43c6                	lw	t2,80(sp)
204069cc:	4436                	lw	s0,76(sp)
204069ce:	4526                	lw	a0,72(sp)
204069d0:	4596                	lw	a1,68(sp)
204069d2:	4606                	lw	a2,64(sp)
204069d4:	56f2                	lw	a3,60(sp)
204069d6:	5762                	lw	a4,56(sp)
204069d8:	57d2                	lw	a5,52(sp)
204069da:	5842                	lw	a6,48(sp)
204069dc:	58b2                	lw	a7,44(sp)
204069de:	5e22                	lw	t3,40(sp)
204069e0:	5e92                	lw	t4,36(sp)
204069e2:	5f02                	lw	t5,32(sp)
204069e4:	4ff2                	lw	t6,28(sp)
204069e6:	6125                	addi	sp,sp,96
204069e8:	30200073          	mret

204069ec <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:359

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc11_interrupt_vector_handler (void) {
204069ec:	711d                	addi	sp,sp,-96
204069ee:	ce86                	sw	ra,92(sp)
204069f0:	cc96                	sw	t0,88(sp)
204069f2:	ca9a                	sw	t1,84(sp)
204069f4:	c89e                	sw	t2,80(sp)
204069f6:	c6a2                	sw	s0,76(sp)
204069f8:	c4aa                	sw	a0,72(sp)
204069fa:	c2ae                	sw	a1,68(sp)
204069fc:	c0b2                	sw	a2,64(sp)
204069fe:	de36                	sw	a3,60(sp)
20406a00:	dc3a                	sw	a4,56(sp)
20406a02:	da3e                	sw	a5,52(sp)
20406a04:	d842                	sw	a6,48(sp)
20406a06:	d646                	sw	a7,44(sp)
20406a08:	d472                	sw	t3,40(sp)
20406a0a:	d276                	sw	t4,36(sp)
20406a0c:	d07a                	sw	t5,32(sp)
20406a0e:	ce7e                	sw	t6,28(sp)
20406a10:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:362
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406a12:	c22ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406a16:	872a                	mv	a4,a0
20406a18:	800007b7          	lui	a5,0x80000
20406a1c:	070a                	slli	a4,a4,0x2
20406a1e:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406a22:	97ba                	add	a5,a5,a4
20406a24:	439c                	lw	a5,0(a5)
20406a26:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:364

    if ( cpu ) {
20406a2a:	fac42783          	lw	a5,-84(s0)
20406a2e:	c78d                	beqz	a5,20406a58 <metal_lc11_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:366
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406a30:	fac42503          	lw	a0,-84(s0)
20406a34:	ba6ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
20406a38:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:367
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC11].exint_data;
20406a3c:	fa842783          	lw	a5,-88(s0)
20406a40:	3207a783          	lw	a5,800(a5)
20406a44:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        intc->metal_int_table[METAL_INTERRUPT_ID_LC11].handler(METAL_INTERRUPT_ID_LC11, priv);
20406a48:	fa842783          	lw	a5,-88(s0)
20406a4c:	3187a783          	lw	a5,792(a5)
20406a50:	fa442583          	lw	a1,-92(s0)
20406a54:	456d                	li	a0,27
20406a56:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    }
}
20406a58:	0001                	nop
20406a5a:	40f6                	lw	ra,92(sp)
20406a5c:	42e6                	lw	t0,88(sp)
20406a5e:	4356                	lw	t1,84(sp)
20406a60:	43c6                	lw	t2,80(sp)
20406a62:	4436                	lw	s0,76(sp)
20406a64:	4526                	lw	a0,72(sp)
20406a66:	4596                	lw	a1,68(sp)
20406a68:	4606                	lw	a2,64(sp)
20406a6a:	56f2                	lw	a3,60(sp)
20406a6c:	5762                	lw	a4,56(sp)
20406a6e:	57d2                	lw	a5,52(sp)
20406a70:	5842                	lw	a6,48(sp)
20406a72:	58b2                	lw	a7,44(sp)
20406a74:	5e22                	lw	t3,40(sp)
20406a76:	5e92                	lw	t4,36(sp)
20406a78:	5f02                	lw	t5,32(sp)
20406a7a:	4ff2                	lw	t6,28(sp)
20406a7c:	6125                	addi	sp,sp,96
20406a7e:	30200073          	mret

20406a82 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc12_interrupt_vector_handler (void) {
20406a82:	711d                	addi	sp,sp,-96
20406a84:	ce86                	sw	ra,92(sp)
20406a86:	cc96                	sw	t0,88(sp)
20406a88:	ca9a                	sw	t1,84(sp)
20406a8a:	c89e                	sw	t2,80(sp)
20406a8c:	c6a2                	sw	s0,76(sp)
20406a8e:	c4aa                	sw	a0,72(sp)
20406a90:	c2ae                	sw	a1,68(sp)
20406a92:	c0b2                	sw	a2,64(sp)
20406a94:	de36                	sw	a3,60(sp)
20406a96:	dc3a                	sw	a4,56(sp)
20406a98:	da3e                	sw	a5,52(sp)
20406a9a:	d842                	sw	a6,48(sp)
20406a9c:	d646                	sw	a7,44(sp)
20406a9e:	d472                	sw	t3,40(sp)
20406aa0:	d276                	sw	t4,36(sp)
20406aa2:	d07a                	sw	t5,32(sp)
20406aa4:	ce7e                	sw	t6,28(sp)
20406aa6:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:376
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406aa8:	b8cff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406aac:	872a                	mv	a4,a0
20406aae:	800007b7          	lui	a5,0x80000
20406ab2:	070a                	slli	a4,a4,0x2
20406ab4:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406ab8:	97ba                	add	a5,a5,a4
20406aba:	439c                	lw	a5,0(a5)
20406abc:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378

    if ( cpu ) {
20406ac0:	fac42783          	lw	a5,-84(s0)
20406ac4:	c78d                	beqz	a5,20406aee <metal_lc12_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406ac6:	fac42503          	lw	a0,-84(s0)
20406aca:	b10ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
20406ace:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC12].exint_data;
20406ad2:	fa842783          	lw	a5,-88(s0)
20406ad6:	3387a783          	lw	a5,824(a5)
20406ada:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:382
        intc->metal_int_table[METAL_INTERRUPT_ID_LC12].handler(METAL_INTERRUPT_ID_LC12, priv);
20406ade:	fa842783          	lw	a5,-88(s0)
20406ae2:	3307a783          	lw	a5,816(a5)
20406ae6:	fa442583          	lw	a1,-92(s0)
20406aea:	4571                	li	a0,28
20406aec:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }
}
20406aee:	0001                	nop
20406af0:	40f6                	lw	ra,92(sp)
20406af2:	42e6                	lw	t0,88(sp)
20406af4:	4356                	lw	t1,84(sp)
20406af6:	43c6                	lw	t2,80(sp)
20406af8:	4436                	lw	s0,76(sp)
20406afa:	4526                	lw	a0,72(sp)
20406afc:	4596                	lw	a1,68(sp)
20406afe:	4606                	lw	a2,64(sp)
20406b00:	56f2                	lw	a3,60(sp)
20406b02:	5762                	lw	a4,56(sp)
20406b04:	57d2                	lw	a5,52(sp)
20406b06:	5842                	lw	a6,48(sp)
20406b08:	58b2                	lw	a7,44(sp)
20406b0a:	5e22                	lw	t3,40(sp)
20406b0c:	5e92                	lw	t4,36(sp)
20406b0e:	5f02                	lw	t5,32(sp)
20406b10:	4ff2                	lw	t6,28(sp)
20406b12:	6125                	addi	sp,sp,96
20406b14:	30200073          	mret

20406b18 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc13_interrupt_vector_handler (void) {
20406b18:	711d                	addi	sp,sp,-96
20406b1a:	ce86                	sw	ra,92(sp)
20406b1c:	cc96                	sw	t0,88(sp)
20406b1e:	ca9a                	sw	t1,84(sp)
20406b20:	c89e                	sw	t2,80(sp)
20406b22:	c6a2                	sw	s0,76(sp)
20406b24:	c4aa                	sw	a0,72(sp)
20406b26:	c2ae                	sw	a1,68(sp)
20406b28:	c0b2                	sw	a2,64(sp)
20406b2a:	de36                	sw	a3,60(sp)
20406b2c:	dc3a                	sw	a4,56(sp)
20406b2e:	da3e                	sw	a5,52(sp)
20406b30:	d842                	sw	a6,48(sp)
20406b32:	d646                	sw	a7,44(sp)
20406b34:	d472                	sw	t3,40(sp)
20406b36:	d276                	sw	t4,36(sp)
20406b38:	d07a                	sw	t5,32(sp)
20406b3a:	ce7e                	sw	t6,28(sp)
20406b3c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:390
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406b3e:	af6ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406b42:	872a                	mv	a4,a0
20406b44:	800007b7          	lui	a5,0x80000
20406b48:	070a                	slli	a4,a4,0x2
20406b4a:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406b4e:	97ba                	add	a5,a5,a4
20406b50:	439c                	lw	a5,0(a5)
20406b52:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:392

    if ( cpu ) {
20406b56:	fac42783          	lw	a5,-84(s0)
20406b5a:	c78d                	beqz	a5,20406b84 <metal_lc13_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406b5c:	fac42503          	lw	a0,-84(s0)
20406b60:	a7aff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
20406b64:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:395
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC13].exint_data;
20406b68:	fa842783          	lw	a5,-88(s0)
20406b6c:	3507a783          	lw	a5,848(a5)
20406b70:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
        intc->metal_int_table[METAL_INTERRUPT_ID_LC13].handler(METAL_INTERRUPT_ID_LC13, priv);
20406b74:	fa842783          	lw	a5,-88(s0)
20406b78:	3487a783          	lw	a5,840(a5)
20406b7c:	fa442583          	lw	a1,-92(s0)
20406b80:	4575                	li	a0,29
20406b82:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
    }
}
20406b84:	0001                	nop
20406b86:	40f6                	lw	ra,92(sp)
20406b88:	42e6                	lw	t0,88(sp)
20406b8a:	4356                	lw	t1,84(sp)
20406b8c:	43c6                	lw	t2,80(sp)
20406b8e:	4436                	lw	s0,76(sp)
20406b90:	4526                	lw	a0,72(sp)
20406b92:	4596                	lw	a1,68(sp)
20406b94:	4606                	lw	a2,64(sp)
20406b96:	56f2                	lw	a3,60(sp)
20406b98:	5762                	lw	a4,56(sp)
20406b9a:	57d2                	lw	a5,52(sp)
20406b9c:	5842                	lw	a6,48(sp)
20406b9e:	58b2                	lw	a7,44(sp)
20406ba0:	5e22                	lw	t3,40(sp)
20406ba2:	5e92                	lw	t4,36(sp)
20406ba4:	5f02                	lw	t5,32(sp)
20406ba6:	4ff2                	lw	t6,28(sp)
20406ba8:	6125                	addi	sp,sp,96
20406baa:	30200073          	mret

20406bae <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc14_interrupt_vector_handler (void) {
20406bae:	711d                	addi	sp,sp,-96
20406bb0:	ce86                	sw	ra,92(sp)
20406bb2:	cc96                	sw	t0,88(sp)
20406bb4:	ca9a                	sw	t1,84(sp)
20406bb6:	c89e                	sw	t2,80(sp)
20406bb8:	c6a2                	sw	s0,76(sp)
20406bba:	c4aa                	sw	a0,72(sp)
20406bbc:	c2ae                	sw	a1,68(sp)
20406bbe:	c0b2                	sw	a2,64(sp)
20406bc0:	de36                	sw	a3,60(sp)
20406bc2:	dc3a                	sw	a4,56(sp)
20406bc4:	da3e                	sw	a5,52(sp)
20406bc6:	d842                	sw	a6,48(sp)
20406bc8:	d646                	sw	a7,44(sp)
20406bca:	d472                	sw	t3,40(sp)
20406bcc:	d276                	sw	t4,36(sp)
20406bce:	d07a                	sw	t5,32(sp)
20406bd0:	ce7e                	sw	t6,28(sp)
20406bd2:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:404
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406bd4:	a60ff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406bd8:	872a                	mv	a4,a0
20406bda:	800007b7          	lui	a5,0x80000
20406bde:	070a                	slli	a4,a4,0x2
20406be0:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406be4:	97ba                	add	a5,a5,a4
20406be6:	439c                	lw	a5,0(a5)
20406be8:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:406

    if ( cpu ) {
20406bec:	fac42783          	lw	a5,-84(s0)
20406bf0:	c78d                	beqz	a5,20406c1a <metal_lc14_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406bf2:	fac42503          	lw	a0,-84(s0)
20406bf6:	9e4ff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
20406bfa:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:409
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC14].exint_data;
20406bfe:	fa842783          	lw	a5,-88(s0)
20406c02:	3687a783          	lw	a5,872(a5)
20406c06:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
        intc->metal_int_table[METAL_INTERRUPT_ID_LC14].handler(METAL_INTERRUPT_ID_LC14, priv);
20406c0a:	fa842783          	lw	a5,-88(s0)
20406c0e:	3607a783          	lw	a5,864(a5)
20406c12:	fa442583          	lw	a1,-92(s0)
20406c16:	4579                	li	a0,30
20406c18:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
    }
}
20406c1a:	0001                	nop
20406c1c:	40f6                	lw	ra,92(sp)
20406c1e:	42e6                	lw	t0,88(sp)
20406c20:	4356                	lw	t1,84(sp)
20406c22:	43c6                	lw	t2,80(sp)
20406c24:	4436                	lw	s0,76(sp)
20406c26:	4526                	lw	a0,72(sp)
20406c28:	4596                	lw	a1,68(sp)
20406c2a:	4606                	lw	a2,64(sp)
20406c2c:	56f2                	lw	a3,60(sp)
20406c2e:	5762                	lw	a4,56(sp)
20406c30:	57d2                	lw	a5,52(sp)
20406c32:	5842                	lw	a6,48(sp)
20406c34:	58b2                	lw	a7,44(sp)
20406c36:	5e22                	lw	t3,40(sp)
20406c38:	5e92                	lw	t4,36(sp)
20406c3a:	5f02                	lw	t5,32(sp)
20406c3c:	4ff2                	lw	t6,28(sp)
20406c3e:	6125                	addi	sp,sp,96
20406c40:	30200073          	mret

20406c44 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:415

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc15_interrupt_vector_handler (void) {
20406c44:	711d                	addi	sp,sp,-96
20406c46:	ce86                	sw	ra,92(sp)
20406c48:	cc96                	sw	t0,88(sp)
20406c4a:	ca9a                	sw	t1,84(sp)
20406c4c:	c89e                	sw	t2,80(sp)
20406c4e:	c6a2                	sw	s0,76(sp)
20406c50:	c4aa                	sw	a0,72(sp)
20406c52:	c2ae                	sw	a1,68(sp)
20406c54:	c0b2                	sw	a2,64(sp)
20406c56:	de36                	sw	a3,60(sp)
20406c58:	dc3a                	sw	a4,56(sp)
20406c5a:	da3e                	sw	a5,52(sp)
20406c5c:	d842                	sw	a6,48(sp)
20406c5e:	d646                	sw	a7,44(sp)
20406c60:	d472                	sw	t3,40(sp)
20406c62:	d276                	sw	t4,36(sp)
20406c64:	d07a                	sw	t5,32(sp)
20406c66:	ce7e                	sw	t6,28(sp)
20406c68:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:418
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20406c6a:	9caff0ef          	jal	ra,20405e34 <__metal_myhart_id>
20406c6e:	872a                	mv	a4,a0
20406c70:	800007b7          	lui	a5,0x80000
20406c74:	070a                	slli	a4,a4,0x2
20406c76:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20406c7a:	97ba                	add	a5,a5,a4
20406c7c:	439c                	lw	a5,0(a5)
20406c7e:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:420

    if ( cpu ) {
20406c82:	fac42783          	lw	a5,-84(s0)
20406c86:	c78d                	beqz	a5,20406cb0 <metal_lc15_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:422
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20406c88:	fac42503          	lw	a0,-84(s0)
20406c8c:	94eff0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
20406c90:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:423
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC15].exint_data;
20406c94:	fa842783          	lw	a5,-88(s0)
20406c98:	3807a783          	lw	a5,896(a5)
20406c9c:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:424
        intc->metal_int_table[METAL_INTERRUPT_ID_LC15].handler(METAL_INTERRUPT_ID_LC15, priv);
20406ca0:	fa842783          	lw	a5,-88(s0)
20406ca4:	3787a783          	lw	a5,888(a5)
20406ca8:	fa442583          	lw	a1,-92(s0)
20406cac:	457d                	li	a0,31
20406cae:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:426
    }
}
20406cb0:	0001                	nop
20406cb2:	40f6                	lw	ra,92(sp)
20406cb4:	42e6                	lw	t0,88(sp)
20406cb6:	4356                	lw	t1,84(sp)
20406cb8:	43c6                	lw	t2,80(sp)
20406cba:	4436                	lw	s0,76(sp)
20406cbc:	4526                	lw	a0,72(sp)
20406cbe:	4596                	lw	a1,68(sp)
20406cc0:	4606                	lw	a2,64(sp)
20406cc2:	56f2                	lw	a3,60(sp)
20406cc4:	5762                	lw	a4,56(sp)
20406cc6:	57d2                	lw	a5,52(sp)
20406cc8:	5842                	lw	a6,48(sp)
20406cca:	58b2                	lw	a7,44(sp)
20406ccc:	5e22                	lw	t3,40(sp)
20406cce:	5e92                	lw	t4,36(sp)
20406cd0:	5f02                	lw	t5,32(sp)
20406cd2:	4ff2                	lw	t6,28(sp)
20406cd4:	6125                	addi	sp,sp,96
20406cd6:	30200073          	mret

20406cda <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429

metal_vector_mode __metal_controller_interrupt_vector_mode (void)
{
20406cda:	1101                	addi	sp,sp,-32
20406cdc:	ce22                	sw	s0,28(sp)
20406cde:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
    uintptr_t val;

    asm volatile ("csrr %0, mtvec" : "=r"(val));
20406ce0:	305027f3          	csrr	a5,mtvec
20406ce4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:433
    val &= METAL_MTVEC_MASK;
20406ce8:	fec42783          	lw	a5,-20(s0)
20406cec:	03f7f793          	andi	a5,a5,63
20406cf0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:435

    switch (val) {
20406cf4:	fec42703          	lw	a4,-20(s0)
20406cf8:	4789                	li	a5,2
20406cfa:	00f70d63          	beq	a4,a5,20406d14 <__metal_controller_interrupt_vector_mode+0x3a>
20406cfe:	fec42703          	lw	a4,-20(s0)
20406d02:	478d                	li	a5,3
20406d04:	00f70a63          	beq	a4,a5,20406d18 <__metal_controller_interrupt_vector_mode+0x3e>
20406d08:	fec42703          	lw	a4,-20(s0)
20406d0c:	4785                	li	a5,1
20406d0e:	00f70763          	beq	a4,a5,20406d1c <__metal_controller_interrupt_vector_mode+0x42>
20406d12:	a039                	j	20406d20 <__metal_controller_interrupt_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:437
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20406d14:	478d                	li	a5,3
20406d16:	a031                	j	20406d22 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20406d18:	4791                	li	a5,4
20406d1a:	a021                	j	20406d22 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:441
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20406d1c:	4785                	li	a5,1
20406d1e:	a011                	j	20406d22 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    }
    return METAL_DIRECT_MODE;
20406d20:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:444
}
20406d22:	853e                	mv	a0,a5
20406d24:	4472                	lw	s0,28(sp)
20406d26:	6105                	addi	sp,sp,32
20406d28:	8082                	ret

20406d2a <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447

void __metal_controller_interrupt_vector (metal_vector_mode mode, void *vec_table)
{  
20406d2a:	7179                	addi	sp,sp,-48
20406d2c:	d622                	sw	s0,44(sp)
20406d2e:	1800                	addi	s0,sp,48
20406d30:	fca42e23          	sw	a0,-36(s0)
20406d34:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
    uintptr_t trap_entry, val;

    __asm__ volatile ("csrr %0, mtvec" : "=r"(val));
20406d38:	305027f3          	csrr	a5,mtvec
20406d3c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:451
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20406d40:	fec42783          	lw	a5,-20(s0)
20406d44:	fc07f793          	andi	a5,a5,-64
20406d48:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:452
    trap_entry = (uintptr_t)vec_table;
20406d4c:	fd842783          	lw	a5,-40(s0)
20406d50:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

    switch (mode) {
20406d54:	fdc42703          	lw	a4,-36(s0)
20406d58:	4791                	li	a5,4
20406d5a:	06e7e063          	bltu	a5,a4,20406dba <__metal_controller_interrupt_vector+0x90>
20406d5e:	fdc42783          	lw	a5,-36(s0)
20406d62:	00279713          	slli	a4,a5,0x2
20406d66:	204097b7          	lui	a5,0x20409
20406d6a:	39078793          	addi	a5,a5,912 # 20409390 <__metal_driver_vtable_riscv_clint0+0x4c>
20406d6e:	97ba                	add	a5,a5,a4
20406d70:	439c                	lw	a5,0(a5)
20406d72:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20406d74:	fe842783          	lw	a5,-24(s0)
20406d78:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:458
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC));
20406d7c:	fec42783          	lw	a5,-20(s0)
20406d80:	0027e793          	ori	a5,a5,2
20406d84:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        break;
20406d88:	a80d                	j	20406dba <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20406d8a:	fe842783          	lw	a5,-24(s0)
20406d8e:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC_VECTORED));
20406d92:	fec42783          	lw	a5,-20(s0)
20406d96:	0037e793          	ori	a5,a5,3
20406d9a:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:463
        break;
20406d9e:	a831                	j	20406dba <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
    case METAL_VECTOR_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry | METAL_MTVEC_VECTORED));
20406da0:	fe842783          	lw	a5,-24(s0)
20406da4:	0017e793          	ori	a5,a5,1
20406da8:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466
        break;
20406dac:	a039                	j	20406dba <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:468
    case METAL_DIRECT_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20406dae:	fe842783          	lw	a5,-24(s0)
20406db2:	9bf1                	andi	a5,a5,-4
20406db4:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:469
        break;
20406db8:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:471
    }
}
20406dba:	0001                	nop
20406dbc:	5432                	lw	s0,44(sp)
20406dbe:	6145                	addi	sp,sp,48
20406dc0:	8082                	ret

20406dc2 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:474

int __metal_valid_interrupt_id (int id)
{
20406dc2:	1101                	addi	sp,sp,-32
20406dc4:	ce22                	sw	s0,28(sp)
20406dc6:	1000                	addi	s0,sp,32
20406dc8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
    switch (id) {
20406dcc:	fec42783          	lw	a5,-20(s0)
20406dd0:	17f5                	addi	a5,a5,-3
20406dd2:	4771                	li	a4,28
20406dd4:	00f76d63          	bltu	a4,a5,20406dee <__metal_valid_interrupt_id+0x2c>
20406dd8:	00279713          	slli	a4,a5,0x2
20406ddc:	204097b7          	lui	a5,0x20409
20406de0:	3a478793          	addi	a5,a5,932 # 204093a4 <__metal_driver_vtable_riscv_clint0+0x60>
20406de4:	97ba                	add	a5,a5,a4
20406de6:	439c                	lw	a5,0(a5)
20406de8:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        return 1;
20406dea:	4785                	li	a5,1
20406dec:	a019                	j	20406df2 <__metal_valid_interrupt_id+0x30>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:497
    default:
        break;
20406dee:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:500
    }

    return 0;
20406df0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
}
20406df2:	853e                	mv	a0,a5
20406df4:	4472                	lw	s0,28(sp)
20406df6:	6105                	addi	sp,sp,32
20406df8:	8082                	ret

20406dfa <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506

 
int __metal_local_interrupt_enable (struct metal_interrupt *controller,
				  metal_interrupt_id_e id, int enable)
{
20406dfa:	7179                	addi	sp,sp,-48
20406dfc:	d606                	sw	ra,44(sp)
20406dfe:	d422                	sw	s0,40(sp)
20406e00:	1800                	addi	s0,sp,48
20406e02:	fca42e23          	sw	a0,-36(s0)
20406e06:	fcb42c23          	sw	a1,-40(s0)
20406e0a:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
    int rc = 0;
20406e0e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:509
  
    if ( !controller) {
20406e12:	fdc42783          	lw	a5,-36(s0)
20406e16:	e399                	bnez	a5,20406e1c <__metal_local_interrupt_enable+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        return -1;
20406e18:	57fd                	li	a5,-1
20406e1a:	a849                	j	20406eac <__metal_local_interrupt_enable+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
    }

    switch (id) {
20406e1c:	fd842703          	lw	a4,-40(s0)
20406e20:	47fd                	li	a5,31
20406e22:	08e7e063          	bltu	a5,a4,20406ea2 <__metal_local_interrupt_enable+0xa8>
20406e26:	fd842783          	lw	a5,-40(s0)
20406e2a:	00279713          	slli	a4,a5,0x2
20406e2e:	204097b7          	lui	a5,0x20409
20406e32:	41878793          	addi	a5,a5,1048 # 20409418 <__metal_driver_vtable_riscv_clint0+0xd4>
20406e36:	97ba                	add	a5,a5,a4
20406e38:	439c                	lw	a5,0(a5)
20406e3a:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:515
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20406e3c:	fd442783          	lw	a5,-44(s0)
20406e40:	c781                	beqz	a5,20406e48 <__metal_local_interrupt_enable+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
            __metal_interrupt_global_enable();
20406e42:	80cff0ef          	jal	ra,20405e4e <__metal_interrupt_global_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20406e46:	a08d                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            __metal_interrupt_global_disable();
20406e48:	81eff0ef          	jal	ra,20405e66 <__metal_interrupt_global_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        break;
20406e4c:	a8b1                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20406e4e:	fd442783          	lw	a5,-44(s0)
20406e52:	c781                	beqz	a5,20406e5a <__metal_local_interrupt_enable+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:523
            __metal_interrupt_software_enable();
20406e54:	82aff0ef          	jal	ra,20405e7e <__metal_interrupt_software_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20406e58:	a881                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:525
            __metal_interrupt_software_disable();
20406e5a:	83cff0ef          	jal	ra,20405e96 <__metal_interrupt_software_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        break;
20406e5e:	a0a9                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:529
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20406e60:	fd442783          	lw	a5,-44(s0)
20406e64:	c781                	beqz	a5,20406e6c <__metal_local_interrupt_enable+0x72>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:530
	    __metal_interrupt_timer_enable();
20406e66:	848ff0ef          	jal	ra,20405eae <__metal_interrupt_timer_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	} else {
	    __metal_interrupt_timer_disable();
	}
	break;
20406e6a:	a83d                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:532
	    __metal_interrupt_timer_disable();
20406e6c:	85cff0ef          	jal	ra,20405ec8 <__metal_interrupt_timer_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	break;
20406e70:	a825                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:536
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20406e72:	fd442783          	lw	a5,-44(s0)
20406e76:	c781                	beqz	a5,20406e7e <__metal_local_interrupt_enable+0x84>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:537
            __metal_interrupt_external_enable();
20406e78:	86aff0ef          	jal	ra,20405ee2 <__metal_interrupt_external_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20406e7c:	a035                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:539
            __metal_interrupt_external_disable();
20406e7e:	880ff0ef          	jal	ra,20405efe <__metal_interrupt_external_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        break;
20406e82:	a01d                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20406e84:	fd442783          	lw	a5,-44(s0)
20406e88:	c799                	beqz	a5,20406e96 <__metal_local_interrupt_enable+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
            __metal_interrupt_local_enable(id);
20406e8a:	fd842783          	lw	a5,-40(s0)
20406e8e:	853e                	mv	a0,a5
20406e90:	88aff0ef          	jal	ra,20405f1a <__metal_interrupt_local_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20406e94:	a811                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:561
            __metal_interrupt_local_disable(id);
20406e96:	fd842783          	lw	a5,-40(s0)
20406e9a:	853e                	mv	a0,a5
20406e9c:	8aaff0ef          	jal	ra,20405f46 <__metal_interrupt_local_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        break;
20406ea0:	a021                	j	20406ea8 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:565
    default:
        rc = -1;
20406ea2:	57fd                	li	a5,-1
20406ea4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:567
    }
    return rc;
20406ea8:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:568
}
20406eac:	853e                	mv	a0,a5
20406eae:	50b2                	lw	ra,44(sp)
20406eb0:	5422                	lw	s0,40(sp)
20406eb2:	6145                	addi	sp,sp,48
20406eb4:	8082                	ret

20406eb6 <__metal_exception_register>:
__metal_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:572

int __metal_exception_register (struct metal_interrupt *controller,
                              int ecode, metal_exception_handler_t isr)
{
20406eb6:	7179                	addi	sp,sp,-48
20406eb8:	d622                	sw	s0,44(sp)
20406eba:	1800                	addi	s0,sp,48
20406ebc:	fca42e23          	sw	a0,-36(s0)
20406ec0:	fcb42c23          	sw	a1,-40(s0)
20406ec4:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:573
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406ec8:	fdc42783          	lw	a5,-36(s0)
20406ecc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20406ed0:	fd842703          	lw	a4,-40(s0)
20406ed4:	47ad                	li	a5,11
20406ed6:	02e7c263          	blt	a5,a4,20406efa <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575 (discriminator 1)
20406eda:	fd442783          	lw	a5,-44(s0)
20406ede:	cf91                	beqz	a5,20406efa <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:576
        intc->metal_exception_table[ecode] = isr;
20406ee0:	fec42703          	lw	a4,-20(s0)
20406ee4:	fd842783          	lw	a5,-40(s0)
20406ee8:	0e078793          	addi	a5,a5,224
20406eec:	078a                	slli	a5,a5,0x2
20406eee:	97ba                	add	a5,a5,a4
20406ef0:	fd442703          	lw	a4,-44(s0)
20406ef4:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:577
        return 0;
20406ef6:	4781                	li	a5,0
20406ef8:	a011                	j	20406efc <__metal_exception_register+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:579
    }
    return -1;
20406efa:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:580
}
20406efc:	853e                	mv	a0,a5
20406efe:	5432                	lw	s0,44(sp)
20406f00:	6145                	addi	sp,sp,48
20406f02:	8082                	ret

20406f04 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:583

void __metal_driver_riscv_cpu_controller_interrupt_init (struct metal_interrupt *controller)
{
20406f04:	7139                	addi	sp,sp,-64
20406f06:	de06                	sw	ra,60(sp)
20406f08:	dc22                	sw	s0,56(sp)
20406f0a:	0080                	addi	s0,sp,64
20406f0c:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:584
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20406f10:	fcc42783          	lw	a5,-52(s0)
20406f14:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:587
    uintptr_t val;

    if ( !intc->init_done ) {
20406f18:	fe442783          	lw	a5,-28(s0)
20406f1c:	43dc                	lw	a5,4(a5)
20406f1e:	10079e63          	bnez	a5,2040703a <__metal_driver_riscv_cpu_controller_interrupt_init+0x136>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:589
        /* Disable and clear all interrupt sources */
        __asm__ volatile ("csrc mie, %0" :: "r"(-1));
20406f22:	57fd                	li	a5,-1
20406f24:	3047b073          	csrc	mie,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:590
        __asm__ volatile ("csrc mip, %0" :: "r"(-1));
20406f28:	57fd                	li	a5,-1
20406f2a:	3447b073          	csrc	mip,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:594

        /* Read the misa CSR to determine if the delegation registers exist */
        uintptr_t misa;
        __asm__ volatile ("csrr %0, misa" : "=r" (misa));
20406f2e:	301027f3          	csrr	a5,misa
20406f32:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

        /* The delegation CSRs exist if user mode interrupts (N extension) or
         * supervisor mode (S extension) are supported */
        if((misa & METAL_ISA_N_EXTENSIONS) || (misa & METAL_ISA_S_EXTENSIONS)) {
20406f36:	fe042703          	lw	a4,-32(s0)
20406f3a:	6789                	lui	a5,0x2
20406f3c:	8ff9                	and	a5,a5,a4
20406f3e:	e799                	bnez	a5,20406f4c <__metal_driver_riscv_cpu_controller_interrupt_init+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598 (discriminator 1)
20406f40:	fe042703          	lw	a4,-32(s0)
20406f44:	000407b7          	lui	a5,0x40
20406f48:	8ff9                	and	a5,a5,a4
20406f4a:	c799                	beqz	a5,20406f58 <__metal_driver_riscv_cpu_controller_interrupt_init+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:600
            /* Disable interrupt and exception delegation */
            __asm__ volatile ("csrc mideleg, %0" :: "r"(-1));
20406f4c:	57fd                	li	a5,-1
20406f4e:	3037b073          	csrc	mideleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            __asm__ volatile ("csrc medeleg, %0" :: "r"(-1));
20406f52:	57fd                	li	a5,-1
20406f54:	3027b073          	csrc	medeleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:605
        }

        /* The satp CSR exists if supervisor mode (S extension) is supported */
        if(misa & METAL_ISA_S_EXTENSIONS) {
20406f58:	fe042703          	lw	a4,-32(s0)
20406f5c:	000407b7          	lui	a5,0x40
20406f60:	8ff9                	and	a5,a5,a4
20406f62:	c781                	beqz	a5,20406f6a <__metal_driver_riscv_cpu_controller_interrupt_init+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:607
            /* Clear the entire CSR to make sure that satp.MODE = 0 */
            __asm__ volatile ("csrc satp, %0" :: "r"(-1));
20406f64:	57fd                	li	a5,-1
20406f66:	1807b073          	csrc	satp,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611
        }

        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20406f6a:	fe042623          	sw	zero,-20(s0)
20406f6e:	a0b9                	j	20406fbc <__metal_driver_riscv_cpu_controller_interrupt_init+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20406f70:	fe442683          	lw	a3,-28(s0)
20406f74:	fec42703          	lw	a4,-20(s0)
20406f78:	87ba                	mv	a5,a4
20406f7a:	0786                	slli	a5,a5,0x1
20406f7c:	97ba                	add	a5,a5,a4
20406f7e:	078e                	slli	a5,a5,0x3
20406f80:	97b6                	add	a5,a5,a3
20406f82:	0807a823          	sw	zero,144(a5) # 40090 <__heap_size+0x3f890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:613 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20406f86:	fe442683          	lw	a3,-28(s0)
20406f8a:	fec42703          	lw	a4,-20(s0)
20406f8e:	87ba                	mv	a5,a4
20406f90:	0786                	slli	a5,a5,0x1
20406f92:	97ba                	add	a5,a5,a4
20406f94:	078e                	slli	a5,a5,0x3
20406f96:	97b6                	add	a5,a5,a3
20406f98:	0807aa23          	sw	zero,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:614 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20406f9c:	fe442683          	lw	a3,-28(s0)
20406fa0:	fec42703          	lw	a4,-20(s0)
20406fa4:	87ba                	mv	a5,a4
20406fa6:	0786                	slli	a5,a5,0x1
20406fa8:	97ba                	add	a5,a5,a4
20406faa:	078e                	slli	a5,a5,0x3
20406fac:	97b6                	add	a5,a5,a3
20406fae:	0807ac23          	sw	zero,152(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20406fb2:	fec42783          	lw	a5,-20(s0)
20406fb6:	0785                	addi	a5,a5,1
20406fb8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 1)
20406fbc:	fec42703          	lw	a4,-20(s0)
20406fc0:	47fd                	li	a5,31
20406fc2:	fae7d7e3          	bge	a5,a4,20406f70 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
	}
	for (int i = 0; i < METAL_MAX_ME; i++) {
20406fc6:	fe042423          	sw	zero,-24(s0)
20406fca:	a01d                	j	20406ff0 <__metal_driver_riscv_cpu_controller_interrupt_init+0xec>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:617 (discriminator 3)
	    intc->metal_exception_table[i] = __metal_default_exception_handler;
20406fcc:	fe442703          	lw	a4,-28(s0)
20406fd0:	fe842783          	lw	a5,-24(s0)
20406fd4:	0e078793          	addi	a5,a5,224
20406fd8:	078a                	slli	a5,a5,0x2
20406fda:	97ba                	add	a5,a5,a4
20406fdc:	20406737          	lui	a4,0x20406
20406fe0:	f7270713          	addi	a4,a4,-142 # 20405f72 <__metal_default_exception_handler>
20406fe4:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 3)
	for (int i = 0; i < METAL_MAX_ME; i++) {
20406fe6:	fe842783          	lw	a5,-24(s0)
20406fea:	0785                	addi	a5,a5,1
20406fec:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 1)
20406ff0:	fe842703          	lw	a4,-24(s0)
20406ff4:	47ad                	li	a5,11
20406ff6:	fce7dbe3          	bge	a5,a4,20406fcc <__metal_driver_riscv_cpu_controller_interrupt_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:619
	}
        __metal_controller_interrupt_vector(METAL_DIRECT_MODE, (void *)(uintptr_t)&__metal_exception_handler);
20406ffa:	204067b7          	lui	a5,0x20406
20406ffe:	20078593          	addi	a1,a5,512 # 20406200 <__metal_exception_handler>
20407002:	4501                	li	a0,0
20407004:	d27ff0ef          	jal	ra,20406d2a <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620
	__asm__ volatile ("csrr %0, misa" : "=r"(val));
20407008:	301027f3          	csrr	a5,misa
2040700c:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
	if (val & (METAL_ISA_D_EXTENSIONS | METAL_ISA_F_EXTENSIONS | METAL_ISA_Q_EXTENSIONS)) {
20407010:	fdc42703          	lw	a4,-36(s0)
20407014:	67c1                	lui	a5,0x10
20407016:	02878793          	addi	a5,a5,40 # 10028 <__heap_size+0xf828>
2040701a:	8ff9                	and	a5,a5,a4
2040701c:	cb99                	beqz	a5,20407032 <__metal_driver_riscv_cpu_controller_interrupt_init+0x12e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:623
	    /* Floating point architecture, so turn on FP register saving*/
	    __asm__ volatile ("csrr %0, mstatus" : "=r"(val));
2040701e:	300027f3          	csrr	a5,mstatus
20407022:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:624
	    __asm__ volatile ("csrw mstatus, %0" :: "r"(val | METAL_MSTATUS_FS_INIT));
20407026:	fdc42703          	lw	a4,-36(s0)
2040702a:	6789                	lui	a5,0x2
2040702c:	8fd9                	or	a5,a5,a4
2040702e:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:626
	}
	intc->init_done = 1;
20407032:	fe442783          	lw	a5,-28(s0)
20407036:	4705                	li	a4,1
20407038:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628
    }
}
2040703a:	0001                	nop
2040703c:	50f2                	lw	ra,60(sp)
2040703e:	5462                	lw	s0,56(sp)
20407040:	6121                	addi	sp,sp,64
20407042:	8082                	ret

20407044 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:633

int __metal_driver_riscv_cpu_controller_interrupt_register(struct metal_interrupt *controller,
							 int id, metal_interrupt_handler_t isr,
							 void *priv)
{
20407044:	7179                	addi	sp,sp,-48
20407046:	d606                	sw	ra,44(sp)
20407048:	d422                	sw	s0,40(sp)
2040704a:	1800                	addi	s0,sp,48
2040704c:	fca42e23          	sw	a0,-36(s0)
20407050:	fcb42c23          	sw	a1,-40(s0)
20407054:	fcc42a23          	sw	a2,-44(s0)
20407058:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634
    int rc = 0;
2040705c:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:635
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20407060:	fdc42783          	lw	a5,-36(s0)
20407064:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:637
 
    if ( !__metal_valid_interrupt_id(id) ) {
20407068:	fd842503          	lw	a0,-40(s0)
2040706c:	3b99                	jal	20406dc2 <__metal_valid_interrupt_id>
2040706e:	87aa                	mv	a5,a0
20407070:	e399                	bnez	a5,20407076 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:638
        return -11;
20407072:	57d5                	li	a5,-11
20407074:	aa11                	j	20407188 <__metal_driver_riscv_cpu_controller_interrupt_register+0x144>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:641
    }

    if (isr) {
20407076:	fd442783          	lw	a5,-44(s0)
2040707a:	cf85                	beqz	a5,204070b2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642
        intc->metal_int_table[id].handler = isr;
2040707c:	fe842683          	lw	a3,-24(s0)
20407080:	fd842703          	lw	a4,-40(s0)
20407084:	87ba                	mv	a5,a4
20407086:	0786                	slli	a5,a5,0x1
20407088:	97ba                	add	a5,a5,a4
2040708a:	078e                	slli	a5,a5,0x3
2040708c:	97b6                	add	a5,a5,a3
2040708e:	fd442703          	lw	a4,-44(s0)
20407092:	08e7a823          	sw	a4,144(a5) # 2090 <__heap_size+0x1890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:643
        intc->metal_int_table[id].exint_data = priv;
20407096:	fe842683          	lw	a3,-24(s0)
2040709a:	fd842703          	lw	a4,-40(s0)
2040709e:	87ba                	mv	a5,a4
204070a0:	0786                	slli	a5,a5,0x1
204070a2:	97ba                	add	a5,a5,a4
204070a4:	078e                	slli	a5,a5,0x3
204070a6:	97b6                	add	a5,a5,a3
204070a8:	fd042703          	lw	a4,-48(s0)
204070ac:	08e7ac23          	sw	a4,152(a5)
204070b0:	a8d1                	j	20407184 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
    } else {
	switch (id) {
204070b2:	fd842783          	lw	a5,-40(s0)
204070b6:	17f5                	addi	a5,a5,-3
204070b8:	4771                	li	a4,28
204070ba:	0cf76263          	bltu	a4,a5,2040717e <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
204070be:	00279713          	slli	a4,a5,0x2
204070c2:	204097b7          	lui	a5,0x20409
204070c6:	49878793          	addi	a5,a5,1176 # 20409498 <__metal_driver_vtable_riscv_clint0+0x154>
204070ca:	97ba                	add	a5,a5,a4
204070cc:	439c                	lw	a5,0(a5)
204070ce:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:647
	case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
204070d0:	fe842683          	lw	a3,-24(s0)
204070d4:	fd842703          	lw	a4,-40(s0)
204070d8:	87ba                	mv	a5,a4
204070da:	0786                	slli	a5,a5,0x1
204070dc:	97ba                	add	a5,a5,a4
204070de:	078e                	slli	a5,a5,0x3
204070e0:	97b6                	add	a5,a5,a3
204070e2:	20406737          	lui	a4,0x20406
204070e6:	06270713          	addi	a4,a4,98 # 20406062 <__metal_default_sw_handler>
204070ea:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
            intc->metal_int_table[id].sub_int = priv;
204070ee:	fe842683          	lw	a3,-24(s0)
204070f2:	fd842703          	lw	a4,-40(s0)
204070f6:	87ba                	mv	a5,a4
204070f8:	0786                	slli	a5,a5,0x1
204070fa:	97ba                	add	a5,a5,a4
204070fc:	078e                	slli	a5,a5,0x3
204070fe:	97b6                	add	a5,a5,a3
20407100:	fd042703          	lw	a4,-48(s0)
20407104:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
	  break;
20407108:	a8b5                	j	20407184 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:651
	case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
2040710a:	fe842683          	lw	a3,-24(s0)
2040710e:	fd842703          	lw	a4,-40(s0)
20407112:	87ba                	mv	a5,a4
20407114:	0786                	slli	a5,a5,0x1
20407116:	97ba                	add	a5,a5,a4
20407118:	078e                	slli	a5,a5,0x3
2040711a:	97b6                	add	a5,a5,a3
2040711c:	20406737          	lui	a4,0x20406
20407120:	15c70713          	addi	a4,a4,348 # 2040615c <__metal_default_timer_handler>
20407124:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652
            intc->metal_int_table[id].sub_int = priv;
20407128:	fe842683          	lw	a3,-24(s0)
2040712c:	fd842703          	lw	a4,-40(s0)
20407130:	87ba                	mv	a5,a4
20407132:	0786                	slli	a5,a5,0x1
20407134:	97ba                	add	a5,a5,a4
20407136:	078e                	slli	a5,a5,0x3
20407138:	97b6                	add	a5,a5,a3
2040713a:	fd042703          	lw	a4,-48(s0)
2040713e:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
	  break;
20407142:	a089                	j	20407184 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
	case METAL_INTERRUPT_ID_LC11:
	case METAL_INTERRUPT_ID_LC12:
	case METAL_INTERRUPT_ID_LC13:
	case METAL_INTERRUPT_ID_LC14:
	case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler = __metal_default_interrupt_handler;
20407144:	fe842683          	lw	a3,-24(s0)
20407148:	fd842703          	lw	a4,-40(s0)
2040714c:	87ba                	mv	a5,a4
2040714e:	0786                	slli	a5,a5,0x1
20407150:	97ba                	add	a5,a5,a4
20407152:	078e                	slli	a5,a5,0x3
20407154:	97b6                	add	a5,a5,a3
20407156:	20406737          	lui	a4,0x20406
2040715a:	f8a70713          	addi	a4,a4,-118 # 20405f8a <__metal_default_interrupt_handler>
2040715e:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:672
            intc->metal_int_table[id].sub_int = priv;
20407162:	fe842683          	lw	a3,-24(s0)
20407166:	fd842703          	lw	a4,-40(s0)
2040716a:	87ba                	mv	a5,a4
2040716c:	0786                	slli	a5,a5,0x1
2040716e:	97ba                	add	a5,a5,a4
20407170:	078e                	slli	a5,a5,0x3
20407172:	97b6                	add	a5,a5,a3
20407174:	fd042703          	lw	a4,-48(s0)
20407178:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:673
	  break;
2040717c:	a021                	j	20407184 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
	default:
	  rc = -12;
2040717e:	57d1                	li	a5,-12
20407180:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
	}
    }
    return rc;
20407184:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
}
20407188:	853e                	mv	a0,a5
2040718a:	50b2                	lw	ra,44(sp)
2040718c:	5422                	lw	s0,40(sp)
2040718e:	6145                	addi	sp,sp,48
20407190:	8082                	ret

20407192 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:683

int __metal_driver_riscv_cpu_controller_interrupt_enable (struct metal_interrupt *controller,
                                                        int id)
{
20407192:	1101                	addi	sp,sp,-32
20407194:	ce06                	sw	ra,28(sp)
20407196:	cc22                	sw	s0,24(sp)
20407198:	1000                	addi	s0,sp,32
2040719a:	fea42623          	sw	a0,-20(s0)
2040719e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
204071a2:	fe842783          	lw	a5,-24(s0)
204071a6:	4605                	li	a2,1
204071a8:	85be                	mv	a1,a5
204071aa:	fec42503          	lw	a0,-20(s0)
204071ae:	c4dff0ef          	jal	ra,20406dfa <__metal_local_interrupt_enable>
204071b2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
204071b4:	853e                	mv	a0,a5
204071b6:	40f2                	lw	ra,28(sp)
204071b8:	4462                	lw	s0,24(sp)
204071ba:	6105                	addi	sp,sp,32
204071bc:	8082                	ret

204071be <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:689

int __metal_driver_riscv_cpu_controller_interrupt_disable (struct metal_interrupt *controller,
                                                         int id)
{   
204071be:	1101                	addi	sp,sp,-32
204071c0:	ce06                	sw	ra,28(sp)
204071c2:	cc22                	sw	s0,24(sp)
204071c4:	1000                	addi	s0,sp,32
204071c6:	fea42623          	sw	a0,-20(s0)
204071ca:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
204071ce:	fe842783          	lw	a5,-24(s0)
204071d2:	4601                	li	a2,0
204071d4:	85be                	mv	a1,a5
204071d6:	fec42503          	lw	a0,-20(s0)
204071da:	c21ff0ef          	jal	ra,20406dfa <__metal_local_interrupt_enable>
204071de:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:691
}
204071e0:	853e                	mv	a0,a5
204071e2:	40f2                	lw	ra,28(sp)
204071e4:	4462                	lw	s0,24(sp)
204071e6:	6105                	addi	sp,sp,32
204071e8:	8082                	ret

204071ea <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:722
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode (struct metal_interrupt *controller)
{   
204071ea:	1101                	addi	sp,sp,-32
204071ec:	ce06                	sw	ra,28(sp)
204071ee:	cc22                	sw	s0,24(sp)
204071f0:	1000                	addi	s0,sp,32
204071f2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723
    return __metal_controller_interrupt_vector_mode();
204071f6:	ae5ff0ef          	jal	ra,20406cda <__metal_controller_interrupt_vector_mode>
204071fa:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
}
204071fc:	853e                	mv	a0,a5
204071fe:	40f2                	lw	ra,28(sp)
20407200:	4462                	lw	s0,24(sp)
20407202:	6105                	addi	sp,sp,32
20407204:	8082                	ret

20407206 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728

int __metal_driver_riscv_cpu_controller_set_vector_mode (struct metal_interrupt *controller,
                                                         metal_vector_mode mode)
{   
20407206:	7179                	addi	sp,sp,-48
20407208:	d606                	sw	ra,44(sp)
2040720a:	d422                	sw	s0,40(sp)
2040720c:	1800                	addi	s0,sp,48
2040720e:	fca42e23          	sw	a0,-36(s0)
20407212:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:729
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20407216:	fdc42783          	lw	a5,-36(s0)
2040721a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731

    if (mode == METAL_DIRECT_MODE) {
2040721e:	fd842783          	lw	a5,-40(s0)
20407222:	eb99                	bnez	a5,20407238 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        __metal_controller_interrupt_vector(mode, (void *)(uintptr_t)&__metal_exception_handler);
20407224:	204067b7          	lui	a5,0x20406
20407228:	20078593          	addi	a1,a5,512 # 20406200 <__metal_exception_handler>
2040722c:	fd842503          	lw	a0,-40(s0)
20407230:	afbff0ef          	jal	ra,20406d2a <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            return 0;
20407234:	4781                	li	a5,0
20407236:	a00d                	j	20407258 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:735
    }
    if (mode == METAL_VECTOR_MODE) {
20407238:	fd842703          	lw	a4,-40(s0)
2040723c:	4785                	li	a5,1
2040723e:	00f71c63          	bne	a4,a5,20407256 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:736
        __metal_controller_interrupt_vector(mode, (void *)__metal_vector_table);
20407242:	204097b7          	lui	a5,0x20409
20407246:	b8078593          	addi	a1,a5,-1152 # 20408b80 <__metal_vector_table>
2040724a:	fd842503          	lw	a0,-40(s0)
2040724e:	addff0ef          	jal	ra,20406d2a <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
        return 0;
20407252:	4781                	li	a5,0
20407254:	a011                	j	20407258 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:739
    }
    return -1;
20407256:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740
}
20407258:	853e                	mv	a0,a5
2040725a:	50b2                	lw	ra,44(sp)
2040725c:	5422                	lw	s0,40(sp)
2040725e:	6145                	addi	sp,sp,48
20407260:	8082                	ret

20407262 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:744

int __metal_driver_riscv_cpu_controller_command_request (struct metal_interrupt *controller,
						       int cmd, void *data)
{
20407262:	1101                	addi	sp,sp,-32
20407264:	ce22                	sw	s0,28(sp)
20407266:	1000                	addi	s0,sp,32
20407268:	fea42623          	sw	a0,-20(s0)
2040726c:	feb42423          	sw	a1,-24(s0)
20407270:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:746
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic */
    return 0;
20407274:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747
}
20407276:	853e                	mv	a0,a5
20407278:	4472                	lw	s0,28(sp)
2040727a:	6105                	addi	sp,sp,32
2040727c:	8082                	ret

2040727e <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:752

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu)
{
2040727e:	7139                	addi	sp,sp,-64
20407280:	de22                	sw	s0,60(sp)
20407282:	0080                	addi	s0,sp,64
20407284:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:753
    unsigned long long val = 0;
20407288:	4301                	li	t1,0
2040728a:	4381                	li	t2,0
2040728c:	fe642423          	sw	t1,-24(s0)
20407290:	fe742623          	sw	t2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi));
20407294:	b8002573          	csrr	a0,mcycleh
20407298:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:759
    __asm__ volatile ("csrr %0, mcycle" : "=r"(lo));
2040729c:	b0002573          	csrr	a0,mcycle
204072a0:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:760
    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi1));
204072a4:	b8002573          	csrr	a0,mcycleh
204072a8:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:761
    if (hi == hi1) {
204072ac:	fe442883          	lw	a7,-28(s0)
204072b0:	fdc42503          	lw	a0,-36(s0)
204072b4:	02a89563          	bne	a7,a0,204072de <__metal_driver_cpu_mcycle_get+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
        val = ((unsigned long long)hi << 32) | lo;
204072b8:	fe442503          	lw	a0,-28(s0)
204072bc:	85aa                	mv	a1,a0
204072be:	4601                	li	a2,0
204072c0:	00059813          	slli	a6,a1,0x0
204072c4:	4781                	li	a5,0
204072c6:	fe042603          	lw	a2,-32(s0)
204072ca:	86b2                	mv	a3,a2
204072cc:	4701                	li	a4,0
204072ce:	00d7e633          	or	a2,a5,a3
204072d2:	fec42423          	sw	a2,-24(s0)
204072d6:	00e867b3          	or	a5,a6,a4
204072da:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:768
    }
#else
    __asm__ volatile ("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
204072de:	fe842783          	lw	a5,-24(s0)
204072e2:	fec42803          	lw	a6,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:769
}
204072e6:	853e                	mv	a0,a5
204072e8:	85c2                	mv	a1,a6
204072ea:	5472                	lw	s0,60(sp)
204072ec:	6121                	addi	sp,sp,64
204072ee:	8082                	ret

204072f0 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu)
{
204072f0:	7179                	addi	sp,sp,-48
204072f2:	d606                	sw	ra,44(sp)
204072f4:	d422                	sw	s0,40(sp)
204072f6:	d24a                	sw	s2,36(sp)
204072f8:	d04e                	sw	s3,32(sp)
204072fa:	1800                	addi	s0,sp,48
204072fc:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:774
  int timebase;
    if (!cpu) {
20407300:	fdc42783          	lw	a5,-36(s0)
20407304:	e781                	bnez	a5,2040730c <__metal_driver_cpu_timebase_get+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775
        return 0;
20407306:	4901                	li	s2,0
20407308:	4981                	li	s3,0
2040730a:	a821                	j	20407322 <__metal_driver_cpu_timebase_get+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:778
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
2040730c:	fdc42503          	lw	a0,-36(s0)
20407310:	aa1fe0ef          	jal	ra,20405db0 <__metal_driver_cpu_timebase>
20407314:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:779
    return timebase;
20407318:	fec42783          	lw	a5,-20(s0)
2040731c:	893e                	mv	s2,a5
2040731e:	87fd                	srai	a5,a5,0x1f
20407320:	89be                	mv	s3,a5
20407322:	87ca                	mv	a5,s2
20407324:	884e                	mv	a6,s3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:780
}
20407326:	853e                	mv	a0,a5
20407328:	85c2                	mv	a1,a6
2040732a:	50b2                	lw	ra,44(sp)
2040732c:	5422                	lw	s0,40(sp)
2040732e:	5912                	lw	s2,36(sp)
20407330:	5982                	lw	s3,32(sp)
20407332:	6145                	addi	sp,sp,48
20407334:	8082                	ret

20407336 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:783

unsigned long long  __metal_driver_cpu_mtime_get (struct metal_cpu *cpu)
{
20407336:	7179                	addi	sp,sp,-48
20407338:	d606                	sw	ra,44(sp)
2040733a:	d422                	sw	s0,40(sp)
2040733c:	1800                	addi	s0,sp,48
2040733e:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:784
    unsigned long long time = 0;
20407342:	4781                	li	a5,0
20407344:	4801                	li	a6,0
20407346:	fef42023          	sw	a5,-32(s0)
2040734a:	ff042223          	sw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:787
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
2040734e:	fdc42503          	lw	a0,-36(s0)
20407352:	a89fe0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
20407356:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:789

    if (intc) {
2040735a:	fec42783          	lw	a5,-20(s0)
2040735e:	c78d                	beqz	a5,20407388 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:790
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20407360:	fec42783          	lw	a5,-20(s0)
20407364:	13c7a783          	lw	a5,316(a5)
20407368:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:791
        if (tmr_intc) {
2040736c:	fe842783          	lw	a5,-24(s0)
20407370:	cf81                	beqz	a5,20407388 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:792
            tmr_intc->vtable->command_request(tmr_intc,
20407372:	fe842783          	lw	a5,-24(s0)
20407376:	439c                	lw	a5,0(a5)
20407378:	43f8                	lw	a4,68(a5)
2040737a:	fe040793          	addi	a5,s0,-32
2040737e:	863e                	mv	a2,a5
20407380:	4585                	li	a1,1
20407382:	fe842503          	lw	a0,-24(s0)
20407386:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:796
                                              METAL_TIMER_MTIME_GET, &time);
        }
    }
    return time;
20407388:	fe042783          	lw	a5,-32(s0)
2040738c:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:797
}
20407390:	853e                	mv	a0,a5
20407392:	85c2                	mv	a1,a6
20407394:	50b2                	lw	ra,44(sp)
20407396:	5422                	lw	s0,40(sp)
20407398:	6145                	addi	sp,sp,48
2040739a:	8082                	ret

2040739c <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:800

int __metal_driver_cpu_mtimecmp_set (struct metal_cpu *cpu, unsigned long long time)
{
2040739c:	7179                	addi	sp,sp,-48
2040739e:	d606                	sw	ra,44(sp)
204073a0:	d422                	sw	s0,40(sp)
204073a2:	d226                	sw	s1,36(sp)
204073a4:	1800                	addi	s0,sp,48
204073a6:	fca42e23          	sw	a0,-36(s0)
204073aa:	fcb42823          	sw	a1,-48(s0)
204073ae:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    int rc = -1;
204073b2:	57fd                	li	a5,-1
204073b4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
204073b8:	fdc42503          	lw	a0,-36(s0)
204073bc:	a1ffe0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
204073c0:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:806

    if (intc) {
204073c4:	fe842783          	lw	a5,-24(s0)
204073c8:	cf8d                	beqz	a5,20407402 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
204073ca:	fe842783          	lw	a5,-24(s0)
204073ce:	13c7a783          	lw	a5,316(a5)
204073d2:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
        if (tmr_intc) {
204073d6:	fe442783          	lw	a5,-28(s0)
204073da:	c785                	beqz	a5,20407402 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:809
            rc = tmr_intc->vtable->mtimecmp_set(tmr_intc,
204073dc:	fe442783          	lw	a5,-28(s0)
204073e0:	439c                	lw	a5,0(a5)
204073e2:	47a4                	lw	s1,72(a5)
204073e4:	fdc42503          	lw	a0,-36(s0)
204073e8:	9a5fe0ef          	jal	ra,20405d8c <__metal_driver_cpu_hartid>
204073ec:	87aa                	mv	a5,a0
204073ee:	fd042603          	lw	a2,-48(s0)
204073f2:	fd442683          	lw	a3,-44(s0)
204073f6:	85be                	mv	a1,a5
204073f8:	fe442503          	lw	a0,-28(s0)
204073fc:	9482                	jalr	s1
204073fe:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:814
                                                __metal_driver_cpu_hartid(cpu),
                                                time);
        }
    }
    return rc;
20407402:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:815
}
20407406:	853e                	mv	a0,a5
20407408:	50b2                	lw	ra,44(sp)
2040740a:	5422                	lw	s0,40(sp)
2040740c:	5492                	lw	s1,36(sp)
2040740e:	6145                	addi	sp,sp,48
20407410:	8082                	ret

20407412 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:819

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu)
{
20407412:	1101                	addi	sp,sp,-32
20407414:	ce22                	sw	s0,28(sp)
20407416:	1000                	addi	s0,sp,32
20407418:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2040741c:	800007b7          	lui	a5,0x80000
20407420:	7e478793          	addi	a5,a5,2020 # 800007e4 <metal_segment_heap_target_end+0xfffff310>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20407424:	853e                	mv	a0,a5
20407426:	4472                	lw	s0,28(sp)
20407428:	6105                	addi	sp,sp,32
2040742a:	8082                	ret

2040742c <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:833

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu)
{
2040742c:	1101                	addi	sp,sp,-32
2040742e:	ce22                	sw	s0,28(sp)
20407430:	1000                	addi	s0,sp,32
20407432:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834
    return METAL_INTERRUPT_ID_TMR;
20407436:	479d                	li	a5,7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
}
20407438:	853e                	mv	a0,a5
2040743a:	4472                	lw	s0,28(sp)
2040743c:	6105                	addi	sp,sp,32
2040743e:	8082                	ret

20407440 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:839

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu)
{
20407440:	1101                	addi	sp,sp,-32
20407442:	ce22                	sw	s0,28(sp)
20407444:	1000                	addi	s0,sp,32
20407446:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:841
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2040744a:	800007b7          	lui	a5,0x80000
2040744e:	7e478793          	addi	a5,a5,2020 # 800007e4 <metal_segment_heap_target_end+0xfffff310>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:850
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20407452:	853e                	mv	a0,a5
20407454:	4472                	lw	s0,28(sp)
20407456:	6105                	addi	sp,sp,32
20407458:	8082                	ret

2040745a <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:853

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu)
{
2040745a:	1101                	addi	sp,sp,-32
2040745c:	ce22                	sw	s0,28(sp)
2040745e:	1000                	addi	s0,sp,32
20407460:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:854
    return METAL_INTERRUPT_ID_SW;
20407464:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:855
}
20407466:	853e                	mv	a0,a5
20407468:	4472                	lw	s0,28(sp)
2040746a:	6105                	addi	sp,sp,32
2040746c:	8082                	ret

2040746e <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:858

int __metal_driver_cpu_set_sw_ipi (struct metal_cpu *cpu, int hartid)
{
2040746e:	7179                	addi	sp,sp,-48
20407470:	d606                	sw	ra,44(sp)
20407472:	d422                	sw	s0,40(sp)
20407474:	1800                	addi	s0,sp,48
20407476:	fca42e23          	sw	a0,-36(s0)
2040747a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:859
    int rc = -1;
2040747e:	57fd                	li	a5,-1
20407480:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:862
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc = 
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20407484:	fdc42503          	lw	a0,-36(s0)
20407488:	953fe0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
2040748c:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:864

    if (intc) {
20407490:	fe842783          	lw	a5,-24(s0)
20407494:	c79d                	beqz	a5,204074c2 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:865
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20407496:	fe842783          	lw	a5,-24(s0)
2040749a:	0dc7a783          	lw	a5,220(a5)
2040749e:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:866
        if (sw_intc) {
204074a2:	fe442783          	lw	a5,-28(s0)
204074a6:	cf91                	beqz	a5,204074c2 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:867
            rc = sw_intc->vtable->command_request(sw_intc,
204074a8:	fe442783          	lw	a5,-28(s0)
204074ac:	439c                	lw	a5,0(a5)
204074ae:	43f8                	lw	a4,68(a5)
204074b0:	fd840793          	addi	a5,s0,-40
204074b4:	863e                	mv	a2,a5
204074b6:	458d                	li	a1,3
204074b8:	fe442503          	lw	a0,-28(s0)
204074bc:	9702                	jalr	a4
204074be:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:871
                                                  METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
204074c2:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:872
}
204074c6:	853e                	mv	a0,a5
204074c8:	50b2                	lw	ra,44(sp)
204074ca:	5422                	lw	s0,40(sp)
204074cc:	6145                	addi	sp,sp,48
204074ce:	8082                	ret

204074d0 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:875

int __metal_driver_cpu_clear_sw_ipi (struct metal_cpu *cpu, int hartid)
{
204074d0:	7179                	addi	sp,sp,-48
204074d2:	d606                	sw	ra,44(sp)
204074d4:	d422                	sw	s0,40(sp)
204074d6:	1800                	addi	s0,sp,48
204074d8:	fca42e23          	sw	a0,-36(s0)
204074dc:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:876
    int rc = -1;
204074e0:	57fd                	li	a5,-1
204074e2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:879
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
204074e6:	fdc42503          	lw	a0,-36(s0)
204074ea:	8f1fe0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
204074ee:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:881

    if (intc) {
204074f2:	fe842783          	lw	a5,-24(s0)
204074f6:	c79d                	beqz	a5,20407524 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:882
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204074f8:	fe842783          	lw	a5,-24(s0)
204074fc:	0dc7a783          	lw	a5,220(a5)
20407500:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:883
        if (sw_intc) {
20407504:	fe442783          	lw	a5,-28(s0)
20407508:	cf91                	beqz	a5,20407524 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:884
            rc = sw_intc->vtable->command_request(sw_intc,
2040750a:	fe442783          	lw	a5,-28(s0)
2040750e:	439c                	lw	a5,0(a5)
20407510:	43f8                	lw	a4,68(a5)
20407512:	fd840793          	addi	a5,s0,-40
20407516:	863e                	mv	a2,a5
20407518:	4589                	li	a1,2
2040751a:	fe442503          	lw	a0,-28(s0)
2040751e:	9702                	jalr	a4
20407520:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:888
                                                  METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20407524:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:889
}
20407528:	853e                	mv	a0,a5
2040752a:	50b2                	lw	ra,44(sp)
2040752c:	5422                	lw	s0,40(sp)
2040752e:	6145                	addi	sp,sp,48
20407530:	8082                	ret

20407532 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:892

int __metal_driver_cpu_get_msip (struct metal_cpu *cpu, int hartid)
{
20407532:	7179                	addi	sp,sp,-48
20407534:	d606                	sw	ra,44(sp)
20407536:	d422                	sw	s0,40(sp)
20407538:	1800                	addi	s0,sp,48
2040753a:	fca42e23          	sw	a0,-36(s0)
2040753e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:893
    int rc = 0;
20407542:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:896
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20407546:	fdc42503          	lw	a0,-36(s0)
2040754a:	891fe0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
2040754e:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:898

    if (intc) {
20407552:	fe842783          	lw	a5,-24(s0)
20407556:	c79d                	beqz	a5,20407584 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:899
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20407558:	fe842783          	lw	a5,-24(s0)
2040755c:	0dc7a783          	lw	a5,220(a5)
20407560:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:900
        if (sw_intc) {
20407564:	fe442783          	lw	a5,-28(s0)
20407568:	cf91                	beqz	a5,20407584 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:901
            rc = sw_intc->vtable->command_request(sw_intc,
2040756a:	fe442783          	lw	a5,-28(s0)
2040756e:	439c                	lw	a5,0(a5)
20407570:	43f8                	lw	a4,68(a5)
20407572:	fd840793          	addi	a5,s0,-40
20407576:	863e                	mv	a2,a5
20407578:	4591                	li	a1,4
2040757a:	fe442503          	lw	a0,-28(s0)
2040757e:	9702                	jalr	a4
20407580:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:905
                                                  METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20407584:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:906
}
20407588:	853e                	mv	a0,a5
2040758a:	50b2                	lw	ra,44(sp)
2040758c:	5422                	lw	s0,40(sp)
2040758e:	6145                	addi	sp,sp,48
20407590:	8082                	ret

20407592 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:910

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu)
{
20407592:	1101                	addi	sp,sp,-32
20407594:	ce06                	sw	ra,28(sp)
20407596:	cc22                	sw	s0,24(sp)
20407598:	1000                	addi	s0,sp,32
2040759a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:911
    return __metal_driver_cpu_interrupt_controller(cpu);
2040759e:	fec42503          	lw	a0,-20(s0)
204075a2:	839fe0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
204075a6:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:912
}
204075a8:	853e                	mv	a0,a5
204075aa:	40f2                	lw	ra,28(sp)
204075ac:	4462                	lw	s0,24(sp)
204075ae:	6105                	addi	sp,sp,32
204075b0:	8082                	ret

204075b2 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:936
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
				        metal_exception_handler_t isr)
{
204075b2:	7179                	addi	sp,sp,-48
204075b4:	d606                	sw	ra,44(sp)
204075b6:	d422                	sw	s0,40(sp)
204075b8:	1800                	addi	s0,sp,48
204075ba:	fca42e23          	sw	a0,-36(s0)
204075be:	fcb42c23          	sw	a1,-40(s0)
204075c2:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:938
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
204075c6:	fdc42503          	lw	a0,-36(s0)
204075ca:	811fe0ef          	jal	ra,20405dda <__metal_driver_cpu_interrupt_controller>
204075ce:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:940

    if (intc) {
204075d2:	fec42783          	lw	a5,-20(s0)
204075d6:	cb99                	beqz	a5,204075ec <__metal_driver_cpu_exception_register+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:941
        return __metal_exception_register((struct metal_interrupt *)intc, ecode, isr);
204075d8:	fd442603          	lw	a2,-44(s0)
204075dc:	fd842583          	lw	a1,-40(s0)
204075e0:	fec42503          	lw	a0,-20(s0)
204075e4:	8d3ff0ef          	jal	ra,20406eb6 <__metal_exception_register>
204075e8:	87aa                	mv	a5,a0
204075ea:	a011                	j	204075ee <__metal_driver_cpu_exception_register+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:943
    }
    return -1;
204075ec:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:944
}
204075ee:	853e                	mv	a0,a5
204075f0:	50b2                	lw	ra,44(sp)
204075f2:	5422                	lw	s0,40(sp)
204075f4:	6145                	addi	sp,sp,48
204075f6:	8082                	ret

204075f8 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:947

int  __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu, uintptr_t epc)
{
204075f8:	1101                	addi	sp,sp,-32
204075fa:	ce22                	sw	s0,28(sp)
204075fc:	1000                	addi	s0,sp,32
204075fe:	fea42623          	sw	a0,-20(s0)
20407602:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:953
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short*)epc & METAL_INSN_LENGTH_MASK)
20407606:	fe842783          	lw	a5,-24(s0)
2040760a:	0007d783          	lhu	a5,0(a5)
2040760e:	0037f713          	andi	a4,a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954
            == METAL_INSN_NOT_COMPRESSED) ? 4 : 2;
20407612:	478d                	li	a5,3
20407614:	00f71463          	bne	a4,a5,2040761c <__metal_driver_cpu_get_instruction_length+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 1)
20407618:	4791                	li	a5,4
2040761a:	a011                	j	2040761e <__metal_driver_cpu_get_instruction_length+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 2)
2040761c:	4789                	li	a5,2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:955 (discriminator 5)
}
2040761e:	853e                	mv	a0,a5
20407620:	4472                	lw	s0,28(sp)
20407622:	6105                	addi	sp,sp,32
20407624:	8082                	ret

20407626 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:958

uintptr_t  __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu)
{
20407626:	7179                	addi	sp,sp,-48
20407628:	d622                	sw	s0,44(sp)
2040762a:	1800                	addi	s0,sp,48
2040762c:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:960
    uintptr_t mepc;
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
20407630:	341027f3          	csrr	a5,mepc
20407634:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:961
    return mepc;
20407638:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:962
}
2040763c:	853e                	mv	a0,a5
2040763e:	5432                	lw	s0,44(sp)
20407640:	6145                	addi	sp,sp,48
20407642:	8082                	ret

20407644 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:965

int  __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc)
{
20407644:	1101                	addi	sp,sp,-32
20407646:	ce22                	sw	s0,28(sp)
20407648:	1000                	addi	s0,sp,32
2040764a:	fea42623          	sw	a0,-20(s0)
2040764e:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:966
    __asm__ volatile ("csrw mepc, %0" :: "r"(mepc));
20407652:	fe842783          	lw	a5,-24(s0)
20407656:	34179073          	csrw	mepc,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:967
    return 0;
2040765a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:968
}
2040765c:	853e                	mv	a0,a5
2040765e:	4472                	lw	s0,28(sp)
20407660:	6105                	addi	sp,sp,32
20407662:	8082                	ret

20407664 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:238



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20407664:	1101                	addi	sp,sp,-32
20407666:	ce22                	sw	s0,28(sp)
20407668:	1000                	addi	s0,sp,32
2040766a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:239
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040766e:	fec42703          	lw	a4,-20(s0)
20407672:	800007b7          	lui	a5,0x80000
20407676:	4b878793          	addi	a5,a5,1208 # 800004b8 <metal_segment_heap_target_end+0xffffefe4>
2040767a:	00f71563          	bne	a4,a5,20407684 <__metal_driver_sifive_plic0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:240
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2040767e:	0c0007b7          	lui	a5,0xc000
20407682:	a011                	j	20407686 <__metal_driver_sifive_plic0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:243
	}
	else {
		return 0;
20407684:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:245
	}
}
20407686:	853e                	mv	a0,a5
20407688:	4472                	lw	s0,28(sp)
2040768a:	6105                	addi	sp,sp,32
2040768c:	8082                	ret

2040768e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:258
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2040768e:	1101                	addi	sp,sp,-32
20407690:	ce22                	sw	s0,28(sp)
20407692:	1000                	addi	s0,sp,32
20407694:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:259
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20407698:	fec42703          	lw	a4,-20(s0)
2040769c:	800007b7          	lui	a5,0x80000
204076a0:	4b878793          	addi	a5,a5,1208 # 800004b8 <metal_segment_heap_target_end+0xffffefe4>
204076a4:	00f71463          	bne	a4,a5,204076ac <__metal_driver_sifive_plic0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:260
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
204076a8:	47ed                	li	a5,27
204076aa:	a011                	j	204076ae <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:263
	}
	else {
		return 0;
204076ac:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:265
	}
}
204076ae:	853e                	mv	a0,a5
204076b0:	4472                	lw	s0,28(sp)
204076b2:	6105                	addi	sp,sp,32
204076b4:	8082                	ret

204076b6 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:268

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
204076b6:	1101                	addi	sp,sp,-32
204076b8:	ce22                	sw	s0,28(sp)
204076ba:	1000                	addi	s0,sp,32
204076bc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:269
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204076c0:	fec42703          	lw	a4,-20(s0)
204076c4:	800007b7          	lui	a5,0x80000
204076c8:	4b878793          	addi	a5,a5,1208 # 800004b8 <metal_segment_heap_target_end+0xffffefe4>
204076cc:	00f71463          	bne	a4,a5,204076d4 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:270
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
204076d0:	479d                	li	a5,7
204076d2:	a011                	j	204076d6 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:273
	}
	else {
		return 0;
204076d4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:275
	}
}
204076d6:	853e                	mv	a0,a5
204076d8:	4472                	lw	s0,28(sp)
204076da:	6105                	addi	sp,sp,32
204076dc:	8082                	ret

204076de <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:278

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204076de:	1101                	addi	sp,sp,-32
204076e0:	ce22                	sw	s0,28(sp)
204076e2:	1000                	addi	s0,sp,32
204076e4:	fea42623          	sw	a0,-20(s0)
204076e8:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:279
	if (idx == 0) {
204076ec:	fe842783          	lw	a5,-24(s0)
204076f0:	e791                	bnez	a5,204076fc <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:280
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204076f2:	800007b7          	lui	a5,0x80000
204076f6:	10078793          	addi	a5,a5,256 # 80000100 <metal_segment_heap_target_end+0xffffec2c>
204076fa:	a011                	j	204076fe <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:283
	}
	else {
		return NULL;
204076fc:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:285
	}
}
204076fe:	853e                	mv	a0,a5
20407700:	4472                	lw	s0,28(sp)
20407702:	6105                	addi	sp,sp,32
20407704:	8082                	ret

20407706 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:288

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20407706:	1101                	addi	sp,sp,-32
20407708:	ce22                	sw	s0,28(sp)
2040770a:	1000                	addi	s0,sp,32
2040770c:	fea42623          	sw	a0,-20(s0)
20407710:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:289
	if (idx == 0) {
20407714:	fe842783          	lw	a5,-24(s0)
20407718:	e399                	bnez	a5,2040771e <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:290
		return 11;
2040771a:	47ad                	li	a5,11
2040771c:	a011                	j	20407720 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:293
	}
	else {
		return 0;
2040771e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:295
	}
}
20407720:	853e                	mv	a0,a5
20407722:	4472                	lw	s0,28(sp)
20407724:	6105                	addi	sp,sp,32
20407726:	8082                	ret

20407728 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:14
#include <metal/shutdown.h>
#include <metal/drivers/riscv_plic0.h>
#include <metal/machine.h>

unsigned int __metal_plic0_claim_interrupt (struct __metal_driver_riscv_plic0 *plic)
{
20407728:	7179                	addi	sp,sp,-48
2040772a:	d606                	sw	ra,44(sp)
2040772c:	d422                	sw	s0,40(sp)
2040772e:	1800                	addi	s0,sp,48
20407730:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:15
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20407734:	fdc42503          	lw	a0,-36(s0)
20407738:	3735                	jal	20407664 <__metal_driver_sifive_plic0_control_base>
2040773a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:16
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040773e:	fec42703          	lw	a4,-20(s0)
20407742:	002007b7          	lui	a5,0x200
20407746:	0791                	addi	a5,a5,4
20407748:	97ba                	add	a5,a5,a4
2040774a:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
					      METAL_RISCV_PLIC0_CLAIM));
}
2040774c:	853e                	mv	a0,a5
2040774e:	50b2                	lw	ra,44(sp)
20407750:	5422                	lw	s0,40(sp)
20407752:	6145                	addi	sp,sp,48
20407754:	8082                	ret

20407756 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:22

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
				    unsigned int id)
{
20407756:	7179                	addi	sp,sp,-48
20407758:	d606                	sw	ra,44(sp)
2040775a:	d422                	sw	s0,40(sp)
2040775c:	1800                	addi	s0,sp,48
2040775e:	fca42e23          	sw	a0,-36(s0)
20407762:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:23
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20407766:	fdc42503          	lw	a0,-36(s0)
2040776a:	3ded                	jal	20407664 <__metal_driver_sifive_plic0_control_base>
2040776c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:24
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20407770:	fec42703          	lw	a4,-20(s0)
20407774:	002007b7          	lui	a5,0x200
20407778:	0791                	addi	a5,a5,4
2040777a:	97ba                	add	a5,a5,a4
2040777c:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
				       METAL_RISCV_PLIC0_CLAIM)) = id;
2040777e:	fd842783          	lw	a5,-40(s0)
20407782:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:26
}
20407784:	0001                	nop
20407786:	50b2                	lw	ra,44(sp)
20407788:	5422                	lw	s0,40(sp)
2040778a:	6145                	addi	sp,sp,48
2040778c:	8082                	ret

2040778e <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29

int __metal_plic0_set_threshold(struct metal_interrupt *controller, unsigned int threshold)
{
2040778e:	7179                	addi	sp,sp,-48
20407790:	d606                	sw	ra,44(sp)
20407792:	d422                	sw	s0,40(sp)
20407794:	1800                	addi	s0,sp,48
20407796:	fca42e23          	sw	a0,-36(s0)
2040779a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:30
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
2040779e:	fdc42503          	lw	a0,-36(s0)
204077a2:	35c9                	jal	20407664 <__metal_driver_sifive_plic0_control_base>
204077a4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204077a8:	fec42703          	lw	a4,-20(s0)
204077ac:	002007b7          	lui	a5,0x200
204077b0:	97ba                	add	a5,a5,a4
204077b2:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:32
				       METAL_RISCV_PLIC0_THRESHOLD)) = threshold;
204077b4:	fd842783          	lw	a5,-40(s0)
204077b8:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:33
    return 0;
204077ba:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
}
204077bc:	853e                	mv	a0,a5
204077be:	50b2                	lw	ra,44(sp)
204077c0:	5422                	lw	s0,40(sp)
204077c2:	6145                	addi	sp,sp,48
204077c4:	8082                	ret

204077c6 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:37

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller)
{
204077c6:	7179                	addi	sp,sp,-48
204077c8:	d606                	sw	ra,44(sp)
204077ca:	d422                	sw	s0,40(sp)
204077cc:	1800                	addi	s0,sp,48
204077ce:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
204077d2:	fdc42503          	lw	a0,-36(s0)
204077d6:	3579                	jal	20407664 <__metal_driver_sifive_plic0_control_base>
204077d8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204077dc:	fec42703          	lw	a4,-20(s0)
204077e0:	002007b7          	lui	a5,0x200
204077e4:	97ba                	add	a5,a5,a4
204077e6:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:42
				       METAL_RISCV_PLIC0_THRESHOLD));
}
204077e8:	853e                	mv	a0,a5
204077ea:	50b2                	lw	ra,44(sp)
204077ec:	5422                	lw	s0,40(sp)
204077ee:	6145                	addi	sp,sp,48
204077f0:	8082                	ret

204077f2 <__metal_plic0_set_priority>:
__metal_plic0_set_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45

int __metal_plic0_set_priority(struct metal_interrupt *controller, int id, unsigned int priority)
{
204077f2:	7179                	addi	sp,sp,-48
204077f4:	d606                	sw	ra,44(sp)
204077f6:	d422                	sw	s0,40(sp)
204077f8:	1800                	addi	s0,sp,48
204077fa:	fca42e23          	sw	a0,-36(s0)
204077fe:	fcb42c23          	sw	a1,-40(s0)
20407802:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)controller);
20407806:	fdc42503          	lw	a0,-36(s0)
2040780a:	3da9                	jal	20407664 <__metal_driver_sifive_plic0_control_base>
2040780c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:47
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority((struct metal_interrupt *)controller);
20407810:	fdc42503          	lw	a0,-36(s0)
20407814:	354d                	jal	204076b6 <__metal_driver_sifive_plic0_max_priority>
20407816:	87aa                	mv	a5,a0
20407818:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48
    if ( (max_priority) && (priority < max_priority) ) {
2040781c:	fe842783          	lw	a5,-24(s0)
20407820:	c785                	beqz	a5,20407848 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48 (discriminator 1)
20407822:	fd442703          	lw	a4,-44(s0)
20407826:	fe842783          	lw	a5,-24(s0)
2040782a:	00f77f63          	bgeu	a4,a5,20407848 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49
        __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040782e:	fd842783          	lw	a5,-40(s0)
20407832:	078a                	slli	a5,a5,0x2
20407834:	873e                	mv	a4,a5
20407836:	fec42783          	lw	a5,-20(s0)
2040783a:	97ba                	add	a5,a5,a4
2040783c:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) = priority;
2040783e:	fd442783          	lw	a5,-44(s0)
20407842:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
        return 0;
20407844:	4781                	li	a5,0
20407846:	a011                	j	2040784a <__metal_plic0_set_priority+0x58>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:54
    }
    return -1;
20407848:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:55
}
2040784a:	853e                	mv	a0,a5
2040784c:	50b2                	lw	ra,44(sp)
2040784e:	5422                	lw	s0,40(sp)
20407850:	6145                	addi	sp,sp,48
20407852:	8082                	ret

20407854 <__metal_plic0_get_priority>:
__metal_plic0_get_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:58

unsigned int __metal_plic0_get_priority(struct metal_interrupt *controller, int id)
{
20407854:	7179                	addi	sp,sp,-48
20407856:	d606                	sw	ra,44(sp)
20407858:	d422                	sw	s0,40(sp)
2040785a:	1800                	addi	s0,sp,48
2040785c:	fca42e23          	sw	a0,-36(s0)
20407860:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
20407864:	fdc42503          	lw	a0,-36(s0)
20407868:	3bf5                	jal	20407664 <__metal_driver_sifive_plic0_control_base>
2040786a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:61

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040786e:	fd842783          	lw	a5,-40(s0)
20407872:	078a                	slli	a5,a5,0x2
20407874:	873e                	mv	a4,a5
20407876:	fec42783          	lw	a5,-20(s0)
2040787a:	97ba                	add	a5,a5,a4
2040787c:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
2040787e:	853e                	mv	a0,a5
20407880:	50b2                	lw	ra,44(sp)
20407882:	5422                	lw	s0,40(sp)
20407884:	6145                	addi	sp,sp,48
20407886:	8082                	ret

20407888 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67

void __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic, int id, int enable)
{
20407888:	7179                	addi	sp,sp,-48
2040788a:	d606                	sw	ra,44(sp)
2040788c:	d422                	sw	s0,40(sp)
2040788e:	1800                	addi	s0,sp,48
20407890:	fca42e23          	sw	a0,-36(s0)
20407894:	fcb42c23          	sw	a1,-40(s0)
20407898:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
2040789c:	fdc42503          	lw	a0,-36(s0)
204078a0:	33d1                	jal	20407664 <__metal_driver_sifive_plic0_control_base>
204078a2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71

    current = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204078a6:	fd842783          	lw	a5,-40(s0)
204078aa:	8795                	srai	a5,a5,0x5
204078ac:	078a                	slli	a5,a5,0x2
204078ae:	873e                	mv	a4,a5
204078b0:	fec42783          	lw	a5,-20(s0)
204078b4:	973e                	add	a4,a4,a5
204078b6:	6789                	lui	a5,0x2
204078b8:	97ba                	add	a5,a5,a4
204078ba:	439c                	lw	a5,0(a5)
204078bc:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
						(id >> METAL_PLIC_SOURCE_SHIFT) * 4));
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
					METAL_RISCV_PLIC0_ENABLE_BASE +
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204078c0:	fd442783          	lw	a5,-44(s0)
204078c4:	cf81                	beqz	a5,204078dc <__metal_plic0_enable+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:77 (discriminator 1)
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
204078c6:	fd842783          	lw	a5,-40(s0)
204078ca:	8bfd                	andi	a5,a5,31
204078cc:	4705                	li	a4,1
204078ce:	00f717b3          	sll	a5,a4,a5
204078d2:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 1)
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204078d4:	fe842783          	lw	a5,-24(s0)
204078d8:	8fd9                	or	a5,a5,a4
204078da:	a829                	j	204078f4 <__metal_plic0_enable+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 2)
204078dc:	fd842783          	lw	a5,-40(s0)
204078e0:	8bfd                	andi	a5,a5,31
204078e2:	4705                	li	a4,1
204078e4:	00f717b3          	sll	a5,a4,a5
204078e8:	fff7c793          	not	a5,a5
204078ec:	873e                	mv	a4,a5
204078ee:	fe842783          	lw	a5,-24(s0)
204078f2:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:74
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
204078f4:	fd842703          	lw	a4,-40(s0)
204078f8:	8715                	srai	a4,a4,0x5
204078fa:	070a                	slli	a4,a4,0x2
204078fc:	86ba                	mv	a3,a4
204078fe:	fec42703          	lw	a4,-20(s0)
20407902:	96ba                	add	a3,a3,a4
20407904:	6709                	lui	a4,0x2
20407906:	9736                	add	a4,a4,a3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20407908:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:79
}
2040790a:	0001                	nop
2040790c:	50b2                	lw	ra,44(sp)
2040790e:	5422                	lw	s0,40(sp)
20407910:	6145                	addi	sp,sp,48
20407912:	8082                	ret

20407914 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:81

void __metal_plic0_default_handler (int id, void *priv) {
20407914:	1101                	addi	sp,sp,-32
20407916:	ce06                	sw	ra,28(sp)
20407918:	cc22                	sw	s0,24(sp)
2040791a:	1000                	addi	s0,sp,32
2040791c:	fea42623          	sw	a0,-20(s0)
20407920:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:82
    metal_shutdown(300);
20407924:	12c00513          	li	a0,300
20407928:	1d6010ef          	jal	ra,20408afe <metal_shutdown>

2040792c <__metal_plic0_handler>:
__metal_plic0_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86
}

void __metal_plic0_handler (int id, void *priv)
{
2040792c:	7179                	addi	sp,sp,-48
2040792e:	d606                	sw	ra,44(sp)
20407930:	d422                	sw	s0,40(sp)
20407932:	1800                	addi	s0,sp,48
20407934:	fca42e23          	sw	a0,-36(s0)
20407938:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:87
    struct __metal_driver_riscv_plic0 *plic = priv;
2040793c:	fd842783          	lw	a5,-40(s0)
20407940:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int idx = __metal_plic0_claim_interrupt(plic);
20407944:	fec42503          	lw	a0,-20(s0)
20407948:	33c5                	jal	20407728 <__metal_plic0_claim_interrupt>
2040794a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:89
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts((struct metal_interrupt *)plic);
2040794e:	fec42503          	lw	a0,-20(s0)
20407952:	d3dff0ef          	jal	ra,2040768e <__metal_driver_sifive_plic0_num_interrupts>
20407956:	87aa                	mv	a5,a0
20407958:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91

    if ( (idx < num_interrupts) && (plic->metal_exint_table[idx]) ) {
2040795c:	fe842703          	lw	a4,-24(s0)
20407960:	fe442783          	lw	a5,-28(s0)
20407964:	04f77263          	bgeu	a4,a5,204079a8 <__metal_plic0_handler+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91 (discriminator 1)
20407968:	fec42703          	lw	a4,-20(s0)
2040796c:	fe842783          	lw	a5,-24(s0)
20407970:	078a                	slli	a5,a5,0x2
20407972:	97ba                	add	a5,a5,a4
20407974:	479c                	lw	a5,8(a5)
20407976:	cb8d                	beqz	a5,204079a8 <__metal_plic0_handler+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:92
	plic->metal_exint_table[idx](idx,
20407978:	fec42703          	lw	a4,-20(s0)
2040797c:	fe842783          	lw	a5,-24(s0)
20407980:	078a                	slli	a5,a5,0x2
20407982:	97ba                	add	a5,a5,a4
20407984:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20407988:	fe842603          	lw	a2,-24(s0)
2040798c:	fec42683          	lw	a3,-20(s0)
20407990:	fe842703          	lw	a4,-24(s0)
20407994:	87ba                	mv	a5,a4
20407996:	0786                	slli	a5,a5,0x1
20407998:	97ba                	add	a5,a5,a4
2040799a:	078e                	slli	a5,a5,0x3
2040799c:	97b6                	add	a5,a5,a3
2040799e:	0887a783          	lw	a5,136(a5)
204079a2:	85be                	mv	a1,a5
204079a4:	8532                	mv	a0,a2
204079a6:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:96
				  plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, idx);
204079a8:	fe842583          	lw	a1,-24(s0)
204079ac:	fec42503          	lw	a0,-20(s0)
204079b0:	da7ff0ef          	jal	ra,20407756 <__metal_plic0_complete_interrupt>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:97
}
204079b4:	0001                	nop
204079b6:	50b2                	lw	ra,44(sp)
204079b8:	5422                	lw	s0,40(sp)
204079ba:	6145                	addi	sp,sp,48
204079bc:	8082                	ret

204079be <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100

void __metal_driver_riscv_plic0_init (struct metal_interrupt *controller)
{
204079be:	7139                	addi	sp,sp,-64
204079c0:	de06                	sw	ra,60(sp)
204079c2:	dc22                	sw	s0,56(sp)
204079c4:	0080                	addi	s0,sp,64
204079c6:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:101
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204079ca:	fcc42783          	lw	a5,-52(s0)
204079ce:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103

    if ( !plic->init_done ) {
204079d2:	fe442783          	lw	a5,-28(s0)
204079d6:	43dc                	lw	a5,4(a5)
204079d8:	12079063          	bnez	a5,20407af8 <__metal_driver_riscv_plic0_init+0x13a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107
        int num_interrupts, line;
        struct metal_interrupt *intc;

	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
204079dc:	fe042623          	sw	zero,-20(s0)
204079e0:	a221                	j	20407ae8 <__metal_driver_riscv_plic0_init+0x12a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
	    num_interrupts = __metal_driver_sifive_plic0_num_interrupts(controller);
204079e2:	fcc42503          	lw	a0,-52(s0)
204079e6:	ca9ff0ef          	jal	ra,2040768e <__metal_driver_sifive_plic0_num_interrupts>
204079ea:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:109
	    intc = __metal_driver_sifive_plic0_interrupt_parents(controller, parent);
204079ee:	fec42583          	lw	a1,-20(s0)
204079f2:	fcc42503          	lw	a0,-52(s0)
204079f6:	ce9ff0ef          	jal	ra,204076de <__metal_driver_sifive_plic0_interrupt_parents>
204079fa:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
	    line = __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
204079fe:	fec42583          	lw	a1,-20(s0)
20407a02:	fcc42503          	lw	a0,-52(s0)
20407a06:	d01ff0ef          	jal	ra,20407706 <__metal_driver_sifive_plic0_interrupt_lines>
20407a0a:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:113

	    /* Initialize ist parent controller, aka cpu_intc. */
	    intc->vtable->interrupt_init(intc);
20407a0e:	fdc42783          	lw	a5,-36(s0)
20407a12:	439c                	lw	a5,0(a5)
20407a14:	439c                	lw	a5,0(a5)
20407a16:	fdc42503          	lw	a0,-36(s0)
20407a1a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115

	    for (int i = 0; i < num_interrupts; i++) {
20407a1c:	fe042423          	sw	zero,-24(s0)
20407a20:	a085                	j	20407a80 <__metal_driver_riscv_plic0_init+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116 (discriminator 3)
		__metal_plic0_enable(plic, i, METAL_DISABLE);
20407a22:	4601                	li	a2,0
20407a24:	fe842583          	lw	a1,-24(s0)
20407a28:	fe442503          	lw	a0,-28(s0)
20407a2c:	3db1                	jal	20407888 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:117 (discriminator 3)
		__metal_plic0_set_priority(controller, i, 0);
20407a2e:	4601                	li	a2,0
20407a30:	fe842583          	lw	a1,-24(s0)
20407a34:	fcc42503          	lw	a0,-52(s0)
20407a38:	3b6d                	jal	204077f2 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:118 (discriminator 3)
		plic->metal_exint_table[i] = NULL;
20407a3a:	fe442703          	lw	a4,-28(s0)
20407a3e:	fe842783          	lw	a5,-24(s0)
20407a42:	078a                	slli	a5,a5,0x2
20407a44:	97ba                	add	a5,a5,a4
20407a46:	0007a423          	sw	zero,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:119 (discriminator 3)
		plic->metal_exdata_table[i].sub_int = NULL;
20407a4a:	fe442683          	lw	a3,-28(s0)
20407a4e:	fe842703          	lw	a4,-24(s0)
20407a52:	87ba                	mv	a5,a4
20407a54:	0786                	slli	a5,a5,0x1
20407a56:	97ba                	add	a5,a5,a4
20407a58:	078e                	slli	a5,a5,0x3
20407a5a:	97b6                	add	a5,a5,a3
20407a5c:	0807a223          	sw	zero,132(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120 (discriminator 3)
		plic->metal_exdata_table[i].exint_data = NULL;
20407a60:	fe442683          	lw	a3,-28(s0)
20407a64:	fe842703          	lw	a4,-24(s0)
20407a68:	87ba                	mv	a5,a4
20407a6a:	0786                	slli	a5,a5,0x1
20407a6c:	97ba                	add	a5,a5,a4
20407a6e:	078e                	slli	a5,a5,0x3
20407a70:	97b6                	add	a5,a5,a3
20407a72:	0807a423          	sw	zero,136(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 3)
	    for (int i = 0; i < num_interrupts; i++) {
20407a76:	fe842783          	lw	a5,-24(s0)
20407a7a:	0785                	addi	a5,a5,1
20407a7c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20407a80:	fe842703          	lw	a4,-24(s0)
20407a84:	fe042783          	lw	a5,-32(s0)
20407a88:	f8f74de3          	blt	a4,a5,20407a22 <__metal_driver_riscv_plic0_init+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123 (discriminator 2)
	    }

	    __metal_plic0_set_threshold(controller, 0);
20407a8c:	4581                	li	a1,0
20407a8e:	fcc42503          	lw	a0,-52(s0)
20407a92:	cfdff0ef          	jal	ra,2040778e <__metal_plic0_set_threshold>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126 (discriminator 2)

	    /* Register plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_register(intc, line, NULL, plic);
20407a96:	fdc42783          	lw	a5,-36(s0)
20407a9a:	439c                	lw	a5,0(a5)
20407a9c:	4fdc                	lw	a5,28(a5)
20407a9e:	fe442683          	lw	a3,-28(s0)
20407aa2:	4601                	li	a2,0
20407aa4:	fd842583          	lw	a1,-40(s0)
20407aa8:	fdc42503          	lw	a0,-36(s0)
20407aac:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:128 (discriminator 2)
	    /* Register plic handler for dispatching its device interrupts */
	    intc->vtable->interrupt_register(intc, line, __metal_plic0_handler, plic);
20407aae:	fdc42783          	lw	a5,-36(s0)
20407ab2:	439c                	lw	a5,0(a5)
20407ab4:	4fd8                	lw	a4,28(a5)
20407ab6:	fe442683          	lw	a3,-28(s0)
20407aba:	204087b7          	lui	a5,0x20408
20407abe:	92c78613          	addi	a2,a5,-1748 # 2040792c <__metal_plic0_handler>
20407ac2:	fd842583          	lw	a1,-40(s0)
20407ac6:	fdc42503          	lw	a0,-36(s0)
20407aca:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
	    /* Enable plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_enable(intc, line);
20407acc:	fdc42783          	lw	a5,-36(s0)
20407ad0:	439c                	lw	a5,0(a5)
20407ad2:	53dc                	lw	a5,36(a5)
20407ad4:	fd842583          	lw	a1,-40(s0)
20407ad8:	fdc42503          	lw	a0,-36(s0)
20407adc:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 2)
	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20407ade:	fec42783          	lw	a5,-20(s0)
20407ae2:	0785                	addi	a5,a5,1
20407ae4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 1)
20407ae8:	fec42783          	lw	a5,-20(s0)
20407aec:	eef05be3          	blez	a5,204079e2 <__metal_driver_riscv_plic0_init+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
	}
        plic->init_done = 1;
20407af0:	fe442783          	lw	a5,-28(s0)
20407af4:	4705                	li	a4,1
20407af6:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:134
    }
}
20407af8:	0001                	nop
20407afa:	50f2                	lw	ra,60(sp)
20407afc:	5462                	lw	s0,56(sp)
20407afe:	6121                	addi	sp,sp,64
20407b00:	8082                	ret

20407b02 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

int __metal_driver_riscv_plic0_register (struct metal_interrupt *controller,
			               int id, metal_interrupt_handler_t isr,
			               void *priv)
{
20407b02:	7179                	addi	sp,sp,-48
20407b04:	d606                	sw	ra,44(sp)
20407b06:	d422                	sw	s0,40(sp)
20407b08:	1800                	addi	s0,sp,48
20407b0a:	fca42e23          	sw	a0,-36(s0)
20407b0e:	fcb42c23          	sw	a1,-40(s0)
20407b12:	fcc42a23          	sw	a2,-44(s0)
20407b16:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:140
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407b1a:	fdc42783          	lw	a5,-36(s0)
20407b1e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20407b22:	fdc42503          	lw	a0,-36(s0)
20407b26:	b69ff0ef          	jal	ra,2040768e <__metal_driver_sifive_plic0_num_interrupts>
20407b2a:	872a                	mv	a4,a0
20407b2c:	fd842783          	lw	a5,-40(s0)
20407b30:	00e7c463          	blt	a5,a4,20407b38 <__metal_driver_riscv_plic0_register+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
        return -1;
20407b34:	57fd                	li	a5,-1
20407b36:	a051                	j	20407bba <__metal_driver_riscv_plic0_register+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
    }
 
    if (isr) {
20407b38:	fd442783          	lw	a5,-44(s0)
20407b3c:	cf9d                	beqz	a5,20407b7a <__metal_driver_riscv_plic0_register+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
        __metal_plic0_set_priority(controller, id, 2);
20407b3e:	4609                	li	a2,2
20407b40:	fd842583          	lw	a1,-40(s0)
20407b44:	fdc42503          	lw	a0,-36(s0)
20407b48:	cabff0ef          	jal	ra,204077f2 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:148
	plic->metal_exint_table[id] = isr;
20407b4c:	fec42703          	lw	a4,-20(s0)
20407b50:	fd842783          	lw	a5,-40(s0)
20407b54:	078a                	slli	a5,a5,0x2
20407b56:	97ba                	add	a5,a5,a4
20407b58:	fd442703          	lw	a4,-44(s0)
20407b5c:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:149
	plic->metal_exdata_table[id].exint_data = priv;
20407b5e:	fec42683          	lw	a3,-20(s0)
20407b62:	fd842703          	lw	a4,-40(s0)
20407b66:	87ba                	mv	a5,a4
20407b68:	0786                	slli	a5,a5,0x1
20407b6a:	97ba                	add	a5,a5,a4
20407b6c:	078e                	slli	a5,a5,0x3
20407b6e:	97b6                	add	a5,a5,a3
20407b70:	fd042703          	lw	a4,-48(s0)
20407b74:	08e7a423          	sw	a4,136(a5)
20407b78:	a081                	j	20407bb8 <__metal_driver_riscv_plic0_register+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151
    } else {
        __metal_plic0_set_priority(controller, id, 1);
20407b7a:	4605                	li	a2,1
20407b7c:	fd842583          	lw	a1,-40(s0)
20407b80:	fdc42503          	lw	a0,-36(s0)
20407b84:	c6fff0ef          	jal	ra,204077f2 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:152
	plic->metal_exint_table[id] = __metal_plic0_default_handler;
20407b88:	fec42703          	lw	a4,-20(s0)
20407b8c:	fd842783          	lw	a5,-40(s0)
20407b90:	078a                	slli	a5,a5,0x2
20407b92:	97ba                	add	a5,a5,a4
20407b94:	20408737          	lui	a4,0x20408
20407b98:	91470713          	addi	a4,a4,-1772 # 20407914 <__metal_plic0_default_handler>
20407b9c:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:153
	plic->metal_exdata_table[id].sub_int = priv;
20407b9e:	fec42683          	lw	a3,-20(s0)
20407ba2:	fd842703          	lw	a4,-40(s0)
20407ba6:	87ba                	mv	a5,a4
20407ba8:	0786                	slli	a5,a5,0x1
20407baa:	97ba                	add	a5,a5,a4
20407bac:	078e                	slli	a5,a5,0x3
20407bae:	97b6                	add	a5,a5,a3
20407bb0:	fd042703          	lw	a4,-48(s0)
20407bb4:	08e7a223          	sw	a4,132(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156
    }

    return 0;
20407bb8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:157
}
20407bba:	853e                	mv	a0,a5
20407bbc:	50b2                	lw	ra,44(sp)
20407bbe:	5422                	lw	s0,40(sp)
20407bc0:	6145                	addi	sp,sp,48
20407bc2:	8082                	ret

20407bc4 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:160

int __metal_driver_riscv_plic0_enable (struct metal_interrupt *controller, int id)
{
20407bc4:	7179                	addi	sp,sp,-48
20407bc6:	d606                	sw	ra,44(sp)
20407bc8:	d422                	sw	s0,40(sp)
20407bca:	1800                	addi	s0,sp,48
20407bcc:	fca42e23          	sw	a0,-36(s0)
20407bd0:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407bd4:	fdc42783          	lw	a5,-36(s0)
20407bd8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20407bdc:	fdc42503          	lw	a0,-36(s0)
20407be0:	aafff0ef          	jal	ra,2040768e <__metal_driver_sifive_plic0_num_interrupts>
20407be4:	872a                	mv	a4,a0
20407be6:	fd842783          	lw	a5,-40(s0)
20407bea:	00e7c463          	blt	a5,a4,20407bf2 <__metal_driver_riscv_plic0_enable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:164
        return -1;
20407bee:	57fd                	li	a5,-1
20407bf0:	a809                	j	20407c02 <__metal_driver_riscv_plic0_enable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167
    }

    __metal_plic0_enable(plic, id, METAL_ENABLE);
20407bf2:	4605                	li	a2,1
20407bf4:	fd842583          	lw	a1,-40(s0)
20407bf8:	fec42503          	lw	a0,-20(s0)
20407bfc:	c8dff0ef          	jal	ra,20407888 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    return 0;
20407c00:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:169
}
20407c02:	853e                	mv	a0,a5
20407c04:	50b2                	lw	ra,44(sp)
20407c06:	5422                	lw	s0,40(sp)
20407c08:	6145                	addi	sp,sp,48
20407c0a:	8082                	ret

20407c0c <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:172

int __metal_driver_riscv_plic0_disable (struct metal_interrupt *controller, int id)
{
20407c0c:	7179                	addi	sp,sp,-48
20407c0e:	d606                	sw	ra,44(sp)
20407c10:	d422                	sw	s0,40(sp)
20407c12:	1800                	addi	s0,sp,48
20407c14:	fca42e23          	sw	a0,-36(s0)
20407c18:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:173
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20407c1c:	fdc42783          	lw	a5,-36(s0)
20407c20:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20407c24:	fdc42503          	lw	a0,-36(s0)
20407c28:	a67ff0ef          	jal	ra,2040768e <__metal_driver_sifive_plic0_num_interrupts>
20407c2c:	872a                	mv	a4,a0
20407c2e:	fd842783          	lw	a5,-40(s0)
20407c32:	00e7c463          	blt	a5,a4,20407c3a <__metal_driver_riscv_plic0_disable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        return -1;
20407c36:	57fd                	li	a5,-1
20407c38:	a809                	j	20407c4a <__metal_driver_riscv_plic0_disable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:178
    }
    __metal_plic0_enable(plic, id, METAL_DISABLE);
20407c3a:	4601                	li	a2,0
20407c3c:	fd842583          	lw	a1,-40(s0)
20407c40:	fec42503          	lw	a0,-20(s0)
20407c44:	c45ff0ef          	jal	ra,20407888 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    return 0;
20407c48:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
}
20407c4a:	853e                	mv	a0,a5
20407c4c:	50b2                	lw	ra,44(sp)
20407c4e:	5422                	lw	s0,40(sp)
20407c50:	6145                	addi	sp,sp,48
20407c52:	8082                	ret

20407c54 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:388
/* --------------------- sifive_global_external_interrupts0 ------------ */


/* --------------------- sifive_gpio0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_gpio0_base(struct metal_gpio *gpio)
{
20407c54:	1101                	addi	sp,sp,-32
20407c56:	ce22                	sw	s0,28(sp)
20407c58:	1000                	addi	s0,sp,32
20407c5a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:389
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20407c5e:	fec42703          	lw	a4,-20(s0)
20407c62:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407c66:	00f71563          	bne	a4,a5,20407c70 <__metal_driver_sifive_gpio0_base+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:390
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20407c6a:	100127b7          	lui	a5,0x10012
20407c6e:	a011                	j	20407c72 <__metal_driver_sifive_gpio0_base+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:393
	}
	else {
		return 0;
20407c70:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:395
	}
}
20407c72:	853e                	mv	a0,a5
20407c74:	4472                	lw	s0,28(sp)
20407c76:	6105                	addi	sp,sp,32
20407c78:	8082                	ret

20407c7a <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:418
		return 0;
	}
}

static __inline__ struct metal_interrupt * __metal_driver_sifive_gpio0_interrupt_parent(struct metal_gpio *gpio)
{
20407c7a:	1101                	addi	sp,sp,-32
20407c7c:	ce22                	sw	s0,28(sp)
20407c7e:	1000                	addi	s0,sp,32
20407c80:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:419
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20407c84:	fec42703          	lw	a4,-20(s0)
20407c88:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407c8c:	00f71763          	bne	a4,a5,20407c9a <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:420
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20407c90:	800007b7          	lui	a5,0x80000
20407c94:	4b878793          	addi	a5,a5,1208 # 800004b8 <metal_segment_heap_target_end+0xffffefe4>
20407c98:	a011                	j	20407c9c <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:423
	}
	else {
		return 0;
20407c9a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:425
	}
}
20407c9c:	853e                	mv	a0,a5
20407c9e:	4472                	lw	s0,28(sp)
20407ca0:	6105                	addi	sp,sp,32
20407ca2:	8082                	ret

20407ca4 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:428

static __inline__ int __metal_driver_sifive_gpio0_interrupt_lines(struct metal_gpio *gpio, int idx)
{
20407ca4:	1101                	addi	sp,sp,-32
20407ca6:	ce22                	sw	s0,28(sp)
20407ca8:	1000                	addi	s0,sp,32
20407caa:	fea42623          	sw	a0,-20(s0)
20407cae:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:429
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20407cb2:	fec42703          	lw	a4,-20(s0)
20407cb6:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407cba:	00f71763          	bne	a4,a5,20407cc8 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:429 (discriminator 1)
20407cbe:	fe842783          	lw	a5,-24(s0)
20407cc2:	e399                	bnez	a5,20407cc8 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:430
		return 7;
20407cc4:	479d                	li	a5,7
20407cc6:	a269                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:432
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20407cc8:	fec42703          	lw	a4,-20(s0)
20407ccc:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407cd0:	00f71963          	bne	a4,a5,20407ce2 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:432 (discriminator 1)
20407cd4:	fe842703          	lw	a4,-24(s0)
20407cd8:	4785                	li	a5,1
20407cda:	00f71463          	bne	a4,a5,20407ce2 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:433
		return 8;
20407cde:	47a1                	li	a5,8
20407ce0:	aa85                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:435
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20407ce2:	fec42703          	lw	a4,-20(s0)
20407ce6:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407cea:	00f71963          	bne	a4,a5,20407cfc <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:435 (discriminator 1)
20407cee:	fe842703          	lw	a4,-24(s0)
20407cf2:	4789                	li	a5,2
20407cf4:	00f71463          	bne	a4,a5,20407cfc <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:436
		return 9;
20407cf8:	47a5                	li	a5,9
20407cfa:	aa99                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:438
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20407cfc:	fec42703          	lw	a4,-20(s0)
20407d00:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407d04:	00f71963          	bne	a4,a5,20407d16 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:438 (discriminator 1)
20407d08:	fe842703          	lw	a4,-24(s0)
20407d0c:	478d                	li	a5,3
20407d0e:	00f71463          	bne	a4,a5,20407d16 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:439
		return 10;
20407d12:	47a9                	li	a5,10
20407d14:	aa35                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:441
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20407d16:	fec42703          	lw	a4,-20(s0)
20407d1a:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407d1e:	00f71963          	bne	a4,a5,20407d30 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:441 (discriminator 1)
20407d22:	fe842703          	lw	a4,-24(s0)
20407d26:	4791                	li	a5,4
20407d28:	00f71463          	bne	a4,a5,20407d30 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:442
		return 11;
20407d2c:	47ad                	li	a5,11
20407d2e:	a20d                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:444
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20407d30:	fec42703          	lw	a4,-20(s0)
20407d34:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407d38:	00f71963          	bne	a4,a5,20407d4a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:444 (discriminator 1)
20407d3c:	fe842703          	lw	a4,-24(s0)
20407d40:	4795                	li	a5,5
20407d42:	00f71463          	bne	a4,a5,20407d4a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:445
		return 12;
20407d46:	47b1                	li	a5,12
20407d48:	a221                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:447
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20407d4a:	fec42703          	lw	a4,-20(s0)
20407d4e:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407d52:	00f71963          	bne	a4,a5,20407d64 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:447 (discriminator 1)
20407d56:	fe842703          	lw	a4,-24(s0)
20407d5a:	4799                	li	a5,6
20407d5c:	00f71463          	bne	a4,a5,20407d64 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:448
		return 13;
20407d60:	47b5                	li	a5,13
20407d62:	a0fd                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:450
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20407d64:	fec42703          	lw	a4,-20(s0)
20407d68:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407d6c:	00f71963          	bne	a4,a5,20407d7e <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:450 (discriminator 1)
20407d70:	fe842703          	lw	a4,-24(s0)
20407d74:	479d                	li	a5,7
20407d76:	00f71463          	bne	a4,a5,20407d7e <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:451
		return 14;
20407d7a:	47b9                	li	a5,14
20407d7c:	a8d1                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:453
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20407d7e:	fec42703          	lw	a4,-20(s0)
20407d82:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407d86:	00f71963          	bne	a4,a5,20407d98 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:453 (discriminator 1)
20407d8a:	fe842703          	lw	a4,-24(s0)
20407d8e:	47a1                	li	a5,8
20407d90:	00f71463          	bne	a4,a5,20407d98 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:454
		return 15;
20407d94:	47bd                	li	a5,15
20407d96:	a86d                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:456
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20407d98:	fec42703          	lw	a4,-20(s0)
20407d9c:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407da0:	00f71963          	bne	a4,a5,20407db2 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:456 (discriminator 1)
20407da4:	fe842703          	lw	a4,-24(s0)
20407da8:	47a5                	li	a5,9
20407daa:	00f71463          	bne	a4,a5,20407db2 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:457
		return 16;
20407dae:	47c1                	li	a5,16
20407db0:	a045                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:459
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20407db2:	fec42703          	lw	a4,-20(s0)
20407db6:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407dba:	00f71963          	bne	a4,a5,20407dcc <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:459 (discriminator 1)
20407dbe:	fe842703          	lw	a4,-24(s0)
20407dc2:	47a9                	li	a5,10
20407dc4:	00f71463          	bne	a4,a5,20407dcc <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:460
		return 17;
20407dc8:	47c5                	li	a5,17
20407dca:	a059                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:462
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20407dcc:	fec42703          	lw	a4,-20(s0)
20407dd0:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407dd4:	00f71963          	bne	a4,a5,20407de6 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:462 (discriminator 1)
20407dd8:	fe842703          	lw	a4,-24(s0)
20407ddc:	47ad                	li	a5,11
20407dde:	00f71463          	bne	a4,a5,20407de6 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:463
		return 18;
20407de2:	47c9                	li	a5,18
20407de4:	a0b5                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:465
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20407de6:	fec42703          	lw	a4,-20(s0)
20407dea:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407dee:	00f71963          	bne	a4,a5,20407e00 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:465 (discriminator 1)
20407df2:	fe842703          	lw	a4,-24(s0)
20407df6:	47b1                	li	a5,12
20407df8:	00f71463          	bne	a4,a5,20407e00 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:466
		return 19;
20407dfc:	47cd                	li	a5,19
20407dfe:	a889                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:468
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20407e00:	fec42703          	lw	a4,-20(s0)
20407e04:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407e08:	00f71963          	bne	a4,a5,20407e1a <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:468 (discriminator 1)
20407e0c:	fe842703          	lw	a4,-24(s0)
20407e10:	47b5                	li	a5,13
20407e12:	00f71463          	bne	a4,a5,20407e1a <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:469
		return 20;
20407e16:	47d1                	li	a5,20
20407e18:	a825                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:471
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20407e1a:	fec42703          	lw	a4,-20(s0)
20407e1e:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407e22:	00f71963          	bne	a4,a5,20407e34 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:471 (discriminator 1)
20407e26:	fe842703          	lw	a4,-24(s0)
20407e2a:	47b9                	li	a5,14
20407e2c:	00f71463          	bne	a4,a5,20407e34 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:472
		return 21;
20407e30:	47d5                	li	a5,21
20407e32:	a839                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:474
	}
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20407e34:	fec42703          	lw	a4,-20(s0)
20407e38:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
20407e3c:	00f71963          	bne	a4,a5,20407e4e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:474 (discriminator 1)
20407e40:	fe842703          	lw	a4,-24(s0)
20407e44:	47bd                	li	a5,15
20407e46:	00f71463          	bne	a4,a5,20407e4e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:475
		return 22;
20407e4a:	47d9                	li	a5,22
20407e4c:	a011                	j	20407e50 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:478
	}
	else {
		return 0;
20407e4e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:480
	}
}
20407e50:	853e                	mv	a0,a5
20407e52:	4472                	lw	s0,28(sp)
20407e54:	6105                	addi	sp,sp,32
20407e56:	8082                	ret

20407e58 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio, long source)
{
20407e58:	7179                	addi	sp,sp,-48
20407e5a:	d606                	sw	ra,44(sp)
20407e5c:	d422                	sw	s0,40(sp)
20407e5e:	1800                	addi	s0,sp,48
20407e60:	fca42e23          	sw	a0,-36(s0)
20407e64:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407e68:	fdc42503          	lw	a0,-36(s0)
20407e6c:	de9ff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20407e70:	87aa                	mv	a5,a0
20407e72:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  |= source;
20407e76:	fec42783          	lw	a5,-20(s0)
20407e7a:	0791                	addi	a5,a5,4
20407e7c:	4398                	lw	a4,0(a5)
20407e7e:	fd842783          	lw	a5,-40(s0)
20407e82:	fec42683          	lw	a3,-20(s0)
20407e86:	0691                	addi	a3,a3,4
20407e88:	8fd9                	or	a5,a5,a4
20407e8a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:18

    return 0;
20407e8c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19
}
20407e8e:	853e                	mv	a0,a5
20407e90:	50b2                	lw	ra,44(sp)
20407e92:	5422                	lw	s0,40(sp)
20407e94:	6145                	addi	sp,sp,48
20407e96:	8082                	ret

20407e98 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:22

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio, long source)
{
20407e98:	7179                	addi	sp,sp,-48
20407e9a:	d606                	sw	ra,44(sp)
20407e9c:	d422                	sw	s0,40(sp)
20407e9e:	1800                	addi	s0,sp,48
20407ea0:	fca42e23          	sw	a0,-36(s0)
20407ea4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407ea8:	fdc42503          	lw	a0,-36(s0)
20407eac:	da9ff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20407eb0:	87aa                	mv	a5,a0
20407eb2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:25

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  &= ~source;
20407eb6:	fec42783          	lw	a5,-20(s0)
20407eba:	0791                	addi	a5,a5,4
20407ebc:	439c                	lw	a5,0(a5)
20407ebe:	fd842703          	lw	a4,-40(s0)
20407ec2:	fff74713          	not	a4,a4
20407ec6:	86ba                	mv	a3,a4
20407ec8:	fec42703          	lw	a4,-20(s0)
20407ecc:	0711                	addi	a4,a4,4
20407ece:	8ff5                	and	a5,a5,a3
20407ed0:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    return 0;
20407ed2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:28
}
20407ed4:	853e                	mv	a0,a5
20407ed6:	50b2                	lw	ra,44(sp)
20407ed8:	5422                	lw	s0,40(sp)
20407eda:	6145                	addi	sp,sp,48
20407edc:	8082                	ret

20407ede <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:31

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio)
{
20407ede:	7179                	addi	sp,sp,-48
20407ee0:	d606                	sw	ra,44(sp)
20407ee2:	d422                	sw	s0,40(sp)
20407ee4:	1800                	addi	s0,sp,48
20407ee6:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407eea:	fdc42503          	lw	a0,-36(s0)
20407eee:	d67ff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20407ef2:	87aa                	mv	a5,a0
20407ef4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:34

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
20407ef8:	fec42783          	lw	a5,-20(s0)
20407efc:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35
}
20407efe:	853e                	mv	a0,a5
20407f00:	50b2                	lw	ra,44(sp)
20407f02:	5422                	lw	s0,40(sp)
20407f04:	6145                	addi	sp,sp,48
20407f06:	8082                	ret

20407f08 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:38

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio)
{
20407f08:	7179                	addi	sp,sp,-48
20407f0a:	d606                	sw	ra,44(sp)
20407f0c:	d422                	sw	s0,40(sp)
20407f0e:	1800                	addi	s0,sp,48
20407f10:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407f14:	fdc42503          	lw	a0,-36(s0)
20407f18:	d3dff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20407f1c:	87aa                	mv	a5,a0
20407f1e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:41

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
20407f22:	fec42783          	lw	a5,-20(s0)
20407f26:	07b1                	addi	a5,a5,12
20407f28:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42
}
20407f2a:	853e                	mv	a0,a5
20407f2c:	50b2                	lw	ra,44(sp)
20407f2e:	5422                	lw	s0,40(sp)
20407f30:	6145                	addi	sp,sp,48
20407f32:	8082                	ret

20407f34 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:46


int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio, long source)
{
20407f34:	7179                	addi	sp,sp,-48
20407f36:	d606                	sw	ra,44(sp)
20407f38:	d422                	sw	s0,40(sp)
20407f3a:	1800                	addi	s0,sp,48
20407f3c:	fca42e23          	sw	a0,-36(s0)
20407f40:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407f44:	fdc42503          	lw	a0,-36(s0)
20407f48:	d0dff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20407f4c:	87aa                	mv	a5,a0
20407f4e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:49

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  &= ~source;
20407f52:	fec42783          	lw	a5,-20(s0)
20407f56:	07a1                	addi	a5,a5,8
20407f58:	439c                	lw	a5,0(a5)
20407f5a:	fd842703          	lw	a4,-40(s0)
20407f5e:	fff74713          	not	a4,a4
20407f62:	86ba                	mv	a3,a4
20407f64:	fec42703          	lw	a4,-20(s0)
20407f68:	0721                	addi	a4,a4,8
20407f6a:	8ff5                	and	a5,a5,a3
20407f6c:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    return 0;
20407f6e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:52
}
20407f70:	853e                	mv	a0,a5
20407f72:	50b2                	lw	ra,44(sp)
20407f74:	5422                	lw	s0,40(sp)
20407f76:	6145                	addi	sp,sp,48
20407f78:	8082                	ret

20407f7a <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:55

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio, long source)
{
20407f7a:	7179                	addi	sp,sp,-48
20407f7c:	d606                	sw	ra,44(sp)
20407f7e:	d422                	sw	s0,40(sp)
20407f80:	1800                	addi	s0,sp,48
20407f82:	fca42e23          	sw	a0,-36(s0)
20407f86:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:56
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407f8a:	fdc42503          	lw	a0,-36(s0)
20407f8e:	cc7ff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20407f92:	87aa                	mv	a5,a0
20407f94:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  |= source;
20407f98:	fec42783          	lw	a5,-20(s0)
20407f9c:	07a1                	addi	a5,a5,8
20407f9e:	4398                	lw	a4,0(a5)
20407fa0:	fd842783          	lw	a5,-40(s0)
20407fa4:	fec42683          	lw	a3,-20(s0)
20407fa8:	06a1                	addi	a3,a3,8
20407faa:	8fd9                	or	a5,a5,a4
20407fac:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:60

    return 0;
20407fae:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61
}
20407fb0:	853e                	mv	a0,a5
20407fb2:	50b2                	lw	ra,44(sp)
20407fb4:	5422                	lw	s0,40(sp)
20407fb6:	6145                	addi	sp,sp,48
20407fb8:	8082                	ret

20407fba <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio, long value)
{
20407fba:	7179                	addi	sp,sp,-48
20407fbc:	d606                	sw	ra,44(sp)
20407fbe:	d422                	sw	s0,40(sp)
20407fc0:	1800                	addi	s0,sp,48
20407fc2:	fca42e23          	sw	a0,-36(s0)
20407fc6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:65
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20407fca:	fdc42503          	lw	a0,-36(s0)
20407fce:	c87ff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20407fd2:	87aa                	mv	a5,a0
20407fd4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |= value;
20407fd8:	fec42783          	lw	a5,-20(s0)
20407fdc:	07b1                	addi	a5,a5,12
20407fde:	4398                	lw	a4,0(a5)
20407fe0:	fd842783          	lw	a5,-40(s0)
20407fe4:	fec42683          	lw	a3,-20(s0)
20407fe8:	06b1                	addi	a3,a3,12
20407fea:	8fd9                	or	a5,a5,a4
20407fec:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:69

    return 0;
20407fee:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70
}
20407ff0:	853e                	mv	a0,a5
20407ff2:	50b2                	lw	ra,44(sp)
20407ff4:	5422                	lw	s0,40(sp)
20407ff6:	6145                	addi	sp,sp,48
20407ff8:	8082                	ret

20407ffa <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio, long value)
{
20407ffa:	7179                	addi	sp,sp,-48
20407ffc:	d606                	sw	ra,44(sp)
20407ffe:	d422                	sw	s0,40(sp)
20408000:	1800                	addi	s0,sp,48
20408002:	fca42e23          	sw	a0,-36(s0)
20408006:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040800a:	fdc42503          	lw	a0,-36(s0)
2040800e:	c47ff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20408012:	87aa                	mv	a5,a0
20408014:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:76

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &= ~value;
20408018:	fec42783          	lw	a5,-20(s0)
2040801c:	07b1                	addi	a5,a5,12
2040801e:	439c                	lw	a5,0(a5)
20408020:	fd842703          	lw	a4,-40(s0)
20408024:	fff74713          	not	a4,a4
20408028:	86ba                	mv	a3,a4
2040802a:	fec42703          	lw	a4,-20(s0)
2040802e:	0731                	addi	a4,a4,12
20408030:	8ff5                	and	a5,a5,a3
20408032:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78

    return 0;
20408034:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:79
}
20408036:	853e                	mv	a0,a5
20408038:	50b2                	lw	ra,44(sp)
2040803a:	5422                	lw	s0,40(sp)
2040803c:	6145                	addi	sp,sp,48
2040803e:	8082                	ret

20408040 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:82

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio, long value)
{
20408040:	7179                	addi	sp,sp,-48
20408042:	d606                	sw	ra,44(sp)
20408044:	d422                	sw	s0,40(sp)
20408046:	1800                	addi	s0,sp,48
20408048:	fca42e23          	sw	a0,-36(s0)
2040804c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20408050:	fdc42503          	lw	a0,-36(s0)
20408054:	c01ff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20408058:	87aa                	mv	a5,a0
2040805a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
2040805e:	fec42783          	lw	a5,-20(s0)
20408062:	07b1                	addi	a5,a5,12
20408064:	4398                	lw	a4,0(a5)
20408066:	fd842783          	lw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2040806a:	fec42683          	lw	a3,-20(s0)
2040806e:	06b1                	addi	a3,a3,12
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
20408070:	8fb9                	xor	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20408072:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88

    return 0;
20408074:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:89
}
20408076:	853e                	mv	a0,a5
20408078:	50b2                	lw	ra,44(sp)
2040807a:	5422                	lw	s0,40(sp)
2040807c:	6145                	addi	sp,sp,48
2040807e:	8082                	ret

20408080 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source, long dest)
{
20408080:	7179                	addi	sp,sp,-48
20408082:	d606                	sw	ra,44(sp)
20408084:	d422                	sw	s0,40(sp)
20408086:	1800                	addi	s0,sp,48
20408088:	fca42e23          	sw	a0,-36(s0)
2040808c:	fcb42c23          	sw	a1,-40(s0)
20408090:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:93
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20408094:	fdc42503          	lw	a0,-36(s0)
20408098:	bbdff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
2040809c:	87aa                	mv	a5,a0
2040809e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) &= ~source;
204080a2:	fec42783          	lw	a5,-20(s0)
204080a6:	03c78793          	addi	a5,a5,60
204080aa:	439c                	lw	a5,0(a5)
204080ac:	fd842703          	lw	a4,-40(s0)
204080b0:	fff74713          	not	a4,a4
204080b4:	86ba                	mv	a3,a4
204080b6:	fec42703          	lw	a4,-20(s0)
204080ba:	03c70713          	addi	a4,a4,60
204080be:	8ff5                	and	a5,a5,a3
204080c0:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  |= dest;
204080c2:	fec42783          	lw	a5,-20(s0)
204080c6:	03878793          	addi	a5,a5,56
204080ca:	4398                	lw	a4,0(a5)
204080cc:	fd442783          	lw	a5,-44(s0)
204080d0:	fec42683          	lw	a3,-20(s0)
204080d4:	03868693          	addi	a3,a3,56
204080d8:	8fd9                	or	a5,a5,a4
204080da:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:98

    return 0;
204080dc:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99
}
204080de:	853e                	mv	a0,a5
204080e0:	50b2                	lw	ra,44(sp)
204080e2:	5422                	lw	s0,40(sp)
204080e4:	6145                	addi	sp,sp,48
204080e6:	8082                	ret

204080e8 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:102

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio, long source)
{
204080e8:	7179                	addi	sp,sp,-48
204080ea:	d606                	sw	ra,44(sp)
204080ec:	d422                	sw	s0,40(sp)
204080ee:	1800                	addi	s0,sp,48
204080f0:	fca42e23          	sw	a0,-36(s0)
204080f4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204080f8:	fdc42503          	lw	a0,-36(s0)
204080fc:	b59ff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20408100:	87aa                	mv	a5,a0
20408102:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:105

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  &= ~source;
20408106:	fec42783          	lw	a5,-20(s0)
2040810a:	03878793          	addi	a5,a5,56
2040810e:	439c                	lw	a5,0(a5)
20408110:	fd842703          	lw	a4,-40(s0)
20408114:	fff74713          	not	a4,a4
20408118:	86ba                	mv	a3,a4
2040811a:	fec42703          	lw	a4,-20(s0)
2040811e:	03870713          	addi	a4,a4,56
20408122:	8ff5                	and	a5,a5,a3
20408124:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107

    return 0;
20408126:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20408128:	853e                	mv	a0,a5
2040812a:	50b2                	lw	ra,44(sp)
2040812c:	5422                	lw	s0,40(sp)
2040812e:	6145                	addi	sp,sp,48
20408130:	8082                	ret

20408132 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio, long source, int intr_type)
{
20408132:	7179                	addi	sp,sp,-48
20408134:	d606                	sw	ra,44(sp)
20408136:	d422                	sw	s0,40(sp)
20408138:	1800                	addi	s0,sp,48
2040813a:	fca42e23          	sw	a0,-36(s0)
2040813e:	fcb42c23          	sw	a1,-40(s0)
20408142:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20408146:	fdc42503          	lw	a0,-36(s0)
2040814a:	b0bff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
2040814e:	87aa                	mv	a5,a0
20408150:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    switch (intr_type)
20408154:	fd442703          	lw	a4,-44(s0)
20408158:	479d                	li	a5,7
2040815a:	1ce7e963          	bltu	a5,a4,2040832c <__metal_driver_sifive_gpio0_config_int+0x1fa>
2040815e:	fd442783          	lw	a5,-44(s0)
20408162:	00279713          	slli	a4,a5,0x2
20408166:	204097b7          	lui	a5,0x20409
2040816a:	5e478793          	addi	a5,a5,1508 # 204095e4 <__metal_driver_vtable_riscv_plic0+0x4c>
2040816e:	97ba                	add	a5,a5,a4
20408170:	439c                	lw	a5,0(a5)
20408172:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117
    {
        case METAL_GPIO_INT_DISABLE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  &= ~source;
20408174:	fec42783          	lw	a5,-20(s0)
20408178:	07e1                	addi	a5,a5,24
2040817a:	439c                	lw	a5,0(a5)
2040817c:	fd842703          	lw	a4,-40(s0)
20408180:	fff74713          	not	a4,a4
20408184:	86ba                	mv	a3,a4
20408186:	fec42703          	lw	a4,-20(s0)
2040818a:	0761                	addi	a4,a4,24
2040818c:	8ff5                	and	a5,a5,a3
2040818e:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  &= ~source;
20408190:	fec42783          	lw	a5,-20(s0)
20408194:	02078793          	addi	a5,a5,32
20408198:	439c                	lw	a5,0(a5)
2040819a:	fd842703          	lw	a4,-40(s0)
2040819e:	fff74713          	not	a4,a4
204081a2:	86ba                	mv	a3,a4
204081a4:	fec42703          	lw	a4,-20(s0)
204081a8:	02070713          	addi	a4,a4,32
204081ac:	8ff5                	and	a5,a5,a3
204081ae:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:119
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  &= ~source;
204081b0:	fec42783          	lw	a5,-20(s0)
204081b4:	02878793          	addi	a5,a5,40
204081b8:	439c                	lw	a5,0(a5)
204081ba:	fd842703          	lw	a4,-40(s0)
204081be:	fff74713          	not	a4,a4
204081c2:	86ba                	mv	a3,a4
204081c4:	fec42703          	lw	a4,-20(s0)
204081c8:	02870713          	addi	a4,a4,40
204081cc:	8ff5                	and	a5,a5,a3
204081ce:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:120
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  &= ~source;
204081d0:	fec42783          	lw	a5,-20(s0)
204081d4:	03078793          	addi	a5,a5,48
204081d8:	439c                	lw	a5,0(a5)
204081da:	fd842703          	lw	a4,-40(s0)
204081de:	fff74713          	not	a4,a4
204081e2:	86ba                	mv	a3,a4
204081e4:	fec42703          	lw	a4,-20(s0)
204081e8:	03070713          	addi	a4,a4,48
204081ec:	8ff5                	and	a5,a5,a3
204081ee:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121
            break;
204081f0:	aa35                	j	2040832c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:123
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
204081f2:	fec42783          	lw	a5,-20(s0)
204081f6:	07e1                	addi	a5,a5,24
204081f8:	4398                	lw	a4,0(a5)
204081fa:	fd842783          	lw	a5,-40(s0)
204081fe:	fec42683          	lw	a3,-20(s0)
20408202:	06e1                	addi	a3,a3,24
20408204:	8fd9                	or	a5,a5,a4
20408206:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124
            break;
20408208:	a215                	j	2040832c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:126
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
2040820a:	fec42783          	lw	a5,-20(s0)
2040820e:	02078793          	addi	a5,a5,32
20408212:	4398                	lw	a4,0(a5)
20408214:	fd842783          	lw	a5,-40(s0)
20408218:	fec42683          	lw	a3,-20(s0)
2040821c:	02068693          	addi	a3,a3,32
20408220:	8fd9                	or	a5,a5,a4
20408222:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
            break;
20408224:	a221                	j	2040832c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20408226:	fec42783          	lw	a5,-20(s0)
2040822a:	07e1                	addi	a5,a5,24
2040822c:	4398                	lw	a4,0(a5)
2040822e:	fd842783          	lw	a5,-40(s0)
20408232:	fec42683          	lw	a3,-20(s0)
20408236:	06e1                	addi	a3,a3,24
20408238:	8fd9                	or	a5,a5,a4
2040823a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:130
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
2040823c:	fec42783          	lw	a5,-20(s0)
20408240:	02078793          	addi	a5,a5,32
20408244:	4398                	lw	a4,0(a5)
20408246:	fd842783          	lw	a5,-40(s0)
2040824a:	fec42683          	lw	a3,-20(s0)
2040824e:	02068693          	addi	a3,a3,32
20408252:	8fd9                	or	a5,a5,a4
20408254:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
            break;
20408256:	a8d9                	j	2040832c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20408258:	fec42783          	lw	a5,-20(s0)
2040825c:	02878793          	addi	a5,a5,40
20408260:	4398                	lw	a4,0(a5)
20408262:	fd842783          	lw	a5,-40(s0)
20408266:	fec42683          	lw	a3,-20(s0)
2040826a:	02868693          	addi	a3,a3,40
2040826e:	8fd9                	or	a5,a5,a4
20408270:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
            break;
20408272:	a86d                	j	2040832c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:136
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20408274:	fec42783          	lw	a5,-20(s0)
20408278:	03078793          	addi	a5,a5,48
2040827c:	4398                	lw	a4,0(a5)
2040827e:	fd842783          	lw	a5,-40(s0)
20408282:	fec42683          	lw	a3,-20(s0)
20408286:	03068693          	addi	a3,a3,48
2040828a:	8fd9                	or	a5,a5,a4
2040828c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
            break;
2040828e:	a879                	j	2040832c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:139
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20408290:	fec42783          	lw	a5,-20(s0)
20408294:	02878793          	addi	a5,a5,40
20408298:	4398                	lw	a4,0(a5)
2040829a:	fd842783          	lw	a5,-40(s0)
2040829e:	fec42683          	lw	a3,-20(s0)
204082a2:	02868693          	addi	a3,a3,40
204082a6:	8fd9                	or	a5,a5,a4
204082a8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:140
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
204082aa:	fec42783          	lw	a5,-20(s0)
204082ae:	03078793          	addi	a5,a5,48
204082b2:	4398                	lw	a4,0(a5)
204082b4:	fd842783          	lw	a5,-40(s0)
204082b8:	fec42683          	lw	a3,-20(s0)
204082bc:	03068693          	addi	a3,a3,48
204082c0:	8fd9                	or	a5,a5,a4
204082c2:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
            break;
204082c4:	a0a5                	j	2040832c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:143
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
204082c6:	fec42783          	lw	a5,-20(s0)
204082ca:	07e1                	addi	a5,a5,24
204082cc:	4398                	lw	a4,0(a5)
204082ce:	fd842783          	lw	a5,-40(s0)
204082d2:	fec42683          	lw	a3,-20(s0)
204082d6:	06e1                	addi	a3,a3,24
204082d8:	8fd9                	or	a5,a5,a4
204082da:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:144
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
204082dc:	fec42783          	lw	a5,-20(s0)
204082e0:	02078793          	addi	a5,a5,32
204082e4:	4398                	lw	a4,0(a5)
204082e6:	fd842783          	lw	a5,-40(s0)
204082ea:	fec42683          	lw	a3,-20(s0)
204082ee:	02068693          	addi	a3,a3,32
204082f2:	8fd9                	or	a5,a5,a4
204082f4:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
204082f6:	fec42783          	lw	a5,-20(s0)
204082fa:	02878793          	addi	a5,a5,40
204082fe:	4398                	lw	a4,0(a5)
20408300:	fd842783          	lw	a5,-40(s0)
20408304:	fec42683          	lw	a3,-20(s0)
20408308:	02868693          	addi	a3,a3,40
2040830c:	8fd9                	or	a5,a5,a4
2040830e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:146
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20408310:	fec42783          	lw	a5,-20(s0)
20408314:	03078793          	addi	a5,a5,48
20408318:	4398                	lw	a4,0(a5)
2040831a:	fd842783          	lw	a5,-40(s0)
2040831e:	fec42683          	lw	a3,-20(s0)
20408322:	03068693          	addi	a3,a3,48
20408326:	8fd9                	or	a5,a5,a4
20408328:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
            break;
2040832a:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:149
    }
    return 0;
2040832c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:150
}
2040832e:	853e                	mv	a0,a5
20408330:	50b2                	lw	ra,44(sp)
20408332:	5422                	lw	s0,40(sp)
20408334:	6145                	addi	sp,sp,48
20408336:	8082                	ret

20408338 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:153

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source, int intr_type)
{
20408338:	7179                	addi	sp,sp,-48
2040833a:	d606                	sw	ra,44(sp)
2040833c:	d422                	sw	s0,40(sp)
2040833e:	1800                	addi	s0,sp,48
20408340:	fca42e23          	sw	a0,-36(s0)
20408344:	fcb42c23          	sw	a1,-40(s0)
20408348:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:154
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040834c:	fdc42503          	lw	a0,-36(s0)
20408350:	905ff0ef          	jal	ra,20407c54 <__metal_driver_sifive_gpio0_base>
20408354:	87aa                	mv	a5,a0
20408356:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156

    switch (intr_type)
2040835a:	fd442703          	lw	a4,-44(s0)
2040835e:	479d                	li	a5,7
20408360:	14e7ea63          	bltu	a5,a4,204084b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20408364:	fd442783          	lw	a5,-44(s0)
20408368:	00279713          	slli	a4,a5,0x2
2040836c:	204097b7          	lui	a5,0x20409
20408370:	60478793          	addi	a5,a5,1540 # 20409604 <__metal_driver_vtable_riscv_plic0+0x6c>
20408374:	97ba                	add	a5,a5,a4
20408376:	439c                	lw	a5,0(a5)
20408378:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    {
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
2040837a:	fec42783          	lw	a5,-20(s0)
2040837e:	07f1                	addi	a5,a5,28
20408380:	4398                	lw	a4,0(a5)
20408382:	fd842783          	lw	a5,-40(s0)
20408386:	fec42683          	lw	a3,-20(s0)
2040838a:	06f1                	addi	a3,a3,28
2040838c:	8fd9                	or	a5,a5,a4
2040838e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:160
            break;
20408390:	a215                	j	204084b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20408392:	fec42783          	lw	a5,-20(s0)
20408396:	02478793          	addi	a5,a5,36
2040839a:	4398                	lw	a4,0(a5)
2040839c:	fd842783          	lw	a5,-40(s0)
204083a0:	fec42683          	lw	a3,-20(s0)
204083a4:	02468693          	addi	a3,a3,36
204083a8:	8fd9                	or	a5,a5,a4
204083aa:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:163
            break;
204083ac:	a221                	j	204084b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
204083ae:	fec42783          	lw	a5,-20(s0)
204083b2:	07f1                	addi	a5,a5,28
204083b4:	4398                	lw	a4,0(a5)
204083b6:	fd842783          	lw	a5,-40(s0)
204083ba:	fec42683          	lw	a3,-20(s0)
204083be:	06f1                	addi	a3,a3,28
204083c0:	8fd9                	or	a5,a5,a4
204083c2:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:166
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
204083c4:	fec42783          	lw	a5,-20(s0)
204083c8:	02478793          	addi	a5,a5,36
204083cc:	4398                	lw	a4,0(a5)
204083ce:	fd842783          	lw	a5,-40(s0)
204083d2:	fec42683          	lw	a3,-20(s0)
204083d6:	02468693          	addi	a3,a3,36
204083da:	8fd9                	or	a5,a5,a4
204083dc:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
            break;
204083de:	a8d9                	j	204084b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
204083e0:	fec42783          	lw	a5,-20(s0)
204083e4:	02c78793          	addi	a5,a5,44
204083e8:	4398                	lw	a4,0(a5)
204083ea:	fd842783          	lw	a5,-40(s0)
204083ee:	fec42683          	lw	a3,-20(s0)
204083f2:	02c68693          	addi	a3,a3,44
204083f6:	8fd9                	or	a5,a5,a4
204083f8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:170
            break;
204083fa:	a86d                	j	204084b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
204083fc:	fec42783          	lw	a5,-20(s0)
20408400:	03478793          	addi	a5,a5,52
20408404:	4398                	lw	a4,0(a5)
20408406:	fd842783          	lw	a5,-40(s0)
2040840a:	fec42683          	lw	a3,-20(s0)
2040840e:	03468693          	addi	a3,a3,52
20408412:	8fd9                	or	a5,a5,a4
20408414:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:173
            break;
20408416:	a879                	j	204084b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20408418:	fec42783          	lw	a5,-20(s0)
2040841c:	02c78793          	addi	a5,a5,44
20408420:	4398                	lw	a4,0(a5)
20408422:	fd842783          	lw	a5,-40(s0)
20408426:	fec42683          	lw	a3,-20(s0)
2040842a:	02c68693          	addi	a3,a3,44
2040842e:	8fd9                	or	a5,a5,a4
20408430:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:176
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20408432:	fec42783          	lw	a5,-20(s0)
20408436:	03478793          	addi	a5,a5,52
2040843a:	4398                	lw	a4,0(a5)
2040843c:	fd842783          	lw	a5,-40(s0)
20408440:	fec42683          	lw	a3,-20(s0)
20408444:	03468693          	addi	a3,a3,52
20408448:	8fd9                	or	a5,a5,a4
2040844a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:177
            break;
2040844c:	a0a5                	j	204084b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
2040844e:	fec42783          	lw	a5,-20(s0)
20408452:	07f1                	addi	a5,a5,28
20408454:	4398                	lw	a4,0(a5)
20408456:	fd842783          	lw	a5,-40(s0)
2040845a:	fec42683          	lw	a3,-20(s0)
2040845e:	06f1                	addi	a3,a3,28
20408460:	8fd9                	or	a5,a5,a4
20408462:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:180
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20408464:	fec42783          	lw	a5,-20(s0)
20408468:	02478793          	addi	a5,a5,36
2040846c:	4398                	lw	a4,0(a5)
2040846e:	fd842783          	lw	a5,-40(s0)
20408472:	fec42683          	lw	a3,-20(s0)
20408476:	02468693          	addi	a3,a3,36
2040847a:	8fd9                	or	a5,a5,a4
2040847c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
2040847e:	fec42783          	lw	a5,-20(s0)
20408482:	02c78793          	addi	a5,a5,44
20408486:	4398                	lw	a4,0(a5)
20408488:	fd842783          	lw	a5,-40(s0)
2040848c:	fec42683          	lw	a3,-20(s0)
20408490:	02c68693          	addi	a3,a3,44
20408494:	8fd9                	or	a5,a5,a4
20408496:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:182
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20408498:	fec42783          	lw	a5,-20(s0)
2040849c:	03478793          	addi	a5,a5,52
204084a0:	4398                	lw	a4,0(a5)
204084a2:	fd842783          	lw	a5,-40(s0)
204084a6:	fec42683          	lw	a3,-20(s0)
204084aa:	03468693          	addi	a3,a3,52
204084ae:	8fd9                	or	a5,a5,a4
204084b0:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:183
            break;
204084b2:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
    }
    return 0;
204084b4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:186
}
204084b6:	853e                	mv	a0,a5
204084b8:	50b2                	lw	ra,44(sp)
204084ba:	5422                	lw	s0,40(sp)
204084bc:	6145                	addi	sp,sp,48
204084be:	8082                	ret

204084c0 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:190

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio)
{
204084c0:	1101                	addi	sp,sp,-32
204084c2:	ce06                	sw	ra,28(sp)
204084c4:	cc22                	sw	s0,24(sp)
204084c6:	1000                	addi	s0,sp,32
204084c8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:191
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
204084cc:	fec42503          	lw	a0,-20(s0)
204084d0:	faaff0ef          	jal	ra,20407c7a <__metal_driver_sifive_gpio0_interrupt_parent>
204084d4:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
}
204084d6:	853e                	mv	a0,a5
204084d8:	40f2                	lw	ra,28(sp)
204084da:	4462                	lw	s0,24(sp)
204084dc:	6105                	addi	sp,sp,32
204084de:	8082                	ret

204084e0 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin)
{
204084e0:	7179                	addi	sp,sp,-48
204084e2:	d606                	sw	ra,44(sp)
204084e4:	d422                	sw	s0,40(sp)
204084e6:	1800                	addi	s0,sp,48
204084e8:	fca42e23          	sw	a0,-36(s0)
204084ec:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:197
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
204084f0:	fd842583          	lw	a1,-40(s0)
204084f4:	fdc42503          	lw	a0,-36(s0)
204084f8:	facff0ef          	jal	ra,20407ca4 <__metal_driver_sifive_gpio0_interrupt_lines>
204084fc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    return irq;
20408500:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
}
20408504:	853e                	mv	a0,a5
20408506:	50b2                	lw	ra,44(sp)
20408508:	5422                	lw	s0,40(sp)
2040850a:	6145                	addi	sp,sp,48
2040850c:	8082                	ret

2040850e <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:564

/* --------------------- sifive_trace ------------ */

/* --------------------- sifive_uart0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_uart0_control_base(struct metal_uart *uart)
{
2040850e:	1101                	addi	sp,sp,-32
20408510:	ce22                	sw	s0,28(sp)
20408512:	1000                	addi	s0,sp,32
20408514:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:565
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408518:	fec42703          	lw	a4,-20(s0)
2040851c:	800007b7          	lui	a5,0x80000
20408520:	7b878793          	addi	a5,a5,1976 # 800007b8 <metal_segment_heap_target_end+0xfffff2e4>
20408524:	00f71563          	bne	a4,a5,2040852e <__metal_driver_sifive_uart0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:566
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20408528:	100137b7          	lui	a5,0x10013
2040852c:	a011                	j	20408530 <__metal_driver_sifive_uart0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:569
	}
	else {
		return 0;
2040852e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:571
	}
}
20408530:	853e                	mv	a0,a5
20408532:	4472                	lw	s0,28(sp)
20408534:	6105                	addi	sp,sp,32
20408536:	8082                	ret

20408538 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:594
		return 0;
	}
}

static __inline__ struct metal_interrupt * __metal_driver_sifive_uart0_interrupt_parent(struct metal_uart *uart)
{
20408538:	1101                	addi	sp,sp,-32
2040853a:	ce22                	sw	s0,28(sp)
2040853c:	1000                	addi	s0,sp,32
2040853e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:595
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408542:	fec42703          	lw	a4,-20(s0)
20408546:	800007b7          	lui	a5,0x80000
2040854a:	7b878793          	addi	a5,a5,1976 # 800007b8 <metal_segment_heap_target_end+0xfffff2e4>
2040854e:	00f71763          	bne	a4,a5,2040855c <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:596
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20408552:	800007b7          	lui	a5,0x80000
20408556:	4b878793          	addi	a5,a5,1208 # 800004b8 <metal_segment_heap_target_end+0xffffefe4>
2040855a:	a011                	j	2040855e <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:599
	}
	else {
		return 0;
2040855c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:601
	}
}
2040855e:	853e                	mv	a0,a5
20408560:	4472                	lw	s0,28(sp)
20408562:	6105                	addi	sp,sp,32
20408564:	8082                	ret

20408566 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:604

static __inline__ int __metal_driver_sifive_uart0_interrupt_line(struct metal_uart *uart)
{
20408566:	1101                	addi	sp,sp,-32
20408568:	ce22                	sw	s0,28(sp)
2040856a:	1000                	addi	s0,sp,32
2040856c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:605
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408570:	fec42703          	lw	a4,-20(s0)
20408574:	800007b7          	lui	a5,0x80000
20408578:	7b878793          	addi	a5,a5,1976 # 800007b8 <metal_segment_heap_target_end+0xfffff2e4>
2040857c:	00f71463          	bne	a4,a5,20408584 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:606
		return 5;
20408580:	4795                	li	a5,5
20408582:	a011                	j	20408586 <__metal_driver_sifive_uart0_interrupt_line+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:609
	}
	else {
		return 0;
20408584:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:611
	}
}
20408586:	853e                	mv	a0,a5
20408588:	4472                	lw	s0,28(sp)
2040858a:	6105                	addi	sp,sp,32
2040858c:	8082                	ret

2040858e <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:614

static __inline__ struct metal_clock * __metal_driver_sifive_uart0_clock(struct metal_uart *uart)
{
2040858e:	1101                	addi	sp,sp,-32
20408590:	ce22                	sw	s0,28(sp)
20408592:	1000                	addi	s0,sp,32
20408594:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:615
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20408598:	fec42703          	lw	a4,-20(s0)
2040859c:	800007b7          	lui	a5,0x80000
204085a0:	7b878793          	addi	a5,a5,1976 # 800007b8 <metal_segment_heap_target_end+0xfffff2e4>
204085a4:	00f71763          	bne	a4,a5,204085b2 <__metal_driver_sifive_uart0_clock+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:616
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
204085a8:	800007b7          	lui	a5,0x80000
204085ac:	0f078793          	addi	a5,a5,240 # 800000f0 <metal_segment_heap_target_end+0xffffec1c>
204085b0:	a011                	j	204085b4 <__metal_driver_sifive_uart0_clock+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:619
	}
	else {
		return 0;
204085b2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:621
	}
}
204085b4:	853e                	mv	a0,a5
204085b6:	4472                	lw	s0,28(sp)
204085b8:	6105                	addi	sp,sp,32
204085ba:	8082                	ret

204085bc <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:624

static __inline__ struct __metal_driver_sifive_gpio0 * __metal_driver_sifive_uart0_pinmux(struct metal_uart *uart)
{
204085bc:	1101                	addi	sp,sp,-32
204085be:	ce22                	sw	s0,28(sp)
204085c0:	1000                	addi	s0,sp,32
204085c2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:625
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204085c6:	fec42703          	lw	a4,-20(s0)
204085ca:	800007b7          	lui	a5,0x80000
204085ce:	7b878793          	addi	a5,a5,1976 # 800007b8 <metal_segment_heap_target_end+0xfffff2e4>
204085d2:	00f71563          	bne	a4,a5,204085dc <__metal_driver_sifive_uart0_pinmux+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:626
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
204085d6:	81818793          	addi	a5,gp,-2024 # 800007f0 <__metal_dt_gpio_10012000>
204085da:	a011                	j	204085de <__metal_driver_sifive_uart0_pinmux+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:629
	}
	else {
		return 0;
204085dc:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:631
	}
}
204085de:	853e                	mv	a0,a5
204085e0:	4472                	lw	s0,28(sp)
204085e2:	6105                	addi	sp,sp,32
204085e4:	8082                	ret

204085e6 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:634

static __inline__ unsigned long __metal_driver_sifive_uart0_pinmux_output_selector(struct metal_uart *uart)
{
204085e6:	1101                	addi	sp,sp,-32
204085e8:	ce22                	sw	s0,28(sp)
204085ea:	1000                	addi	s0,sp,32
204085ec:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:635
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204085f0:	fec42703          	lw	a4,-20(s0)
204085f4:	800007b7          	lui	a5,0x80000
204085f8:	7b878793          	addi	a5,a5,1976 # 800007b8 <metal_segment_heap_target_end+0xfffff2e4>
204085fc:	00f71563          	bne	a4,a5,20408606 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:636
		return 196608;
20408600:	000307b7          	lui	a5,0x30
20408604:	a011                	j	20408608 <__metal_driver_sifive_uart0_pinmux_output_selector+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:639
	}
	else {
		return 0;
20408606:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:641
	}
}
20408608:	853e                	mv	a0,a5
2040860a:	4472                	lw	s0,28(sp)
2040860c:	6105                	addi	sp,sp,32
2040860e:	8082                	ret

20408610 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:644

static __inline__ unsigned long __metal_driver_sifive_uart0_pinmux_source_selector(struct metal_uart *uart)
{
20408610:	1101                	addi	sp,sp,-32
20408612:	ce22                	sw	s0,28(sp)
20408614:	1000                	addi	s0,sp,32
20408616:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:645
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040861a:	fec42703          	lw	a4,-20(s0)
2040861e:	800007b7          	lui	a5,0x80000
20408622:	7b878793          	addi	a5,a5,1976 # 800007b8 <metal_segment_heap_target_end+0xfffff2e4>
20408626:	00f71563          	bne	a4,a5,20408630 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:646
		return 196608;
2040862a:	000307b7          	lui	a5,0x30
2040862e:	a011                	j	20408632 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:649
	}
	else {
		return 0;
20408630:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:651
	}
}
20408632:	853e                	mv	a0,a5
20408634:	4472                	lw	s0,28(sp)
20408636:	6105                	addi	sp,sp,32
20408638:	8082                	ret

2040863a <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:32
#define UART_REGB(offset)  (__METAL_ACCESS_ONCE((__metal_io_u8  *)UART_REG(offset)))
#define UART_REGW(offset)  (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart)
{
2040863a:	1101                	addi	sp,sp,-32
2040863c:	ce06                	sw	ra,28(sp)
2040863e:	cc22                	sw	s0,24(sp)
20408640:	1000                	addi	s0,sp,32
20408642:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:33
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20408646:	fec42503          	lw	a0,-20(s0)
2040864a:	35fd                	jal	20408538 <__metal_driver_sifive_uart0_interrupt_parent>
2040864c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:34
}
2040864e:	853e                	mv	a0,a5
20408650:	40f2                	lw	ra,28(sp)
20408652:	4462                	lw	s0,24(sp)
20408654:	6105                	addi	sp,sp,32
20408656:	8082                	ret

20408658 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:37

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart)
{
20408658:	1101                	addi	sp,sp,-32
2040865a:	ce06                	sw	ra,28(sp)
2040865c:	cc22                	sw	s0,24(sp)
2040865e:	1000                	addi	s0,sp,32
20408660:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:38
    return (__metal_driver_sifive_uart0_interrupt_line(uart) + METAL_INTERRUPT_ID_GL0);
20408664:	fec42503          	lw	a0,-20(s0)
20408668:	3dfd                	jal	20408566 <__metal_driver_sifive_uart0_interrupt_line>
2040866a:	87aa                	mv	a5,a0
2040866c:	02078793          	addi	a5,a5,32 # 30020 <__heap_size+0x2f820>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:39
}
20408670:	853e                	mv	a0,a5
20408672:	40f2                	lw	ra,28(sp)
20408674:	4462                	lw	s0,24(sp)
20408676:	6105                	addi	sp,sp,32
20408678:	8082                	ret

2040867a <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:43


int __metal_driver_sifive_uart0_txready(struct metal_uart *uart)
{
2040867a:	7179                	addi	sp,sp,-48
2040867c:	d606                	sw	ra,44(sp)
2040867e:	d422                	sw	s0,40(sp)
20408680:	1800                	addi	s0,sp,48
20408682:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:44
  long control_base = __metal_driver_sifive_uart0_control_base(uart);
20408686:	fdc42503          	lw	a0,-36(s0)
2040868a:	3551                	jal	2040850e <__metal_driver_sifive_uart0_control_base>
2040868c:	87aa                	mv	a5,a0
2040868e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:46

  return !((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20408692:	fec42783          	lw	a5,-20(s0)
20408696:	439c                	lw	a5,0(a5)
20408698:	fff7c793          	not	a5,a5
2040869c:	83fd                	srli	a5,a5,0x1f
2040869e:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:47
}
204086a2:	853e                	mv	a0,a5
204086a4:	50b2                	lw	ra,44(sp)
204086a6:	5422                	lw	s0,40(sp)
204086a8:	6145                	addi	sp,sp,48
204086aa:	8082                	ret

204086ac <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:51


int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c)
{
204086ac:	7179                	addi	sp,sp,-48
204086ae:	d606                	sw	ra,44(sp)
204086b0:	d422                	sw	s0,40(sp)
204086b2:	1800                	addi	s0,sp,48
204086b4:	fca42e23          	sw	a0,-36(s0)
204086b8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:52
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204086bc:	fdc42503          	lw	a0,-36(s0)
204086c0:	e4fff0ef          	jal	ra,2040850e <__metal_driver_sifive_uart0_control_base>
204086c4:	87aa                	mv	a5,a0
204086c6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54

    while (!__metal_driver_sifive_uart0_txready(uart)) {
204086ca:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54 (discriminator 1)
204086cc:	fdc42503          	lw	a0,-36(s0)
204086d0:	376d                	jal	2040867a <__metal_driver_sifive_uart0_txready>
204086d2:	87aa                	mv	a5,a0
204086d4:	dfe5                	beqz	a5,204086cc <__metal_driver_sifive_uart0_putc+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:57
		/* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
204086d6:	fec42783          	lw	a5,-20(s0)
204086da:	fd842703          	lw	a4,-40(s0)
204086de:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:58
    return 0;
204086e0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:59
}
204086e2:	853e                	mv	a0,a5
204086e4:	50b2                	lw	ra,44(sp)
204086e6:	5422                	lw	s0,40(sp)
204086e8:	6145                	addi	sp,sp,48
204086ea:	8082                	ret

204086ec <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:63


int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c)
{
204086ec:	7179                	addi	sp,sp,-48
204086ee:	d606                	sw	ra,44(sp)
204086f0:	d422                	sw	s0,40(sp)
204086f2:	1800                	addi	s0,sp,48
204086f4:	fca42e23          	sw	a0,-36(s0)
204086f8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:65
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204086fc:	fdc42503          	lw	a0,-36(s0)
20408700:	e0fff0ef          	jal	ra,2040850e <__metal_driver_sifive_uart0_control_base>
20408704:	87aa                	mv	a5,a0
20408706:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:67
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);;
2040870a:	fec42783          	lw	a5,-20(s0)
2040870e:	0791                	addi	a5,a5,4
20408710:	439c                	lw	a5,0(a5)
20408712:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:68
    if( ch & UART_RXEMPTY ){
20408716:	fe842783          	lw	a5,-24(s0)
2040871a:	0007d763          	bgez	a5,20408728 <__metal_driver_sifive_uart0_getc+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:69
      *c = -1; /* aka: EOF in most of the world */
2040871e:	fd842783          	lw	a5,-40(s0)
20408722:	577d                	li	a4,-1
20408724:	c398                	sw	a4,0(a5)
20408726:	a801                	j	20408736 <__metal_driver_sifive_uart0_getc+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:71
    } else {
      *c = ch & 0x0ff;
20408728:	fe842783          	lw	a5,-24(s0)
2040872c:	0ff7f713          	andi	a4,a5,255
20408730:	fd842783          	lw	a5,-40(s0)
20408734:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:73
    }
    return 0;
20408736:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:74
}
20408738:	853e                	mv	a0,a5
2040873a:	50b2                	lw	ra,44(sp)
2040873c:	5422                	lw	s0,40(sp)
2040873e:	6145                	addi	sp,sp,48
20408740:	8082                	ret

20408742 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:78


int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart)
{
20408742:	7179                	addi	sp,sp,-48
20408744:	d622                	sw	s0,44(sp)
20408746:	1800                	addi	s0,sp,48
20408748:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:79
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2040874c:	fdc42783          	lw	a5,-36(s0)
20408750:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:80
    return uart->baud_rate;
20408754:	fec42783          	lw	a5,-20(s0)
20408758:	43dc                	lw	a5,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:81
}
2040875a:	853e                	mv	a0,a5
2040875c:	5432                	lw	s0,44(sp)
2040875e:	6145                	addi	sp,sp,48
20408760:	8082                	ret

20408762 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:84

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart, int baud_rate)
{
20408762:	7179                	addi	sp,sp,-48
20408764:	d606                	sw	ra,44(sp)
20408766:	d422                	sw	s0,40(sp)
20408768:	1800                	addi	s0,sp,48
2040876a:	fca42e23          	sw	a0,-36(s0)
2040876e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:85
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20408772:	fdc42783          	lw	a5,-36(s0)
20408776:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:86
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
2040877a:	fdc42503          	lw	a0,-36(s0)
2040877e:	d91ff0ef          	jal	ra,2040850e <__metal_driver_sifive_uart0_control_base>
20408782:	87aa                	mv	a5,a0
20408784:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:87
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20408788:	fdc42503          	lw	a0,-36(s0)
2040878c:	e03ff0ef          	jal	ra,2040858e <__metal_driver_sifive_uart0_clock>
20408790:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:89

    uart->baud_rate = baud_rate;
20408794:	fd842703          	lw	a4,-40(s0)
20408798:	fec42783          	lw	a5,-20(s0)
2040879c:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:91

    if (clock != NULL) {
2040879e:	fe442783          	lw	a5,-28(s0)
204087a2:	cbb1                	beqz	a5,204087f6 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:92
        long clock_rate = clock->vtable->get_rate_hz(clock);
204087a4:	fe442783          	lw	a5,-28(s0)
204087a8:	439c                	lw	a5,0(a5)
204087aa:	439c                	lw	a5,0(a5)
204087ac:	fe442503          	lw	a0,-28(s0)
204087b0:	9782                	jalr	a5
204087b2:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:93
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
204087b6:	fe042703          	lw	a4,-32(s0)
204087ba:	fd842783          	lw	a5,-40(s0)
204087be:	02f747b3          	div	a5,a4,a5
204087c2:	fff78713          	addi	a4,a5,-1
204087c6:	fe842783          	lw	a5,-24(s0)
204087ca:	07e1                	addi	a5,a5,24
204087cc:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:94
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
204087ce:	fe842783          	lw	a5,-24(s0)
204087d2:	07a1                	addi	a5,a5,8
204087d4:	439c                	lw	a5,0(a5)
204087d6:	fe842703          	lw	a4,-24(s0)
204087da:	0721                	addi	a4,a4,8
204087dc:	0017e793          	ori	a5,a5,1
204087e0:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:95
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
204087e2:	fe842783          	lw	a5,-24(s0)
204087e6:	07b1                	addi	a5,a5,12
204087e8:	439c                	lw	a5,0(a5)
204087ea:	fe842703          	lw	a4,-24(s0)
204087ee:	0731                	addi	a4,a4,12
204087f0:	0017e793          	ori	a5,a5,1
204087f4:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:97
    }
    return 0;
204087f6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:98
}
204087f8:	853e                	mv	a0,a5
204087fa:	50b2                	lw	ra,44(sp)
204087fc:	5422                	lw	s0,40(sp)
204087fe:	6145                	addi	sp,sp,48
20408800:	8082                	ret

20408802 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:101

static void pre_rate_change_callback_func(void *priv)
{
20408802:	7139                	addi	sp,sp,-64
20408804:	de06                	sw	ra,60(sp)
20408806:	dc22                	sw	s0,56(sp)
20408808:	0080                	addi	s0,sp,64
2040880a:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:102
    struct __metal_driver_sifive_uart0 *uart = priv;
2040880e:	fcc42783          	lw	a5,-52(s0)
20408812:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:103
    long control_base = __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20408816:	fcc42503          	lw	a0,-52(s0)
2040881a:	cf5ff0ef          	jal	ra,2040850e <__metal_driver_sifive_uart0_control_base>
2040881e:	87aa                	mv	a5,a0
20408820:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:104
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20408824:	fcc42503          	lw	a0,-52(s0)
20408828:	d67ff0ef          	jal	ra,2040858e <__metal_driver_sifive_uart0_clock>
2040882c:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:109

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20408830:	fe842783          	lw	a5,-24(s0)
20408834:	07a1                	addi	a5,a5,8
20408836:	4398                	lw	a4,0(a5)
20408838:	fe842783          	lw	a5,-24(s0)
2040883c:	07a1                	addi	a5,a5,8
2040883e:	86be                	mv	a3,a5
20408840:	fff907b7          	lui	a5,0xfff90
20408844:	17fd                	addi	a5,a5,-1
20408846:	8ff9                	and	a5,a5,a4
20408848:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
2040884a:	fe842783          	lw	a5,-24(s0)
2040884e:	07a1                	addi	a5,a5,8
20408850:	4398                	lw	a4,0(a5)
20408852:	fe842783          	lw	a5,-24(s0)
20408856:	07a1                	addi	a5,a5,8
20408858:	86be                	mv	a3,a5
2040885a:	67c1                	lui	a5,0x10
2040885c:	8fd9                	or	a5,a5,a4
2040885e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112

    while((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0) ;
20408860:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112 (discriminator 1)
20408862:	fe842783          	lw	a5,-24(s0)
20408866:	07d1                	addi	a5,a5,20
20408868:	439c                	lw	a5,0(a5)
2040886a:	8b85                	andi	a5,a5,1
2040886c:	dbfd                	beqz	a5,20408862 <pre_rate_change_callback_func+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118

    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol = (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
2040886e:	fe842783          	lw	a5,-24(s0)
20408872:	07a1                	addi	a5,a5,8
20408874:	439c                	lw	a5,0(a5)
20408876:	8b89                	andi	a5,a5,2
20408878:	c399                	beqz	a5,2040887e <pre_rate_change_callback_func+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 1)
2040887a:	47a5                	li	a5,9
2040887c:	a011                	j	20408880 <pre_rate_change_callback_func+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 2)
2040887e:	47a9                	li	a5,10
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 4)
20408880:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:119 (discriminator 4)
    long clk_freq = clock->vtable->get_rate_hz(clock);
20408884:	fe442783          	lw	a5,-28(s0)
20408888:	439c                	lw	a5,0(a5)
2040888a:	439c                	lw	a5,0(a5)
2040888c:	fe442503          	lw	a0,-28(s0)
20408890:	9782                	jalr	a5
20408892:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:120 (discriminator 4)
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20408896:	fe042703          	lw	a4,-32(s0)
2040889a:	fdc42783          	lw	a5,-36(s0)
2040889e:	02f707b3          	mul	a5,a4,a5
204088a2:	873e                	mv	a4,a5
204088a4:	fec42783          	lw	a5,-20(s0)
204088a8:	43dc                	lw	a5,4(a5)
204088aa:	02f757b3          	divu	a5,a4,a5
204088ae:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 4)

    for(volatile long x = 0; x < cycles_to_wait; x++)
204088b2:	fc042a23          	sw	zero,-44(s0)
204088b6:	a039                	j	204088c4 <pre_rate_change_callback_func+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:123 (discriminator 3)
        __asm__("nop");
204088b8:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 3)
    for(volatile long x = 0; x < cycles_to_wait; x++)
204088ba:	fd442783          	lw	a5,-44(s0)
204088be:	0785                	addi	a5,a5,1
204088c0:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 1)
204088c4:	fd442783          	lw	a5,-44(s0)
204088c8:	fd842703          	lw	a4,-40(s0)
204088cc:	fee7c6e3          	blt	a5,a4,204088b8 <pre_rate_change_callback_func+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:124
}
204088d0:	0001                	nop
204088d2:	50f2                	lw	ra,60(sp)
204088d4:	5462                	lw	s0,56(sp)
204088d6:	6121                	addi	sp,sp,64
204088d8:	8082                	ret

204088da <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:127

static void post_rate_change_callback_func(void *priv)
{
204088da:	7179                	addi	sp,sp,-48
204088dc:	d606                	sw	ra,44(sp)
204088de:	d422                	sw	s0,40(sp)
204088e0:	1800                	addi	s0,sp,48
204088e2:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:128
    struct __metal_driver_sifive_uart0 *uart = priv;
204088e6:	fdc42783          	lw	a5,-36(s0)
204088ea:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:129
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
204088ee:	fec42703          	lw	a4,-20(s0)
204088f2:	fec42783          	lw	a5,-20(s0)
204088f6:	43dc                	lw	a5,4(a5)
204088f8:	85be                	mv	a1,a5
204088fa:	853a                	mv	a0,a4
204088fc:	d39fc0ef          	jal	ra,20405634 <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:130
}
20408900:	0001                	nop
20408902:	50b2                	lw	ra,44(sp)
20408904:	5422                	lw	s0,40(sp)
20408906:	6145                	addi	sp,sp,48
20408908:	8082                	ret

2040890a <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:133

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate)
{
2040890a:	7139                	addi	sp,sp,-64
2040890c:	de06                	sw	ra,60(sp)
2040890e:	dc22                	sw	s0,56(sp)
20408910:	0080                	addi	s0,sp,64
20408912:	fca42623          	sw	a0,-52(s0)
20408916:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:134
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2040891a:	fcc42783          	lw	a5,-52(s0)
2040891e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:135
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20408922:	fcc42503          	lw	a0,-52(s0)
20408926:	c69ff0ef          	jal	ra,2040858e <__metal_driver_sifive_uart0_clock>
2040892a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:136
    struct __metal_driver_sifive_gpio0 *pinmux = __metal_driver_sifive_uart0_pinmux(guart);
2040892e:	fcc42503          	lw	a0,-52(s0)
20408932:	c8bff0ef          	jal	ra,204085bc <__metal_driver_sifive_uart0_pinmux>
20408936:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:138

    if(clock != NULL) {
2040893a:	fe842783          	lw	a5,-24(s0)
2040893e:	c7b9                	beqz	a5,2040898c <__metal_driver_sifive_uart0_init+0x82>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:139
        uart->pre_rate_change_callback.callback = &pre_rate_change_callback_func;
20408940:	fec42783          	lw	a5,-20(s0)
20408944:	20409737          	lui	a4,0x20409
20408948:	80270713          	addi	a4,a4,-2046 # 20408802 <pre_rate_change_callback_func>
2040894c:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:140
        uart->pre_rate_change_callback.priv = guart;
2040894e:	fec42783          	lw	a5,-20(s0)
20408952:	fcc42703          	lw	a4,-52(s0)
20408956:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:141
        metal_clock_register_pre_rate_change_callback(clock, &(uart->pre_rate_change_callback));
20408958:	fec42783          	lw	a5,-20(s0)
2040895c:	07a1                	addi	a5,a5,8
2040895e:	85be                	mv	a1,a5
20408960:	fe842503          	lw	a0,-24(s0)
20408964:	20f1                	jal	20408a30 <metal_clock_register_pre_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:143

        uart->post_rate_change_callback.callback = &post_rate_change_callback_func;
20408966:	fec42783          	lw	a5,-20(s0)
2040896a:	20409737          	lui	a4,0x20409
2040896e:	8da70713          	addi	a4,a4,-1830 # 204088da <post_rate_change_callback_func>
20408972:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:144
        uart->post_rate_change_callback.priv = guart;
20408974:	fec42783          	lw	a5,-20(s0)
20408978:	fcc42703          	lw	a4,-52(s0)
2040897c:	cf98                	sw	a4,24(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:145
        metal_clock_register_post_rate_change_callback(clock, &(uart->post_rate_change_callback));
2040897e:	fec42783          	lw	a5,-20(s0)
20408982:	07d1                	addi	a5,a5,20
20408984:	85be                	mv	a1,a5
20408986:	fe842503          	lw	a0,-24(s0)
2040898a:	28d9                	jal	20408a60 <metal_clock_register_post_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:148
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2040898c:	fec42783          	lw	a5,-20(s0)
20408990:	fc842583          	lw	a1,-56(s0)
20408994:	853e                	mv	a0,a5
20408996:	c9ffc0ef          	jal	ra,20405634 <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:150

    if (pinmux != NULL) {
2040899a:	fe442783          	lw	a5,-28(s0)
2040899e:	cb95                	beqz	a5,204089d2 <__metal_driver_sifive_uart0_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:151
        long pinmux_output_selector = __metal_driver_sifive_uart0_pinmux_output_selector(guart);
204089a0:	fcc42503          	lw	a0,-52(s0)
204089a4:	c43ff0ef          	jal	ra,204085e6 <__metal_driver_sifive_uart0_pinmux_output_selector>
204089a8:	87aa                	mv	a5,a0
204089aa:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:152
        long pinmux_source_selector = __metal_driver_sifive_uart0_pinmux_source_selector(guart);
204089ae:	fcc42503          	lw	a0,-52(s0)
204089b2:	c5fff0ef          	jal	ra,20408610 <__metal_driver_sifive_uart0_pinmux_source_selector>
204089b6:	87aa                	mv	a5,a0
204089b8:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:153
        pinmux->gpio.vtable->enable_io(
204089bc:	fe442783          	lw	a5,-28(s0)
204089c0:	439c                	lw	a5,0(a5)
204089c2:	53dc                	lw	a5,36(a5)
204089c4:	fdc42603          	lw	a2,-36(s0)
204089c8:	fe042583          	lw	a1,-32(s0)
204089cc:	fe442503          	lw	a0,-28(s0)
204089d0:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:159
            (struct metal_gpio *) pinmux,
            pinmux_output_selector,
            pinmux_source_selector
        );
    }
}
204089d2:	0001                	nop
204089d4:	50f2                	lw	ra,60(sp)
204089d6:	5462                	lw	s0,56(sp)
204089d8:	6121                	addi	sp,sp,64
204089da:	8082                	ret

204089dc <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:59
}

/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *_metal_clock_append_to_callbacks(metal_clock_callback *list, metal_clock_callback *const cb) {
204089dc:	7179                	addi	sp,sp,-48
204089de:	d622                	sw	s0,44(sp)
204089e0:	1800                	addi	s0,sp,48
204089e2:	fca42e23          	sw	a0,-36(s0)
204089e6:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:60
    cb->_next = NULL;
204089ea:	fd842783          	lw	a5,-40(s0)
204089ee:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:62

    if (!list) {
204089f2:	fdc42783          	lw	a5,-36(s0)
204089f6:	e781                	bnez	a5,204089fe <_metal_clock_append_to_callbacks+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:63
        return cb;
204089f8:	fd842783          	lw	a5,-40(s0)
204089fc:	a035                	j	20408a28 <_metal_clock_append_to_callbacks+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:66
    }

    metal_clock_callback *current = list;
204089fe:	fdc42783          	lw	a5,-36(s0)
20408a02:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68

    while ((current->_next) != NULL) {
20408a06:	a031                	j	20408a12 <_metal_clock_append_to_callbacks+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:69
        current = current->_next;
20408a08:	fec42783          	lw	a5,-20(s0)
20408a0c:	479c                	lw	a5,8(a5)
20408a0e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68
    while ((current->_next) != NULL) {
20408a12:	fec42783          	lw	a5,-20(s0)
20408a16:	479c                	lw	a5,8(a5)
20408a18:	fbe5                	bnez	a5,20408a08 <_metal_clock_append_to_callbacks+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:72
    }

    current->_next = cb;
20408a1a:	fec42783          	lw	a5,-20(s0)
20408a1e:	fd842703          	lw	a4,-40(s0)
20408a22:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:74

    return list;
20408a24:	fdc42783          	lw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:75
}
20408a28:	853e                	mv	a0,a5
20408a2a:	5432                	lw	s0,44(sp)
20408a2c:	6145                	addi	sp,sp,48
20408a2e:	8082                	ret

20408a30 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:139
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_pre_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
20408a30:	1101                	addi	sp,sp,-32
20408a32:	ce06                	sw	ra,28(sp)
20408a34:	cc22                	sw	s0,24(sp)
20408a36:	1000                	addi	s0,sp,32
20408a38:	fea42623          	sw	a0,-20(s0)
20408a3c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:140
    clk->_pre_rate_change_callback = _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20408a40:	fec42783          	lw	a5,-20(s0)
20408a44:	43dc                	lw	a5,4(a5)
20408a46:	fe842583          	lw	a1,-24(s0)
20408a4a:	853e                	mv	a0,a5
20408a4c:	3f41                	jal	204089dc <_metal_clock_append_to_callbacks>
20408a4e:	872a                	mv	a4,a0
20408a50:	fec42783          	lw	a5,-20(s0)
20408a54:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:141
}
20408a56:	0001                	nop
20408a58:	40f2                	lw	ra,28(sp)
20408a5a:	4462                	lw	s0,24(sp)
20408a5c:	6105                	addi	sp,sp,32
20408a5e:	8082                	ret

20408a60 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:150
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_post_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
20408a60:	1101                	addi	sp,sp,-32
20408a62:	ce06                	sw	ra,28(sp)
20408a64:	cc22                	sw	s0,24(sp)
20408a66:	1000                	addi	s0,sp,32
20408a68:	fea42623          	sw	a0,-20(s0)
20408a6c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:151
    clk->_post_rate_change_callback = _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20408a70:	fec42783          	lw	a5,-20(s0)
20408a74:	479c                	lw	a5,8(a5)
20408a76:	fe842583          	lw	a1,-24(s0)
20408a7a:	853e                	mv	a0,a5
20408a7c:	3785                	jal	204089dc <_metal_clock_append_to_callbacks>
20408a7e:	872a                	mv	a4,a0
20408a80:	fec42783          	lw	a5,-20(s0)
20408a84:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:152
}
20408a86:	0001                	nop
20408a88:	40f2                	lw	ra,28(sp)
20408a8a:	4462                	lw	s0,24(sp)
20408a8c:	6105                	addi	sp,sp,32
20408a8e:	8082                	ret

20408a90 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/cpu.h:208
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt* metal_cpu_interrupt_controller(struct metal_cpu *cpu)
{ return cpu->vtable->controller_interrupt(cpu); }
20408a90:	1101                	addi	sp,sp,-32
20408a92:	ce06                	sw	ra,28(sp)
20408a94:	cc22                	sw	s0,24(sp)
20408a96:	1000                	addi	s0,sp,32
20408a98:	fea42623          	sw	a0,-20(s0)
20408a9c:	fec42783          	lw	a5,-20(s0)
20408aa0:	439c                	lw	a5,0(a5)
20408aa2:	57dc                	lw	a5,44(a5)
20408aa4:	fec42503          	lw	a0,-20(s0)
20408aa8:	9782                	jalr	a5
20408aaa:	87aa                	mv	a5,a0
20408aac:	853e                	mv	a0,a5
20408aae:	40f2                	lw	ra,28(sp)
20408ab0:	4462                	lw	s0,24(sp)
20408ab2:	6105                	addi	sp,sp,32
20408ab4:	8082                	ret

20408ab6 <metal_cpu_get>:
metal_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:8

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu* metal_cpu_get(unsigned int hartid)
{
20408ab6:	1101                	addi	sp,sp,-32
20408ab8:	ce22                	sw	s0,28(sp)
20408aba:	1000                	addi	s0,sp,32
20408abc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:9
    if (hartid < __METAL_DT_MAX_HARTS) {
20408ac0:	fec42783          	lw	a5,-20(s0)
20408ac4:	eb99                	bnez	a5,20408ada <metal_cpu_get+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:10
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20408ac6:	800007b7          	lui	a5,0x80000
20408aca:	fec42703          	lw	a4,-20(s0)
20408ace:	070a                	slli	a4,a4,0x2
20408ad0:	7e078793          	addi	a5,a5,2016 # 800007e0 <metal_segment_heap_target_end+0xfffff30c>
20408ad4:	97ba                	add	a5,a5,a4
20408ad6:	439c                	lw	a5,0(a5)
20408ad8:	a011                	j	20408adc <metal_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:12
    }   
    return NULL;
20408ada:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:13
}
20408adc:	853e                	mv	a0,a5
20408ade:	4472                	lw	s0,28(sp)
20408ae0:	6105                	addi	sp,sp,32
20408ae2:	8082                	ret

20408ae4 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:16

int metal_cpu_get_current_hartid()
{
20408ae4:	1101                	addi	sp,sp,-32
20408ae6:	ce22                	sw	s0,28(sp)
20408ae8:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:19
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r" (mhartid));
20408aea:	f14027f3          	csrr	a5,mhartid
20408aee:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:20
    return mhartid;
20408af2:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:22
#endif
}
20408af6:	853e                	mv	a0,a5
20408af8:	4472                	lw	s0,28(sp)
20408afa:	6105                	addi	sp,sp,32
20408afc:	8082                	ret

20408afe <metal_shutdown>:
metal_shutdown():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message("There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code)
{
20408afe:	1101                	addi	sp,sp,-32
20408b00:	ce22                	sw	s0,28(sp)
20408b02:	1000                	addi	s0,sp,32
20408b04:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
      __asm__ volatile ("nop");
20408b08:	0001                	nop
20408b0a:	bffd                	j	20408b08 <metal_shutdown+0xa>
	...

20408b80 <__metal_vector_table>:
IRQ_0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20408b80:	c22fd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408b84 <IRQ_1>:
IRQ_1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20408b84:	c1efd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408b88 <IRQ_2>:
IRQ_2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20408b88:	c1afd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408b8c <IRQ_3>:
IRQ_3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20408b8c:	c44fd06f          	j	20405fd0 <metal_software_interrupt_vector_handler>

20408b90 <IRQ_4>:
IRQ_4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20408b90:	c12fd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408b94 <IRQ_5>:
IRQ_5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20408b94:	c0efd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408b98 <IRQ_6>:
IRQ_6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20408b98:	c0afd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408b9c <IRQ_7>:
IRQ_7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20408b9c:	d2efd06f          	j	204060ca <metal_timer_interrupt_vector_handler>

20408ba0 <IRQ_8>:
IRQ_8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20408ba0:	c02fd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408ba4 <IRQ_9>:
IRQ_9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20408ba4:	bfefd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408ba8 <IRQ_10>:
IRQ_10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20408ba8:	bfafd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408bac <IRQ_11>:
IRQ_11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20408bac:	bf6fd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408bb0 <IRQ_12>:
IRQ_12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20408bb0:	bf2fd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408bb4 <IRQ_13>:
IRQ_13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20408bb4:	beefd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408bb8 <IRQ_14>:
IRQ_14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20408bb8:	beafd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408bbc <IRQ_15>:
IRQ_15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20408bbc:	be6fd06f          	j	20405fa2 <metal_interrupt_vector_handler>

20408bc0 <IRQ_LC0>:
IRQ_LC0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20408bc0:	fbafd06f          	j	2040637a <metal_lc0_interrupt_vector_handler>

20408bc4 <IRQ_LC1>:
IRQ_LC1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20408bc4:	84dfd06f          	j	20406410 <metal_lc1_interrupt_vector_handler>

20408bc8 <IRQ_LC2>:
IRQ_LC2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20408bc8:	8dffd06f          	j	204064a6 <metal_lc2_interrupt_vector_handler>

20408bcc <IRQ_LC3>:
IRQ_LC3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20408bcc:	971fd06f          	j	2040653c <metal_lc3_interrupt_vector_handler>

20408bd0 <IRQ_LC4>:
IRQ_LC4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20408bd0:	a03fd06f          	j	204065d2 <metal_lc4_interrupt_vector_handler>

20408bd4 <IRQ_LC5>:
IRQ_LC5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20408bd4:	a95fd06f          	j	20406668 <metal_lc5_interrupt_vector_handler>

20408bd8 <IRQ_LC6>:
IRQ_LC6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20408bd8:	b27fd06f          	j	204066fe <metal_lc6_interrupt_vector_handler>

20408bdc <IRQ_LC7>:
IRQ_LC7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20408bdc:	bb9fd06f          	j	20406794 <metal_lc7_interrupt_vector_handler>

20408be0 <IRQ_LC8>:
IRQ_LC8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20408be0:	c4bfd06f          	j	2040682a <metal_lc8_interrupt_vector_handler>

20408be4 <IRQ_LC9>:
IRQ_LC9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20408be4:	cddfd06f          	j	204068c0 <metal_lc9_interrupt_vector_handler>

20408be8 <IRQ_LC10>:
IRQ_LC10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20408be8:	d6ffd06f          	j	20406956 <metal_lc10_interrupt_vector_handler>

20408bec <IRQ_LC11>:
IRQ_LC11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20408bec:	e01fd06f          	j	204069ec <metal_lc11_interrupt_vector_handler>

20408bf0 <IRQ_LC12>:
IRQ_LC12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20408bf0:	e93fd06f          	j	20406a82 <metal_lc12_interrupt_vector_handler>

20408bf4 <IRQ_LC13>:
IRQ_LC13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20408bf4:	f25fd06f          	j	20406b18 <metal_lc13_interrupt_vector_handler>

20408bf8 <IRQ_LC14>:
IRQ_LC14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20408bf8:	fb7fd06f          	j	20406bae <metal_lc14_interrupt_vector_handler>

20408bfc <IRQ_LC15>:
IRQ_LC15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20408bfc:	848fe06f          	j	20406c44 <metal_lc15_interrupt_vector_handler>

20408c00 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:120
{
20408c00:	1101                	addi	sp,sp,-32
20408c02:	ce22                	sw	s0,28(sp)
20408c04:	1000                	addi	s0,sp,32
20408c06:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:121
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20408c0a:	fec42703          	lw	a4,-20(s0)
20408c0e:	800007b7          	lui	a5,0x80000
20408c12:	0f078793          	addi	a5,a5,240 # 800000f0 <metal_segment_heap_target_end+0xffffec1c>
20408c16:	00f71763          	bne	a4,a5,20408c24 <__metal_driver_fixed_clock_rate+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:122
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20408c1a:	03dfd7b7          	lui	a5,0x3dfd
20408c1e:	24078793          	addi	a5,a5,576 # 3dfd240 <__heap_size+0x3dfca40>
20408c22:	a011                	j	20408c26 <__metal_driver_fixed_clock_rate+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:125
		return 0;
20408c24:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/freedom-e310-arty-xmem/build/debug/./metal/machine.h:127
}
20408c26:	853e                	mv	a0,a5
20408c28:	4472                	lw	s0,28(sp)
20408c2a:	6105                	addi	sp,sp,32
20408c2c:	8082                	ret

20408c2e <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
#include <metal/drivers/fixed-clock.h>
#include <stddef.h>
#include <metal/machine.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk)
{
20408c2e:	1101                	addi	sp,sp,-32
20408c30:	ce06                	sw	ra,28(sp)
20408c32:	cc22                	sw	s0,24(sp)
20408c34:	1000                	addi	s0,sp,32
20408c36:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
    return __metal_driver_fixed_clock_rate(gclk);
20408c3a:	fec42503          	lw	a0,-20(s0)
20408c3e:	37c9                	jal	20408c00 <__metal_driver_fixed_clock_rate>
20408c40:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:15
}
20408c42:	853e                	mv	a0,a5
20408c44:	40f2                	lw	ra,28(sp)
20408c46:	4462                	lw	s0,24(sp)
20408c48:	6105                	addi	sp,sp,32
20408c4a:	8082                	ret

20408c4c <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk, long target_hz)
{
20408c4c:	1101                	addi	sp,sp,-32
20408c4e:	ce06                	sw	ra,28(sp)
20408c50:	cc22                	sw	s0,24(sp)
20408c52:	1000                	addi	s0,sp,32
20408c54:	fea42623          	sw	a0,-20(s0)
20408c58:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20408c5c:	fec42503          	lw	a0,-20(s0)
20408c60:	37f9                	jal	20408c2e <__metal_driver_fixed_clock_get_rate_hz>
20408c62:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:20
}
20408c64:	853e                	mv	a0,a5
20408c66:	40f2                	lw	ra,28(sp)
20408c68:	4462                	lw	s0,24(sp)
20408c6a:	6105                	addi	sp,sp,32
20408c6c:	8082                	ret

20408c6e <_exit>:
_exit():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:5
#include <metal/shutdown.h>

void
_exit(int exit_status)
{
20408c6e:	1101                	addi	sp,sp,-32
20408c70:	ce06                	sw	ra,28(sp)
20408c72:	cc22                	sw	s0,24(sp)
20408c74:	1000                	addi	s0,sp,32
20408c76:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:6
  metal_shutdown(exit_status);
20408c7a:	fec42503          	lw	a0,-20(s0)
20408c7e:	e81ff0ef          	jal	ra,20408afe <metal_shutdown>
