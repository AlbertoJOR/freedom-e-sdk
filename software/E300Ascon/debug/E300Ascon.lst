
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/debug/E300Ascon.elf:     file format elf32-littleriscv
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/debug/E300Ascon.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x0000a87c memsz 0x0000a87c flags rwx
    LOAD off    0x0000bb08 vaddr 0x80000b08 paddr 0x80000b08 align 2**12
         filesz 0x00000000 memsz 0x00000d24 flags rw-
    LOAD off    0x0000c000 vaddr 0x80000000 paddr 0x2001a880 align 2**12
         filesz 0x00000b08 memsz 0x00000b08 flags rw-
    LOAD off    0x0000cb08 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x0000cb08 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             00000194  20010000  20010000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text             00009544  20010200  20010200  00001200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata           00001128  20019748  20019748  0000a748  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array       0000000c  2001a870  2001a870  0000b870  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .data             00000b08  80000000  2001a880  0000c000  2**3  CONTENTS, ALLOC, LOAD, DATA
  5 .bss              00000124  80000b08  80000b08  0000bb08  2**3  ALLOC
  6 .stack            00000400  80000c2c  80000c2c  0000bb08  2**0  ALLOC
  7 .heap             00000800  8000102c  8000102c  0000bb08  2**0  ALLOC
  8 .debug_info       00026714  00000000  00000000  0000cb08  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev     0000481a  00000000  00000000  0003321c  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges    00000c28  00000000  00000000  00037a38  2**3  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges     00001418  00000000  00000000  00038660  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_line       000120a7  00000000  00000000  00039a78  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_str        00004db7  00000000  00000000  0004bb1f  2**0  CONTENTS, READONLY, DEBUGGING
 14 .comment          00000028  00000000  00000000  000508d6  2**0  CONTENTS, READONLY
 15 .riscv.attributes 0000002b  00000000  00000000  000508fe  2**0  CONTENTS, READONLY
 16 .debug_frame      00002f08  00000000  00000000  0005092c  2**2  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc        00006236  00000000  00000000  00053834  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
20010200 l    d  .text	00000000 .text
20019748 l    d  .rodata	00000000 .rodata
2001a870 l    d  .init_array	00000000 .init_array
80000000 l    d  .data	00000000 .data
80000b08 l    d  .bss	00000000 .bss
80000c2c l    d  .stack	00000000 .stack
8000102c l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 libriscv__mmachine__sifive-hifive1-revb_a-entry.o
20010060 l       .init	00000000 early_trap_vector
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010136 l       .init	00000000 _skip_init
20019c90 l       .rodata	00000000 argv
20019c94 l       .rodata	00000000 envp
20019c98 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 E300Ascon.c
80000000 l     O .data	00000020 plain_text.2879
80000020 l     O .data	00000020 asso_text.2880
80000b0c l     O .bss	00000020 cipher_text.2881
80000b2c l     O .bss	00000020 dumm_array.2882
80000b8c l     O .bss	00000010 key.2884
80000b7c l     O .bss	00000010 npub.2885
80000b4c l     O .bss	00000030 cipher_text_sw.2883
00000000 l    df *ABS*	00000000 aead.c
200104e0 l     F .text	000000c2 ROR
200105a2 l     F .text	000005ae ROUND
20010b50 l     F .text	0000008e P12
20010bde l     F .text	00000052 P6
20010c30 l     F .text	000000a4 LOADBYTES
20010cd4 l     F .text	0000008e STOREBYTES
00000000 l    df *ABS*	00000000 printf.c
2001129e l     F .text	00000020 _out_null
200112be l     F .text	00000032 _out_char
200112f0 l     F .text	0000004e _strnlen_s
2001133e l     F .text	00000038 _is_digit
20011376 l     F .text	0000005e _atoi
200113d4 l     F .text	00000108 _out_rev
200114dc l     F .text	0000025e _ntoa_format
2001173a l     F .text	00000104 _ntoa_long
2001183e l     F .text	0000012e _ntoa_long_long
2001196c l     F .text	000005d2 _ftoa
20011f3e l     F .text	0000066e _etoa
20019ac8 l     O .rodata	00000050 pow10.2193
200125ac l     F .text	00000b7c _vsnprintf
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 fixunsdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000b9c l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 tty.c
20015420 l     F .text	00000022 metal_tty_init
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
200154ca l     F .text	0000002a __metal_driver_sifive_clint0_control_base
200154f4 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
2001551c l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20015558 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
200156b8 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20015bf0 l     F .text	00000024 __metal_driver_cpu_hartid
20015c14 l     F .text	0000002a __metal_driver_cpu_timebase
20015c3e l     F .text	0000002a __metal_driver_cpu_interrupt_controller
00000000 l    df *ABS*	00000000 riscv_plic0.c
200174e2 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2001750c l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
20017536 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
2001755e l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20017586 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20017ad0 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20017aea l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20017b00 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20017b14 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20017bcc l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20017be6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20017bfc l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20017c10 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20017cb8 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20017cd2 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20017cec l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20017d02 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20017d16 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20017d28 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20017d38 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20017d4e l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20017d60 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
20019f44 l     O .rodata	00000880 pll_configs
20017d72 l     F .text	0000004e get_pll_config_freq
20017dc0 l     F .text	00000028 metal_sifive_fe310_g000_pll_init
20017ffc l     F .text	000000ac find_closest_config
200180a8 l     F .text	00000132 configure_pll
20018340 l     F .text	0000002a use_hfxosc
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
2001836a l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_gpio0.c
200183e2 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20018408 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20018432 l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20018e46 l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20018e86 l     F .text	00000042 __metal_driver_sifive_uart0_interrupt_parent
20018ec8 l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20018f04 l     F .text	00000048 __metal_driver_sifive_uart0_clock
20018f4c l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20018f8c l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_output_selector
20018fcc l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
200191da l     F .text	000000d8 pre_rate_change_callback_func
200192b2 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 libriscv__mmachine__sifive-hifive1-revb_a-vector.o
20019600 l       .text	00000000 IRQ_0
20019604 l       .text	00000000 IRQ_1
20019608 l       .text	00000000 IRQ_2
2001960c l       .text	00000000 IRQ_3
20019610 l       .text	00000000 IRQ_4
20019614 l       .text	00000000 IRQ_5
20019618 l       .text	00000000 IRQ_6
2001961c l       .text	00000000 IRQ_7
20019620 l       .text	00000000 IRQ_8
20019624 l       .text	00000000 IRQ_9
20019628 l       .text	00000000 IRQ_10
2001962c l       .text	00000000 IRQ_11
20019630 l       .text	00000000 IRQ_12
20019634 l       .text	00000000 IRQ_13
20019638 l       .text	00000000 IRQ_14
2001963c l       .text	00000000 IRQ_15
20019640 l       .text	00000000 IRQ_LC0
20019644 l       .text	00000000 IRQ_LC1
20019648 l       .text	00000000 IRQ_LC2
2001964c l       .text	00000000 IRQ_LC3
20019650 l       .text	00000000 IRQ_LC4
20019654 l       .text	00000000 IRQ_LC5
20019658 l       .text	00000000 IRQ_LC6
2001965c l       .text	00000000 IRQ_LC7
20019660 l       .text	00000000 IRQ_LC8
20019664 l       .text	00000000 IRQ_LC9
20019668 l       .text	00000000 IRQ_LC10
2001966c l       .text	00000000 IRQ_LC11
20019670 l       .text	00000000 IRQ_LC12
20019674 l       .text	00000000 IRQ_LC13
20019678 l       .text	00000000 IRQ_LC14
2001967c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20019680 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
80000040 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
2001a87c l       .init_array	00000000 __fini_array_end
2001a87c l       .init_array	00000000 __fini_array_start
2001a87c l       .init_array	00000000 __init_array_end
2001a870 l       .init_array	00000000 __preinit_array_end
2001a870 l       .init_array	00000000 __init_array_start
2001a870 l       .init_array	00000000 __preinit_array_start
2001a84c g     O .rodata	00000020 __metal_driver_vtable_sifive_uart0
20016452  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20011278 g     F .text	00000026 _putchar
20019448 g     F .text	00000026 metal_clock_get_rate_hz
2001913a g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20015894 g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
20014396 g     F .text	0000006a .hidden __eqdf2
200163bc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20010200 g     F .text	0000001e rdcycle
20016c42 g     F .text	00000038 __metal_valid_interrupt_id
20017068 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
800012c8 g       .data	00000000 __global_pointer$
200193f4 g     F .text	00000054 _metal_clock_append_to_callbacks
200175d6 g     F .text	00000038 __metal_plic0_complete_interrupt
20016ec2 g     F .text	0000014e __metal_driver_riscv_cpu_controller_interrupt_register
20019544 g     F .text	0000002e metal_cpu_get
80000a60 g     O .data	00000020 __metal_dt_serial_10013000
20018a20 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20019ca4 g     O .rodata	0000004c __metal_driver_vtable_riscv_clint0
80000c2c g       .bss	00000000 metal_segment_bss_target_end
20015588 g     F .text	0000009a __metal_clint0_mtime_get
20017476 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000000 g       *ABS*	00000000 __metal_chicken_bit
200187d0 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20014400 g     F .text	000000a4 .hidden __gtdf2
200151a8 g     F .text	0000000c __errno
08000000 g       .init_array	00000000 metal_segment_itim_target_start
20019050 g     F .text	00000034 __metal_driver_sifive_uart0_txready
20010070 g     F .init	0000000e __metal_synchronize_harts
80000b08 g       .bss	00000000 metal_segment_bss_target_start
20015622 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20018c70 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000c28 g     O .bss	00000004 errno
20017e8c g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
200194ba g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20016740  w    F .text	00000096 metal_lc9_interrupt_vector_handler
80000a80 g     O .data	00000020 __metal_dt_serial_10023000
20019ef8 g     O .rodata	0000004c __metal_driver_vtable_riscv_plic0
20019eb8 g     O .rodata	00000040 __metal_driver_vtable_cpu
2001549c g     F .text	0000002e metal_uart_set_baud_rate
200192e2 g     F .text	000000d2 __metal_driver_sifive_uart0_init
200170fc g     F .text	00000072 __metal_driver_cpu_mcycle_get
2001a7c4 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
8000102c g       .heap	00000000 metal_segment_heap_target_start
80000adc g     O .data	00000004 __metal_dt_cpu_0
2001503a g     F .text	0000006a .hidden __floatsidf
200166aa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
200144a4 g     F .text	000000a4 .hidden __ltdf2
200181da g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20016998  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20015dd6 g     F .text	00000018 __metal_default_exception_handler
20015bbc g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20017672 g     F .text	00000062 __metal_plic0_set_priority
20017084 g     F .text	0000005c __metal_driver_riscv_cpu_controller_set_vector_mode
20014fde g     F .text	0000005c .hidden __fixunsdfsi
20015c68 g     F .text	00000030 __metal_driver_cpu_get
20019e6c g     O .rodata	0000004c __metal_driver_vtable_riscv_cpu_intc
20015cca g     F .text	00000018 __metal_interrupt_global_disable
20016614  w    F .text	00000096 metal_lc7_interrupt_vector_handler
200167d6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20017a88 g     F .text	00000048 __metal_driver_riscv_plic0_disable
20016d36 g     F .text	0000004e __metal_exception_register
20017290 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
200188b2 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
20015ec6 g     F .text	00000068 __metal_default_sw_handler
2001386e g     F .text	000005f2 .hidden __adddf3
200194ec g     F .text	00000032 metal_clock_register_post_rate_change_callback
800000ac g     O .data	0000000c __metal_dt_clock_2
2001900c g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
2001351c g     F .text	00000352 .hidden __umoddi3
20018978 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
80000b00 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000acc g     O .data	00000004 _global_impure_ptr
20015f2e  w    F .text	00000092 metal_timer_interrupt_vector_handler
20015218 g     F .text	0000006a __libc_init_array
200188f2 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2001686c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
200131be g     F .text	0000035e .hidden __udivdi3
20017c96 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
200150a4 g     F .text	00000050 .hidden __floatunsidf
20017010 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
2001886c g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
200193b4 g     F .text	00000040 _metal_clock_call_all_callbacks
20010174 g     F .init	00000002 _init
20015d2c g     F .text	0000001a __metal_interrupt_timer_disable
20018a6a g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
2001734e g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
2001a810 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
200189b8 g     F .text	00000068 __metal_driver_sifive_gpio0_enable_io
200151e0 g     F .text	00000038 __libc_fini_array
80000ab8 g     O .data	0000000c __metal_dt_clock_4
20018df8 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
200172d8 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20014f7a g     F .text	00000064 .hidden __fixdfsi
80000000 g       .data	00000000 metal_segment_data_target_start
20015d7e g     F .text	0000002c __metal_interrupt_local_enable
20015b88 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
200153ce g     F .text	0000002c metal_tty_putc
20017794 g     F .text	00000018 __metal_plic0_default_handler
2001317e g     F .text	00000012 write
800000a0 g     O .data	0000000c __metal_dt_clock_0
200144a4 g     F .text	000000a4 .hidden __ledf2
00000800 g       *ABS*	00000000 __heap_size
20015d62 g     F .text	0000001c __metal_interrupt_external_disable
2001902c g     F .text	00000024 __metal_driver_sifive_uart0_get_interrupt_id
200170e0 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20016d84 g     F .text	0000013e __metal_driver_riscv_cpu_controller_interrupt_init
200150f4 g     F .text	0000003c .hidden __clzsi2
20017430 g     F .text	00000046 __metal_driver_cpu_exception_register
20015ce2 g     F .text	00000018 __metal_interrupt_software_enable
20016290  w    F .text	00000096 metal_lc1_interrupt_vector_handler
80000b08 g     O .bss	00000004 _global_atexit
20010d62 g     F .text	00000516 crypto_aead_encrypt
20016b5a g     F .text	00000050 __metal_controller_interrupt_vector_mode
20015306 g     F .text	000000c8 __call_exitprocs
8000102c g       .stack	00000000 _sp
2001007e g     F .init	00000000 _start
20017b26 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20017410 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
200174a4 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20015d46 g     F .text	0000001c __metal_interrupt_external_enable
20015282 g     F .text	00000084 __register_exitproc
20019084 g     F .text	00000040 __metal_driver_sifive_uart0_putc
2001783a g     F .text	00000144 __metal_driver_riscv_plic0_init
20017a40 g     F .text	00000048 __metal_driver_riscv_plic0_enable
20018840 g     F .text	0000002c __metal_driver_sifive_gpio0_output
2001657e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20015c98 g     F .text	0000001a __metal_myhart_id
20018e18 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20015e34  w    F .text	00000092 metal_software_interrupt_vector_handler
2001703c g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
2001911a g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20015776 g     F .text	000000da __metal_driver_riscv_clint0_register
80000ad4 g     O .data	00000008 __metal_dt_clint_2000000
20013e60 g     F .text	00000536 .hidden __divdf3
2001946e g     F .text	0000004c metal_clock_set_rate_hz
20014548 g     F .text	0000043c .hidden __muldf3
20018790 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
20010176  w    F .init	00000000 secondary_main
20015e06  w    F .text	0000002e metal_interrupt_vector_handler
20017646 g     F .text	0000002c __metal_plic0_get_threshold
2001837c g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20016c7a g     F .text	000000bc __metal_local_interrupt_enable
20015a52 g     F .text	00000136 __metal_driver_riscv_clint0_command_request
200164e8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
2001021e g     F .text	000002c2 main
80000b08 g       .data	00000000 metal_segment_data_target_end
80000ae8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
200172ec g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
200173b0 g     F .text	00000060 __metal_driver_cpu_get_msip
2001958c g     F .text	0000000e metal_shutdown
08000000 g       .init_array	00000000 metal_segment_itim_target_end
200174c2 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
200175a8 g     F .text	0000002e __metal_plic0_claim_interrupt
20016902  w    F .text	00000096 metal_lc12_interrupt_vector_handler
20015878 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ae4 g     O .data	00000004 __metal_dt_prci_10008000
2001716e g     F .text	00000046 __metal_driver_cpu_timebase_get
20010000 g       .init	00000000 _enter
20019572 g     F .text	0000001a metal_cpu_get_current_hartid
20017c22 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20019600 g       .text	00000000 __metal_vector_table
2001a880 g       *ABS*	00000000 metal_segment_itim_source_start
80000ad0  w    O .data	00000004 __metal_cpu_table
20014396 g     F .text	0000006a .hidden __nedf2
800000d0 g     O .data	000003b8 __metal_dt_cpu_0_interrupt_controller
20010174 g     F .init	00000002 _fini
20019b90 g     O .rodata	00000100 .hidden __clz_tab
20015cb2 g     F .text	00000018 __metal_interrupt_global_enable
2001519e g     F .text	0000000a atexit
200153fa g     F .text	00000026 metal_tty_putc_raw
20013190 g     F .text	0000002e _write_r
20015d12 g     F .text	0000001a __metal_interrupt_timer_enable
200190c4 g     F .text	00000056 __metal_driver_sifive_uart0_getc
2001599a g     F .text	000000b8 __metal_driver_riscv_clint0_disable
80000ac8 g     O .data	00000004 _impure_ptr
2001721a g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20017de8 g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
800000b8 g     O .data	0000000c __metal_dt_clock_5
200183aa g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
200196f0 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
200158e8 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
2001a880 g       *ABS*	00000000 metal_segment_data_source_start
8000182c g       .heap	00000000 metal_segment_heap_target_end
20016baa g     F .text	00000098 __metal_controller_interrupt_vector
80000aac g     O .data	0000000c __metal_dt_clock_1
80000488 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20018932 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20013128 g     F .text	00000056 printf_
20015fc0 g     F .text	00000066 __metal_default_timer_handler
20015130 g     F .text	0000006e _write
200177ac g     F .text	0000008e __metal_plic0_handler
20016326  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20016ac4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
2001951e g     F .text	00000026 metal_cpu_interrupt_controller
200151b4 g     F .text	0000002c exit
2001970e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
80000ae0 g     O .data	00000004 __metal_dt_gpio_10012000
20015dee g     F .text	00000018 __metal_default_interrupt_handler
2001546e g     F .text	0000002e metal_uart_putc
20018816 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20016080 g     F .text	00000154 __metal_exception_handler
200161fa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20019730 g     F .text	00000014 _exit
200171b4 g     F .text	00000066 __metal_driver_cpu_mtime_get
20015850 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20014400 g     F .text	000000a4 .hidden __gedf2
20016a2e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80000af0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
200156ee g     F .text	00000088 __metal_driver_riscv_clint0_init
20014984 g     F .text	000005f6 .hidden __subdf3
200172aa g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20017708 g     F .text	0000008c __metal_plic0_enable
2001006e  w      .init	00000000 __register_frame_info
20017baa g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
200172be g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20015daa g     F .text	0000002c __metal_interrupt_local_disable
20015cfa g     F .text	00000018 __metal_interrupt_software_disable
200176d4 g     F .text	00000034 __metal_plic0_get_priority
20015442 g     F .text	0000002c metal_uart_init
80000aa0 g     O .data	0000000c __metal_dt_clock_3
800000c4 g     O .data	0000000c __metal_dt_clock_6
2001760e g     F .text	00000038 __metal_plic0_set_threshold
80000af8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
2001797e g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	2c818193          	addi	gp,gp,712 # 800012c8 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:29
.option pop

    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010008:	00000297          	auipc	t0,0x0
2001000c:	05828293          	addi	t0,t0,88 # 20010060 <early_trap_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:30
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:32
    /* enable chicken bit if core is bullet series*/
    la t0, __metal_chicken_bit
20010014:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:33
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:34
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:43
     * C, so here we set up a C environment.  First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
20010020:	dfff0117          	auipc	sp,0xdfff0
20010024:	fe010113          	addi	sp,sp,-32 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:52
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    .weak __metal_before_start
    la ra, __metal_before_start
20010028:	dfff0097          	auipc	ra,0xdfff0
2001002c:	fd808093          	addi	ra,ra,-40 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:53
    beqz ra, 1f
20010030:	00008363          	beqz	ra,20010036 <_enter+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:54
    jalr ra
20010034:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:60
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010036:	f1402573          	csrr	a0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:61
    li a1, 0
2001003a:	4581                	li	a1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:62
    li a2, 0
2001003c:	4601                	li	a2,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:63
    call _start
2001003e:	2081                	jal	2001007e <_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:68

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20010040:	dfff0097          	auipc	ra,0xdfff0
20010044:	fc008093          	addi	ra,ra,-64 # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:69
    beqz ra, 1f
20010048:	00008363          	beqz	ra,2001004e <_enter+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:70
    jalr ra
2001004c:	9082                	jalr	ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:75
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001004e:	00000297          	auipc	t0,0x0
20010052:	00c28293          	addi	t0,t0,12 # 2001005a <_enter+0x5a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:76
     csrw mtvec, t0
20010056:	30529073          	csrw	mtvec,t0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:78
1:
     lw t1, 0(x0)
2001005a:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:79
     j 1b
2001005e:	bff5                	j	2001005a <_enter+0x5a>

20010060 <early_trap_vector>:
early_trap_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:89
 * you end up here then there's a bug in the early boot code somewhere. */
.section .text.metal.init.trapvec
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010060:	342022f3          	csrr	t0,mcause
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:90
    csrr t1, mepc
20010064:	34102373          	csrr	t1,mepc
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:91
    csrr t2, mtval
20010068:	343023f3          	csrr	t2,mtval
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:92
    j early_trap_vector
2001006c:	bfd5                	j	20010060 <early_trap_vector>

2001006e <__register_frame_info>:
__register_frame_info():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/entry.S:105
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2001006e:	8082                	ret

20010070 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init")))
void __metal_synchronize_harts() {
20010070:	1141                	addi	sp,sp,-16
20010072:	c622                	sw	s0,12(sp)
20010074:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:61
        /* Wait for hart 0 to clear the MSIP bit */
        while (METAL_MSIP(msip_base, hart) == 1) ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010076:	0001                	nop
20010078:	4432                	lw	s0,12(sp)
2001007a:	0141                	addi	sp,sp,16
2001007c:	8082                	ret

2001007e <_start>:
_start():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
2001007e:	8406                	mv	s0,ra
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20010080:	5fff1197          	auipc	gp,0x5fff1
20010084:	24818193          	addi	gp,gp,584 # 800012c8 <__global_pointer$>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:51

  /* The METAL is designed for a bare-metal environment and therefor is expected
   * to define its own stack pointer.  We also align the stack pointer here
   * because the only RISC-V ABI that's currently defined mandates 16-byte
   * stack alignment. */
  la sp, _sp
20010088:	d6418113          	addi	sp,gp,-668 # 8000102c <_sp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:54

  /* Increment by hartid number of stack sizes */
  li t0, 0
2001008c:	4281                	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:55
  la t1, __stack_size
2001008e:	40000313          	li	t1,1024
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:57
1:
  beq t0, a0, 1f
20010092:	00a28563          	beq	t0,a0,2001009c <_start+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:58
  add sp, sp, t1
20010096:	911a                	add	sp,sp,t1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:59
  addi t0, t0, 1
20010098:	0285                	addi	t0,t0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:60
  j 1b
2001009a:	bfe5                	j	20010092 <_start+0x14>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:62
1:
  andi sp, sp, -16
2001009c:	ff017113          	andi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:65

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
200100a0:	00000293          	li	t0,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:66
  bne a0, t0, _skip_init
200100a4:	08551963          	bne	a0,t0,20010136 <_skip_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:75
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
200100a8:	0000a297          	auipc	t0,0xa
200100ac:	7d828293          	addi	t0,t0,2008 # 2001a880 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:76
  la t1, metal_segment_data_target_start
200100b0:	5fff0317          	auipc	t1,0x5fff0
200100b4:	f5030313          	addi	t1,t1,-176 # 80000000 <metal_segment_data_target_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:77
  la t2, metal_segment_data_target_end
200100b8:	84018393          	addi	t2,gp,-1984 # 80000b08 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:79

  beq t0, t1, 2f
200100bc:	00628c63          	beq	t0,t1,200100d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:80
  bge t1, t2, 2f
200100c0:	00735a63          	bge	t1,t2,200100d4 <_start+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:84

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200100c4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  addi t0, t0, 4
200100c8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  sw   a0, 0(t1)
200100ca:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:87
  addi t1, t1, 4
200100ce:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:88
  blt  t1, t2, 1b
200100d0:	fe734ae3          	blt	t1,t2,200100c4 <_start+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:99
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
200100d4:	0000a297          	auipc	t0,0xa
200100d8:	7ac28293          	addi	t0,t0,1964 # 2001a880 <metal_segment_data_source_start>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:100
  la t1, metal_segment_itim_target_start
200100dc:	e7ff0317          	auipc	t1,0xe7ff0
200100e0:	f2430313          	addi	t1,t1,-220 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:101
  la t2, metal_segment_itim_target_end
200100e4:	e7ff0397          	auipc	t2,0xe7ff0
200100e8:	f1c38393          	addi	t2,t2,-228 # 8000000 <metal_segment_itim_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:103

  beq t0, t1, 2f
200100ec:	00628c63          	beq	t0,t1,20010104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:104
  bge t1, t2, 2f
200100f0:	00735a63          	bge	t1,t2,20010104 <_start+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:108

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200100f4:	0002a503          	lw	a0,0(t0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:109
  addi t0, t0, 4
200100f8:	0291                	addi	t0,t0,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:110
  sw   a0, 0(t1)
200100fa:	00a32023          	sw	a0,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:111
  addi t1, t1, 4
200100fe:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:112
  blt  t1, t2, 1b
20010100:	fe734ae3          	blt	t1,t2,200100f4 <_start+0x76>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:124
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
20010104:	0000100f          	fence.i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:127

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20010108:	5fff1317          	auipc	t1,0x5fff1
2001010c:	a0030313          	addi	t1,t1,-1536 # 80000b08 <metal_segment_data_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:128
  la t2, metal_segment_bss_target_end
20010110:	96418393          	addi	t2,gp,-1692 # 80000c2c <metal_segment_bss_target_end>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:130

  bge t1, t2, 2f
20010114:	00735763          	bge	t1,t2,20010122 <_start+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:134

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20010118:	00032023          	sw	zero,0(t1)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:135
  addi t1, t1, 4
2001011c:	0311                	addi	t1,t1,4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:136
  blt  t1, t2, 1b
2001011e:	fe734de3          	blt	t1,t2,20010118 <_start+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:147
2:

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010122:	c211                	beqz	a2,20010126 <_start+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:148
  jalr a2
20010124:	9602                	jalr	a2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:152
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010126:	00005517          	auipc	a0,0x5
2001012a:	0ba50513          	addi	a0,a0,186 # 200151e0 <__libc_fini_array>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:153
  call atexit
2001012e:	070050ef          	jal	ra,2001519e <atexit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:154
  call __libc_init_array
20010132:	0e6050ef          	jal	ra,20015218 <__libc_init_array>

20010136 <_skip_init>:
_skip_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:160

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010136:	3f2d                	jal	20010070 <__metal_synchronize_harts>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:163

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  csrr a5, misa
20010138:	301027f3          	csrr	a5,misa
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:164
  li   a4, 0x10028
2001013c:	00010737          	lui	a4,0x10
20010140:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:165
  and  a5, a5, a4
20010144:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:166
  beqz a5, 1f
20010146:	cb89                	beqz	a5,20010158 <_skip_init+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  csrr a5, mstatus
20010148:	300027f3          	csrr	a5,mstatus
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:168
  lui  a4, 0x2
2001014c:	6709                	lui	a4,0x2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:169
  or   a5, a5, a4
2001014e:	8fd9                	or	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:170
  csrw mstatus, a5
20010150:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:171
  csrwi fcsr, 0
20010154:	00305073          	csrwi	fcsr,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:177
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20010158:	4505                	li	a0,1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  la a1, argv  /* argv = {"libgloss", NULL} */
2001015a:	0000a597          	auipc	a1,0xa
2001015e:	b3658593          	addi	a1,a1,-1226 # 20019c90 <argv>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  la a2, envp  /* envp = {NULL} */
20010162:	0000a617          	auipc	a2,0xa
20010166:	b3260613          	addi	a2,a2,-1230 # 20019c94 <envp>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:180
  call secondary_main
2001016a:	2031                	jal	20010176 <secondary_main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:186

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2001016c:	048050ef          	jal	ra,200151b4 <exit>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:191

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
20010170:	80a2                	mv	ra,s0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:192
  ret
20010172:	8082                	ret

20010174 <_fini>:
_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:204
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
20010174:	8082                	ret

20010176 <secondary_main>:
secondary_main():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:215
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
20010176:	1141                	addi	sp,sp,-16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:217
#if __riscv_xlen == 32
  sw ra, 4(sp)
20010178:	c206                	sw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:221
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
2001017a:	f14022f3          	csrr	t0,mhartid
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  la t1, __metal_boot_hart
2001017e:	00000313          	li	t1,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  beq t0, t1, 2f
20010182:	00628563          	beq	t0,t1,2001018c <secondary_main+0x16>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:225
1:
  wfi
20010186:	10500073          	wfi
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  j 1b
2001018a:	bff5                	j	20010186 <secondary_main+0x10>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:228
2:
  call main
2001018c:	2849                	jal	2001021e <main>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:230
#if __riscv_xlen == 32
  lw ra, 4(sp)
2001018e:	4092                	lw	ra,4(sp)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:234
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
20010190:	0141                	addi	sp,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  ret
20010192:	8082                	ret

Disassembly of section .text:

20010200 <rdcycle>:
rdcycle():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:50
#define rdtime() read_csr(time)
// #define rdcycle() read_csr(cycle)
#define rdinstret() read_csr(instret)


unsigned rdcycle() {
20010200:	1101                	addi	sp,sp,-32
20010202:	ce22                	sw	s0,28(sp)
20010204:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:51
  unsigned mcycle = 0;
20010206:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:53

  asm volatile ("csrr %0,mcycle"   : "=r" (mcycle)  );
2001020a:	b00027f3          	csrr	a5,mcycle
2001020e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:55

  return mcycle;
20010212:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/../RoCCcommon/csr.h:56
}
20010216:	853e                	mv	a0,a5
20010218:	4472                	lw	s0,28(sp)
2001021a:	6105                	addi	sp,sp,32
2001021c:	8082                	ret

2001021e <main>:
main():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:9
#include "aead.h"
#include "printf.h"
//#include "stdio.h"
#include "word.h"

int main(void) {
2001021e:	711d                	addi	sp,sp,-96
20010220:	ce86                	sw	ra,92(sp)
20010222:	cca2                	sw	s0,88(sp)
20010224:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:22
    static unsigned dumm_array [8]= {0};
    static unsigned cipher_text_sw [12]= {0};

    static unsigned key[4] ={0};
    static unsigned npub[4] ={0};
    unsigned plain_len = 10;
20010226:	4729                	li	a4,10
20010228:	fee42223          	sw	a4,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:23
    unsigned asso_len = 10; /// CReo que asignaste a memoria
2001022c:	4729                	li	a4,10
2001022e:	fee42023          	sw	a4,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:24
    unsigned long long int c_len = plain_len;
20010232:	fe442703          	lw	a4,-28(s0)
20010236:	87ba                	mv	a5,a4
20010238:	4801                	li	a6,0
2001023a:	faf42823          	sw	a5,-80(s0)
2001023e:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:25
    unsigned long long int p_len = plain_len;
20010242:	fe442783          	lw	a5,-28(s0)
20010246:	fcf42c23          	sw	a5,-40(s0)
2001024a:	fc042e23          	sw	zero,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:26
    unsigned long long int a_len = asso_len;
2001024e:	fe042783          	lw	a5,-32(s0)
20010252:	fcf42823          	sw	a5,-48(s0)
20010256:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:27
    unsigned plain_len_int = plain_len / 4 ;
2001025a:	fe442783          	lw	a5,-28(s0)
2001025e:	8389                	srli	a5,a5,0x2
20010260:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:28
    plain_len_int = (plain_len % 4 == 0 )? plain_len_int :plain_len_int+1;
20010264:	fe442783          	lw	a5,-28(s0)
20010268:	8b8d                	andi	a5,a5,3
2001026a:	c789                	beqz	a5,20010274 <main+0x56>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:28 (discriminator 1)
2001026c:	fcc42783          	lw	a5,-52(s0)
20010270:	0785                	addi	a5,a5,1
20010272:	a019                	j	20010278 <main+0x5a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:28 (discriminator 2)
20010274:	fcc42783          	lw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:28 (discriminator 4)
20010278:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:31 (discriminator 4)


    printf("Init AEAD \n");
2001027c:	200197b7          	lui	a5,0x20019
20010280:	74878513          	addi	a0,a5,1864 # 20019748 <_exit+0x18>
20010284:	6a5020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:33 (discriminator 4)
    unsigned start, end, HWcycles;
    int rd = 0;
20010288:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:35 (discriminator 4)
    // RoCC
    start = rdcycle();
2001028c:	3f95                	jal	20010200 <rdcycle>
2001028e:	fca42223          	sw	a0,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:36 (discriminator 4)
    write_csr(mstatus, MSTATUS_XS); // Always initialize the CSR such that the accelerator is recognized
20010292:	67e1                	lui	a5,0x18
20010294:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:39 (discriminator 4)

    //rd = AEAD_E_Set_P( plain_text, plain_len);
    asm volatile("fence");
20010298:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:40 (discriminator 4)
    ROCC_INSTRUCTION_DSS(0,rd, plain_text, plain_len, Enc_Set_P );
2001029c:	800007b7          	lui	a5,0x80000
200102a0:	00078793          	mv	a5,a5
200102a4:	85be                	mv	a1,a5
200102a6:	fe442603          	lw	a2,-28(s0)
200102aa:	22c5f50b          	0x22c5f50b
200102ae:	87aa                	mv	a5,a0
200102b0:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:41 (discriminator 4)
    asm volatile("fence" ::: "memory");
200102b4:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:42 (discriminator 4)
    printf("Set Plain text finish length : %d \n", rd);
200102b8:	fc842583          	lw	a1,-56(s0)
200102bc:	200197b7          	lui	a5,0x20019
200102c0:	75478513          	addi	a0,a5,1876 # 20019754 <_exit+0x24>
200102c4:	665020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:45 (discriminator 4)

    //rd = AEAD_E_Set_AD(plain_text, plain_len );
    asm volatile("fence");
200102c8:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:46 (discriminator 4)
    ROCC_INSTRUCTION_DSS(0, rd,asso_text, asso_len, Enc_Set_AD );
200102cc:	800007b7          	lui	a5,0x80000
200102d0:	02078793          	addi	a5,a5,32 # 80000020 <metal_segment_heap_target_end+0xffffe7f4>
200102d4:	85be                	mv	a1,a5
200102d6:	fe042603          	lw	a2,-32(s0)
200102da:	24c5f50b          	0x24c5f50b
200102de:	87aa                	mv	a5,a0
200102e0:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:47 (discriminator 4)
    asm volatile("fence" ::: "memory");
200102e4:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:48 (discriminator 4)
    printf("Set Associated Data finish length: %d \n", rd);
200102e8:	fc842583          	lw	a1,-56(s0)
200102ec:	200197b7          	lui	a5,0x20019
200102f0:	77878513          	addi	a0,a5,1912 # 20019778 <_exit+0x48>
200102f4:	635020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:51 (discriminator 4)

    // rd = AEAD_E_Set_C_Tag(cipher_text,dumm_array);
    asm volatile("fence");
200102f8:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:52 (discriminator 4)
    ROCC_INSTRUCTION_DSS(0,rd, cipher_text, dumm_array, Enc_Set_C_Tag );
200102fc:	800017b7          	lui	a5,0x80001
20010300:	b0c78793          	addi	a5,a5,-1268 # 80000b0c <metal_segment_heap_target_end+0xfffff2e0>
20010304:	85be                	mv	a1,a5
20010306:	800017b7          	lui	a5,0x80001
2001030a:	b2c78793          	addi	a5,a5,-1236 # 80000b2c <metal_segment_heap_target_end+0xfffff300>
2001030e:	863e                	mv	a2,a5
20010310:	26c5f50b          	0x26c5f50b
20010314:	87aa                	mv	a5,a0
20010316:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:53 (discriminator 4)
    asm volatile("fence" ::: "memory");
2001031a:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:54 (discriminator 4)
    printf("Set Tag and C finish : %d \n", rd);
2001031e:	fc842583          	lw	a1,-56(s0)
20010322:	200197b7          	lui	a5,0x20019
20010326:	7a078513          	addi	a0,a5,1952 # 200197a0 <_exit+0x70>
2001032a:	5ff020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:57 (discriminator 4)

    // rd = AEAD_E_Set_Nonce(dumm_array );
    asm volatile("fence");
2001032e:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:58 (discriminator 4)
    ROCC_INSTRUCTION_DS(0,rd, dumm_array, Enc_Set_Nonce );
20010332:	800017b7          	lui	a5,0x80001
20010336:	b2c78793          	addi	a5,a5,-1236 # 80000b2c <metal_segment_heap_target_end+0xfffff300>
2001033a:	85be                	mv	a1,a5
2001033c:	2805e50b          	0x2805e50b
20010340:	87aa                	mv	a5,a0
20010342:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:59 (discriminator 4)
    asm volatile("fence" ::: "memory");
20010346:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:60 (discriminator 4)
    printf("Set Nonce finish : %d \n", rd);
2001034a:	fc842583          	lw	a1,-56(s0)
2001034e:	200197b7          	lui	a5,0x20019
20010352:	7bc78513          	addi	a0,a5,1980 # 200197bc <_exit+0x8c>
20010356:	5d3020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:63 (discriminator 4)

    // rd = AEAD_E_Set_Key(rd);
    asm volatile("fence");
2001035a:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:64 (discriminator 4)
    ROCC_INSTRUCTION_DS(0,rd,  rd, Enc_Set_Key );
2001035e:	fc842783          	lw	a5,-56(s0)
20010362:	85be                	mv	a1,a5
20010364:	2a05e50b          	0x2a05e50b
20010368:	87aa                	mv	a5,a0
2001036a:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:65 (discriminator 4)
    asm volatile("fence" ::: "memory");
2001036e:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:66 (discriminator 4)
    printf("Set Key  finish : %d \n", rd);
20010372:	fc842583          	lw	a1,-56(s0)
20010376:	200197b7          	lui	a5,0x20019
2001037a:	7d478513          	addi	a0,a5,2004 # 200197d4 <_exit+0xa4>
2001037e:	5ab020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:69 (discriminator 4)

    //rd = AEAD_E_Set_Init();
    asm volatile("fence");
20010382:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:70 (discriminator 4)
    ROCC_INSTRUCTION_DS(0,rd, rd,  Enc_Init );
20010386:	fc842783          	lw	a5,-56(s0)
2001038a:	85be                	mv	a1,a5
2001038c:	2c05e50b          	0x2c05e50b
20010390:	87aa                	mv	a5,a0
20010392:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:71 (discriminator 4)
    asm volatile("fence" ::: "memory");
20010396:	0ff0000f          	fence
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:72 (discriminator 4)
    printf("Finish AEAD : %x \n", rd);
2001039a:	fc842583          	lw	a1,-56(s0)
2001039e:	200197b7          	lui	a5,0x20019
200103a2:	7ec78513          	addi	a0,a5,2028 # 200197ec <_exit+0xbc>
200103a6:	583020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:74 (discriminator 4)

    end = rdcycle();
200103aa:	3d99                	jal	20010200 <rdcycle>
200103ac:	fca42023          	sw	a0,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:75 (discriminator 4)
    HWcycles = end - start;
200103b0:	fc042703          	lw	a4,-64(s0)
200103b4:	fc442783          	lw	a5,-60(s0)
200103b8:	40f707b3          	sub	a5,a4,a5
200103bc:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:76 (discriminator 4)
    printf("Total time = %d cycles\n",HWcycles);
200103c0:	fbc42583          	lw	a1,-68(s0)
200103c4:	2001a7b7          	lui	a5,0x2001a
200103c8:	80078513          	addi	a0,a5,-2048 # 20019800 <_exit+0xd0>
200103cc:	55d020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:77 (discriminator 4)
    printf("Hardware \n");
200103d0:	2001a7b7          	lui	a5,0x2001a
200103d4:	81878513          	addi	a0,a5,-2024 # 20019818 <_exit+0xe8>
200103d8:	551020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:78 (discriminator 4)
    for(int i = 0; i < plain_len_int; i ++){
200103dc:	fe042623          	sw	zero,-20(s0)
200103e0:	a081                	j	20010420 <main+0x202>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:79
       if(i%2==0 ){
200103e2:	fec42783          	lw	a5,-20(s0)
200103e6:	8b85                	andi	a5,a5,1
200103e8:	e799                	bnez	a5,200103f6 <main+0x1d8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:80
            printf("\n");
200103ea:	2001a7b7          	lui	a5,0x2001a
200103ee:	82478513          	addi	a0,a5,-2012 # 20019824 <_exit+0xf4>
200103f2:	537020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:82 (discriminator 2)
        }
        printf("%x ",cipher_text[i]);
200103f6:	800017b7          	lui	a5,0x80001
200103fa:	b0c78713          	addi	a4,a5,-1268 # 80000b0c <metal_segment_heap_target_end+0xfffff2e0>
200103fe:	fec42783          	lw	a5,-20(s0)
20010402:	078a                	slli	a5,a5,0x2
20010404:	97ba                	add	a5,a5,a4
20010406:	439c                	lw	a5,0(a5)
20010408:	85be                	mv	a1,a5
2001040a:	2001a7b7          	lui	a5,0x2001a
2001040e:	82878513          	addi	a0,a5,-2008 # 20019828 <_exit+0xf8>
20010412:	517020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:78 (discriminator 2)
    for(int i = 0; i < plain_len_int; i ++){
20010416:	fec42783          	lw	a5,-20(s0)
2001041a:	0785                	addi	a5,a5,1
2001041c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:78 (discriminator 1)
20010420:	fec42783          	lw	a5,-20(s0)
20010424:	fcc42703          	lw	a4,-52(s0)
20010428:	fae7ede3          	bltu	a5,a4,200103e2 <main+0x1c4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:86
    }


    crypto_aead_encrypt((unsigned char *)cipher_text_sw,&c_len,(unsigned char*)plain_text,p_len, (unsigned char*)asso_text,a_len,(unsigned char*)npub,(unsigned char*)key);
2001042c:	fb040593          	addi	a1,s0,-80
20010430:	8c418793          	addi	a5,gp,-1852 # 80000b8c <key.2884>
20010434:	c23e                	sw	a5,4(sp)
20010436:	8b418793          	addi	a5,gp,-1868 # 80000b7c <npub.2885>
2001043a:	c03e                	sw	a5,0(sp)
2001043c:	fd042803          	lw	a6,-48(s0)
20010440:	fd442883          	lw	a7,-44(s0)
20010444:	800007b7          	lui	a5,0x80000
20010448:	02078793          	addi	a5,a5,32 # 80000020 <metal_segment_heap_target_end+0xffffe7f4>
2001044c:	fd842683          	lw	a3,-40(s0)
20010450:	fdc42703          	lw	a4,-36(s0)
20010454:	80000637          	lui	a2,0x80000
20010458:	00060613          	mv	a2,a2
2001045c:	80001537          	lui	a0,0x80001
20010460:	b4c50513          	addi	a0,a0,-1204 # 80000b4c <metal_segment_heap_target_end+0xfffff320>
20010464:	0ff000ef          	jal	ra,20010d62 <crypto_aead_encrypt>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:88

    printf("\n");
20010468:	2001a7b7          	lui	a5,0x2001a
2001046c:	82478513          	addi	a0,a5,-2012 # 20019824 <_exit+0xf4>
20010470:	4b9020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:89
    printf("Software");
20010474:	2001a7b7          	lui	a5,0x2001a
20010478:	82c78513          	addi	a0,a5,-2004 # 2001982c <_exit+0xfc>
2001047c:	4ad020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:90
    for(int i = 0; i < plain_len_int + 4; i ++){
20010480:	fe042423          	sw	zero,-24(s0)
20010484:	a081                	j	200104c4 <main+0x2a6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:91
        if(i%2==0 ){
20010486:	fe842783          	lw	a5,-24(s0)
2001048a:	8b85                	andi	a5,a5,1
2001048c:	e799                	bnez	a5,2001049a <main+0x27c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:92
            printf("\n");
2001048e:	2001a7b7          	lui	a5,0x2001a
20010492:	82478513          	addi	a0,a5,-2012 # 20019824 <_exit+0xf4>
20010496:	493020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:94 (discriminator 2)
        }
        printf("%x ",cipher_text_sw[i]);
2001049a:	800017b7          	lui	a5,0x80001
2001049e:	b4c78713          	addi	a4,a5,-1204 # 80000b4c <metal_segment_heap_target_end+0xfffff320>
200104a2:	fe842783          	lw	a5,-24(s0)
200104a6:	078a                	slli	a5,a5,0x2
200104a8:	97ba                	add	a5,a5,a4
200104aa:	439c                	lw	a5,0(a5)
200104ac:	85be                	mv	a1,a5
200104ae:	2001a7b7          	lui	a5,0x2001a
200104b2:	82878513          	addi	a0,a5,-2008 # 20019828 <_exit+0xf8>
200104b6:	473020ef          	jal	ra,20013128 <printf_>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:90 (discriminator 2)
    for(int i = 0; i < plain_len_int + 4; i ++){
200104ba:	fe842783          	lw	a5,-24(s0)
200104be:	0785                	addi	a5,a5,1
200104c0:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:90 (discriminator 1)
200104c4:	fcc42783          	lw	a5,-52(s0)
200104c8:	00478713          	addi	a4,a5,4
200104cc:	fe842783          	lw	a5,-24(s0)
200104d0:	fae7ebe3          	bltu	a5,a4,20010486 <main+0x268>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:98
    }


    return 0;
200104d4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/E300Ascon.c:99
}
200104d6:	853e                	mv	a0,a5
200104d8:	40f6                	lw	ra,92(sp)
200104da:	4466                	lw	s0,88(sp)
200104dc:	6125                	addi	sp,sp,96
200104de:	8082                	ret

200104e0 <ROR>:
ROR():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:7
#define ROUND_H_

#include "ascon.h"
#include "constants.h"

static inline uint64_t ROR(uint64_t x, int n) {
200104e0:	1101                	addi	sp,sp,-32
200104e2:	ce22                	sw	s0,28(sp)
200104e4:	1000                	addi	s0,sp,32
200104e6:	fea42423          	sw	a0,-24(s0)
200104ea:	feb42623          	sw	a1,-20(s0)
200104ee:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:8
  return x >> n | x << (-n & 63);
200104f2:	fe842783          	lw	a5,-24(s0)
200104f6:	fec42803          	lw	a6,-20(s0)
200104fa:	fe442603          	lw	a2,-28(s0)
200104fe:	1601                	addi	a2,a2,-32
20010500:	00064663          	bltz	a2,2001050c <ROR+0x2c>
20010504:	00c85333          	srl	t1,a6,a2
20010508:	4381                	li	t2,0
2001050a:	a025                	j	20010532 <ROR+0x52>
2001050c:	00181593          	slli	a1,a6,0x1
20010510:	457d                	li	a0,31
20010512:	fe442603          	lw	a2,-28(s0)
20010516:	40c50633          	sub	a2,a0,a2
2001051a:	00c59633          	sll	a2,a1,a2
2001051e:	fe442583          	lw	a1,-28(s0)
20010522:	00b7d333          	srl	t1,a5,a1
20010526:	00666333          	or	t1,a2,t1
2001052a:	fe442603          	lw	a2,-28(s0)
2001052e:	00c853b3          	srl	t2,a6,a2
20010532:	fe442603          	lw	a2,-28(s0)
20010536:	40c00633          	neg	a2,a2
2001053a:	03f67613          	andi	a2,a2,63
2001053e:	1601                	addi	a2,a2,-32
20010540:	00064663          	bltz	a2,2001054c <ROR+0x6c>
20010544:	00c79733          	sll	a4,a5,a2
20010548:	4681                	li	a3,0
2001054a:	a83d                	j	20010588 <ROR+0xa8>
2001054c:	0017d593          	srli	a1,a5,0x1
20010550:	457d                	li	a0,31
20010552:	fe442603          	lw	a2,-28(s0)
20010556:	40c00633          	neg	a2,a2
2001055a:	03f67613          	andi	a2,a2,63
2001055e:	40c50633          	sub	a2,a0,a2
20010562:	00c5d633          	srl	a2,a1,a2
20010566:	fe442583          	lw	a1,-28(s0)
2001056a:	40b005b3          	neg	a1,a1
2001056e:	03f5f593          	andi	a1,a1,63
20010572:	00b81733          	sll	a4,a6,a1
20010576:	8f51                	or	a4,a4,a2
20010578:	fe442603          	lw	a2,-28(s0)
2001057c:	40c00633          	neg	a2,a2
20010580:	03f67613          	andi	a2,a2,63
20010584:	00c796b3          	sll	a3,a5,a2
20010588:	0066ee33          	or	t3,a3,t1
2001058c:	00776eb3          	or	t4,a4,t2
20010590:	86f2                	mv	a3,t3
20010592:	8776                	mv	a4,t4
20010594:	87b6                	mv	a5,a3
20010596:	883a                	mv	a6,a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:9
}
20010598:	853e                	mv	a0,a5
2001059a:	85c2                	mv	a1,a6
2001059c:	4472                	lw	s0,28(sp)
2001059e:	6105                	addi	sp,sp,32
200105a0:	8082                	ret

200105a2 <ROUND>:
ROUND():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:11

static inline void ROUND(ascon_state_t* s, uint8_t C) {
200105a2:	7169                	addi	sp,sp,-304
200105a4:	12112623          	sw	ra,300(sp)
200105a8:	12812423          	sw	s0,296(sp)
200105ac:	13212223          	sw	s2,292(sp)
200105b0:	13312023          	sw	s3,288(sp)
200105b4:	11412e23          	sw	s4,284(sp)
200105b8:	11512c23          	sw	s5,280(sp)
200105bc:	11612a23          	sw	s6,276(sp)
200105c0:	11712823          	sw	s7,272(sp)
200105c4:	11812623          	sw	s8,268(sp)
200105c8:	11912423          	sw	s9,264(sp)
200105cc:	11a12223          	sw	s10,260(sp)
200105d0:	11b12023          	sw	s11,256(sp)
200105d4:	1a00                	addi	s0,sp,304
200105d6:	f8a42e23          	sw	a0,-100(s0)
200105da:	87ae                	mv	a5,a1
200105dc:	f8f40da3          	sb	a5,-101(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:14
  ascon_state_t t;
  /* addition of round constant */
  s->x[2] ^= C;
200105e0:	f9c42783          	lw	a5,-100(s0)
200105e4:	4b94                	lw	a3,16(a5)
200105e6:	4bd8                	lw	a4,20(a5)
200105e8:	f9b44783          	lbu	a5,-101(s0)
200105ec:	0ff7f793          	andi	a5,a5,255
200105f0:	883e                	mv	a6,a5
200105f2:	4881                	li	a7,0
200105f4:	0106c333          	xor	t1,a3,a6
200105f8:	011743b3          	xor	t2,a4,a7
200105fc:	f9c42783          	lw	a5,-100(s0)
20010600:	0067a823          	sw	t1,16(a5)
20010604:	0077aa23          	sw	t2,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:17
  /* printstate(" round constant", s); */
  /* substitution layer */
  s->x[0] ^= s->x[4];
20010608:	f9c42783          	lw	a5,-100(s0)
2001060c:	4394                	lw	a3,0(a5)
2001060e:	43d8                	lw	a4,4(a5)
20010610:	f9c42783          	lw	a5,-100(s0)
20010614:	0247a803          	lw	a6,36(a5)
20010618:	539c                	lw	a5,32(a5)
2001061a:	00f6ce33          	xor	t3,a3,a5
2001061e:	01074eb3          	xor	t4,a4,a6
20010622:	f9c42783          	lw	a5,-100(s0)
20010626:	01c7a023          	sw	t3,0(a5)
2001062a:	01d7a223          	sw	t4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:18
  s->x[4] ^= s->x[3];
2001062e:	f9c42783          	lw	a5,-100(s0)
20010632:	5394                	lw	a3,32(a5)
20010634:	53d8                	lw	a4,36(a5)
20010636:	f9c42783          	lw	a5,-100(s0)
2001063a:	01c7a803          	lw	a6,28(a5)
2001063e:	4f9c                	lw	a5,24(a5)
20010640:	00f6cc33          	xor	s8,a3,a5
20010644:	01074cb3          	xor	s9,a4,a6
20010648:	f9c42783          	lw	a5,-100(s0)
2001064c:	0387a023          	sw	s8,32(a5)
20010650:	0397a223          	sw	s9,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:19
  s->x[2] ^= s->x[1];
20010654:	f9c42783          	lw	a5,-100(s0)
20010658:	4b94                	lw	a3,16(a5)
2001065a:	4bd8                	lw	a4,20(a5)
2001065c:	f9c42783          	lw	a5,-100(s0)
20010660:	00c7a803          	lw	a6,12(a5)
20010664:	479c                	lw	a5,8(a5)
20010666:	00f6c633          	xor	a2,a3,a5
2001066a:	f8c42823          	sw	a2,-112(s0)
2001066e:	010747b3          	xor	a5,a4,a6
20010672:	f8f42a23          	sw	a5,-108(s0)
20010676:	f9c42783          	lw	a5,-100(s0)
2001067a:	f9042683          	lw	a3,-112(s0)
2001067e:	f9442703          	lw	a4,-108(s0)
20010682:	cb94                	sw	a3,16(a5)
20010684:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:21
  /* start of keccak s-box */
  t.x[0] = s->x[0] ^ (~s->x[1] & s->x[2]);
20010686:	f9c42783          	lw	a5,-100(s0)
2001068a:	4394                	lw	a3,0(a5)
2001068c:	43d8                	lw	a4,4(a5)
2001068e:	f9c42783          	lw	a5,-100(s0)
20010692:	00c7a803          	lw	a6,12(a5)
20010696:	479c                	lw	a5,8(a5)
20010698:	fff7c913          	not	s2,a5
2001069c:	fff84993          	not	s3,a6
200106a0:	f9c42783          	lw	a5,-100(s0)
200106a4:	0147a803          	lw	a6,20(a5)
200106a8:	4b9c                	lw	a5,16(a5)
200106aa:	00f97f33          	and	t5,s2,a5
200106ae:	0109ffb3          	and	t6,s3,a6
200106b2:	01e6c7b3          	xor	a5,a3,t5
200106b6:	f8f42423          	sw	a5,-120(s0)
200106ba:	01f747b3          	xor	a5,a4,t6
200106be:	f8f42623          	sw	a5,-116(s0)
200106c2:	f8842783          	lw	a5,-120(s0)
200106c6:	f8c42803          	lw	a6,-116(s0)
200106ca:	faf42423          	sw	a5,-88(s0)
200106ce:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:22
  t.x[1] = s->x[1] ^ (~s->x[2] & s->x[3]);
200106d2:	f9c42783          	lw	a5,-100(s0)
200106d6:	4794                	lw	a3,8(a5)
200106d8:	47d8                	lw	a4,12(a5)
200106da:	f9c42783          	lw	a5,-100(s0)
200106de:	0147a803          	lw	a6,20(a5)
200106e2:	4b9c                	lw	a5,16(a5)
200106e4:	fff7cb13          	not	s6,a5
200106e8:	fff84b93          	not	s7,a6
200106ec:	f9c42783          	lw	a5,-100(s0)
200106f0:	01c7a803          	lw	a6,28(a5)
200106f4:	4f9c                	lw	a5,24(a5)
200106f6:	00fb7a33          	and	s4,s6,a5
200106fa:	010bfab3          	and	s5,s7,a6
200106fe:	0146c7b3          	xor	a5,a3,s4
20010702:	f8f42023          	sw	a5,-128(s0)
20010706:	015747b3          	xor	a5,a4,s5
2001070a:	f8f42223          	sw	a5,-124(s0)
2001070e:	f8042783          	lw	a5,-128(s0)
20010712:	f8442803          	lw	a6,-124(s0)
20010716:	faf42823          	sw	a5,-80(s0)
2001071a:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:23
  t.x[2] = s->x[2] ^ (~s->x[3] & s->x[4]);
2001071e:	f9c42783          	lw	a5,-100(s0)
20010722:	4b94                	lw	a3,16(a5)
20010724:	4bd8                	lw	a4,20(a5)
20010726:	f9c42783          	lw	a5,-100(s0)
2001072a:	01c7a803          	lw	a6,28(a5)
2001072e:	4f9c                	lw	a5,24(a5)
20010730:	fff7c613          	not	a2,a5
20010734:	f6c42c23          	sw	a2,-136(s0)
20010738:	fff84793          	not	a5,a6
2001073c:	f6f42e23          	sw	a5,-132(s0)
20010740:	f9c42783          	lw	a5,-100(s0)
20010744:	0247a803          	lw	a6,36(a5)
20010748:	539c                	lw	a5,32(a5)
2001074a:	f7842583          	lw	a1,-136(s0)
2001074e:	f7c42603          	lw	a2,-132(s0)
20010752:	852e                	mv	a0,a1
20010754:	00f57d33          	and	s10,a0,a5
20010758:	01067db3          	and	s11,a2,a6
2001075c:	01a6c7b3          	xor	a5,a3,s10
20010760:	f6f42823          	sw	a5,-144(s0)
20010764:	01b747b3          	xor	a5,a4,s11
20010768:	f6f42a23          	sw	a5,-140(s0)
2001076c:	f7042783          	lw	a5,-144(s0)
20010770:	f7442803          	lw	a6,-140(s0)
20010774:	faf42c23          	sw	a5,-72(s0)
20010778:	fb042e23          	sw	a6,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:24
  t.x[3] = s->x[3] ^ (~s->x[4] & s->x[0]);
2001077c:	f9c42783          	lw	a5,-100(s0)
20010780:	4f94                	lw	a3,24(a5)
20010782:	4fd8                	lw	a4,28(a5)
20010784:	f9c42783          	lw	a5,-100(s0)
20010788:	0247a803          	lw	a6,36(a5)
2001078c:	539c                	lw	a5,32(a5)
2001078e:	fff7c613          	not	a2,a5
20010792:	f6c42423          	sw	a2,-152(s0)
20010796:	fff84793          	not	a5,a6
2001079a:	f6f42623          	sw	a5,-148(s0)
2001079e:	f9c42783          	lw	a5,-100(s0)
200107a2:	0047a803          	lw	a6,4(a5)
200107a6:	439c                	lw	a5,0(a5)
200107a8:	f6842583          	lw	a1,-152(s0)
200107ac:	f6c42603          	lw	a2,-148(s0)
200107b0:	852e                	mv	a0,a1
200107b2:	8d7d                	and	a0,a0,a5
200107b4:	f6a42023          	sw	a0,-160(s0)
200107b8:	010677b3          	and	a5,a2,a6
200107bc:	f6f42223          	sw	a5,-156(s0)
200107c0:	f6042783          	lw	a5,-160(s0)
200107c4:	f6442803          	lw	a6,-156(s0)
200107c8:	863e                	mv	a2,a5
200107ca:	8e35                	xor	a2,a2,a3
200107cc:	f4c42c23          	sw	a2,-168(s0)
200107d0:	87c2                	mv	a5,a6
200107d2:	8fb9                	xor	a5,a5,a4
200107d4:	f4f42e23          	sw	a5,-164(s0)
200107d8:	f5842783          	lw	a5,-168(s0)
200107dc:	f5c42803          	lw	a6,-164(s0)
200107e0:	fcf42023          	sw	a5,-64(s0)
200107e4:	fd042223          	sw	a6,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:25
  t.x[4] = s->x[4] ^ (~s->x[0] & s->x[1]);
200107e8:	f9c42783          	lw	a5,-100(s0)
200107ec:	5394                	lw	a3,32(a5)
200107ee:	53d8                	lw	a4,36(a5)
200107f0:	f9c42783          	lw	a5,-100(s0)
200107f4:	0047a803          	lw	a6,4(a5)
200107f8:	439c                	lw	a5,0(a5)
200107fa:	fff7c613          	not	a2,a5
200107fe:	f4c42823          	sw	a2,-176(s0)
20010802:	fff84793          	not	a5,a6
20010806:	f4f42a23          	sw	a5,-172(s0)
2001080a:	f9c42783          	lw	a5,-100(s0)
2001080e:	00c7a803          	lw	a6,12(a5)
20010812:	479c                	lw	a5,8(a5)
20010814:	f5042583          	lw	a1,-176(s0)
20010818:	f5442603          	lw	a2,-172(s0)
2001081c:	852e                	mv	a0,a1
2001081e:	8d7d                	and	a0,a0,a5
20010820:	f4a42423          	sw	a0,-184(s0)
20010824:	010677b3          	and	a5,a2,a6
20010828:	f4f42623          	sw	a5,-180(s0)
2001082c:	f4842783          	lw	a5,-184(s0)
20010830:	f4c42803          	lw	a6,-180(s0)
20010834:	863e                	mv	a2,a5
20010836:	8e35                	xor	a2,a2,a3
20010838:	f4c42023          	sw	a2,-192(s0)
2001083c:	87c2                	mv	a5,a6
2001083e:	8fb9                	xor	a5,a5,a4
20010840:	f4f42223          	sw	a5,-188(s0)
20010844:	f4042783          	lw	a5,-192(s0)
20010848:	f4442803          	lw	a6,-188(s0)
2001084c:	fcf42423          	sw	a5,-56(s0)
20010850:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:27
  /* end of keccak s-box */
  t.x[1] ^= t.x[0];
20010854:	fb042683          	lw	a3,-80(s0)
20010858:	fb442703          	lw	a4,-76(s0)
2001085c:	fa842783          	lw	a5,-88(s0)
20010860:	fac42803          	lw	a6,-84(s0)
20010864:	00f6c633          	xor	a2,a3,a5
20010868:	f2c42c23          	sw	a2,-200(s0)
2001086c:	010747b3          	xor	a5,a4,a6
20010870:	f2f42e23          	sw	a5,-196(s0)
20010874:	f3842783          	lw	a5,-200(s0)
20010878:	f3c42803          	lw	a6,-196(s0)
2001087c:	faf42823          	sw	a5,-80(s0)
20010880:	fb042a23          	sw	a6,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:28
  t.x[0] ^= t.x[4];
20010884:	fa842683          	lw	a3,-88(s0)
20010888:	fac42703          	lw	a4,-84(s0)
2001088c:	fc842783          	lw	a5,-56(s0)
20010890:	fcc42803          	lw	a6,-52(s0)
20010894:	00f6c633          	xor	a2,a3,a5
20010898:	f2c42823          	sw	a2,-208(s0)
2001089c:	010747b3          	xor	a5,a4,a6
200108a0:	f2f42a23          	sw	a5,-204(s0)
200108a4:	f3042783          	lw	a5,-208(s0)
200108a8:	f3442803          	lw	a6,-204(s0)
200108ac:	faf42423          	sw	a5,-88(s0)
200108b0:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:29
  t.x[3] ^= t.x[2];
200108b4:	fc042683          	lw	a3,-64(s0)
200108b8:	fc442703          	lw	a4,-60(s0)
200108bc:	fb842783          	lw	a5,-72(s0)
200108c0:	fbc42803          	lw	a6,-68(s0)
200108c4:	00f6c633          	xor	a2,a3,a5
200108c8:	f2c42423          	sw	a2,-216(s0)
200108cc:	010747b3          	xor	a5,a4,a6
200108d0:	f2f42623          	sw	a5,-212(s0)
200108d4:	f2842783          	lw	a5,-216(s0)
200108d8:	f2c42803          	lw	a6,-212(s0)
200108dc:	fcf42023          	sw	a5,-64(s0)
200108e0:	fd042223          	sw	a6,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:30
  t.x[2] = ~t.x[2];
200108e4:	fb842783          	lw	a5,-72(s0)
200108e8:	fbc42803          	lw	a6,-68(s0)
200108ec:	fff7c713          	not	a4,a5
200108f0:	f2e42023          	sw	a4,-224(s0)
200108f4:	fff84793          	not	a5,a6
200108f8:	f2f42223          	sw	a5,-220(s0)
200108fc:	f2042783          	lw	a5,-224(s0)
20010900:	f2442803          	lw	a6,-220(s0)
20010904:	faf42c23          	sw	a5,-72(s0)
20010908:	fb042e23          	sw	a6,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:33
  /* printstate(" substitution layer", &t); */
  /* linear diffusion layer */
  s->x[0] = t.x[0] ^ ROR(t.x[0], 19) ^ ROR(t.x[0], 28);
2001090c:	fa842903          	lw	s2,-88(s0)
20010910:	fac42983          	lw	s3,-84(s0)
20010914:	fa842783          	lw	a5,-88(s0)
20010918:	fac42803          	lw	a6,-84(s0)
2001091c:	464d                	li	a2,19
2001091e:	853e                	mv	a0,a5
20010920:	85c2                	mv	a1,a6
20010922:	3e7d                	jal	200104e0 <ROR>
20010924:	87aa                	mv	a5,a0
20010926:	882e                	mv	a6,a1
20010928:	00f94733          	xor	a4,s2,a5
2001092c:	f0e42c23          	sw	a4,-232(s0)
20010930:	0109c7b3          	xor	a5,s3,a6
20010934:	f0f42e23          	sw	a5,-228(s0)
20010938:	fa842783          	lw	a5,-88(s0)
2001093c:	fac42803          	lw	a6,-84(s0)
20010940:	4671                	li	a2,28
20010942:	853e                	mv	a0,a5
20010944:	85c2                	mv	a1,a6
20010946:	3e69                	jal	200104e0 <ROR>
20010948:	87aa                	mv	a5,a0
2001094a:	882e                	mv	a6,a1
2001094c:	f1842683          	lw	a3,-232(s0)
20010950:	f1c42703          	lw	a4,-228(s0)
20010954:	8636                	mv	a2,a3
20010956:	8e3d                	xor	a2,a2,a5
20010958:	f0c42823          	sw	a2,-240(s0)
2001095c:	010747b3          	xor	a5,a4,a6
20010960:	f0f42a23          	sw	a5,-236(s0)
20010964:	f9c42783          	lw	a5,-100(s0)
20010968:	f1042683          	lw	a3,-240(s0)
2001096c:	f1442703          	lw	a4,-236(s0)
20010970:	c394                	sw	a3,0(a5)
20010972:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:34
  s->x[1] = t.x[1] ^ ROR(t.x[1], 61) ^ ROR(t.x[1], 39);
20010974:	fb042903          	lw	s2,-80(s0)
20010978:	fb442983          	lw	s3,-76(s0)
2001097c:	fb042783          	lw	a5,-80(s0)
20010980:	fb442803          	lw	a6,-76(s0)
20010984:	03d00613          	li	a2,61
20010988:	853e                	mv	a0,a5
2001098a:	85c2                	mv	a1,a6
2001098c:	3e91                	jal	200104e0 <ROR>
2001098e:	87aa                	mv	a5,a0
20010990:	882e                	mv	a6,a1
20010992:	00f94733          	xor	a4,s2,a5
20010996:	f0e42423          	sw	a4,-248(s0)
2001099a:	0109c7b3          	xor	a5,s3,a6
2001099e:	f0f42623          	sw	a5,-244(s0)
200109a2:	fb042783          	lw	a5,-80(s0)
200109a6:	fb442803          	lw	a6,-76(s0)
200109aa:	02700613          	li	a2,39
200109ae:	853e                	mv	a0,a5
200109b0:	85c2                	mv	a1,a6
200109b2:	363d                	jal	200104e0 <ROR>
200109b4:	87aa                	mv	a5,a0
200109b6:	882e                	mv	a6,a1
200109b8:	f0842683          	lw	a3,-248(s0)
200109bc:	f0c42703          	lw	a4,-244(s0)
200109c0:	8636                	mv	a2,a3
200109c2:	8e3d                	xor	a2,a2,a5
200109c4:	f0c42023          	sw	a2,-256(s0)
200109c8:	010747b3          	xor	a5,a4,a6
200109cc:	f0f42223          	sw	a5,-252(s0)
200109d0:	f9c42783          	lw	a5,-100(s0)
200109d4:	f0042683          	lw	a3,-256(s0)
200109d8:	f0442703          	lw	a4,-252(s0)
200109dc:	c794                	sw	a3,8(a5)
200109de:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:35
  s->x[2] = t.x[2] ^ ROR(t.x[2], 1) ^ ROR(t.x[2], 6);
200109e0:	fb842903          	lw	s2,-72(s0)
200109e4:	fbc42983          	lw	s3,-68(s0)
200109e8:	fb842783          	lw	a5,-72(s0)
200109ec:	fbc42803          	lw	a6,-68(s0)
200109f0:	4605                	li	a2,1
200109f2:	853e                	mv	a0,a5
200109f4:	85c2                	mv	a1,a6
200109f6:	34ed                	jal	200104e0 <ROR>
200109f8:	87aa                	mv	a5,a0
200109fa:	882e                	mv	a6,a1
200109fc:	00f94733          	xor	a4,s2,a5
20010a00:	eee42c23          	sw	a4,-264(s0)
20010a04:	0109c7b3          	xor	a5,s3,a6
20010a08:	eef42e23          	sw	a5,-260(s0)
20010a0c:	fb842783          	lw	a5,-72(s0)
20010a10:	fbc42803          	lw	a6,-68(s0)
20010a14:	4619                	li	a2,6
20010a16:	853e                	mv	a0,a5
20010a18:	85c2                	mv	a1,a6
20010a1a:	34d9                	jal	200104e0 <ROR>
20010a1c:	87aa                	mv	a5,a0
20010a1e:	882e                	mv	a6,a1
20010a20:	ef842683          	lw	a3,-264(s0)
20010a24:	efc42703          	lw	a4,-260(s0)
20010a28:	8636                	mv	a2,a3
20010a2a:	8e3d                	xor	a2,a2,a5
20010a2c:	eec42823          	sw	a2,-272(s0)
20010a30:	010747b3          	xor	a5,a4,a6
20010a34:	eef42a23          	sw	a5,-268(s0)
20010a38:	f9c42783          	lw	a5,-100(s0)
20010a3c:	ef042683          	lw	a3,-272(s0)
20010a40:	ef442703          	lw	a4,-268(s0)
20010a44:	cb94                	sw	a3,16(a5)
20010a46:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:36
  s->x[3] = t.x[3] ^ ROR(t.x[3], 10) ^ ROR(t.x[3], 17);
20010a48:	fc042903          	lw	s2,-64(s0)
20010a4c:	fc442983          	lw	s3,-60(s0)
20010a50:	fc042783          	lw	a5,-64(s0)
20010a54:	fc442803          	lw	a6,-60(s0)
20010a58:	4629                	li	a2,10
20010a5a:	853e                	mv	a0,a5
20010a5c:	85c2                	mv	a1,a6
20010a5e:	3449                	jal	200104e0 <ROR>
20010a60:	87aa                	mv	a5,a0
20010a62:	882e                	mv	a6,a1
20010a64:	00f94733          	xor	a4,s2,a5
20010a68:	eee42423          	sw	a4,-280(s0)
20010a6c:	0109c7b3          	xor	a5,s3,a6
20010a70:	eef42623          	sw	a5,-276(s0)
20010a74:	fc042783          	lw	a5,-64(s0)
20010a78:	fc442803          	lw	a6,-60(s0)
20010a7c:	4645                	li	a2,17
20010a7e:	853e                	mv	a0,a5
20010a80:	85c2                	mv	a1,a6
20010a82:	3cb9                	jal	200104e0 <ROR>
20010a84:	87aa                	mv	a5,a0
20010a86:	882e                	mv	a6,a1
20010a88:	ee842683          	lw	a3,-280(s0)
20010a8c:	eec42703          	lw	a4,-276(s0)
20010a90:	8636                	mv	a2,a3
20010a92:	8e3d                	xor	a2,a2,a5
20010a94:	eec42023          	sw	a2,-288(s0)
20010a98:	010747b3          	xor	a5,a4,a6
20010a9c:	eef42223          	sw	a5,-284(s0)
20010aa0:	f9c42783          	lw	a5,-100(s0)
20010aa4:	ee042683          	lw	a3,-288(s0)
20010aa8:	ee442703          	lw	a4,-284(s0)
20010aac:	cf94                	sw	a3,24(a5)
20010aae:	cfd8                	sw	a4,28(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:37
  s->x[4] = t.x[4] ^ ROR(t.x[4], 7) ^ ROR(t.x[4], 41);
20010ab0:	fc842903          	lw	s2,-56(s0)
20010ab4:	fcc42983          	lw	s3,-52(s0)
20010ab8:	fc842783          	lw	a5,-56(s0)
20010abc:	fcc42803          	lw	a6,-52(s0)
20010ac0:	461d                	li	a2,7
20010ac2:	853e                	mv	a0,a5
20010ac4:	85c2                	mv	a1,a6
20010ac6:	3c29                	jal	200104e0 <ROR>
20010ac8:	87aa                	mv	a5,a0
20010aca:	882e                	mv	a6,a1
20010acc:	00f94733          	xor	a4,s2,a5
20010ad0:	ece42c23          	sw	a4,-296(s0)
20010ad4:	0109c7b3          	xor	a5,s3,a6
20010ad8:	ecf42e23          	sw	a5,-292(s0)
20010adc:	fc842783          	lw	a5,-56(s0)
20010ae0:	fcc42803          	lw	a6,-52(s0)
20010ae4:	02900613          	li	a2,41
20010ae8:	853e                	mv	a0,a5
20010aea:	85c2                	mv	a1,a6
20010aec:	3ad5                	jal	200104e0 <ROR>
20010aee:	87aa                	mv	a5,a0
20010af0:	882e                	mv	a6,a1
20010af2:	ed842683          	lw	a3,-296(s0)
20010af6:	edc42703          	lw	a4,-292(s0)
20010afa:	8636                	mv	a2,a3
20010afc:	8e3d                	xor	a2,a2,a5
20010afe:	ecc42823          	sw	a2,-304(s0)
20010b02:	010747b3          	xor	a5,a4,a6
20010b06:	ecf42a23          	sw	a5,-300(s0)
20010b0a:	f9c42783          	lw	a5,-100(s0)
20010b0e:	ed042683          	lw	a3,-304(s0)
20010b12:	ed442703          	lw	a4,-300(s0)
20010b16:	d394                	sw	a3,32(a5)
20010b18:	d3d8                	sw	a4,36(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/round.h:39
  //printstate(" round output", s);
}
20010b1a:	0001                	nop
20010b1c:	12c12083          	lw	ra,300(sp)
20010b20:	12812403          	lw	s0,296(sp)
20010b24:	12412903          	lw	s2,292(sp)
20010b28:	12012983          	lw	s3,288(sp)
20010b2c:	11c12a03          	lw	s4,284(sp)
20010b30:	11812a83          	lw	s5,280(sp)
20010b34:	11412b03          	lw	s6,276(sp)
20010b38:	11012b83          	lw	s7,272(sp)
20010b3c:	10c12c03          	lw	s8,268(sp)
20010b40:	10812c83          	lw	s9,264(sp)
20010b44:	10412d03          	lw	s10,260(sp)
20010b48:	10012d83          	lw	s11,256(sp)
20010b4c:	6155                	addi	sp,sp,304
20010b4e:	8082                	ret

20010b50 <P12>:
P12():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:10

#include "ascon.h"
#include "constants.h"
#include "round.h"

static inline void P12(ascon_state_t* s) {
20010b50:	1101                	addi	sp,sp,-32
20010b52:	ce06                	sw	ra,28(sp)
20010b54:	cc22                	sw	s0,24(sp)
20010b56:	1000                	addi	s0,sp,32
20010b58:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:11
  ROUND(s, 0xf0);
20010b5c:	0f000593          	li	a1,240
20010b60:	fec42503          	lw	a0,-20(s0)
20010b64:	3c3d                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:12
  ROUND(s, 0xe1);
20010b66:	0e100593          	li	a1,225
20010b6a:	fec42503          	lw	a0,-20(s0)
20010b6e:	3c15                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:13
  ROUND(s, 0xd2);
20010b70:	0d200593          	li	a1,210
20010b74:	fec42503          	lw	a0,-20(s0)
20010b78:	342d                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:14
  ROUND(s, 0xc3);
20010b7a:	0c300593          	li	a1,195
20010b7e:	fec42503          	lw	a0,-20(s0)
20010b82:	3405                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:15
  ROUND(s, 0xb4);
20010b84:	0b400593          	li	a1,180
20010b88:	fec42503          	lw	a0,-20(s0)
20010b8c:	3c19                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:16
  ROUND(s, 0xa5);
20010b8e:	0a500593          	li	a1,165
20010b92:	fec42503          	lw	a0,-20(s0)
20010b96:	3431                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:17
  ROUND(s, 0x96);
20010b98:	09600593          	li	a1,150
20010b9c:	fec42503          	lw	a0,-20(s0)
20010ba0:	3409                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:18
  ROUND(s, 0x87);
20010ba2:	08700593          	li	a1,135
20010ba6:	fec42503          	lw	a0,-20(s0)
20010baa:	3ae5                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:19
  ROUND(s, 0x78);
20010bac:	07800593          	li	a1,120
20010bb0:	fec42503          	lw	a0,-20(s0)
20010bb4:	32fd                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:20
  ROUND(s, 0x69);
20010bb6:	06900593          	li	a1,105
20010bba:	fec42503          	lw	a0,-20(s0)
20010bbe:	32d5                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:21
  ROUND(s, 0x5a);
20010bc0:	05a00593          	li	a1,90
20010bc4:	fec42503          	lw	a0,-20(s0)
20010bc8:	3ae9                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:22
  ROUND(s, 0x4b);
20010bca:	04b00593          	li	a1,75
20010bce:	fec42503          	lw	a0,-20(s0)
20010bd2:	3ac1                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:23
}
20010bd4:	0001                	nop
20010bd6:	40f2                	lw	ra,28(sp)
20010bd8:	4462                	lw	s0,24(sp)
20010bda:	6105                	addi	sp,sp,32
20010bdc:	8082                	ret

20010bde <P6>:
P6():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:36
  ROUND(s, 0x69);
  ROUND(s, 0x5a);
  ROUND(s, 0x4b);
}

static inline void P6(ascon_state_t* s) {
20010bde:	1101                	addi	sp,sp,-32
20010be0:	ce06                	sw	ra,28(sp)
20010be2:	cc22                	sw	s0,24(sp)
20010be4:	1000                	addi	s0,sp,32
20010be6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:37
  ROUND(s, 0x96);
20010bea:	09600593          	li	a1,150
20010bee:	fec42503          	lw	a0,-20(s0)
20010bf2:	3a45                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:38
  ROUND(s, 0x87);
20010bf4:	08700593          	li	a1,135
20010bf8:	fec42503          	lw	a0,-20(s0)
20010bfc:	325d                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:39
  ROUND(s, 0x78);
20010bfe:	07800593          	li	a1,120
20010c02:	fec42503          	lw	a0,-20(s0)
20010c06:	3a71                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:40
  ROUND(s, 0x69);
20010c08:	06900593          	li	a1,105
20010c0c:	fec42503          	lw	a0,-20(s0)
20010c10:	3a49                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:41
  ROUND(s, 0x5a);
20010c12:	05a00593          	li	a1,90
20010c16:	fec42503          	lw	a0,-20(s0)
20010c1a:	3261                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:42
  ROUND(s, 0x4b);
20010c1c:	04b00593          	li	a1,75
20010c20:	fec42503          	lw	a0,-20(s0)
20010c24:	3abd                	jal	200105a2 <ROUND>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/permutations.h:43
}
20010c26:	0001                	nop
20010c28:	40f2                	lw	ra,28(sp)
20010c2a:	4462                	lw	s0,24(sp)
20010c2c:	6105                	addi	sp,sp,32
20010c2e:	8082                	ret

20010c30 <LOADBYTES>:
LOADBYTES():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:20

/* set padding byte in 64-bit Ascon word */
#define PAD(i) SETBYTE(0x80, i)

/* load bytes into 64-bit Ascon word */
static inline uint64_t LOADBYTES(const uint8_t* bytes, int n) {
20010c30:	7179                	addi	sp,sp,-48
20010c32:	d622                	sw	s0,44(sp)
20010c34:	1800                	addi	s0,sp,48
20010c36:	fca42e23          	sw	a0,-36(s0)
20010c3a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:22
  int i;
  uint64_t x = 0;
20010c3e:	4581                	li	a1,0
20010c40:	4601                	li	a2,0
20010c42:	feb42023          	sw	a1,-32(s0)
20010c46:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:23
  for (i = 0; i < n; ++i){ x |= SETBYTE(bytes[i], i);
20010c4a:	fe042623          	sw	zero,-20(s0)
20010c4e:	a0a5                	j	20010cb6 <LOADBYTES+0x86>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:23 (discriminator 3)
20010c50:	fec42603          	lw	a2,-20(s0)
20010c54:	fdc42583          	lw	a1,-36(s0)
20010c58:	962e                	add	a2,a2,a1
20010c5a:	00064603          	lbu	a2,0(a2) # 80000000 <metal_segment_heap_target_end+0xffffe7d4>
20010c5e:	86b2                	mv	a3,a2
20010c60:	4701                	li	a4,0
20010c62:	459d                	li	a1,7
20010c64:	fec42603          	lw	a2,-20(s0)
20010c68:	40c58633          	sub	a2,a1,a2
20010c6c:	060e                	slli	a2,a2,0x3
20010c6e:	fe060593          	addi	a1,a2,-32
20010c72:	0005c663          	bltz	a1,20010c7e <LOADBYTES+0x4e>
20010c76:	00b69833          	sll	a6,a3,a1
20010c7a:	4781                	li	a5,0
20010c7c:	a829                	j	20010c96 <LOADBYTES+0x66>
20010c7e:	0016d513          	srli	a0,a3,0x1
20010c82:	45fd                	li	a1,31
20010c84:	8d91                	sub	a1,a1,a2
20010c86:	00b555b3          	srl	a1,a0,a1
20010c8a:	00c71833          	sll	a6,a4,a2
20010c8e:	0105e833          	or	a6,a1,a6
20010c92:	00c697b3          	sll	a5,a3,a2
20010c96:	fe042603          	lw	a2,-32(s0)
20010c9a:	8e5d                	or	a2,a2,a5
20010c9c:	fec42023          	sw	a2,-32(s0)
20010ca0:	fe442603          	lw	a2,-28(s0)
20010ca4:	01066633          	or	a2,a2,a6
20010ca8:	fec42223          	sw	a2,-28(s0)
20010cac:	fec42603          	lw	a2,-20(s0)
20010cb0:	0605                	addi	a2,a2,1
20010cb2:	fec42623          	sw	a2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:23 (discriminator 1)
20010cb6:	fec42583          	lw	a1,-20(s0)
20010cba:	fd842603          	lw	a2,-40(s0)
20010cbe:	f8c5c9e3          	blt	a1,a2,20010c50 <LOADBYTES+0x20>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:25
  };
  return x;
20010cc2:	fe042783          	lw	a5,-32(s0)
20010cc6:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:26
}
20010cca:	853e                	mv	a0,a5
20010ccc:	85c2                	mv	a1,a6
20010cce:	5432                	lw	s0,44(sp)
20010cd0:	6145                	addi	sp,sp,48
20010cd2:	8082                	ret

20010cd4 <STOREBYTES>:
STOREBYTES():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:29

/* store bytes from 64-bit Ascon word */
static inline void STOREBYTES(uint8_t* bytes, uint64_t x, int n) {
20010cd4:	7179                	addi	sp,sp,-48
20010cd6:	d622                	sw	s0,44(sp)
20010cd8:	1800                	addi	s0,sp,48
20010cda:	fca42e23          	sw	a0,-36(s0)
20010cde:	fcb42823          	sw	a1,-48(s0)
20010ce2:	fcc42a23          	sw	a2,-44(s0)
20010ce6:	fcd42c23          	sw	a3,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:31
  int i;
  for (i = 0; i < n; ++i) bytes[i] = GETBYTE(x, i);
20010cea:	fe042623          	sw	zero,-20(s0)
20010cee:	a085                	j	20010d4e <STOREBYTES+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:31 (discriminator 3)
20010cf0:	469d                	li	a3,7
20010cf2:	fec42703          	lw	a4,-20(s0)
20010cf6:	40e68733          	sub	a4,a3,a4
20010cfa:	070e                	slli	a4,a4,0x3
20010cfc:	fe070693          	addi	a3,a4,-32 # 1fe0 <__heap_size+0x17e0>
20010d00:	0006c863          	bltz	a3,20010d10 <STOREBYTES+0x3c>
20010d04:	fd442703          	lw	a4,-44(s0)
20010d08:	00d757b3          	srl	a5,a4,a3
20010d0c:	4801                	li	a6,0
20010d0e:	a015                	j	20010d32 <STOREBYTES+0x5e>
20010d10:	fd442683          	lw	a3,-44(s0)
20010d14:	00169613          	slli	a2,a3,0x1
20010d18:	46fd                	li	a3,31
20010d1a:	8e99                	sub	a3,a3,a4
20010d1c:	00d616b3          	sll	a3,a2,a3
20010d20:	fd042603          	lw	a2,-48(s0)
20010d24:	00e657b3          	srl	a5,a2,a4
20010d28:	8fd5                	or	a5,a5,a3
20010d2a:	fd442683          	lw	a3,-44(s0)
20010d2e:	00e6d833          	srl	a6,a3,a4
20010d32:	fec42703          	lw	a4,-20(s0)
20010d36:	fdc42683          	lw	a3,-36(s0)
20010d3a:	9736                	add	a4,a4,a3
20010d3c:	0ff7f693          	andi	a3,a5,255
20010d40:	00d70023          	sb	a3,0(a4)
20010d44:	fec42703          	lw	a4,-20(s0)
20010d48:	0705                	addi	a4,a4,1
20010d4a:	fee42623          	sw	a4,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:31 (discriminator 1)
20010d4e:	fec42683          	lw	a3,-20(s0)
20010d52:	fd842703          	lw	a4,-40(s0)
20010d56:	f8e6cde3          	blt	a3,a4,20010cf0 <STOREBYTES+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/word.h:32
}
20010d5a:	0001                	nop
20010d5c:	5432                	lw	s0,44(sp)
20010d5e:	6145                	addi	sp,sp,48
20010d60:	8082                	ret

20010d62 <crypto_aead_encrypt>:
crypto_aead_encrypt():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:43
*/
int crypto_aead_encrypt(unsigned char *c, unsigned long long *clen,
                        const unsigned char *m, unsigned long long mlen,
                        const unsigned char *ad, unsigned long long adlen,
                        const unsigned char *npub,
                        const unsigned char *k) {
20010d62:	7151                	addi	sp,sp,-240
20010d64:	d786                	sw	ra,236(sp)
20010d66:	d5a2                	sw	s0,232(sp)
20010d68:	d3ca                	sw	s2,228(sp)
20010d6a:	d1ce                	sw	s3,224(sp)
20010d6c:	cfd2                	sw	s4,220(sp)
20010d6e:	cdd6                	sw	s5,216(sp)
20010d70:	cbda                	sw	s6,212(sp)
20010d72:	c9de                	sw	s7,208(sp)
20010d74:	c7e2                	sw	s8,204(sp)
20010d76:	c5e6                	sw	s9,200(sp)
20010d78:	c3ea                	sw	s10,196(sp)
20010d7a:	c1ee                	sw	s11,192(sp)
20010d7c:	1980                	addi	s0,sp,240
20010d7e:	f6a42e23          	sw	a0,-132(s0)
20010d82:	f6b42c23          	sw	a1,-136(s0)
20010d86:	f6c42a23          	sw	a2,-140(s0)
20010d8a:	f6d42423          	sw	a3,-152(s0)
20010d8e:	f6e42623          	sw	a4,-148(s0)
20010d92:	f6f42823          	sw	a5,-144(s0)
20010d96:	f7042023          	sw	a6,-160(s0)
20010d9a:	f7142223          	sw	a7,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:47


    /* set ciphertext size */
    *clen = mlen + CRYPTO_ABYTES;
20010d9e:	f6842783          	lw	a5,-152(s0)
20010da2:	f6c42803          	lw	a6,-148(s0)
20010da6:	46c1                	li	a3,16
20010da8:	4701                	li	a4,0
20010daa:	00d78533          	add	a0,a5,a3
20010dae:	862a                	mv	a2,a0
20010db0:	00f63633          	sltu	a2,a2,a5
20010db4:	00e805b3          	add	a1,a6,a4
20010db8:	00b607b3          	add	a5,a2,a1
20010dbc:	85be                	mv	a1,a5
20010dbe:	86aa                	mv	a3,a0
20010dc0:	872e                	mv	a4,a1
20010dc2:	f7842783          	lw	a5,-136(s0)
20010dc6:	c394                	sw	a3,0(a5)
20010dc8:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:50

    /* load key and nonce */
    const uint64_t K0 = LOADBYTES(k, 8);
20010dca:	45a1                	li	a1,8
20010dcc:	4048                	lw	a0,4(s0)
20010dce:	358d                	jal	20010c30 <LOADBYTES>
20010dd0:	fca42423          	sw	a0,-56(s0)
20010dd4:	fcb42623          	sw	a1,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:51
    const uint64_t K1 = LOADBYTES(k + 8, 8);
20010dd8:	405c                	lw	a5,4(s0)
20010dda:	07a1                	addi	a5,a5,8
20010ddc:	45a1                	li	a1,8
20010dde:	853e                	mv	a0,a5
20010de0:	3d81                	jal	20010c30 <LOADBYTES>
20010de2:	fca42023          	sw	a0,-64(s0)
20010de6:	fcb42223          	sw	a1,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:52
    const uint64_t N0 = LOADBYTES(npub, 8);
20010dea:	45a1                	li	a1,8
20010dec:	4008                	lw	a0,0(s0)
20010dee:	3589                	jal	20010c30 <LOADBYTES>
20010df0:	faa42c23          	sw	a0,-72(s0)
20010df4:	fab42e23          	sw	a1,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:53
    const uint64_t N1 = LOADBYTES(npub + 8, 8);
20010df8:	401c                	lw	a5,0(s0)
20010dfa:	07a1                	addi	a5,a5,8
20010dfc:	45a1                	li	a1,8
20010dfe:	853e                	mv	a0,a5
20010e00:	3d05                	jal	20010c30 <LOADBYTES>
20010e02:	faa42823          	sw	a0,-80(s0)
20010e06:	fab42a23          	sw	a1,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:57

    /* initialize */
    ascon_state_t s;
    s.x[0] = ASCON_128_IV;
20010e0a:	4781                	li	a5,0
20010e0c:	80401837          	lui	a6,0x80401
20010e10:	c0680813          	addi	a6,a6,-1018 # 80400c06 <metal_segment_heap_target_end+0x3ff3da>
20010e14:	f8f42423          	sw	a5,-120(s0)
20010e18:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:58
    s.x[1] = K0;
20010e1c:	fc842783          	lw	a5,-56(s0)
20010e20:	fcc42803          	lw	a6,-52(s0)
20010e24:	f8f42823          	sw	a5,-112(s0)
20010e28:	f9042a23          	sw	a6,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:59
    s.x[2] = K1;
20010e2c:	fc042783          	lw	a5,-64(s0)
20010e30:	fc442803          	lw	a6,-60(s0)
20010e34:	f8f42c23          	sw	a5,-104(s0)
20010e38:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:60
    s.x[3] = N0;
20010e3c:	fb842783          	lw	a5,-72(s0)
20010e40:	fbc42803          	lw	a6,-68(s0)
20010e44:	faf42023          	sw	a5,-96(s0)
20010e48:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:61
    s.x[4] = N1;
20010e4c:	fb042783          	lw	a5,-80(s0)
20010e50:	fb442803          	lw	a6,-76(s0)
20010e54:	faf42423          	sw	a5,-88(s0)
20010e58:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:64
    //printf("init 1st key xor\n");
    //printS(&s);
    P12(&s);
20010e5c:	f8840793          	addi	a5,s0,-120
20010e60:	853e                	mv	a0,a5
20010e62:	31fd                	jal	20010b50 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:65
    s.x[3] ^= K0;
20010e64:	fa042783          	lw	a5,-96(s0)
20010e68:	fa442803          	lw	a6,-92(s0)
20010e6c:	fc842703          	lw	a4,-56(s0)
20010e70:	00f74b33          	xor	s6,a4,a5
20010e74:	fcc42703          	lw	a4,-52(s0)
20010e78:	01074bb3          	xor	s7,a4,a6
20010e7c:	fb642023          	sw	s6,-96(s0)
20010e80:	fb742223          	sw	s7,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:66
    s.x[4] ^= K1;
20010e84:	fa842783          	lw	a5,-88(s0)
20010e88:	fac42803          	lw	a6,-84(s0)
20010e8c:	fc042703          	lw	a4,-64(s0)
20010e90:	00f74c33          	xor	s8,a4,a5
20010e94:	fc442703          	lw	a4,-60(s0)
20010e98:	01074cb3          	xor	s9,a4,a6
20010e9c:	fb842423          	sw	s8,-88(s0)
20010ea0:	fb942623          	sw	s9,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:70
    //printf("init 2nd key xor \n");
    //printS(&s);

    if (adlen) {
20010ea4:	f6042783          	lw	a5,-160(s0)
20010ea8:	f6442703          	lw	a4,-156(s0)
20010eac:	8fd9                	or	a5,a5,a4
20010eae:	12078363          	beqz	a5,20010fd4 <crypto_aead_encrypt+0x272>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:72
        /* full associated data blocks */
        while (adlen >= ASCON_128_RATE) {
20010eb2:	a085                	j	20010f12 <crypto_aead_encrypt+0x1b0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:73
            s.x[0] ^= LOADBYTES(ad, 8);
20010eb4:	45a1                	li	a1,8
20010eb6:	f7042503          	lw	a0,-144(s0)
20010eba:	3b9d                	jal	20010c30 <LOADBYTES>
20010ebc:	86aa                	mv	a3,a0
20010ebe:	872e                	mv	a4,a1
20010ec0:	f8842783          	lw	a5,-120(s0)
20010ec4:	f8c42803          	lw	a6,-116(s0)
20010ec8:	00f6cd33          	xor	s10,a3,a5
20010ecc:	01074db3          	xor	s11,a4,a6
20010ed0:	f9a42423          	sw	s10,-120(s0)
20010ed4:	f9b42623          	sw	s11,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:75
           // printf("pad ad %lx \n", LOADBYTES(ad, 8));
            P6(&s);
20010ed8:	f8840793          	addi	a5,s0,-120
20010edc:	853e                	mv	a0,a5
20010ede:	3301                	jal	20010bde <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:78
            //printf("absorb adata \n");
            //printS(&s);
            ad += ASCON_128_RATE;
20010ee0:	f7042783          	lw	a5,-144(s0)
20010ee4:	07a1                	addi	a5,a5,8
20010ee6:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:79
            adlen -= ASCON_128_RATE;
20010eea:	f6042783          	lw	a5,-160(s0)
20010eee:	f6442803          	lw	a6,-156(s0)
20010ef2:	56e1                	li	a3,-8
20010ef4:	577d                	li	a4,-1
20010ef6:	00d785b3          	add	a1,a5,a3
20010efa:	852e                	mv	a0,a1
20010efc:	00f53533          	sltu	a0,a0,a5
20010f00:	00e80633          	add	a2,a6,a4
20010f04:	00c507b3          	add	a5,a0,a2
20010f08:	863e                	mv	a2,a5
20010f0a:	f6b42023          	sw	a1,-160(s0)
20010f0e:	f6c42223          	sw	a2,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:72
        while (adlen >= ASCON_128_RATE) {
20010f12:	f6442783          	lw	a5,-156(s0)
20010f16:	ffd9                	bnez	a5,20010eb4 <crypto_aead_encrypt+0x152>
20010f18:	f6442783          	lw	a5,-156(s0)
20010f1c:	e791                	bnez	a5,20010f28 <crypto_aead_encrypt+0x1c6>
20010f1e:	f6042703          	lw	a4,-160(s0)
20010f22:	479d                	li	a5,7
20010f24:	f8e7e8e3          	bltu	a5,a4,20010eb4 <crypto_aead_encrypt+0x152>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:82
        }
        /* final associated data block */
        s.x[0] ^= LOADBYTES(ad, adlen);
20010f28:	f6042783          	lw	a5,-160(s0)
20010f2c:	85be                	mv	a1,a5
20010f2e:	f7042503          	lw	a0,-144(s0)
20010f32:	39fd                	jal	20010c30 <LOADBYTES>
20010f34:	86aa                	mv	a3,a0
20010f36:	872e                	mv	a4,a1
20010f38:	f8842783          	lw	a5,-120(s0)
20010f3c:	f8c42803          	lw	a6,-116(s0)
20010f40:	00f6c633          	xor	a2,a3,a5
20010f44:	f4c42c23          	sw	a2,-168(s0)
20010f48:	010747b3          	xor	a5,a4,a6
20010f4c:	f4f42e23          	sw	a5,-164(s0)
20010f50:	f5842783          	lw	a5,-168(s0)
20010f54:	f5c42803          	lw	a6,-164(s0)
20010f58:	f8f42423          	sw	a5,-120(s0)
20010f5c:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:85
        // printf("ad %lx \n",*ad);
        //printf("pad %lld ad %lx \n", adlen, LOADBYTES(ad, adlen));
        s.x[0] ^= PAD(adlen);
20010f60:	f8842683          	lw	a3,-120(s0)
20010f64:	f8c42703          	lw	a4,-116(s0)
20010f68:	f6042603          	lw	a2,-160(s0)
20010f6c:	4781                	li	a5,0
20010f6e:	8f91                	sub	a5,a5,a2
20010f70:	078e                	slli	a5,a5,0x3
20010f72:	03878793          	addi	a5,a5,56
20010f76:	fe078613          	addi	a2,a5,-32
20010f7a:	00064863          	bltz	a2,20010f8a <crypto_aead_encrypt+0x228>
20010f7e:	08000793          	li	a5,128
20010f82:	00c79ab3          	sll	s5,a5,a2
20010f86:	4a01                	li	s4,0
20010f88:	a015                	j	20010fac <crypto_aead_encrypt+0x24a>
20010f8a:	08000613          	li	a2,128
20010f8e:	00165593          	srli	a1,a2,0x1
20010f92:	467d                	li	a2,31
20010f94:	8e1d                	sub	a2,a2,a5
20010f96:	00c5d633          	srl	a2,a1,a2
20010f9a:	4581                	li	a1,0
20010f9c:	00f59ab3          	sll	s5,a1,a5
20010fa0:	01566ab3          	or	s5,a2,s5
20010fa4:	08000613          	li	a2,128
20010fa8:	00f61a33          	sll	s4,a2,a5
20010fac:	0146c7b3          	xor	a5,a3,s4
20010fb0:	f4f42823          	sw	a5,-176(s0)
20010fb4:	015747b3          	xor	a5,a4,s5
20010fb8:	f4f42a23          	sw	a5,-172(s0)
20010fbc:	f5042783          	lw	a5,-176(s0)
20010fc0:	f5442803          	lw	a6,-172(s0)
20010fc4:	f8f42423          	sw	a5,-120(s0)
20010fc8:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:86
        P6(&s);
20010fcc:	f8840793          	addi	a5,s0,-120
20010fd0:	853e                	mv	a0,a5
20010fd2:	3131                	jal	20010bde <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:90

    }
    /* domain separation */
    s.x[4] ^= 1;
20010fd4:	fa842783          	lw	a5,-88(s0)
20010fd8:	fac42803          	lw	a6,-84(s0)
20010fdc:	0017c713          	xori	a4,a5,1
20010fe0:	f4e42423          	sw	a4,-184(s0)
20010fe4:	00084793          	xori	a5,a6,0
20010fe8:	f4f42623          	sw	a5,-180(s0)
20010fec:	f4842783          	lw	a5,-184(s0)
20010ff0:	f4c42803          	lw	a6,-180(s0)
20010ff4:	faf42423          	sw	a5,-88(s0)
20010ff8:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:95
    // printf("AD Domain separation \n");
   //  printS(&s);

    /* full plaintext blocks */
    while (mlen >= ASCON_128_RATE) {
20010ffc:	a079                	j	2001108a <crypto_aead_encrypt+0x328>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:96
        s.x[0] ^= LOADBYTES(m, 8);
20010ffe:	45a1                	li	a1,8
20011000:	f7442503          	lw	a0,-140(s0)
20011004:	3135                	jal	20010c30 <LOADBYTES>
20011006:	86aa                	mv	a3,a0
20011008:	872e                	mv	a4,a1
2001100a:	f8842783          	lw	a5,-120(s0)
2001100e:	f8c42803          	lw	a6,-116(s0)
20011012:	00f6c633          	xor	a2,a3,a5
20011016:	f4c42023          	sw	a2,-192(s0)
2001101a:	010747b3          	xor	a5,a4,a6
2001101e:	f4f42223          	sw	a5,-188(s0)
20011022:	f4042783          	lw	a5,-192(s0)
20011026:	f4442803          	lw	a6,-188(s0)
2001102a:	f8f42423          	sw	a5,-120(s0)
2001102e:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:97
        STOREBYTES(c, s.x[0], 8);
20011032:	f8842783          	lw	a5,-120(s0)
20011036:	f8c42803          	lw	a6,-116(s0)
2001103a:	46a1                	li	a3,8
2001103c:	85be                	mv	a1,a5
2001103e:	8642                	mv	a2,a6
20011040:	f7c42503          	lw	a0,-132(s0)
20011044:	3941                	jal	20010cd4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:102

        //printf("absorb plain \n");
       // printS(&s);

        P6(&s);
20011046:	f8840793          	addi	a5,s0,-120
2001104a:	853e                	mv	a0,a5
2001104c:	3e49                	jal	20010bde <P6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:103
        m += ASCON_128_RATE;
2001104e:	f7442783          	lw	a5,-140(s0)
20011052:	07a1                	addi	a5,a5,8
20011054:	f6f42a23          	sw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:104
        c += ASCON_128_RATE;
20011058:	f7c42783          	lw	a5,-132(s0)
2001105c:	07a1                	addi	a5,a5,8
2001105e:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:105
        mlen -= ASCON_128_RATE;
20011062:	f6842683          	lw	a3,-152(s0)
20011066:	f6c42703          	lw	a4,-148(s0)
2001106a:	55e1                	li	a1,-8
2001106c:	567d                	li	a2,-1
2001106e:	00b687b3          	add	a5,a3,a1
20011072:	853e                	mv	a0,a5
20011074:	00d53533          	sltu	a0,a0,a3
20011078:	00c70833          	add	a6,a4,a2
2001107c:	01050733          	add	a4,a0,a6
20011080:	883a                	mv	a6,a4
20011082:	f6f42423          	sw	a5,-152(s0)
20011086:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:95
    while (mlen >= ASCON_128_RATE) {
2001108a:	f6c42783          	lw	a5,-148(s0)
2001108e:	fba5                	bnez	a5,20010ffe <crypto_aead_encrypt+0x29c>
20011090:	f6c42783          	lw	a5,-148(s0)
20011094:	e791                	bnez	a5,200110a0 <crypto_aead_encrypt+0x33e>
20011096:	f6842703          	lw	a4,-152(s0)
2001109a:	479d                	li	a5,7
2001109c:	f6e7e1e3          	bltu	a5,a4,20010ffe <crypto_aead_encrypt+0x29c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:108
    }
    /* final plaintext block */
    s.x[0] ^= LOADBYTES(m, mlen);
200110a0:	f6842783          	lw	a5,-152(s0)
200110a4:	85be                	mv	a1,a5
200110a6:	f7442503          	lw	a0,-140(s0)
200110aa:	3659                	jal	20010c30 <LOADBYTES>
200110ac:	86aa                	mv	a3,a0
200110ae:	872e                	mv	a4,a1
200110b0:	f8842783          	lw	a5,-120(s0)
200110b4:	f8c42803          	lw	a6,-116(s0)
200110b8:	00f6c633          	xor	a2,a3,a5
200110bc:	f2c42c23          	sw	a2,-200(s0)
200110c0:	010747b3          	xor	a5,a4,a6
200110c4:	f2f42e23          	sw	a5,-196(s0)
200110c8:	f3842783          	lw	a5,-200(s0)
200110cc:	f3c42803          	lw	a6,-196(s0)
200110d0:	f8f42423          	sw	a5,-120(s0)
200110d4:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:112
    //printf("C: %lx\n", LOADBYTES(m, mlen));
    // printf("C S_0: %lx\n", s.x[0]);

    STOREBYTES(c, s.x[0], mlen);
200110d8:	f8842783          	lw	a5,-120(s0)
200110dc:	f8c42803          	lw	a6,-116(s0)
200110e0:	f6842703          	lw	a4,-152(s0)
200110e4:	86ba                	mv	a3,a4
200110e6:	85be                	mv	a1,a5
200110e8:	8642                	mv	a2,a6
200110ea:	f7c42503          	lw	a0,-132(s0)
200110ee:	36dd                	jal	20010cd4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:118
   // printf("\n");
//    for (int ax; ax < 8; ax++) {
//        printf("%x", *(c + ax));
//    }
//    printf("\n");
    s.x[0] ^= PAD(mlen);
200110f0:	f8842683          	lw	a3,-120(s0)
200110f4:	f8c42703          	lw	a4,-116(s0)
200110f8:	f6842603          	lw	a2,-152(s0)
200110fc:	4781                	li	a5,0
200110fe:	8f91                	sub	a5,a5,a2
20011100:	078e                	slli	a5,a5,0x3
20011102:	03878793          	addi	a5,a5,56
20011106:	fe078613          	addi	a2,a5,-32
2001110a:	00064863          	bltz	a2,2001111a <crypto_aead_encrypt+0x3b8>
2001110e:	08000793          	li	a5,128
20011112:	00c799b3          	sll	s3,a5,a2
20011116:	4901                	li	s2,0
20011118:	a015                	j	2001113c <crypto_aead_encrypt+0x3da>
2001111a:	08000613          	li	a2,128
2001111e:	00165593          	srli	a1,a2,0x1
20011122:	467d                	li	a2,31
20011124:	8e1d                	sub	a2,a2,a5
20011126:	00c5d633          	srl	a2,a1,a2
2001112a:	4581                	li	a1,0
2001112c:	00f599b3          	sll	s3,a1,a5
20011130:	013669b3          	or	s3,a2,s3
20011134:	08000613          	li	a2,128
20011138:	00f61933          	sll	s2,a2,a5
2001113c:	0126c7b3          	xor	a5,a3,s2
20011140:	f2f42823          	sw	a5,-208(s0)
20011144:	013747b3          	xor	a5,a4,s3
20011148:	f2f42a23          	sw	a5,-204(s0)
2001114c:	f3042783          	lw	a5,-208(s0)
20011150:	f3442803          	lw	a6,-204(s0)
20011154:	f8f42423          	sw	a5,-120(s0)
20011158:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:119
    c += mlen;
2001115c:	f6842783          	lw	a5,-152(s0)
20011160:	f7c42703          	lw	a4,-132(s0)
20011164:	97ba                	add	a5,a5,a4
20011166:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:125

    //printf("pad plain \n");
    //printS(&s);

    /* finalize */
    s.x[1] ^= K0;
2001116a:	f9042783          	lw	a5,-112(s0)
2001116e:	f9442803          	lw	a6,-108(s0)
20011172:	fc842703          	lw	a4,-56(s0)
20011176:	8f3d                	xor	a4,a4,a5
20011178:	f2e42423          	sw	a4,-216(s0)
2001117c:	fcc42703          	lw	a4,-52(s0)
20011180:	010747b3          	xor	a5,a4,a6
20011184:	f2f42623          	sw	a5,-212(s0)
20011188:	f2842783          	lw	a5,-216(s0)
2001118c:	f2c42803          	lw	a6,-212(s0)
20011190:	f8f42823          	sw	a5,-112(s0)
20011194:	f9042a23          	sw	a6,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:126
    s.x[2] ^= K1;
20011198:	f9842783          	lw	a5,-104(s0)
2001119c:	f9c42803          	lw	a6,-100(s0)
200111a0:	fc042703          	lw	a4,-64(s0)
200111a4:	8f3d                	xor	a4,a4,a5
200111a6:	f2e42023          	sw	a4,-224(s0)
200111aa:	fc442703          	lw	a4,-60(s0)
200111ae:	010747b3          	xor	a5,a4,a6
200111b2:	f2f42223          	sw	a5,-220(s0)
200111b6:	f2042783          	lw	a5,-224(s0)
200111ba:	f2442803          	lw	a6,-220(s0)
200111be:	f8f42c23          	sw	a5,-104(s0)
200111c2:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:131

    //printf("key xor 1 \n");
    //printS(&s);

    P12(&s);
200111c6:	f8840793          	addi	a5,s0,-120
200111ca:	853e                	mv	a0,a5
200111cc:	3251                	jal	20010b50 <P12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:132
    s.x[3] ^= K0;
200111ce:	fa042783          	lw	a5,-96(s0)
200111d2:	fa442803          	lw	a6,-92(s0)
200111d6:	fc842703          	lw	a4,-56(s0)
200111da:	8f3d                	xor	a4,a4,a5
200111dc:	f0e42c23          	sw	a4,-232(s0)
200111e0:	fcc42703          	lw	a4,-52(s0)
200111e4:	010747b3          	xor	a5,a4,a6
200111e8:	f0f42e23          	sw	a5,-228(s0)
200111ec:	f1842783          	lw	a5,-232(s0)
200111f0:	f1c42803          	lw	a6,-228(s0)
200111f4:	faf42023          	sw	a5,-96(s0)
200111f8:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:133
    s.x[4] ^= K1;
200111fc:	fa842783          	lw	a5,-88(s0)
20011200:	fac42803          	lw	a6,-84(s0)
20011204:	fc042703          	lw	a4,-64(s0)
20011208:	8f3d                	xor	a4,a4,a5
2001120a:	f0e42823          	sw	a4,-240(s0)
2001120e:	fc442703          	lw	a4,-60(s0)
20011212:	010747b3          	xor	a5,a4,a6
20011216:	f0f42a23          	sw	a5,-236(s0)
2001121a:	f1042783          	lw	a5,-240(s0)
2001121e:	f1442803          	lw	a6,-236(s0)
20011222:	faf42423          	sw	a5,-88(s0)
20011226:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:139

    //printf("key kor 2 \n");
   // printS(&s);

    /* set tag */
    STOREBYTES(c, s.x[3], 8);
2001122a:	fa042783          	lw	a5,-96(s0)
2001122e:	fa442803          	lw	a6,-92(s0)
20011232:	46a1                	li	a3,8
20011234:	85be                	mv	a1,a5
20011236:	8642                	mv	a2,a6
20011238:	f7c42503          	lw	a0,-132(s0)
2001123c:	3c61                	jal	20010cd4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:140
    STOREBYTES(c + 8, s.x[4], 8);
2001123e:	f7c42783          	lw	a5,-132(s0)
20011242:	00878713          	addi	a4,a5,8
20011246:	fa842783          	lw	a5,-88(s0)
2001124a:	fac42803          	lw	a6,-84(s0)
2001124e:	46a1                	li	a3,8
20011250:	85be                	mv	a1,a5
20011252:	8642                	mv	a2,a6
20011254:	853a                	mv	a0,a4
20011256:	3cbd                	jal	20010cd4 <STOREBYTES>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:142

    return 0;
20011258:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/aead.c:143
}
2001125a:	853e                	mv	a0,a5
2001125c:	50be                	lw	ra,236(sp)
2001125e:	542e                	lw	s0,232(sp)
20011260:	591e                	lw	s2,228(sp)
20011262:	598e                	lw	s3,224(sp)
20011264:	4a7e                	lw	s4,220(sp)
20011266:	4aee                	lw	s5,216(sp)
20011268:	4b5e                	lw	s6,212(sp)
2001126a:	4bce                	lw	s7,208(sp)
2001126c:	4c3e                	lw	s8,204(sp)
2001126e:	4cae                	lw	s9,200(sp)
20011270:	4d1e                	lw	s10,196(sp)
20011272:	4d8e                	lw	s11,192(sp)
20011274:	616d                	addi	sp,sp,240
20011276:	8082                	ret

20011278 <_putchar>:
_putchar():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:120
// import float.h for DBL_MAX
#if defined(PRINTF_SUPPORT_FLOAT)
#include <float.h>
#endif

void _putchar(char character){
20011278:	1101                	addi	sp,sp,-32
2001127a:	ce06                	sw	ra,28(sp)
2001127c:	cc22                	sw	s0,24(sp)
2001127e:	1000                	addi	s0,sp,32
20011280:	87aa                	mv	a5,a0
20011282:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:121
    write(1, &character, 1);
20011286:	fef40793          	addi	a5,s0,-17
2001128a:	4605                	li	a2,1
2001128c:	85be                	mv	a1,a5
2001128e:	4505                	li	a0,1
20011290:	6ef010ef          	jal	ra,2001317e <write>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:122
}
20011294:	0001                	nop
20011296:	40f2                	lw	ra,28(sp)
20011298:	4462                	lw	s0,24(sp)
2001129a:	6105                	addi	sp,sp,32
2001129c:	8082                	ret

2001129e <_out_null>:
_out_null():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:146
}


// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
2001129e:	1101                	addi	sp,sp,-32
200112a0:	ce22                	sw	s0,28(sp)
200112a2:	1000                	addi	s0,sp,32
200112a4:	87aa                	mv	a5,a0
200112a6:	feb42423          	sw	a1,-24(s0)
200112aa:	fec42223          	sw	a2,-28(s0)
200112ae:	fed42023          	sw	a3,-32(s0)
200112b2:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:148
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
200112b6:	0001                	nop
200112b8:	4472                	lw	s0,28(sp)
200112ba:	6105                	addi	sp,sp,32
200112bc:	8082                	ret

200112be <_out_char>:
_out_char():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:153


// internal _putchar wrapper
static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
{
200112be:	1101                	addi	sp,sp,-32
200112c0:	ce06                	sw	ra,28(sp)
200112c2:	cc22                	sw	s0,24(sp)
200112c4:	1000                	addi	s0,sp,32
200112c6:	87aa                	mv	a5,a0
200112c8:	feb42423          	sw	a1,-24(s0)
200112cc:	fec42223          	sw	a2,-28(s0)
200112d0:	fed42023          	sw	a3,-32(s0)
200112d4:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:155
  (void)buffer; (void)idx; (void)maxlen;
  if (character) {
200112d8:	fef44783          	lbu	a5,-17(s0)
200112dc:	c789                	beqz	a5,200112e6 <_out_char+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:156
    _putchar(character);
200112de:	fef44783          	lbu	a5,-17(s0)
200112e2:	853e                	mv	a0,a5
200112e4:	3f51                	jal	20011278 <_putchar>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:158
  }
}
200112e6:	0001                	nop
200112e8:	40f2                	lw	ra,28(sp)
200112ea:	4462                	lw	s0,24(sp)
200112ec:	6105                	addi	sp,sp,32
200112ee:	8082                	ret

200112f0 <_strnlen_s>:
_strnlen_s():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:175


// internal secure strlen
// \return The length of the string (excluding the terminating 0) limited by 'maxsize'
static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
{
200112f0:	7179                	addi	sp,sp,-48
200112f2:	d622                	sw	s0,44(sp)
200112f4:	1800                	addi	s0,sp,48
200112f6:	fca42e23          	sw	a0,-36(s0)
200112fa:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177
  const char* s;
  for (s = str; *s && maxsize--; ++s);
200112fe:	fdc42783          	lw	a5,-36(s0)
20011302:	fef42623          	sw	a5,-20(s0)
20011306:	a031                	j	20011312 <_strnlen_s+0x22>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177 (discriminator 4)
20011308:	fec42783          	lw	a5,-20(s0)
2001130c:	0785                	addi	a5,a5,1
2001130e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177 (discriminator 1)
20011312:	fec42783          	lw	a5,-20(s0)
20011316:	0007c783          	lbu	a5,0(a5)
2001131a:	cb81                	beqz	a5,2001132a <_strnlen_s+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:177 (discriminator 3)
2001131c:	fd842783          	lw	a5,-40(s0)
20011320:	fff78713          	addi	a4,a5,-1
20011324:	fce42c23          	sw	a4,-40(s0)
20011328:	f3e5                	bnez	a5,20011308 <_strnlen_s+0x18>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:178
  return (unsigned int)(s - str);
2001132a:	fec42703          	lw	a4,-20(s0)
2001132e:	fdc42783          	lw	a5,-36(s0)
20011332:	40f707b3          	sub	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:179
}
20011336:	853e                	mv	a0,a5
20011338:	5432                	lw	s0,44(sp)
2001133a:	6145                	addi	sp,sp,48
2001133c:	8082                	ret

2001133e <_is_digit>:
_is_digit():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:185


// internal test if char is a digit (0-9)
// \return true if char is a digit
static inline bool _is_digit(char ch)
{
2001133e:	1101                	addi	sp,sp,-32
20011340:	ce22                	sw	s0,28(sp)
20011342:	1000                	addi	s0,sp,32
20011344:	87aa                	mv	a5,a0
20011346:	fef407a3          	sb	a5,-17(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186
  return (ch >= '0') && (ch <= '9');
2001134a:	fef44703          	lbu	a4,-17(s0)
2001134e:	02f00793          	li	a5,47
20011352:	00e7fa63          	bgeu	a5,a4,20011366 <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 1)
20011356:	fef44703          	lbu	a4,-17(s0)
2001135a:	03900793          	li	a5,57
2001135e:	00e7e463          	bltu	a5,a4,20011366 <_is_digit+0x28>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 3)
20011362:	4785                	li	a5,1
20011364:	a011                	j	20011368 <_is_digit+0x2a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 4)
20011366:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:186 (discriminator 6)
20011368:	8b85                	andi	a5,a5,1
2001136a:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:187 (discriminator 6)
}
2001136e:	853e                	mv	a0,a5
20011370:	4472                	lw	s0,28(sp)
20011372:	6105                	addi	sp,sp,32
20011374:	8082                	ret

20011376 <_atoi>:
_atoi():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:192


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
20011376:	7179                	addi	sp,sp,-48
20011378:	d606                	sw	ra,44(sp)
2001137a:	d422                	sw	s0,40(sp)
2001137c:	1800                	addi	s0,sp,48
2001137e:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:193
  unsigned int i = 0U;
20011382:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:194
  while (_is_digit(**str)) {
20011386:	a03d                	j	200113b4 <_atoi+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:195
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
20011388:	fec42703          	lw	a4,-20(s0)
2001138c:	87ba                	mv	a5,a4
2001138e:	078a                	slli	a5,a5,0x2
20011390:	97ba                	add	a5,a5,a4
20011392:	0786                	slli	a5,a5,0x1
20011394:	863e                	mv	a2,a5
20011396:	fdc42783          	lw	a5,-36(s0)
2001139a:	439c                	lw	a5,0(a5)
2001139c:	00178693          	addi	a3,a5,1
200113a0:	fdc42703          	lw	a4,-36(s0)
200113a4:	c314                	sw	a3,0(a4)
200113a6:	0007c783          	lbu	a5,0(a5)
200113aa:	97b2                	add	a5,a5,a2
200113ac:	fd078793          	addi	a5,a5,-48
200113b0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:194
  while (_is_digit(**str)) {
200113b4:	fdc42783          	lw	a5,-36(s0)
200113b8:	439c                	lw	a5,0(a5)
200113ba:	0007c783          	lbu	a5,0(a5)
200113be:	853e                	mv	a0,a5
200113c0:	3fbd                	jal	2001133e <_is_digit>
200113c2:	87aa                	mv	a5,a0
200113c4:	f3f1                	bnez	a5,20011388 <_atoi+0x12>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:197
  }
  return i;
200113c6:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:198
}
200113ca:	853e                	mv	a0,a5
200113cc:	50b2                	lw	ra,44(sp)
200113ce:	5422                	lw	s0,40(sp)
200113d0:	6145                	addi	sp,sp,48
200113d2:	8082                	ret

200113d4 <_out_rev>:
_out_rev():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:203


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
200113d4:	7139                	addi	sp,sp,-64
200113d6:	de06                	sw	ra,60(sp)
200113d8:	dc22                	sw	s0,56(sp)
200113da:	0080                	addi	s0,sp,64
200113dc:	fca42e23          	sw	a0,-36(s0)
200113e0:	fcb42c23          	sw	a1,-40(s0)
200113e4:	fcc42a23          	sw	a2,-44(s0)
200113e8:	fcd42823          	sw	a3,-48(s0)
200113ec:	fce42623          	sw	a4,-52(s0)
200113f0:	fcf42423          	sw	a5,-56(s0)
200113f4:	fd042223          	sw	a6,-60(s0)
200113f8:	fd142023          	sw	a7,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:204
  const size_t start_idx = idx;
200113fc:	fd442783          	lw	a5,-44(s0)
20011400:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:207

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
20011404:	fc042783          	lw	a5,-64(s0)
20011408:	8b89                	andi	a5,a5,2
2001140a:	e3c1                	bnez	a5,2001148a <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:207 (discriminator 1)
2001140c:	fc042783          	lw	a5,-64(s0)
20011410:	8b85                	andi	a5,a5,1
20011412:	efa5                	bnez	a5,2001148a <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:208
    for (size_t i = len; i < width; i++) {
20011414:	fc842783          	lw	a5,-56(s0)
20011418:	fef42623          	sw	a5,-20(s0)
2001141c:	a035                	j	20011448 <_out_rev+0x74>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:209 (discriminator 3)
      out(' ', buffer, idx++, maxlen);
2001141e:	fd442783          	lw	a5,-44(s0)
20011422:	00178713          	addi	a4,a5,1
20011426:	fce42a23          	sw	a4,-44(s0)
2001142a:	fdc42703          	lw	a4,-36(s0)
2001142e:	fd042683          	lw	a3,-48(s0)
20011432:	863e                	mv	a2,a5
20011434:	fd842583          	lw	a1,-40(s0)
20011438:	02000513          	li	a0,32
2001143c:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:208 (discriminator 3)
    for (size_t i = len; i < width; i++) {
2001143e:	fec42783          	lw	a5,-20(s0)
20011442:	0785                	addi	a5,a5,1
20011444:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:208 (discriminator 1)
20011448:	fec42703          	lw	a4,-20(s0)
2001144c:	fc442783          	lw	a5,-60(s0)
20011450:	fcf767e3          	bltu	a4,a5,2001141e <_out_rev+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:214
    }
  }

  // reverse string
  while (len) {
20011454:	a81d                	j	2001148a <_out_rev+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:215
    out(buf[--len], buffer, idx++, maxlen);
20011456:	fc842783          	lw	a5,-56(s0)
2001145a:	17fd                	addi	a5,a5,-1
2001145c:	fcf42423          	sw	a5,-56(s0)
20011460:	fcc42703          	lw	a4,-52(s0)
20011464:	fc842783          	lw	a5,-56(s0)
20011468:	97ba                	add	a5,a5,a4
2001146a:	0007c503          	lbu	a0,0(a5)
2001146e:	fd442783          	lw	a5,-44(s0)
20011472:	00178713          	addi	a4,a5,1
20011476:	fce42a23          	sw	a4,-44(s0)
2001147a:	fdc42703          	lw	a4,-36(s0)
2001147e:	fd042683          	lw	a3,-48(s0)
20011482:	863e                	mv	a2,a5
20011484:	fd842583          	lw	a1,-40(s0)
20011488:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:214
  while (len) {
2001148a:	fc842783          	lw	a5,-56(s0)
2001148e:	f7e1                	bnez	a5,20011456 <_out_rev+0x82>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:219
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
20011490:	fc042783          	lw	a5,-64(s0)
20011494:	8b89                	andi	a5,a5,2
20011496:	cf85                	beqz	a5,200114ce <_out_rev+0xfa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:220
    while (idx - start_idx < width) {
20011498:	a00d                	j	200114ba <_out_rev+0xe6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:221
      out(' ', buffer, idx++, maxlen);
2001149a:	fd442783          	lw	a5,-44(s0)
2001149e:	00178713          	addi	a4,a5,1
200114a2:	fce42a23          	sw	a4,-44(s0)
200114a6:	fdc42703          	lw	a4,-36(s0)
200114aa:	fd042683          	lw	a3,-48(s0)
200114ae:	863e                	mv	a2,a5
200114b0:	fd842583          	lw	a1,-40(s0)
200114b4:	02000513          	li	a0,32
200114b8:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:220
    while (idx - start_idx < width) {
200114ba:	fd442703          	lw	a4,-44(s0)
200114be:	fe842783          	lw	a5,-24(s0)
200114c2:	40f707b3          	sub	a5,a4,a5
200114c6:	fc442703          	lw	a4,-60(s0)
200114ca:	fce7e8e3          	bltu	a5,a4,2001149a <_out_rev+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:225
    }
  }

  return idx;
200114ce:	fd442783          	lw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:226
}
200114d2:	853e                	mv	a0,a5
200114d4:	50f2                	lw	ra,60(sp)
200114d6:	5462                	lw	s0,56(sp)
200114d8:	6121                	addi	sp,sp,64
200114da:	8082                	ret

200114dc <_ntoa_format>:
_ntoa_format():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:231


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
200114dc:	7179                	addi	sp,sp,-48
200114de:	d606                	sw	ra,44(sp)
200114e0:	d422                	sw	s0,40(sp)
200114e2:	1800                	addi	s0,sp,48
200114e4:	fea42623          	sw	a0,-20(s0)
200114e8:	feb42423          	sw	a1,-24(s0)
200114ec:	fec42223          	sw	a2,-28(s0)
200114f0:	fed42023          	sw	a3,-32(s0)
200114f4:	fce42e23          	sw	a4,-36(s0)
200114f8:	fcf42c23          	sw	a5,-40(s0)
200114fc:	87c2                	mv	a5,a6
200114fe:	fd142823          	sw	a7,-48(s0)
20011502:	fcf40ba3          	sb	a5,-41(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:233
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
20011506:	441c                	lw	a5,8(s0)
20011508:	8b89                	andi	a5,a5,2
2001150a:	e3d1                	bnez	a5,2001158e <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
2001150c:	405c                	lw	a5,4(s0)
2001150e:	cb9d                	beqz	a5,20011544 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234 (discriminator 1)
20011510:	441c                	lw	a5,8(s0)
20011512:	8b85                	andi	a5,a5,1
20011514:	cb85                	beqz	a5,20011544 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234 (discriminator 2)
20011516:	fd744783          	lbu	a5,-41(s0)
2001151a:	e781                	bnez	a5,20011522 <_ntoa_format+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:234 (discriminator 3)
2001151c:	441c                	lw	a5,8(s0)
2001151e:	8bb1                	andi	a5,a5,12
20011520:	c395                	beqz	a5,20011544 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:235
      width--;
20011522:	405c                	lw	a5,4(s0)
20011524:	17fd                	addi	a5,a5,-1
20011526:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:237
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20011528:	a831                	j	20011544 <_ntoa_format+0x68>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:238
      buf[len++] = '0';
2001152a:	fd842783          	lw	a5,-40(s0)
2001152e:	00178713          	addi	a4,a5,1
20011532:	fce42c23          	sw	a4,-40(s0)
20011536:	fdc42703          	lw	a4,-36(s0)
2001153a:	97ba                	add	a5,a5,a4
2001153c:	03000713          	li	a4,48
20011540:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:237
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20011544:	fd842703          	lw	a4,-40(s0)
20011548:	401c                	lw	a5,0(s0)
2001154a:	02f77563          	bgeu	a4,a5,20011574 <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:237 (discriminator 1)
2001154e:	fd842703          	lw	a4,-40(s0)
20011552:	47fd                	li	a5,31
20011554:	fce7fbe3          	bgeu	a5,a4,2001152a <_ntoa_format+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20011558:	a831                	j	20011574 <_ntoa_format+0x98>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:241
      buf[len++] = '0';
2001155a:	fd842783          	lw	a5,-40(s0)
2001155e:	00178713          	addi	a4,a5,1
20011562:	fce42c23          	sw	a4,-40(s0)
20011566:	fdc42703          	lw	a4,-36(s0)
2001156a:	97ba                	add	a5,a5,a4
2001156c:	03000713          	li	a4,48
20011570:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20011574:	441c                	lw	a5,8(s0)
20011576:	8b85                	andi	a5,a5,1
20011578:	cb99                	beqz	a5,2001158e <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240 (discriminator 1)
2001157a:	fd842703          	lw	a4,-40(s0)
2001157e:	405c                	lw	a5,4(s0)
20011580:	00f77763          	bgeu	a4,a5,2001158e <_ntoa_format+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:240 (discriminator 2)
20011584:	fd842703          	lw	a4,-40(s0)
20011588:	47fd                	li	a5,31
2001158a:	fce7f8e3          	bgeu	a5,a4,2001155a <_ntoa_format+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:246
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
2001158e:	441c                	lw	a5,8(s0)
20011590:	8bc1                	andi	a5,a5,16
20011592:	10078663          	beqz	a5,2001169e <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
20011596:	441c                	lw	a5,8(s0)
20011598:	4007f793          	andi	a5,a5,1024
2001159c:	e3a1                	bnez	a5,200115dc <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247 (discriminator 1)
2001159e:	fd842783          	lw	a5,-40(s0)
200115a2:	cf8d                	beqz	a5,200115dc <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247 (discriminator 2)
200115a4:	fd842703          	lw	a4,-40(s0)
200115a8:	401c                	lw	a5,0(s0)
200115aa:	00f70763          	beq	a4,a5,200115b8 <_ntoa_format+0xdc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:247 (discriminator 3)
200115ae:	fd842703          	lw	a4,-40(s0)
200115b2:	405c                	lw	a5,4(s0)
200115b4:	02f71463          	bne	a4,a5,200115dc <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:248
      len--;
200115b8:	fd842783          	lw	a5,-40(s0)
200115bc:	17fd                	addi	a5,a5,-1
200115be:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:249
      if (len && (base == 16U)) {
200115c2:	fd842783          	lw	a5,-40(s0)
200115c6:	cb99                	beqz	a5,200115dc <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:249 (discriminator 1)
200115c8:	fd042703          	lw	a4,-48(s0)
200115cc:	47c1                	li	a5,16
200115ce:	00f71763          	bne	a4,a5,200115dc <_ntoa_format+0x100>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:250
        len--;
200115d2:	fd842783          	lw	a5,-40(s0)
200115d6:	17fd                	addi	a5,a5,-1
200115d8:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:253
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
200115dc:	fd042703          	lw	a4,-48(s0)
200115e0:	47c1                	li	a5,16
200115e2:	02f71963          	bne	a4,a5,20011614 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:253 (discriminator 1)
200115e6:	441c                	lw	a5,8(s0)
200115e8:	0207f793          	andi	a5,a5,32
200115ec:	e785                	bnez	a5,20011614 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:253 (discriminator 2)
200115ee:	fd842703          	lw	a4,-40(s0)
200115f2:	47fd                	li	a5,31
200115f4:	02e7e063          	bltu	a5,a4,20011614 <_ntoa_format+0x138>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:254
      buf[len++] = 'x';
200115f8:	fd842783          	lw	a5,-40(s0)
200115fc:	00178713          	addi	a4,a5,1
20011600:	fce42c23          	sw	a4,-40(s0)
20011604:	fdc42703          	lw	a4,-36(s0)
20011608:	97ba                	add	a5,a5,a4
2001160a:	07800713          	li	a4,120
2001160e:	00e78023          	sb	a4,0(a5)
20011612:	a0a5                	j	2001167a <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:256
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
20011614:	fd042703          	lw	a4,-48(s0)
20011618:	47c1                	li	a5,16
2001161a:	02f71963          	bne	a4,a5,2001164c <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:256 (discriminator 1)
2001161e:	441c                	lw	a5,8(s0)
20011620:	0207f793          	andi	a5,a5,32
20011624:	c785                	beqz	a5,2001164c <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:256 (discriminator 2)
20011626:	fd842703          	lw	a4,-40(s0)
2001162a:	47fd                	li	a5,31
2001162c:	02e7e063          	bltu	a5,a4,2001164c <_ntoa_format+0x170>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:257
      buf[len++] = 'X';
20011630:	fd842783          	lw	a5,-40(s0)
20011634:	00178713          	addi	a4,a5,1
20011638:	fce42c23          	sw	a4,-40(s0)
2001163c:	fdc42703          	lw	a4,-36(s0)
20011640:	97ba                	add	a5,a5,a4
20011642:	05800713          	li	a4,88
20011646:	00e78023          	sb	a4,0(a5)
2001164a:	a805                	j	2001167a <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:259
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
2001164c:	fd042703          	lw	a4,-48(s0)
20011650:	4789                	li	a5,2
20011652:	02f71463          	bne	a4,a5,2001167a <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:259 (discriminator 1)
20011656:	fd842703          	lw	a4,-40(s0)
2001165a:	47fd                	li	a5,31
2001165c:	00e7ef63          	bltu	a5,a4,2001167a <_ntoa_format+0x19e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:260
      buf[len++] = 'b';
20011660:	fd842783          	lw	a5,-40(s0)
20011664:	00178713          	addi	a4,a5,1
20011668:	fce42c23          	sw	a4,-40(s0)
2001166c:	fdc42703          	lw	a4,-36(s0)
20011670:	97ba                	add	a5,a5,a4
20011672:	06200713          	li	a4,98
20011676:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:262
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
2001167a:	fd842703          	lw	a4,-40(s0)
2001167e:	47fd                	li	a5,31
20011680:	00e7ef63          	bltu	a5,a4,2001169e <_ntoa_format+0x1c2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:263
      buf[len++] = '0';
20011684:	fd842783          	lw	a5,-40(s0)
20011688:	00178713          	addi	a4,a5,1
2001168c:	fce42c23          	sw	a4,-40(s0)
20011690:	fdc42703          	lw	a4,-36(s0)
20011694:	97ba                	add	a5,a5,a4
20011696:	03000713          	li	a4,48
2001169a:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:267
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
2001169e:	fd842703          	lw	a4,-40(s0)
200116a2:	47fd                	li	a5,31
200116a4:	06e7e463          	bltu	a5,a4,2001170c <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:268
    if (negative) {
200116a8:	fd744783          	lbu	a5,-41(s0)
200116ac:	cf99                	beqz	a5,200116ca <_ntoa_format+0x1ee>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:269
      buf[len++] = '-';
200116ae:	fd842783          	lw	a5,-40(s0)
200116b2:	00178713          	addi	a4,a5,1
200116b6:	fce42c23          	sw	a4,-40(s0)
200116ba:	fdc42703          	lw	a4,-36(s0)
200116be:	97ba                	add	a5,a5,a4
200116c0:	02d00713          	li	a4,45
200116c4:	00e78023          	sb	a4,0(a5)
200116c8:	a091                	j	2001170c <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:271
    }
    else if (flags & FLAGS_PLUS) {
200116ca:	441c                	lw	a5,8(s0)
200116cc:	8b91                	andi	a5,a5,4
200116ce:	cf99                	beqz	a5,200116ec <_ntoa_format+0x210>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:272
      buf[len++] = '+';  // ignore the space if the '+' exists
200116d0:	fd842783          	lw	a5,-40(s0)
200116d4:	00178713          	addi	a4,a5,1
200116d8:	fce42c23          	sw	a4,-40(s0)
200116dc:	fdc42703          	lw	a4,-36(s0)
200116e0:	97ba                	add	a5,a5,a4
200116e2:	02b00713          	li	a4,43
200116e6:	00e78023          	sb	a4,0(a5)
200116ea:	a00d                	j	2001170c <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:274
    }
    else if (flags & FLAGS_SPACE) {
200116ec:	441c                	lw	a5,8(s0)
200116ee:	8ba1                	andi	a5,a5,8
200116f0:	cf91                	beqz	a5,2001170c <_ntoa_format+0x230>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:275
      buf[len++] = ' ';
200116f2:	fd842783          	lw	a5,-40(s0)
200116f6:	00178713          	addi	a4,a5,1
200116fa:	fce42c23          	sw	a4,-40(s0)
200116fe:	fdc42703          	lw	a4,-36(s0)
20011702:	97ba                	add	a5,a5,a4
20011704:	02000713          	li	a4,32
20011708:	00e78023          	sb	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:279
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
2001170c:	00842883          	lw	a7,8(s0)
20011710:	00442803          	lw	a6,4(s0)
20011714:	fd842783          	lw	a5,-40(s0)
20011718:	fdc42703          	lw	a4,-36(s0)
2001171c:	fe042683          	lw	a3,-32(s0)
20011720:	fe442603          	lw	a2,-28(s0)
20011724:	fe842583          	lw	a1,-24(s0)
20011728:	fec42503          	lw	a0,-20(s0)
2001172c:	3165                	jal	200113d4 <_out_rev>
2001172e:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:280
}
20011730:	853e                	mv	a0,a5
20011732:	50b2                	lw	ra,44(sp)
20011734:	5422                	lw	s0,40(sp)
20011736:	6145                	addi	sp,sp,48
20011738:	8082                	ret

2001173a <_ntoa_long>:
_ntoa_long():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:285


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
2001173a:	7159                	addi	sp,sp,-112
2001173c:	d686                	sw	ra,108(sp)
2001173e:	d4a2                	sw	s0,104(sp)
20011740:	1880                	addi	s0,sp,112
20011742:	faa42e23          	sw	a0,-68(s0)
20011746:	fab42c23          	sw	a1,-72(s0)
2001174a:	fac42a23          	sw	a2,-76(s0)
2001174e:	fad42823          	sw	a3,-80(s0)
20011752:	fae42623          	sw	a4,-84(s0)
20011756:	fb042223          	sw	a6,-92(s0)
2001175a:	fb142023          	sw	a7,-96(s0)
2001175e:	faf405a3          	sb	a5,-85(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:287
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
20011762:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:290

  // no hash for 0 values
  if (!value) {
20011766:	fac42783          	lw	a5,-84(s0)
2001176a:	e781                	bnez	a5,20011772 <_ntoa_long+0x38>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:291
    flags &= ~FLAGS_HASH;
2001176c:	405c                	lw	a5,4(s0)
2001176e:	9bbd                	andi	a5,a5,-17
20011770:	c05c                	sw	a5,4(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:295
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
20011772:	405c                	lw	a5,4(s0)
20011774:	4007f793          	andi	a5,a5,1024
20011778:	c781                	beqz	a5,20011780 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:295 (discriminator 1)
2001177a:	fac42783          	lw	a5,-84(s0)
2001177e:	c3c9                	beqz	a5,20011800 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:297
    do {
      const char digit = (char)(value % base);
20011780:	fac42703          	lw	a4,-84(s0)
20011784:	fa442783          	lw	a5,-92(s0)
20011788:	02f777b3          	remu	a5,a4,a5
2001178c:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
20011790:	feb44703          	lbu	a4,-21(s0)
20011794:	47a5                	li	a5,9
20011796:	00e7e963          	bltu	a5,a4,200117a8 <_ntoa_long+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 1)
2001179a:	feb44783          	lbu	a5,-21(s0)
2001179e:	03078793          	addi	a5,a5,48
200117a2:	0ff7f793          	andi	a5,a5,255
200117a6:	a015                	j	200117ca <_ntoa_long+0x90>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 2)
200117a8:	405c                	lw	a5,4(s0)
200117aa:	0207f793          	andi	a5,a5,32
200117ae:	c781                	beqz	a5,200117b6 <_ntoa_long+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 4)
200117b0:	04100793          	li	a5,65
200117b4:	a019                	j	200117ba <_ntoa_long+0x80>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 5)
200117b6:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 7)
200117ba:	feb44703          	lbu	a4,-21(s0)
200117be:	97ba                	add	a5,a5,a4
200117c0:	0ff7f793          	andi	a5,a5,255
200117c4:	17d9                	addi	a5,a5,-10
200117c6:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:298 (discriminator 8)
200117ca:	fec42703          	lw	a4,-20(s0)
200117ce:	00170693          	addi	a3,a4,1
200117d2:	fed42623          	sw	a3,-20(s0)
200117d6:	ff040693          	addi	a3,s0,-16
200117da:	9736                	add	a4,a4,a3
200117dc:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:299 (discriminator 8)
      value /= base;
200117e0:	fac42703          	lw	a4,-84(s0)
200117e4:	fa442783          	lw	a5,-92(s0)
200117e8:	02f757b3          	divu	a5,a4,a5
200117ec:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:300 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
200117f0:	fac42783          	lw	a5,-84(s0)
200117f4:	c791                	beqz	a5,20011800 <_ntoa_long+0xc6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:300 (discriminator 1)
200117f6:	fec42703          	lw	a4,-20(s0)
200117fa:	47fd                	li	a5,31
200117fc:	f8e7f2e3          	bgeu	a5,a4,20011780 <_ntoa_long+0x46>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:303
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20011800:	fab44683          	lbu	a3,-85(s0)
20011804:	fc840713          	addi	a4,s0,-56
20011808:	405c                	lw	a5,4(s0)
2001180a:	c43e                	sw	a5,8(sp)
2001180c:	401c                	lw	a5,0(s0)
2001180e:	c23e                	sw	a5,4(sp)
20011810:	fa042783          	lw	a5,-96(s0)
20011814:	c03e                	sw	a5,0(sp)
20011816:	fa442883          	lw	a7,-92(s0)
2001181a:	8836                	mv	a6,a3
2001181c:	fec42783          	lw	a5,-20(s0)
20011820:	fb042683          	lw	a3,-80(s0)
20011824:	fb442603          	lw	a2,-76(s0)
20011828:	fb842583          	lw	a1,-72(s0)
2001182c:	fbc42503          	lw	a0,-68(s0)
20011830:	3175                	jal	200114dc <_ntoa_format>
20011832:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:304
}
20011834:	853e                	mv	a0,a5
20011836:	50b6                	lw	ra,108(sp)
20011838:	5426                	lw	s0,104(sp)
2001183a:	6165                	addi	sp,sp,112
2001183c:	8082                	ret

2001183e <_ntoa_long_long>:
_ntoa_long_long():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:310


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
2001183e:	7119                	addi	sp,sp,-128
20011840:	d686                	sw	ra,108(sp)
20011842:	d4a2                	sw	s0,104(sp)
20011844:	1880                	addi	s0,sp,112
20011846:	faa42e23          	sw	a0,-68(s0)
2001184a:	fab42c23          	sw	a1,-72(s0)
2001184e:	fac42a23          	sw	a2,-76(s0)
20011852:	fad42823          	sw	a3,-80(s0)
20011856:	fae42423          	sw	a4,-88(s0)
2001185a:	faf42623          	sw	a5,-84(s0)
2001185e:	87c2                	mv	a5,a6
20011860:	01142623          	sw	a7,12(s0)
20011864:	faf403a3          	sb	a5,-89(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:312
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
20011868:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:315

  // no hash for 0 values
  if (!value) {
2001186c:	fa842783          	lw	a5,-88(s0)
20011870:	fac42703          	lw	a4,-84(s0)
20011874:	8fd9                	or	a5,a5,a4
20011876:	e781                	bnez	a5,2001187e <_ntoa_long_long+0x40>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:316
    flags &= ~FLAGS_HASH;
20011878:	4c5c                	lw	a5,28(s0)
2001187a:	9bbd                	andi	a5,a5,-17
2001187c:	cc5c                	sw	a5,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:320
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
2001187e:	4c5c                	lw	a5,28(s0)
20011880:	4007f793          	andi	a5,a5,1024
20011884:	c799                	beqz	a5,20011892 <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:320 (discriminator 1)
20011886:	fa842783          	lw	a5,-88(s0)
2001188a:	fac42703          	lw	a4,-84(s0)
2001188e:	8fd9                	or	a5,a5,a4
20011890:	c3c5                	beqz	a5,20011930 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:322
    do {
      const char digit = (char)(value % base);
20011892:	fa842783          	lw	a5,-88(s0)
20011896:	fac42803          	lw	a6,-84(s0)
2001189a:	4450                	lw	a2,12(s0)
2001189c:	4814                	lw	a3,16(s0)
2001189e:	853e                	mv	a0,a5
200118a0:	85c2                	mv	a1,a6
200118a2:	47b010ef          	jal	ra,2001351c <__umoddi3>
200118a6:	87aa                	mv	a5,a0
200118a8:	882e                	mv	a6,a1
200118aa:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
200118ae:	feb44703          	lbu	a4,-21(s0)
200118b2:	47a5                	li	a5,9
200118b4:	00e7e963          	bltu	a5,a4,200118c6 <_ntoa_long_long+0x88>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 1)
200118b8:	feb44783          	lbu	a5,-21(s0)
200118bc:	03078793          	addi	a5,a5,48
200118c0:	0ff7f793          	andi	a5,a5,255
200118c4:	a015                	j	200118e8 <_ntoa_long_long+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 2)
200118c6:	4c5c                	lw	a5,28(s0)
200118c8:	0207f793          	andi	a5,a5,32
200118cc:	c781                	beqz	a5,200118d4 <_ntoa_long_long+0x96>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 4)
200118ce:	04100793          	li	a5,65
200118d2:	a019                	j	200118d8 <_ntoa_long_long+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 5)
200118d4:	06100793          	li	a5,97
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 7)
200118d8:	feb44703          	lbu	a4,-21(s0)
200118dc:	97ba                	add	a5,a5,a4
200118de:	0ff7f793          	andi	a5,a5,255
200118e2:	17d9                	addi	a5,a5,-10
200118e4:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:323 (discriminator 8)
200118e8:	fec42703          	lw	a4,-20(s0)
200118ec:	00170693          	addi	a3,a4,1
200118f0:	fed42623          	sw	a3,-20(s0)
200118f4:	ff040693          	addi	a3,s0,-16
200118f8:	9736                	add	a4,a4,a3
200118fa:	fcf70c23          	sb	a5,-40(a4)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:324 (discriminator 8)
      value /= base;
200118fe:	4450                	lw	a2,12(s0)
20011900:	4814                	lw	a3,16(s0)
20011902:	fa842503          	lw	a0,-88(s0)
20011906:	fac42583          	lw	a1,-84(s0)
2001190a:	0b5010ef          	jal	ra,200131be <__udivdi3>
2001190e:	87aa                	mv	a5,a0
20011910:	882e                	mv	a6,a1
20011912:	faf42423          	sw	a5,-88(s0)
20011916:	fb042623          	sw	a6,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:325 (discriminator 8)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
2001191a:	fa842783          	lw	a5,-88(s0)
2001191e:	fac42703          	lw	a4,-84(s0)
20011922:	8fd9                	or	a5,a5,a4
20011924:	c791                	beqz	a5,20011930 <_ntoa_long_long+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:325 (discriminator 1)
20011926:	fec42703          	lw	a4,-20(s0)
2001192a:	47fd                	li	a5,31
2001192c:	f6e7f3e3          	bgeu	a5,a4,20011892 <_ntoa_long_long+0x54>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:328
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
20011930:	4450                	lw	a2,12(s0)
20011932:	fa744683          	lbu	a3,-89(s0)
20011936:	fc840713          	addi	a4,s0,-56
2001193a:	4c5c                	lw	a5,28(s0)
2001193c:	c43e                	sw	a5,8(sp)
2001193e:	4c1c                	lw	a5,24(s0)
20011940:	c23e                	sw	a5,4(sp)
20011942:	485c                	lw	a5,20(s0)
20011944:	c03e                	sw	a5,0(sp)
20011946:	88b2                	mv	a7,a2
20011948:	8836                	mv	a6,a3
2001194a:	fec42783          	lw	a5,-20(s0)
2001194e:	fb042683          	lw	a3,-80(s0)
20011952:	fb442603          	lw	a2,-76(s0)
20011956:	fb842583          	lw	a1,-72(s0)
2001195a:	fbc42503          	lw	a0,-68(s0)
2001195e:	3ebd                	jal	200114dc <_ntoa_format>
20011960:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:329
}
20011962:	853e                	mv	a0,a5
20011964:	50b6                	lw	ra,108(sp)
20011966:	5426                	lw	s0,104(sp)
20011968:	6109                	addi	sp,sp,128
2001196a:	8082                	ret

2001196c <_ftoa>:
_ftoa():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:343
#endif


// internal ftoa for fixed decimal floating point
static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
2001196c:	7175                	addi	sp,sp,-144
2001196e:	c706                	sw	ra,140(sp)
20011970:	c522                	sw	s0,136(sp)
20011972:	c326                	sw	s1,132(sp)
20011974:	0900                	addi	s0,sp,144
20011976:	f8a42e23          	sw	a0,-100(s0)
2001197a:	f8b42c23          	sw	a1,-104(s0)
2001197e:	f8c42a23          	sw	a2,-108(s0)
20011982:	f8d42823          	sw	a3,-112(s0)
20011986:	f8e42423          	sw	a4,-120(s0)
2001198a:	f8f42623          	sw	a5,-116(s0)
2001198e:	f9042223          	sw	a6,-124(s0)
20011992:	f9142023          	sw	a7,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:345
  char buf[PRINTF_FTOA_BUFFER_SIZE];
  size_t len  = 0U;
20011996:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:346
  double diff = 0.0;
2001199a:	fc042823          	sw	zero,-48(s0)
2001199e:	fc042a23          	sw	zero,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:352

  // powers of 10
  static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };

  // test for special values
  if (value != value)
200119a2:	f8842603          	lw	a2,-120(s0)
200119a6:	f8c42683          	lw	a3,-116(s0)
200119aa:	f8842503          	lw	a0,-120(s0)
200119ae:	f8c42583          	lw	a1,-116(s0)
200119b2:	1e5020ef          	jal	ra,20014396 <__eqdf2>
200119b6:	87aa                	mv	a5,a0
200119b8:	c78d                	beqz	a5,200119e2 <_ftoa+0x76>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:353
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
200119ba:	00042883          	lw	a7,0(s0)
200119be:	f8042803          	lw	a6,-128(s0)
200119c2:	478d                	li	a5,3
200119c4:	2001a737          	lui	a4,0x2001a
200119c8:	83870713          	addi	a4,a4,-1992 # 20019838 <_exit+0x108>
200119cc:	f9042683          	lw	a3,-112(s0)
200119d0:	f9442603          	lw	a2,-108(s0)
200119d4:	f9842583          	lw	a1,-104(s0)
200119d8:	f9c42503          	lw	a0,-100(s0)
200119dc:	3ae5                	jal	200113d4 <_out_rev>
200119de:	87aa                	mv	a5,a0
200119e0:	ab89                	j	20011f32 <_ftoa+0x5c6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:354
  if (value < -DBL_MAX)
200119e2:	2001a7b7          	lui	a5,0x2001a
200119e6:	8507a603          	lw	a2,-1968(a5) # 20019850 <_exit+0x120>
200119ea:	8547a683          	lw	a3,-1964(a5)
200119ee:	f8842503          	lw	a0,-120(s0)
200119f2:	f8c42583          	lw	a1,-116(s0)
200119f6:	2af020ef          	jal	ra,200144a4 <__ledf2>
200119fa:	87aa                	mv	a5,a0
200119fc:	0207d663          	bgez	a5,20011a28 <_ftoa+0xbc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:355
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
20011a00:	00042883          	lw	a7,0(s0)
20011a04:	f8042803          	lw	a6,-128(s0)
20011a08:	4791                	li	a5,4
20011a0a:	2001a737          	lui	a4,0x2001a
20011a0e:	83c70713          	addi	a4,a4,-1988 # 2001983c <_exit+0x10c>
20011a12:	f9042683          	lw	a3,-112(s0)
20011a16:	f9442603          	lw	a2,-108(s0)
20011a1a:	f9842583          	lw	a1,-104(s0)
20011a1e:	f9c42503          	lw	a0,-100(s0)
20011a22:	3a4d                	jal	200113d4 <_out_rev>
20011a24:	87aa                	mv	a5,a0
20011a26:	a331                	j	20011f32 <_ftoa+0x5c6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:356
  if (value > DBL_MAX)
20011a28:	2001a7b7          	lui	a5,0x2001a
20011a2c:	8587a603          	lw	a2,-1960(a5) # 20019858 <_exit+0x128>
20011a30:	85c7a683          	lw	a3,-1956(a5)
20011a34:	f8842503          	lw	a0,-120(s0)
20011a38:	f8c42583          	lw	a1,-116(s0)
20011a3c:	1c5020ef          	jal	ra,20014400 <__gedf2>
20011a40:	87aa                	mv	a5,a0
20011a42:	04f05463          	blez	a5,20011a8a <_ftoa+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
20011a46:	401c                	lw	a5,0(s0)
20011a48:	8b91                	andi	a5,a5,4
20011a4a:	c791                	beqz	a5,20011a56 <_ftoa+0xea>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 1)
20011a4c:	2001a7b7          	lui	a5,0x2001a
20011a50:	84478713          	addi	a4,a5,-1980 # 20019844 <_exit+0x114>
20011a54:	a029                	j	20011a5e <_ftoa+0xf2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 2)
20011a56:	2001a7b7          	lui	a5,0x2001a
20011a5a:	84c78713          	addi	a4,a5,-1972 # 2001984c <_exit+0x11c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 4)
20011a5e:	401c                	lw	a5,0(s0)
20011a60:	8b91                	andi	a5,a5,4
20011a62:	c399                	beqz	a5,20011a68 <_ftoa+0xfc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 5)
20011a64:	4791                	li	a5,4
20011a66:	a011                	j	20011a6a <_ftoa+0xfe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 6)
20011a68:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:357 (discriminator 8)
20011a6a:	00042883          	lw	a7,0(s0)
20011a6e:	f8042803          	lw	a6,-128(s0)
20011a72:	f9042683          	lw	a3,-112(s0)
20011a76:	f9442603          	lw	a2,-108(s0)
20011a7a:	f9842583          	lw	a1,-104(s0)
20011a7e:	f9c42503          	lw	a0,-100(s0)
20011a82:	953ff0ef          	jal	ra,200113d4 <_out_rev>
20011a86:	87aa                	mv	a5,a0
20011a88:	a16d                	j	20011f32 <_ftoa+0x5c6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:361

  // test for very large values
  // standard printf behavior is to print EVERY whole number digit -- which could be 100s of characters overflowing your buffers == bad
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
20011a8a:	2001a7b7          	lui	a5,0x2001a
20011a8e:	8607a603          	lw	a2,-1952(a5) # 20019860 <_exit+0x130>
20011a92:	8647a683          	lw	a3,-1948(a5)
20011a96:	f8842503          	lw	a0,-120(s0)
20011a9a:	f8c42583          	lw	a1,-116(s0)
20011a9e:	163020ef          	jal	ra,20014400 <__gedf2>
20011aa2:	87aa                	mv	a5,a0
20011aa4:	02f04163          	bgtz	a5,20011ac6 <_ftoa+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:361 (discriminator 1)
20011aa8:	2001a7b7          	lui	a5,0x2001a
20011aac:	8687a603          	lw	a2,-1944(a5) # 20019868 <_exit+0x138>
20011ab0:	86c7a683          	lw	a3,-1940(a5)
20011ab4:	f8842503          	lw	a0,-120(s0)
20011ab8:	f8c42583          	lw	a1,-116(s0)
20011abc:	1e9020ef          	jal	ra,200144a4 <__ledf2>
20011ac0:	87aa                	mv	a5,a0
20011ac2:	0207d763          	bgez	a5,20011af0 <_ftoa+0x184>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:363
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
20011ac6:	401c                	lw	a5,0(s0)
20011ac8:	c03e                	sw	a5,0(sp)
20011aca:	f8042883          	lw	a7,-128(s0)
20011ace:	f8442803          	lw	a6,-124(s0)
20011ad2:	f8842703          	lw	a4,-120(s0)
20011ad6:	f8c42783          	lw	a5,-116(s0)
20011ada:	f9042683          	lw	a3,-112(s0)
20011ade:	f9442603          	lw	a2,-108(s0)
20011ae2:	f9842583          	lw	a1,-104(s0)
20011ae6:	f9c42503          	lw	a0,-100(s0)
20011aea:	2991                	jal	20011f3e <_etoa>
20011aec:	87aa                	mv	a5,a0
20011aee:	a191                	j	20011f32 <_ftoa+0x5c6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:370
    return 0U;
#endif
  }

  // test for negative
  bool negative = false;
20011af0:	fe0405a3          	sb	zero,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:371
  if (value < 0) {
20011af4:	4601                	li	a2,0
20011af6:	4681                	li	a3,0
20011af8:	f8842503          	lw	a0,-120(s0)
20011afc:	f8c42583          	lw	a1,-116(s0)
20011b00:	1a5020ef          	jal	ra,200144a4 <__ledf2>
20011b04:	87aa                	mv	a5,a0
20011b06:	0207d363          	bgez	a5,20011b2c <_ftoa+0x1c0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:372
    negative = true;
20011b0a:	4785                	li	a5,1
20011b0c:	fef405a3          	sb	a5,-21(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:373
    value = 0 - value;
20011b10:	f8842603          	lw	a2,-120(s0)
20011b14:	f8c42683          	lw	a3,-116(s0)
20011b18:	4501                	li	a0,0
20011b1a:	4581                	li	a1,0
20011b1c:	669020ef          	jal	ra,20014984 <__subdf3>
20011b20:	87aa                	mv	a5,a0
20011b22:	882e                	mv	a6,a1
20011b24:	f8f42423          	sw	a5,-120(s0)
20011b28:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:377
  }

  // set default precision, if not set explicitly
  if (!(flags & FLAGS_PRECISION)) {
20011b2c:	401c                	lw	a5,0(s0)
20011b2e:	4007f793          	andi	a5,a5,1024
20011b32:	e79d                	bnez	a5,20011b60 <_ftoa+0x1f4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:378
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
20011b34:	4799                	li	a5,6
20011b36:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:381
  }
  // limit precision to 9, cause a prec >= 10 can lead to overflow errors
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20011b3a:	a01d                	j	20011b60 <_ftoa+0x1f4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:382
    buf[len++] = '0';
20011b3c:	fec42783          	lw	a5,-20(s0)
20011b40:	00178713          	addi	a4,a5,1
20011b44:	fee42623          	sw	a4,-20(s0)
20011b48:	ff040713          	addi	a4,s0,-16
20011b4c:	97ba                	add	a5,a5,a4
20011b4e:	03000713          	li	a4,48
20011b52:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:383
    prec--;
20011b56:	f8442783          	lw	a5,-124(s0)
20011b5a:	17fd                	addi	a5,a5,-1
20011b5c:	f8f42223          	sw	a5,-124(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:381
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
20011b60:	fec42703          	lw	a4,-20(s0)
20011b64:	47fd                	li	a5,31
20011b66:	00e7e763          	bltu	a5,a4,20011b74 <_ftoa+0x208>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:381 (discriminator 1)
20011b6a:	f8442703          	lw	a4,-124(s0)
20011b6e:	47a5                	li	a5,9
20011b70:	fce7e6e3          	bltu	a5,a4,20011b3c <_ftoa+0x1d0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:386
  }

  int whole = (int)value;
20011b74:	f8842503          	lw	a0,-120(s0)
20011b78:	f8c42583          	lw	a1,-116(s0)
20011b7c:	3fe030ef          	jal	ra,20014f7a <__fixdfsi>
20011b80:	87aa                	mv	a5,a0
20011b82:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:387
  double tmp = (value - whole) * pow10[prec];
20011b86:	fe442503          	lw	a0,-28(s0)
20011b8a:	4b0030ef          	jal	ra,2001503a <__floatsidf>
20011b8e:	87aa                	mv	a5,a0
20011b90:	882e                	mv	a6,a1
20011b92:	863e                	mv	a2,a5
20011b94:	86c2                	mv	a3,a6
20011b96:	f8842503          	lw	a0,-120(s0)
20011b9a:	f8c42583          	lw	a1,-116(s0)
20011b9e:	5e7020ef          	jal	ra,20014984 <__subdf3>
20011ba2:	87aa                	mv	a5,a0
20011ba4:	882e                	mv	a6,a1
20011ba6:	853e                	mv	a0,a5
20011ba8:	85c2                	mv	a1,a6
20011baa:	2001a7b7          	lui	a5,0x2001a
20011bae:	ac878713          	addi	a4,a5,-1336 # 20019ac8 <pow10.2193>
20011bb2:	f8442783          	lw	a5,-124(s0)
20011bb6:	078e                	slli	a5,a5,0x3
20011bb8:	97ba                	add	a5,a5,a4
20011bba:	0047a803          	lw	a6,4(a5)
20011bbe:	439c                	lw	a5,0(a5)
20011bc0:	863e                	mv	a2,a5
20011bc2:	86c2                	mv	a3,a6
20011bc4:	185020ef          	jal	ra,20014548 <__muldf3>
20011bc8:	87aa                	mv	a5,a0
20011bca:	882e                	mv	a6,a1
20011bcc:	fcf42423          	sw	a5,-56(s0)
20011bd0:	fd042623          	sw	a6,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:388
  unsigned long frac = (unsigned long)tmp;
20011bd4:	fc842503          	lw	a0,-56(s0)
20011bd8:	fcc42583          	lw	a1,-52(s0)
20011bdc:	402030ef          	jal	ra,20014fde <__fixunsdfsi>
20011be0:	87aa                	mv	a5,a0
20011be2:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:389
  diff = tmp - frac;
20011be6:	fe042503          	lw	a0,-32(s0)
20011bea:	4ba030ef          	jal	ra,200150a4 <__floatunsidf>
20011bee:	87aa                	mv	a5,a0
20011bf0:	882e                	mv	a6,a1
20011bf2:	863e                	mv	a2,a5
20011bf4:	86c2                	mv	a3,a6
20011bf6:	fc842503          	lw	a0,-56(s0)
20011bfa:	fcc42583          	lw	a1,-52(s0)
20011bfe:	587020ef          	jal	ra,20014984 <__subdf3>
20011c02:	87aa                	mv	a5,a0
20011c04:	882e                	mv	a6,a1
20011c06:	fcf42823          	sw	a5,-48(s0)
20011c0a:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:391

  if (diff > 0.5) {
20011c0e:	2001a7b7          	lui	a5,0x2001a
20011c12:	8707a603          	lw	a2,-1936(a5) # 20019870 <_exit+0x140>
20011c16:	8747a683          	lw	a3,-1932(a5)
20011c1a:	fd042503          	lw	a0,-48(s0)
20011c1e:	fd442583          	lw	a1,-44(s0)
20011c22:	7de020ef          	jal	ra,20014400 <__gedf2>
20011c26:	87aa                	mv	a5,a0
20011c28:	04f05563          	blez	a5,20011c72 <_ftoa+0x306>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:392
    ++frac;
20011c2c:	fe042783          	lw	a5,-32(s0)
20011c30:	0785                	addi	a5,a5,1
20011c32:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:394
    // handle rollover, e.g. case 0.99 with prec 1 is 1.0
    if (frac >= pow10[prec]) {
20011c36:	fe042503          	lw	a0,-32(s0)
20011c3a:	46a030ef          	jal	ra,200150a4 <__floatunsidf>
20011c3e:	2001a7b7          	lui	a5,0x2001a
20011c42:	ac878713          	addi	a4,a5,-1336 # 20019ac8 <pow10.2193>
20011c46:	f8442783          	lw	a5,-124(s0)
20011c4a:	078e                	slli	a5,a5,0x3
20011c4c:	97ba                	add	a5,a5,a4
20011c4e:	0047a803          	lw	a6,4(a5)
20011c52:	439c                	lw	a5,0(a5)
20011c54:	863e                	mv	a2,a5
20011c56:	86c2                	mv	a3,a6
20011c58:	7a8020ef          	jal	ra,20014400 <__gedf2>
20011c5c:	87aa                	mv	a5,a0
20011c5e:	0407c563          	bltz	a5,20011ca8 <_ftoa+0x33c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:395
      frac = 0;
20011c62:	fe042023          	sw	zero,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:396
      ++whole;
20011c66:	fe442783          	lw	a5,-28(s0)
20011c6a:	0785                	addi	a5,a5,1
20011c6c:	fef42223          	sw	a5,-28(s0)
20011c70:	a825                	j	20011ca8 <_ftoa+0x33c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:399
    }
  }
  else if (diff < 0.5) {
20011c72:	2001a7b7          	lui	a5,0x2001a
20011c76:	8707a603          	lw	a2,-1936(a5) # 20019870 <_exit+0x140>
20011c7a:	8747a683          	lw	a3,-1932(a5)
20011c7e:	fd042503          	lw	a0,-48(s0)
20011c82:	fd442583          	lw	a1,-44(s0)
20011c86:	01f020ef          	jal	ra,200144a4 <__ledf2>
20011c8a:	87aa                	mv	a5,a0
20011c8c:	0007ce63          	bltz	a5,20011ca8 <_ftoa+0x33c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:401
  }
  else if ((frac == 0U) || (frac & 1U)) {
20011c90:	fe042783          	lw	a5,-32(s0)
20011c94:	c789                	beqz	a5,20011c9e <_ftoa+0x332>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:401 (discriminator 1)
20011c96:	fe042783          	lw	a5,-32(s0)
20011c9a:	8b85                	andi	a5,a5,1
20011c9c:	c791                	beqz	a5,20011ca8 <_ftoa+0x33c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:403
    // if halfway, round up if odd OR if last digit is 0
    ++frac;
20011c9e:	fe042783          	lw	a5,-32(s0)
20011ca2:	0785                	addi	a5,a5,1
20011ca4:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:406
  }

  if (prec == 0U) {
20011ca8:	f8442783          	lw	a5,-124(s0)
20011cac:	e7d9                	bnez	a5,20011d3a <_ftoa+0x3ce>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:407
    diff = value - (double)whole;
20011cae:	fe442503          	lw	a0,-28(s0)
20011cb2:	388030ef          	jal	ra,2001503a <__floatsidf>
20011cb6:	87aa                	mv	a5,a0
20011cb8:	882e                	mv	a6,a1
20011cba:	863e                	mv	a2,a5
20011cbc:	86c2                	mv	a3,a6
20011cbe:	f8842503          	lw	a0,-120(s0)
20011cc2:	f8c42583          	lw	a1,-116(s0)
20011cc6:	4bf020ef          	jal	ra,20014984 <__subdf3>
20011cca:	87aa                	mv	a5,a0
20011ccc:	882e                	mv	a6,a1
20011cce:	fcf42823          	sw	a5,-48(s0)
20011cd2:	fd042a23          	sw	a6,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:408
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
20011cd6:	4485                	li	s1,1
20011cd8:	2001a7b7          	lui	a5,0x2001a
20011cdc:	8707a603          	lw	a2,-1936(a5) # 20019870 <_exit+0x140>
20011ce0:	8747a683          	lw	a3,-1932(a5)
20011ce4:	fd042503          	lw	a0,-48(s0)
20011ce8:	fd442583          	lw	a1,-44(s0)
20011cec:	7b8020ef          	jal	ra,200144a4 <__ledf2>
20011cf0:	87aa                	mv	a5,a0
20011cf2:	0007c363          	bltz	a5,20011cf8 <_ftoa+0x38c>
20011cf6:	4481                	li	s1,0
20011cf8:	0ff4f793          	andi	a5,s1,255
20011cfc:	0017c793          	xori	a5,a5,1
20011d00:	0ff7f793          	andi	a5,a5,255
20011d04:	e385                	bnez	a5,20011d24 <_ftoa+0x3b8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:408 (discriminator 2)
20011d06:	2001a7b7          	lui	a5,0x2001a
20011d0a:	8707a603          	lw	a2,-1936(a5) # 20019870 <_exit+0x140>
20011d0e:	8747a683          	lw	a3,-1932(a5)
20011d12:	fd042503          	lw	a0,-48(s0)
20011d16:	fd442583          	lw	a1,-44(s0)
20011d1a:	6e6020ef          	jal	ra,20014400 <__gedf2>
20011d1e:	87aa                	mv	a5,a0
20011d20:	0cf05a63          	blez	a5,20011df4 <_ftoa+0x488>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:408 (discriminator 3)
20011d24:	fe442783          	lw	a5,-28(s0)
20011d28:	8b85                	andi	a5,a5,1
20011d2a:	10078663          	beqz	a5,20011e36 <_ftoa+0x4ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:411
      // exactly 0.5 and ODD, then round up
      // 1.5 -> 2, but 2.5 -> 2
      ++whole;
20011d2e:	fe442783          	lw	a5,-28(s0)
20011d32:	0785                	addi	a5,a5,1
20011d34:	fef42223          	sw	a5,-28(s0)
20011d38:	a8fd                	j	20011e36 <_ftoa+0x4ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:415
    }
  }
  else {
    unsigned int count = prec;
20011d3a:	f8442783          	lw	a5,-124(s0)
20011d3e:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:417
    // now do fractional part, as an unsigned number
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20011d42:	a0b1                	j	20011d8e <_ftoa+0x422>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:418
      --count;
20011d44:	fdc42783          	lw	a5,-36(s0)
20011d48:	17fd                	addi	a5,a5,-1
20011d4a:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:419
      buf[len++] = (char)(48U + (frac % 10U));
20011d4e:	fe042703          	lw	a4,-32(s0)
20011d52:	47a9                	li	a5,10
20011d54:	02f777b3          	remu	a5,a4,a5
20011d58:	0ff7f713          	andi	a4,a5,255
20011d5c:	fec42783          	lw	a5,-20(s0)
20011d60:	00178693          	addi	a3,a5,1
20011d64:	fed42623          	sw	a3,-20(s0)
20011d68:	03070713          	addi	a4,a4,48
20011d6c:	0ff77713          	andi	a4,a4,255
20011d70:	ff040693          	addi	a3,s0,-16
20011d74:	97b6                	add	a5,a5,a3
20011d76:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:420
      if (!(frac /= 10U)) {
20011d7a:	fe042703          	lw	a4,-32(s0)
20011d7e:	47a9                	li	a5,10
20011d80:	02f757b3          	divu	a5,a4,a5
20011d84:	fef42023          	sw	a5,-32(s0)
20011d88:	fe042783          	lw	a5,-32(s0)
20011d8c:	c799                	beqz	a5,20011d9a <_ftoa+0x42e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:417
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
20011d8e:	fec42703          	lw	a4,-20(s0)
20011d92:	47fd                	li	a5,31
20011d94:	fae7f8e3          	bgeu	a5,a4,20011d44 <_ftoa+0x3d8>
20011d98:	a005                	j	20011db8 <_ftoa+0x44c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:421
        break;
20011d9a:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:425
      }
    }
    // add extra 0s
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20011d9c:	a831                	j	20011db8 <_ftoa+0x44c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:426
      buf[len++] = '0';
20011d9e:	fec42783          	lw	a5,-20(s0)
20011da2:	00178713          	addi	a4,a5,1
20011da6:	fee42623          	sw	a4,-20(s0)
20011daa:	ff040713          	addi	a4,s0,-16
20011dae:	97ba                	add	a5,a5,a4
20011db0:	03000713          	li	a4,48
20011db4:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:425
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
20011db8:	fec42703          	lw	a4,-20(s0)
20011dbc:	47fd                	li	a5,31
20011dbe:	00e7e963          	bltu	a5,a4,20011dd0 <_ftoa+0x464>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:425 (discriminator 1)
20011dc2:	fdc42783          	lw	a5,-36(s0)
20011dc6:	fff78713          	addi	a4,a5,-1
20011dca:	fce42e23          	sw	a4,-36(s0)
20011dce:	fbe1                	bnez	a5,20011d9e <_ftoa+0x432>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:428
    }
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
20011dd0:	fec42703          	lw	a4,-20(s0)
20011dd4:	47fd                	li	a5,31
20011dd6:	06e7e063          	bltu	a5,a4,20011e36 <_ftoa+0x4ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:430
      // add decimal
      buf[len++] = '.';
20011dda:	fec42783          	lw	a5,-20(s0)
20011dde:	00178713          	addi	a4,a5,1
20011de2:	fee42623          	sw	a4,-20(s0)
20011de6:	ff040713          	addi	a4,s0,-16
20011dea:	97ba                	add	a5,a5,a4
20011dec:	02e00713          	li	a4,46
20011df0:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:435 (discriminator 1)
    }
  }

  // do whole part, number is reversed
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20011df4:	a089                	j	20011e36 <_ftoa+0x4ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:436
    buf[len++] = (char)(48 + (whole % 10));
20011df6:	fe442703          	lw	a4,-28(s0)
20011dfa:	47a9                	li	a5,10
20011dfc:	02f767b3          	rem	a5,a4,a5
20011e00:	0ff7f713          	andi	a4,a5,255
20011e04:	fec42783          	lw	a5,-20(s0)
20011e08:	00178693          	addi	a3,a5,1
20011e0c:	fed42623          	sw	a3,-20(s0)
20011e10:	03070713          	addi	a4,a4,48
20011e14:	0ff77713          	andi	a4,a4,255
20011e18:	ff040693          	addi	a3,s0,-16
20011e1c:	97b6                	add	a5,a5,a3
20011e1e:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:437
    if (!(whole /= 10)) {
20011e22:	fe442703          	lw	a4,-28(s0)
20011e26:	47a9                	li	a5,10
20011e28:	02f747b3          	div	a5,a4,a5
20011e2c:	fef42223          	sw	a5,-28(s0)
20011e30:	fe442783          	lw	a5,-28(s0)
20011e34:	c799                	beqz	a5,20011e42 <_ftoa+0x4d6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:435
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
20011e36:	fec42703          	lw	a4,-20(s0)
20011e3a:	47fd                	li	a5,31
20011e3c:	fae7fde3          	bgeu	a5,a4,20011df6 <_ftoa+0x48a>
20011e40:	a011                	j	20011e44 <_ftoa+0x4d8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:438
      break;
20011e42:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:443
    }
  }

  // pad leading zeros
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
20011e44:	401c                	lw	a5,0(s0)
20011e46:	8b89                	andi	a5,a5,2
20011e48:	ebb9                	bnez	a5,20011e9e <_ftoa+0x532>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:443 (discriminator 1)
20011e4a:	401c                	lw	a5,0(s0)
20011e4c:	8b85                	andi	a5,a5,1
20011e4e:	cba1                	beqz	a5,20011e9e <_ftoa+0x532>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:444
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
20011e50:	f8042783          	lw	a5,-128(s0)
20011e54:	cb95                	beqz	a5,20011e88 <_ftoa+0x51c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:444 (discriminator 1)
20011e56:	feb44783          	lbu	a5,-21(s0)
20011e5a:	e781                	bnez	a5,20011e62 <_ftoa+0x4f6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:444 (discriminator 2)
20011e5c:	401c                	lw	a5,0(s0)
20011e5e:	8bb1                	andi	a5,a5,12
20011e60:	c785                	beqz	a5,20011e88 <_ftoa+0x51c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:445
      width--;
20011e62:	f8042783          	lw	a5,-128(s0)
20011e66:	17fd                	addi	a5,a5,-1
20011e68:	f8f42023          	sw	a5,-128(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:447
    }
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20011e6c:	a831                	j	20011e88 <_ftoa+0x51c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:448
      buf[len++] = '0';
20011e6e:	fec42783          	lw	a5,-20(s0)
20011e72:	00178713          	addi	a4,a5,1
20011e76:	fee42623          	sw	a4,-20(s0)
20011e7a:	ff040713          	addi	a4,s0,-16
20011e7e:	97ba                	add	a5,a5,a4
20011e80:	03000713          	li	a4,48
20011e84:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:447
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
20011e88:	fec42703          	lw	a4,-20(s0)
20011e8c:	f8042783          	lw	a5,-128(s0)
20011e90:	00f77763          	bgeu	a4,a5,20011e9e <_ftoa+0x532>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:447 (discriminator 1)
20011e94:	fec42703          	lw	a4,-20(s0)
20011e98:	47fd                	li	a5,31
20011e9a:	fce7fae3          	bgeu	a5,a4,20011e6e <_ftoa+0x502>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:452
    }
  }

  if (len < PRINTF_FTOA_BUFFER_SIZE) {
20011e9e:	fec42703          	lw	a4,-20(s0)
20011ea2:	47fd                	li	a5,31
20011ea4:	06e7e463          	bltu	a5,a4,20011f0c <_ftoa+0x5a0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:453
    if (negative) {
20011ea8:	feb44783          	lbu	a5,-21(s0)
20011eac:	cf99                	beqz	a5,20011eca <_ftoa+0x55e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:454
      buf[len++] = '-';
20011eae:	fec42783          	lw	a5,-20(s0)
20011eb2:	00178713          	addi	a4,a5,1
20011eb6:	fee42623          	sw	a4,-20(s0)
20011eba:	ff040713          	addi	a4,s0,-16
20011ebe:	97ba                	add	a5,a5,a4
20011ec0:	02d00713          	li	a4,45
20011ec4:	fae78c23          	sb	a4,-72(a5)
20011ec8:	a091                	j	20011f0c <_ftoa+0x5a0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:456
    }
    else if (flags & FLAGS_PLUS) {
20011eca:	401c                	lw	a5,0(s0)
20011ecc:	8b91                	andi	a5,a5,4
20011ece:	cf99                	beqz	a5,20011eec <_ftoa+0x580>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:457
      buf[len++] = '+';  // ignore the space if the '+' exists
20011ed0:	fec42783          	lw	a5,-20(s0)
20011ed4:	00178713          	addi	a4,a5,1
20011ed8:	fee42623          	sw	a4,-20(s0)
20011edc:	ff040713          	addi	a4,s0,-16
20011ee0:	97ba                	add	a5,a5,a4
20011ee2:	02b00713          	li	a4,43
20011ee6:	fae78c23          	sb	a4,-72(a5)
20011eea:	a00d                	j	20011f0c <_ftoa+0x5a0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:459
    }
    else if (flags & FLAGS_SPACE) {
20011eec:	401c                	lw	a5,0(s0)
20011eee:	8ba1                	andi	a5,a5,8
20011ef0:	cf91                	beqz	a5,20011f0c <_ftoa+0x5a0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:460
      buf[len++] = ' ';
20011ef2:	fec42783          	lw	a5,-20(s0)
20011ef6:	00178713          	addi	a4,a5,1
20011efa:	fee42623          	sw	a4,-20(s0)
20011efe:	ff040713          	addi	a4,s0,-16
20011f02:	97ba                	add	a5,a5,a4
20011f04:	02000713          	li	a4,32
20011f08:	fae78c23          	sb	a4,-72(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:464
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
20011f0c:	fa840713          	addi	a4,s0,-88
20011f10:	00042883          	lw	a7,0(s0)
20011f14:	f8042803          	lw	a6,-128(s0)
20011f18:	fec42783          	lw	a5,-20(s0)
20011f1c:	f9042683          	lw	a3,-112(s0)
20011f20:	f9442603          	lw	a2,-108(s0)
20011f24:	f9842583          	lw	a1,-104(s0)
20011f28:	f9c42503          	lw	a0,-100(s0)
20011f2c:	ca8ff0ef          	jal	ra,200113d4 <_out_rev>
20011f30:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:465 (discriminator 3)
}
20011f32:	853e                	mv	a0,a5
20011f34:	40ba                	lw	ra,140(sp)
20011f36:	442a                	lw	s0,136(sp)
20011f38:	449a                	lw	s1,132(sp)
20011f3a:	6149                	addi	sp,sp,144
20011f3c:	8082                	ret

20011f3e <_etoa>:
_etoa():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:471


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
20011f3e:	7131                	addi	sp,sp,-192
20011f40:	df06                	sw	ra,188(sp)
20011f42:	dd22                	sw	s0,184(sp)
20011f44:	db26                	sw	s1,180(sp)
20011f46:	d94a                	sw	s2,176(sp)
20011f48:	d74e                	sw	s3,172(sp)
20011f4a:	d552                	sw	s4,168(sp)
20011f4c:	d356                	sw	s5,164(sp)
20011f4e:	d15a                	sw	s6,160(sp)
20011f50:	cf5e                	sw	s7,156(sp)
20011f52:	cd62                	sw	s8,152(sp)
20011f54:	cb66                	sw	s9,148(sp)
20011f56:	c96a                	sw	s10,144(sp)
20011f58:	c76e                	sw	s11,140(sp)
20011f5a:	0180                	addi	s0,sp,192
20011f5c:	f6a42e23          	sw	a0,-132(s0)
20011f60:	f6b42c23          	sw	a1,-136(s0)
20011f64:	f6c42a23          	sw	a2,-140(s0)
20011f68:	f6d42823          	sw	a3,-144(s0)
20011f6c:	f6e42423          	sw	a4,-152(s0)
20011f70:	f6f42623          	sw	a5,-148(s0)
20011f74:	f7042223          	sw	a6,-156(s0)
20011f78:	f7142023          	sw	a7,-160(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:473
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
20011f7c:	f6842603          	lw	a2,-152(s0)
20011f80:	f6c42683          	lw	a3,-148(s0)
20011f84:	f6842503          	lw	a0,-152(s0)
20011f88:	f6c42583          	lw	a1,-148(s0)
20011f8c:	40a020ef          	jal	ra,20014396 <__eqdf2>
20011f90:	87aa                	mv	a5,a0
20011f92:	ef9d                	bnez	a5,20011fd0 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:473 (discriminator 1)
20011f94:	2001a7b7          	lui	a5,0x2001a
20011f98:	8587a603          	lw	a2,-1960(a5) # 20019858 <_exit+0x128>
20011f9c:	85c7a683          	lw	a3,-1956(a5)
20011fa0:	f6842503          	lw	a0,-152(s0)
20011fa4:	f6c42583          	lw	a1,-148(s0)
20011fa8:	458020ef          	jal	ra,20014400 <__gedf2>
20011fac:	87aa                	mv	a5,a0
20011fae:	02f04163          	bgtz	a5,20011fd0 <_etoa+0x92>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:473 (discriminator 2)
20011fb2:	2001a7b7          	lui	a5,0x2001a
20011fb6:	8507a603          	lw	a2,-1968(a5) # 20019850 <_exit+0x120>
20011fba:	8547a683          	lw	a3,-1964(a5)
20011fbe:	f6842503          	lw	a0,-152(s0)
20011fc2:	f6c42583          	lw	a1,-148(s0)
20011fc6:	4de020ef          	jal	ra,200144a4 <__ledf2>
20011fca:	87aa                	mv	a5,a0
20011fcc:	0207d863          	bgez	a5,20011ffc <_etoa+0xbe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:474
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
20011fd0:	401c                	lw	a5,0(s0)
20011fd2:	c03e                	sw	a5,0(sp)
20011fd4:	f6042883          	lw	a7,-160(s0)
20011fd8:	f6442803          	lw	a6,-156(s0)
20011fdc:	f6842703          	lw	a4,-152(s0)
20011fe0:	f6c42783          	lw	a5,-148(s0)
20011fe4:	f7042683          	lw	a3,-144(s0)
20011fe8:	f7442603          	lw	a2,-140(s0)
20011fec:	f7842583          	lw	a1,-136(s0)
20011ff0:	f7c42503          	lw	a0,-132(s0)
20011ff4:	979ff0ef          	jal	ra,2001196c <_ftoa>
20011ff8:	87aa                	mv	a5,a0
20011ffa:	ab49                	j	2001258c <_etoa+0x64e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:478
  }

  // determine the sign
  const bool negative = value < 0;
20011ffc:	4485                	li	s1,1
20011ffe:	4601                	li	a2,0
20012000:	4681                	li	a3,0
20012002:	f6842503          	lw	a0,-152(s0)
20012006:	f6c42583          	lw	a1,-148(s0)
2001200a:	49a020ef          	jal	ra,200144a4 <__ledf2>
2001200e:	87aa                	mv	a5,a0
20012010:	0007c363          	bltz	a5,20012016 <_etoa+0xd8>
20012014:	4481                	li	s1,0
20012016:	fa9409a3          	sb	s1,-77(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:479
  if (negative) {
2001201a:	fb344783          	lbu	a5,-77(s0)
2001201e:	cf81                	beqz	a5,20012036 <_etoa+0xf8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:480
    value = -value;
20012020:	f6842783          	lw	a5,-152(s0)
20012024:	f6f42423          	sw	a5,-152(s0)
20012028:	f6c42703          	lw	a4,-148(s0)
2001202c:	800007b7          	lui	a5,0x80000
20012030:	8fb9                	xor	a5,a5,a4
20012032:	f6f42623          	sw	a5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:484
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
20012036:	401c                	lw	a5,0(s0)
20012038:	4007f793          	andi	a5,a5,1024
2001203c:	e781                	bnez	a5,20012044 <_etoa+0x106>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:485
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
2001203e:	4799                	li	a5,6
20012040:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:495
  union {
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
20012044:	f6842783          	lw	a5,-152(s0)
20012048:	f6c42803          	lw	a6,-148(s0)
2001204c:	f8f42423          	sw	a5,-120(s0)
20012050:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:496
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
20012054:	f8842783          	lw	a5,-120(s0)
20012058:	f8c42803          	lw	a6,-116(s0)
2001205c:	01485793          	srli	a5,a6,0x14
20012060:	f4f42c23          	sw	a5,-168(s0)
20012064:	f4042e23          	sw	zero,-164(s0)
20012068:	f5842783          	lw	a5,-168(s0)
2001206c:	7ff7f793          	andi	a5,a5,2047
20012070:	c0178793          	addi	a5,a5,-1023 # 7ffffc01 <metal_segment_heap_target_end+0xffffe3d5>
20012074:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:497
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
20012078:	f8842783          	lw	a5,-120(s0)
2001207c:	f8c42803          	lw	a6,-116(s0)
20012080:	fff7f913          	andi	s2,a5,-1
20012084:	00100737          	lui	a4,0x100
20012088:	177d                	addi	a4,a4,-1
2001208a:	00e879b3          	and	s3,a6,a4
2001208e:	00096b13          	ori	s6,s2,0
20012092:	3ff007b7          	lui	a5,0x3ff00
20012096:	00f9ebb3          	or	s7,s3,a5
2001209a:	f9642423          	sw	s6,-120(s0)
2001209e:	f9742623          	sw	s7,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:499
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
200120a2:	fac42503          	lw	a0,-84(s0)
200120a6:	795020ef          	jal	ra,2001503a <__floatsidf>
200120aa:	2001a7b7          	lui	a5,0x2001a
200120ae:	8787a603          	lw	a2,-1928(a5) # 20019878 <_exit+0x148>
200120b2:	87c7a683          	lw	a3,-1924(a5)
200120b6:	492020ef          	jal	ra,20014548 <__muldf3>
200120ba:	87aa                	mv	a5,a0
200120bc:	882e                	mv	a6,a1
200120be:	853e                	mv	a0,a5
200120c0:	85c2                	mv	a1,a6
200120c2:	2001a7b7          	lui	a5,0x2001a
200120c6:	8807a603          	lw	a2,-1920(a5) # 20019880 <_exit+0x150>
200120ca:	8847a683          	lw	a3,-1916(a5)
200120ce:	7a0010ef          	jal	ra,2001386e <__adddf3>
200120d2:	87aa                	mv	a5,a0
200120d4:	882e                	mv	a6,a1
200120d6:	893e                	mv	s2,a5
200120d8:	89c2                	mv	s3,a6
200120da:	f8842783          	lw	a5,-120(s0)
200120de:	f8c42803          	lw	a6,-116(s0)
200120e2:	2001a737          	lui	a4,0x2001a
200120e6:	88872603          	lw	a2,-1912(a4) # 20019888 <_exit+0x158>
200120ea:	88c72683          	lw	a3,-1908(a4)
200120ee:	853e                	mv	a0,a5
200120f0:	85c2                	mv	a1,a6
200120f2:	093020ef          	jal	ra,20014984 <__subdf3>
200120f6:	87aa                	mv	a5,a0
200120f8:	882e                	mv	a6,a1
200120fa:	853e                	mv	a0,a5
200120fc:	85c2                	mv	a1,a6
200120fe:	2001a7b7          	lui	a5,0x2001a
20012102:	8907a603          	lw	a2,-1904(a5) # 20019890 <_exit+0x160>
20012106:	8947a683          	lw	a3,-1900(a5)
2001210a:	43e020ef          	jal	ra,20014548 <__muldf3>
2001210e:	87aa                	mv	a5,a0
20012110:	882e                	mv	a6,a1
20012112:	863e                	mv	a2,a5
20012114:	86c2                	mv	a3,a6
20012116:	854a                	mv	a0,s2
20012118:	85ce                	mv	a1,s3
2001211a:	754010ef          	jal	ra,2001386e <__adddf3>
2001211e:	87aa                	mv	a5,a0
20012120:	882e                	mv	a6,a1
20012122:	853e                	mv	a0,a5
20012124:	85c2                	mv	a1,a6
20012126:	655020ef          	jal	ra,20014f7a <__fixdfsi>
2001212a:	87aa                	mv	a5,a0
2001212c:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:501
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
20012130:	fbc42503          	lw	a0,-68(s0)
20012134:	707020ef          	jal	ra,2001503a <__floatsidf>
20012138:	2001a7b7          	lui	a5,0x2001a
2001213c:	8987a603          	lw	a2,-1896(a5) # 20019898 <_exit+0x168>
20012140:	89c7a683          	lw	a3,-1892(a5)
20012144:	404020ef          	jal	ra,20014548 <__muldf3>
20012148:	87aa                	mv	a5,a0
2001214a:	882e                	mv	a6,a1
2001214c:	853e                	mv	a0,a5
2001214e:	85c2                	mv	a1,a6
20012150:	2001a7b7          	lui	a5,0x2001a
20012154:	8707a603          	lw	a2,-1936(a5) # 20019870 <_exit+0x140>
20012158:	8747a683          	lw	a3,-1932(a5)
2001215c:	712010ef          	jal	ra,2001386e <__adddf3>
20012160:	87aa                	mv	a5,a0
20012162:	882e                	mv	a6,a1
20012164:	853e                	mv	a0,a5
20012166:	85c2                	mv	a1,a6
20012168:	613020ef          	jal	ra,20014f7a <__fixdfsi>
2001216c:	87aa                	mv	a5,a0
2001216e:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:502
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
20012172:	fbc42503          	lw	a0,-68(s0)
20012176:	6c5020ef          	jal	ra,2001503a <__floatsidf>
2001217a:	2001a7b7          	lui	a5,0x2001a
2001217e:	8a07a603          	lw	a2,-1888(a5) # 200198a0 <_exit+0x170>
20012182:	8a47a683          	lw	a3,-1884(a5)
20012186:	3c2020ef          	jal	ra,20014548 <__muldf3>
2001218a:	87aa                	mv	a5,a0
2001218c:	882e                	mv	a6,a1
2001218e:	893e                	mv	s2,a5
20012190:	89c2                	mv	s3,a6
20012192:	fac42503          	lw	a0,-84(s0)
20012196:	6a5020ef          	jal	ra,2001503a <__floatsidf>
2001219a:	2001a7b7          	lui	a5,0x2001a
2001219e:	8a87a603          	lw	a2,-1880(a5) # 200198a8 <_exit+0x178>
200121a2:	8ac7a683          	lw	a3,-1876(a5)
200121a6:	3a2020ef          	jal	ra,20014548 <__muldf3>
200121aa:	87aa                	mv	a5,a0
200121ac:	882e                	mv	a6,a1
200121ae:	863e                	mv	a2,a5
200121b0:	86c2                	mv	a3,a6
200121b2:	854a                	mv	a0,s2
200121b4:	85ce                	mv	a1,s3
200121b6:	7ce020ef          	jal	ra,20014984 <__subdf3>
200121ba:	87aa                	mv	a5,a0
200121bc:	882e                	mv	a6,a1
200121be:	faf42023          	sw	a5,-96(s0)
200121c2:	fb042223          	sw	a6,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:503
  const double z2 = z * z;
200121c6:	fa042603          	lw	a2,-96(s0)
200121ca:	fa442683          	lw	a3,-92(s0)
200121ce:	fa042503          	lw	a0,-96(s0)
200121d2:	fa442583          	lw	a1,-92(s0)
200121d6:	372020ef          	jal	ra,20014548 <__muldf3>
200121da:	87aa                	mv	a5,a0
200121dc:	882e                	mv	a6,a1
200121de:	f8f42c23          	sw	a5,-104(s0)
200121e2:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:504
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
200121e6:	fac42783          	lw	a5,-84(s0)
200121ea:	3ff78793          	addi	a5,a5,1023
200121ee:	8d3e                	mv	s10,a5
200121f0:	87fd                	srai	a5,a5,0x1f
200121f2:	8dbe                	mv	s11,a5
200121f4:	014d1c93          	slli	s9,s10,0x14
200121f8:	4c01                	li	s8,0
200121fa:	f9842423          	sw	s8,-120(s0)
200121fe:	f9942623          	sw	s9,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:506
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
20012202:	f8842903          	lw	s2,-120(s0)
20012206:	f8c42983          	lw	s3,-116(s0)
2001220a:	fa042783          	lw	a5,-96(s0)
2001220e:	fa442803          	lw	a6,-92(s0)
20012212:	863e                	mv	a2,a5
20012214:	86c2                	mv	a3,a6
20012216:	853e                	mv	a0,a5
20012218:	85c2                	mv	a1,a6
2001221a:	654010ef          	jal	ra,2001386e <__adddf3>
2001221e:	87aa                	mv	a5,a0
20012220:	882e                	mv	a6,a1
20012222:	8b3e                	mv	s6,a5
20012224:	8bc2                	mv	s7,a6
20012226:	2001a7b7          	lui	a5,0x2001a
2001222a:	fa042603          	lw	a2,-96(s0)
2001222e:	fa442683          	lw	a3,-92(s0)
20012232:	8b07a503          	lw	a0,-1872(a5) # 200198b0 <_exit+0x180>
20012236:	8b47a583          	lw	a1,-1868(a5)
2001223a:	74a020ef          	jal	ra,20014984 <__subdf3>
2001223e:	87aa                	mv	a5,a0
20012240:	882e                	mv	a6,a1
20012242:	8c3e                	mv	s8,a5
20012244:	8cc2                	mv	s9,a6
20012246:	2001a7b7          	lui	a5,0x2001a
2001224a:	8b87a603          	lw	a2,-1864(a5) # 200198b8 <_exit+0x188>
2001224e:	8bc7a683          	lw	a3,-1860(a5)
20012252:	f9842503          	lw	a0,-104(s0)
20012256:	f9c42583          	lw	a1,-100(s0)
2001225a:	407010ef          	jal	ra,20013e60 <__divdf3>
2001225e:	87aa                	mv	a5,a0
20012260:	882e                	mv	a6,a1
20012262:	853e                	mv	a0,a5
20012264:	85c2                	mv	a1,a6
20012266:	2001a7b7          	lui	a5,0x2001a
2001226a:	8c07a603          	lw	a2,-1856(a5) # 200198c0 <_exit+0x190>
2001226e:	8c47a683          	lw	a3,-1852(a5)
20012272:	5fc010ef          	jal	ra,2001386e <__adddf3>
20012276:	87aa                	mv	a5,a0
20012278:	882e                	mv	a6,a1
2001227a:	863e                	mv	a2,a5
2001227c:	86c2                	mv	a3,a6
2001227e:	f9842503          	lw	a0,-104(s0)
20012282:	f9c42583          	lw	a1,-100(s0)
20012286:	3db010ef          	jal	ra,20013e60 <__divdf3>
2001228a:	87aa                	mv	a5,a0
2001228c:	882e                	mv	a6,a1
2001228e:	853e                	mv	a0,a5
20012290:	85c2                	mv	a1,a6
20012292:	2001a7b7          	lui	a5,0x2001a
20012296:	8c87a603          	lw	a2,-1848(a5) # 200198c8 <_exit+0x198>
2001229a:	8cc7a683          	lw	a3,-1844(a5)
2001229e:	5d0010ef          	jal	ra,2001386e <__adddf3>
200122a2:	87aa                	mv	a5,a0
200122a4:	882e                	mv	a6,a1
200122a6:	863e                	mv	a2,a5
200122a8:	86c2                	mv	a3,a6
200122aa:	f9842503          	lw	a0,-104(s0)
200122ae:	f9c42583          	lw	a1,-100(s0)
200122b2:	3af010ef          	jal	ra,20013e60 <__divdf3>
200122b6:	87aa                	mv	a5,a0
200122b8:	882e                	mv	a6,a1
200122ba:	863e                	mv	a2,a5
200122bc:	86c2                	mv	a3,a6
200122be:	8562                	mv	a0,s8
200122c0:	85e6                	mv	a1,s9
200122c2:	5ac010ef          	jal	ra,2001386e <__adddf3>
200122c6:	87aa                	mv	a5,a0
200122c8:	882e                	mv	a6,a1
200122ca:	863e                	mv	a2,a5
200122cc:	86c2                	mv	a3,a6
200122ce:	855a                	mv	a0,s6
200122d0:	85de                	mv	a1,s7
200122d2:	38f010ef          	jal	ra,20013e60 <__divdf3>
200122d6:	87aa                	mv	a5,a0
200122d8:	882e                	mv	a6,a1
200122da:	853e                	mv	a0,a5
200122dc:	85c2                	mv	a1,a6
200122de:	2001a7b7          	lui	a5,0x2001a
200122e2:	8d07a603          	lw	a2,-1840(a5) # 200198d0 <_exit+0x1a0>
200122e6:	8d47a683          	lw	a3,-1836(a5)
200122ea:	584010ef          	jal	ra,2001386e <__adddf3>
200122ee:	87aa                	mv	a5,a0
200122f0:	882e                	mv	a6,a1
200122f2:	863e                	mv	a2,a5
200122f4:	86c2                	mv	a3,a6
200122f6:	854a                	mv	a0,s2
200122f8:	85ce                	mv	a1,s3
200122fa:	24e020ef          	jal	ra,20014548 <__muldf3>
200122fe:	87aa                	mv	a5,a0
20012300:	882e                	mv	a6,a1
20012302:	f8f42423          	sw	a5,-120(s0)
20012306:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:508
  // correct for rounding errors
  if (value < conv.F) {
2001230a:	f8842783          	lw	a5,-120(s0)
2001230e:	f8c42803          	lw	a6,-116(s0)
20012312:	863e                	mv	a2,a5
20012314:	86c2                	mv	a3,a6
20012316:	f6842503          	lw	a0,-152(s0)
2001231a:	f6c42583          	lw	a1,-148(s0)
2001231e:	186020ef          	jal	ra,200144a4 <__ledf2>
20012322:	87aa                	mv	a5,a0
20012324:	0207db63          	bgez	a5,2001235a <_etoa+0x41c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:509
    expval--;
20012328:	fbc42783          	lw	a5,-68(s0)
2001232c:	17fd                	addi	a5,a5,-1
2001232e:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:510
    conv.F /= 10;
20012332:	f8842783          	lw	a5,-120(s0)
20012336:	f8c42803          	lw	a6,-116(s0)
2001233a:	2001a737          	lui	a4,0x2001a
2001233e:	8c072603          	lw	a2,-1856(a4) # 200198c0 <_exit+0x190>
20012342:	8c472683          	lw	a3,-1852(a4)
20012346:	853e                	mv	a0,a5
20012348:	85c2                	mv	a1,a6
2001234a:	317010ef          	jal	ra,20013e60 <__divdf3>
2001234e:	87aa                	mv	a5,a0
20012350:	882e                	mv	a6,a1
20012352:	f8f42423          	sw	a5,-120(s0)
20012356:	f9042623          	sw	a6,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
2001235a:	fbc42703          	lw	a4,-68(s0)
2001235e:	06300793          	li	a5,99
20012362:	00e7ca63          	blt	a5,a4,20012376 <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 1)
20012366:	fbc42703          	lw	a4,-68(s0)
2001236a:	f9d00793          	li	a5,-99
2001236e:	00f74463          	blt	a4,a5,20012376 <_etoa+0x438>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 3)
20012372:	4791                	li	a5,4
20012374:	a011                	j	20012378 <_etoa+0x43a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 4)
20012376:	4795                	li	a5,5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:514 (discriminator 6)
20012378:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:517 (discriminator 6)

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
2001237c:	4018                	lw	a4,0(s0)
2001237e:	6785                	lui	a5,0x1
20012380:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20012384:	8ff9                	and	a5,a5,a4
20012386:	c7d1                	beqz	a5,20012412 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:519
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
20012388:	2001a7b7          	lui	a5,0x2001a
2001238c:	8d87a603          	lw	a2,-1832(a5) # 200198d8 <_exit+0x1a8>
20012390:	8dc7a683          	lw	a3,-1828(a5)
20012394:	f6842503          	lw	a0,-152(s0)
20012398:	f6c42583          	lw	a1,-148(s0)
2001239c:	064020ef          	jal	ra,20014400 <__gedf2>
200123a0:	87aa                	mv	a5,a0
200123a2:	0407cc63          	bltz	a5,200123fa <_etoa+0x4bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:519 (discriminator 1)
200123a6:	2001a7b7          	lui	a5,0x2001a
200123aa:	8e07a603          	lw	a2,-1824(a5) # 200198e0 <_exit+0x1b0>
200123ae:	8e47a683          	lw	a3,-1820(a5)
200123b2:	f6842503          	lw	a0,-152(s0)
200123b6:	f6c42583          	lw	a1,-148(s0)
200123ba:	0ea020ef          	jal	ra,200144a4 <__ledf2>
200123be:	87aa                	mv	a5,a0
200123c0:	0207dd63          	bgez	a5,200123fa <_etoa+0x4bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:520
      if ((int)prec > expval) {
200123c4:	f6442783          	lw	a5,-156(s0)
200123c8:	fbc42703          	lw	a4,-68(s0)
200123cc:	00f75c63          	bge	a4,a5,200123e4 <_etoa+0x4a6>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:521
        prec = (unsigned)((int)prec - expval - 1);
200123d0:	f6442703          	lw	a4,-156(s0)
200123d4:	fbc42783          	lw	a5,-68(s0)
200123d8:	40f707b3          	sub	a5,a4,a5
200123dc:	17fd                	addi	a5,a5,-1
200123de:	f6f42223          	sw	a5,-156(s0)
200123e2:	a019                	j	200123e8 <_etoa+0x4aa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:524
      }
      else {
        prec = 0;
200123e4:	f6042223          	sw	zero,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:526
      }
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
200123e8:	401c                	lw	a5,0(s0)
200123ea:	4007e793          	ori	a5,a5,1024
200123ee:	c01c                	sw	a5,0(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:528
      // no characters in exponent
      minwidth = 0U;
200123f0:	fa042c23          	sw	zero,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:529
      expval   = 0;
200123f4:	fa042e23          	sw	zero,-68(s0)
200123f8:	a829                	j	20012412 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:533
    }
    else {
      // we use one sigfig for the whole part
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
200123fa:	f6442783          	lw	a5,-156(s0)
200123fe:	cb91                	beqz	a5,20012412 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:533 (discriminator 1)
20012400:	401c                	lw	a5,0(s0)
20012402:	4007f793          	andi	a5,a5,1024
20012406:	c791                	beqz	a5,20012412 <_etoa+0x4d4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:534
        --prec;
20012408:	f6442783          	lw	a5,-156(s0)
2001240c:	17fd                	addi	a5,a5,-1
2001240e:	f6f42223          	sw	a5,-156(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:540
      }
    }
  }

  // will everything fit?
  unsigned int fwidth = width;
20012412:	f6042783          	lw	a5,-160(s0)
20012416:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:541
  if (width > minwidth) {
2001241a:	f6042703          	lw	a4,-160(s0)
2001241e:	fb842783          	lw	a5,-72(s0)
20012422:	00e7fb63          	bgeu	a5,a4,20012438 <_etoa+0x4fa>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:543
    // we didn't fall-back so subtract the characters required for the exponent
    fwidth -= minwidth;
20012426:	fb442703          	lw	a4,-76(s0)
2001242a:	fb842783          	lw	a5,-72(s0)
2001242e:	40f707b3          	sub	a5,a4,a5
20012432:	faf42a23          	sw	a5,-76(s0)
20012436:	a019                	j	2001243c <_etoa+0x4fe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:546
  } else {
    // not enough characters, so go back to default sizing
    fwidth = 0U;
20012438:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:548
  }
  if ((flags & FLAGS_LEFT) && minwidth) {
2001243c:	401c                	lw	a5,0(s0)
2001243e:	8b89                	andi	a5,a5,2
20012440:	c791                	beqz	a5,2001244c <_etoa+0x50e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:548 (discriminator 1)
20012442:	fb842783          	lw	a5,-72(s0)
20012446:	c399                	beqz	a5,2001244c <_etoa+0x50e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:550
    // if we're padding on the right, DON'T pad the floating part
    fwidth = 0U;
20012448:	fa042a23          	sw	zero,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:554
  }

  // rescale the float value
  if (expval) {
2001244c:	fbc42783          	lw	a5,-68(s0)
20012450:	c39d                	beqz	a5,20012476 <_etoa+0x538>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:555
    value /= conv.F;
20012452:	f8842783          	lw	a5,-120(s0)
20012456:	f8c42803          	lw	a6,-116(s0)
2001245a:	863e                	mv	a2,a5
2001245c:	86c2                	mv	a3,a6
2001245e:	f6842503          	lw	a0,-152(s0)
20012462:	f6c42583          	lw	a1,-148(s0)
20012466:	1fb010ef          	jal	ra,20013e60 <__divdf3>
2001246a:	87aa                	mv	a5,a0
2001246c:	882e                	mv	a6,a1
2001246e:	f6f42423          	sw	a5,-152(s0)
20012472:	f7042623          	sw	a6,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:559
  }

  // output the floating part
  const size_t start_idx = idx;
20012476:	f7442783          	lw	a5,-140(s0)
2001247a:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
2001247e:	fb344783          	lbu	a5,-77(s0)
20012482:	cb91                	beqz	a5,20012496 <_etoa+0x558>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560 (discriminator 1)
20012484:	f6842a03          	lw	s4,-152(s0)
20012488:	f6c42703          	lw	a4,-148(s0)
2001248c:	800007b7          	lui	a5,0x80000
20012490:	00f74ab3          	xor	s5,a4,a5
20012494:	a029                	j	2001249e <_etoa+0x560>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560 (discriminator 2)
20012496:	f6842a03          	lw	s4,-152(s0)
2001249a:	f6c42a83          	lw	s5,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:560 (discriminator 4)
2001249e:	4018                	lw	a4,0(s0)
200124a0:	77fd                	lui	a5,0xfffff
200124a2:	7ff78793          	addi	a5,a5,2047 # fffff7ff <metal_segment_heap_target_end+0x7fffdfd3>
200124a6:	8ff9                	and	a5,a5,a4
200124a8:	c03e                	sw	a5,0(sp)
200124aa:	fb442883          	lw	a7,-76(s0)
200124ae:	f6442803          	lw	a6,-156(s0)
200124b2:	8752                	mv	a4,s4
200124b4:	87d6                	mv	a5,s5
200124b6:	f7042683          	lw	a3,-144(s0)
200124ba:	f7442603          	lw	a2,-140(s0)
200124be:	f7842583          	lw	a1,-136(s0)
200124c2:	f7c42503          	lw	a0,-132(s0)
200124c6:	ca6ff0ef          	jal	ra,2001196c <_ftoa>
200124ca:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:563 (discriminator 4)

  // output the exponent part
  if (minwidth) {
200124ce:	fb842783          	lw	a5,-72(s0)
200124d2:	cbdd                	beqz	a5,20012588 <_etoa+0x64a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565
    // output the exponential symbol
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
200124d4:	401c                	lw	a5,0(s0)
200124d6:	0207f793          	andi	a5,a5,32
200124da:	c781                	beqz	a5,200124e2 <_etoa+0x5a4>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565 (discriminator 1)
200124dc:	04500793          	li	a5,69
200124e0:	a019                	j	200124e6 <_etoa+0x5a8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565 (discriminator 2)
200124e2:	06500793          	li	a5,101
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:565 (discriminator 4)
200124e6:	f7442703          	lw	a4,-140(s0)
200124ea:	00170693          	addi	a3,a4,1
200124ee:	f6d42a23          	sw	a3,-140(s0)
200124f2:	f7c42803          	lw	a6,-132(s0)
200124f6:	f7042683          	lw	a3,-144(s0)
200124fa:	863a                	mv	a2,a4
200124fc:	f7842583          	lw	a1,-136(s0)
20012500:	853e                	mv	a0,a5
20012502:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:567 (discriminator 4)
    // output the exponent value
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
20012504:	fbc42783          	lw	a5,-68(s0)
20012508:	41f7d713          	srai	a4,a5,0x1f
2001250c:	fbc42783          	lw	a5,-68(s0)
20012510:	8fb9                	xor	a5,a5,a4
20012512:	8f99                	sub	a5,a5,a4
20012514:	863e                	mv	a2,a5
20012516:	fbc42783          	lw	a5,-68(s0)
2001251a:	83fd                	srli	a5,a5,0x1f
2001251c:	0ff7f693          	andi	a3,a5,255
20012520:	fb842783          	lw	a5,-72(s0)
20012524:	17fd                	addi	a5,a5,-1
20012526:	4715                	li	a4,5
20012528:	c23a                	sw	a4,4(sp)
2001252a:	c03e                	sw	a5,0(sp)
2001252c:	4881                	li	a7,0
2001252e:	4829                	li	a6,10
20012530:	87b6                	mv	a5,a3
20012532:	8732                	mv	a4,a2
20012534:	f7042683          	lw	a3,-144(s0)
20012538:	f7442603          	lw	a2,-140(s0)
2001253c:	f7842583          	lw	a1,-136(s0)
20012540:	f7c42503          	lw	a0,-132(s0)
20012544:	9f6ff0ef          	jal	ra,2001173a <_ntoa_long>
20012548:	f6a42a23          	sw	a0,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:569 (discriminator 4)
    // might need to right-pad spaces
    if (flags & FLAGS_LEFT) {
2001254c:	401c                	lw	a5,0(s0)
2001254e:	8b89                	andi	a5,a5,2
20012550:	cf85                	beqz	a5,20012588 <_etoa+0x64a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:570
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
20012552:	a00d                	j	20012574 <_etoa+0x636>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:570 (discriminator 2)
20012554:	f7442783          	lw	a5,-140(s0)
20012558:	00178713          	addi	a4,a5,1
2001255c:	f6e42a23          	sw	a4,-140(s0)
20012560:	f7c42703          	lw	a4,-132(s0)
20012564:	f7042683          	lw	a3,-144(s0)
20012568:	863e                	mv	a2,a5
2001256a:	f7842583          	lw	a1,-136(s0)
2001256e:	02000513          	li	a0,32
20012572:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:570 (discriminator 1)
20012574:	f7442703          	lw	a4,-140(s0)
20012578:	f9442783          	lw	a5,-108(s0)
2001257c:	40f707b3          	sub	a5,a4,a5
20012580:	f6042703          	lw	a4,-160(s0)
20012584:	fce7e8e3          	bltu	a5,a4,20012554 <_etoa+0x616>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:573
    }
  }
  return idx;
20012588:	f7442783          	lw	a5,-140(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:574 (discriminator 1)
}
2001258c:	853e                	mv	a0,a5
2001258e:	50fa                	lw	ra,188(sp)
20012590:	546a                	lw	s0,184(sp)
20012592:	54da                	lw	s1,180(sp)
20012594:	594a                	lw	s2,176(sp)
20012596:	59ba                	lw	s3,172(sp)
20012598:	5a2a                	lw	s4,168(sp)
2001259a:	5a9a                	lw	s5,164(sp)
2001259c:	5b0a                	lw	s6,160(sp)
2001259e:	4bfa                	lw	s7,156(sp)
200125a0:	4c6a                	lw	s8,152(sp)
200125a2:	4cda                	lw	s9,148(sp)
200125a4:	4d4a                	lw	s10,144(sp)
200125a6:	4dba                	lw	s11,140(sp)
200125a8:	6129                	addi	sp,sp,192
200125aa:	8082                	ret

200125ac <_vsnprintf>:
_vsnprintf():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:581
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
200125ac:	7171                	addi	sp,sp,-176
200125ae:	d706                	sw	ra,172(sp)
200125b0:	d522                	sw	s0,168(sp)
200125b2:	d34a                	sw	s2,164(sp)
200125b4:	d14e                	sw	s3,160(sp)
200125b6:	cf52                	sw	s4,156(sp)
200125b8:	cd56                	sw	s5,152(sp)
200125ba:	cb5a                	sw	s6,148(sp)
200125bc:	c95e                	sw	s7,144(sp)
200125be:	c762                	sw	s8,140(sp)
200125c0:	c566                	sw	s9,136(sp)
200125c2:	c36a                	sw	s10,132(sp)
200125c4:	c16e                	sw	s11,128(sp)
200125c6:	1900                	addi	s0,sp,176
200125c8:	f6a42e23          	sw	a0,-132(s0)
200125cc:	f6b42c23          	sw	a1,-136(s0)
200125d0:	f6c42a23          	sw	a2,-140(s0)
200125d4:	f6d42823          	sw	a3,-144(s0)
200125d8:	f6e42623          	sw	a4,-148(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:583
  unsigned int flags, width, precision, n;
  size_t idx = 0U;
200125dc:	fa042e23          	sw	zero,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:585

  if (!buffer) {
200125e0:	f7842783          	lw	a5,-136(s0)
200125e4:	2e0796e3          	bnez	a5,200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:587
    // use null output function
    out = _out_null;
200125e8:	200117b7          	lui	a5,0x20011
200125ec:	29e78793          	addi	a5,a5,670 # 2001129e <_out_null>
200125f0:	f6f42e23          	sw	a5,-132(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:590
  }

  while (*format)
200125f4:	2dd0006f          	j	200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:593
  {
    // format specifier?  %[flags][width][.precision][length]
    if (*format != '%') {
200125f8:	f7042783          	lw	a5,-144(s0)
200125fc:	0007c703          	lbu	a4,0(a5)
20012600:	02500793          	li	a5,37
20012604:	02f70b63          	beq	a4,a5,2001263a <_vsnprintf+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:595
      // no
      out(*format, buffer, idx++, maxlen);
20012608:	f7042783          	lw	a5,-144(s0)
2001260c:	0007c503          	lbu	a0,0(a5)
20012610:	fbc42783          	lw	a5,-68(s0)
20012614:	00178713          	addi	a4,a5,1
20012618:	fae42e23          	sw	a4,-68(s0)
2001261c:	f7c42703          	lw	a4,-132(s0)
20012620:	f7442683          	lw	a3,-140(s0)
20012624:	863e                	mv	a2,a5
20012626:	f7842583          	lw	a1,-136(s0)
2001262a:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:596
      format++;
2001262c:	f7042783          	lw	a5,-144(s0)
20012630:	0785                	addi	a5,a5,1
20012632:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:597
      continue;
20012636:	29b0006f          	j	200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:601
    }
    else {
      // yes, evaluate it
      format++;
2001263a:	f7042783          	lw	a5,-144(s0)
2001263e:	0785                	addi	a5,a5,1
20012640:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:605
    }

    // evaluate flags
    flags = 0U;
20012644:	fc042623          	sw	zero,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:607
    do {
      switch (*format) {
20012648:	f7042783          	lw	a5,-144(s0)
2001264c:	0007c783          	lbu	a5,0(a5)
20012650:	1781                	addi	a5,a5,-32
20012652:	4741                	li	a4,16
20012654:	0af76663          	bltu	a4,a5,20012700 <_vsnprintf+0x154>
20012658:	00279713          	slli	a4,a5,0x2
2001265c:	2001a7b7          	lui	a5,0x2001a
20012660:	8e878793          	addi	a5,a5,-1816 # 200198e8 <_exit+0x1b8>
20012664:	97ba                	add	a5,a5,a4
20012666:	439c                	lw	a5,0(a5)
20012668:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:608
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
2001266a:	fcc42783          	lw	a5,-52(s0)
2001266e:	0017e793          	ori	a5,a5,1
20012672:	fcf42623          	sw	a5,-52(s0)
20012676:	f7042783          	lw	a5,-144(s0)
2001267a:	0785                	addi	a5,a5,1
2001267c:	f6f42823          	sw	a5,-144(s0)
20012680:	4785                	li	a5,1
20012682:	fcf42023          	sw	a5,-64(s0)
20012686:	a041                	j	20012706 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:609
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
20012688:	fcc42783          	lw	a5,-52(s0)
2001268c:	0027e793          	ori	a5,a5,2
20012690:	fcf42623          	sw	a5,-52(s0)
20012694:	f7042783          	lw	a5,-144(s0)
20012698:	0785                	addi	a5,a5,1
2001269a:	f6f42823          	sw	a5,-144(s0)
2001269e:	4785                	li	a5,1
200126a0:	fcf42023          	sw	a5,-64(s0)
200126a4:	a08d                	j	20012706 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:610
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
200126a6:	fcc42783          	lw	a5,-52(s0)
200126aa:	0047e793          	ori	a5,a5,4
200126ae:	fcf42623          	sw	a5,-52(s0)
200126b2:	f7042783          	lw	a5,-144(s0)
200126b6:	0785                	addi	a5,a5,1
200126b8:	f6f42823          	sw	a5,-144(s0)
200126bc:	4785                	li	a5,1
200126be:	fcf42023          	sw	a5,-64(s0)
200126c2:	a091                	j	20012706 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:611
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
200126c4:	fcc42783          	lw	a5,-52(s0)
200126c8:	0087e793          	ori	a5,a5,8
200126cc:	fcf42623          	sw	a5,-52(s0)
200126d0:	f7042783          	lw	a5,-144(s0)
200126d4:	0785                	addi	a5,a5,1
200126d6:	f6f42823          	sw	a5,-144(s0)
200126da:	4785                	li	a5,1
200126dc:	fcf42023          	sw	a5,-64(s0)
200126e0:	a01d                	j	20012706 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:612
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
200126e2:	fcc42783          	lw	a5,-52(s0)
200126e6:	0107e793          	ori	a5,a5,16
200126ea:	fcf42623          	sw	a5,-52(s0)
200126ee:	f7042783          	lw	a5,-144(s0)
200126f2:	0785                	addi	a5,a5,1
200126f4:	f6f42823          	sw	a5,-144(s0)
200126f8:	4785                	li	a5,1
200126fa:	fcf42023          	sw	a5,-64(s0)
200126fe:	a021                	j	20012706 <_vsnprintf+0x15a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:613
        default :                                   n = 0U; break;
20012700:	fc042023          	sw	zero,-64(s0)
20012704:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:615
      }
    } while (n);
20012706:	fc042783          	lw	a5,-64(s0)
2001270a:	ff9d                	bnez	a5,20012648 <_vsnprintf+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:618

    // evaluate width field
    width = 0U;
2001270c:	fc042423          	sw	zero,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:619
    if (_is_digit(*format)) {
20012710:	f7042783          	lw	a5,-144(s0)
20012714:	0007c783          	lbu	a5,0(a5)
20012718:	853e                	mv	a0,a5
2001271a:	c25fe0ef          	jal	ra,2001133e <_is_digit>
2001271e:	87aa                	mv	a5,a0
20012720:	cb89                	beqz	a5,20012732 <_vsnprintf+0x186>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:620
      width = _atoi(&format);
20012722:	f7040793          	addi	a5,s0,-144
20012726:	853e                	mv	a0,a5
20012728:	c4ffe0ef          	jal	ra,20011376 <_atoi>
2001272c:	fca42423          	sw	a0,-56(s0)
20012730:	a8a1                	j	20012788 <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:622
    }
    else if (*format == '*') {
20012732:	f7042783          	lw	a5,-144(s0)
20012736:	0007c703          	lbu	a4,0(a5)
2001273a:	02a00793          	li	a5,42
2001273e:	04f71563          	bne	a4,a5,20012788 <_vsnprintf+0x1dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:623
      const int w = va_arg(va, int);
20012742:	f6c42783          	lw	a5,-148(s0)
20012746:	00478713          	addi	a4,a5,4
2001274a:	f6e42623          	sw	a4,-148(s0)
2001274e:	439c                	lw	a5,0(a5)
20012750:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:624
      if (w < 0) {
20012754:	fa842783          	lw	a5,-88(s0)
20012758:	0007df63          	bgez	a5,20012776 <_vsnprintf+0x1ca>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:625
        flags |= FLAGS_LEFT;    // reverse padding
2001275c:	fcc42783          	lw	a5,-52(s0)
20012760:	0027e793          	ori	a5,a5,2
20012764:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:626
        width = (unsigned int)-w;
20012768:	fa842783          	lw	a5,-88(s0)
2001276c:	40f007b3          	neg	a5,a5
20012770:	fcf42423          	sw	a5,-56(s0)
20012774:	a029                	j	2001277e <_vsnprintf+0x1d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:629
      }
      else {
        width = (unsigned int)w;
20012776:	fa842783          	lw	a5,-88(s0)
2001277a:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:631
      }
      format++;
2001277e:	f7042783          	lw	a5,-144(s0)
20012782:	0785                	addi	a5,a5,1
20012784:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:635
    }

    // evaluate precision field
    precision = 0U;
20012788:	fc042223          	sw	zero,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:636
    if (*format == '.') {
2001278c:	f7042783          	lw	a5,-144(s0)
20012790:	0007c703          	lbu	a4,0(a5)
20012794:	02e00793          	li	a5,46
20012798:	06f71b63          	bne	a4,a5,2001280e <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:637
      flags |= FLAGS_PRECISION;
2001279c:	fcc42783          	lw	a5,-52(s0)
200127a0:	4007e793          	ori	a5,a5,1024
200127a4:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:638
      format++;
200127a8:	f7042783          	lw	a5,-144(s0)
200127ac:	0785                	addi	a5,a5,1
200127ae:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:639
      if (_is_digit(*format)) {
200127b2:	f7042783          	lw	a5,-144(s0)
200127b6:	0007c783          	lbu	a5,0(a5)
200127ba:	853e                	mv	a0,a5
200127bc:	b83fe0ef          	jal	ra,2001133e <_is_digit>
200127c0:	87aa                	mv	a5,a0
200127c2:	cb89                	beqz	a5,200127d4 <_vsnprintf+0x228>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:640
        precision = _atoi(&format);
200127c4:	f7040793          	addi	a5,s0,-144
200127c8:	853e                	mv	a0,a5
200127ca:	badfe0ef          	jal	ra,20011376 <_atoi>
200127ce:	fca42223          	sw	a0,-60(s0)
200127d2:	a835                	j	2001280e <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:642
      }
      else if (*format == '*') {
200127d4:	f7042783          	lw	a5,-144(s0)
200127d8:	0007c703          	lbu	a4,0(a5)
200127dc:	02a00793          	li	a5,42
200127e0:	02f71763          	bne	a4,a5,2001280e <_vsnprintf+0x262>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:643
        const int prec = (int)va_arg(va, int);
200127e4:	f6c42783          	lw	a5,-148(s0)
200127e8:	00478713          	addi	a4,a5,4
200127ec:	f6e42623          	sw	a4,-148(s0)
200127f0:	439c                	lw	a5,0(a5)
200127f2:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:644
        precision = prec > 0 ? (unsigned int)prec : 0U;
200127f6:	fa442783          	lw	a5,-92(s0)
200127fa:	0007d363          	bgez	a5,20012800 <_vsnprintf+0x254>
200127fe:	4781                	li	a5,0
20012800:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:645
        format++;
20012804:	f7042783          	lw	a5,-144(s0)
20012808:	0785                	addi	a5,a5,1
2001280a:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:650
      }
    }

    // evaluate length field
    switch (*format) {
2001280e:	f7042783          	lw	a5,-144(s0)
20012812:	0007c783          	lbu	a5,0(a5)
20012816:	f9878793          	addi	a5,a5,-104
2001281a:	4749                	li	a4,18
2001281c:	0cf76d63          	bltu	a4,a5,200128f6 <_vsnprintf+0x34a>
20012820:	00279713          	slli	a4,a5,0x2
20012824:	2001a7b7          	lui	a5,0x2001a
20012828:	92c78793          	addi	a5,a5,-1748 # 2001992c <_exit+0x1fc>
2001282c:	97ba                	add	a5,a5,a4
2001282e:	439c                	lw	a5,0(a5)
20012830:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:652
      case 'l' :
        flags |= FLAGS_LONG;
20012832:	fcc42783          	lw	a5,-52(s0)
20012836:	1007e793          	ori	a5,a5,256
2001283a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:653
        format++;
2001283e:	f7042783          	lw	a5,-144(s0)
20012842:	0785                	addi	a5,a5,1
20012844:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:654
        if (*format == 'l') {
20012848:	f7042783          	lw	a5,-144(s0)
2001284c:	0007c703          	lbu	a4,0(a5)
20012850:	06c00793          	li	a5,108
20012854:	0af71363          	bne	a4,a5,200128fa <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:655
          flags |= FLAGS_LONG_LONG;
20012858:	fcc42783          	lw	a5,-52(s0)
2001285c:	2007e793          	ori	a5,a5,512
20012860:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:656
          format++;
20012864:	f7042783          	lw	a5,-144(s0)
20012868:	0785                	addi	a5,a5,1
2001286a:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:658
        }
        break;
2001286e:	a071                	j	200128fa <_vsnprintf+0x34e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:660
      case 'h' :
        flags |= FLAGS_SHORT;
20012870:	fcc42783          	lw	a5,-52(s0)
20012874:	0807e793          	ori	a5,a5,128
20012878:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:661
        format++;
2001287c:	f7042783          	lw	a5,-144(s0)
20012880:	0785                	addi	a5,a5,1
20012882:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:662
        if (*format == 'h') {
20012886:	f7042783          	lw	a5,-144(s0)
2001288a:	0007c703          	lbu	a4,0(a5)
2001288e:	06800793          	li	a5,104
20012892:	06f71663          	bne	a4,a5,200128fe <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:663
          flags |= FLAGS_CHAR;
20012896:	fcc42783          	lw	a5,-52(s0)
2001289a:	0407e793          	ori	a5,a5,64
2001289e:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:664
          format++;
200128a2:	f7042783          	lw	a5,-144(s0)
200128a6:	0785                	addi	a5,a5,1
200128a8:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:666
        }
        break;
200128ac:	a889                	j	200128fe <_vsnprintf+0x352>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:669
#if defined(PRINTF_SUPPORT_PTRDIFF_T)
      case 't' :
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
200128ae:	fcc42783          	lw	a5,-52(s0)
200128b2:	1007e793          	ori	a5,a5,256
200128b6:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:670
        format++;
200128ba:	f7042783          	lw	a5,-144(s0)
200128be:	0785                	addi	a5,a5,1
200128c0:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:671
        break;
200128c4:	a835                	j	20012900 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:674
#endif
      case 'j' :
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
200128c6:	fcc42783          	lw	a5,-52(s0)
200128ca:	2007e793          	ori	a5,a5,512
200128ce:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:675
        format++;
200128d2:	f7042783          	lw	a5,-144(s0)
200128d6:	0785                	addi	a5,a5,1
200128d8:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:676
        break;
200128dc:	a015                	j	20012900 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:678
      case 'z' :
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
200128de:	fcc42783          	lw	a5,-52(s0)
200128e2:	1007e793          	ori	a5,a5,256
200128e6:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:679
        format++;
200128ea:	f7042783          	lw	a5,-144(s0)
200128ee:	0785                	addi	a5,a5,1
200128f0:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:680
        break;
200128f4:	a031                	j	20012900 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:682
      default :
        break;
200128f6:	0001                	nop
200128f8:	a021                	j	20012900 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:658
        break;
200128fa:	0001                	nop
200128fc:	a011                	j	20012900 <_vsnprintf+0x354>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:666
        break;
200128fe:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:686
    }

    // evaluate specifier
    switch (*format) {
20012900:	f7042783          	lw	a5,-144(s0)
20012904:	0007c783          	lbu	a5,0(a5)
20012908:	fdb78793          	addi	a5,a5,-37
2001290c:	05300713          	li	a4,83
20012910:	78f76863          	bltu	a4,a5,200130a0 <_vsnprintf+0xaf4>
20012914:	00279713          	slli	a4,a5,0x2
20012918:	2001a7b7          	lui	a5,0x2001a
2001291c:	97878793          	addi	a5,a5,-1672 # 20019978 <_exit+0x248>
20012920:	97ba                	add	a5,a5,a4
20012922:	439c                	lw	a5,0(a5)
20012924:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:696
      case 'X' :
      case 'o' :
      case 'b' : {
        // set the base
        unsigned int base;
        if (*format == 'x' || *format == 'X') {
20012926:	f7042783          	lw	a5,-144(s0)
2001292a:	0007c703          	lbu	a4,0(a5)
2001292e:	07800793          	li	a5,120
20012932:	00f70a63          	beq	a4,a5,20012946 <_vsnprintf+0x39a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:696 (discriminator 1)
20012936:	f7042783          	lw	a5,-144(s0)
2001293a:	0007c703          	lbu	a4,0(a5)
2001293e:	05800793          	li	a5,88
20012942:	00f71663          	bne	a4,a5,2001294e <_vsnprintf+0x3a2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:697
          base = 16U;
20012946:	47c1                	li	a5,16
20012948:	faf42c23          	sw	a5,-72(s0)
2001294c:	a089                	j	2001298e <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:699
        }
        else if (*format == 'o') {
2001294e:	f7042783          	lw	a5,-144(s0)
20012952:	0007c703          	lbu	a4,0(a5)
20012956:	06f00793          	li	a5,111
2001295a:	00f71663          	bne	a4,a5,20012966 <_vsnprintf+0x3ba>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:700
          base =  8U;
2001295e:	47a1                	li	a5,8
20012960:	faf42c23          	sw	a5,-72(s0)
20012964:	a02d                	j	2001298e <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:702
        }
        else if (*format == 'b') {
20012966:	f7042783          	lw	a5,-144(s0)
2001296a:	0007c703          	lbu	a4,0(a5)
2001296e:	06200793          	li	a5,98
20012972:	00f71663          	bne	a4,a5,2001297e <_vsnprintf+0x3d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:703
          base =  2U;
20012976:	4789                	li	a5,2
20012978:	faf42c23          	sw	a5,-72(s0)
2001297c:	a809                	j	2001298e <_vsnprintf+0x3e2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:706
        }
        else {
          base = 10U;
2001297e:	47a9                	li	a5,10
20012980:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:707
          flags &= ~FLAGS_HASH;   // no hash for dec format
20012984:	fcc42783          	lw	a5,-52(s0)
20012988:	9bbd                	andi	a5,a5,-17
2001298a:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:710
        }
        // uppercase
        if (*format == 'X') {
2001298e:	f7042783          	lw	a5,-144(s0)
20012992:	0007c703          	lbu	a4,0(a5)
20012996:	05800793          	li	a5,88
2001299a:	00f71863          	bne	a4,a5,200129aa <_vsnprintf+0x3fe>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:711
          flags |= FLAGS_UPPERCASE;
2001299e:	fcc42783          	lw	a5,-52(s0)
200129a2:	0207e793          	ori	a5,a5,32
200129a6:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:715
        }

        // no plus or space flag for u, x, X, o, b
        if ((*format != 'i') && (*format != 'd')) {
200129aa:	f7042783          	lw	a5,-144(s0)
200129ae:	0007c703          	lbu	a4,0(a5)
200129b2:	06900793          	li	a5,105
200129b6:	00f70f63          	beq	a4,a5,200129d4 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:715 (discriminator 1)
200129ba:	f7042783          	lw	a5,-144(s0)
200129be:	0007c703          	lbu	a4,0(a5)
200129c2:	06400793          	li	a5,100
200129c6:	00f70763          	beq	a4,a5,200129d4 <_vsnprintf+0x428>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:716
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
200129ca:	fcc42783          	lw	a5,-52(s0)
200129ce:	9bcd                	andi	a5,a5,-13
200129d0:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:720
        }

        // ignore '0' flag when precision is given
        if (flags & FLAGS_PRECISION) {
200129d4:	fcc42783          	lw	a5,-52(s0)
200129d8:	4007f793          	andi	a5,a5,1024
200129dc:	c791                	beqz	a5,200129e8 <_vsnprintf+0x43c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:721
          flags &= ~FLAGS_ZEROPAD;
200129de:	fcc42783          	lw	a5,-52(s0)
200129e2:	9bf9                	andi	a5,a5,-2
200129e4:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:725
        }

        // convert the integer
        if ((*format == 'i') || (*format == 'd')) {
200129e8:	f7042783          	lw	a5,-144(s0)
200129ec:	0007c703          	lbu	a4,0(a5)
200129f0:	06900793          	li	a5,105
200129f4:	00f70a63          	beq	a4,a5,20012a08 <_vsnprintf+0x45c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:725 (discriminator 1)
200129f8:	f7042783          	lw	a5,-144(s0)
200129fc:	0007c703          	lbu	a4,0(a5)
20012a00:	06400793          	li	a5,100
20012a04:	1af71b63          	bne	a4,a5,20012bba <_vsnprintf+0x60e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727
          // signed
          if (flags & FLAGS_LONG_LONG) {
20012a08:	fcc42783          	lw	a5,-52(s0)
20012a0c:	2007f793          	andi	a5,a5,512
20012a10:	c3d5                	beqz	a5,20012ab4 <_vsnprintf+0x508>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:729
#if defined(PRINTF_SUPPORT_LONG_LONG)
            const long long value = va_arg(va, long long);
20012a12:	f6c42783          	lw	a5,-148(s0)
20012a16:	079d                	addi	a5,a5,7
20012a18:	9be1                	andi	a5,a5,-8
20012a1a:	00878713          	addi	a4,a5,8
20012a1e:	f6e42623          	sw	a4,-148(s0)
20012a22:	0047a803          	lw	a6,4(a5)
20012a26:	439c                	lw	a5,0(a5)
20012a28:	f8f42c23          	sw	a5,-104(s0)
20012a2c:	f9042e23          	sw	a6,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:730
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20012a30:	f9c42783          	lw	a5,-100(s0)
20012a34:	41f7d913          	srai	s2,a5,0x1f
20012a38:	f9c42783          	lw	a5,-100(s0)
20012a3c:	41f7d993          	srai	s3,a5,0x1f
20012a40:	f9842783          	lw	a5,-104(s0)
20012a44:	0127ca33          	xor	s4,a5,s2
20012a48:	f9c42783          	lw	a5,-100(s0)
20012a4c:	0137cab3          	xor	s5,a5,s3
20012a50:	412a07b3          	sub	a5,s4,s2
20012a54:	873e                	mv	a4,a5
20012a56:	00ea3733          	sltu	a4,s4,a4
20012a5a:	413a8833          	sub	a6,s5,s3
20012a5e:	40e80733          	sub	a4,a6,a4
20012a62:	883a                	mv	a6,a4
20012a64:	8a3e                	mv	s4,a5
20012a66:	8ac2                	mv	s5,a6
20012a68:	8652                	mv	a2,s4
20012a6a:	86d6                	mv	a3,s5
20012a6c:	f9c42783          	lw	a5,-100(s0)
20012a70:	83fd                	srli	a5,a5,0x1f
20012a72:	0ff7f713          	andi	a4,a5,255
20012a76:	fb842783          	lw	a5,-72(s0)
20012a7a:	8b3e                	mv	s6,a5
20012a7c:	4b81                	li	s7,0
20012a7e:	fcc42783          	lw	a5,-52(s0)
20012a82:	c63e                	sw	a5,12(sp)
20012a84:	fc842783          	lw	a5,-56(s0)
20012a88:	c43e                	sw	a5,8(sp)
20012a8a:	fc442783          	lw	a5,-60(s0)
20012a8e:	c23e                	sw	a5,4(sp)
20012a90:	c05e                	sw	s7,0(sp)
20012a92:	88da                	mv	a7,s6
20012a94:	883a                	mv	a6,a4
20012a96:	8732                	mv	a4,a2
20012a98:	87b6                	mv	a5,a3
20012a9a:	f7442683          	lw	a3,-140(s0)
20012a9e:	fbc42603          	lw	a2,-68(s0)
20012aa2:	f7842583          	lw	a1,-136(s0)
20012aa6:	f7c42503          	lw	a0,-132(s0)
20012aaa:	d95fe0ef          	jal	ra,2001183e <_ntoa_long_long>
20012aae:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20012ab2:	a425                	j	20012cda <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:733
#endif
          }
          else if (flags & FLAGS_LONG) {
20012ab4:	fcc42783          	lw	a5,-52(s0)
20012ab8:	1007f793          	andi	a5,a5,256
20012abc:	c3ad                	beqz	a5,20012b1e <_vsnprintf+0x572>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:734
            const long value = va_arg(va, long);
20012abe:	f6c42783          	lw	a5,-148(s0)
20012ac2:	00478713          	addi	a4,a5,4
20012ac6:	f6e42623          	sw	a4,-148(s0)
20012aca:	439c                	lw	a5,0(a5)
20012acc:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:735
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20012ad0:	f9442783          	lw	a5,-108(s0)
20012ad4:	41f7d713          	srai	a4,a5,0x1f
20012ad8:	f9442783          	lw	a5,-108(s0)
20012adc:	8fb9                	xor	a5,a5,a4
20012ade:	8f99                	sub	a5,a5,a4
20012ae0:	86be                	mv	a3,a5
20012ae2:	f9442783          	lw	a5,-108(s0)
20012ae6:	83fd                	srli	a5,a5,0x1f
20012ae8:	0ff7f713          	andi	a4,a5,255
20012aec:	fcc42783          	lw	a5,-52(s0)
20012af0:	c23e                	sw	a5,4(sp)
20012af2:	fc842783          	lw	a5,-56(s0)
20012af6:	c03e                	sw	a5,0(sp)
20012af8:	fc442883          	lw	a7,-60(s0)
20012afc:	fb842803          	lw	a6,-72(s0)
20012b00:	87ba                	mv	a5,a4
20012b02:	8736                	mv	a4,a3
20012b04:	f7442683          	lw	a3,-140(s0)
20012b08:	fbc42603          	lw	a2,-68(s0)
20012b0c:	f7842583          	lw	a1,-136(s0)
20012b10:	f7c42503          	lw	a0,-132(s0)
20012b14:	c27fe0ef          	jal	ra,2001173a <_ntoa_long>
20012b18:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727
          if (flags & FLAGS_LONG_LONG) {
20012b1c:	aa7d                	j	20012cda <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738
          }
          else {
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
20012b1e:	fcc42783          	lw	a5,-52(s0)
20012b22:	0407f793          	andi	a5,a5,64
20012b26:	cb99                	beqz	a5,20012b3c <_vsnprintf+0x590>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 1)
20012b28:	f6c42783          	lw	a5,-148(s0)
20012b2c:	00478713          	addi	a4,a5,4
20012b30:	f6e42623          	sw	a4,-148(s0)
20012b34:	439c                	lw	a5,0(a5)
20012b36:	0ff7f793          	andi	a5,a5,255
20012b3a:	a03d                	j	20012b68 <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 2)
20012b3c:	fcc42783          	lw	a5,-52(s0)
20012b40:	0807f793          	andi	a5,a5,128
20012b44:	cb99                	beqz	a5,20012b5a <_vsnprintf+0x5ae>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 4)
20012b46:	f6c42783          	lw	a5,-148(s0)
20012b4a:	00478713          	addi	a4,a5,4
20012b4e:	f6e42623          	sw	a4,-148(s0)
20012b52:	439c                	lw	a5,0(a5)
20012b54:	07c2                	slli	a5,a5,0x10
20012b56:	87c1                	srai	a5,a5,0x10
20012b58:	a801                	j	20012b68 <_vsnprintf+0x5bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 5)
20012b5a:	f6c42783          	lw	a5,-148(s0)
20012b5e:	00478713          	addi	a4,a5,4
20012b62:	f6e42623          	sw	a4,-148(s0)
20012b66:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:738 (discriminator 8)
20012b68:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:739 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
20012b6c:	f9042783          	lw	a5,-112(s0)
20012b70:	41f7d713          	srai	a4,a5,0x1f
20012b74:	f9042783          	lw	a5,-112(s0)
20012b78:	8fb9                	xor	a5,a5,a4
20012b7a:	8f99                	sub	a5,a5,a4
20012b7c:	86be                	mv	a3,a5
20012b7e:	f9042783          	lw	a5,-112(s0)
20012b82:	83fd                	srli	a5,a5,0x1f
20012b84:	0ff7f713          	andi	a4,a5,255
20012b88:	fcc42783          	lw	a5,-52(s0)
20012b8c:	c23e                	sw	a5,4(sp)
20012b8e:	fc842783          	lw	a5,-56(s0)
20012b92:	c03e                	sw	a5,0(sp)
20012b94:	fc442883          	lw	a7,-60(s0)
20012b98:	fb842803          	lw	a6,-72(s0)
20012b9c:	87ba                	mv	a5,a4
20012b9e:	8736                	mv	a4,a3
20012ba0:	f7442683          	lw	a3,-140(s0)
20012ba4:	fbc42603          	lw	a2,-68(s0)
20012ba8:	f7842583          	lw	a1,-136(s0)
20012bac:	f7c42503          	lw	a0,-132(s0)
20012bb0:	b8bfe0ef          	jal	ra,2001173a <_ntoa_long>
20012bb4:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:727 (discriminator 8)
          if (flags & FLAGS_LONG_LONG) {
20012bb8:	a20d                	j	20012cda <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:744
          }
        }
        else {
          // unsigned
          if (flags & FLAGS_LONG_LONG) {
20012bba:	fcc42783          	lw	a5,-52(s0)
20012bbe:	2007f793          	andi	a5,a5,512
20012bc2:	cba1                	beqz	a5,20012c12 <_vsnprintf+0x666>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:746
#if defined(PRINTF_SUPPORT_LONG_LONG)
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
20012bc4:	f6c42783          	lw	a5,-148(s0)
20012bc8:	079d                	addi	a5,a5,7
20012bca:	9be1                	andi	a5,a5,-8
20012bcc:	00878713          	addi	a4,a5,8
20012bd0:	f6e42623          	sw	a4,-148(s0)
20012bd4:	4398                	lw	a4,0(a5)
20012bd6:	43dc                	lw	a5,4(a5)
20012bd8:	fb842683          	lw	a3,-72(s0)
20012bdc:	8c36                	mv	s8,a3
20012bde:	4c81                	li	s9,0
20012be0:	fcc42683          	lw	a3,-52(s0)
20012be4:	c636                	sw	a3,12(sp)
20012be6:	fc842683          	lw	a3,-56(s0)
20012bea:	c436                	sw	a3,8(sp)
20012bec:	fc442683          	lw	a3,-60(s0)
20012bf0:	c236                	sw	a3,4(sp)
20012bf2:	c066                	sw	s9,0(sp)
20012bf4:	88e2                	mv	a7,s8
20012bf6:	4801                	li	a6,0
20012bf8:	f7442683          	lw	a3,-140(s0)
20012bfc:	fbc42603          	lw	a2,-68(s0)
20012c00:	f7842583          	lw	a1,-136(s0)
20012c04:	f7c42503          	lw	a0,-132(s0)
20012c08:	c37fe0ef          	jal	ra,2001183e <_ntoa_long_long>
20012c0c:	faa42e23          	sw	a0,-68(s0)
20012c10:	a0e9                	j	20012cda <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:749
#endif
          }
          else if (flags & FLAGS_LONG) {
20012c12:	fcc42783          	lw	a5,-52(s0)
20012c16:	1007f793          	andi	a5,a5,256
20012c1a:	c3a1                	beqz	a5,20012c5a <_vsnprintf+0x6ae>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:750
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
20012c1c:	f6c42783          	lw	a5,-148(s0)
20012c20:	00478713          	addi	a4,a5,4
20012c24:	f6e42623          	sw	a4,-148(s0)
20012c28:	4398                	lw	a4,0(a5)
20012c2a:	fcc42783          	lw	a5,-52(s0)
20012c2e:	c23e                	sw	a5,4(sp)
20012c30:	fc842783          	lw	a5,-56(s0)
20012c34:	c03e                	sw	a5,0(sp)
20012c36:	fc442883          	lw	a7,-60(s0)
20012c3a:	fb842803          	lw	a6,-72(s0)
20012c3e:	4781                	li	a5,0
20012c40:	f7442683          	lw	a3,-140(s0)
20012c44:	fbc42603          	lw	a2,-68(s0)
20012c48:	f7842583          	lw	a1,-136(s0)
20012c4c:	f7c42503          	lw	a0,-132(s0)
20012c50:	aebfe0ef          	jal	ra,2001173a <_ntoa_long>
20012c54:	faa42e23          	sw	a0,-68(s0)
20012c58:	a049                	j	20012cda <_vsnprintf+0x72e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753
          }
          else {
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
20012c5a:	fcc42783          	lw	a5,-52(s0)
20012c5e:	0407f793          	andi	a5,a5,64
20012c62:	cb99                	beqz	a5,20012c78 <_vsnprintf+0x6cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 1)
20012c64:	f6c42783          	lw	a5,-148(s0)
20012c68:	00478713          	addi	a4,a5,4
20012c6c:	f6e42623          	sw	a4,-148(s0)
20012c70:	439c                	lw	a5,0(a5)
20012c72:	0ff7f793          	andi	a5,a5,255
20012c76:	a03d                	j	20012ca4 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 2)
20012c78:	fcc42783          	lw	a5,-52(s0)
20012c7c:	0807f793          	andi	a5,a5,128
20012c80:	cb99                	beqz	a5,20012c96 <_vsnprintf+0x6ea>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 4)
20012c82:	f6c42783          	lw	a5,-148(s0)
20012c86:	00478713          	addi	a4,a5,4
20012c8a:	f6e42623          	sw	a4,-148(s0)
20012c8e:	439c                	lw	a5,0(a5)
20012c90:	07c2                	slli	a5,a5,0x10
20012c92:	83c1                	srli	a5,a5,0x10
20012c94:	a801                	j	20012ca4 <_vsnprintf+0x6f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 5)
20012c96:	f6c42783          	lw	a5,-148(s0)
20012c9a:	00478713          	addi	a4,a5,4
20012c9e:	f6e42623          	sw	a4,-148(s0)
20012ca2:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:753 (discriminator 8)
20012ca4:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:754 (discriminator 8)
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
20012ca8:	fcc42783          	lw	a5,-52(s0)
20012cac:	c23e                	sw	a5,4(sp)
20012cae:	fc842783          	lw	a5,-56(s0)
20012cb2:	c03e                	sw	a5,0(sp)
20012cb4:	fc442883          	lw	a7,-60(s0)
20012cb8:	fb842803          	lw	a6,-72(s0)
20012cbc:	4781                	li	a5,0
20012cbe:	fa042703          	lw	a4,-96(s0)
20012cc2:	f7442683          	lw	a3,-140(s0)
20012cc6:	fbc42603          	lw	a2,-68(s0)
20012cca:	f7842583          	lw	a1,-136(s0)
20012cce:	f7c42503          	lw	a0,-132(s0)
20012cd2:	a69fe0ef          	jal	ra,2001173a <_ntoa_long>
20012cd6:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:757
          }
        }
        format++;
20012cda:	f7042783          	lw	a5,-144(s0)
20012cde:	0785                	addi	a5,a5,1
20012ce0:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:758
        break;
20012ce4:	a6f5                	j	200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:763
      }
#if defined(PRINTF_SUPPORT_FLOAT)
      case 'f' :
      case 'F' :
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
20012ce6:	f7042783          	lw	a5,-144(s0)
20012cea:	0007c703          	lbu	a4,0(a5)
20012cee:	04600793          	li	a5,70
20012cf2:	00f71863          	bne	a4,a5,20012d02 <_vsnprintf+0x756>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:763 (discriminator 1)
20012cf6:	fcc42783          	lw	a5,-52(s0)
20012cfa:	0207e793          	ori	a5,a5,32
20012cfe:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:764
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20012d02:	f6c42783          	lw	a5,-148(s0)
20012d06:	079d                	addi	a5,a5,7
20012d08:	9be1                	andi	a5,a5,-8
20012d0a:	00878713          	addi	a4,a5,8
20012d0e:	f6e42623          	sw	a4,-148(s0)
20012d12:	4398                	lw	a4,0(a5)
20012d14:	43dc                	lw	a5,4(a5)
20012d16:	fcc42683          	lw	a3,-52(s0)
20012d1a:	c036                	sw	a3,0(sp)
20012d1c:	fc842883          	lw	a7,-56(s0)
20012d20:	fc442803          	lw	a6,-60(s0)
20012d24:	f7442683          	lw	a3,-140(s0)
20012d28:	fbc42603          	lw	a2,-68(s0)
20012d2c:	f7842583          	lw	a1,-136(s0)
20012d30:	f7c42503          	lw	a0,-132(s0)
20012d34:	c39fe0ef          	jal	ra,2001196c <_ftoa>
20012d38:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:765
        format++;
20012d3c:	f7042783          	lw	a5,-144(s0)
20012d40:	0785                	addi	a5,a5,1
20012d42:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:766
        break;
20012d46:	a669                	j	200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:772
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
      case 'e':
      case 'E':
      case 'g':
      case 'G':
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
20012d48:	f7042783          	lw	a5,-144(s0)
20012d4c:	0007c703          	lbu	a4,0(a5)
20012d50:	06700793          	li	a5,103
20012d54:	00f70a63          	beq	a4,a5,20012d68 <_vsnprintf+0x7bc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:772 (discriminator 2)
20012d58:	f7042783          	lw	a5,-144(s0)
20012d5c:	0007c703          	lbu	a4,0(a5)
20012d60:	04700793          	li	a5,71
20012d64:	00f71a63          	bne	a4,a5,20012d78 <_vsnprintf+0x7cc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:772 (discriminator 3)
20012d68:	fcc42703          	lw	a4,-52(s0)
20012d6c:	6785                	lui	a5,0x1
20012d6e:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20012d72:	8fd9                	or	a5,a5,a4
20012d74:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:773
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
20012d78:	f7042783          	lw	a5,-144(s0)
20012d7c:	0007c703          	lbu	a4,0(a5)
20012d80:	04500793          	li	a5,69
20012d84:	00f70a63          	beq	a4,a5,20012d98 <_vsnprintf+0x7ec>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:773 (discriminator 2)
20012d88:	f7042783          	lw	a5,-144(s0)
20012d8c:	0007c703          	lbu	a4,0(a5)
20012d90:	04700793          	li	a5,71
20012d94:	00f71863          	bne	a4,a5,20012da4 <_vsnprintf+0x7f8>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:773 (discriminator 3)
20012d98:	fcc42783          	lw	a5,-52(s0)
20012d9c:	0207e793          	ori	a5,a5,32
20012da0:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:774
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
20012da4:	f6c42783          	lw	a5,-148(s0)
20012da8:	079d                	addi	a5,a5,7
20012daa:	9be1                	andi	a5,a5,-8
20012dac:	00878713          	addi	a4,a5,8
20012db0:	f6e42623          	sw	a4,-148(s0)
20012db4:	4398                	lw	a4,0(a5)
20012db6:	43dc                	lw	a5,4(a5)
20012db8:	fcc42683          	lw	a3,-52(s0)
20012dbc:	c036                	sw	a3,0(sp)
20012dbe:	fc842883          	lw	a7,-56(s0)
20012dc2:	fc442803          	lw	a6,-60(s0)
20012dc6:	f7442683          	lw	a3,-140(s0)
20012dca:	fbc42603          	lw	a2,-68(s0)
20012dce:	f7842583          	lw	a1,-136(s0)
20012dd2:	f7c42503          	lw	a0,-132(s0)
20012dd6:	968ff0ef          	jal	ra,20011f3e <_etoa>
20012dda:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:775
        format++;
20012dde:	f7042783          	lw	a5,-144(s0)
20012de2:	0785                	addi	a5,a5,1
20012de4:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:776
        break;
20012de8:	a4e5                	j	200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:780
#endif  // PRINTF_SUPPORT_EXPONENTIAL
#endif  // PRINTF_SUPPORT_FLOAT
      case 'c' : {
        unsigned int l = 1U;
20012dea:	4785                	li	a5,1
20012dec:	faf42a23          	sw	a5,-76(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:782
        // pre padding
        if (!(flags & FLAGS_LEFT)) {
20012df0:	fcc42783          	lw	a5,-52(s0)
20012df4:	8b89                	andi	a5,a5,2
20012df6:	ef85                	bnez	a5,20012e2e <_vsnprintf+0x882>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:783
          while (l++ < width) {
20012df8:	a00d                	j	20012e1a <_vsnprintf+0x86e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:784
            out(' ', buffer, idx++, maxlen);
20012dfa:	fbc42783          	lw	a5,-68(s0)
20012dfe:	00178713          	addi	a4,a5,1
20012e02:	fae42e23          	sw	a4,-68(s0)
20012e06:	f7c42703          	lw	a4,-132(s0)
20012e0a:	f7442683          	lw	a3,-140(s0)
20012e0e:	863e                	mv	a2,a5
20012e10:	f7842583          	lw	a1,-136(s0)
20012e14:	02000513          	li	a0,32
20012e18:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:783
          while (l++ < width) {
20012e1a:	fb442783          	lw	a5,-76(s0)
20012e1e:	00178713          	addi	a4,a5,1
20012e22:	fae42a23          	sw	a4,-76(s0)
20012e26:	fc842703          	lw	a4,-56(s0)
20012e2a:	fce7e8e3          	bltu	a5,a4,20012dfa <_vsnprintf+0x84e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:788
          }
        }
        // char output
        out((char)va_arg(va, int), buffer, idx++, maxlen);
20012e2e:	f6c42783          	lw	a5,-148(s0)
20012e32:	00478713          	addi	a4,a5,4
20012e36:	f6e42623          	sw	a4,-148(s0)
20012e3a:	439c                	lw	a5,0(a5)
20012e3c:	0ff7f513          	andi	a0,a5,255
20012e40:	fbc42783          	lw	a5,-68(s0)
20012e44:	00178713          	addi	a4,a5,1
20012e48:	fae42e23          	sw	a4,-68(s0)
20012e4c:	f7c42703          	lw	a4,-132(s0)
20012e50:	f7442683          	lw	a3,-140(s0)
20012e54:	863e                	mv	a2,a5
20012e56:	f7842583          	lw	a1,-136(s0)
20012e5a:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:790
        // post padding
        if (flags & FLAGS_LEFT) {
20012e5c:	fcc42783          	lw	a5,-52(s0)
20012e60:	8b89                	andi	a5,a5,2
20012e62:	cf85                	beqz	a5,20012e9a <_vsnprintf+0x8ee>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:791
          while (l++ < width) {
20012e64:	a00d                	j	20012e86 <_vsnprintf+0x8da>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:792
            out(' ', buffer, idx++, maxlen);
20012e66:	fbc42783          	lw	a5,-68(s0)
20012e6a:	00178713          	addi	a4,a5,1
20012e6e:	fae42e23          	sw	a4,-68(s0)
20012e72:	f7c42703          	lw	a4,-132(s0)
20012e76:	f7442683          	lw	a3,-140(s0)
20012e7a:	863e                	mv	a2,a5
20012e7c:	f7842583          	lw	a1,-136(s0)
20012e80:	02000513          	li	a0,32
20012e84:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:791
          while (l++ < width) {
20012e86:	fb442783          	lw	a5,-76(s0)
20012e8a:	00178713          	addi	a4,a5,1
20012e8e:	fae42a23          	sw	a4,-76(s0)
20012e92:	fc842703          	lw	a4,-56(s0)
20012e96:	fce7e8e3          	bltu	a5,a4,20012e66 <_vsnprintf+0x8ba>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:795
          }
        }
        format++;
20012e9a:	f7042783          	lw	a5,-144(s0)
20012e9e:	0785                	addi	a5,a5,1
20012ea0:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:796
        break;
20012ea4:	a435                	j	200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:800
      }

      case 's' : {
        const char* p = va_arg(va, char*);
20012ea6:	f6c42783          	lw	a5,-148(s0)
20012eaa:	00478713          	addi	a4,a5,4
20012eae:	f6e42623          	sw	a4,-148(s0)
20012eb2:	439c                	lw	a5,0(a5)
20012eb4:	faf42823          	sw	a5,-80(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
20012eb8:	fc442783          	lw	a5,-60(s0)
20012ebc:	c781                	beqz	a5,20012ec4 <_vsnprintf+0x918>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801 (discriminator 1)
20012ebe:	fc442783          	lw	a5,-60(s0)
20012ec2:	a011                	j	20012ec6 <_vsnprintf+0x91a>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801 (discriminator 2)
20012ec4:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:801 (discriminator 4)
20012ec6:	85be                	mv	a1,a5
20012ec8:	fb042503          	lw	a0,-80(s0)
20012ecc:	c24fe0ef          	jal	ra,200112f0 <_strnlen_s>
20012ed0:	faa42623          	sw	a0,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:803 (discriminator 4)
        // pre padding
        if (flags & FLAGS_PRECISION) {
20012ed4:	fcc42783          	lw	a5,-52(s0)
20012ed8:	4007f793          	andi	a5,a5,1024
20012edc:	cb91                	beqz	a5,20012ef0 <_vsnprintf+0x944>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:804
          l = (l < precision ? l : precision);
20012ede:	fac42703          	lw	a4,-84(s0)
20012ee2:	fc442783          	lw	a5,-60(s0)
20012ee6:	00f77363          	bgeu	a4,a5,20012eec <_vsnprintf+0x940>
20012eea:	87ba                	mv	a5,a4
20012eec:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:806
        }
        if (!(flags & FLAGS_LEFT)) {
20012ef0:	fcc42783          	lw	a5,-52(s0)
20012ef4:	8b89                	andi	a5,a5,2
20012ef6:	e3bd                	bnez	a5,20012f5c <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:807
          while (l++ < width) {
20012ef8:	a00d                	j	20012f1a <_vsnprintf+0x96e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:808
            out(' ', buffer, idx++, maxlen);
20012efa:	fbc42783          	lw	a5,-68(s0)
20012efe:	00178713          	addi	a4,a5,1
20012f02:	fae42e23          	sw	a4,-68(s0)
20012f06:	f7c42703          	lw	a4,-132(s0)
20012f0a:	f7442683          	lw	a3,-140(s0)
20012f0e:	863e                	mv	a2,a5
20012f10:	f7842583          	lw	a1,-136(s0)
20012f14:	02000513          	li	a0,32
20012f18:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:807
          while (l++ < width) {
20012f1a:	fac42783          	lw	a5,-84(s0)
20012f1e:	00178713          	addi	a4,a5,1
20012f22:	fae42623          	sw	a4,-84(s0)
20012f26:	fc842703          	lw	a4,-56(s0)
20012f2a:	fce7e8e3          	bltu	a5,a4,20012efa <_vsnprintf+0x94e>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20012f2e:	a03d                	j	20012f5c <_vsnprintf+0x9b0>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:813
          out(*(p++), buffer, idx++, maxlen);
20012f30:	fb042783          	lw	a5,-80(s0)
20012f34:	00178713          	addi	a4,a5,1
20012f38:	fae42823          	sw	a4,-80(s0)
20012f3c:	0007c503          	lbu	a0,0(a5)
20012f40:	fbc42783          	lw	a5,-68(s0)
20012f44:	00178713          	addi	a4,a5,1
20012f48:	fae42e23          	sw	a4,-68(s0)
20012f4c:	f7c42703          	lw	a4,-132(s0)
20012f50:	f7442683          	lw	a3,-140(s0)
20012f54:	863e                	mv	a2,a5
20012f56:	f7842583          	lw	a1,-136(s0)
20012f5a:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
20012f5c:	fb042783          	lw	a5,-80(s0)
20012f60:	0007c783          	lbu	a5,0(a5)
20012f64:	cf89                	beqz	a5,20012f7e <_vsnprintf+0x9d2>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812 (discriminator 1)
20012f66:	fcc42783          	lw	a5,-52(s0)
20012f6a:	4007f793          	andi	a5,a5,1024
20012f6e:	d3e9                	beqz	a5,20012f30 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:812 (discriminator 2)
20012f70:	fc442783          	lw	a5,-60(s0)
20012f74:	fff78713          	addi	a4,a5,-1
20012f78:	fce42223          	sw	a4,-60(s0)
20012f7c:	fbd5                	bnez	a5,20012f30 <_vsnprintf+0x984>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:816
        }
        // post padding
        if (flags & FLAGS_LEFT) {
20012f7e:	fcc42783          	lw	a5,-52(s0)
20012f82:	8b89                	andi	a5,a5,2
20012f84:	cf85                	beqz	a5,20012fbc <_vsnprintf+0xa10>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:817
          while (l++ < width) {
20012f86:	a00d                	j	20012fa8 <_vsnprintf+0x9fc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:818
            out(' ', buffer, idx++, maxlen);
20012f88:	fbc42783          	lw	a5,-68(s0)
20012f8c:	00178713          	addi	a4,a5,1
20012f90:	fae42e23          	sw	a4,-68(s0)
20012f94:	f7c42703          	lw	a4,-132(s0)
20012f98:	f7442683          	lw	a3,-140(s0)
20012f9c:	863e                	mv	a2,a5
20012f9e:	f7842583          	lw	a1,-136(s0)
20012fa2:	02000513          	li	a0,32
20012fa6:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:817
          while (l++ < width) {
20012fa8:	fac42783          	lw	a5,-84(s0)
20012fac:	00178713          	addi	a4,a5,1
20012fb0:	fae42623          	sw	a4,-84(s0)
20012fb4:	fc842703          	lw	a4,-56(s0)
20012fb8:	fce7e8e3          	bltu	a5,a4,20012f88 <_vsnprintf+0x9dc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:821
          }
        }
        format++;
20012fbc:	f7042783          	lw	a5,-144(s0)
20012fc0:	0785                	addi	a5,a5,1
20012fc2:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:822
        break;
20012fc6:	a229                	j	200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:826
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
20012fc8:	47a1                	li	a5,8
20012fca:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:827
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
20012fce:	fcc42783          	lw	a5,-52(s0)
20012fd2:	0217e793          	ori	a5,a5,33
20012fd6:	fcf42623          	sw	a5,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:829
#if defined(PRINTF_SUPPORT_LONG_LONG)
        const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
20012fda:	f80407a3          	sb	zero,-113(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:830
        if (is_ll) {
20012fde:	f8f44783          	lbu	a5,-113(s0)
20012fe2:	c7a9                	beqz	a5,2001302c <_vsnprintf+0xa80>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:831
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
20012fe4:	f6c42783          	lw	a5,-148(s0)
20012fe8:	00478713          	addi	a4,a5,4
20012fec:	f6e42623          	sw	a4,-148(s0)
20012ff0:	439c                	lw	a5,0(a5)
20012ff2:	8d3e                	mv	s10,a5
20012ff4:	4d81                	li	s11,0
20012ff6:	fcc42783          	lw	a5,-52(s0)
20012ffa:	c63e                	sw	a5,12(sp)
20012ffc:	fc842783          	lw	a5,-56(s0)
20013000:	c43e                	sw	a5,8(sp)
20013002:	fc442783          	lw	a5,-60(s0)
20013006:	c23e                	sw	a5,4(sp)
20013008:	c002                	sw	zero,0(sp)
2001300a:	48c1                	li	a7,16
2001300c:	4801                	li	a6,0
2001300e:	876a                	mv	a4,s10
20013010:	87ee                	mv	a5,s11
20013012:	f7442683          	lw	a3,-140(s0)
20013016:	fbc42603          	lw	a2,-68(s0)
2001301a:	f7842583          	lw	a1,-136(s0)
2001301e:	f7c42503          	lw	a0,-132(s0)
20013022:	81dfe0ef          	jal	ra,2001183e <_ntoa_long_long>
20013026:	faa42e23          	sw	a0,-68(s0)
2001302a:	a83d                	j	20013068 <_vsnprintf+0xabc>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:835
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
2001302c:	f6c42783          	lw	a5,-148(s0)
20013030:	00478713          	addi	a4,a5,4
20013034:	f6e42623          	sw	a4,-148(s0)
20013038:	439c                	lw	a5,0(a5)
2001303a:	873e                	mv	a4,a5
2001303c:	fcc42783          	lw	a5,-52(s0)
20013040:	c23e                	sw	a5,4(sp)
20013042:	fc842783          	lw	a5,-56(s0)
20013046:	c03e                	sw	a5,0(sp)
20013048:	fc442883          	lw	a7,-60(s0)
2001304c:	4841                	li	a6,16
2001304e:	4781                	li	a5,0
20013050:	f7442683          	lw	a3,-140(s0)
20013054:	fbc42603          	lw	a2,-68(s0)
20013058:	f7842583          	lw	a1,-136(s0)
2001305c:	f7c42503          	lw	a0,-132(s0)
20013060:	edafe0ef          	jal	ra,2001173a <_ntoa_long>
20013064:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:839
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
20013068:	f7042783          	lw	a5,-144(s0)
2001306c:	0785                	addi	a5,a5,1
2001306e:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:840
        break;
20013072:	a8b9                	j	200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:844
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
20013074:	fbc42783          	lw	a5,-68(s0)
20013078:	00178713          	addi	a4,a5,1
2001307c:	fae42e23          	sw	a4,-68(s0)
20013080:	f7c42703          	lw	a4,-132(s0)
20013084:	f7442683          	lw	a3,-140(s0)
20013088:	863e                	mv	a2,a5
2001308a:	f7842583          	lw	a1,-136(s0)
2001308e:	02500513          	li	a0,37
20013092:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:845
        format++;
20013094:	f7042783          	lw	a5,-144(s0)
20013098:	0785                	addi	a5,a5,1
2001309a:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:846
        break;
2001309e:	a80d                	j	200130d0 <_vsnprintf+0xb24>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:849

      default :
        out(*format, buffer, idx++, maxlen);
200130a0:	f7042783          	lw	a5,-144(s0)
200130a4:	0007c503          	lbu	a0,0(a5)
200130a8:	fbc42783          	lw	a5,-68(s0)
200130ac:	00178713          	addi	a4,a5,1
200130b0:	fae42e23          	sw	a4,-68(s0)
200130b4:	f7c42703          	lw	a4,-132(s0)
200130b8:	f7442683          	lw	a3,-140(s0)
200130bc:	863e                	mv	a2,a5
200130be:	f7842583          	lw	a1,-136(s0)
200130c2:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:850
        format++;
200130c4:	f7042783          	lw	a5,-144(s0)
200130c8:	0785                	addi	a5,a5,1
200130ca:	f6f42823          	sw	a5,-144(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:851
        break;
200130ce:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:590
  while (*format)
200130d0:	f7042783          	lw	a5,-144(s0)
200130d4:	0007c783          	lbu	a5,0(a5)
200130d8:	d2079063          	bnez	a5,200125f8 <_vsnprintf+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
200130dc:	fbc42703          	lw	a4,-68(s0)
200130e0:	f7442783          	lw	a5,-140(s0)
200130e4:	00f76663          	bltu	a4,a5,200130f0 <_vsnprintf+0xb44>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856 (discriminator 1)
200130e8:	f7442783          	lw	a5,-140(s0)
200130ec:	17fd                	addi	a5,a5,-1
200130ee:	a019                	j	200130f4 <_vsnprintf+0xb48>
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856 (discriminator 2)
200130f0:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:856 (discriminator 4)
200130f4:	f7c42703          	lw	a4,-132(s0)
200130f8:	f7442683          	lw	a3,-140(s0)
200130fc:	863e                	mv	a2,a5
200130fe:	f7842583          	lw	a1,-136(s0)
20013102:	4501                	li	a0,0
20013104:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:859 (discriminator 4)

  // return written chars without terminating \0
  return (int)idx;
20013106:	fbc42783          	lw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:860 (discriminator 4)
}
2001310a:	853e                	mv	a0,a5
2001310c:	50ba                	lw	ra,172(sp)
2001310e:	542a                	lw	s0,168(sp)
20013110:	591a                	lw	s2,164(sp)
20013112:	598a                	lw	s3,160(sp)
20013114:	4a7a                	lw	s4,156(sp)
20013116:	4aea                	lw	s5,152(sp)
20013118:	4b5a                	lw	s6,148(sp)
2001311a:	4bca                	lw	s7,144(sp)
2001311c:	4c3a                	lw	s8,140(sp)
2001311e:	4caa                	lw	s9,136(sp)
20013120:	4d1a                	lw	s10,132(sp)
20013122:	4d8a                	lw	s11,128(sp)
20013124:	614d                	addi	sp,sp,176
20013126:	8082                	ret

20013128 <printf_>:
printf_():
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:866


///////////////////////////////////////////////////////////////////////////////

int printf_(const char* format, ...)
{
20013128:	715d                	addi	sp,sp,-80
2001312a:	d606                	sw	ra,44(sp)
2001312c:	d422                	sw	s0,40(sp)
2001312e:	1800                	addi	s0,sp,48
20013130:	fca42e23          	sw	a0,-36(s0)
20013134:	c04c                	sw	a1,4(s0)
20013136:	c410                	sw	a2,8(s0)
20013138:	c454                	sw	a3,12(s0)
2001313a:	c818                	sw	a4,16(s0)
2001313c:	c85c                	sw	a5,20(s0)
2001313e:	01042c23          	sw	a6,24(s0)
20013142:	01142e23          	sw	a7,28(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:868
  va_list va;
  va_start(va, format);
20013146:	02040793          	addi	a5,s0,32
2001314a:	1791                	addi	a5,a5,-28
2001314c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:870
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
20013150:	fe842703          	lw	a4,-24(s0)
20013154:	fe440793          	addi	a5,s0,-28
20013158:	fdc42683          	lw	a3,-36(s0)
2001315c:	567d                	li	a2,-1
2001315e:	85be                	mv	a1,a5
20013160:	200117b7          	lui	a5,0x20011
20013164:	2be78513          	addi	a0,a5,702 # 200112be <_out_char>
20013168:	c44ff0ef          	jal	ra,200125ac <_vsnprintf>
2001316c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:872
  va_end(va);
  return ret;
20013170:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/software/E300Ascon/printf.c:873
}
20013174:	853e                	mv	a0,a5
20013176:	50b2                	lw	ra,44(sp)
20013178:	5422                	lw	s0,40(sp)
2001317a:	6161                	addi	sp,sp,80
2001317c:	8082                	ret

2001317e <write>:
write():
2001317e:	5ffee797          	auipc	a5,0x5ffee
20013182:	94a78793          	addi	a5,a5,-1718 # 80000ac8 <_impure_ptr>
20013186:	86b2                	mv	a3,a2
20013188:	862e                	mv	a2,a1
2001318a:	85aa                	mv	a1,a0
2001318c:	4388                	lw	a0,0(a5)
2001318e:	a009                	j	20013190 <_write_r>

20013190 <_write_r>:
_write_r():
20013190:	1141                	addi	sp,sp,-16
20013192:	c422                	sw	s0,8(sp)
20013194:	842a                	mv	s0,a0
20013196:	852e                	mv	a0,a1
20013198:	85b2                	mv	a1,a2
2001319a:	8636                	mv	a2,a3
2001319c:	9601a023          	sw	zero,-1696(gp) # 80000c28 <errno>
200131a0:	c606                	sw	ra,12(sp)
200131a2:	78f010ef          	jal	ra,20015130 <_write>
200131a6:	57fd                	li	a5,-1
200131a8:	00f51763          	bne	a0,a5,200131b6 <_write_r+0x26>
200131ac:	96018793          	addi	a5,gp,-1696 # 80000c28 <errno>
200131b0:	439c                	lw	a5,0(a5)
200131b2:	c391                	beqz	a5,200131b6 <_write_r+0x26>
200131b4:	c01c                	sw	a5,0(s0)
200131b6:	40b2                	lw	ra,12(sp)
200131b8:	4422                	lw	s0,8(sp)
200131ba:	0141                	addi	sp,sp,16
200131bc:	8082                	ret

200131be <__udivdi3>:
__udivdi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
200131be:	87ae                	mv	a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
200131c0:	8832                	mv	a6,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
200131c2:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
200131c4:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
200131c6:	20069663          	bnez	a3,200133d2 <__udivdi3+0x214>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
200131ca:	00007897          	auipc	a7,0x7
200131ce:	9c688893          	addi	a7,a7,-1594 # 20019b90 <__clz_tab>
200131d2:	0ac5fe63          	bgeu	a1,a2,2001328e <__udivdi3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
200131d6:	6741                	lui	a4,0x10
200131d8:	0ae67463          	bgeu	a2,a4,20013280 <__udivdi3+0xc2>
200131dc:	0ff00713          	li	a4,255
200131e0:	00c73733          	sltu	a4,a4,a2
200131e4:	070e                	slli	a4,a4,0x3
200131e6:	00e656b3          	srl	a3,a2,a4
200131ea:	98b6                	add	a7,a7,a3
200131ec:	0008c683          	lbu	a3,0(a7)
200131f0:	9736                	add	a4,a4,a3
200131f2:	02000693          	li	a3,32
200131f6:	8e99                	sub	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
200131f8:	ca99                	beqz	a3,2001320e <__udivdi3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
200131fa:	00d797b3          	sll	a5,a5,a3
200131fe:	00e55733          	srl	a4,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20013202:	00d61833          	sll	a6,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20013206:	00f765b3          	or	a1,a4,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2001320a:	00d51333          	sll	t1,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
2001320e:	01085513          	srli	a0,a6,0x10
20013212:	02a5f733          	remu	a4,a1,a0
20013216:	01081613          	slli	a2,a6,0x10
2001321a:	8241                	srli	a2,a2,0x10
2001321c:	01035693          	srli	a3,t1,0x10
20013220:	02a5d5b3          	divu	a1,a1,a0
20013224:	0742                	slli	a4,a4,0x10
20013226:	8ed9                	or	a3,a3,a4
20013228:	02b607b3          	mul	a5,a2,a1
2001322c:	872e                	mv	a4,a1
2001322e:	00f6fc63          	bgeu	a3,a5,20013246 <__udivdi3+0x88>
20013232:	96c2                	add	a3,a3,a6
20013234:	fff58713          	addi	a4,a1,-1
20013238:	0106e763          	bltu	a3,a6,20013246 <__udivdi3+0x88>
2001323c:	00f6f563          	bgeu	a3,a5,20013246 <__udivdi3+0x88>
20013240:	ffe58713          	addi	a4,a1,-2
20013244:	96c2                	add	a3,a3,a6
20013246:	8e9d                	sub	a3,a3,a5
20013248:	02a6f7b3          	remu	a5,a3,a0
2001324c:	0342                	slli	t1,t1,0x10
2001324e:	01035313          	srli	t1,t1,0x10
20013252:	02a6d6b3          	divu	a3,a3,a0
20013256:	07c2                	slli	a5,a5,0x10
20013258:	0067e333          	or	t1,a5,t1
2001325c:	02d605b3          	mul	a1,a2,a3
20013260:	8536                	mv	a0,a3
20013262:	00b37b63          	bgeu	t1,a1,20013278 <__udivdi3+0xba>
20013266:	9342                	add	t1,t1,a6
20013268:	fff68513          	addi	a0,a3,-1
2001326c:	01036663          	bltu	t1,a6,20013278 <__udivdi3+0xba>
20013270:	00b37463          	bgeu	t1,a1,20013278 <__udivdi3+0xba>
20013274:	ffe68513          	addi	a0,a3,-2
20013278:	0742                	slli	a4,a4,0x10
2001327a:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
2001327c:	4581                	li	a1,0
2001327e:	a84d                	j	20013330 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20013280:	010006b7          	lui	a3,0x1000
20013284:	4741                	li	a4,16
20013286:	f6d660e3          	bltu	a2,a3,200131e6 <__udivdi3+0x28>
2001328a:	4761                	li	a4,24
2001328c:	bfa9                	j	200131e6 <__udivdi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
2001328e:	e601                	bnez	a2,20013296 <__udivdi3+0xd8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20013290:	4685                	li	a3,1
20013292:	02c6d833          	divu	a6,a3,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20013296:	66c1                	lui	a3,0x10
20013298:	08d87e63          	bgeu	a6,a3,20013334 <__udivdi3+0x176>
2001329c:	0ff00693          	li	a3,255
200132a0:	0106f363          	bgeu	a3,a6,200132a6 <__udivdi3+0xe8>
200132a4:	4721                	li	a4,8
200132a6:	00e856b3          	srl	a3,a6,a4
200132aa:	98b6                	add	a7,a7,a3
200132ac:	0008c683          	lbu	a3,0(a7)
200132b0:	96ba                	add	a3,a3,a4
200132b2:	02000713          	li	a4,32
200132b6:	8f15                	sub	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
200132b8:	e749                	bnez	a4,20013342 <__udivdi3+0x184>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
200132ba:	410787b3          	sub	a5,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
200132be:	4585                	li	a1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
200132c0:	01085613          	srli	a2,a6,0x10
200132c4:	01081893          	slli	a7,a6,0x10
200132c8:	0108d893          	srli	a7,a7,0x10
200132cc:	01035693          	srli	a3,t1,0x10
200132d0:	02c7f733          	remu	a4,a5,a2
200132d4:	02c7d7b3          	divu	a5,a5,a2
200132d8:	0742                	slli	a4,a4,0x10
200132da:	8ed9                	or	a3,a3,a4
200132dc:	02f88533          	mul	a0,a7,a5
200132e0:	873e                	mv	a4,a5
200132e2:	00a6fc63          	bgeu	a3,a0,200132fa <__udivdi3+0x13c>
200132e6:	96c2                	add	a3,a3,a6
200132e8:	fff78713          	addi	a4,a5,-1
200132ec:	0106e763          	bltu	a3,a6,200132fa <__udivdi3+0x13c>
200132f0:	00a6f563          	bgeu	a3,a0,200132fa <__udivdi3+0x13c>
200132f4:	ffe78713          	addi	a4,a5,-2
200132f8:	96c2                	add	a3,a3,a6
200132fa:	8e89                	sub	a3,a3,a0
200132fc:	02c6f7b3          	remu	a5,a3,a2
20013300:	0342                	slli	t1,t1,0x10
20013302:	01035313          	srli	t1,t1,0x10
20013306:	02c6d6b3          	divu	a3,a3,a2
2001330a:	07c2                	slli	a5,a5,0x10
2001330c:	0067e333          	or	t1,a5,t1
20013310:	02d888b3          	mul	a7,a7,a3
20013314:	8536                	mv	a0,a3
20013316:	01137b63          	bgeu	t1,a7,2001332c <__udivdi3+0x16e>
2001331a:	9342                	add	t1,t1,a6
2001331c:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
20013320:	01036663          	bltu	t1,a6,2001332c <__udivdi3+0x16e>
20013324:	01137463          	bgeu	t1,a7,2001332c <__udivdi3+0x16e>
20013328:	ffe68513          	addi	a0,a3,-2
2001332c:	0742                	slli	a4,a4,0x10
2001332e:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20013330:	853a                	mv	a0,a4
20013332:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20013334:	010006b7          	lui	a3,0x1000
20013338:	4741                	li	a4,16
2001333a:	f6d866e3          	bltu	a6,a3,200132a6 <__udivdi3+0xe8>
2001333e:	4761                	li	a4,24
20013340:	b79d                	j	200132a6 <__udivdi3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20013342:	00e81833          	sll	a6,a6,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20013346:	00d7d5b3          	srl	a1,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
2001334a:	00e51333          	sll	t1,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001334e:	00d556b3          	srl	a3,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20013352:	01085513          	srli	a0,a6,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20013356:	00e797b3          	sll	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001335a:	02a5f733          	remu	a4,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001335e:	00f6e8b3          	or	a7,a3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20013362:	01081793          	slli	a5,a6,0x10
20013366:	83c1                	srli	a5,a5,0x10
20013368:	0108d613          	srli	a2,a7,0x10
2001336c:	02a5d5b3          	divu	a1,a1,a0
20013370:	0742                	slli	a4,a4,0x10
20013372:	8f51                	or	a4,a4,a2
20013374:	02b786b3          	mul	a3,a5,a1
20013378:	862e                	mv	a2,a1
2001337a:	00d77c63          	bgeu	a4,a3,20013392 <__udivdi3+0x1d4>
2001337e:	9742                	add	a4,a4,a6
20013380:	fff58613          	addi	a2,a1,-1
20013384:	01076763          	bltu	a4,a6,20013392 <__udivdi3+0x1d4>
20013388:	00d77563          	bgeu	a4,a3,20013392 <__udivdi3+0x1d4>
2001338c:	ffe58613          	addi	a2,a1,-2
20013390:	9742                	add	a4,a4,a6
20013392:	40d706b3          	sub	a3,a4,a3
20013396:	02a6f733          	remu	a4,a3,a0
2001339a:	08c2                	slli	a7,a7,0x10
2001339c:	0108d893          	srli	a7,a7,0x10
200133a0:	02a6d6b3          	divu	a3,a3,a0
200133a4:	0742                	slli	a4,a4,0x10
200133a6:	02d785b3          	mul	a1,a5,a3
200133aa:	011767b3          	or	a5,a4,a7
200133ae:	8736                	mv	a4,a3
200133b0:	00b7fc63          	bgeu	a5,a1,200133c8 <__udivdi3+0x20a>
200133b4:	97c2                	add	a5,a5,a6
200133b6:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
200133ba:	0107e763          	bltu	a5,a6,200133c8 <__udivdi3+0x20a>
200133be:	00b7f563          	bgeu	a5,a1,200133c8 <__udivdi3+0x20a>
200133c2:	ffe68713          	addi	a4,a3,-2
200133c6:	97c2                	add	a5,a5,a6
200133c8:	8f8d                	sub	a5,a5,a1
200133ca:	01061593          	slli	a1,a2,0x10
200133ce:	8dd9                	or	a1,a1,a4
200133d0:	bdc5                	j	200132c0 <__udivdi3+0x102>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
200133d2:	14d5e263          	bltu	a1,a3,20013516 <__udivdi3+0x358>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200133d6:	6741                	lui	a4,0x10
200133d8:	02e6fe63          	bgeu	a3,a4,20013414 <__udivdi3+0x256>
200133dc:	0ff00813          	li	a6,255
200133e0:	00d83733          	sltu	a4,a6,a3
200133e4:	070e                	slli	a4,a4,0x3
200133e6:	00e6d833          	srl	a6,a3,a4
200133ea:	00006597          	auipc	a1,0x6
200133ee:	7a658593          	addi	a1,a1,1958 # 20019b90 <__clz_tab>
200133f2:	95c2                	add	a1,a1,a6
200133f4:	0005c803          	lbu	a6,0(a1)
200133f8:	02000593          	li	a1,32
200133fc:	983a                	add	a6,a6,a4
200133fe:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20013402:	e185                	bnez	a1,20013422 <__udivdi3+0x264>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20013404:	4705                	li	a4,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20013406:	f2f6e5e3          	bltu	a3,a5,20013330 <__udivdi3+0x172>
2001340a:	00c53533          	sltu	a0,a0,a2
2001340e:	00154713          	xori	a4,a0,1
20013412:	bf39                	j	20013330 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20013414:	010005b7          	lui	a1,0x1000
20013418:	4741                	li	a4,16
2001341a:	fcb6e6e3          	bltu	a3,a1,200133e6 <__udivdi3+0x228>
2001341e:	4761                	li	a4,24
20013420:	b7d9                	j	200133e6 <__udivdi3+0x228>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20013422:	01065733          	srl	a4,a2,a6
20013426:	00b696b3          	sll	a3,a3,a1
2001342a:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001342c:	0106de93          	srli	t4,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20013430:	0107d733          	srl	a4,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20013434:	03d778b3          	remu	a7,a4,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20013438:	00b797b3          	sll	a5,a5,a1
2001343c:	01055833          	srl	a6,a0,a6
20013440:	00f86333          	or	t1,a6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20013444:	01069793          	slli	a5,a3,0x10
20013448:	83c1                	srli	a5,a5,0x10
2001344a:	01035813          	srli	a6,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2001344e:	00b61633          	sll	a2,a2,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20013452:	03d75733          	divu	a4,a4,t4
20013456:	08c2                	slli	a7,a7,0x10
20013458:	0108e833          	or	a6,a7,a6
2001345c:	02e78f33          	mul	t5,a5,a4
20013460:	8e3a                	mv	t3,a4
20013462:	01e87c63          	bgeu	a6,t5,2001347a <__udivdi3+0x2bc>
20013466:	9836                	add	a6,a6,a3
20013468:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
2001346c:	00d86763          	bltu	a6,a3,2001347a <__udivdi3+0x2bc>
20013470:	01e87563          	bgeu	a6,t5,2001347a <__udivdi3+0x2bc>
20013474:	ffe70e13          	addi	t3,a4,-2
20013478:	9836                	add	a6,a6,a3
2001347a:	41e80833          	sub	a6,a6,t5
2001347e:	03d878b3          	remu	a7,a6,t4
20013482:	03d85833          	divu	a6,a6,t4
20013486:	08c2                	slli	a7,a7,0x10
20013488:	03078eb3          	mul	t4,a5,a6
2001348c:	01031793          	slli	a5,t1,0x10
20013490:	83c1                	srli	a5,a5,0x10
20013492:	00f8e7b3          	or	a5,a7,a5
20013496:	8742                	mv	a4,a6
20013498:	01d7fc63          	bgeu	a5,t4,200134b0 <__udivdi3+0x2f2>
2001349c:	97b6                	add	a5,a5,a3
2001349e:	fff80713          	addi	a4,a6,-1
200134a2:	00d7e763          	bltu	a5,a3,200134b0 <__udivdi3+0x2f2>
200134a6:	01d7f563          	bgeu	a5,t4,200134b0 <__udivdi3+0x2f2>
200134aa:	ffe80713          	addi	a4,a6,-2
200134ae:	97b6                	add	a5,a5,a3
200134b0:	0e42                	slli	t3,t3,0x10
200134b2:	41d787b3          	sub	a5,a5,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200134b6:	6ec1                	lui	t4,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200134b8:	00ee6733          	or	a4,t3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200134bc:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
200134c0:	01077333          	and	t1,a4,a6
200134c4:	01075893          	srli	a7,a4,0x10
200134c8:	01067833          	and	a6,a2,a6
200134cc:	8241                	srli	a2,a2,0x10
200134ce:	03030e33          	mul	t3,t1,a6
200134d2:	03088833          	mul	a6,a7,a6
200134d6:	010e5693          	srli	a3,t3,0x10
200134da:	02c30333          	mul	t1,t1,a2
200134de:	9342                	add	t1,t1,a6
200134e0:	969a                	add	a3,a3,t1
200134e2:	02c888b3          	mul	a7,a7,a2
200134e6:	0106f363          	bgeu	a3,a6,200134ec <__udivdi3+0x32e>
200134ea:	98f6                	add	a7,a7,t4
200134ec:	0106d613          	srli	a2,a3,0x10
200134f0:	98b2                	add	a7,a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
200134f2:	0317e063          	bltu	a5,a7,20013512 <__udivdi3+0x354>
200134f6:	d91793e3          	bne	a5,a7,2001327c <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200134fa:	67c1                	lui	a5,0x10
200134fc:	17fd                	addi	a5,a5,-1
200134fe:	8efd                	and	a3,a3,a5
20013500:	06c2                	slli	a3,a3,0x10
20013502:	00fe7e33          	and	t3,t3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20013506:	00b51533          	sll	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001350a:	96f2                	add	a3,a3,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
2001350c:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
2001350e:	e2d571e3          	bgeu	a0,a3,20013330 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
20013512:	177d                	addi	a4,a4,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20013514:	b3a5                	j	2001327c <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
20013516:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
20013518:	4701                	li	a4,0
2001351a:	bd19                	j	20013330 <__udivdi3+0x172>

2001351c <__umoddi3>:
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
2001351c:	88b2                	mv	a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
2001351e:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20013520:	87aa                	mv	a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
20013522:	882e                	mv	a6,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20013524:	1c069863          	bnez	a3,200136f4 <__umoddi3+0x1d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
20013528:	00006697          	auipc	a3,0x6
2001352c:	66868693          	addi	a3,a3,1640 # 20019b90 <__clz_tab>
20013530:	0ac5f863          	bgeu	a1,a2,200135e0 <__umoddi3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20013534:	6341                	lui	t1,0x10
20013536:	08667e63          	bgeu	a2,t1,200135d2 <__umoddi3+0xb6>
2001353a:	0ff00313          	li	t1,255
2001353e:	00c37363          	bgeu	t1,a2,20013544 <__umoddi3+0x28>
20013542:	4721                	li	a4,8
20013544:	00e65333          	srl	t1,a2,a4
20013548:	969a                	add	a3,a3,t1
2001354a:	0006ce03          	lbu	t3,0(a3)
2001354e:	02000313          	li	t1,32
20013552:	9e3a                	add	t3,t3,a4
20013554:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20013558:	00030c63          	beqz	t1,20013570 <__umoddi3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2001355c:	006595b3          	sll	a1,a1,t1
20013560:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20013564:	006618b3          	sll	a7,a2,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20013568:	00be6833          	or	a6,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2001356c:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20013570:	0108d613          	srli	a2,a7,0x10
20013574:	02c87733          	remu	a4,a6,a2
20013578:	01089513          	slli	a0,a7,0x10
2001357c:	8141                	srli	a0,a0,0x10
2001357e:	0107d693          	srli	a3,a5,0x10
20013582:	02c85833          	divu	a6,a6,a2
20013586:	0742                	slli	a4,a4,0x10
20013588:	8ed9                	or	a3,a3,a4
2001358a:	03050833          	mul	a6,a0,a6
2001358e:	0106f863          	bgeu	a3,a6,2001359e <__umoddi3+0x82>
20013592:	96c6                	add	a3,a3,a7
20013594:	0116e563          	bltu	a3,a7,2001359e <__umoddi3+0x82>
20013598:	0106f363          	bgeu	a3,a6,2001359e <__umoddi3+0x82>
2001359c:	96c6                	add	a3,a3,a7
2001359e:	410686b3          	sub	a3,a3,a6
200135a2:	02c6f733          	remu	a4,a3,a2
200135a6:	07c2                	slli	a5,a5,0x10
200135a8:	83c1                	srli	a5,a5,0x10
200135aa:	02c6d6b3          	divu	a3,a3,a2
200135ae:	02d506b3          	mul	a3,a0,a3
200135b2:	01071513          	slli	a0,a4,0x10
200135b6:	8fc9                	or	a5,a5,a0
200135b8:	00d7f863          	bgeu	a5,a3,200135c8 <__umoddi3+0xac>
200135bc:	97c6                	add	a5,a5,a7
200135be:	0117e563          	bltu	a5,a7,200135c8 <__umoddi3+0xac>
200135c2:	00d7f363          	bgeu	a5,a3,200135c8 <__umoddi3+0xac>
200135c6:	97c6                	add	a5,a5,a7
200135c8:	8f95                	sub	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
200135ca:	0067d533          	srl	a0,a5,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
200135ce:	4581                	li	a1,0
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
200135d0:	8082                	ret
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
200135d2:	01000337          	lui	t1,0x1000
200135d6:	4741                	li	a4,16
200135d8:	f66666e3          	bltu	a2,t1,20013544 <__umoddi3+0x28>
200135dc:	4761                	li	a4,24
200135de:	b79d                	j	20013544 <__umoddi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
200135e0:	e601                	bnez	a2,200135e8 <__umoddi3+0xcc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
200135e2:	4605                	li	a2,1
200135e4:	031658b3          	divu	a7,a2,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
200135e8:	6641                	lui	a2,0x10
200135ea:	08c8f363          	bgeu	a7,a2,20013670 <__umoddi3+0x154>
200135ee:	0ff00613          	li	a2,255
200135f2:	01167363          	bgeu	a2,a7,200135f8 <__umoddi3+0xdc>
200135f6:	4721                	li	a4,8
200135f8:	00e8d633          	srl	a2,a7,a4
200135fc:	96b2                	add	a3,a3,a2
200135fe:	0006ce03          	lbu	t3,0(a3)
20013602:	02000313          	li	t1,32
20013606:	9e3a                	add	t3,t3,a4
20013608:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
2001360c:	06031963          	bnez	t1,2001367e <__umoddi3+0x162>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20013610:	411585b3          	sub	a1,a1,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20013614:	0108d713          	srli	a4,a7,0x10
20013618:	01089513          	slli	a0,a7,0x10
2001361c:	8141                	srli	a0,a0,0x10
2001361e:	0107d613          	srli	a2,a5,0x10
20013622:	02e5f6b3          	remu	a3,a1,a4
20013626:	02e5d5b3          	divu	a1,a1,a4
2001362a:	06c2                	slli	a3,a3,0x10
2001362c:	8ed1                	or	a3,a3,a2
2001362e:	02b505b3          	mul	a1,a0,a1
20013632:	00b6f863          	bgeu	a3,a1,20013642 <__umoddi3+0x126>
20013636:	96c6                	add	a3,a3,a7
20013638:	0116e563          	bltu	a3,a7,20013642 <__umoddi3+0x126>
2001363c:	00b6f363          	bgeu	a3,a1,20013642 <__umoddi3+0x126>
20013640:	96c6                	add	a3,a3,a7
20013642:	40b685b3          	sub	a1,a3,a1
20013646:	02e5f6b3          	remu	a3,a1,a4
2001364a:	07c2                	slli	a5,a5,0x10
2001364c:	83c1                	srli	a5,a5,0x10
2001364e:	02e5d5b3          	divu	a1,a1,a4
20013652:	02b505b3          	mul	a1,a0,a1
20013656:	01069513          	slli	a0,a3,0x10
2001365a:	8fc9                	or	a5,a5,a0
2001365c:	00b7f863          	bgeu	a5,a1,2001366c <__umoddi3+0x150>
20013660:	97c6                	add	a5,a5,a7
20013662:	0117e563          	bltu	a5,a7,2001366c <__umoddi3+0x150>
20013666:	00b7f363          	bgeu	a5,a1,2001366c <__umoddi3+0x150>
2001366a:	97c6                	add	a5,a5,a7
2001366c:	8f8d                	sub	a5,a5,a1
2001366e:	bfb1                	j	200135ca <__umoddi3+0xae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20013670:	01000637          	lui	a2,0x1000
20013674:	4741                	li	a4,16
20013676:	f8c8e1e3          	bltu	a7,a2,200135f8 <__umoddi3+0xdc>
2001367a:	4761                	li	a4,24
2001367c:	bfb5                	j	200135f8 <__umoddi3+0xdc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
2001367e:	006898b3          	sll	a7,a7,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20013682:	01c5d733          	srl	a4,a1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20013686:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001368a:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001368e:	0108d513          	srli	a0,a7,0x10
20013692:	02a776b3          	remu	a3,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20013696:	006595b3          	sll	a1,a1,t1
2001369a:	00be6e33          	or	t3,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001369e:	01089593          	slli	a1,a7,0x10
200136a2:	81c1                	srli	a1,a1,0x10
200136a4:	010e5613          	srli	a2,t3,0x10
200136a8:	02a75733          	divu	a4,a4,a0
200136ac:	06c2                	slli	a3,a3,0x10
200136ae:	8ed1                	or	a3,a3,a2
200136b0:	02e58733          	mul	a4,a1,a4
200136b4:	00e6f863          	bgeu	a3,a4,200136c4 <__umoddi3+0x1a8>
200136b8:	96c6                	add	a3,a3,a7
200136ba:	0116e563          	bltu	a3,a7,200136c4 <__umoddi3+0x1a8>
200136be:	00e6f363          	bgeu	a3,a4,200136c4 <__umoddi3+0x1a8>
200136c2:	96c6                	add	a3,a3,a7
200136c4:	40e68633          	sub	a2,a3,a4
200136c8:	02a676b3          	remu	a3,a2,a0
200136cc:	0e42                	slli	t3,t3,0x10
200136ce:	010e5e13          	srli	t3,t3,0x10
200136d2:	02a65633          	divu	a2,a2,a0
200136d6:	06c2                	slli	a3,a3,0x10
200136d8:	02c58633          	mul	a2,a1,a2
200136dc:	01c6e5b3          	or	a1,a3,t3
200136e0:	00c5f863          	bgeu	a1,a2,200136f0 <__umoddi3+0x1d4>
200136e4:	95c6                	add	a1,a1,a7
200136e6:	0115e563          	bltu	a1,a7,200136f0 <__umoddi3+0x1d4>
200136ea:	00c5f363          	bgeu	a1,a2,200136f0 <__umoddi3+0x1d4>
200136ee:	95c6                	add	a1,a1,a7
200136f0:	8d91                	sub	a1,a1,a2
200136f2:	b70d                	j	20013614 <__umoddi3+0xf8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
200136f4:	ecd5eee3          	bltu	a1,a3,200135d0 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200136f8:	6741                	lui	a4,0x10
200136fa:	04e6f563          	bgeu	a3,a4,20013744 <__umoddi3+0x228>
200136fe:	0ff00e93          	li	t4,255
20013702:	00deb733          	sltu	a4,t4,a3
20013706:	070e                	slli	a4,a4,0x3
20013708:	00e6d333          	srl	t1,a3,a4
2001370c:	00006897          	auipc	a7,0x6
20013710:	48488893          	addi	a7,a7,1156 # 20019b90 <__clz_tab>
20013714:	989a                	add	a7,a7,t1
20013716:	0008ce83          	lbu	t4,0(a7)
2001371a:	02000e13          	li	t3,32
2001371e:	9eba                	add	t4,t4,a4
20013720:	41de0e33          	sub	t3,t3,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20013724:	020e1763          	bnez	t3,20013752 <__umoddi3+0x236>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20013728:	00b6e463          	bltu	a3,a1,20013730 <__umoddi3+0x214>
2001372c:	00c56963          	bltu	a0,a2,2001373e <__umoddi3+0x222>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
20013730:	40c507b3          	sub	a5,a0,a2
20013734:	8d95                	sub	a1,a1,a3
20013736:	00f53533          	sltu	a0,a0,a5
2001373a:	40a58833          	sub	a6,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
2001373e:	853e                	mv	a0,a5
20013740:	85c2                	mv	a1,a6
20013742:	b579                	j	200135d0 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20013744:	010008b7          	lui	a7,0x1000
20013748:	4741                	li	a4,16
2001374a:	fb16efe3          	bltu	a3,a7,20013708 <__umoddi3+0x1ec>
2001374e:	4761                	li	a4,24
20013750:	bf65                	j	20013708 <__umoddi3+0x1ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20013752:	01d65733          	srl	a4,a2,t4
20013756:	01c696b3          	sll	a3,a3,t3
2001375a:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001375c:	0106d813          	srli	a6,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20013760:	01d5d733          	srl	a4,a1,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20013764:	03077333          	remu	t1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20013768:	01c595b3          	sll	a1,a1,t3
2001376c:	01d557b3          	srl	a5,a0,t4
20013770:	8fcd                	or	a5,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20013772:	01069593          	slli	a1,a3,0x10
20013776:	81c1                	srli	a1,a1,0x10
20013778:	0107d893          	srli	a7,a5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2001377c:	01c61633          	sll	a2,a2,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20013780:	01c51533          	sll	a0,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20013784:	03075733          	divu	a4,a4,a6
20013788:	0342                	slli	t1,t1,0x10
2001378a:	011368b3          	or	a7,t1,a7
2001378e:	02e58f33          	mul	t5,a1,a4
20013792:	833a                	mv	t1,a4
20013794:	01e8fc63          	bgeu	a7,t5,200137ac <__umoddi3+0x290>
20013798:	98b6                	add	a7,a7,a3
2001379a:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
2001379e:	00d8e763          	bltu	a7,a3,200137ac <__umoddi3+0x290>
200137a2:	01e8f563          	bgeu	a7,t5,200137ac <__umoddi3+0x290>
200137a6:	ffe70313          	addi	t1,a4,-2
200137aa:	98b6                	add	a7,a7,a3
200137ac:	41e888b3          	sub	a7,a7,t5
200137b0:	0308ff33          	remu	t5,a7,a6
200137b4:	0308d8b3          	divu	a7,a7,a6
200137b8:	0f42                	slli	t5,t5,0x10
200137ba:	03158833          	mul	a6,a1,a7
200137be:	01079593          	slli	a1,a5,0x10
200137c2:	81c1                	srli	a1,a1,0x10
200137c4:	00bf65b3          	or	a1,t5,a1
200137c8:	87c6                	mv	a5,a7
200137ca:	0105fc63          	bgeu	a1,a6,200137e2 <__umoddi3+0x2c6>
200137ce:	95b6                	add	a1,a1,a3
200137d0:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
200137d4:	00d5e763          	bltu	a1,a3,200137e2 <__umoddi3+0x2c6>
200137d8:	0105f563          	bgeu	a1,a6,200137e2 <__umoddi3+0x2c6>
200137dc:	ffe88793          	addi	a5,a7,-2
200137e0:	95b6                	add	a1,a1,a3
200137e2:	0342                	slli	t1,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200137e4:	6f41                	lui	t5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200137e6:	00f36333          	or	t1,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200137ea:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
200137ee:	00f378b3          	and	a7,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200137f2:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200137f6:	01035313          	srli	t1,t1,0x10
200137fa:	01065813          	srli	a6,a2,0x10
200137fe:	8ff1                	and	a5,a5,a2
20013800:	02f88733          	mul	a4,a7,a5
20013804:	02f307b3          	mul	a5,t1,a5
20013808:	030888b3          	mul	a7,a7,a6
2001380c:	03030333          	mul	t1,t1,a6
20013810:	98be                	add	a7,a7,a5
20013812:	01075813          	srli	a6,a4,0x10
20013816:	9846                	add	a6,a6,a7
20013818:	00f87363          	bgeu	a6,a5,2001381e <__umoddi3+0x302>
2001381c:	937a                	add	t1,t1,t5
2001381e:	01085793          	srli	a5,a6,0x10
20013822:	933e                	add	t1,t1,a5
20013824:	67c1                	lui	a5,0x10
20013826:	17fd                	addi	a5,a5,-1
20013828:	00f87833          	and	a6,a6,a5
2001382c:	0842                	slli	a6,a6,0x10
2001382e:	8f7d                	and	a4,a4,a5
20013830:	9742                	add	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20013832:	0065e663          	bltu	a1,t1,2001383e <__umoddi3+0x322>
20013836:	00659c63          	bne	a1,t1,2001384e <__umoddi3+0x332>
2001383a:	00e57a63          	bgeu	a0,a4,2001384e <__umoddi3+0x332>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
2001383e:	40c70633          	sub	a2,a4,a2
20013842:	00c73733          	sltu	a4,a4,a2
20013846:	9736                	add	a4,a4,a3
20013848:	40e30333          	sub	t1,t1,a4
2001384c:	8732                	mv	a4,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
2001384e:	40e50733          	sub	a4,a0,a4
20013852:	00e53533          	sltu	a0,a0,a4
20013856:	406585b3          	sub	a1,a1,t1
2001385a:	8d89                	sub	a1,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
2001385c:	01d597b3          	sll	a5,a1,t4
20013860:	01c75733          	srl	a4,a4,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
20013864:	00e7e533          	or	a0,a5,a4
20013868:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
2001386c:	b395                	j	200135d0 <__umoddi3+0xb4>

2001386e <__adddf3>:
__adddf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
2001386e:	00100837          	lui	a6,0x100
20013872:	187d                	addi	a6,a6,-1
20013874:	00b878b3          	and	a7,a6,a1
20013878:	088e                	slli	a7,a7,0x3
2001387a:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
2001387e:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20013880:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20013884:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20013888:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2001388c:	0146d893          	srli	a7,a3,0x14
20013890:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
20013892:	ca26                	sw	s1,20(sp)
20013894:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20013896:	7ff77493          	andi	s1,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
2001389a:	7ff8f893          	andi	a7,a7,2047
2001389e:	01d65713          	srli	a4,a2,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:36
200138a2:	ce06                	sw	ra,28(sp)
200138a4:	cc22                	sw	s0,24(sp)
200138a6:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
200138a8:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
200138ac:	82fd                	srli	a3,a3,0x1f
200138ae:	01076733          	or	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
200138b2:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
200138b4:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
200138b6:	41148833          	sub	a6,s1,a7
200138ba:	22d91663          	bne	s2,a3,20013ae6 <__adddf3+0x278>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 7)
200138be:	0f005163          	blez	a6,200139a0 <__adddf3+0x132>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 9)
200138c2:	02089863          	bnez	a7,200138f2 <__adddf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 11)
200138c6:	00c766b3          	or	a3,a4,a2
200138ca:	56068763          	beqz	a3,20013e38 <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 14)
200138ce:	fff80593          	addi	a1,a6,-1 # fffff <__heap_size+0xff7ff>
200138d2:	e989                	bnez	a1,200138e4 <__adddf3+0x76>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 23)
200138d4:	962a                	add	a2,a2,a0
200138d6:	00a63533          	sltu	a0,a2,a0
200138da:	97ba                	add	a5,a5,a4
200138dc:	97aa                	add	a5,a5,a0
200138de:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 80)
200138e0:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
200138e2:	a8b1                	j	2001393e <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 24)
200138e4:	7ff00693          	li	a3,2047
200138e8:	00d81d63          	bne	a6,a3,20013902 <__adddf3+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
200138ec:	7ff00493          	li	s1,2047
200138f0:	aa79                	j	20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 12)
200138f2:	7ff00693          	li	a3,2047
200138f6:	18d48c63          	beq	s1,a3,20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 38)
200138fa:	008006b7          	lui	a3,0x800
200138fe:	8f55                	or	a4,a4,a3
20013900:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 47)
20013902:	03800693          	li	a3,56
20013906:	08b6c963          	blt	a3,a1,20013998 <__adddf3+0x12a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 48)
2001390a:	46fd                	li	a3,31
2001390c:	06b6c063          	blt	a3,a1,2001396c <__adddf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 50)
20013910:	02000813          	li	a6,32
20013914:	40b80833          	sub	a6,a6,a1
20013918:	010716b3          	sll	a3,a4,a6
2001391c:	00b658b3          	srl	a7,a2,a1
20013920:	01061633          	sll	a2,a2,a6
20013924:	0116e6b3          	or	a3,a3,a7
20013928:	00c03633          	snez	a2,a2
2001392c:	8e55                	or	a2,a2,a3
2001392e:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 64)
20013932:	962a                	add	a2,a2,a0
20013934:	973e                	add	a4,a4,a5
20013936:	00a637b3          	sltu	a5,a2,a0
2001393a:	97ba                	add	a5,a5,a4
2001393c:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 122)
2001393e:	00879713          	slli	a4,a5,0x8
20013942:	14075663          	bgez	a4,20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 182)
20013946:	0485                	addi	s1,s1,1
20013948:	7ff00713          	li	a4,2047
2001394c:	48e48563          	beq	s1,a4,20013dd6 <__adddf3+0x568>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20013950:	ff8006b7          	lui	a3,0xff800
20013954:	16fd                	addi	a3,a3,-1
20013956:	8efd                	and	a3,a3,a5
20013958:	00155593          	srli	a1,a0,0x1
2001395c:	8905                	andi	a0,a0,1
2001395e:	01f69793          	slli	a5,a3,0x1f
20013962:	8d4d                	or	a0,a0,a1
20013964:	8d5d                	or	a0,a0,a5
20013966:	0016d793          	srli	a5,a3,0x1
2001396a:	a215                	j	20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 51)
2001396c:	fe058693          	addi	a3,a1,-32 # ffffe0 <__heap_size+0xfff7e0>
20013970:	02000893          	li	a7,32
20013974:	00d756b3          	srl	a3,a4,a3
20013978:	4801                	li	a6,0
2001397a:	01158863          	beq	a1,a7,2001398a <__adddf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 58)
2001397e:	04000813          	li	a6,64
20013982:	40b805b3          	sub	a1,a6,a1
20013986:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 61)
2001398a:	00c86633          	or	a2,a6,a2
2001398e:	00c03633          	snez	a2,a2
20013992:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 49)
20013994:	4701                	li	a4,0
20013996:	bf71                	j	20013932 <__adddf3+0xc4>
20013998:	8e59                	or	a2,a2,a4
2001399a:	00c03633          	snez	a2,a2
2001399e:	bfdd                	j	20013994 <__adddf3+0x126>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 10)
200139a0:	0a080b63          	beqz	a6,20013a56 <__adddf3+0x1e8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 66)
200139a4:	409885b3          	sub	a1,a7,s1
200139a8:	e48d                	bnez	s1,200139d2 <__adddf3+0x164>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 68)
200139aa:	00a7e6b3          	or	a3,a5,a0
200139ae:	40068b63          	beqz	a3,20013dc4 <__adddf3+0x556>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 71)
200139b2:	fff58693          	addi	a3,a1,-1
200139b6:	e699                	bnez	a3,200139c4 <__adddf3+0x156>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 80)
200139b8:	9532                	add	a0,a0,a2
200139ba:	97ba                	add	a5,a5,a4
200139bc:	00c53633          	sltu	a2,a0,a2
200139c0:	97b2                	add	a5,a5,a2
200139c2:	bf39                	j	200138e0 <__adddf3+0x72>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 81)
200139c4:	7ff00813          	li	a6,2047
200139c8:	01059d63          	bne	a1,a6,200139e2 <__adddf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
200139cc:	87ba                	mv	a5,a4
200139ce:	8532                	mv	a0,a2
200139d0:	bf31                	j	200138ec <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 69)
200139d2:	7ff00693          	li	a3,2047
200139d6:	fed88be3          	beq	a7,a3,200139cc <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 95)
200139da:	008006b7          	lui	a3,0x800
200139de:	8fd5                	or	a5,a5,a3
200139e0:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 104)
200139e2:	03800593          	li	a1,56
200139e6:	06d5c463          	blt	a1,a3,20013a4e <__adddf3+0x1e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 105)
200139ea:	45fd                	li	a1,31
200139ec:	02d5cb63          	blt	a1,a3,20013a22 <__adddf3+0x1b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 107)
200139f0:	02000813          	li	a6,32
200139f4:	40d80833          	sub	a6,a6,a3
200139f8:	00d55333          	srl	t1,a0,a3
200139fc:	010795b3          	sll	a1,a5,a6
20013a00:	01051533          	sll	a0,a0,a6
20013a04:	0065e5b3          	or	a1,a1,t1
20013a08:	00a03533          	snez	a0,a0
20013a0c:	8d4d                	or	a0,a0,a1
20013a0e:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 121)
20013a12:	9532                	add	a0,a0,a2
20013a14:	00e687b3          	add	a5,a3,a4
20013a18:	00c53633          	sltu	a2,a0,a2
20013a1c:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 121)
20013a1e:	84c6                	mv	s1,a7
20013a20:	bf39                	j	2001393e <__adddf3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 108)
20013a22:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20013a26:	02000313          	li	t1,32
20013a2a:	00b7d5b3          	srl	a1,a5,a1
20013a2e:	4801                	li	a6,0
20013a30:	00668863          	beq	a3,t1,20013a40 <__adddf3+0x1d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 115)
20013a34:	04000813          	li	a6,64
20013a38:	40d806b3          	sub	a3,a6,a3
20013a3c:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 118)
20013a40:	00a86533          	or	a0,a6,a0
20013a44:	00a03533          	snez	a0,a0
20013a48:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 106)
20013a4a:	4681                	li	a3,0
20013a4c:	b7d9                	j	20013a12 <__adddf3+0x1a4>
20013a4e:	8d5d                	or	a0,a0,a5
20013a50:	00a03533          	snez	a0,a0
20013a54:	bfdd                	j	20013a4a <__adddf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 67)
20013a56:	00148693          	addi	a3,s1,1
20013a5a:	7fe6f593          	andi	a1,a3,2046
20013a5e:	e1bd                	bnez	a1,20013ac4 <__adddf3+0x256>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 123)
20013a60:	00a7e6b3          	or	a3,a5,a0
20013a64:	e4a9                	bnez	s1,20013aae <__adddf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 125)
20013a66:	36068363          	beqz	a3,20013dcc <__adddf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 128)
20013a6a:	00c766b3          	or	a3,a4,a2
20013a6e:	c285                	beqz	a3,20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 134)
20013a70:	962a                	add	a2,a2,a0
20013a72:	97ba                	add	a5,a5,a4
20013a74:	00a63533          	sltu	a0,a2,a0
20013a78:	97aa                	add	a5,a5,a0
20013a7a:	00879713          	slli	a4,a5,0x8
20013a7e:	8532                	mv	a0,a2
20013a80:	00075763          	bgez	a4,20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 136)
20013a84:	ff800737          	lui	a4,0xff800
20013a88:	177d                	addi	a4,a4,-1
20013a8a:	8ff9                	and	a5,a5,a4
20013a8c:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 417)
20013a8e:	00757713          	andi	a4,a0,7
20013a92:	34070463          	beqz	a4,20013dda <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 37)
20013a96:	00f57713          	andi	a4,a0,15
20013a9a:	4691                	li	a3,4
20013a9c:	32d70f63          	beq	a4,a3,20013dda <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 44)
20013aa0:	00450693          	addi	a3,a0,4
20013aa4:	00a6b533          	sltu	a0,a3,a0
20013aa8:	97aa                	add	a5,a5,a0
20013aaa:	8536                	mv	a0,a3
20013aac:	a63d                	j	20013dda <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 153)
20013aae:	de99                	beqz	a3,200139cc <__adddf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 155)
20013ab0:	8e59                	or	a2,a2,a4
20013ab2:	e2060de3          	beqz	a2,200138ec <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20013ab6:	4901                	li	s2,0
20013ab8:	004007b7          	lui	a5,0x400
20013abc:	4501                	li	a0,0
20013abe:	7ff00493          	li	s1,2047
20013ac2:	ae21                	j	20013dda <__adddf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 124)
20013ac4:	7ff00593          	li	a1,2047
20013ac8:	30b68563          	beq	a3,a1,20013dd2 <__adddf3+0x564>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20013acc:	962a                	add	a2,a2,a0
20013ace:	973e                	add	a4,a4,a5
20013ad0:	00a637b3          	sltu	a5,a2,a0
20013ad4:	973e                	add	a4,a4,a5
20013ad6:	01f71513          	slli	a0,a4,0x1f
20013ada:	8205                	srli	a2,a2,0x1
20013adc:	8d51                	or	a0,a0,a2
20013ade:	00175793          	srli	a5,a4,0x1
20013ae2:	84b6                	mv	s1,a3
20013ae4:	b76d                	j	20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 8)
20013ae6:	0d005663          	blez	a6,20013bb2 <__adddf3+0x344>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 200)
20013aea:	08089163          	bnez	a7,20013b6c <__adddf3+0x2fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 202)
20013aee:	00c766b3          	or	a3,a4,a2
20013af2:	34068363          	beqz	a3,20013e38 <__adddf3+0x5ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 205)
20013af6:	fff80593          	addi	a1,a6,-1
20013afa:	e991                	bnez	a1,20013b0e <__adddf3+0x2a0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 214)
20013afc:	40c50633          	sub	a2,a0,a2
20013b00:	00c53533          	sltu	a0,a0,a2
20013b04:	8f99                	sub	a5,a5,a4
20013b06:	8f89                	sub	a5,a5,a0
20013b08:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 271)
20013b0a:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20013b0c:	a0b1                	j	20013b58 <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 215)
20013b0e:	7ff00693          	li	a3,2047
20013b12:	dcd80de3          	beq	a6,a3,200138ec <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 238)
20013b16:	03800693          	li	a3,56
20013b1a:	08b6c863          	blt	a3,a1,20013baa <__adddf3+0x33c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 239)
20013b1e:	46fd                	li	a3,31
20013b20:	04b6cf63          	blt	a3,a1,20013b7e <__adddf3+0x310>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 241)
20013b24:	02000813          	li	a6,32
20013b28:	40b80833          	sub	a6,a6,a1
20013b2c:	010716b3          	sll	a3,a4,a6
20013b30:	00b658b3          	srl	a7,a2,a1
20013b34:	01061633          	sll	a2,a2,a6
20013b38:	0116e6b3          	or	a3,a3,a7
20013b3c:	00c03633          	snez	a2,a2
20013b40:	8e55                	or	a2,a2,a3
20013b42:	00b75733          	srl	a4,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 255)
20013b46:	40c50633          	sub	a2,a0,a2
20013b4a:	40e78733          	sub	a4,a5,a4
20013b4e:	00c537b3          	sltu	a5,a0,a2
20013b52:	40f707b3          	sub	a5,a4,a5
20013b56:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 313)
20013b58:	00879713          	slli	a4,a5,0x8
20013b5c:	f20759e3          	bgez	a4,20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 373)
20013b60:	00800437          	lui	s0,0x800
20013b64:	147d                	addi	s0,s0,-1
20013b66:	8c7d                	and	s0,s0,a5
20013b68:	89aa                	mv	s3,a0
20013b6a:	a275                	j	20013d16 <__adddf3+0x4a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 203)
20013b6c:	7ff00693          	li	a3,2047
20013b70:	f0d48fe3          	beq	s1,a3,20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 229)
20013b74:	008006b7          	lui	a3,0x800
20013b78:	8f55                	or	a4,a4,a3
20013b7a:	85c2                	mv	a1,a6
20013b7c:	bf69                	j	20013b16 <__adddf3+0x2a8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 242)
20013b7e:	fe058693          	addi	a3,a1,-32
20013b82:	02000893          	li	a7,32
20013b86:	00d756b3          	srl	a3,a4,a3
20013b8a:	4801                	li	a6,0
20013b8c:	01158863          	beq	a1,a7,20013b9c <__adddf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 249)
20013b90:	04000813          	li	a6,64
20013b94:	40b805b3          	sub	a1,a6,a1
20013b98:	00b71833          	sll	a6,a4,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 252)
20013b9c:	00c86633          	or	a2,a6,a2
20013ba0:	00c03633          	snez	a2,a2
20013ba4:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 240)
20013ba6:	4701                	li	a4,0
20013ba8:	bf79                	j	20013b46 <__adddf3+0x2d8>
20013baa:	8e59                	or	a2,a2,a4
20013bac:	00c03633          	snez	a2,a2
20013bb0:	bfdd                	j	20013ba6 <__adddf3+0x338>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 201)
20013bb2:	0c080463          	beqz	a6,20013c7a <__adddf3+0x40c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 257)
20013bb6:	40988833          	sub	a6,a7,s1
20013bba:	e895                	bnez	s1,20013bee <__adddf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 259)
20013bbc:	00a7e5b3          	or	a1,a5,a0
20013bc0:	26058e63          	beqz	a1,20013e3c <__adddf3+0x5ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 262)
20013bc4:	fff80593          	addi	a1,a6,-1
20013bc8:	e991                	bnez	a1,20013bdc <__adddf3+0x36e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 271)
20013bca:	40a60533          	sub	a0,a2,a0
20013bce:	40f707b3          	sub	a5,a4,a5
20013bd2:	00a63633          	sltu	a2,a2,a0
20013bd6:	8f91                	sub	a5,a5,a2
20013bd8:	8936                	mv	s2,a3
20013bda:	bf05                	j	20013b0a <__adddf3+0x29c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 272)
20013bdc:	7ff00313          	li	t1,2047
20013be0:	00681f63          	bne	a6,t1,20013bfe <__adddf3+0x390>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20013be4:	87ba                	mv	a5,a4
20013be6:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20013be8:	7ff00493          	li	s1,2047
20013bec:	a07d                	j	20013c9a <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 260)
20013bee:	7ff00593          	li	a1,2047
20013bf2:	feb889e3          	beq	a7,a1,20013be4 <__adddf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 286)
20013bf6:	008005b7          	lui	a1,0x800
20013bfa:	8fcd                	or	a5,a5,a1
20013bfc:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 295)
20013bfe:	03800813          	li	a6,56
20013c02:	06b84863          	blt	a6,a1,20013c72 <__adddf3+0x404>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 296)
20013c06:	487d                	li	a6,31
20013c08:	02b84e63          	blt	a6,a1,20013c44 <__adddf3+0x3d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 298)
20013c0c:	02000313          	li	t1,32
20013c10:	40b30333          	sub	t1,t1,a1
20013c14:	00b55e33          	srl	t3,a0,a1
20013c18:	00679833          	sll	a6,a5,t1
20013c1c:	00651533          	sll	a0,a0,t1
20013c20:	01c86833          	or	a6,a6,t3
20013c24:	00a03533          	snez	a0,a0
20013c28:	00a86533          	or	a0,a6,a0
20013c2c:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 312)
20013c30:	40a60533          	sub	a0,a2,a0
20013c34:	40b707b3          	sub	a5,a4,a1
20013c38:	00a63633          	sltu	a2,a2,a0
20013c3c:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 312)
20013c3e:	84c6                	mv	s1,a7
20013c40:	8936                	mv	s2,a3
20013c42:	bf19                	j	20013b58 <__adddf3+0x2ea>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 299)
20013c44:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20013c48:	02000e13          	li	t3,32
20013c4c:	0107d833          	srl	a6,a5,a6
20013c50:	4301                	li	t1,0
20013c52:	01c58863          	beq	a1,t3,20013c62 <__adddf3+0x3f4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 306)
20013c56:	04000313          	li	t1,64
20013c5a:	40b305b3          	sub	a1,t1,a1
20013c5e:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 309)
20013c62:	00a36533          	or	a0,t1,a0
20013c66:	00a03533          	snez	a0,a0
20013c6a:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 297)
20013c6e:	4581                	li	a1,0
20013c70:	b7c1                	j	20013c30 <__adddf3+0x3c2>
20013c72:	8d5d                	or	a0,a0,a5
20013c74:	00a03533          	snez	a0,a0
20013c78:	bfdd                	j	20013c6e <__adddf3+0x400>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 258)
20013c7a:	00148593          	addi	a1,s1,1
20013c7e:	7fe5f593          	andi	a1,a1,2046
20013c82:	e5b5                	bnez	a1,20013cee <__adddf3+0x480>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 314)
20013c84:	00a7e833          	or	a6,a5,a0
20013c88:	00c765b3          	or	a1,a4,a2
20013c8c:	e4b1                	bnez	s1,20013cd8 <__adddf3+0x46a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 316)
20013c8e:	00081863          	bnez	a6,20013c9e <__adddf3+0x430>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 318)
20013c92:	1a058963          	beqz	a1,20013e44 <__adddf3+0x5d6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20013c96:	87ba                	mv	a5,a4
20013c98:	8532                	mv	a0,a2
20013c9a:	8936                	mv	s2,a3
20013c9c:	bbcd                	j	20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 319)
20013c9e:	de0588e3          	beqz	a1,20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 326)
20013ca2:	40c50833          	sub	a6,a0,a2
20013ca6:	40e785b3          	sub	a1,a5,a4
20013caa:	010538b3          	sltu	a7,a0,a6
20013cae:	411585b3          	sub	a1,a1,a7
20013cb2:	00859413          	slli	s0,a1,0x8
20013cb6:	00045a63          	bgez	s0,20013cca <__adddf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 328)
20013cba:	40a60533          	sub	a0,a2,a0
20013cbe:	40f707b3          	sub	a5,a4,a5
20013cc2:	00a63633          	sltu	a2,a2,a0
20013cc6:	8f91                	sub	a5,a5,a2
20013cc8:	bfc9                	j	20013c9a <__adddf3+0x42c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 329)
20013cca:	00b86533          	or	a0,a6,a1
20013cce:	16050f63          	beqz	a0,20013e4c <__adddf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20013cd2:	87ae                	mv	a5,a1
20013cd4:	8542                	mv	a0,a6
20013cd6:	bb65                	j	20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 348)
20013cd8:	00081863          	bnez	a6,20013ce8 <__adddf3+0x47a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 349)
20013cdc:	16058a63          	beqz	a1,20013e50 <__adddf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20013ce0:	87ba                	mv	a5,a4
20013ce2:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20013ce4:	8936                	mv	s2,a3
20013ce6:	b119                	j	200138ec <__adddf3+0x7e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 350)
20013ce8:	c00582e3          	beqz	a1,200138ec <__adddf3+0x7e>
20013cec:	b3e9                	j	20013ab6 <__adddf3+0x248>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 315)
20013cee:	40c509b3          	sub	s3,a0,a2
20013cf2:	013535b3          	sltu	a1,a0,s3
20013cf6:	40e78433          	sub	s0,a5,a4
20013cfa:	8c0d                	sub	s0,s0,a1
20013cfc:	00841593          	slli	a1,s0,0x8
20013d00:	0605d763          	bgez	a1,20013d6e <__adddf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 366)
20013d04:	40a609b3          	sub	s3,a2,a0
20013d08:	40f707b3          	sub	a5,a4,a5
20013d0c:	01363633          	sltu	a2,a2,s3
20013d10:	40c78433          	sub	s0,a5,a2
20013d14:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 375)
20013d16:	c035                	beqz	s0,20013d7a <__adddf3+0x50c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 378)
20013d18:	8522                	mv	a0,s0
20013d1a:	3da010ef          	jal	ra,200150f4 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 389)
20013d1e:	ff850713          	addi	a4,a0,-8
20013d22:	47fd                	li	a5,31
20013d24:	06e7c163          	blt	a5,a4,20013d86 <__adddf3+0x518>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 390)
20013d28:	02000793          	li	a5,32
20013d2c:	8f99                	sub	a5,a5,a4
20013d2e:	00e41433          	sll	s0,s0,a4
20013d32:	00f9d7b3          	srl	a5,s3,a5
20013d36:	8c5d                	or	s0,s0,a5
20013d38:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 399)
20013d3c:	06974e63          	blt	a4,s1,20013db8 <__adddf3+0x54a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 400)
20013d40:	8f05                	sub	a4,a4,s1
20013d42:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7fe7d5>
20013d46:	46fd                	li	a3,31
20013d48:	04f6c563          	blt	a3,a5,20013d92 <__adddf3+0x524>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 402)
20013d4c:	02000713          	li	a4,32
20013d50:	8f1d                	sub	a4,a4,a5
20013d52:	00f55633          	srl	a2,a0,a5
20013d56:	00e416b3          	sll	a3,s0,a4
20013d5a:	00e51533          	sll	a0,a0,a4
20013d5e:	8ed1                	or	a3,a3,a2
20013d60:	00a03533          	snez	a0,a0
20013d64:	8d55                	or	a0,a0,a3
20013d66:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20013d6a:	4481                	li	s1,0
20013d6c:	b30d                	j	20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 367)
20013d6e:	0089e533          	or	a0,s3,s0
20013d72:	f155                	bnez	a0,20013d16 <__adddf3+0x4a8>
20013d74:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20013d76:	4481                	li	s1,0
20013d78:	a8c1                	j	20013e48 <__adddf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 382)
20013d7a:	854e                	mv	a0,s3
20013d7c:	378010ef          	jal	ra,200150f4 <__clzsi2>
20013d80:	02050513          	addi	a0,a0,32
20013d84:	bf69                	j	20013d1e <__adddf3+0x4b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 391)
20013d86:	fd850413          	addi	s0,a0,-40
20013d8a:	00899433          	sll	s0,s3,s0
20013d8e:	4501                	li	a0,0
20013d90:	b775                	j	20013d3c <__adddf3+0x4ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 403)
20013d92:	1705                	addi	a4,a4,-31
20013d94:	02000613          	li	a2,32
20013d98:	00e45733          	srl	a4,s0,a4
20013d9c:	4681                	li	a3,0
20013d9e:	00c78763          	beq	a5,a2,20013dac <__adddf3+0x53e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 411)
20013da2:	04000693          	li	a3,64
20013da6:	8e9d                	sub	a3,a3,a5
20013da8:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 414)
20013dac:	8d55                	or	a0,a0,a3
20013dae:	00a03533          	snez	a0,a0
20013db2:	8d59                	or	a0,a0,a4
20013db4:	4781                	li	a5,0
20013db6:	bf55                	j	20013d6a <__adddf3+0x4fc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46 (discriminator 401)
20013db8:	ff8007b7          	lui	a5,0xff800
20013dbc:	17fd                	addi	a5,a5,-1
20013dbe:	8c99                	sub	s1,s1,a4
20013dc0:	8fe1                	and	a5,a5,s0
20013dc2:	b1f1                	j	20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20013dc4:	87ba                	mv	a5,a4
20013dc6:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20013dc8:	84ae                	mv	s1,a1
20013dca:	b1d1                	j	20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20013dcc:	87ba                	mv	a5,a4
20013dce:	8532                	mv	a0,a2
20013dd0:	b97d                	j	20013a8e <__adddf3+0x220>
20013dd2:	7ff00493          	li	s1,2047
20013dd6:	4781                	li	a5,0
20013dd8:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 47)
20013dda:	00879713          	slli	a4,a5,0x8
20013dde:	00075b63          	bgez	a4,20013df4 <__adddf3+0x586>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 63)
20013de2:	0485                	addi	s1,s1,1
20013de4:	7ff00713          	li	a4,2047
20013de8:	06e48963          	beq	s1,a4,20013e5a <__adddf3+0x5ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20013dec:	ff800737          	lui	a4,0xff800
20013df0:	177d                	addi	a4,a4,-1
20013df2:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 79)
20013df4:	01d79713          	slli	a4,a5,0x1d
20013df8:	810d                	srli	a0,a0,0x3
20013dfa:	8d59                	or	a0,a0,a4
20013dfc:	7ff00713          	li	a4,2047
20013e00:	838d                	srli	a5,a5,0x3
20013e02:	00e49963          	bne	s1,a4,20013e14 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 80)
20013e06:	8d5d                	or	a0,a0,a5
20013e08:	4781                	li	a5,0
20013e0a:	c509                	beqz	a0,20013e14 <__adddf3+0x5a6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47
20013e0c:	000807b7          	lui	a5,0x80
20013e10:	4501                	li	a0,0
20013e12:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20013e14:	7ff4f713          	andi	a4,s1,2047
20013e18:	07b2                	slli	a5,a5,0xc
20013e1a:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20013e1c:	40f2                	lw	ra,28(sp)
20013e1e:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:47 (discriminator 90)
20013e20:	83b1                	srli	a5,a5,0xc
20013e22:	01f91593          	slli	a1,s2,0x1f
20013e26:	8fd9                	or	a5,a5,a4
20013e28:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:51 (discriminator 90)
20013e2c:	44d2                	lw	s1,20(sp)
20013e2e:	4942                	lw	s2,16(sp)
20013e30:	49b2                	lw	s3,12(sp)
20013e32:	85ba                	mv	a1,a4
20013e34:	6105                	addi	sp,sp,32
20013e36:	8082                	ret
20013e38:	84c2                	mv	s1,a6
20013e3a:	b991                	j	20013a8e <__adddf3+0x220>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45
20013e3c:	87ba                	mv	a5,a4
20013e3e:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:46
20013e40:	84c2                	mv	s1,a6
20013e42:	bda1                	j	20013c9a <__adddf3+0x42c>
20013e44:	4781                	li	a5,0
20013e46:	4501                	li	a0,0
20013e48:	4901                	li	s2,0
20013e4a:	bf41                	j	20013dda <__adddf3+0x56c>
20013e4c:	4781                	li	a5,0
20013e4e:	bfed                	j	20013e48 <__adddf3+0x5da>
20013e50:	4501                	li	a0,0
20013e52:	4901                	li	s2,0
20013e54:	004007b7          	lui	a5,0x400
20013e58:	b19d                	j	20013abe <__adddf3+0x250>
20013e5a:	4781                	li	a5,0
20013e5c:	4501                	li	a0,0
20013e5e:	bf59                	j	20013df4 <__adddf3+0x586>

20013e60 <__divdf3>:
__divdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20013e60:	7179                	addi	sp,sp,-48
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20013e62:	0145d813          	srli	a6,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20013e66:	d226                	sw	s1,36(sp)
20013e68:	ce4e                	sw	s3,28(sp)
20013e6a:	cc52                	sw	s4,24(sp)
20013e6c:	c85a                	sw	s6,16(sp)
20013e6e:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20013e70:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20013e74:	d606                	sw	ra,44(sp)
20013e76:	d422                	sw	s0,40(sp)
20013e78:	d04a                	sw	s2,32(sp)
20013e7a:	ca56                	sw	s5,20(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20013e7c:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20013e80:	8b2a                	mv	s6,a0
20013e82:	8bb2                	mv	s7,a2
20013e84:	8a36                	mv	s4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20013e86:	80b1                	srli	s1,s1,0xc
20013e88:	01f5d993          	srli	s3,a1,0x1f
20013e8c:	08080463          	beqz	a6,20013f14 <__divdf3+0xb4>
20013e90:	7ff00793          	li	a5,2047
20013e94:	0cf80a63          	beq	a6,a5,20013f68 <__divdf3+0x108>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 1)
20013e98:	01d55a93          	srli	s5,a0,0x1d
20013e9c:	048e                	slli	s1,s1,0x3
20013e9e:	009ae4b3          	or	s1,s5,s1
20013ea2:	00800ab7          	lui	s5,0x800
20013ea6:	0154eab3          	or	s5,s1,s5
20013eaa:	00351413          	slli	s0,a0,0x3
20013eae:	c0180913          	addi	s2,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20013eb2:	4b01                	li	s6,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20013eb4:	014a5513          	srli	a0,s4,0x14
20013eb8:	00ca1493          	slli	s1,s4,0xc
20013ebc:	7ff57813          	andi	a6,a0,2047
20013ec0:	80b1                	srli	s1,s1,0xc
20013ec2:	01fa5a13          	srli	s4,s4,0x1f
20013ec6:	0c080463          	beqz	a6,20013f8e <__divdf3+0x12e>
20013eca:	7ff00793          	li	a5,2047
20013ece:	10f80963          	beq	a6,a5,20013fe0 <__divdf3+0x180>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 1)
20013ed2:	00349513          	slli	a0,s1,0x3
20013ed6:	01dbd793          	srli	a5,s7,0x1d
20013eda:	8d5d                	or	a0,a0,a5
20013edc:	008004b7          	lui	s1,0x800
20013ee0:	8cc9                	or	s1,s1,a0
20013ee2:	003b9f13          	slli	t5,s7,0x3
20013ee6:	c0180513          	addi	a0,a6,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20013eea:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20013eec:	002b1713          	slli	a4,s6,0x2
20013ef0:	8f5d                	or	a4,a4,a5
20013ef2:	177d                	addi	a4,a4,-1
20013ef4:	46b9                	li	a3,14
20013ef6:	0149c633          	xor	a2,s3,s4
20013efa:	40a90833          	sub	a6,s2,a0
20013efe:	10e6e363          	bltu	a3,a4,20014004 <__divdf3+0x1a4>
20013f02:	00006697          	auipc	a3,0x6
20013f06:	c1668693          	addi	a3,a3,-1002 # 20019b18 <pow10.2193+0x50>
20013f0a:	070a                	slli	a4,a4,0x2
20013f0c:	9736                	add	a4,a4,a3
20013f0e:	4318                	lw	a4,0(a4)
20013f10:	9736                	add	a4,a4,a3
20013f12:	8702                	jr	a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 2)
20013f14:	00a4eab3          	or	s5,s1,a0
20013f18:	060a8263          	beqz	s5,20013f7c <__divdf3+0x11c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 12)
20013f1c:	c89d                	beqz	s1,20013f52 <__divdf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 16)
20013f1e:	8526                	mv	a0,s1
20013f20:	1d4010ef          	jal	ra,200150f4 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 27)
20013f24:	ff550793          	addi	a5,a0,-11
20013f28:	4771                	li	a4,28
20013f2a:	02f74963          	blt	a4,a5,20013f5c <__divdf3+0xfc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 28)
20013f2e:	4af5                	li	s5,29
20013f30:	ff850413          	addi	s0,a0,-8
20013f34:	40fa8ab3          	sub	s5,s5,a5
20013f38:	008494b3          	sll	s1,s1,s0
20013f3c:	015b5ab3          	srl	s5,s6,s5
20013f40:	009aeab3          	or	s5,s5,s1
20013f44:	008b1433          	sll	s0,s6,s0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20013f48:	c0d00813          	li	a6,-1011
20013f4c:	40a80933          	sub	s2,a6,a0
20013f50:	b78d                	j	20013eb2 <__divdf3+0x52>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 20)
20013f52:	1a2010ef          	jal	ra,200150f4 <__clzsi2>
20013f56:	02050513          	addi	a0,a0,32
20013f5a:	b7e9                	j	20013f24 <__divdf3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 29)
20013f5c:	fd850493          	addi	s1,a0,-40
20013f60:	009b1ab3          	sll	s5,s6,s1
20013f64:	4401                	li	s0,0
20013f66:	b7cd                	j	20013f48 <__divdf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 3)
20013f68:	00a4eab3          	or	s5,s1,a0
20013f6c:	000a8c63          	beqz	s5,20013f84 <__divdf3+0x124>
20013f70:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20013f72:	8aa6                	mv	s5,s1
20013f74:	7ff00913          	li	s2,2047
20013f78:	4b0d                	li	s6,3
20013f7a:	bf2d                	j	20013eb4 <__divdf3+0x54>
20013f7c:	4401                	li	s0,0
20013f7e:	4901                	li	s2,0
20013f80:	4b05                	li	s6,1
20013f82:	bf0d                	j	20013eb4 <__divdf3+0x54>
20013f84:	4401                	li	s0,0
20013f86:	7ff00913          	li	s2,2047
20013f8a:	4b09                	li	s6,2
20013f8c:	b725                	j	20013eb4 <__divdf3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 2)
20013f8e:	0174ef33          	or	t5,s1,s7
20013f92:	060f0063          	beqz	t5,20013ff2 <__divdf3+0x192>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 12)
20013f96:	c88d                	beqz	s1,20013fc8 <__divdf3+0x168>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 16)
20013f98:	8526                	mv	a0,s1
20013f9a:	15a010ef          	jal	ra,200150f4 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 27)
20013f9e:	ff550793          	addi	a5,a0,-11
20013fa2:	4771                	li	a4,28
20013fa4:	02f74863          	blt	a4,a5,20013fd4 <__divdf3+0x174>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 28)
20013fa8:	4775                	li	a4,29
20013faa:	ff850f13          	addi	t5,a0,-8
20013fae:	8f1d                	sub	a4,a4,a5
20013fb0:	01e494b3          	sll	s1,s1,t5
20013fb4:	00ebd733          	srl	a4,s7,a4
20013fb8:	8cd9                	or	s1,s1,a4
20013fba:	01eb9f33          	sll	t5,s7,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20013fbe:	c0d00613          	li	a2,-1011
20013fc2:	40a60533          	sub	a0,a2,a0
20013fc6:	b715                	j	20013eea <__divdf3+0x8a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 20)
20013fc8:	855e                	mv	a0,s7
20013fca:	12a010ef          	jal	ra,200150f4 <__clzsi2>
20013fce:	02050513          	addi	a0,a0,32
20013fd2:	b7f1                	j	20013f9e <__divdf3+0x13e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 29)
20013fd4:	fd850493          	addi	s1,a0,-40
20013fd8:	009b94b3          	sll	s1,s7,s1
20013fdc:	4f01                	li	t5,0
20013fde:	b7c5                	j	20013fbe <__divdf3+0x15e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 3)
20013fe0:	0174ef33          	or	t5,s1,s7
20013fe4:	000f0b63          	beqz	t5,20013ffa <__divdf3+0x19a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20013fe8:	8f5e                	mv	t5,s7
20013fea:	7ff00513          	li	a0,2047
20013fee:	478d                	li	a5,3
20013ff0:	bdf5                	j	20013eec <__divdf3+0x8c>
20013ff2:	4481                	li	s1,0
20013ff4:	4501                	li	a0,0
20013ff6:	4785                	li	a5,1
20013ff8:	bdd5                	j	20013eec <__divdf3+0x8c>
20013ffa:	4481                	li	s1,0
20013ffc:	7ff00513          	li	a0,2047
20014000:	4789                	li	a5,2
20014002:	b5ed                	j	20013eec <__divdf3+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 2)
20014004:	0154e663          	bltu	s1,s5,20014010 <__divdf3+0x1b0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 11)
20014008:	2a9a9363          	bne	s5,s1,200142ae <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 12)
2001400c:	2be46163          	bltu	s0,t5,200142ae <__divdf3+0x44e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 14)
20014010:	01fa9693          	slli	a3,s5,0x1f
20014014:	00145713          	srli	a4,s0,0x1
20014018:	01f41793          	slli	a5,s0,0x1f
2001401c:	001ada93          	srli	s5,s5,0x1
20014020:	00e6e433          	or	s0,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 19)
20014024:	00849513          	slli	a0,s1,0x8
20014028:	018f5493          	srli	s1,t5,0x18
2001402c:	8d45                	or	a0,a0,s1
2001402e:	01055e13          	srli	t3,a0,0x10
20014032:	03cad8b3          	divu	a7,s5,t3
20014036:	01051313          	slli	t1,a0,0x10
2001403a:	01035313          	srli	t1,t1,0x10
2001403e:	01045713          	srli	a4,s0,0x10
20014042:	008f1593          	slli	a1,t5,0x8
20014046:	03caf4b3          	remu	s1,s5,t3
2001404a:	8fc6                	mv	t6,a7
2001404c:	031306b3          	mul	a3,t1,a7
20014050:	01049a93          	slli	s5,s1,0x10
20014054:	01576733          	or	a4,a4,s5
20014058:	00d77c63          	bgeu	a4,a3,20014070 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 22)
2001405c:	972a                	add	a4,a4,a0
2001405e:	fff88f93          	addi	t6,a7,-1
20014062:	00a76763          	bltu	a4,a0,20014070 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 24)
20014066:	00d77563          	bgeu	a4,a3,20014070 <__divdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 26)
2001406a:	ffe88f93          	addi	t6,a7,-2
2001406e:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 28)
20014070:	8f15                	sub	a4,a4,a3
20014072:	03c75eb3          	divu	t4,a4,t3
20014076:	0442                	slli	s0,s0,0x10
20014078:	8041                	srli	s0,s0,0x10
2001407a:	03c77733          	remu	a4,a4,t3
2001407e:	86f6                	mv	a3,t4
20014080:	03d308b3          	mul	a7,t1,t4
20014084:	0742                	slli	a4,a4,0x10
20014086:	8f41                	or	a4,a4,s0
20014088:	01177c63          	bgeu	a4,a7,200140a0 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 29)
2001408c:	972a                	add	a4,a4,a0
2001408e:	fffe8693          	addi	a3,t4,-1
20014092:	00a76763          	bltu	a4,a0,200140a0 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 31)
20014096:	01177563          	bgeu	a4,a7,200140a0 <__divdf3+0x240>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 33)
2001409a:	ffee8693          	addi	a3,t4,-2
2001409e:	972a                	add	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 35)
200140a0:	0fc2                	slli	t6,t6,0x10
200140a2:	00dfefb3          	or	t6,t6,a3
200140a6:	66c1                	lui	a3,0x10
200140a8:	41170433          	sub	s0,a4,a7
200140ac:	fff68893          	addi	a7,a3,-1 # ffff <__heap_size+0xf7ff>
200140b0:	010fdf13          	srli	t5,t6,0x10
200140b4:	011ff733          	and	a4,t6,a7
200140b8:	0105de93          	srli	t4,a1,0x10
200140bc:	0115f8b3          	and	a7,a1,a7
200140c0:	031703b3          	mul	t2,a4,a7
200140c4:	031f04b3          	mul	s1,t5,a7
200140c8:	02ee8733          	mul	a4,t4,a4
200140cc:	03df02b3          	mul	t0,t5,t4
200140d0:	00970f33          	add	t5,a4,s1
200140d4:	0103d713          	srli	a4,t2,0x10
200140d8:	977a                	add	a4,a4,t5
200140da:	00977363          	bgeu	a4,s1,200140e0 <__divdf3+0x280>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 36)
200140de:	92b6                	add	t0,t0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 38)
200140e0:	01075f13          	srli	t5,a4,0x10
200140e4:	9f16                	add	t5,t5,t0
200140e6:	62c1                	lui	t0,0x10
200140e8:	12fd                	addi	t0,t0,-1
200140ea:	005776b3          	and	a3,a4,t0
200140ee:	06c2                	slli	a3,a3,0x10
200140f0:	0053f3b3          	and	t2,t2,t0
200140f4:	969e                	add	a3,a3,t2
200140f6:	01e46763          	bltu	s0,t5,20014104 <__divdf3+0x2a4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 40)
200140fa:	84fe                	mv	s1,t6
200140fc:	03e41e63          	bne	s0,t5,20014138 <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 41)
20014100:	02d7fc63          	bgeu	a5,a3,20014138 <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 43)
20014104:	97ae                	add	a5,a5,a1
20014106:	00b7b733          	sltu	a4,a5,a1
2001410a:	972a                	add	a4,a4,a0
2001410c:	943a                	add	s0,s0,a4
2001410e:	ffff8493          	addi	s1,t6,-1
20014112:	00856663          	bltu	a0,s0,2001411e <__divdf3+0x2be>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 46)
20014116:	02851163          	bne	a0,s0,20014138 <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 47)
2001411a:	00b7ef63          	bltu	a5,a1,20014138 <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 49)
2001411e:	01e46663          	bltu	s0,t5,2001412a <__divdf3+0x2ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 52)
20014122:	008f1b63          	bne	t5,s0,20014138 <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 53)
20014126:	00d7f963          	bgeu	a5,a3,20014138 <__divdf3+0x2d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 55)
2001412a:	97ae                	add	a5,a5,a1
2001412c:	00b7b733          	sltu	a4,a5,a1
20014130:	972a                	add	a4,a4,a0
20014132:	ffef8493          	addi	s1,t6,-2
20014136:	943a                	add	s0,s0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 57)
20014138:	40d786b3          	sub	a3,a5,a3
2001413c:	41e40433          	sub	s0,s0,t5
20014140:	00d7b7b3          	sltu	a5,a5,a3
20014144:	8c1d                	sub	s0,s0,a5
20014146:	5f7d                	li	t5,-1
20014148:	0e850563          	beq	a0,s0,20014232 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 59)
2001414c:	03c45f33          	divu	t5,s0,t3
20014150:	0106d713          	srli	a4,a3,0x10
20014154:	03c47433          	remu	s0,s0,t3
20014158:	03e307b3          	mul	a5,t1,t5
2001415c:	0442                	slli	s0,s0,0x10
2001415e:	8c59                	or	s0,s0,a4
20014160:	877a                	mv	a4,t5
20014162:	00f47c63          	bgeu	s0,a5,2001417a <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 61)
20014166:	942a                	add	s0,s0,a0
20014168:	ffff0713          	addi	a4,t5,-1
2001416c:	00a46763          	bltu	s0,a0,2001417a <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 63)
20014170:	00f47563          	bgeu	s0,a5,2001417a <__divdf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 65)
20014174:	ffef0713          	addi	a4,t5,-2
20014178:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 67)
2001417a:	8c1d                	sub	s0,s0,a5
2001417c:	03c45f33          	divu	t5,s0,t3
20014180:	06c2                	slli	a3,a3,0x10
20014182:	82c1                	srli	a3,a3,0x10
20014184:	03c47433          	remu	s0,s0,t3
20014188:	87fa                	mv	a5,t5
2001418a:	03e30333          	mul	t1,t1,t5
2001418e:	0442                	slli	s0,s0,0x10
20014190:	8c55                	or	s0,s0,a3
20014192:	00647c63          	bgeu	s0,t1,200141aa <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 68)
20014196:	942a                	add	s0,s0,a0
20014198:	ffff0793          	addi	a5,t5,-1
2001419c:	00a46763          	bltu	s0,a0,200141aa <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 70)
200141a0:	00647563          	bgeu	s0,t1,200141aa <__divdf3+0x34a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 72)
200141a4:	ffef0793          	addi	a5,t5,-2
200141a8:	942a                	add	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 74)
200141aa:	0742                	slli	a4,a4,0x10
200141ac:	8f5d                	or	a4,a4,a5
200141ae:	01071793          	slli	a5,a4,0x10
200141b2:	83c1                	srli	a5,a5,0x10
200141b4:	40640433          	sub	s0,s0,t1
200141b8:	01075313          	srli	t1,a4,0x10
200141bc:	03178e33          	mul	t3,a5,a7
200141c0:	031308b3          	mul	a7,t1,a7
200141c4:	026e8333          	mul	t1,t4,t1
200141c8:	02fe8eb3          	mul	t4,t4,a5
200141cc:	010e5793          	srli	a5,t3,0x10
200141d0:	9ec6                	add	t4,t4,a7
200141d2:	97f6                	add	a5,a5,t4
200141d4:	0117f463          	bgeu	a5,a7,200141dc <__divdf3+0x37c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 75)
200141d8:	66c1                	lui	a3,0x10
200141da:	9336                	add	t1,t1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 77)
200141dc:	0107d893          	srli	a7,a5,0x10
200141e0:	989a                	add	a7,a7,t1
200141e2:	6341                	lui	t1,0x10
200141e4:	137d                	addi	t1,t1,-1
200141e6:	0067f6b3          	and	a3,a5,t1
200141ea:	06c2                	slli	a3,a3,0x10
200141ec:	006e7e33          	and	t3,t3,t1
200141f0:	96f2                	add	a3,a3,t3
200141f2:	01146663          	bltu	s0,a7,200141fe <__divdf3+0x39e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 79)
200141f6:	19141e63          	bne	s0,a7,20014392 <__divdf3+0x532>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 80)
200141fa:	8f3a                	mv	t5,a4
200141fc:	ca9d                	beqz	a3,20014232 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 82)
200141fe:	942a                	add	s0,s0,a0
20014200:	fff70f13          	addi	t5,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7fe7d3>
20014204:	02a46163          	bltu	s0,a0,20014226 <__divdf3+0x3c6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 88)
20014208:	01146663          	bltu	s0,a7,20014214 <__divdf3+0x3b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 91)
2001420c:	19141263          	bne	s0,a7,20014390 <__divdf3+0x530>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 92)
20014210:	00d5fd63          	bgeu	a1,a3,2001422a <__divdf3+0x3ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 94)
20014214:	00159793          	slli	a5,a1,0x1
20014218:	00b7b5b3          	sltu	a1,a5,a1
2001421c:	952e                	add	a0,a0,a1
2001421e:	ffe70f13          	addi	t5,a4,-2
20014222:	942a                	add	s0,s0,a0
20014224:	85be                	mv	a1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 96)
20014226:	01141463          	bne	s0,a7,2001422e <__divdf3+0x3ce>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 98)
2001422a:	00b68463          	beq	a3,a1,20014232 <__divdf3+0x3d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 99)
2001422e:	001f6f13          	ori	t5,t5,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 2)
20014232:	3ff80713          	addi	a4,a6,1023
20014236:	0ae05763          	blez	a4,200142e4 <__divdf3+0x484>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 6)
2001423a:	007f7793          	andi	a5,t5,7
2001423e:	cf81                	beqz	a5,20014256 <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 8)
20014240:	00ff7793          	andi	a5,t5,15
20014244:	4691                	li	a3,4
20014246:	00d78863          	beq	a5,a3,20014256 <__divdf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 10)
2001424a:	004f0693          	addi	a3,t5,4
2001424e:	01e6bf33          	sltu	t5,a3,t5
20014252:	94fa                	add	s1,s1,t5
20014254:	8f36                	mv	t5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 9)
20014256:	00749793          	slli	a5,s1,0x7
2001425a:	0007d863          	bgez	a5,2001426a <__divdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 24)
2001425e:	ff0007b7          	lui	a5,0xff000
20014262:	17fd                	addi	a5,a5,-1
20014264:	8cfd                	and	s1,s1,a5
20014266:	40080713          	addi	a4,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 26)
2001426a:	7fe00793          	li	a5,2046
2001426e:	10e7c863          	blt	a5,a4,2001437e <__divdf3+0x51e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20014272:	003f5f13          	srli	t5,t5,0x3
20014276:	01d49793          	slli	a5,s1,0x1d
2001427a:	01e7e7b3          	or	a5,a5,t5
2001427e:	0034d513          	srli	a0,s1,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20014282:	0532                	slli	a0,a0,0xc
20014284:	7ff77713          	andi	a4,a4,2047
20014288:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
2001428a:	50b2                	lw	ra,44(sp)
2001428c:	5422                	lw	s0,40(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
2001428e:	8131                	srli	a0,a0,0xc
20014290:	8d59                	or	a0,a0,a4
20014292:	067e                	slli	a2,a2,0x1f
20014294:	00c56733          	or	a4,a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
20014298:	5492                	lw	s1,36(sp)
2001429a:	5902                	lw	s2,32(sp)
2001429c:	49f2                	lw	s3,28(sp)
2001429e:	4a62                	lw	s4,24(sp)
200142a0:	4ad2                	lw	s5,20(sp)
200142a2:	4b42                	lw	s6,16(sp)
200142a4:	4bb2                	lw	s7,12(sp)
200142a6:	853e                	mv	a0,a5
200142a8:	85ba                	mv	a1,a4
200142aa:	6145                	addi	sp,sp,48
200142ac:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 15)
200142ae:	187d                	addi	a6,a6,-1
200142b0:	4781                	li	a5,0
200142b2:	bb8d                	j	20014024 <__divdf3+0x1c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 8)
200142b4:	864e                	mv	a2,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 8)
200142b6:	84d6                	mv	s1,s5
200142b8:	8f22                	mv	t5,s0
200142ba:	87da                	mv	a5,s6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
200142bc:	4709                	li	a4,2
200142be:	0ce78063          	beq	a5,a4,2001437e <__divdf3+0x51e>
200142c2:	470d                	li	a4,3
200142c4:	0ae78663          	beq	a5,a4,20014370 <__divdf3+0x510>
200142c8:	4705                	li	a4,1
200142ca:	f6e794e3          	bne	a5,a4,20014232 <__divdf3+0x3d2>
200142ce:	4501                	li	a0,0
200142d0:	4781                	li	a5,0
200142d2:	a885                	j	20014342 <__divdf3+0x4e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 5)
200142d4:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 5)
200142d6:	b7dd                	j	200142bc <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
200142d8:	000804b7          	lui	s1,0x80
200142dc:	4f01                	li	t5,0
200142de:	4601                	li	a2,0
200142e0:	478d                	li	a5,3
200142e2:	bfe9                	j	200142bc <__divdf3+0x45c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 59)
200142e4:	4505                	li	a0,1
200142e6:	8d19                	sub	a0,a0,a4
200142e8:	03800793          	li	a5,56
200142ec:	fea7c1e3          	blt	a5,a0,200142ce <__divdf3+0x46e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 60)
200142f0:	47fd                	li	a5,31
200142f2:	04a7ca63          	blt	a5,a0,20014346 <__divdf3+0x4e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 62)
200142f6:	41e80813          	addi	a6,a6,1054
200142fa:	010497b3          	sll	a5,s1,a6
200142fe:	00af5733          	srl	a4,t5,a0
20014302:	010f1833          	sll	a6,t5,a6
20014306:	8fd9                	or	a5,a5,a4
20014308:	01003833          	snez	a6,a6
2001430c:	0107e7b3          	or	a5,a5,a6
20014310:	00a4d533          	srl	a0,s1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 75)
20014314:	0077f713          	andi	a4,a5,7
20014318:	cf01                	beqz	a4,20014330 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 76)
2001431a:	00f7f713          	andi	a4,a5,15
2001431e:	4691                	li	a3,4
20014320:	00d70863          	beq	a4,a3,20014330 <__divdf3+0x4d0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 78)
20014324:	00478713          	addi	a4,a5,4 # ff000004 <metal_segment_heap_target_end+0x7effe7d8>
20014328:	00f737b3          	sltu	a5,a4,a5
2001432c:	953e                	add	a0,a0,a5
2001432e:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 77)
20014330:	00851713          	slli	a4,a0,0x8
20014334:	04074a63          	bltz	a4,20014388 <__divdf3+0x528>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 93)
20014338:	01d51713          	slli	a4,a0,0x1d
2001433c:	838d                	srli	a5,a5,0x3
2001433e:	8fd9                	or	a5,a5,a4
20014340:	810d                	srli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20014342:	4701                	li	a4,0
20014344:	bf3d                	j	20014282 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 63)
20014346:	5785                	li	a5,-31
20014348:	8f99                	sub	a5,a5,a4
2001434a:	02000693          	li	a3,32
2001434e:	00f4d7b3          	srl	a5,s1,a5
20014352:	4701                	li	a4,0
20014354:	00d50663          	beq	a0,a3,20014360 <__divdf3+0x500>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 71)
20014358:	43e80813          	addi	a6,a6,1086
2001435c:	01049733          	sll	a4,s1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 74)
20014360:	01e76f33          	or	t5,a4,t5
20014364:	01e03f33          	snez	t5,t5
20014368:	01e7e7b3          	or	a5,a5,t5
2001436c:	4501                	li	a0,0
2001436e:	b75d                	j	20014314 <__divdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20014370:	00080537          	lui	a0,0x80
20014374:	4781                	li	a5,0
20014376:	7ff00713          	li	a4,2047
2001437a:	4601                	li	a2,0
2001437c:	b719                	j	20014282 <__divdf3+0x422>
2001437e:	4501                	li	a0,0
20014380:	4781                	li	a5,0
20014382:	7ff00713          	li	a4,2047
20014386:	bdf5                	j	20014282 <__divdf3+0x422>
20014388:	4501                	li	a0,0
2001438a:	4781                	li	a5,0
2001438c:	4705                	li	a4,1
2001438e:	bdd5                	j	20014282 <__divdf3+0x422>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20014390:	877a                	mv	a4,t5
20014392:	8f3a                	mv	t5,a4
20014394:	bd69                	j	2001422e <__divdf3+0x3ce>

20014396 <__eqdf2>:
__eqdf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
20014396:	0145d713          	srli	a4,a1,0x14
2001439a:	001007b7          	lui	a5,0x100
2001439e:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
200143a0:	0146d813          	srli	a6,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:36
200143a4:	832a                	mv	t1,a0
200143a6:	8eaa                	mv	t4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
200143a8:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
200143ac:	7ff00513          	li	a0,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
200143b0:	00b7f8b3          	and	a7,a5,a1
200143b4:	8f32                	mv	t5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
200143b6:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:43
200143b8:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:44
200143ba:	7ff87813          	andi	a6,a6,2047
200143be:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
200143c0:	00a71a63          	bne	a4,a0,200143d4 <__eqdf2+0x3e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 18)
200143c4:	0068ee33          	or	t3,a7,t1
200143c8:	4505                	li	a0,1
200143ca:	000e1463          	bnez	t3,200143d2 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
200143ce:	00e80563          	beq	a6,a4,200143d8 <__eqdf2+0x42>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:49
200143d2:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 21)
200143d4:	00a81563          	bne	a6,a0,200143de <__eqdf2+0x48>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 22)
200143d8:	8e5d                	or	a2,a2,a5
200143da:	4505                	li	a0,1
200143dc:	fa7d                	bnez	a2,200143d2 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 73)
200143de:	4505                	li	a0,1
200143e0:	ff0719e3          	bne	a4,a6,200143d2 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 75)
200143e4:	fef897e3          	bne	a7,a5,200143d2 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 77)
200143e8:	ffee95e3          	bne	t4,t5,200143d2 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 79)
200143ec:	00d58863          	beq	a1,a3,200143fc <__eqdf2+0x66>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 80)
200143f0:	f36d                	bnez	a4,200143d2 <__eqdf2+0x3c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45 (discriminator 83)
200143f2:	0068e533          	or	a0,a7,t1
200143f6:	00a03533          	snez	a0,a0
200143fa:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/eqdf2.c:45
200143fc:	4501                	li	a0,0
200143fe:	8082                	ret

20014400 <__gedf2>:
__gedf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20014400:	0145d813          	srli	a6,a1,0x14
20014404:	001007b7          	lui	a5,0x100
20014408:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
2001440a:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
2001440e:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20014412:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
20014416:	00b7f8b3          	and	a7,a5,a1
2001441a:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
2001441c:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:43
2001441e:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:44
20014420:	8e32                	mv	t3,a2
20014422:	7ff77713          	andi	a4,a4,2047
20014426:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20014428:	01d81863          	bne	a6,t4,20014438 <__gedf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 18)
2001442c:	00a8eeb3          	or	t4,a7,a0
20014430:	060e8563          	beqz	t4,2001449a <__gedf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20014434:	55f9                	li	a1,-2
20014436:	a80d                	j	20014468 <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 21)
20014438:	01d71663          	bne	a4,t4,20014444 <__gedf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 22)
2001443c:	00c7eeb3          	or	t4,a5,a2
20014440:	fe0e9ae3          	bnez	t4,20014434 <__gedf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 57)
20014444:	04081d63          	bnez	a6,2001449e <__gedf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 58)
20014448:	00a8e533          	or	a0,a7,a0
2001444c:	00153513          	seqz	a0,a0
20014450:	e319                	bnez	a4,20014456 <__gedf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 64)
20014452:	8e5d                	or	a2,a2,a5
20014454:	ce15                	beqz	a2,20014490 <__gedf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20014456:	e511                	bnez	a0,20014462 <__gedf2+0x62>
20014458:	00d58a63          	beq	a1,a3,2001446c <__gedf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 108)
2001445c:	c985                	beqz	a1,2001448c <__gedf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
2001445e:	55fd                	li	a1,-1
20014460:	a021                	j	20014468 <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 74)
20014462:	55fd                	li	a1,-1
20014464:	c291                	beqz	a3,20014468 <__gedf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20014466:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:49
20014468:	852e                	mv	a0,a1
2001446a:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 87)
2001446c:	ff0748e3          	blt	a4,a6,2001445c <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 93)
20014470:	00e85463          	bge	a6,a4,20014478 <__gedf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 118)
20014474:	f9f5                	bnez	a1,20014468 <__gedf2+0x68>
20014476:	b7e5                	j	2001445e <__gedf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 99)
20014478:	ff17e2e3          	bltu	a5,a7,2001445c <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 105)
2001447c:	00f89c63          	bne	a7,a5,20014494 <__gedf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 106)
20014480:	fc6e6ee3          	bltu	t3,t1,2001445c <__gedf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45 (discriminator 116)
20014484:	ffc368e3          	bltu	t1,t3,20014474 <__gedf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/gedf2.c:45
20014488:	4581                	li	a1,0
2001448a:	bff9                	j	20014468 <__gedf2+0x68>
2001448c:	4585                	li	a1,1
2001448e:	bfe9                	j	20014468 <__gedf2+0x68>
20014490:	fd65                	bnez	a0,20014488 <__gedf2+0x88>
20014492:	b7e9                	j	2001445c <__gedf2+0x5c>
20014494:	fef8e0e3          	bltu	a7,a5,20014474 <__gedf2+0x74>
20014498:	bfc5                	j	20014488 <__gedf2+0x88>
2001449a:	fb0701e3          	beq	a4,a6,2001443c <__gedf2+0x3c>
2001449e:	ff4d                	bnez	a4,20014458 <__gedf2+0x58>
200144a0:	4501                	li	a0,0
200144a2:	bf45                	j	20014452 <__gedf2+0x52>

200144a4 <__ledf2>:
__ledf2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
200144a4:	0145d813          	srli	a6,a1,0x14
200144a8:	001007b7          	lui	a5,0x100
200144ac:	17fd                	addi	a5,a5,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
200144ae:	0146d713          	srli	a4,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
200144b2:	7ff87813          	andi	a6,a6,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
200144b6:	7ff00e93          	li	t4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
200144ba:	00b7f8b3          	and	a7,a5,a1
200144be:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
200144c0:	8ff5                	and	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:43
200144c2:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:44
200144c4:	8e32                	mv	t3,a2
200144c6:	7ff77713          	andi	a4,a4,2047
200144ca:	82fd                	srli	a3,a3,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
200144cc:	01d81863          	bne	a6,t4,200144dc <__ledf2+0x38>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 18)
200144d0:	00a8eeb3          	or	t4,a7,a0
200144d4:	060e8563          	beqz	t4,2001453e <__ledf2+0x9a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
200144d8:	4589                	li	a1,2
200144da:	a80d                	j	2001450c <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 21)
200144dc:	01d71663          	bne	a4,t4,200144e8 <__ledf2+0x44>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 22)
200144e0:	00c7eeb3          	or	t4,a5,a2
200144e4:	fe0e9ae3          	bnez	t4,200144d8 <__ledf2+0x34>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 57)
200144e8:	04081d63          	bnez	a6,20014542 <__ledf2+0x9e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 58)
200144ec:	00a8e533          	or	a0,a7,a0
200144f0:	00153513          	seqz	a0,a0
200144f4:	e319                	bnez	a4,200144fa <__ledf2+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 64)
200144f6:	8e5d                	or	a2,a2,a5
200144f8:	ce15                	beqz	a2,20014534 <__ledf2+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
200144fa:	e511                	bnez	a0,20014506 <__ledf2+0x62>
200144fc:	00d58a63          	beq	a1,a3,20014510 <__ledf2+0x6c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 108)
20014500:	c985                	beqz	a1,20014530 <__ledf2+0x8c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
20014502:	55fd                	li	a1,-1
20014504:	a021                	j	2001450c <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 74)
20014506:	55fd                	li	a1,-1
20014508:	c291                	beqz	a3,2001450c <__ledf2+0x68>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2001450a:	85b6                	mv	a1,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:49
2001450c:	852e                	mv	a0,a1
2001450e:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 87)
20014510:	ff0748e3          	blt	a4,a6,20014500 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 93)
20014514:	00e85463          	bge	a6,a4,2001451c <__ledf2+0x78>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 118)
20014518:	f9f5                	bnez	a1,2001450c <__ledf2+0x68>
2001451a:	b7e5                	j	20014502 <__ledf2+0x5e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 99)
2001451c:	ff17e2e3          	bltu	a5,a7,20014500 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 105)
20014520:	00f89c63          	bne	a7,a5,20014538 <__ledf2+0x94>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 106)
20014524:	fc6e6ee3          	bltu	t3,t1,20014500 <__ledf2+0x5c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45 (discriminator 116)
20014528:	ffc368e3          	bltu	t1,t3,20014518 <__ledf2+0x74>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/ledf2.c:45
2001452c:	4581                	li	a1,0
2001452e:	bff9                	j	2001450c <__ledf2+0x68>
20014530:	4585                	li	a1,1
20014532:	bfe9                	j	2001450c <__ledf2+0x68>
20014534:	fd65                	bnez	a0,2001452c <__ledf2+0x88>
20014536:	b7e9                	j	20014500 <__ledf2+0x5c>
20014538:	fef8e0e3          	bltu	a7,a5,20014518 <__ledf2+0x74>
2001453c:	bfc5                	j	2001452c <__ledf2+0x88>
2001453e:	fb0701e3          	beq	a4,a6,200144e0 <__ledf2+0x3c>
20014542:	ff4d                	bnez	a4,200144fc <__ledf2+0x58>
20014544:	4501                	li	a0,0
20014546:	bf45                	j	200144f6 <__ledf2+0x52>

20014548 <__muldf3>:
__muldf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20014548:	7179                	addi	sp,sp,-48
2001454a:	ce4e                	sw	s3,28(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
2001454c:	0145d993          	srli	s3,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20014550:	d422                	sw	s0,40(sp)
20014552:	d226                	sw	s1,36(sp)
20014554:	cc52                	sw	s4,24(sp)
20014556:	ca56                	sw	s5,20(sp)
20014558:	c85a                	sw	s6,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
2001455a:	00c59493          	slli	s1,a1,0xc
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
2001455e:	d606                	sw	ra,44(sp)
20014560:	d04a                	sw	s2,32(sp)
20014562:	c65e                	sw	s7,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20014564:	7ff9f993          	andi	s3,s3,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20014568:	842a                	mv	s0,a0
2001456a:	8b32                	mv	s6,a2
2001456c:	8ab6                	mv	s5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
2001456e:	80b1                	srli	s1,s1,0xc
20014570:	01f5da13          	srli	s4,a1,0x1f
20014574:	08098163          	beqz	s3,200145f6 <__muldf3+0xae>
20014578:	7ff00793          	li	a5,2047
2001457c:	0cf98563          	beq	s3,a5,20014646 <__muldf3+0xfe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 1)
20014580:	01d55793          	srli	a5,a0,0x1d
20014584:	048e                	slli	s1,s1,0x3
20014586:	8cdd                	or	s1,s1,a5
20014588:	008007b7          	lui	a5,0x800
2001458c:	8cdd                	or	s1,s1,a5
2001458e:	00351913          	slli	s2,a0,0x3
20014592:	c0198993          	addi	s3,s3,-1023
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
20014596:	4b81                	li	s7,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
20014598:	014ad513          	srli	a0,s5,0x14
2001459c:	00ca9413          	slli	s0,s5,0xc
200145a0:	7ff57513          	andi	a0,a0,2047
200145a4:	8031                	srli	s0,s0,0xc
200145a6:	01fada93          	srli	s5,s5,0x1f
200145aa:	c161                	beqz	a0,2001466a <__muldf3+0x122>
200145ac:	7ff00793          	li	a5,2047
200145b0:	10f50563          	beq	a0,a5,200146ba <__muldf3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 1)
200145b4:	01db5793          	srli	a5,s6,0x1d
200145b8:	040e                	slli	s0,s0,0x3
200145ba:	8c5d                	or	s0,s0,a5
200145bc:	008007b7          	lui	a5,0x800
200145c0:	8c5d                	or	s0,s0,a5
200145c2:	c0150513          	addi	a0,a0,-1023 # 7fc01 <__heap_size+0x7f401>
200145c6:	003b1793          	slli	a5,s6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
200145ca:	4701                	li	a4,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
200145cc:	002b9693          	slli	a3,s7,0x2
200145d0:	8ed9                	or	a3,a3,a4
200145d2:	954e                	add	a0,a0,s3
200145d4:	16fd                	addi	a3,a3,-1
200145d6:	45b9                	li	a1,14
200145d8:	015a4633          	xor	a2,s4,s5
200145dc:	00150813          	addi	a6,a0,1
200145e0:	0ed5ee63          	bltu	a1,a3,200146dc <__muldf3+0x194>
200145e4:	00005597          	auipc	a1,0x5
200145e8:	57058593          	addi	a1,a1,1392 # 20019b54 <pow10.2193+0x8c>
200145ec:	068a                	slli	a3,a3,0x2
200145ee:	96ae                	add	a3,a3,a1
200145f0:	4294                	lw	a3,0(a3)
200145f2:	96ae                	add	a3,a3,a1
200145f4:	8682                	jr	a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 2)
200145f6:	00a4e933          	or	s2,s1,a0
200145fa:	04090f63          	beqz	s2,20014658 <__muldf3+0x110>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 12)
200145fe:	c88d                	beqz	s1,20014630 <__muldf3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 16)
20014600:	8526                	mv	a0,s1
20014602:	2f3000ef          	jal	ra,200150f4 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 27)
20014606:	ff550713          	addi	a4,a0,-11
2001460a:	47f1                	li	a5,28
2001460c:	02e7c763          	blt	a5,a4,2001463a <__muldf3+0xf2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 28)
20014610:	47f5                	li	a5,29
20014612:	ff850913          	addi	s2,a0,-8
20014616:	8f99                	sub	a5,a5,a4
20014618:	012494b3          	sll	s1,s1,s2
2001461c:	00f457b3          	srl	a5,s0,a5
20014620:	8cdd                	or	s1,s1,a5
20014622:	01241933          	sll	s2,s0,s2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
20014626:	c0d00993          	li	s3,-1011
2001462a:	40a989b3          	sub	s3,s3,a0
2001462e:	b7a5                	j	20014596 <__muldf3+0x4e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 20)
20014630:	2c5000ef          	jal	ra,200150f4 <__clzsi2>
20014634:	02050513          	addi	a0,a0,32
20014638:	b7f9                	j	20014606 <__muldf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 29)
2001463a:	fd850493          	addi	s1,a0,-40
2001463e:	009414b3          	sll	s1,s0,s1
20014642:	4901                	li	s2,0
20014644:	b7cd                	j	20014626 <__muldf3+0xde>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 3)
20014646:	00a4e933          	or	s2,s1,a0
2001464a:	00090b63          	beqz	s2,20014660 <__muldf3+0x118>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
2001464e:	892a                	mv	s2,a0
20014650:	7ff00993          	li	s3,2047
20014654:	4b8d                	li	s7,3
20014656:	b789                	j	20014598 <__muldf3+0x50>
20014658:	4481                	li	s1,0
2001465a:	4981                	li	s3,0
2001465c:	4b85                	li	s7,1
2001465e:	bf2d                	j	20014598 <__muldf3+0x50>
20014660:	4481                	li	s1,0
20014662:	7ff00993          	li	s3,2047
20014666:	4b89                	li	s7,2
20014668:	bf05                	j	20014598 <__muldf3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 2)
2001466a:	016467b3          	or	a5,s0,s6
2001466e:	cfb1                	beqz	a5,200146ca <__muldf3+0x182>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 12)
20014670:	c80d                	beqz	s0,200146a2 <__muldf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 16)
20014672:	8522                	mv	a0,s0
20014674:	281000ef          	jal	ra,200150f4 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 27)
20014678:	ff550693          	addi	a3,a0,-11
2001467c:	47f1                	li	a5,28
2001467e:	02d7c863          	blt	a5,a3,200146ae <__muldf3+0x166>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 28)
20014682:	4775                	li	a4,29
20014684:	ff850793          	addi	a5,a0,-8
20014688:	8f15                	sub	a4,a4,a3
2001468a:	00f41433          	sll	s0,s0,a5
2001468e:	00eb5733          	srl	a4,s6,a4
20014692:	8c59                	or	s0,s0,a4
20014694:	00fb17b3          	sll	a5,s6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
20014698:	c0d00713          	li	a4,-1011
2001469c:	40a70533          	sub	a0,a4,a0
200146a0:	b72d                	j	200145ca <__muldf3+0x82>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 20)
200146a2:	855a                	mv	a0,s6
200146a4:	251000ef          	jal	ra,200150f4 <__clzsi2>
200146a8:	02050513          	addi	a0,a0,32
200146ac:	b7f1                	j	20014678 <__muldf3+0x130>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 29)
200146ae:	fd850413          	addi	s0,a0,-40
200146b2:	008b1433          	sll	s0,s6,s0
200146b6:	4781                	li	a5,0
200146b8:	b7c5                	j	20014698 <__muldf3+0x150>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 3)
200146ba:	016467b3          	or	a5,s0,s6
200146be:	cb91                	beqz	a5,200146d2 <__muldf3+0x18a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
200146c0:	87da                	mv	a5,s6
200146c2:	7ff00513          	li	a0,2047
200146c6:	470d                	li	a4,3
200146c8:	b711                	j	200145cc <__muldf3+0x84>
200146ca:	4401                	li	s0,0
200146cc:	4501                	li	a0,0
200146ce:	4705                	li	a4,1
200146d0:	bdf5                	j	200145cc <__muldf3+0x84>
200146d2:	4401                	li	s0,0
200146d4:	7ff00513          	li	a0,2047
200146d8:	4709                	li	a4,2
200146da:	bdcd                	j	200145cc <__muldf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 2)
200146dc:	6f41                	lui	t5,0x10
200146de:	ffff0e93          	addi	t4,t5,-1 # ffff <__heap_size+0xf7ff>
200146e2:	01095713          	srli	a4,s2,0x10
200146e6:	0107d893          	srli	a7,a5,0x10
200146ea:	01d97933          	and	s2,s2,t4
200146ee:	01d7f7b3          	and	a5,a5,t4
200146f2:	032885b3          	mul	a1,a7,s2
200146f6:	032786b3          	mul	a3,a5,s2
200146fa:	02f70fb3          	mul	t6,a4,a5
200146fe:	01f58333          	add	t1,a1,t6
20014702:	0106d593          	srli	a1,a3,0x10
20014706:	959a                	add	a1,a1,t1
20014708:	03170e33          	mul	t3,a4,a7
2001470c:	01f5f363          	bgeu	a1,t6,20014712 <__muldf3+0x1ca>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 9)
20014710:	9e7a                	add	t3,t3,t5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 11)
20014712:	0105d393          	srli	t2,a1,0x10
20014716:	01d5f5b3          	and	a1,a1,t4
2001471a:	01d6f6b3          	and	a3,a3,t4
2001471e:	01045f13          	srli	t5,s0,0x10
20014722:	01d472b3          	and	t0,s0,t4
20014726:	05c2                	slli	a1,a1,0x10
20014728:	95b6                	add	a1,a1,a3
2001472a:	02570eb3          	mul	t4,a4,t0
2001472e:	032286b3          	mul	a3,t0,s2
20014732:	032f0933          	mul	s2,t5,s2
20014736:	01d90333          	add	t1,s2,t4
2001473a:	0106d913          	srli	s2,a3,0x10
2001473e:	991a                	add	s2,s2,t1
20014740:	03e70733          	mul	a4,a4,t5
20014744:	01d97463          	bgeu	s2,t4,2001474c <__muldf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 12)
20014748:	6341                	lui	t1,0x10
2001474a:	971a                	add	a4,a4,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 14)
2001474c:	01095e93          	srli	t4,s2,0x10
20014750:	69c1                	lui	s3,0x10
20014752:	9eba                	add	t4,t4,a4
20014754:	fff98713          	addi	a4,s3,-1 # ffff <__heap_size+0xf7ff>
20014758:	00e97933          	and	s2,s2,a4
2001475c:	8ef9                	and	a3,a3,a4
2001475e:	0104d413          	srli	s0,s1,0x10
20014762:	0942                	slli	s2,s2,0x10
20014764:	8cf9                	and	s1,s1,a4
20014766:	9936                	add	s2,s2,a3
20014768:	02978733          	mul	a4,a5,s1
2001476c:	93ca                	add	t2,t2,s2
2001476e:	02f40333          	mul	t1,s0,a5
20014772:	029886b3          	mul	a3,a7,s1
20014776:	028887b3          	mul	a5,a7,s0
2001477a:	006688b3          	add	a7,a3,t1
2001477e:	01075693          	srli	a3,a4,0x10
20014782:	96c6                	add	a3,a3,a7
20014784:	0066f363          	bgeu	a3,t1,2001478a <__muldf3+0x242>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 15)
20014788:	97ce                	add	a5,a5,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 17)
2001478a:	0106d893          	srli	a7,a3,0x10
2001478e:	69c1                	lui	s3,0x10
20014790:	00f88fb3          	add	t6,a7,a5
20014794:	fff98793          	addi	a5,s3,-1 # ffff <__heap_size+0xf7ff>
20014798:	8efd                	and	a3,a3,a5
2001479a:	8f7d                	and	a4,a4,a5
2001479c:	029288b3          	mul	a7,t0,s1
200147a0:	06c2                	slli	a3,a3,0x10
200147a2:	96ba                	add	a3,a3,a4
200147a4:	025407b3          	mul	a5,s0,t0
200147a8:	029f04b3          	mul	s1,t5,s1
200147ac:	028f0333          	mul	t1,t5,s0
200147b0:	94be                	add	s1,s1,a5
200147b2:	0108d413          	srli	s0,a7,0x10
200147b6:	94a2                	add	s1,s1,s0
200147b8:	00f4f363          	bgeu	s1,a5,200147be <__muldf3+0x276>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 18)
200147bc:	934e                	add	t1,t1,s3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 20)
200147be:	67c1                	lui	a5,0x10
200147c0:	17fd                	addi	a5,a5,-1
200147c2:	00f4f733          	and	a4,s1,a5
200147c6:	00f8f8b3          	and	a7,a7,a5
200147ca:	0742                	slli	a4,a4,0x10
200147cc:	9e1e                	add	t3,t3,t2
200147ce:	9746                	add	a4,a4,a7
200147d0:	012e3933          	sltu	s2,t3,s2
200147d4:	9776                	add	a4,a4,t4
200147d6:	01270433          	add	s0,a4,s2
200147da:	9e36                	add	t3,t3,a3
200147dc:	00de36b3          	sltu	a3,t3,a3
200147e0:	01f408b3          	add	a7,s0,t6
200147e4:	00d88f33          	add	t5,a7,a3
200147e8:	01d73733          	sltu	a4,a4,t4
200147ec:	01243433          	sltu	s0,s0,s2
200147f0:	8c59                	or	s0,s0,a4
200147f2:	80c1                	srli	s1,s1,0x10
200147f4:	01f8b8b3          	sltu	a7,a7,t6
200147f8:	00df36b3          	sltu	a3,t5,a3
200147fc:	9426                	add	s0,s0,s1
200147fe:	00d8e6b3          	or	a3,a7,a3
20014802:	9436                	add	s0,s0,a3
20014804:	941a                	add	s0,s0,t1
20014806:	017f5793          	srli	a5,t5,0x17
2001480a:	0426                	slli	s0,s0,0x9
2001480c:	8c5d                	or	s0,s0,a5
2001480e:	009e1793          	slli	a5,t3,0x9
20014812:	8fcd                	or	a5,a5,a1
20014814:	00f037b3          	snez	a5,a5
20014818:	017e5e13          	srli	t3,t3,0x17
2001481c:	009f1713          	slli	a4,t5,0x9
20014820:	01c7e7b3          	or	a5,a5,t3
20014824:	8fd9                	or	a5,a5,a4
20014826:	00741713          	slli	a4,s0,0x7
2001482a:	0a075863          	bgez	a4,200148da <__muldf3+0x392>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 38)
2001482e:	0017d713          	srli	a4,a5,0x1
20014832:	8b85                	andi	a5,a5,1
20014834:	8fd9                	or	a5,a5,a4
20014836:	01f41713          	slli	a4,s0,0x1f
2001483a:	8fd9                	or	a5,a5,a4
2001483c:	8005                	srli	s0,s0,0x1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 2)
2001483e:	3ff80693          	addi	a3,a6,1023
20014842:	08d05e63          	blez	a3,200148de <__muldf3+0x396>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 6)
20014846:	0077f713          	andi	a4,a5,7
2001484a:	cf01                	beqz	a4,20014862 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 8)
2001484c:	00f7f713          	andi	a4,a5,15
20014850:	4591                	li	a1,4
20014852:	00b70863          	beq	a4,a1,20014862 <__muldf3+0x31a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 10)
20014856:	00478713          	addi	a4,a5,4 # 10004 <__heap_size+0xf804>
2001485a:	00f737b3          	sltu	a5,a4,a5
2001485e:	943e                	add	s0,s0,a5
20014860:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 9)
20014862:	00741713          	slli	a4,s0,0x7
20014866:	00075863          	bgez	a4,20014876 <__muldf3+0x32e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 24)
2001486a:	ff000737          	lui	a4,0xff000
2001486e:	177d                	addi	a4,a4,-1
20014870:	8c79                	and	s0,s0,a4
20014872:	40080693          	addi	a3,a6,1024
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 26)
20014876:	7fe00713          	li	a4,2046
2001487a:	0ed74c63          	blt	a4,a3,20014972 <__muldf3+0x42a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
2001487e:	0037d713          	srli	a4,a5,0x3
20014882:	01d41793          	slli	a5,s0,0x1d
20014886:	8fd9                	or	a5,a5,a4
20014888:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 120)
2001488a:	0432                	slli	s0,s0,0xc
2001488c:	7ff6f713          	andi	a4,a3,2047
20014890:	0752                	slli	a4,a4,0x14
20014892:	8031                	srli	s0,s0,0xc
20014894:	8c59                	or	s0,s0,a4
20014896:	067e                	slli	a2,a2,0x1f
20014898:	00c46733          	or	a4,s0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:51 (discriminator 120)
2001489c:	50b2                	lw	ra,44(sp)
2001489e:	5422                	lw	s0,40(sp)
200148a0:	5492                	lw	s1,36(sp)
200148a2:	5902                	lw	s2,32(sp)
200148a4:	49f2                	lw	s3,28(sp)
200148a6:	4a62                	lw	s4,24(sp)
200148a8:	4ad2                	lw	s5,20(sp)
200148aa:	4b42                	lw	s6,16(sp)
200148ac:	4bb2                	lw	s7,12(sp)
200148ae:	853e                	mv	a0,a5
200148b0:	85ba                	mv	a1,a4
200148b2:	6145                	addi	sp,sp,48
200148b4:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 7)
200148b6:	8652                	mv	a2,s4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 7)
200148b8:	8426                	mv	s0,s1
200148ba:	87ca                	mv	a5,s2
200148bc:	875e                	mv	a4,s7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
200148be:	4689                	li	a3,2
200148c0:	0ad70963          	beq	a4,a3,20014972 <__muldf3+0x42a>
200148c4:	468d                	li	a3,3
200148c6:	08d70f63          	beq	a4,a3,20014964 <__muldf3+0x41c>
200148ca:	4685                	li	a3,1
200148cc:	f6d719e3          	bne	a4,a3,2001483e <__muldf3+0x2f6>
200148d0:	4401                	li	s0,0
200148d2:	4781                	li	a5,0
200148d4:	a09d                	j	2001493a <__muldf3+0x3f2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 4)
200148d6:	8656                	mv	a2,s5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 4)
200148d8:	b7dd                	j	200148be <__muldf3+0x376>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
200148da:	882a                	mv	a6,a0
200148dc:	b78d                	j	2001483e <__muldf3+0x2f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 59)
200148de:	4585                	li	a1,1
200148e0:	8d95                	sub	a1,a1,a3
200148e2:	03800713          	li	a4,56
200148e6:	feb745e3          	blt	a4,a1,200148d0 <__muldf3+0x388>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 60)
200148ea:	477d                	li	a4,31
200148ec:	04b74963          	blt	a4,a1,2001493e <__muldf3+0x3f6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 62)
200148f0:	41e80813          	addi	a6,a6,1054
200148f4:	01041733          	sll	a4,s0,a6
200148f8:	00b7d6b3          	srl	a3,a5,a1
200148fc:	010797b3          	sll	a5,a5,a6
20014900:	8f55                	or	a4,a4,a3
20014902:	00f037b3          	snez	a5,a5
20014906:	8fd9                	or	a5,a5,a4
20014908:	00b45433          	srl	s0,s0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 75)
2001490c:	0077f713          	andi	a4,a5,7
20014910:	cf01                	beqz	a4,20014928 <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 76)
20014912:	00f7f713          	andi	a4,a5,15
20014916:	4691                	li	a3,4
20014918:	00d70863          	beq	a4,a3,20014928 <__muldf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 78)
2001491c:	00478713          	addi	a4,a5,4
20014920:	00f737b3          	sltu	a5,a4,a5
20014924:	943e                	add	s0,s0,a5
20014926:	87ba                	mv	a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 77)
20014928:	00841713          	slli	a4,s0,0x8
2001492c:	04074863          	bltz	a4,2001497c <__muldf3+0x434>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 93)
20014930:	01d41713          	slli	a4,s0,0x1d
20014934:	838d                	srli	a5,a5,0x3
20014936:	8fd9                	or	a5,a5,a4
20014938:	800d                	srli	s0,s0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
2001493a:	4681                	li	a3,0
2001493c:	b7b9                	j	2001488a <__muldf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 63)
2001493e:	5705                	li	a4,-31
20014940:	8f15                	sub	a4,a4,a3
20014942:	02000513          	li	a0,32
20014946:	00e45733          	srl	a4,s0,a4
2001494a:	4681                	li	a3,0
2001494c:	00a58663          	beq	a1,a0,20014958 <__muldf3+0x410>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 71)
20014950:	43e80813          	addi	a6,a6,1086
20014954:	010416b3          	sll	a3,s0,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 74)
20014958:	8fd5                	or	a5,a5,a3
2001495a:	00f037b3          	snez	a5,a5
2001495e:	8fd9                	or	a5,a5,a4
20014960:	4401                	li	s0,0
20014962:	b76d                	j	2001490c <__muldf3+0x3c4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20014964:	00080437          	lui	s0,0x80
20014968:	4781                	li	a5,0
2001496a:	7ff00693          	li	a3,2047
2001496e:	4601                	li	a2,0
20014970:	bf29                	j	2001488a <__muldf3+0x342>
20014972:	4401                	li	s0,0
20014974:	4781                	li	a5,0
20014976:	7ff00693          	li	a3,2047
2001497a:	bf01                	j	2001488a <__muldf3+0x342>
2001497c:	4401                	li	s0,0
2001497e:	4781                	li	a5,0
20014980:	4685                	li	a3,1
20014982:	b721                	j	2001488a <__muldf3+0x342>

20014984 <__subdf3>:
__subdf3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20014984:	00100837          	lui	a6,0x100
20014988:	187d                	addi	a6,a6,-1
2001498a:	00b878b3          	and	a7,a6,a1
2001498e:	088e                	slli	a7,a7,0x3
20014990:	01d55793          	srli	a5,a0,0x1d
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
20014994:	1101                	addi	sp,sp,-32
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
20014996:	0145d713          	srli	a4,a1,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
2001499a:	00d87833          	and	a6,a6,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
2001499e:	0117e7b3          	or	a5,a5,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
200149a2:	0146d893          	srli	a7,a3,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
200149a6:	ca26                	sw	s1,20(sp)
200149a8:	c84a                	sw	s2,16(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
200149aa:	7ff77493          	andi	s1,a4,2047
200149ae:	01f5d913          	srli	s2,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
200149b2:	01d65713          	srli	a4,a2,0x1d
200149b6:	080e                	slli	a6,a6,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:36
200149b8:	ce06                	sw	ra,28(sp)
200149ba:	cc22                	sw	s0,24(sp)
200149bc:	c64e                	sw	s3,12(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
200149be:	7ff8f893          	andi	a7,a7,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
200149c2:	7ff00593          	li	a1,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:44
200149c6:	050e                	slli	a0,a0,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
200149c8:	82fd                	srli	a3,a3,0x1f
200149ca:	01076733          	or	a4,a4,a6
200149ce:	060e                	slli	a2,a2,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
200149d0:	00b89563          	bne	a7,a1,200149da <__subdf3+0x56>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 2)
200149d4:	00c765b3          	or	a1,a4,a2
200149d8:	e199                	bnez	a1,200149de <__subdf3+0x5a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 3)
200149da:	0016c693          	xori	a3,a3,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 11)
200149de:	41148833          	sub	a6,s1,a7
200149e2:	23269363          	bne	a3,s2,20014c08 <__subdf3+0x284>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 12)
200149e6:	0f005c63          	blez	a6,20014ade <__subdf3+0x15a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 14)
200149ea:	04089563          	bnez	a7,20014a34 <__subdf3+0xb0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 16)
200149ee:	00c766b3          	or	a3,a4,a2
200149f2:	c28d                	beqz	a3,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 19)
200149f4:	fff48813          	addi	a6,s1,-1 # 7ffff <__heap_size+0x7f7ff>
200149f8:	00081a63          	bnez	a6,20014a0c <__subdf3+0x88>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 28)
200149fc:	962a                	add	a2,a2,a0
200149fe:	00a63533          	sltu	a0,a2,a0
20014a02:	97ba                	add	a5,a5,a4
20014a04:	97aa                	add	a5,a5,a0
20014a06:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 85)
20014a08:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
20014a0a:	a895                	j	20014a7e <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 29)
20014a0c:	7ff00693          	li	a3,2047
20014a10:	02d49963          	bne	s1,a3,20014a42 <__subdf3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 422)
20014a14:	00757713          	andi	a4,a0,7
20014a18:	4e070063          	beqz	a4,20014ef8 <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 37)
20014a1c:	00f57713          	andi	a4,a0,15
20014a20:	4691                	li	a3,4
20014a22:	4cd70b63          	beq	a4,a3,20014ef8 <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 44)
20014a26:	00450693          	addi	a3,a0,4
20014a2a:	00a6b533          	sltu	a0,a3,a0
20014a2e:	97aa                	add	a5,a5,a0
20014a30:	8536                	mv	a0,a3
20014a32:	a1d9                	j	20014ef8 <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 17)
20014a34:	7ff00693          	li	a3,2047
20014a38:	fcd48ee3          	beq	s1,a3,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 43)
20014a3c:	008006b7          	lui	a3,0x800
20014a40:	8f55                	or	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 52)
20014a42:	03800693          	li	a3,56
20014a46:	0906c863          	blt	a3,a6,20014ad6 <__subdf3+0x152>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 53)
20014a4a:	46fd                	li	a3,31
20014a4c:	0706c063          	blt	a3,a6,20014aac <__subdf3+0x128>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 55)
20014a50:	02000593          	li	a1,32
20014a54:	410585b3          	sub	a1,a1,a6
20014a58:	00b716b3          	sll	a3,a4,a1
20014a5c:	010658b3          	srl	a7,a2,a6
20014a60:	00b61633          	sll	a2,a2,a1
20014a64:	0116e6b3          	or	a3,a3,a7
20014a68:	00c03633          	snez	a2,a2
20014a6c:	8e55                	or	a2,a2,a3
20014a6e:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 69)
20014a72:	962a                	add	a2,a2,a0
20014a74:	973e                	add	a4,a4,a5
20014a76:	00a637b3          	sltu	a5,a2,a0
20014a7a:	97ba                	add	a5,a5,a4
20014a7c:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 127)
20014a7e:	00879713          	slli	a4,a5,0x8
20014a82:	f80759e3          	bgez	a4,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 187)
20014a86:	0485                	addi	s1,s1,1
20014a88:	7ff00713          	li	a4,2047
20014a8c:	46e48463          	beq	s1,a4,20014ef4 <__subdf3+0x570>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20014a90:	ff8006b7          	lui	a3,0xff800
20014a94:	16fd                	addi	a3,a3,-1
20014a96:	8efd                	and	a3,a3,a5
20014a98:	00155593          	srli	a1,a0,0x1
20014a9c:	8905                	andi	a0,a0,1
20014a9e:	01f69793          	slli	a5,a3,0x1f
20014aa2:	8d4d                	or	a0,a0,a1
20014aa4:	8d5d                	or	a0,a0,a5
20014aa6:	0016d793          	srli	a5,a3,0x1
20014aaa:	b7ad                	j	20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 56)
20014aac:	fe080693          	addi	a3,a6,-32 # fffe0 <__heap_size+0xff7e0>
20014ab0:	02000893          	li	a7,32
20014ab4:	00d756b3          	srl	a3,a4,a3
20014ab8:	4581                	li	a1,0
20014aba:	01180863          	beq	a6,a7,20014aca <__subdf3+0x146>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 63)
20014abe:	04000593          	li	a1,64
20014ac2:	41058833          	sub	a6,a1,a6
20014ac6:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 66)
20014aca:	8e4d                	or	a2,a2,a1
20014acc:	00c03633          	snez	a2,a2
20014ad0:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 54)
20014ad2:	4701                	li	a4,0
20014ad4:	bf79                	j	20014a72 <__subdf3+0xee>
20014ad6:	8e59                	or	a2,a2,a4
20014ad8:	00c03633          	snez	a2,a2
20014adc:	bfdd                	j	20014ad2 <__subdf3+0x14e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 15)
20014ade:	0a080b63          	beqz	a6,20014b94 <__subdf3+0x210>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 71)
20014ae2:	409885b3          	sub	a1,a7,s1
20014ae6:	e48d                	bnez	s1,20014b10 <__subdf3+0x18c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 73)
20014ae8:	00a7e6b3          	or	a3,a5,a0
20014aec:	3e068b63          	beqz	a3,20014ee2 <__subdf3+0x55e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 76)
20014af0:	fff58693          	addi	a3,a1,-1
20014af4:	e699                	bnez	a3,20014b02 <__subdf3+0x17e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 85)
20014af6:	9532                	add	a0,a0,a2
20014af8:	97ba                	add	a5,a5,a4
20014afa:	00c53633          	sltu	a2,a0,a2
20014afe:	97b2                	add	a5,a5,a2
20014b00:	b721                	j	20014a08 <__subdf3+0x84>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 86)
20014b02:	7ff00813          	li	a6,2047
20014b06:	01059d63          	bne	a1,a6,20014b20 <__subdf3+0x19c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20014b0a:	87ba                	mv	a5,a4
20014b0c:	8532                	mv	a0,a2
20014b0e:	ace5                	j	20014e06 <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 74)
20014b10:	7ff00693          	li	a3,2047
20014b14:	fed88be3          	beq	a7,a3,20014b0a <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 100)
20014b18:	008006b7          	lui	a3,0x800
20014b1c:	8fd5                	or	a5,a5,a3
20014b1e:	86ae                	mv	a3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 109)
20014b20:	03800593          	li	a1,56
20014b24:	06d5c463          	blt	a1,a3,20014b8c <__subdf3+0x208>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 110)
20014b28:	45fd                	li	a1,31
20014b2a:	02d5cb63          	blt	a1,a3,20014b60 <__subdf3+0x1dc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 112)
20014b2e:	02000813          	li	a6,32
20014b32:	40d80833          	sub	a6,a6,a3
20014b36:	00d55333          	srl	t1,a0,a3
20014b3a:	010795b3          	sll	a1,a5,a6
20014b3e:	01051533          	sll	a0,a0,a6
20014b42:	0065e5b3          	or	a1,a1,t1
20014b46:	00a03533          	snez	a0,a0
20014b4a:	8d4d                	or	a0,a0,a1
20014b4c:	00d7d6b3          	srl	a3,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 126)
20014b50:	9532                	add	a0,a0,a2
20014b52:	00e687b3          	add	a5,a3,a4
20014b56:	00c53633          	sltu	a2,a0,a2
20014b5a:	97b2                	add	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 126)
20014b5c:	84c6                	mv	s1,a7
20014b5e:	b705                	j	20014a7e <__subdf3+0xfa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 113)
20014b60:	fe068593          	addi	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20014b64:	02000313          	li	t1,32
20014b68:	00b7d5b3          	srl	a1,a5,a1
20014b6c:	4801                	li	a6,0
20014b6e:	00668863          	beq	a3,t1,20014b7e <__subdf3+0x1fa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 120)
20014b72:	04000813          	li	a6,64
20014b76:	40d806b3          	sub	a3,a6,a3
20014b7a:	00d79833          	sll	a6,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 123)
20014b7e:	00a86533          	or	a0,a6,a0
20014b82:	00a03533          	snez	a0,a0
20014b86:	8d4d                	or	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 111)
20014b88:	4681                	li	a3,0
20014b8a:	b7d9                	j	20014b50 <__subdf3+0x1cc>
20014b8c:	8d5d                	or	a0,a0,a5
20014b8e:	00a03533          	snez	a0,a0
20014b92:	bfdd                	j	20014b88 <__subdf3+0x204>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 72)
20014b94:	00148693          	addi	a3,s1,1
20014b98:	7fe6f593          	andi	a1,a3,2046
20014b9c:	e5a9                	bnez	a1,20014be6 <__subdf3+0x262>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 128)
20014b9e:	00a7e6b3          	or	a3,a5,a0
20014ba2:	e49d                	bnez	s1,20014bd0 <__subdf3+0x24c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 130)
20014ba4:	34068363          	beqz	a3,20014eea <__subdf3+0x566>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 133)
20014ba8:	00c766b3          	or	a3,a4,a2
20014bac:	e60684e3          	beqz	a3,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 139)
20014bb0:	962a                	add	a2,a2,a0
20014bb2:	97ba                	add	a5,a5,a4
20014bb4:	00a63533          	sltu	a0,a2,a0
20014bb8:	97aa                	add	a5,a5,a0
20014bba:	00879713          	slli	a4,a5,0x8
20014bbe:	8532                	mv	a0,a2
20014bc0:	e4075ae3          	bgez	a4,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 141)
20014bc4:	ff800737          	lui	a4,0xff800
20014bc8:	177d                	addi	a4,a4,-1
20014bca:	8ff9                	and	a5,a5,a4
20014bcc:	4485                	li	s1,1
20014bce:	b599                	j	20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 158)
20014bd0:	de8d                	beqz	a3,20014b0a <__subdf3+0x186>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 160)
20014bd2:	8e59                	or	a2,a2,a4
20014bd4:	22060963          	beqz	a2,20014e06 <__subdf3+0x482>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20014bd8:	4901                	li	s2,0
20014bda:	004007b7          	lui	a5,0x400
20014bde:	4501                	li	a0,0
20014be0:	7ff00493          	li	s1,2047
20014be4:	ae11                	j	20014ef8 <__subdf3+0x574>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 129)
20014be6:	7ff00593          	li	a1,2047
20014bea:	30b68363          	beq	a3,a1,20014ef0 <__subdf3+0x56c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20014bee:	962a                	add	a2,a2,a0
20014bf0:	973e                	add	a4,a4,a5
20014bf2:	00a637b3          	sltu	a5,a2,a0
20014bf6:	973e                	add	a4,a4,a5
20014bf8:	01f71513          	slli	a0,a4,0x1f
20014bfc:	8205                	srli	a2,a2,0x1
20014bfe:	8d51                	or	a0,a0,a2
20014c00:	00175793          	srli	a5,a4,0x1
20014c04:	84b6                	mv	s1,a3
20014c06:	b539                	j	20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 13)
20014c08:	0d005563          	blez	a6,20014cd2 <__subdf3+0x34e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 205)
20014c0c:	08089263          	bnez	a7,20014c90 <__subdf3+0x30c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 207)
20014c10:	00c766b3          	or	a3,a4,a2
20014c14:	e00680e3          	beqz	a3,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 210)
20014c18:	fff48813          	addi	a6,s1,-1
20014c1c:	00081b63          	bnez	a6,20014c32 <__subdf3+0x2ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 219)
20014c20:	40c50633          	sub	a2,a0,a2
20014c24:	00c53533          	sltu	a0,a0,a2
20014c28:	8f99                	sub	a5,a5,a4
20014c2a:	8f89                	sub	a5,a5,a0
20014c2c:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 276)
20014c2e:	4485                	li	s1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20014c30:	a0b1                	j	20014c7c <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 220)
20014c32:	7ff00693          	li	a3,2047
20014c36:	dcd48fe3          	beq	s1,a3,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 243)
20014c3a:	03800693          	li	a3,56
20014c3e:	0906c663          	blt	a3,a6,20014cca <__subdf3+0x346>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 244)
20014c42:	46fd                	li	a3,31
20014c44:	0506ce63          	blt	a3,a6,20014ca0 <__subdf3+0x31c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 246)
20014c48:	02000593          	li	a1,32
20014c4c:	410585b3          	sub	a1,a1,a6
20014c50:	00b716b3          	sll	a3,a4,a1
20014c54:	010658b3          	srl	a7,a2,a6
20014c58:	00b61633          	sll	a2,a2,a1
20014c5c:	0116e6b3          	or	a3,a3,a7
20014c60:	00c03633          	snez	a2,a2
20014c64:	8e55                	or	a2,a2,a3
20014c66:	01075733          	srl	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 260)
20014c6a:	40c50633          	sub	a2,a0,a2
20014c6e:	40e78733          	sub	a4,a5,a4
20014c72:	00c537b3          	sltu	a5,a0,a2
20014c76:	40f707b3          	sub	a5,a4,a5
20014c7a:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 318)
20014c7c:	00879713          	slli	a4,a5,0x8
20014c80:	d8075ae3          	bgez	a4,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 378)
20014c84:	00800437          	lui	s0,0x800
20014c88:	147d                	addi	s0,s0,-1
20014c8a:	8c7d                	and	s0,s0,a5
20014c8c:	89aa                	mv	s3,a0
20014c8e:	a26d                	j	20014e38 <__subdf3+0x4b4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 208)
20014c90:	7ff00693          	li	a3,2047
20014c94:	d8d480e3          	beq	s1,a3,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 234)
20014c98:	008006b7          	lui	a3,0x800
20014c9c:	8f55                	or	a4,a4,a3
20014c9e:	bf71                	j	20014c3a <__subdf3+0x2b6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 247)
20014ca0:	fe080693          	addi	a3,a6,-32
20014ca4:	02000893          	li	a7,32
20014ca8:	00d756b3          	srl	a3,a4,a3
20014cac:	4581                	li	a1,0
20014cae:	01180863          	beq	a6,a7,20014cbe <__subdf3+0x33a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 254)
20014cb2:	04000593          	li	a1,64
20014cb6:	41058833          	sub	a6,a1,a6
20014cba:	010715b3          	sll	a1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 257)
20014cbe:	8e4d                	or	a2,a2,a1
20014cc0:	00c03633          	snez	a2,a2
20014cc4:	8e55                	or	a2,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 245)
20014cc6:	4701                	li	a4,0
20014cc8:	b74d                	j	20014c6a <__subdf3+0x2e6>
20014cca:	8e59                	or	a2,a2,a4
20014ccc:	00c03633          	snez	a2,a2
20014cd0:	bfdd                	j	20014cc6 <__subdf3+0x342>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 206)
20014cd2:	0c080463          	beqz	a6,20014d9a <__subdf3+0x416>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 262)
20014cd6:	40988833          	sub	a6,a7,s1
20014cda:	e895                	bnez	s1,20014d0e <__subdf3+0x38a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 264)
20014cdc:	00a7e5b3          	or	a1,a5,a0
20014ce0:	26058b63          	beqz	a1,20014f56 <__subdf3+0x5d2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 267)
20014ce4:	fff80593          	addi	a1,a6,-1
20014ce8:	e991                	bnez	a1,20014cfc <__subdf3+0x378>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 276)
20014cea:	40a60533          	sub	a0,a2,a0
20014cee:	40f707b3          	sub	a5,a4,a5
20014cf2:	00a63633          	sltu	a2,a2,a0
20014cf6:	8f91                	sub	a5,a5,a2
20014cf8:	8936                	mv	s2,a3
20014cfa:	bf15                	j	20014c2e <__subdf3+0x2aa>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 277)
20014cfc:	7ff00313          	li	t1,2047
20014d00:	00681f63          	bne	a6,t1,20014d1e <__subdf3+0x39a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20014d04:	87ba                	mv	a5,a4
20014d06:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20014d08:	7ff00493          	li	s1,2047
20014d0c:	a07d                	j	20014dba <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 265)
20014d0e:	7ff00593          	li	a1,2047
20014d12:	feb889e3          	beq	a7,a1,20014d04 <__subdf3+0x380>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 291)
20014d16:	008005b7          	lui	a1,0x800
20014d1a:	8fcd                	or	a5,a5,a1
20014d1c:	85c2                	mv	a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 300)
20014d1e:	03800813          	li	a6,56
20014d22:	06b84863          	blt	a6,a1,20014d92 <__subdf3+0x40e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 301)
20014d26:	487d                	li	a6,31
20014d28:	02b84e63          	blt	a6,a1,20014d64 <__subdf3+0x3e0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 303)
20014d2c:	02000313          	li	t1,32
20014d30:	40b30333          	sub	t1,t1,a1
20014d34:	00b55e33          	srl	t3,a0,a1
20014d38:	00679833          	sll	a6,a5,t1
20014d3c:	00651533          	sll	a0,a0,t1
20014d40:	01c86833          	or	a6,a6,t3
20014d44:	00a03533          	snez	a0,a0
20014d48:	00a86533          	or	a0,a6,a0
20014d4c:	00b7d5b3          	srl	a1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 317)
20014d50:	40a60533          	sub	a0,a2,a0
20014d54:	40b707b3          	sub	a5,a4,a1
20014d58:	00a63633          	sltu	a2,a2,a0
20014d5c:	8f91                	sub	a5,a5,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45 (discriminator 317)
20014d5e:	84c6                	mv	s1,a7
20014d60:	8936                	mv	s2,a3
20014d62:	bf29                	j	20014c7c <__subdf3+0x2f8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 304)
20014d64:	fe058813          	addi	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20014d68:	02000e13          	li	t3,32
20014d6c:	0107d833          	srl	a6,a5,a6
20014d70:	4301                	li	t1,0
20014d72:	01c58863          	beq	a1,t3,20014d82 <__subdf3+0x3fe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 311)
20014d76:	04000313          	li	t1,64
20014d7a:	40b305b3          	sub	a1,t1,a1
20014d7e:	00b79333          	sll	t1,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 314)
20014d82:	00a36533          	or	a0,t1,a0
20014d86:	00a03533          	snez	a0,a0
20014d8a:	00a86533          	or	a0,a6,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 302)
20014d8e:	4581                	li	a1,0
20014d90:	b7c1                	j	20014d50 <__subdf3+0x3cc>
20014d92:	8d5d                	or	a0,a0,a5
20014d94:	00a03533          	snez	a0,a0
20014d98:	bfdd                	j	20014d8e <__subdf3+0x40a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 263)
20014d9a:	00148593          	addi	a1,s1,1
20014d9e:	7fe5f593          	andi	a1,a1,2046
20014da2:	e5bd                	bnez	a1,20014e10 <__subdf3+0x48c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 319)
20014da4:	00a7e833          	or	a6,a5,a0
20014da8:	00c765b3          	or	a1,a4,a2
20014dac:	e4b1                	bnez	s1,20014df8 <__subdf3+0x474>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 321)
20014dae:	00081863          	bnez	a6,20014dbe <__subdf3+0x43a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 323)
20014db2:	1a058663          	beqz	a1,20014f5e <__subdf3+0x5da>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20014db6:	87ba                	mv	a5,a4
20014db8:	8532                	mv	a0,a2
20014dba:	8936                	mv	s2,a3
20014dbc:	b9a1                	j	20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 324)
20014dbe:	c4058be3          	beqz	a1,20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 331)
20014dc2:	40c50833          	sub	a6,a0,a2
20014dc6:	40e785b3          	sub	a1,a5,a4
20014dca:	010538b3          	sltu	a7,a0,a6
20014dce:	411585b3          	sub	a1,a1,a7
20014dd2:	00859413          	slli	s0,a1,0x8
20014dd6:	00045a63          	bgez	s0,20014dea <__subdf3+0x466>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 333)
20014dda:	40a60533          	sub	a0,a2,a0
20014dde:	40f707b3          	sub	a5,a4,a5
20014de2:	00a63633          	sltu	a2,a2,a0
20014de6:	8f91                	sub	a5,a5,a2
20014de8:	bfc9                	j	20014dba <__subdf3+0x436>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 334)
20014dea:	00b86533          	or	a0,a6,a1
20014dee:	16050c63          	beqz	a0,20014f66 <__subdf3+0x5e2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20014df2:	87ae                	mv	a5,a1
20014df4:	8542                	mv	a0,a6
20014df6:	b939                	j	20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 353)
20014df8:	00081a63          	bnez	a6,20014e0c <__subdf3+0x488>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 354)
20014dfc:	16058763          	beqz	a1,20014f6a <__subdf3+0x5e6>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20014e00:	87ba                	mv	a5,a4
20014e02:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20014e04:	8936                	mv	s2,a3
20014e06:	7ff00493          	li	s1,2047
20014e0a:	b129                	j	20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 355)
20014e0c:	dded                	beqz	a1,20014e06 <__subdf3+0x482>
20014e0e:	b3e9                	j	20014bd8 <__subdf3+0x254>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 320)
20014e10:	40c509b3          	sub	s3,a0,a2
20014e14:	013535b3          	sltu	a1,a0,s3
20014e18:	40e78433          	sub	s0,a5,a4
20014e1c:	8c0d                	sub	s0,s0,a1
20014e1e:	00841593          	slli	a1,s0,0x8
20014e22:	0605d663          	bgez	a1,20014e8e <__subdf3+0x50a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 371)
20014e26:	40a609b3          	sub	s3,a2,a0
20014e2a:	40f707b3          	sub	a5,a4,a5
20014e2e:	01363633          	sltu	a2,a2,s3
20014e32:	40c78433          	sub	s0,a5,a2
20014e36:	8936                	mv	s2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 380)
20014e38:	c02d                	beqz	s0,20014e9a <__subdf3+0x516>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 383)
20014e3a:	8522                	mv	a0,s0
20014e3c:	2c65                	jal	200150f4 <__clzsi2>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 394)
20014e3e:	ff850713          	addi	a4,a0,-8
20014e42:	47fd                	li	a5,31
20014e44:	06e7c063          	blt	a5,a4,20014ea4 <__subdf3+0x520>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 395)
20014e48:	02000793          	li	a5,32
20014e4c:	8f99                	sub	a5,a5,a4
20014e4e:	00e41433          	sll	s0,s0,a4
20014e52:	00f9d7b3          	srl	a5,s3,a5
20014e56:	8c5d                	or	s0,s0,a5
20014e58:	00e99533          	sll	a0,s3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 404)
20014e5c:	06974d63          	blt	a4,s1,20014ed6 <__subdf3+0x552>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 405)
20014e60:	8f05                	sub	a4,a4,s1
20014e62:	00170793          	addi	a5,a4,1 # ff800001 <metal_segment_heap_target_end+0x7f7fe7d5>
20014e66:	46fd                	li	a3,31
20014e68:	04f6c463          	blt	a3,a5,20014eb0 <__subdf3+0x52c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 407)
20014e6c:	02000713          	li	a4,32
20014e70:	8f1d                	sub	a4,a4,a5
20014e72:	00f55633          	srl	a2,a0,a5
20014e76:	00e416b3          	sll	a3,s0,a4
20014e7a:	00e51533          	sll	a0,a0,a4
20014e7e:	8ed1                	or	a3,a3,a2
20014e80:	00a03533          	snez	a0,a0
20014e84:	8d55                	or	a0,a0,a3
20014e86:	00f457b3          	srl	a5,s0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
20014e8a:	4481                	li	s1,0
20014e8c:	b661                	j	20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 372)
20014e8e:	0089e533          	or	a0,s3,s0
20014e92:	f15d                	bnez	a0,20014e38 <__subdf3+0x4b4>
20014e94:	4781                	li	a5,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20014e96:	4481                	li	s1,0
20014e98:	a0e9                	j	20014f62 <__subdf3+0x5de>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 387)
20014e9a:	854e                	mv	a0,s3
20014e9c:	2ca1                	jal	200150f4 <__clzsi2>
20014e9e:	02050513          	addi	a0,a0,32
20014ea2:	bf71                	j	20014e3e <__subdf3+0x4ba>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 396)
20014ea4:	fd850413          	addi	s0,a0,-40
20014ea8:	00899433          	sll	s0,s3,s0
20014eac:	4501                	li	a0,0
20014eae:	b77d                	j	20014e5c <__subdf3+0x4d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 408)
20014eb0:	1705                	addi	a4,a4,-31
20014eb2:	02000613          	li	a2,32
20014eb6:	00e45733          	srl	a4,s0,a4
20014eba:	4681                	li	a3,0
20014ebc:	00c78763          	beq	a5,a2,20014eca <__subdf3+0x546>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 416)
20014ec0:	04000693          	li	a3,64
20014ec4:	8e9d                	sub	a3,a3,a5
20014ec6:	00d416b3          	sll	a3,s0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 419)
20014eca:	8d55                	or	a0,a0,a3
20014ecc:	00a03533          	snez	a0,a0
20014ed0:	8d59                	or	a0,a0,a4
20014ed2:	4781                	li	a5,0
20014ed4:	bf5d                	j	20014e8a <__subdf3+0x506>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46 (discriminator 406)
20014ed6:	ff8007b7          	lui	a5,0xff800
20014eda:	17fd                	addi	a5,a5,-1
20014edc:	8c99                	sub	s1,s1,a4
20014ede:	8fe1                	and	a5,a5,s0
20014ee0:	be15                	j	20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20014ee2:	87ba                	mv	a5,a4
20014ee4:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20014ee6:	84ae                	mv	s1,a1
20014ee8:	b635                	j	20014a14 <__subdf3+0x90>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20014eea:	87ba                	mv	a5,a4
20014eec:	8532                	mv	a0,a2
20014eee:	b61d                	j	20014a14 <__subdf3+0x90>
20014ef0:	7ff00493          	li	s1,2047
20014ef4:	4781                	li	a5,0
20014ef6:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 47)
20014ef8:	00879713          	slli	a4,a5,0x8
20014efc:	00075b63          	bgez	a4,20014f12 <__subdf3+0x58e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 63)
20014f00:	0485                	addi	s1,s1,1
20014f02:	7ff00713          	li	a4,2047
20014f06:	06e48763          	beq	s1,a4,20014f74 <__subdf3+0x5f0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
20014f0a:	ff800737          	lui	a4,0xff800
20014f0e:	177d                	addi	a4,a4,-1
20014f10:	8ff9                	and	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 79)
20014f12:	01d79713          	slli	a4,a5,0x1d
20014f16:	810d                	srli	a0,a0,0x3
20014f18:	8d59                	or	a0,a0,a4
20014f1a:	7ff00713          	li	a4,2047
20014f1e:	838d                	srli	a5,a5,0x3
20014f20:	00e49963          	bne	s1,a4,20014f32 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 80)
20014f24:	8d5d                	or	a0,a0,a5
20014f26:	4781                	li	a5,0
20014f28:	c509                	beqz	a0,20014f32 <__subdf3+0x5ae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47
20014f2a:	000807b7          	lui	a5,0x80
20014f2e:	4501                	li	a0,0
20014f30:	4901                	li	s2,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20014f32:	7ff4f713          	andi	a4,s1,2047
20014f36:	07b2                	slli	a5,a5,0xc
20014f38:	0752                	slli	a4,a4,0x14
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
20014f3a:	40f2                	lw	ra,28(sp)
20014f3c:	4462                	lw	s0,24(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:47 (discriminator 90)
20014f3e:	83b1                	srli	a5,a5,0xc
20014f40:	01f91593          	slli	a1,s2,0x1f
20014f44:	8fd9                	or	a5,a5,a4
20014f46:	00b7e733          	or	a4,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:51 (discriminator 90)
20014f4a:	44d2                	lw	s1,20(sp)
20014f4c:	4942                	lw	s2,16(sp)
20014f4e:	49b2                	lw	s3,12(sp)
20014f50:	85ba                	mv	a1,a4
20014f52:	6105                	addi	sp,sp,32
20014f54:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:45
20014f56:	87ba                	mv	a5,a4
20014f58:	8532                	mv	a0,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/subdf3.c:46
20014f5a:	84c2                	mv	s1,a6
20014f5c:	bdb9                	j	20014dba <__subdf3+0x436>
20014f5e:	4781                	li	a5,0
20014f60:	4501                	li	a0,0
20014f62:	4901                	li	s2,0
20014f64:	bf51                	j	20014ef8 <__subdf3+0x574>
20014f66:	4781                	li	a5,0
20014f68:	bfed                	j	20014f62 <__subdf3+0x5de>
20014f6a:	4501                	li	a0,0
20014f6c:	4901                	li	s2,0
20014f6e:	004007b7          	lui	a5,0x400
20014f72:	b1bd                	j	20014be0 <__subdf3+0x25c>
20014f74:	4781                	li	a5,0
20014f76:	4501                	li	a0,0
20014f78:	bf69                	j	20014f12 <__subdf3+0x58e>

20014f7a <__fixdfsi>:
__fixdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
20014f7a:	0145d713          	srli	a4,a1,0x14
20014f7e:	001006b7          	lui	a3,0x100
20014f82:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
20014f86:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20014f8a:	3fe00613          	li	a2,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:42
20014f8e:	8fed                	and	a5,a5,a1
20014f90:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20014f92:	04e65463          	bge	a2,a4,20014fda <__fixdfsi+0x60>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 10)
20014f96:	41d00613          	li	a2,1053
20014f9a:	00e65863          	bge	a2,a4,20014faa <__fixdfsi+0x30>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 13)
20014f9e:	80000537          	lui	a0,0x80000
20014fa2:	fff54513          	not	a0,a0
20014fa6:	952e                	add	a0,a0,a1
20014fa8:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 12)
20014faa:	8fd5                	or	a5,a5,a3
20014fac:	43300693          	li	a3,1075
20014fb0:	8e99                	sub	a3,a3,a4
20014fb2:	467d                	li	a2,31
20014fb4:	00d64d63          	blt	a2,a3,20014fce <__fixdfsi+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 29)
20014fb8:	bed70713          	addi	a4,a4,-1043 # ff7ffbed <metal_segment_heap_target_end+0x7f7fe3c1>
20014fbc:	00e797b3          	sll	a5,a5,a4
20014fc0:	00d55533          	srl	a0,a0,a3
20014fc4:	8d5d                	or	a0,a0,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 42)
20014fc6:	c999                	beqz	a1,20014fdc <__fixdfsi+0x62>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 44)
20014fc8:	40a00533          	neg	a0,a0
20014fcc:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43 (discriminator 41)
20014fce:	41300513          	li	a0,1043
20014fd2:	8d19                	sub	a0,a0,a4
20014fd4:	00a7d533          	srl	a0,a5,a0
20014fd8:	b7fd                	j	20014fc6 <__fixdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:43
20014fda:	4501                	li	a0,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:47
20014fdc:	8082                	ret

20014fde <__fixunsdfsi>:
__fixunsdfsi():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20014fde:	0145d713          	srli	a4,a1,0x14
20014fe2:	001006b7          	lui	a3,0x100
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:36
20014fe6:	862a                	mv	a2,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20014fe8:	fff68793          	addi	a5,a3,-1 # fffff <__heap_size+0xff7ff>
20014fec:	7ff77713          	andi	a4,a4,2047
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20014ff0:	3fe00513          	li	a0,1022
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:42
20014ff4:	8fed                	and	a5,a5,a1
20014ff6:	81fd                	srli	a1,a1,0x1f
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20014ff8:	02e55f63          	bge	a0,a4,20015036 <__fixunsdfsi+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 10)
20014ffc:	4501                	li	a0,0
20014ffe:	e591                	bnez	a1,2001500a <__fixunsdfsi+0x2c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20015000:	41e00593          	li	a1,1054
20015004:	557d                	li	a0,-1
20015006:	00e5d363          	bge	a1,a4,2001500c <__fixunsdfsi+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:47
2001500a:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 18)
2001500c:	8fd5                	or	a5,a5,a3
2001500e:	43300693          	li	a3,1075
20015012:	8e99                	sub	a3,a3,a4
20015014:	45fd                	li	a1,31
20015016:	00d5ca63          	blt	a1,a3,2001502a <__fixunsdfsi+0x4c>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 33)
2001501a:	bed70713          	addi	a4,a4,-1043
2001501e:	00e797b3          	sll	a5,a5,a4
20015022:	00d65533          	srl	a0,a2,a3
20015026:	8d5d                	or	a0,a0,a5
20015028:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43 (discriminator 45)
2001502a:	41300513          	li	a0,1043
2001502e:	8d19                	sub	a0,a0,a4
20015030:	00a7d533          	srl	a0,a5,a0
20015034:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixunsdfsi.c:43
20015036:	4501                	li	a0,0
20015038:	8082                	ret

2001503a <__floatsidf>:
__floatsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:37
2001503a:	1141                	addi	sp,sp,-16
2001503c:	c606                	sw	ra,12(sp)
2001503e:	c422                	sw	s0,8(sp)
20015040:	c226                	sw	s1,4(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
20015042:	cd31                	beqz	a0,2001509e <__floatsidf+0x64>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 1)
20015044:	41f55793          	srai	a5,a0,0x1f
20015048:	00a7c433          	xor	s0,a5,a0
2001504c:	8c1d                	sub	s0,s0,a5
2001504e:	01f55493          	srli	s1,a0,0x1f
20015052:	8522                	mv	a0,s0
20015054:	2045                	jal	200150f4 <__clzsi2>
20015056:	41e00713          	li	a4,1054
2001505a:	47a9                	li	a5,10
2001505c:	8f09                	sub	a4,a4,a0
2001505e:	02a7ca63          	blt	a5,a0,20015092 <__floatsidf+0x58>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 23)
20015062:	47ad                	li	a5,11
20015064:	8f89                	sub	a5,a5,a0
20015066:	0555                	addi	a0,a0,21
20015068:	00f457b3          	srl	a5,s0,a5
2001506c:	00a41433          	sll	s0,s0,a0
20015070:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:42
20015072:	07b2                	slli	a5,a5,0xc
20015074:	7ff77713          	andi	a4,a4,2047
20015078:	0752                	slli	a4,a4,0x14
2001507a:	83b1                	srli	a5,a5,0xc
2001507c:	057e                	slli	a0,a0,0x1f
2001507e:	8fd9                	or	a5,a5,a4
20015080:	00a7e733          	or	a4,a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:45
20015084:	40b2                	lw	ra,12(sp)
20015086:	8522                	mv	a0,s0
20015088:	4422                	lw	s0,8(sp)
2001508a:	4492                	lw	s1,4(sp)
2001508c:	85ba                	mv	a1,a4
2001508e:	0141                	addi	sp,sp,16
20015090:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 24)
20015092:	1555                	addi	a0,a0,-11
20015094:	00a417b3          	sll	a5,s0,a0
20015098:	8526                	mv	a0,s1
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
2001509a:	4401                	li	s0,0
2001509c:	bfd9                	j	20015072 <__floatsidf+0x38>
2001509e:	4701                	li	a4,0
200150a0:	4781                	li	a5,0
200150a2:	bfe5                	j	2001509a <__floatsidf+0x60>

200150a4 <__floatunsidf>:
__floatunsidf():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:37
200150a4:	1141                	addi	sp,sp,-16
200150a6:	c422                	sw	s0,8(sp)
200150a8:	c606                	sw	ra,12(sp)
200150aa:	842a                	mv	s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
200150ac:	c129                	beqz	a0,200150ee <__floatunsidf+0x4a>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 6)
200150ae:	2099                	jal	200150f4 <__clzsi2>
200150b0:	41e00713          	li	a4,1054
200150b4:	47a9                	li	a5,10
200150b6:	8f09                	sub	a4,a4,a0
200150b8:	02a7c663          	blt	a5,a0,200150e4 <__floatunsidf+0x40>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 23)
200150bc:	47ad                	li	a5,11
200150be:	8f89                	sub	a5,a5,a0
200150c0:	0555                	addi	a0,a0,21
200150c2:	00f457b3          	srl	a5,s0,a5
200150c6:	00a41433          	sll	s0,s0,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
200150ca:	8522                	mv	a0,s0
200150cc:	40b2                	lw	ra,12(sp)
200150ce:	4422                	lw	s0,8(sp)
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:42
200150d0:	07b2                	slli	a5,a5,0xc
200150d2:	7ff77713          	andi	a4,a4,2047
200150d6:	0752                	slli	a4,a4,0x14
200150d8:	83b1                	srli	a5,a5,0xc
200150da:	00e7e6b3          	or	a3,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:45
200150de:	85b6                	mv	a1,a3
200150e0:	0141                	addi	sp,sp,16
200150e2:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41 (discriminator 24)
200150e4:	1555                	addi	a0,a0,-11
200150e6:	00a417b3          	sll	a5,s0,a0
200150ea:	4401                	li	s0,0
200150ec:	bff9                	j	200150ca <__floatunsidf+0x26>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatunsidf.c:41
200150ee:	4781                	li	a5,0
200150f0:	4701                	li	a4,0
200150f2:	bfe1                	j	200150ca <__floatunsidf+0x26>

200150f4 <__clzsi2>:
__clzsi2():
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
200150f4:	67c1                	lui	a5,0x10
200150f6:	02f57663          	bgeu	a0,a5,20015122 <__clzsi2+0x2e>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 3)
200150fa:	0ff00793          	li	a5,255
200150fe:	00a7b7b3          	sltu	a5,a5,a0
20015102:	078e                	slli	a5,a5,0x3
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 14)
20015104:	02000713          	li	a4,32
20015108:	8f1d                	sub	a4,a4,a5
2001510a:	00f557b3          	srl	a5,a0,a5
2001510e:	00005517          	auipc	a0,0x5
20015112:	a8250513          	addi	a0,a0,-1406 # 20019b90 <__clz_tab>
20015116:	97aa                	add	a5,a5,a0
20015118:	0007c503          	lbu	a0,0(a5) # 10000 <__heap_size+0xf800>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:713 (discriminator 14)
2001511c:	40a70533          	sub	a0,a4,a0
20015120:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 4)
20015122:	01000737          	lui	a4,0x1000
20015126:	47c1                	li	a5,16
20015128:	fce56ee3          	bltu	a0,a4,20015104 <__clzsi2+0x10>
/scratch/carsteng/freedom-tools-master/obj/x86_64-linux-ubuntu14/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
2001512c:	47e1                	li	a5,24
2001512e:	bfd9                	j	20015104 <__clzsi2+0x10>

20015130 <_write>:
_write():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:9
#include <unistd.h>

/* Write to a file.  */
ssize_t
_write(int file, const void *ptr, size_t len)
{
20015130:	7179                	addi	sp,sp,-48
20015132:	d606                	sw	ra,44(sp)
20015134:	d422                	sw	s0,40(sp)
20015136:	1800                	addi	s0,sp,48
20015138:	fca42e23          	sw	a0,-36(s0) # 7fffdc <__heap_size+0x7ff7dc>
2001513c:	fcb42c23          	sw	a1,-40(s0)
20015140:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:10
  if (file != STDOUT_FILENO) {
20015144:	fdc42703          	lw	a4,-36(s0)
20015148:	4785                	li	a5,1
2001514a:	00f70963          	beq	a4,a5,2001515c <_write+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:11
    errno = ENOSYS;
2001514e:	28a9                	jal	200151a8 <__errno>
20015150:	872a                	mv	a4,a0
20015152:	05800793          	li	a5,88
20015156:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:12
    return -1;
20015158:	57fd                	li	a5,-1
2001515a:	a82d                	j	20015194 <_write+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:15
  }

  const char *bptr = ptr;
2001515c:	fd842783          	lw	a5,-40(s0)
20015160:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16
  for (size_t i = 0; i < len; ++i)
20015164:	fe042623          	sw	zero,-20(s0)
20015168:	a839                	j	20015186 <_write+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:17 (discriminator 3)
    metal_tty_putc(bptr[i]);
2001516a:	fe842703          	lw	a4,-24(s0)
2001516e:	fec42783          	lw	a5,-20(s0)
20015172:	97ba                	add	a5,a5,a4
20015174:	0007c783          	lbu	a5,0(a5)
20015178:	853e                	mv	a0,a5
2001517a:	2c91                	jal	200153ce <metal_tty_putc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 3)
  for (size_t i = 0; i < len; ++i)
2001517c:	fec42783          	lw	a5,-20(s0)
20015180:	0785                	addi	a5,a5,1
20015182:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:16 (discriminator 1)
20015186:	fec42703          	lw	a4,-20(s0)
2001518a:	fd442783          	lw	a5,-44(s0)
2001518e:	fcf76ee3          	bltu	a4,a5,2001516a <_write+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:18
  return 0;
20015192:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_write.c:19
}
20015194:	853e                	mv	a0,a5
20015196:	50b2                	lw	ra,44(sp)
20015198:	5422                	lw	s0,40(sp)
2001519a:	6145                	addi	sp,sp,48
2001519c:	8082                	ret

2001519e <atexit>:
atexit():
2001519e:	85aa                	mv	a1,a0
200151a0:	4681                	li	a3,0
200151a2:	4601                	li	a2,0
200151a4:	4501                	li	a0,0
200151a6:	a8f1                	j	20015282 <__register_exitproc>

200151a8 <__errno>:
__errno():
200151a8:	5ffec797          	auipc	a5,0x5ffec
200151ac:	92078793          	addi	a5,a5,-1760 # 80000ac8 <_impure_ptr>
200151b0:	4388                	lw	a0,0(a5)
200151b2:	8082                	ret

200151b4 <exit>:
exit():
200151b4:	1141                	addi	sp,sp,-16
200151b6:	c422                	sw	s0,8(sp)
200151b8:	c606                	sw	ra,12(sp)
200151ba:	00000797          	auipc	a5,0x0
200151be:	14c78793          	addi	a5,a5,332 # 20015306 <__call_exitprocs>
200151c2:	842a                	mv	s0,a0
200151c4:	c399                	beqz	a5,200151ca <exit+0x16>
200151c6:	4581                	li	a1,0
200151c8:	2a3d                	jal	20015306 <__call_exitprocs>
200151ca:	5ffec797          	auipc	a5,0x5ffec
200151ce:	90278793          	addi	a5,a5,-1790 # 80000acc <_global_impure_ptr>
200151d2:	4388                	lw	a0,0(a5)
200151d4:	551c                	lw	a5,40(a0)
200151d6:	c391                	beqz	a5,200151da <exit+0x26>
200151d8:	9782                	jalr	a5
200151da:	8522                	mv	a0,s0
200151dc:	554040ef          	jal	ra,20019730 <_exit>

200151e0 <__libc_fini_array>:
__libc_fini_array():
200151e0:	1141                	addi	sp,sp,-16
200151e2:	00005797          	auipc	a5,0x5
200151e6:	69a78793          	addi	a5,a5,1690 # 2001a87c <__fini_array_end>
200151ea:	c422                	sw	s0,8(sp)
200151ec:	00005417          	auipc	s0,0x5
200151f0:	69040413          	addi	s0,s0,1680 # 2001a87c <__fini_array_end>
200151f4:	8c1d                	sub	s0,s0,a5
200151f6:	c226                	sw	s1,4(sp)
200151f8:	c606                	sw	ra,12(sp)
200151fa:	8409                	srai	s0,s0,0x2
200151fc:	84be                	mv	s1,a5
200151fe:	e411                	bnez	s0,2001520a <__libc_fini_array+0x2a>
20015200:	40b2                	lw	ra,12(sp)
20015202:	4422                	lw	s0,8(sp)
20015204:	4492                	lw	s1,4(sp)
20015206:	0141                	addi	sp,sp,16
20015208:	8082                	ret
2001520a:	147d                	addi	s0,s0,-1
2001520c:	00241793          	slli	a5,s0,0x2
20015210:	97a6                	add	a5,a5,s1
20015212:	439c                	lw	a5,0(a5)
20015214:	9782                	jalr	a5
20015216:	b7e5                	j	200151fe <__libc_fini_array+0x1e>

20015218 <__libc_init_array>:
__libc_init_array():
20015218:	1141                	addi	sp,sp,-16
2001521a:	00005797          	auipc	a5,0x5
2001521e:	65678793          	addi	a5,a5,1622 # 2001a870 <__init_array_start>
20015222:	c422                	sw	s0,8(sp)
20015224:	00005417          	auipc	s0,0x5
20015228:	64c40413          	addi	s0,s0,1612 # 2001a870 <__init_array_start>
2001522c:	8c1d                	sub	s0,s0,a5
2001522e:	c226                	sw	s1,4(sp)
20015230:	c04a                	sw	s2,0(sp)
20015232:	c606                	sw	ra,12(sp)
20015234:	8409                	srai	s0,s0,0x2
20015236:	4481                	li	s1,0
20015238:	893e                	mv	s2,a5
2001523a:	02849663          	bne	s1,s0,20015266 <__libc_init_array+0x4e>
2001523e:	00005797          	auipc	a5,0x5
20015242:	63278793          	addi	a5,a5,1586 # 2001a870 <__init_array_start>
20015246:	00005417          	auipc	s0,0x5
2001524a:	63640413          	addi	s0,s0,1590 # 2001a87c <__fini_array_end>
2001524e:	8c1d                	sub	s0,s0,a5
20015250:	8409                	srai	s0,s0,0x2
20015252:	4481                	li	s1,0
20015254:	893e                	mv	s2,a5
20015256:	00849f63          	bne	s1,s0,20015274 <__libc_init_array+0x5c>
2001525a:	40b2                	lw	ra,12(sp)
2001525c:	4422                	lw	s0,8(sp)
2001525e:	4492                	lw	s1,4(sp)
20015260:	4902                	lw	s2,0(sp)
20015262:	0141                	addi	sp,sp,16
20015264:	8082                	ret
20015266:	00249793          	slli	a5,s1,0x2
2001526a:	97ca                	add	a5,a5,s2
2001526c:	439c                	lw	a5,0(a5)
2001526e:	0485                	addi	s1,s1,1
20015270:	9782                	jalr	a5
20015272:	b7e1                	j	2001523a <__libc_init_array+0x22>
20015274:	00249793          	slli	a5,s1,0x2
20015278:	97ca                	add	a5,a5,s2
2001527a:	439c                	lw	a5,0(a5)
2001527c:	0485                	addi	s1,s1,1
2001527e:	9782                	jalr	a5
20015280:	bfd9                	j	20015256 <__libc_init_array+0x3e>

20015282 <__register_exitproc>:
__register_exitproc():
20015282:	5ffec797          	auipc	a5,0x5ffec
20015286:	88678793          	addi	a5,a5,-1914 # 80000b08 <metal_segment_data_target_end>
2001528a:	439c                	lw	a5,0(a5)
2001528c:	8e2a                	mv	t3,a0
2001528e:	e38d                	bnez	a5,200152b0 <__register_exitproc+0x2e>
20015290:	8d418713          	addi	a4,gp,-1836 # 80000b9c <_global_atexit0>
20015294:	5ffec797          	auipc	a5,0x5ffec
20015298:	86e7aa23          	sw	a4,-1932(a5) # 80000b08 <metal_segment_data_target_end>
2001529c:	dffeb517          	auipc	a0,0xdffeb
200152a0:	d6450513          	addi	a0,a0,-668 # 0 <__metal_boot_hart>
200152a4:	87ba                	mv	a5,a4
200152a6:	c509                	beqz	a0,200152b0 <__register_exitproc+0x2e>
200152a8:	411c                	lw	a5,0(a0)
200152aa:	94f1ae23          	sw	a5,-1700(gp) # 80000c24 <_global_atexit0+0x88>
200152ae:	87ba                	mv	a5,a4
200152b0:	43d8                	lw	a4,4(a5)
200152b2:	487d                	li	a6,31
200152b4:	557d                	li	a0,-1
200152b6:	04e84763          	blt	a6,a4,20015304 <__register_exitproc+0x82>
200152ba:	020e0e63          	beqz	t3,200152f6 <__register_exitproc+0x74>
200152be:	0887a803          	lw	a6,136(a5)
200152c2:	04080163          	beqz	a6,20015304 <__register_exitproc+0x82>
200152c6:	00271893          	slli	a7,a4,0x2
200152ca:	98c2                	add	a7,a7,a6
200152cc:	00c8a023          	sw	a2,0(a7)
200152d0:	10082303          	lw	t1,256(a6)
200152d4:	4605                	li	a2,1
200152d6:	00e61633          	sll	a2,a2,a4
200152da:	00c36333          	or	t1,t1,a2
200152de:	10682023          	sw	t1,256(a6)
200152e2:	08d8a023          	sw	a3,128(a7)
200152e6:	4689                	li	a3,2
200152e8:	00de1763          	bne	t3,a3,200152f6 <__register_exitproc+0x74>
200152ec:	10482683          	lw	a3,260(a6)
200152f0:	8e55                	or	a2,a2,a3
200152f2:	10c82223          	sw	a2,260(a6)
200152f6:	00170693          	addi	a3,a4,1 # 1000001 <__heap_size+0xfff801>
200152fa:	070a                	slli	a4,a4,0x2
200152fc:	c3d4                	sw	a3,4(a5)
200152fe:	97ba                	add	a5,a5,a4
20015300:	c78c                	sw	a1,8(a5)
20015302:	4501                	li	a0,0
20015304:	8082                	ret

20015306 <__call_exitprocs>:
__call_exitprocs():
20015306:	7179                	addi	sp,sp,-48
20015308:	cc52                	sw	s4,24(sp)
2001530a:	ca56                	sw	s5,20(sp)
2001530c:	c85a                	sw	s6,16(sp)
2001530e:	c65e                	sw	s7,12(sp)
20015310:	d606                	sw	ra,44(sp)
20015312:	d422                	sw	s0,40(sp)
20015314:	d226                	sw	s1,36(sp)
20015316:	d04a                	sw	s2,32(sp)
20015318:	ce4e                	sw	s3,28(sp)
2001531a:	c462                	sw	s8,8(sp)
2001531c:	8b2a                	mv	s6,a0
2001531e:	8a2e                	mv	s4,a1
20015320:	5ffeba97          	auipc	s5,0x5ffeb
20015324:	7e8a8a93          	addi	s5,s5,2024 # 80000b08 <metal_segment_data_target_end>
20015328:	4b85                	li	s7,1
2001532a:	000aa403          	lw	s0,0(s5)
2001532e:	c811                	beqz	s0,20015342 <__call_exitprocs+0x3c>
20015330:	4044                	lw	s1,4(s0)
20015332:	08842983          	lw	s3,136(s0)
20015336:	fff48913          	addi	s2,s1,-1
2001533a:	048a                	slli	s1,s1,0x2
2001533c:	94a2                	add	s1,s1,s0
2001533e:	00095e63          	bgez	s2,2001535a <__call_exitprocs+0x54>
20015342:	50b2                	lw	ra,44(sp)
20015344:	5422                	lw	s0,40(sp)
20015346:	5492                	lw	s1,36(sp)
20015348:	5902                	lw	s2,32(sp)
2001534a:	49f2                	lw	s3,28(sp)
2001534c:	4a62                	lw	s4,24(sp)
2001534e:	4ad2                	lw	s5,20(sp)
20015350:	4b42                	lw	s6,16(sp)
20015352:	4bb2                	lw	s7,12(sp)
20015354:	4c22                	lw	s8,8(sp)
20015356:	6145                	addi	sp,sp,48
20015358:	8082                	ret
2001535a:	000a0e63          	beqz	s4,20015376 <__call_exitprocs+0x70>
2001535e:	00099563          	bnez	s3,20015368 <__call_exitprocs+0x62>
20015362:	197d                	addi	s2,s2,-1
20015364:	14f1                	addi	s1,s1,-4
20015366:	bfe1                	j	2001533e <__call_exitprocs+0x38>
20015368:	00291793          	slli	a5,s2,0x2
2001536c:	97ce                	add	a5,a5,s3
2001536e:	0807a783          	lw	a5,128(a5)
20015372:	ff4798e3          	bne	a5,s4,20015362 <__call_exitprocs+0x5c>
20015376:	4058                	lw	a4,4(s0)
20015378:	40dc                	lw	a5,4(s1)
2001537a:	177d                	addi	a4,a4,-1
2001537c:	03271863          	bne	a4,s2,200153ac <__call_exitprocs+0xa6>
20015380:	01242223          	sw	s2,4(s0)
20015384:	dff9                	beqz	a5,20015362 <__call_exitprocs+0x5c>
20015386:	00442c03          	lw	s8,4(s0)
2001538a:	00098863          	beqz	s3,2001539a <__call_exitprocs+0x94>
2001538e:	1009a683          	lw	a3,256(s3)
20015392:	012b9733          	sll	a4,s7,s2
20015396:	8ef9                	and	a3,a3,a4
20015398:	ee89                	bnez	a3,200153b2 <__call_exitprocs+0xac>
2001539a:	9782                	jalr	a5
2001539c:	4058                	lw	a4,4(s0)
2001539e:	000aa783          	lw	a5,0(s5)
200153a2:	f98714e3          	bne	a4,s8,2001532a <__call_exitprocs+0x24>
200153a6:	faf40ee3          	beq	s0,a5,20015362 <__call_exitprocs+0x5c>
200153aa:	b741                	j	2001532a <__call_exitprocs+0x24>
200153ac:	0004a223          	sw	zero,4(s1)
200153b0:	bfd1                	j	20015384 <__call_exitprocs+0x7e>
200153b2:	00291693          	slli	a3,s2,0x2
200153b6:	96ce                	add	a3,a3,s3
200153b8:	428c                	lw	a1,0(a3)
200153ba:	1049a683          	lw	a3,260(s3)
200153be:	8f75                	and	a4,a4,a3
200153c0:	e701                	bnez	a4,200153c8 <__call_exitprocs+0xc2>
200153c2:	855a                	mv	a0,s6
200153c4:	9782                	jalr	a5
200153c6:	bfd9                	j	2001539c <__call_exitprocs+0x96>
200153c8:	852e                	mv	a0,a1
200153ca:	9782                	jalr	a5
200153cc:	bfc1                	j	2001539c <__call_exitprocs+0x96>

200153ce <metal_tty_putc>:
metal_tty_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:12

#if defined(__METAL_DT_STDOUT_UART_HANDLE)
/* This implementation serves as a small shim that interfaces with the first
 * UART on a system. */
int metal_tty_putc(int c)
{
200153ce:	1101                	addi	sp,sp,-32
200153d0:	ce06                	sw	ra,28(sp)
200153d2:	cc22                	sw	s0,24(sp)
200153d4:	1000                	addi	s0,sp,32
200153d6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:13
    if (c == '\n') {
200153da:	fec42703          	lw	a4,-20(s0)
200153de:	47a9                	li	a5,10
200153e0:	00f71463          	bne	a4,a5,200153e8 <metal_tty_putc+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:14
        metal_tty_putc_raw( '\r' );
200153e4:	4535                	li	a0,13
200153e6:	2811                	jal	200153fa <metal_tty_putc_raw>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:16
    }
    return metal_tty_putc_raw( c );
200153e8:	fec42503          	lw	a0,-20(s0)
200153ec:	2039                	jal	200153fa <metal_tty_putc_raw>
200153ee:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:17
}
200153f0:	853e                	mv	a0,a5
200153f2:	40f2                	lw	ra,28(sp)
200153f4:	4462                	lw	s0,24(sp)
200153f6:	6105                	addi	sp,sp,32
200153f8:	8082                	ret

200153fa <metal_tty_putc_raw>:
metal_tty_putc_raw():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:20

int metal_tty_putc_raw(int c)
{
200153fa:	1101                	addi	sp,sp,-32
200153fc:	ce06                	sw	ra,28(sp)
200153fe:	cc22                	sw	s0,24(sp)
20015400:	1000                	addi	s0,sp,32
20015402:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:21
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20015406:	fec42583          	lw	a1,-20(s0)
2001540a:	800017b7          	lui	a5,0x80001
2001540e:	a6078513          	addi	a0,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff234>
20015412:	28b1                	jal	2001546e <metal_uart_putc>
20015414:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:22
}
20015416:	853e                	mv	a0,a5
20015418:	40f2                	lw	ra,28(sp)
2001541a:	4462                	lw	s0,24(sp)
2001541c:	6105                	addi	sp,sp,32
2001541e:	8082                	ret

20015420 <metal_tty_init>:
metal_tty_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:40
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

static void metal_tty_init(void) __attribute__((constructor));
static void metal_tty_init(void)
{
20015420:	1141                	addi	sp,sp,-16
20015422:	c606                	sw	ra,12(sp)
20015424:	c422                	sw	s0,8(sp)
20015426:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:41
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20015428:	67f1                	lui	a5,0x1c
2001542a:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
2001542e:	800017b7          	lui	a5,0x80001
20015432:	a6078513          	addi	a0,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff234>
20015436:	2031                	jal	20015442 <metal_uart_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/tty.c:42
}
20015438:	0001                	nop
2001543a:	40b2                	lw	ra,12(sp)
2001543c:	4422                	lw	s0,8(sp)
2001543e:	0141                	addi	sp,sp,16
20015440:	8082                	ret

20015442 <metal_uart_init>:
metal_uart_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:44
 * other method on the UART can be invoked. It is invalid to initialize a UART more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) { uart->vtable->init(uart, baud_rate); }
20015442:	1101                	addi	sp,sp,-32
20015444:	ce06                	sw	ra,28(sp)
20015446:	cc22                	sw	s0,24(sp)
20015448:	1000                	addi	s0,sp,32
2001544a:	fea42623          	sw	a0,-20(s0)
2001544e:	feb42423          	sw	a1,-24(s0)
20015452:	fec42783          	lw	a5,-20(s0)
20015456:	439c                	lw	a5,0(a5)
20015458:	439c                	lw	a5,0(a5)
2001545a:	fe842583          	lw	a1,-24(s0)
2001545e:	fec42503          	lw	a0,-20(s0)
20015462:	9782                	jalr	a5
20015464:	0001                	nop
20015466:	40f2                	lw	ra,28(sp)
20015468:	4462                	lw	s0,24(sp)
2001546a:	6105                	addi	sp,sp,32
2001546c:	8082                	ret

2001546e <metal_uart_putc>:
metal_uart_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:52
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) { return uart->vtable->putc(uart, c); }
2001546e:	1101                	addi	sp,sp,-32
20015470:	ce06                	sw	ra,28(sp)
20015472:	cc22                	sw	s0,24(sp)
20015474:	1000                	addi	s0,sp,32
20015476:	fea42623          	sw	a0,-20(s0)
2001547a:	feb42423          	sw	a1,-24(s0)
2001547e:	fec42783          	lw	a5,-20(s0)
20015482:	439c                	lw	a5,0(a5)
20015484:	43dc                	lw	a5,4(a5)
20015486:	fe842583          	lw	a1,-24(s0)
2001548a:	fec42503          	lw	a0,-20(s0)
2001548e:	9782                	jalr	a5
20015490:	87aa                	mv	a5,a0
20015492:	853e                	mv	a0,a5
20015494:	40f2                	lw	ra,28(sp)
20015496:	4462                	lw	s0,24(sp)
20015498:	6105                	addi	sp,sp,32
2001549a:	8082                	ret

2001549c <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/uart.h:85
 * @brief Set the baud rate of the UART peripheral
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart, int baud_rate) { return uart->vtable->set_baud_rate(uart, baud_rate); }
2001549c:	1101                	addi	sp,sp,-32
2001549e:	ce06                	sw	ra,28(sp)
200154a0:	cc22                	sw	s0,24(sp)
200154a2:	1000                	addi	s0,sp,32
200154a4:	fea42623          	sw	a0,-20(s0)
200154a8:	feb42423          	sw	a1,-24(s0)
200154ac:	fec42783          	lw	a5,-20(s0)
200154b0:	439c                	lw	a5,0(a5)
200154b2:	4bdc                	lw	a5,20(a5)
200154b4:	fe842583          	lw	a1,-24(s0)
200154b8:	fec42503          	lw	a0,-20(s0)
200154bc:	9782                	jalr	a5
200154be:	87aa                	mv	a5,a0
200154c0:	853e                	mv	a0,a5
200154c2:	40f2                	lw	ra,28(sp)
200154c4:	4462                	lw	s0,24(sp)
200154c6:	6105                	addi	sp,sp,32
200154c8:	8082                	ret

200154ca <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:203
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
200154ca:	1101                	addi	sp,sp,-32
200154cc:	ce22                	sw	s0,28(sp)
200154ce:	1000                	addi	s0,sp,32
200154d0:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:204
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200154d4:	fec42703          	lw	a4,-20(s0)
200154d8:	800017b7          	lui	a5,0x80001
200154dc:	ad478793          	addi	a5,a5,-1324 # 80000ad4 <metal_segment_heap_target_end+0xfffff2a8>
200154e0:	00f71563          	bne	a4,a5,200154ea <__metal_driver_sifive_clint0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:205
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
200154e4:	020007b7          	lui	a5,0x2000
200154e8:	a011                	j	200154ec <__metal_driver_sifive_clint0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:208
	}
	else {
		return 0;
200154ea:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:210
	}
}
200154ec:	853e                	mv	a0,a5
200154ee:	4472                	lw	s0,28(sp)
200154f0:	6105                	addi	sp,sp,32
200154f2:	8082                	ret

200154f4 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:223
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
200154f4:	1101                	addi	sp,sp,-32
200154f6:	ce22                	sw	s0,28(sp)
200154f8:	1000                	addi	s0,sp,32
200154fa:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:224
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200154fe:	fec42703          	lw	a4,-20(s0)
20015502:	800017b7          	lui	a5,0x80001
20015506:	ad478793          	addi	a5,a5,-1324 # 80000ad4 <metal_segment_heap_target_end+0xfffff2a8>
2001550a:	00f71463          	bne	a4,a5,20015512 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:225
		return METAL_MAX_CLINT_INTERRUPTS;
2001550e:	4789                	li	a5,2
20015510:	a011                	j	20015514 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:228
	}
	else {
		return 0;
20015512:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:230
	}
}
20015514:	853e                	mv	a0,a5
20015516:	4472                	lw	s0,28(sp)
20015518:	6105                	addi	sp,sp,32
2001551a:	8082                	ret

2001551c <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:233

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2001551c:	1101                	addi	sp,sp,-32
2001551e:	ce22                	sw	s0,28(sp)
20015520:	1000                	addi	s0,sp,32
20015522:	fea42623          	sw	a0,-20(s0)
20015526:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:234
	if (idx == 0) {
2001552a:	fe842783          	lw	a5,-24(s0)
2001552e:	e791                	bnez	a5,2001553a <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:235
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20015530:	800007b7          	lui	a5,0x80000
20015534:	0d078793          	addi	a5,a5,208 # 800000d0 <metal_segment_heap_target_end+0xffffe8a4>
20015538:	a821                	j	20015550 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:237
	}
	else if (idx == 1) {
2001553a:	fe842703          	lw	a4,-24(s0)
2001553e:	4785                	li	a5,1
20015540:	00f71763          	bne	a4,a5,2001554e <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:238
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20015544:	800007b7          	lui	a5,0x80000
20015548:	0d078793          	addi	a5,a5,208 # 800000d0 <metal_segment_heap_target_end+0xffffe8a4>
2001554c:	a011                	j	20015550 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:241
	}
	else {
		return NULL;
2001554e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:243
	}
}
20015550:	853e                	mv	a0,a5
20015552:	4472                	lw	s0,28(sp)
20015554:	6105                	addi	sp,sp,32
20015556:	8082                	ret

20015558 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:246

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20015558:	1101                	addi	sp,sp,-32
2001555a:	ce22                	sw	s0,28(sp)
2001555c:	1000                	addi	s0,sp,32
2001555e:	fea42623          	sw	a0,-20(s0)
20015562:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:247
	if (idx == 0) {
20015566:	fe842783          	lw	a5,-24(s0)
2001556a:	e399                	bnez	a5,20015570 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:248
		return 3;
2001556c:	478d                	li	a5,3
2001556e:	a809                	j	20015580 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:250
	}
	else if (idx == 1) {
20015570:	fe842703          	lw	a4,-24(s0)
20015574:	4785                	li	a5,1
20015576:	00f71463          	bne	a4,a5,2001557e <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:251
		return 7;
2001557a:	479d                	li	a5,7
2001557c:	a011                	j	20015580 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:254
	}
	else {
		return 0;
2001557e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:256
	}
}
20015580:	853e                	mv	a0,a5
20015582:	4472                	lw	s0,28(sp)
20015584:	6105                	addi	sp,sp,32
20015586:	8082                	ret

20015588 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/cpu.h>
#include <metal/drivers/riscv_clint0.h>
#include <metal/machine.h>

unsigned long long __metal_clint0_mtime_get (struct __metal_driver_riscv_clint0 *clint)
{
20015588:	715d                	addi	sp,sp,-80
2001558a:	c686                	sw	ra,76(sp)
2001558c:	c4a2                	sw	s0,72(sp)
2001558e:	c2ca                	sw	s2,68(sp)
20015590:	c0ce                	sw	s3,64(sp)
20015592:	de52                	sw	s4,60(sp)
20015594:	dc56                	sw	s5,56(sp)
20015596:	da5a                	sw	s6,52(sp)
20015598:	d85e                	sw	s7,48(sp)
2001559a:	d662                	sw	s8,44(sp)
2001559c:	d466                	sw	s9,40(sp)
2001559e:	0880                	addi	s0,sp,80
200155a0:	faa42e23          	sw	a0,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:16
    __metal_io_u32 lo, hi;
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
200155a4:	fbc42783          	lw	a5,-68(s0)
200155a8:	853e                	mv	a0,a5
200155aa:	3705                	jal	200154ca <__metal_driver_sifive_clint0_control_base>
200155ac:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:20 (discriminator 1)

    /* Guard against rollover when reading */
    do {
	hi = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
200155b0:	fcc42703          	lw	a4,-52(s0)
200155b4:	67b1                	lui	a5,0xc
200155b6:	17f1                	addi	a5,a5,-4
200155b8:	97ba                	add	a5,a5,a4
200155ba:	439c                	lw	a5,0(a5)
200155bc:	fcf42423          	sw	a5,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)
	lo = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
200155c0:	fcc42703          	lw	a4,-52(s0)
200155c4:	67b1                	lui	a5,0xc
200155c6:	17e1                	addi	a5,a5,-8
200155c8:	97ba                	add	a5,a5,a4
200155ca:	439c                	lw	a5,0(a5)
200155cc:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:22 (discriminator 1)
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4)) != hi);
200155d0:	fcc42703          	lw	a4,-52(s0)
200155d4:	67b1                	lui	a5,0xc
200155d6:	17f1                	addi	a5,a5,-4
200155d8:	97ba                	add	a5,a5,a4
200155da:	439c                	lw	a5,0(a5)
200155dc:	fc842703          	lw	a4,-56(s0)
200155e0:	fcf718e3          	bne	a4,a5,200155b0 <__metal_clint0_mtime_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:24

    return (((unsigned long long)hi) << 32) | lo;
200155e4:	fc842783          	lw	a5,-56(s0)
200155e8:	8c3e                	mv	s8,a5
200155ea:	4c81                	li	s9,0
200155ec:	000c1993          	slli	s3,s8,0x0
200155f0:	4901                	li	s2,0
200155f2:	fc442783          	lw	a5,-60(s0)
200155f6:	8a3e                	mv	s4,a5
200155f8:	4a81                	li	s5,0
200155fa:	01496b33          	or	s6,s2,s4
200155fe:	0159ebb3          	or	s7,s3,s5
20015602:	87da                	mv	a5,s6
20015604:	885e                	mv	a6,s7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25
}
20015606:	853e                	mv	a0,a5
20015608:	85c2                	mv	a1,a6
2001560a:	40b6                	lw	ra,76(sp)
2001560c:	4426                	lw	s0,72(sp)
2001560e:	4916                	lw	s2,68(sp)
20015610:	4986                	lw	s3,64(sp)
20015612:	5a72                	lw	s4,60(sp)
20015614:	5ae2                	lw	s5,56(sp)
20015616:	5b52                	lw	s6,52(sp)
20015618:	5bc2                	lw	s7,48(sp)
2001561a:	5c32                	lw	s8,44(sp)
2001561c:	5ca2                	lw	s9,40(sp)
2001561e:	6161                	addi	sp,sp,80
20015620:	8082                	ret

20015622 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time)
{   
20015622:	7179                	addi	sp,sp,-48
20015624:	d606                	sw	ra,44(sp)
20015626:	d422                	sw	s0,40(sp)
20015628:	d24a                	sw	s2,36(sp)
2001562a:	d04e                	sw	s3,32(sp)
2001562c:	1800                	addi	s0,sp,48
2001562e:	fca42e23          	sw	a0,-36(s0)
20015632:	fcb42c23          	sw	a1,-40(s0)
20015636:	fcc42823          	sw	a2,-48(s0)
2001563a:	fcd42a23          	sw	a3,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:31
    struct __metal_driver_riscv_clint0 *clint =
2001563e:	fdc42783          	lw	a5,-36(s0)
20015642:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:33
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
20015646:	fec42783          	lw	a5,-20(s0)
2001564a:	853e                	mv	a0,a5
2001564c:	3dbd                	jal	200154ca <__metal_driver_sifive_clint0_control_base>
2001564e:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:40
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = 0xFFFFFFFF;
20015652:	fd842783          	lw	a5,-40(s0)
20015656:	078e                	slli	a5,a5,0x3
20015658:	873e                	mv	a4,a5
2001565a:	fe842783          	lw	a5,-24(s0)
2001565e:	973e                	add	a4,a4,a5
20015660:	6791                	lui	a5,0x4
20015662:	0791                	addi	a5,a5,4
20015664:	97ba                	add	a5,a5,a4
20015666:	873e                	mv	a4,a5
20015668:	57fd                	li	a5,-1
2001566a:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:41
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE)) = (__metal_io_u32)time;
2001566c:	fd842783          	lw	a5,-40(s0)
20015670:	078e                	slli	a5,a5,0x3
20015672:	873e                	mv	a4,a5
20015674:	fe842783          	lw	a5,-24(s0)
20015678:	973e                	add	a4,a4,a5
2001567a:	6791                	lui	a5,0x4
2001567c:	97ba                	add	a5,a5,a4
2001567e:	873e                	mv	a4,a5
20015680:	fd042783          	lw	a5,-48(s0)
20015684:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:42
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = (__metal_io_u32)(time >> 32);
20015686:	fd442783          	lw	a5,-44(s0)
2001568a:	0007d913          	srli	s2,a5,0x0
2001568e:	4981                	li	s3,0
20015690:	fd842783          	lw	a5,-40(s0)
20015694:	078e                	slli	a5,a5,0x3
20015696:	873e                	mv	a4,a5
20015698:	fe842783          	lw	a5,-24(s0)
2001569c:	973e                	add	a4,a4,a5
2001569e:	6791                	lui	a5,0x4
200156a0:	0791                	addi	a5,a5,4
200156a2:	97ba                	add	a5,a5,a4
200156a4:	874a                	mv	a4,s2
200156a6:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:43
    return 0;
200156a8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:44
}
200156aa:	853e                	mv	a0,a5
200156ac:	50b2                	lw	ra,44(sp)
200156ae:	5422                	lw	s0,40(sp)
200156b0:	5912                	lw	s2,36(sp)
200156b2:	5982                	lw	s3,32(sp)
200156b4:	6145                	addi	sp,sp,48
200156b6:	8082                	ret

200156b8 <_get_cpu_intc>:
_get_cpu_intc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47

static struct metal_interrupt *_get_cpu_intc()
{
200156b8:	1101                	addi	sp,sp,-32
200156ba:	ce06                	sw	ra,28(sp)
200156bc:	cc22                	sw	s0,24(sp)
200156be:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    int hartid = 0;
200156c0:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
    __asm__ volatile("csrr %[hartid], mhartid"
200156c4:	f14027f3          	csrr	a5,mhartid
200156c8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:52
                     : [hartid] "=r" (hartid) :: "memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
200156cc:	fec42783          	lw	a5,-20(s0)
200156d0:	853e                	mv	a0,a5
200156d2:	673030ef          	jal	ra,20019544 <metal_cpu_get>
200156d6:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54

    return metal_cpu_interrupt_controller(cpu);
200156da:	fe842503          	lw	a0,-24(s0)
200156de:	641030ef          	jal	ra,2001951e <metal_cpu_interrupt_controller>
200156e2:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
200156e4:	853e                	mv	a0,a5
200156e6:	40f2                	lw	ra,28(sp)
200156e8:	4462                	lw	s0,24(sp)
200156ea:	6105                	addi	sp,sp,32
200156ec:	8082                	ret

200156ee <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58

void __metal_driver_riscv_clint0_init (struct metal_interrupt *controller)
{
200156ee:	7139                	addi	sp,sp,-64
200156f0:	de06                	sw	ra,60(sp)
200156f2:	dc22                	sw	s0,56(sp)
200156f4:	0080                	addi	s0,sp,64
200156f6:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
200156fa:	fcc42503          	lw	a0,-52(s0)
200156fe:	3bdd                	jal	200154f4 <__metal_driver_sifive_clint0_num_interrupts>
20015700:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:60
    struct __metal_driver_riscv_clint0 *clint =
20015704:	fcc42783          	lw	a5,-52(s0)
20015708:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:63
                              (struct __metal_driver_riscv_clint0 *)(controller);

    if ( !clint->init_done ) {
2001570c:	fe442783          	lw	a5,-28(s0)
20015710:	43dc                	lw	a5,4(a5)
20015712:	efa9                	bnez	a5,2001576c <__metal_driver_riscv_clint0_init+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
	/* Register its interrupts with with parent controller, aka sw and timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20015714:	fe042623          	sw	zero,-20(s0)
20015718:	a081                	j	20015758 <__metal_driver_riscv_clint0_init+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:66 (discriminator 3)
	  struct metal_interrupt *intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001571a:	fec42583          	lw	a1,-20(s0)
2001571e:	fcc42503          	lw	a0,-52(s0)
20015722:	3bed                	jal	2001551c <__metal_driver_sifive_clint0_interrupt_parents>
20015724:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67 (discriminator 3)
	  int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20015728:	fec42583          	lw	a1,-20(s0)
2001572c:	fcc42503          	lw	a0,-52(s0)
20015730:	3525                	jal	20015558 <__metal_driver_sifive_clint0_interrupt_lines>
20015732:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:68 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20015736:	fe042783          	lw	a5,-32(s0)
2001573a:	439c                	lw	a5,0(a5)
2001573c:	4fdc                	lw	a5,28(a5)
2001573e:	fcc42683          	lw	a3,-52(s0)
20015742:	4601                	li	a2,0
20015744:	fdc42583          	lw	a1,-36(s0)
20015748:	fe042503          	lw	a0,-32(s0)
2001574c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
2001574e:	fec42783          	lw	a5,-20(s0)
20015752:	0785                	addi	a5,a5,1
20015754:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 1)
20015758:	fec42703          	lw	a4,-20(s0)
2001575c:	fe842783          	lw	a5,-24(s0)
20015760:	faf74de3          	blt	a4,a5,2001571a <__metal_driver_riscv_clint0_init+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
	}
	clint->init_done = 1;
20015764:	fe442783          	lw	a5,-28(s0)
20015768:	4705                	li	a4,1
2001576a:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:72
    }	
}
2001576c:	0001                	nop
2001576e:	50f2                	lw	ra,60(sp)
20015770:	5462                	lw	s0,56(sp)
20015772:	6121                	addi	sp,sp,64
20015774:	8082                	ret

20015776 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:77

int __metal_driver_riscv_clint0_register (struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv)
{
20015776:	7139                	addi	sp,sp,-64
20015778:	de06                	sw	ra,60(sp)
2001577a:	dc22                	sw	s0,56(sp)
2001577c:	0080                	addi	s0,sp,64
2001577e:	fca42623          	sw	a0,-52(s0)
20015782:	fcb42423          	sw	a1,-56(s0)
20015786:	fcc42223          	sw	a2,-60(s0)
2001578a:	fcd42023          	sw	a3,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78
    int rc = -1;
2001578e:	57fd                	li	a5,-1
20015790:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:79
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20015794:	3c6010ef          	jal	ra,20016b5a <__metal_controller_interrupt_vector_mode>
20015798:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80
    struct metal_interrupt *intc = NULL;
2001579c:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
200157a0:	3f21                	jal	200156b8 <_get_cpu_intc>
200157a2:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:82
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
200157a6:	fcc42503          	lw	a0,-52(s0)
200157aa:	33a9                	jal	200154f4 <__metal_driver_sifive_clint0_num_interrupts>
200157ac:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84

    if ( (mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE) ) {
200157b0:	fe042703          	lw	a4,-32(s0)
200157b4:	4785                	li	a5,1
200157b6:	00f70863          	beq	a4,a5,200157c6 <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84 (discriminator 1)
200157ba:	fe042783          	lw	a5,-32(s0)
200157be:	c781                	beqz	a5,200157c6 <__metal_driver_riscv_clint0_register+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
        return rc;
200157c0:	fec42783          	lw	a5,-20(s0)
200157c4:	a049                	j	20015846 <__metal_driver_riscv_clint0_register+0xd0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88
    }

    for(int i = 0; i < num_interrupts; i++) {
200157c6:	fe042223          	sw	zero,-28(s0)
200157ca:	a091                	j	2001580e <__metal_driver_riscv_clint0_register+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89
	int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200157cc:	fe442583          	lw	a1,-28(s0)
200157d0:	fcc42503          	lw	a0,-52(s0)
200157d4:	3351                	jal	20015558 <__metal_driver_sifive_clint0_interrupt_lines>
200157d6:	fca42a23          	sw	a0,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200157da:	fe442583          	lw	a1,-28(s0)
200157de:	fcc42503          	lw	a0,-52(s0)
200157e2:	3b2d                	jal	2001551c <__metal_driver_sifive_clint0_interrupt_parents>
200157e4:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
        if (cpu_intc == intc && id == line) {
200157e8:	fdc42703          	lw	a4,-36(s0)
200157ec:	fe842783          	lw	a5,-24(s0)
200157f0:	00f71863          	bne	a4,a5,20015800 <__metal_driver_riscv_clint0_register+0x8a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91 (discriminator 1)
200157f4:	fc842703          	lw	a4,-56(s0)
200157f8:	fd442783          	lw	a5,-44(s0)
200157fc:	02f70063          	beq	a4,a5,2001581c <__metal_driver_riscv_clint0_register+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:94 (discriminator 2)
            break;
        }
	intc = NULL;
20015800:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 2)
    for(int i = 0; i < num_interrupts; i++) {
20015804:	fe442783          	lw	a5,-28(s0)
20015808:	0785                	addi	a5,a5,1
2001580a:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 1)
2001580e:	fe442703          	lw	a4,-28(s0)
20015812:	fd842783          	lw	a5,-40(s0)
20015816:	faf74be3          	blt	a4,a5,200157cc <__metal_driver_riscv_clint0_register+0x56>
2001581a:	a011                	j	2001581e <__metal_driver_riscv_clint0_register+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
            break;
2001581c:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
    }

    /* Register its interrupts with parent controller */
    if (intc) {
2001581e:	fe842783          	lw	a5,-24(s0)
20015822:	c385                	beqz	a5,20015842 <__metal_driver_riscv_clint0_register+0xcc>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:99
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20015824:	fe842783          	lw	a5,-24(s0)
20015828:	439c                	lw	a5,0(a5)
2001582a:	4fdc                	lw	a5,28(a5)
2001582c:	fc042683          	lw	a3,-64(s0)
20015830:	fc442603          	lw	a2,-60(s0)
20015834:	fc842583          	lw	a1,-56(s0)
20015838:	fe842503          	lw	a0,-24(s0)
2001583c:	9782                	jalr	a5
2001583e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }
    return rc;
20015842:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
}
20015846:	853e                	mv	a0,a5
20015848:	50f2                	lw	ra,60(sp)
2001584a:	5462                	lw	s0,56(sp)
2001584c:	6121                	addi	sp,sp,64
2001584e:	8082                	ret

20015850 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107

int __metal_driver_riscv_clint0_vector_register (struct metal_interrupt *controller,
                                                 int id, metal_interrupt_vector_handler_t isr,
                                                 void *priv)
{   
20015850:	7179                	addi	sp,sp,-48
20015852:	d622                	sw	s0,44(sp)
20015854:	1800                	addi	s0,sp,48
20015856:	fca42e23          	sw	a0,-36(s0)
2001585a:	fcb42c23          	sw	a1,-40(s0)
2001585e:	fcc42a23          	sw	a2,-44(s0)
20015862:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:109
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20015866:	57fd                	li	a5,-1
20015868:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:110
    return rc;
2001586c:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
}
20015870:	853e                	mv	a0,a5
20015872:	5432                	lw	s0,44(sp)
20015874:	6145                	addi	sp,sp,48
20015876:	8082                	ret

20015878 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode (struct metal_interrupt *controller)
{
20015878:	1101                	addi	sp,sp,-32
2001587a:	ce06                	sw	ra,28(sp)
2001587c:	cc22                	sw	s0,24(sp)
2001587e:	1000                	addi	s0,sp,32
20015880:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
    return __metal_controller_interrupt_vector_mode();
20015884:	2d6010ef          	jal	ra,20016b5a <__metal_controller_interrupt_vector_mode>
20015888:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:116
}
2001588a:	853e                	mv	a0,a5
2001588c:	40f2                	lw	ra,28(sp)
2001588e:	4462                	lw	s0,24(sp)
20015890:	6105                	addi	sp,sp,32
20015892:	8082                	ret

20015894 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_set_vector_mode (struct metal_interrupt *controller, metal_vector_mode mode)
{
20015894:	7179                	addi	sp,sp,-48
20015896:	d606                	sw	ra,44(sp)
20015898:	d422                	sw	s0,40(sp)
2001589a:	1800                	addi	s0,sp,48
2001589c:	fca42e23          	sw	a0,-36(s0)
200158a0:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:120
    int rc = -1;
200158a4:	57fd                	li	a5,-1
200158a6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    struct metal_interrupt *intc = _get_cpu_intc();
200158aa:	3539                	jal	200156b8 <_get_cpu_intc>
200158ac:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123

    if (intc) {
200158b0:	fe842783          	lw	a5,-24(s0)
200158b4:	c395                	beqz	a5,200158d8 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:125
	/* Valid vector modes are VECTOR and DIRECT, anything else is invalid (-1) */
        switch (mode) {
200158b6:	fd842703          	lw	a4,-40(s0)
200158ba:	4785                	li	a5,1
200158bc:	00e7ef63          	bltu	a5,a4,200158da <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
200158c0:	fe842783          	lw	a5,-24(s0)
200158c4:	439c                	lw	a5,0(a5)
200158c6:	43dc                	lw	a5,4(a5)
200158c8:	fd842583          	lw	a1,-40(s0)
200158cc:	fe842503          	lw	a0,-24(s0)
200158d0:	9782                	jalr	a5
200158d2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:129
            break;
200158d6:	a011                	j	200158da <__metal_driver_riscv_clint0_set_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131
        }
    }
200158d8:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    return rc;
200158da:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
}
200158de:	853e                	mv	a0,a5
200158e0:	50b2                	lw	ra,44(sp)
200158e2:	5422                	lw	s0,40(sp)
200158e4:	6145                	addi	sp,sp,48
200158e6:	8082                	ret

200158e8 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:136

int __metal_driver_riscv_clint0_enable (struct metal_interrupt *controller, int id)
{
200158e8:	7139                	addi	sp,sp,-64
200158ea:	de06                	sw	ra,60(sp)
200158ec:	dc22                	sw	s0,56(sp)
200158ee:	0080                	addi	s0,sp,64
200158f0:	fca42623          	sw	a0,-52(s0)
200158f4:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:137
    int rc = -1;
200158f8:	57fd                	li	a5,-1
200158fa:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:139

    if ( id ) {
200158fe:	fc842783          	lw	a5,-56(s0)
20015902:	c7c9                	beqz	a5,2001598c <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:140
        struct metal_interrupt *intc = NULL;
20015904:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20015908:	3b45                	jal	200156b8 <_get_cpu_intc>
2001590a:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
2001590e:	fcc42503          	lw	a0,-52(s0)
20015912:	36cd                	jal	200154f4 <__metal_driver_sifive_clint0_num_interrupts>
20015914:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144

        for(int i = 0; i < num_interrupts; i++) {
20015918:	fe042223          	sw	zero,-28(s0)
2001591c:	a091                	j	20015960 <__metal_driver_riscv_clint0_enable+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:145
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001591e:	fe442583          	lw	a1,-28(s0)
20015922:	fcc42503          	lw	a0,-52(s0)
20015926:	390d                	jal	20015558 <__metal_driver_sifive_clint0_interrupt_lines>
20015928:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001592c:	fe442583          	lw	a1,-28(s0)
20015930:	fcc42503          	lw	a0,-52(s0)
20015934:	36e5                	jal	2001551c <__metal_driver_sifive_clint0_interrupt_parents>
20015936:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
            if(cpu_intc == intc && id == line) {
2001593a:	fe042703          	lw	a4,-32(s0)
2001593e:	fe842783          	lw	a5,-24(s0)
20015942:	00f71863          	bne	a4,a5,20015952 <__metal_driver_riscv_clint0_enable+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147 (discriminator 1)
20015946:	fc842703          	lw	a4,-56(s0)
2001594a:	fd842783          	lw	a5,-40(s0)
2001594e:	02f70063          	beq	a4,a5,2001596e <__metal_driver_riscv_clint0_enable+0x86>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:150 (discriminator 2)
                break;
            }
	    intc = NULL;
20015952:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
20015956:	fe442783          	lw	a5,-28(s0)
2001595a:	0785                	addi	a5,a5,1
2001595c:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 1)
20015960:	fe442703          	lw	a4,-28(s0)
20015964:	fdc42783          	lw	a5,-36(s0)
20015968:	faf74be3          	blt	a4,a5,2001591e <__metal_driver_riscv_clint0_enable+0x36>
2001596c:	a011                	j	20015970 <__metal_driver_riscv_clint0_enable+0x88>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
                break;
2001596e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154
        }
        
        /* Enable its interrupts with parent controller */
        if (intc) {
20015970:	fe842783          	lw	a5,-24(s0)
20015974:	cf81                	beqz	a5,2001598c <__metal_driver_riscv_clint0_enable+0xa4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
            rc = intc->vtable->interrupt_enable(intc, id);
20015976:	fe842783          	lw	a5,-24(s0)
2001597a:	439c                	lw	a5,0(a5)
2001597c:	53dc                	lw	a5,36(a5)
2001597e:	fc842583          	lw	a1,-56(s0)
20015982:	fe842503          	lw	a0,-24(s0)
20015986:	9782                	jalr	a5
20015988:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:159
        }
    }

    return rc;
2001598c:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160
}
20015990:	853e                	mv	a0,a5
20015992:	50f2                	lw	ra,60(sp)
20015994:	5462                	lw	s0,56(sp)
20015996:	6121                	addi	sp,sp,64
20015998:	8082                	ret

2001599a <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:163

int __metal_driver_riscv_clint0_disable (struct metal_interrupt *controller, int id)
{
2001599a:	7139                	addi	sp,sp,-64
2001599c:	de06                	sw	ra,60(sp)
2001599e:	dc22                	sw	s0,56(sp)
200159a0:	0080                	addi	s0,sp,64
200159a2:	fca42623          	sw	a0,-52(s0)
200159a6:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
    int rc = -1;
200159aa:	57fd                	li	a5,-1
200159ac:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166

    if ( id ) {
200159b0:	fc842783          	lw	a5,-56(s0)
200159b4:	cbc1                	beqz	a5,20015a44 <__metal_driver_riscv_clint0_disable+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:167
        struct metal_interrupt *intc = NULL;
200159b6:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
200159ba:	39fd                	jal	200156b8 <_get_cpu_intc>
200159bc:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:169
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
200159c0:	fcc42503          	lw	a0,-52(s0)
200159c4:	b31ff0ef          	jal	ra,200154f4 <__metal_driver_sifive_clint0_num_interrupts>
200159c8:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171

        for(int i = 0; i < num_interrupts; i++) {
200159cc:	fe042223          	sw	zero,-28(s0)
200159d0:	a0a1                	j	20015a18 <__metal_driver_riscv_clint0_disable+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200159d2:	fe442583          	lw	a1,-28(s0)
200159d6:	fcc42503          	lw	a0,-52(s0)
200159da:	b7fff0ef          	jal	ra,20015558 <__metal_driver_sifive_clint0_interrupt_lines>
200159de:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200159e2:	fe442583          	lw	a1,-28(s0)
200159e6:	fcc42503          	lw	a0,-52(s0)
200159ea:	b33ff0ef          	jal	ra,2001551c <__metal_driver_sifive_clint0_interrupt_parents>
200159ee:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174
            if(cpu_intc == intc && id == line) {
200159f2:	fe042703          	lw	a4,-32(s0)
200159f6:	fe842783          	lw	a5,-24(s0)
200159fa:	00f71863          	bne	a4,a5,20015a0a <__metal_driver_riscv_clint0_disable+0x70>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:174 (discriminator 1)
200159fe:	fc842703          	lw	a4,-56(s0)
20015a02:	fd842783          	lw	a5,-40(s0)
20015a06:	02f70063          	beq	a4,a5,20015a26 <__metal_driver_riscv_clint0_disable+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177 (discriminator 2)
                break;
            }
	    intc = NULL;
20015a0a:	fe042423          	sw	zero,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
20015a0e:	fe442783          	lw	a5,-28(s0)
20015a12:	0785                	addi	a5,a5,1
20015a14:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 1)
20015a18:	fe442703          	lw	a4,-28(s0)
20015a1c:	fdc42783          	lw	a5,-36(s0)
20015a20:	faf749e3          	blt	a4,a5,200159d2 <__metal_driver_riscv_clint0_disable+0x38>
20015a24:	a011                	j	20015a28 <__metal_driver_riscv_clint0_disable+0x8e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:175
                break;
20015a26:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181
        }
        
        /* Disable its interrupts with parent controller */
        if (intc) {
20015a28:	fe842783          	lw	a5,-24(s0)
20015a2c:	cf81                	beqz	a5,20015a44 <__metal_driver_riscv_clint0_disable+0xaa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
            rc = intc->vtable->interrupt_disable(intc, id);
20015a2e:	fe842783          	lw	a5,-24(s0)
20015a32:	439c                	lw	a5,0(a5)
20015a34:	579c                	lw	a5,40(a5)
20015a36:	fc842583          	lw	a1,-56(s0)
20015a3a:	fe842503          	lw	a0,-24(s0)
20015a3e:	9782                	jalr	a5
20015a40:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        }
    }

    return rc;
20015a44:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:187
}
20015a48:	853e                	mv	a0,a5
20015a4a:	50f2                	lw	ra,60(sp)
20015a4c:	5462                	lw	s0,56(sp)
20015a4e:	6121                	addi	sp,sp,64
20015a50:	8082                	ret

20015a52 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:191

int __metal_driver_riscv_clint0_command_request (struct metal_interrupt *controller,
                                               int command, void *data)
{
20015a52:	7179                	addi	sp,sp,-48
20015a54:	d606                	sw	ra,44(sp)
20015a56:	d422                	sw	s0,40(sp)
20015a58:	1800                	addi	s0,sp,48
20015a5a:	fca42e23          	sw	a0,-36(s0)
20015a5e:	fcb42c23          	sw	a1,-40(s0)
20015a62:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:193
    int hartid;
    int rc = -1;
20015a66:	57fd                	li	a5,-1
20015a68:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
    struct __metal_driver_riscv_clint0 *clint =
20015a6c:	fdc42783          	lw	a5,-36(s0)
20015a70:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(controller);
20015a74:	fdc42503          	lw	a0,-36(s0)
20015a78:	a53ff0ef          	jal	ra,200154ca <__metal_driver_sifive_clint0_control_base>
20015a7c:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198

    switch (command) {
20015a80:	fd842703          	lw	a4,-40(s0)
20015a84:	4789                	li	a5,2
20015a86:	04f70963          	beq	a4,a5,20015ad8 <__metal_driver_riscv_clint0_command_request+0x86>
20015a8a:	fd842703          	lw	a4,-40(s0)
20015a8e:	4789                	li	a5,2
20015a90:	00e7c863          	blt	a5,a4,20015aa0 <__metal_driver_riscv_clint0_command_request+0x4e>
20015a94:	fd842703          	lw	a4,-40(s0)
20015a98:	4785                	li	a5,1
20015a9a:	00f70e63          	beq	a4,a5,20015ab6 <__metal_driver_riscv_clint0_command_request+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
						    (hartid * 4)));
        }
        break;
    default:
	break;
20015a9e:	a8f1                	j	20015b7a <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198
    switch (command) {
20015aa0:	fd842703          	lw	a4,-40(s0)
20015aa4:	478d                	li	a5,3
20015aa6:	04f70d63          	beq	a4,a5,20015b00 <__metal_driver_riscv_clint0_command_request+0xae>
20015aaa:	fd842703          	lw	a4,-40(s0)
20015aae:	4791                	li	a5,4
20015ab0:	08f70963          	beq	a4,a5,20015b42 <__metal_driver_riscv_clint0_command_request+0xf0>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:242
	break;
20015ab4:	a0d9                	j	20015b7a <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:200
        if (data) {
20015ab6:	fd442783          	lw	a5,-44(s0)
20015aba:	cbcd                	beqz	a5,20015b6c <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:201
	    *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20015abc:	fe842503          	lw	a0,-24(s0)
20015ac0:	ac9ff0ef          	jal	ra,20015588 <__metal_clint0_mtime_get>
20015ac4:	87aa                	mv	a5,a0
20015ac6:	882e                	mv	a6,a1
20015ac8:	fd442703          	lw	a4,-44(s0)
20015acc:	c31c                	sw	a5,0(a4)
20015ace:	01072223          	sw	a6,4(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
            rc = 0;
20015ad2:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20015ad6:	a859                	j	20015b6c <__metal_driver_riscv_clint0_command_request+0x11a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:206
	if (data) {
20015ad8:	fd442783          	lw	a5,-44(s0)
20015adc:	cbd1                	beqz	a5,20015b70 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
	    hartid = *(int *)data;
20015ade:	fd442783          	lw	a5,-44(s0)
20015ae2:	439c                	lw	a5,0(a5)
20015ae4:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20015ae8:	fe042783          	lw	a5,-32(s0)
20015aec:	078a                	slli	a5,a5,0x2
20015aee:	873e                	mv	a4,a5
20015af0:	fe442783          	lw	a5,-28(s0)
20015af4:	97ba                	add	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:209
					       (hartid * 4))) = METAL_DISABLE;
20015af6:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:210
            rc = 0;
20015afa:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20015afe:	a88d                	j	20015b70 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
	if (data) {
20015b00:	fd442783          	lw	a5,-44(s0)
20015b04:	cba5                	beqz	a5,20015b74 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:215
	    hartid = *(int *)data;
20015b06:	fd442783          	lw	a5,-44(s0)
20015b0a:	439c                	lw	a5,0(a5)
20015b0c:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:216
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20015b10:	fe042783          	lw	a5,-32(s0)
20015b14:	078a                	slli	a5,a5,0x2
20015b16:	873e                	mv	a4,a5
20015b18:	fe442783          	lw	a5,-28(s0)
20015b1c:	97ba                	add	a5,a5,a4
20015b1e:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
					       (hartid * 4))) = METAL_ENABLE;
20015b20:	4785                	li	a5,1
20015b22:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
	    __METAL_IO_FENCE(o,i);
20015b24:	0480000f          	fence	o,i
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20015b28:	fe042783          	lw	a5,-32(s0)
20015b2c:	078a                	slli	a5,a5,0x2
20015b2e:	873e                	mv	a4,a5
20015b30:	fe442783          	lw	a5,-28(s0)
20015b34:	97ba                	add	a5,a5,a4
20015b36:	439c                	lw	a5,0(a5)
20015b38:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
            rc = 0;
20015b3c:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20015b40:	a815                	j	20015b74 <__metal_driver_riscv_clint0_command_request+0x122>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:234
        rc = 0;
20015b42:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
	if (data) {
20015b46:	fd442783          	lw	a5,-44(s0)
20015b4a:	c79d                	beqz	a5,20015b78 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
	    hartid = *(int *)data;
20015b4c:	fd442783          	lw	a5,-44(s0)
20015b50:	439c                	lw	a5,0(a5)
20015b52:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20015b56:	fe042783          	lw	a5,-32(s0)
20015b5a:	078a                	slli	a5,a5,0x2
20015b5c:	873e                	mv	a4,a5
20015b5e:	fe442783          	lw	a5,-28(s0)
20015b62:	97ba                	add	a5,a5,a4
20015b64:	439c                	lw	a5,0(a5)
20015b66:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20015b6a:	a039                	j	20015b78 <__metal_driver_riscv_clint0_command_request+0x126>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
20015b6c:	0001                	nop
20015b6e:	a031                	j	20015b7a <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20015b70:	0001                	nop
20015b72:	a021                	j	20015b7a <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
20015b74:	0001                	nop
20015b76:	a011                	j	20015b7a <__metal_driver_riscv_clint0_command_request+0x128>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
20015b78:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:245
    }

    return rc;
20015b7a:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:246
}
20015b7e:	853e                	mv	a0,a5
20015b80:	50b2                	lw	ra,44(sp)
20015b82:	5422                	lw	s0,40(sp)
20015b84:	6145                	addi	sp,sp,48
20015b86:	8082                	ret

20015b88 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249

int __metal_driver_riscv_clint0_clear_interrupt (struct metal_interrupt *controller, int id)
{
20015b88:	7179                	addi	sp,sp,-48
20015b8a:	d606                	sw	ra,44(sp)
20015b8c:	d422                	sw	s0,40(sp)
20015b8e:	1800                	addi	s0,sp,48
20015b90:	fca42e23          	sw	a0,-36(s0)
20015b94:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:250
    int hartid = metal_cpu_get_current_hartid();
20015b98:	1db030ef          	jal	ra,20019572 <metal_cpu_get_current_hartid>
20015b9c:	87aa                	mv	a5,a0
20015b9e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
    return __metal_driver_riscv_clint0_command_request(controller,
20015ba2:	fec40793          	addi	a5,s0,-20
20015ba6:	863e                	mv	a2,a5
20015ba8:	4589                	li	a1,2
20015baa:	fdc42503          	lw	a0,-36(s0)
20015bae:	3555                	jal	20015a52 <__metal_driver_riscv_clint0_command_request>
20015bb0:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
						METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20015bb2:	853e                	mv	a0,a5
20015bb4:	50b2                	lw	ra,44(sp)
20015bb6:	5422                	lw	s0,40(sp)
20015bb8:	6145                	addi	sp,sp,48
20015bba:	8082                	ret

20015bbc <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256

int __metal_driver_riscv_clint0_set_interrupt (struct metal_interrupt *controller, int id)
{
20015bbc:	7179                	addi	sp,sp,-48
20015bbe:	d606                	sw	ra,44(sp)
20015bc0:	d422                	sw	s0,40(sp)
20015bc2:	1800                	addi	s0,sp,48
20015bc4:	fca42e23          	sw	a0,-36(s0)
20015bc8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
    int hartid = metal_cpu_get_current_hartid();
20015bcc:	1a7030ef          	jal	ra,20019572 <metal_cpu_get_current_hartid>
20015bd0:	87aa                	mv	a5,a0
20015bd2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
    return __metal_driver_riscv_clint0_command_request(controller,
20015bd6:	fec40793          	addi	a5,s0,-20
20015bda:	863e                	mv	a2,a5
20015bdc:	458d                	li	a1,3
20015bde:	fdc42503          	lw	a0,-36(s0)
20015be2:	3d85                	jal	20015a52 <__metal_driver_riscv_clint0_command_request>
20015be4:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:260
						METAL_SOFTWARE_IPI_SET, &hartid);
}
20015be6:	853e                	mv	a0,a5
20015be8:	50b2                	lw	ra,44(sp)
20015bea:	5422                	lw	s0,40(sp)
20015bec:	6145                	addi	sp,sp,48
20015bee:	8082                	ret

20015bf0 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:262



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20015bf0:	1101                	addi	sp,sp,-32
20015bf2:	ce22                	sw	s0,28(sp)
20015bf4:	1000                	addi	s0,sp,32
20015bf6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:263
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20015bfa:	fec42703          	lw	a4,-20(s0)
20015bfe:	81418793          	addi	a5,gp,-2028 # 80000adc <__metal_dt_cpu_0>
20015c02:	00f71463          	bne	a4,a5,20015c0a <__metal_driver_cpu_hartid+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:264
		return 0;
20015c06:	4781                	li	a5,0
20015c08:	a011                	j	20015c0c <__metal_driver_cpu_hartid+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:267
	}
	else {
		return -1;
20015c0a:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:269
	}
}
20015c0c:	853e                	mv	a0,a5
20015c0e:	4472                	lw	s0,28(sp)
20015c10:	6105                	addi	sp,sp,32
20015c12:	8082                	ret

20015c14 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:272

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20015c14:	1101                	addi	sp,sp,-32
20015c16:	ce22                	sw	s0,28(sp)
20015c18:	1000                	addi	s0,sp,32
20015c1a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:273
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20015c1e:	fec42703          	lw	a4,-20(s0)
20015c22:	81418793          	addi	a5,gp,-2028 # 80000adc <__metal_dt_cpu_0>
20015c26:	00f71763          	bne	a4,a5,20015c34 <__metal_driver_cpu_timebase+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:274
		return 16000000;
20015c2a:	00f427b7          	lui	a5,0xf42
20015c2e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20015c32:	a011                	j	20015c36 <__metal_driver_cpu_timebase+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:277
	}
	else {
		return 0;
20015c34:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:279
	}
}
20015c36:	853e                	mv	a0,a5
20015c38:	4472                	lw	s0,28(sp)
20015c3a:	6105                	addi	sp,sp,32
20015c3c:	8082                	ret

20015c3e <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:282

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20015c3e:	1101                	addi	sp,sp,-32
20015c40:	ce22                	sw	s0,28(sp)
20015c42:	1000                	addi	s0,sp,32
20015c44:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:283
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20015c48:	fec42703          	lw	a4,-20(s0)
20015c4c:	81418793          	addi	a5,gp,-2028 # 80000adc <__metal_dt_cpu_0>
20015c50:	00f71763          	bne	a4,a5,20015c5e <__metal_driver_cpu_interrupt_controller+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:284
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20015c54:	800007b7          	lui	a5,0x80000
20015c58:	0d078793          	addi	a5,a5,208 # 800000d0 <metal_segment_heap_target_end+0xffffe8a4>
20015c5c:	a011                	j	20015c60 <__metal_driver_cpu_interrupt_controller+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:287
	}
	else {
		return NULL;
20015c5e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:289
	}
}
20015c60:	853e                	mv	a0,a5
20015c62:	4472                	lw	s0,28(sp)
20015c64:	6105                	addi	sp,sp,32
20015c66:	8082                	ret

20015c68 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:14
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu, unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid)
{
20015c68:	1101                	addi	sp,sp,-32
20015c6a:	ce22                	sw	s0,28(sp)
20015c6c:	1000                	addi	s0,sp,32
20015c6e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:15
    if (hartid < __METAL_DT_MAX_HARTS) {
20015c72:	fec42783          	lw	a5,-20(s0)
20015c76:	00f04c63          	bgtz	a5,20015c8e <__metal_driver_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:16
        return &(__metal_cpu_table[hartid]->cpu);
20015c7a:	800017b7          	lui	a5,0x80001
20015c7e:	fec42703          	lw	a4,-20(s0)
20015c82:	070a                	slli	a4,a4,0x2
20015c84:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20015c88:	97ba                	add	a5,a5,a4
20015c8a:	439c                	lw	a5,0(a5)
20015c8c:	a011                	j	20015c90 <__metal_driver_cpu_get+0x28>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:18
    }
    return (struct metal_cpu *)NULL;
20015c8e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:19
}
20015c90:	853e                	mv	a0,a5
20015c92:	4472                	lw	s0,28(sp)
20015c94:	6105                	addi	sp,sp,32
20015c96:	8082                	ret

20015c98 <__metal_myhart_id>:
__metal_myhart_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:22

uintptr_t __metal_myhart_id (void)
{
20015c98:	1101                	addi	sp,sp,-32
20015c9a:	ce22                	sw	s0,28(sp)
20015c9c:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:24
    uintptr_t myhart;
    __asm__ volatile ("csrr %0, mhartid" : "=r"(myhart));
20015c9e:	f14027f3          	csrr	a5,mhartid
20015ca2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
    return myhart;
20015ca6:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
}
20015caa:	853e                	mv	a0,a5
20015cac:	4472                	lw	s0,28(sp)
20015cae:	6105                	addi	sp,sp,32
20015cb0:	8082                	ret

20015cb2 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
    for (ptr = base; ptr < (base + size); ptr++){
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable (void) {
20015cb2:	1101                	addi	sp,sp,-32
20015cb4:	ce22                	sw	s0,28(sp)
20015cb6:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:38
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20015cb8:	47a1                	li	a5,8
20015cba:	3007a7f3          	csrrs	a5,mstatus,a5
20015cbe:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:39
}
20015cc2:	0001                	nop
20015cc4:	4472                	lw	s0,28(sp)
20015cc6:	6105                	addi	sp,sp,32
20015cc8:	8082                	ret

20015cca <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:41

void __metal_interrupt_global_disable (void) {
20015cca:	1101                	addi	sp,sp,-32
20015ccc:	ce22                	sw	s0,28(sp)
20015cce:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:43
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20015cd0:	47a1                	li	a5,8
20015cd2:	3007b7f3          	csrrc	a5,mstatus,a5
20015cd6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:44
}
20015cda:	0001                	nop
20015cdc:	4472                	lw	s0,28(sp)
20015cde:	6105                	addi	sp,sp,32
20015ce0:	8082                	ret

20015ce2 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:46

void __metal_interrupt_software_enable (void) {
20015ce2:	1101                	addi	sp,sp,-32
20015ce4:	ce22                	sw	s0,28(sp)
20015ce6:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:48
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20015ce8:	47a1                	li	a5,8
20015cea:	3047a7f3          	csrrs	a5,mie,a5
20015cee:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:49
}
20015cf2:	0001                	nop
20015cf4:	4472                	lw	s0,28(sp)
20015cf6:	6105                	addi	sp,sp,32
20015cf8:	8082                	ret

20015cfa <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:51

void __metal_interrupt_software_disable (void) {
20015cfa:	1101                	addi	sp,sp,-32
20015cfc:	ce22                	sw	s0,28(sp)
20015cfe:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:53
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20015d00:	47a1                	li	a5,8
20015d02:	3047b7f3          	csrrc	a5,mie,a5
20015d06:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
}
20015d0a:	0001                	nop
20015d0c:	4472                	lw	s0,28(sp)
20015d0e:	6105                	addi	sp,sp,32
20015d10:	8082                	ret

20015d12 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:56

void __metal_interrupt_timer_enable (void) {
20015d12:	1101                	addi	sp,sp,-32
20015d14:	ce22                	sw	s0,28(sp)
20015d16:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:58
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20015d18:	08000793          	li	a5,128
20015d1c:	3047a7f3          	csrrs	a5,mie,a5
20015d20:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59
}
20015d24:	0001                	nop
20015d26:	4472                	lw	s0,28(sp)
20015d28:	6105                	addi	sp,sp,32
20015d2a:	8082                	ret

20015d2c <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61

void __metal_interrupt_timer_disable (void) {
20015d2c:	1101                	addi	sp,sp,-32
20015d2e:	ce22                	sw	s0,28(sp)
20015d30:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:63
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20015d32:	08000793          	li	a5,128
20015d36:	3047b7f3          	csrrc	a5,mie,a5
20015d3a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
}
20015d3e:	0001                	nop
20015d40:	4472                	lw	s0,28(sp)
20015d42:	6105                	addi	sp,sp,32
20015d44:	8082                	ret

20015d46 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_external_enable (void) {
20015d46:	1101                	addi	sp,sp,-32
20015d48:	ce22                	sw	s0,28(sp)
20015d4a:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20015d4c:	6785                	lui	a5,0x1
20015d4e:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20015d52:	3047a7f3          	csrrs	a5,mie,a5
20015d56:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:69
}
20015d5a:	0001                	nop
20015d5c:	4472                	lw	s0,28(sp)
20015d5e:	6105                	addi	sp,sp,32
20015d60:	8082                	ret

20015d62 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71

void __metal_interrupt_external_disable (void) {
20015d62:	1101                	addi	sp,sp,-32
20015d64:	ce22                	sw	s0,28(sp)
20015d66:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73
    unsigned long m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20015d68:	6785                	lui	a5,0x1
20015d6a:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20015d6e:	3047b7f3          	csrrc	a5,mie,a5
20015d72:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:74
}
20015d76:	0001                	nop
20015d78:	4472                	lw	s0,28(sp)
20015d7a:	6105                	addi	sp,sp,32
20015d7c:	8082                	ret

20015d7e <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:76

void __metal_interrupt_local_enable (int id) {
20015d7e:	7179                	addi	sp,sp,-48
20015d80:	d622                	sw	s0,44(sp)
20015d82:	1800                	addi	s0,sp,48
20015d84:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:77
    uintptr_t b = 1 << id;
20015d88:	fdc42783          	lw	a5,-36(s0)
20015d8c:	4705                	li	a4,1
20015d8e:	00f717b3          	sll	a5,a4,a5
20015d92:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:79
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20015d96:	fec42783          	lw	a5,-20(s0)
20015d9a:	3047a7f3          	csrrs	a5,mie,a5
20015d9e:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80
}
20015da2:	0001                	nop
20015da4:	5432                	lw	s0,44(sp)
20015da6:	6145                	addi	sp,sp,48
20015da8:	8082                	ret

20015daa <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82

void __metal_interrupt_local_disable (int id) {
20015daa:	7179                	addi	sp,sp,-48
20015dac:	d622                	sw	s0,44(sp)
20015dae:	1800                	addi	s0,sp,48
20015db0:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:83
    uintptr_t b = 1 << id;
20015db4:	fdc42783          	lw	a5,-36(s0)
20015db8:	4705                	li	a4,1
20015dba:	00f717b3          	sll	a5,a4,a5
20015dbe:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20015dc2:	fec42783          	lw	a5,-20(s0)
20015dc6:	3047b7f3          	csrrc	a5,mie,a5
20015dca:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:86
}
20015dce:	0001                	nop
20015dd0:	5432                	lw	s0,44(sp)
20015dd2:	6145                	addi	sp,sp,48
20015dd4:	8082                	ret

20015dd6 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:88

void __metal_default_exception_handler (struct metal_cpu *cpu, int ecode) {
20015dd6:	1101                	addi	sp,sp,-32
20015dd8:	ce06                	sw	ra,28(sp)
20015dda:	cc22                	sw	s0,24(sp)
20015ddc:	1000                	addi	s0,sp,32
20015dde:	fea42623          	sw	a0,-20(s0)
20015de2:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    metal_shutdown(100);
20015de6:	06400513          	li	a0,100
20015dea:	7a2030ef          	jal	ra,2001958c <metal_shutdown>

20015dee <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
}

void __metal_default_interrupt_handler (int id, void *priv) {
20015dee:	1101                	addi	sp,sp,-32
20015df0:	ce06                	sw	ra,28(sp)
20015df2:	cc22                	sw	s0,24(sp)
20015df4:	1000                	addi	s0,sp,32
20015df6:	fea42623          	sw	a0,-20(s0)
20015dfa:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:93
    metal_shutdown(200);
20015dfe:	0c800513          	li	a0,200
20015e02:	78a030ef          	jal	ra,2001958c <metal_shutdown>

20015e06 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:97
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler (void) {
20015e06:	715d                	addi	sp,sp,-80
20015e08:	c686                	sw	ra,76(sp)
20015e0a:	c496                	sw	t0,72(sp)
20015e0c:	c29a                	sw	t1,68(sp)
20015e0e:	c09e                	sw	t2,64(sp)
20015e10:	de22                	sw	s0,60(sp)
20015e12:	dc2a                	sw	a0,56(sp)
20015e14:	da2e                	sw	a1,52(sp)
20015e16:	d832                	sw	a2,48(sp)
20015e18:	d636                	sw	a3,44(sp)
20015e1a:	d43a                	sw	a4,40(sp)
20015e1c:	d23e                	sw	a5,36(sp)
20015e1e:	d042                	sw	a6,32(sp)
20015e20:	ce46                	sw	a7,28(sp)
20015e22:	cc72                	sw	t3,24(sp)
20015e24:	ca76                	sw	t4,20(sp)
20015e26:	c87a                	sw	t5,16(sp)
20015e28:	c67e                	sw	t6,12(sp)
20015e2a:	0880                	addi	s0,sp,80
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:98
    metal_shutdown(300);
20015e2c:	12c00513          	li	a0,300
20015e30:	75c030ef          	jal	ra,2001958c <metal_shutdown>

20015e34 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_software_interrupt_vector_handler (void) {
20015e34:	711d                	addi	sp,sp,-96
20015e36:	ce86                	sw	ra,92(sp)
20015e38:	cc96                	sw	t0,88(sp)
20015e3a:	ca9a                	sw	t1,84(sp)
20015e3c:	c89e                	sw	t2,80(sp)
20015e3e:	c6a2                	sw	s0,76(sp)
20015e40:	c4aa                	sw	a0,72(sp)
20015e42:	c2ae                	sw	a1,68(sp)
20015e44:	c0b2                	sw	a2,64(sp)
20015e46:	de36                	sw	a3,60(sp)
20015e48:	dc3a                	sw	a4,56(sp)
20015e4a:	da3e                	sw	a5,52(sp)
20015e4c:	d842                	sw	a6,48(sp)
20015e4e:	d646                	sw	a7,44(sp)
20015e50:	d472                	sw	t3,40(sp)
20015e52:	d276                	sw	t4,36(sp)
20015e54:	d07a                	sw	t5,32(sp)
20015e56:	ce7e                	sw	t6,28(sp)
20015e58:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015e5a:	3d3d                	jal	20015c98 <__metal_myhart_id>
20015e5c:	872a                	mv	a4,a0
20015e5e:	800017b7          	lui	a5,0x80001
20015e62:	070a                	slli	a4,a4,0x2
20015e64:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20015e68:	97ba                	add	a5,a5,a4
20015e6a:	439c                	lw	a5,0(a5)
20015e6c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

    if ( cpu ) {
20015e70:	fac42783          	lw	a5,-84(s0)
20015e74:	c785                	beqz	a5,20015e9c <metal_software_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:109
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015e76:	fac42503          	lw	a0,-84(s0)
20015e7a:	33d1                	jal	20015c3e <__metal_driver_cpu_interrupt_controller>
20015e7c:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].exint_data;
20015e80:	fa842783          	lw	a5,-88(s0)
20015e84:	0e07a783          	lw	a5,224(a5)
20015e88:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
        intc->metal_int_table[METAL_INTERRUPT_ID_SW].handler(METAL_INTERRUPT_ID_SW, priv);
20015e8c:	fa842783          	lw	a5,-88(s0)
20015e90:	0d87a783          	lw	a5,216(a5)
20015e94:	fa442583          	lw	a1,-92(s0)
20015e98:	450d                	li	a0,3
20015e9a:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113
    }
}
20015e9c:	0001                	nop
20015e9e:	40f6                	lw	ra,92(sp)
20015ea0:	42e6                	lw	t0,88(sp)
20015ea2:	4356                	lw	t1,84(sp)
20015ea4:	43c6                	lw	t2,80(sp)
20015ea6:	4436                	lw	s0,76(sp)
20015ea8:	4526                	lw	a0,72(sp)
20015eaa:	4596                	lw	a1,68(sp)
20015eac:	4606                	lw	a2,64(sp)
20015eae:	56f2                	lw	a3,60(sp)
20015eb0:	5762                	lw	a4,56(sp)
20015eb2:	57d2                	lw	a5,52(sp)
20015eb4:	5842                	lw	a6,48(sp)
20015eb6:	58b2                	lw	a7,44(sp)
20015eb8:	5e22                	lw	t3,40(sp)
20015eba:	5e92                	lw	t4,36(sp)
20015ebc:	5f02                	lw	t5,32(sp)
20015ebe:	4ff2                	lw	t6,28(sp)
20015ec0:	6125                	addi	sp,sp,96
20015ec2:	30200073          	mret

20015ec6 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:115

void __metal_default_sw_handler (int id, void *priv) {
20015ec6:	7179                	addi	sp,sp,-48
20015ec8:	d606                	sw	ra,44(sp)
20015eca:	d422                	sw	s0,40(sp)
20015ecc:	1800                	addi	s0,sp,48
20015ece:	fca42e23          	sw	a0,-36(s0)
20015ed2:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015ed6:	33c9                	jal	20015c98 <__metal_myhart_id>
20015ed8:	872a                	mv	a4,a0
20015eda:	800017b7          	lui	a5,0x80001
20015ede:	070a                	slli	a4,a4,0x2
20015ee0:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20015ee4:	97ba                	add	a5,a5,a4
20015ee6:	439c                	lw	a5,0(a5)
20015ee8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:120

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
20015eec:	342027f3          	csrr	a5,mcause
20015ef0:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:121
    if ( cpu ) {
20015ef4:	fec42783          	lw	a5,-20(s0)
20015ef8:	c795                	beqz	a5,20015f24 <__metal_default_sw_handler+0x5e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015efa:	fec42503          	lw	a0,-20(s0)
20015efe:	3381                	jal	20015c3e <__metal_driver_cpu_interrupt_controller>
20015f00:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:124
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE]((struct metal_cpu *)cpu, id);
20015f04:	fe842783          	lw	a5,-24(s0)
20015f08:	3ff7f793          	andi	a5,a5,1023
20015f0c:	fe442703          	lw	a4,-28(s0)
20015f10:	0e078793          	addi	a5,a5,224
20015f14:	078a                	slli	a5,a5,0x2
20015f16:	97ba                	add	a5,a5,a4
20015f18:	479c                	lw	a5,8(a5)
20015f1a:	fdc42583          	lw	a1,-36(s0)
20015f1e:	fec42503          	lw	a0,-20(s0)
20015f22:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:126
    }
}
20015f24:	0001                	nop
20015f26:	50b2                	lw	ra,44(sp)
20015f28:	5422                	lw	s0,40(sp)
20015f2a:	6145                	addi	sp,sp,48
20015f2c:	8082                	ret

20015f2e <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_timer_interrupt_vector_handler (void) {
20015f2e:	711d                	addi	sp,sp,-96
20015f30:	ce86                	sw	ra,92(sp)
20015f32:	cc96                	sw	t0,88(sp)
20015f34:	ca9a                	sw	t1,84(sp)
20015f36:	c89e                	sw	t2,80(sp)
20015f38:	c6a2                	sw	s0,76(sp)
20015f3a:	c4aa                	sw	a0,72(sp)
20015f3c:	c2ae                	sw	a1,68(sp)
20015f3e:	c0b2                	sw	a2,64(sp)
20015f40:	de36                	sw	a3,60(sp)
20015f42:	dc3a                	sw	a4,56(sp)
20015f44:	da3e                	sw	a5,52(sp)
20015f46:	d842                	sw	a6,48(sp)
20015f48:	d646                	sw	a7,44(sp)
20015f4a:	d472                	sw	t3,40(sp)
20015f4c:	d276                	sw	t4,36(sp)
20015f4e:	d07a                	sw	t5,32(sp)
20015f50:	ce7e                	sw	t6,28(sp)
20015f52:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20015f54:	3391                	jal	20015c98 <__metal_myhart_id>
20015f56:	872a                	mv	a4,a0
20015f58:	800017b7          	lui	a5,0x80001
20015f5c:	070a                	slli	a4,a4,0x2
20015f5e:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20015f62:	97ba                	add	a5,a5,a4
20015f64:	439c                	lw	a5,0(a5)
20015f66:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:134

    if ( cpu ) {
20015f6a:	fac42783          	lw	a5,-84(s0)
20015f6e:	c785                	beqz	a5,20015f96 <metal_timer_interrupt_vector_handler+0x68>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:136
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20015f70:	fac42503          	lw	a0,-84(s0)
20015f74:	31e9                	jal	20015c3e <__metal_driver_cpu_interrupt_controller>
20015f76:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].exint_data;
20015f7a:	fa842783          	lw	a5,-88(s0)
20015f7e:	1407a783          	lw	a5,320(a5)
20015f82:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
        intc->metal_int_table[METAL_INTERRUPT_ID_TMR].handler(METAL_INTERRUPT_ID_TMR, priv);
20015f86:	fa842783          	lw	a5,-88(s0)
20015f8a:	1387a783          	lw	a5,312(a5)
20015f8e:	fa442583          	lw	a1,-92(s0)
20015f92:	451d                	li	a0,7
20015f94:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
    }
}
20015f96:	0001                	nop
20015f98:	40f6                	lw	ra,92(sp)
20015f9a:	42e6                	lw	t0,88(sp)
20015f9c:	4356                	lw	t1,84(sp)
20015f9e:	43c6                	lw	t2,80(sp)
20015fa0:	4436                	lw	s0,76(sp)
20015fa2:	4526                	lw	a0,72(sp)
20015fa4:	4596                	lw	a1,68(sp)
20015fa6:	4606                	lw	a2,64(sp)
20015fa8:	56f2                	lw	a3,60(sp)
20015faa:	5762                	lw	a4,56(sp)
20015fac:	57d2                	lw	a5,52(sp)
20015fae:	5842                	lw	a6,48(sp)
20015fb0:	58b2                	lw	a7,44(sp)
20015fb2:	5e22                	lw	t3,40(sp)
20015fb4:	5e92                	lw	t4,36(sp)
20015fb6:	5f02                	lw	t5,32(sp)
20015fb8:	4ff2                	lw	t6,28(sp)
20015fba:	6125                	addi	sp,sp,96
20015fbc:	30200073          	mret

20015fc0 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:142

void __metal_default_timer_handler (int id, void *priv) {
20015fc0:	7179                	addi	sp,sp,-48
20015fc2:	d606                	sw	ra,44(sp)
20015fc4:	d422                	sw	s0,40(sp)
20015fc6:	1800                	addi	s0,sp,48
20015fc8:	fca42e23          	sw	a0,-36(s0)
20015fcc:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:143
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20015fd0:	31e1                	jal	20015c98 <__metal_myhart_id>
20015fd2:	87aa                	mv	a5,a0
20015fd4:	853e                	mv	a0,a5
20015fd6:	3949                	jal	20015c68 <__metal_driver_cpu_get>
20015fd8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20015fdc:	fec42503          	lw	a0,-20(s0)
20015fe0:	1d4010ef          	jal	ra,200171b4 <__metal_driver_cpu_mtime_get>
20015fe4:	fea42023          	sw	a0,-32(s0)
20015fe8:	feb42223          	sw	a1,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:147

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20015fec:	fe042783          	lw	a5,-32(s0)
20015ff0:	fe442803          	lw	a6,-28(s0)
20015ff4:	45a9                	li	a1,10
20015ff6:	4601                	li	a2,0
20015ff8:	00b786b3          	add	a3,a5,a1
20015ffc:	8536                	mv	a0,a3
20015ffe:	00f53533          	sltu	a0,a0,a5
20016002:	00c80733          	add	a4,a6,a2
20016006:	00e507b3          	add	a5,a0,a4
2001600a:	873e                	mv	a4,a5
2001600c:	87b6                	mv	a5,a3
2001600e:	883a                	mv	a6,a4
20016010:	85be                	mv	a1,a5
20016012:	8642                	mv	a2,a6
20016014:	fec42503          	lw	a0,-20(s0)
20016018:	202010ef          	jal	ra,2001721a <__metal_driver_cpu_mtimecmp_set>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148
}
2001601c:	0001                	nop
2001601e:	50b2                	lw	ra,44(sp)
20016020:	5422                	lw	s0,40(sp)
20016022:	6145                	addi	sp,sp,48
20016024:	8082                	ret
	...

20016080 <__metal_exception_handler>:
__metal_exception_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:165
        intc->metal_int_table[METAL_INTERRUPT_ID_EXT].handler(METAL_INTERRUPT_ID_EXT, priv);
    }
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler (void) {
20016080:	7119                	addi	sp,sp,-128
20016082:	de86                	sw	ra,124(sp)
20016084:	dc96                	sw	t0,120(sp)
20016086:	da9a                	sw	t1,116(sp)
20016088:	d89e                	sw	t2,112(sp)
2001608a:	d6a2                	sw	s0,108(sp)
2001608c:	d4aa                	sw	a0,104(sp)
2001608e:	d2ae                	sw	a1,100(sp)
20016090:	d0b2                	sw	a2,96(sp)
20016092:	ceb6                	sw	a3,92(sp)
20016094:	ccba                	sw	a4,88(sp)
20016096:	cabe                	sw	a5,84(sp)
20016098:	c8c2                	sw	a6,80(sp)
2001609a:	c6c6                	sw	a7,76(sp)
2001609c:	c4f2                	sw	t3,72(sp)
2001609e:	c2f6                	sw	t4,68(sp)
200160a0:	c0fa                	sw	t5,64(sp)
200160a2:	de7e                	sw	t6,60(sp)
200160a4:	0100                	addi	s0,sp,128
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:170
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200160a6:	bf3ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
200160aa:	872a                	mv	a4,a0
200160ac:	800017b7          	lui	a5,0x80001
200160b0:	070a                	slli	a4,a4,0x2
200160b2:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
200160b6:	97ba                	add	a5,a5,a4
200160b8:	439c                	lw	a5,0(a5)
200160ba:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:172

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
200160be:	342027f3          	csrr	a5,mcause
200160c2:	faf42423          	sw	a5,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:173
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
200160c6:	341027f3          	csrr	a5,mepc
200160ca:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    __asm__ volatile ("csrr %0, mtval" : "=r"(mtval));
200160ce:	343027f3          	csrr	a5,mtval
200160d2:	faf42023          	sw	a5,-96(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:175
    __asm__ volatile ("csrr %0, mtvec" : "=r"(mtvec));
200160d6:	305027f3          	csrr	a5,mtvec
200160da:	f8f42e23          	sw	a5,-100(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177

    if ( cpu ) {
200160de:	fac42783          	lw	a5,-84(s0)
200160e2:	c7e9                	beqz	a5,200161ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200160e4:	fac42503          	lw	a0,-84(s0)
200160e8:	b57ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
200160ec:	f8a42c23          	sw	a0,-104(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:180
        id = mcause & METAL_MCAUSE_CAUSE;
200160f0:	fa842783          	lw	a5,-88(s0)
200160f4:	3ff7f793          	andi	a5,a5,1023
200160f8:	f8f42a23          	sw	a5,-108(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181
        if (mcause & METAL_MCAUSE_INTR) {
200160fc:	fa842783          	lw	a5,-88(s0)
20016100:	0807d863          	bgez	a5,20016190 <__metal_exception_handler+0x110>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20016104:	f9442703          	lw	a4,-108(s0)
20016108:	47ad                	li	a5,11
2001610a:	00e7d763          	bge	a5,a4,20016118 <__metal_exception_handler+0x98>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183 (discriminator 1)
               ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
2001610e:	f9c42783          	lw	a5,-100(s0)
20016112:	03f7f793          	andi	a5,a5,63
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:182 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20016116:	ef9d                	bnez	a5,20016154 <__metal_exception_handler+0xd4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
                priv = intc->metal_int_table[id].exint_data;
20016118:	f9842683          	lw	a3,-104(s0)
2001611c:	f9442703          	lw	a4,-108(s0)
20016120:	87ba                	mv	a5,a4
20016122:	0786                	slli	a5,a5,0x1
20016124:	97ba                	add	a5,a5,a4
20016126:	078e                	slli	a5,a5,0x3
20016128:	97b6                	add	a5,a5,a3
2001612a:	0987a783          	lw	a5,152(a5)
2001612e:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
                intc->metal_int_table[id].handler(id, priv);
20016132:	f9842683          	lw	a3,-104(s0)
20016136:	f9442703          	lw	a4,-108(s0)
2001613a:	87ba                	mv	a5,a4
2001613c:	0786                	slli	a5,a5,0x1
2001613e:	97ba                	add	a5,a5,a4
20016140:	078e                	slli	a5,a5,0x3
20016142:	97b6                	add	a5,a5,a3
20016144:	0907a783          	lw	a5,144(a5)
20016148:	f8c42583          	lw	a1,-116(s0)
2001614c:	f9442503          	lw	a0,-108(s0)
20016150:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
		return;
20016152:	a8a9                	j	200161ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20016154:	f9c42783          	lw	a5,-100(s0)
20016158:	03f7f713          	andi	a4,a5,63
2001615c:	4789                	li	a5,2
2001615e:	04f71763          	bne	a4,a5,200161ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192
    		uintptr_t mtvt;
    		metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile ("csrr %0, 0x307" : "=r"(mtvt));
20016162:	307027f3          	csrr	a5,mtvt
20016166:	f8f42823          	sw	a5,-112(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
               	priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2001616a:	f9842783          	lw	a5,-104(s0)
2001616e:	0dc7a783          	lw	a5,220(a5)
20016172:	f8f42623          	sw	a5,-116(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
               	mtvt_handler = (metal_interrupt_handler_t)*(uintptr_t *)mtvt;
20016176:	f9042783          	lw	a5,-112(s0)
2001617a:	439c                	lw	a5,0(a5)
2001617c:	f8f42423          	sw	a5,-120(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
               	mtvt_handler(id, priv);
20016180:	f8842783          	lw	a5,-120(s0)
20016184:	f8c42583          	lw	a1,-116(s0)
20016188:	f9442503          	lw	a0,-108(s0)
2001618c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:196
		return;
2001618e:	a839                	j	200161ac <__metal_exception_handler+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:199
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20016190:	f9842703          	lw	a4,-104(s0)
20016194:	f9442783          	lw	a5,-108(s0)
20016198:	0e078793          	addi	a5,a5,224
2001619c:	078a                	slli	a5,a5,0x2
2001619e:	97ba                	add	a5,a5,a4
200161a0:	479c                	lw	a5,8(a5)
200161a2:	f9442583          	lw	a1,-108(s0)
200161a6:	fac42503          	lw	a0,-84(s0)
200161aa:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
        }
    }
}
200161ac:	50f6                	lw	ra,124(sp)
200161ae:	52e6                	lw	t0,120(sp)
200161b0:	5356                	lw	t1,116(sp)
200161b2:	53c6                	lw	t2,112(sp)
200161b4:	5436                	lw	s0,108(sp)
200161b6:	5526                	lw	a0,104(sp)
200161b8:	5596                	lw	a1,100(sp)
200161ba:	5606                	lw	a2,96(sp)
200161bc:	46f6                	lw	a3,92(sp)
200161be:	4766                	lw	a4,88(sp)
200161c0:	47d6                	lw	a5,84(sp)
200161c2:	4846                	lw	a6,80(sp)
200161c4:	48b6                	lw	a7,76(sp)
200161c6:	4e26                	lw	t3,72(sp)
200161c8:	4e96                	lw	t4,68(sp)
200161ca:	4f06                	lw	t5,64(sp)
200161cc:	5ff2                	lw	t6,60(sp)
200161ce:	6109                	addi	sp,sp,128
200161d0:	30200073          	mret
	...

200161fa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler (void) {
200161fa:	711d                	addi	sp,sp,-96
200161fc:	ce86                	sw	ra,92(sp)
200161fe:	cc96                	sw	t0,88(sp)
20016200:	ca9a                	sw	t1,84(sp)
20016202:	c89e                	sw	t2,80(sp)
20016204:	c6a2                	sw	s0,76(sp)
20016206:	c4aa                	sw	a0,72(sp)
20016208:	c2ae                	sw	a1,68(sp)
2001620a:	c0b2                	sw	a2,64(sp)
2001620c:	de36                	sw	a3,60(sp)
2001620e:	dc3a                	sw	a4,56(sp)
20016210:	da3e                	sw	a5,52(sp)
20016212:	d842                	sw	a6,48(sp)
20016214:	d646                	sw	a7,44(sp)
20016216:	d472                	sw	t3,40(sp)
20016218:	d276                	sw	t4,36(sp)
2001621a:	d07a                	sw	t5,32(sp)
2001621c:	ce7e                	sw	t6,28(sp)
2001621e:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20016220:	a79ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
20016224:	872a                	mv	a4,a0
20016226:	800017b7          	lui	a5,0x80001
2001622a:	070a                	slli	a4,a4,0x2
2001622c:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20016230:	97ba                	add	a5,a5,a4
20016232:	439c                	lw	a5,0(a5)
20016234:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:210

    if ( cpu ) {
20016238:	fac42783          	lw	a5,-84(s0)
2001623c:	c78d                	beqz	a5,20016266 <metal_lc0_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:212
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001623e:	fac42503          	lw	a0,-84(s0)
20016242:	9fdff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
20016246:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:213
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC0].exint_data;
2001624a:	fa842783          	lw	a5,-88(s0)
2001624e:	2187a783          	lw	a5,536(a5)
20016252:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214
        intc->metal_int_table[METAL_INTERRUPT_ID_LC0].handler(METAL_INTERRUPT_ID_LC0, priv);
20016256:	fa842783          	lw	a5,-88(s0)
2001625a:	2107a783          	lw	a5,528(a5)
2001625e:	fa442583          	lw	a1,-92(s0)
20016262:	4541                	li	a0,16
20016264:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
    }
}
20016266:	0001                	nop
20016268:	40f6                	lw	ra,92(sp)
2001626a:	42e6                	lw	t0,88(sp)
2001626c:	4356                	lw	t1,84(sp)
2001626e:	43c6                	lw	t2,80(sp)
20016270:	4436                	lw	s0,76(sp)
20016272:	4526                	lw	a0,72(sp)
20016274:	4596                	lw	a1,68(sp)
20016276:	4606                	lw	a2,64(sp)
20016278:	56f2                	lw	a3,60(sp)
2001627a:	5762                	lw	a4,56(sp)
2001627c:	57d2                	lw	a5,52(sp)
2001627e:	5842                	lw	a6,48(sp)
20016280:	58b2                	lw	a7,44(sp)
20016282:	5e22                	lw	t3,40(sp)
20016284:	5e92                	lw	t4,36(sp)
20016286:	5f02                	lw	t5,32(sp)
20016288:	4ff2                	lw	t6,28(sp)
2001628a:	6125                	addi	sp,sp,96
2001628c:	30200073          	mret

20016290 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler (void) {
20016290:	711d                	addi	sp,sp,-96
20016292:	ce86                	sw	ra,92(sp)
20016294:	cc96                	sw	t0,88(sp)
20016296:	ca9a                	sw	t1,84(sp)
20016298:	c89e                	sw	t2,80(sp)
2001629a:	c6a2                	sw	s0,76(sp)
2001629c:	c4aa                	sw	a0,72(sp)
2001629e:	c2ae                	sw	a1,68(sp)
200162a0:	c0b2                	sw	a2,64(sp)
200162a2:	de36                	sw	a3,60(sp)
200162a4:	dc3a                	sw	a4,56(sp)
200162a6:	da3e                	sw	a5,52(sp)
200162a8:	d842                	sw	a6,48(sp)
200162aa:	d646                	sw	a7,44(sp)
200162ac:	d472                	sw	t3,40(sp)
200162ae:	d276                	sw	t4,36(sp)
200162b0:	d07a                	sw	t5,32(sp)
200162b2:	ce7e                	sw	t6,28(sp)
200162b4:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:222
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200162b6:	9e3ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
200162ba:	872a                	mv	a4,a0
200162bc:	800017b7          	lui	a5,0x80001
200162c0:	070a                	slli	a4,a4,0x2
200162c2:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
200162c6:	97ba                	add	a5,a5,a4
200162c8:	439c                	lw	a5,0(a5)
200162ca:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

    if ( cpu ) {
200162ce:	fac42783          	lw	a5,-84(s0)
200162d2:	c78d                	beqz	a5,200162fc <metal_lc1_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200162d4:	fac42503          	lw	a0,-84(s0)
200162d8:	967ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
200162dc:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:227
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC1].exint_data;
200162e0:	fa842783          	lw	a5,-88(s0)
200162e4:	2307a783          	lw	a5,560(a5)
200162e8:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:228
        intc->metal_int_table[METAL_INTERRUPT_ID_LC1].handler(METAL_INTERRUPT_ID_LC1, priv);
200162ec:	fa842783          	lw	a5,-88(s0)
200162f0:	2287a783          	lw	a5,552(a5)
200162f4:	fa442583          	lw	a1,-92(s0)
200162f8:	4545                	li	a0,17
200162fa:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    }
}
200162fc:	0001                	nop
200162fe:	40f6                	lw	ra,92(sp)
20016300:	42e6                	lw	t0,88(sp)
20016302:	4356                	lw	t1,84(sp)
20016304:	43c6                	lw	t2,80(sp)
20016306:	4436                	lw	s0,76(sp)
20016308:	4526                	lw	a0,72(sp)
2001630a:	4596                	lw	a1,68(sp)
2001630c:	4606                	lw	a2,64(sp)
2001630e:	56f2                	lw	a3,60(sp)
20016310:	5762                	lw	a4,56(sp)
20016312:	57d2                	lw	a5,52(sp)
20016314:	5842                	lw	a6,48(sp)
20016316:	58b2                	lw	a7,44(sp)
20016318:	5e22                	lw	t3,40(sp)
2001631a:	5e92                	lw	t4,36(sp)
2001631c:	5f02                	lw	t5,32(sp)
2001631e:	4ff2                	lw	t6,28(sp)
20016320:	6125                	addi	sp,sp,96
20016322:	30200073          	mret

20016326 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:233

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler (void) {
20016326:	711d                	addi	sp,sp,-96
20016328:	ce86                	sw	ra,92(sp)
2001632a:	cc96                	sw	t0,88(sp)
2001632c:	ca9a                	sw	t1,84(sp)
2001632e:	c89e                	sw	t2,80(sp)
20016330:	c6a2                	sw	s0,76(sp)
20016332:	c4aa                	sw	a0,72(sp)
20016334:	c2ae                	sw	a1,68(sp)
20016336:	c0b2                	sw	a2,64(sp)
20016338:	de36                	sw	a3,60(sp)
2001633a:	dc3a                	sw	a4,56(sp)
2001633c:	da3e                	sw	a5,52(sp)
2001633e:	d842                	sw	a6,48(sp)
20016340:	d646                	sw	a7,44(sp)
20016342:	d472                	sw	t3,40(sp)
20016344:	d276                	sw	t4,36(sp)
20016346:	d07a                	sw	t5,32(sp)
20016348:	ce7e                	sw	t6,28(sp)
2001634a:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001634c:	94dff0ef          	jal	ra,20015c98 <__metal_myhart_id>
20016350:	872a                	mv	a4,a0
20016352:	800017b7          	lui	a5,0x80001
20016356:	070a                	slli	a4,a4,0x2
20016358:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
2001635c:	97ba                	add	a5,a5,a4
2001635e:	439c                	lw	a5,0(a5)
20016360:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:238

    if ( cpu ) {
20016364:	fac42783          	lw	a5,-84(s0)
20016368:	c78d                	beqz	a5,20016392 <metal_lc2_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001636a:	fac42503          	lw	a0,-84(s0)
2001636e:	8d1ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
20016372:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC2].exint_data;
20016376:	fa842783          	lw	a5,-88(s0)
2001637a:	2487a783          	lw	a5,584(a5)
2001637e:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:242
        intc->metal_int_table[METAL_INTERRUPT_ID_LC2].handler(METAL_INTERRUPT_ID_LC2, priv);
20016382:	fa842783          	lw	a5,-88(s0)
20016386:	2407a783          	lw	a5,576(a5)
2001638a:	fa442583          	lw	a1,-92(s0)
2001638e:	4549                	li	a0,18
20016390:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244
    }
}
20016392:	0001                	nop
20016394:	40f6                	lw	ra,92(sp)
20016396:	42e6                	lw	t0,88(sp)
20016398:	4356                	lw	t1,84(sp)
2001639a:	43c6                	lw	t2,80(sp)
2001639c:	4436                	lw	s0,76(sp)
2001639e:	4526                	lw	a0,72(sp)
200163a0:	4596                	lw	a1,68(sp)
200163a2:	4606                	lw	a2,64(sp)
200163a4:	56f2                	lw	a3,60(sp)
200163a6:	5762                	lw	a4,56(sp)
200163a8:	57d2                	lw	a5,52(sp)
200163aa:	5842                	lw	a6,48(sp)
200163ac:	58b2                	lw	a7,44(sp)
200163ae:	5e22                	lw	t3,40(sp)
200163b0:	5e92                	lw	t4,36(sp)
200163b2:	5f02                	lw	t5,32(sp)
200163b4:	4ff2                	lw	t6,28(sp)
200163b6:	6125                	addi	sp,sp,96
200163b8:	30200073          	mret

200163bc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:247

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler (void) {
200163bc:	711d                	addi	sp,sp,-96
200163be:	ce86                	sw	ra,92(sp)
200163c0:	cc96                	sw	t0,88(sp)
200163c2:	ca9a                	sw	t1,84(sp)
200163c4:	c89e                	sw	t2,80(sp)
200163c6:	c6a2                	sw	s0,76(sp)
200163c8:	c4aa                	sw	a0,72(sp)
200163ca:	c2ae                	sw	a1,68(sp)
200163cc:	c0b2                	sw	a2,64(sp)
200163ce:	de36                	sw	a3,60(sp)
200163d0:	dc3a                	sw	a4,56(sp)
200163d2:	da3e                	sw	a5,52(sp)
200163d4:	d842                	sw	a6,48(sp)
200163d6:	d646                	sw	a7,44(sp)
200163d8:	d472                	sw	t3,40(sp)
200163da:	d276                	sw	t4,36(sp)
200163dc:	d07a                	sw	t5,32(sp)
200163de:	ce7e                	sw	t6,28(sp)
200163e0:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200163e2:	8b7ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
200163e6:	872a                	mv	a4,a0
200163e8:	800017b7          	lui	a5,0x80001
200163ec:	070a                	slli	a4,a4,0x2
200163ee:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
200163f2:	97ba                	add	a5,a5,a4
200163f4:	439c                	lw	a5,0(a5)
200163f6:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:252

    if ( cpu ) {
200163fa:	fac42783          	lw	a5,-84(s0)
200163fe:	c78d                	beqz	a5,20016428 <metal_lc3_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20016400:	fac42503          	lw	a0,-84(s0)
20016404:	83bff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
20016408:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC3].exint_data;
2001640c:	fa842783          	lw	a5,-88(s0)
20016410:	2607a783          	lw	a5,608(a5)
20016414:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
        intc->metal_int_table[METAL_INTERRUPT_ID_LC3].handler(METAL_INTERRUPT_ID_LC3, priv);
20016418:	fa842783          	lw	a5,-88(s0)
2001641c:	2587a783          	lw	a5,600(a5)
20016420:	fa442583          	lw	a1,-92(s0)
20016424:	454d                	li	a0,19
20016426:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:258
    }
}
20016428:	0001                	nop
2001642a:	40f6                	lw	ra,92(sp)
2001642c:	42e6                	lw	t0,88(sp)
2001642e:	4356                	lw	t1,84(sp)
20016430:	43c6                	lw	t2,80(sp)
20016432:	4436                	lw	s0,76(sp)
20016434:	4526                	lw	a0,72(sp)
20016436:	4596                	lw	a1,68(sp)
20016438:	4606                	lw	a2,64(sp)
2001643a:	56f2                	lw	a3,60(sp)
2001643c:	5762                	lw	a4,56(sp)
2001643e:	57d2                	lw	a5,52(sp)
20016440:	5842                	lw	a6,48(sp)
20016442:	58b2                	lw	a7,44(sp)
20016444:	5e22                	lw	t3,40(sp)
20016446:	5e92                	lw	t4,36(sp)
20016448:	5f02                	lw	t5,32(sp)
2001644a:	4ff2                	lw	t6,28(sp)
2001644c:	6125                	addi	sp,sp,96
2001644e:	30200073          	mret

20016452 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler (void) {
20016452:	711d                	addi	sp,sp,-96
20016454:	ce86                	sw	ra,92(sp)
20016456:	cc96                	sw	t0,88(sp)
20016458:	ca9a                	sw	t1,84(sp)
2001645a:	c89e                	sw	t2,80(sp)
2001645c:	c6a2                	sw	s0,76(sp)
2001645e:	c4aa                	sw	a0,72(sp)
20016460:	c2ae                	sw	a1,68(sp)
20016462:	c0b2                	sw	a2,64(sp)
20016464:	de36                	sw	a3,60(sp)
20016466:	dc3a                	sw	a4,56(sp)
20016468:	da3e                	sw	a5,52(sp)
2001646a:	d842                	sw	a6,48(sp)
2001646c:	d646                	sw	a7,44(sp)
2001646e:	d472                	sw	t3,40(sp)
20016470:	d276                	sw	t4,36(sp)
20016472:	d07a                	sw	t5,32(sp)
20016474:	ce7e                	sw	t6,28(sp)
20016476:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:264
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20016478:	821ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
2001647c:	872a                	mv	a4,a0
2001647e:	800017b7          	lui	a5,0x80001
20016482:	070a                	slli	a4,a4,0x2
20016484:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20016488:	97ba                	add	a5,a5,a4
2001648a:	439c                	lw	a5,0(a5)
2001648c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266

    if ( cpu ) {
20016490:	fac42783          	lw	a5,-84(s0)
20016494:	c78d                	beqz	a5,200164be <metal_lc4_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:268
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20016496:	fac42503          	lw	a0,-84(s0)
2001649a:	fa4ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
2001649e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:269
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC4].exint_data;
200164a2:	fa842783          	lw	a5,-88(s0)
200164a6:	2787a783          	lw	a5,632(a5)
200164aa:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:270
        intc->metal_int_table[METAL_INTERRUPT_ID_LC4].handler(METAL_INTERRUPT_ID_LC4, priv);
200164ae:	fa842783          	lw	a5,-88(s0)
200164b2:	2707a783          	lw	a5,624(a5)
200164b6:	fa442583          	lw	a1,-92(s0)
200164ba:	4551                	li	a0,20
200164bc:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    }
}
200164be:	0001                	nop
200164c0:	40f6                	lw	ra,92(sp)
200164c2:	42e6                	lw	t0,88(sp)
200164c4:	4356                	lw	t1,84(sp)
200164c6:	43c6                	lw	t2,80(sp)
200164c8:	4436                	lw	s0,76(sp)
200164ca:	4526                	lw	a0,72(sp)
200164cc:	4596                	lw	a1,68(sp)
200164ce:	4606                	lw	a2,64(sp)
200164d0:	56f2                	lw	a3,60(sp)
200164d2:	5762                	lw	a4,56(sp)
200164d4:	57d2                	lw	a5,52(sp)
200164d6:	5842                	lw	a6,48(sp)
200164d8:	58b2                	lw	a7,44(sp)
200164da:	5e22                	lw	t3,40(sp)
200164dc:	5e92                	lw	t4,36(sp)
200164de:	5f02                	lw	t5,32(sp)
200164e0:	4ff2                	lw	t6,28(sp)
200164e2:	6125                	addi	sp,sp,96
200164e4:	30200073          	mret

200164e8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:275

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler (void) {
200164e8:	711d                	addi	sp,sp,-96
200164ea:	ce86                	sw	ra,92(sp)
200164ec:	cc96                	sw	t0,88(sp)
200164ee:	ca9a                	sw	t1,84(sp)
200164f0:	c89e                	sw	t2,80(sp)
200164f2:	c6a2                	sw	s0,76(sp)
200164f4:	c4aa                	sw	a0,72(sp)
200164f6:	c2ae                	sw	a1,68(sp)
200164f8:	c0b2                	sw	a2,64(sp)
200164fa:	de36                	sw	a3,60(sp)
200164fc:	dc3a                	sw	a4,56(sp)
200164fe:	da3e                	sw	a5,52(sp)
20016500:	d842                	sw	a6,48(sp)
20016502:	d646                	sw	a7,44(sp)
20016504:	d472                	sw	t3,40(sp)
20016506:	d276                	sw	t4,36(sp)
20016508:	d07a                	sw	t5,32(sp)
2001650a:	ce7e                	sw	t6,28(sp)
2001650c:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001650e:	f8aff0ef          	jal	ra,20015c98 <__metal_myhart_id>
20016512:	872a                	mv	a4,a0
20016514:	800017b7          	lui	a5,0x80001
20016518:	070a                	slli	a4,a4,0x2
2001651a:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
2001651e:	97ba                	add	a5,a5,a4
20016520:	439c                	lw	a5,0(a5)
20016522:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:280

    if ( cpu ) {
20016526:	fac42783          	lw	a5,-84(s0)
2001652a:	c78d                	beqz	a5,20016554 <metal_lc5_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:282
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001652c:	fac42503          	lw	a0,-84(s0)
20016530:	f0eff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
20016534:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC5].exint_data;
20016538:	fa842783          	lw	a5,-88(s0)
2001653c:	2907a783          	lw	a5,656(a5)
20016540:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
        intc->metal_int_table[METAL_INTERRUPT_ID_LC5].handler(METAL_INTERRUPT_ID_LC5, priv);
20016544:	fa842783          	lw	a5,-88(s0)
20016548:	2887a783          	lw	a5,648(a5)
2001654c:	fa442583          	lw	a1,-92(s0)
20016550:	4555                	li	a0,21
20016552:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:286
    }
}
20016554:	0001                	nop
20016556:	40f6                	lw	ra,92(sp)
20016558:	42e6                	lw	t0,88(sp)
2001655a:	4356                	lw	t1,84(sp)
2001655c:	43c6                	lw	t2,80(sp)
2001655e:	4436                	lw	s0,76(sp)
20016560:	4526                	lw	a0,72(sp)
20016562:	4596                	lw	a1,68(sp)
20016564:	4606                	lw	a2,64(sp)
20016566:	56f2                	lw	a3,60(sp)
20016568:	5762                	lw	a4,56(sp)
2001656a:	57d2                	lw	a5,52(sp)
2001656c:	5842                	lw	a6,48(sp)
2001656e:	58b2                	lw	a7,44(sp)
20016570:	5e22                	lw	t3,40(sp)
20016572:	5e92                	lw	t4,36(sp)
20016574:	5f02                	lw	t5,32(sp)
20016576:	4ff2                	lw	t6,28(sp)
20016578:	6125                	addi	sp,sp,96
2001657a:	30200073          	mret

2001657e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler (void) {
2001657e:	711d                	addi	sp,sp,-96
20016580:	ce86                	sw	ra,92(sp)
20016582:	cc96                	sw	t0,88(sp)
20016584:	ca9a                	sw	t1,84(sp)
20016586:	c89e                	sw	t2,80(sp)
20016588:	c6a2                	sw	s0,76(sp)
2001658a:	c4aa                	sw	a0,72(sp)
2001658c:	c2ae                	sw	a1,68(sp)
2001658e:	c0b2                	sw	a2,64(sp)
20016590:	de36                	sw	a3,60(sp)
20016592:	dc3a                	sw	a4,56(sp)
20016594:	da3e                	sw	a5,52(sp)
20016596:	d842                	sw	a6,48(sp)
20016598:	d646                	sw	a7,44(sp)
2001659a:	d472                	sw	t3,40(sp)
2001659c:	d276                	sw	t4,36(sp)
2001659e:	d07a                	sw	t5,32(sp)
200165a0:	ce7e                	sw	t6,28(sp)
200165a2:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:292
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200165a4:	ef4ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
200165a8:	872a                	mv	a4,a0
200165aa:	800017b7          	lui	a5,0x80001
200165ae:	070a                	slli	a4,a4,0x2
200165b0:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
200165b4:	97ba                	add	a5,a5,a4
200165b6:	439c                	lw	a5,0(a5)
200165b8:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:294

    if ( cpu ) {
200165bc:	fac42783          	lw	a5,-84(s0)
200165c0:	c78d                	beqz	a5,200165ea <metal_lc6_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200165c2:	fac42503          	lw	a0,-84(s0)
200165c6:	e78ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
200165ca:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC6].exint_data;
200165ce:	fa842783          	lw	a5,-88(s0)
200165d2:	2a87a783          	lw	a5,680(a5)
200165d6:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:298
        intc->metal_int_table[METAL_INTERRUPT_ID_LC6].handler(METAL_INTERRUPT_ID_LC6, priv);
200165da:	fa842783          	lw	a5,-88(s0)
200165de:	2a07a783          	lw	a5,672(a5)
200165e2:	fa442583          	lw	a1,-92(s0)
200165e6:	4559                	li	a0,22
200165e8:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:300
    }
}
200165ea:	0001                	nop
200165ec:	40f6                	lw	ra,92(sp)
200165ee:	42e6                	lw	t0,88(sp)
200165f0:	4356                	lw	t1,84(sp)
200165f2:	43c6                	lw	t2,80(sp)
200165f4:	4436                	lw	s0,76(sp)
200165f6:	4526                	lw	a0,72(sp)
200165f8:	4596                	lw	a1,68(sp)
200165fa:	4606                	lw	a2,64(sp)
200165fc:	56f2                	lw	a3,60(sp)
200165fe:	5762                	lw	a4,56(sp)
20016600:	57d2                	lw	a5,52(sp)
20016602:	5842                	lw	a6,48(sp)
20016604:	58b2                	lw	a7,44(sp)
20016606:	5e22                	lw	t3,40(sp)
20016608:	5e92                	lw	t4,36(sp)
2001660a:	5f02                	lw	t5,32(sp)
2001660c:	4ff2                	lw	t6,28(sp)
2001660e:	6125                	addi	sp,sp,96
20016610:	30200073          	mret

20016614 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler (void) {
20016614:	711d                	addi	sp,sp,-96
20016616:	ce86                	sw	ra,92(sp)
20016618:	cc96                	sw	t0,88(sp)
2001661a:	ca9a                	sw	t1,84(sp)
2001661c:	c89e                	sw	t2,80(sp)
2001661e:	c6a2                	sw	s0,76(sp)
20016620:	c4aa                	sw	a0,72(sp)
20016622:	c2ae                	sw	a1,68(sp)
20016624:	c0b2                	sw	a2,64(sp)
20016626:	de36                	sw	a3,60(sp)
20016628:	dc3a                	sw	a4,56(sp)
2001662a:	da3e                	sw	a5,52(sp)
2001662c:	d842                	sw	a6,48(sp)
2001662e:	d646                	sw	a7,44(sp)
20016630:	d472                	sw	t3,40(sp)
20016632:	d276                	sw	t4,36(sp)
20016634:	d07a                	sw	t5,32(sp)
20016636:	ce7e                	sw	t6,28(sp)
20016638:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:306
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001663a:	e5eff0ef          	jal	ra,20015c98 <__metal_myhart_id>
2001663e:	872a                	mv	a4,a0
20016640:	800017b7          	lui	a5,0x80001
20016644:	070a                	slli	a4,a4,0x2
20016646:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
2001664a:	97ba                	add	a5,a5,a4
2001664c:	439c                	lw	a5,0(a5)
2001664e:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:308

    if ( cpu ) {
20016652:	fac42783          	lw	a5,-84(s0)
20016656:	c78d                	beqz	a5,20016680 <metal_lc7_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:310
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20016658:	fac42503          	lw	a0,-84(s0)
2001665c:	de2ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
20016660:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC7].exint_data;
20016664:	fa842783          	lw	a5,-88(s0)
20016668:	2c07a783          	lw	a5,704(a5)
2001666c:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:312
        intc->metal_int_table[METAL_INTERRUPT_ID_LC7].handler(METAL_INTERRUPT_ID_LC7, priv);
20016670:	fa842783          	lw	a5,-88(s0)
20016674:	2b87a783          	lw	a5,696(a5)
20016678:	fa442583          	lw	a1,-92(s0)
2001667c:	455d                	li	a0,23
2001667e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
    }
}
20016680:	0001                	nop
20016682:	40f6                	lw	ra,92(sp)
20016684:	42e6                	lw	t0,88(sp)
20016686:	4356                	lw	t1,84(sp)
20016688:	43c6                	lw	t2,80(sp)
2001668a:	4436                	lw	s0,76(sp)
2001668c:	4526                	lw	a0,72(sp)
2001668e:	4596                	lw	a1,68(sp)
20016690:	4606                	lw	a2,64(sp)
20016692:	56f2                	lw	a3,60(sp)
20016694:	5762                	lw	a4,56(sp)
20016696:	57d2                	lw	a5,52(sp)
20016698:	5842                	lw	a6,48(sp)
2001669a:	58b2                	lw	a7,44(sp)
2001669c:	5e22                	lw	t3,40(sp)
2001669e:	5e92                	lw	t4,36(sp)
200166a0:	5f02                	lw	t5,32(sp)
200166a2:	4ff2                	lw	t6,28(sp)
200166a4:	6125                	addi	sp,sp,96
200166a6:	30200073          	mret

200166aa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler (void) {
200166aa:	711d                	addi	sp,sp,-96
200166ac:	ce86                	sw	ra,92(sp)
200166ae:	cc96                	sw	t0,88(sp)
200166b0:	ca9a                	sw	t1,84(sp)
200166b2:	c89e                	sw	t2,80(sp)
200166b4:	c6a2                	sw	s0,76(sp)
200166b6:	c4aa                	sw	a0,72(sp)
200166b8:	c2ae                	sw	a1,68(sp)
200166ba:	c0b2                	sw	a2,64(sp)
200166bc:	de36                	sw	a3,60(sp)
200166be:	dc3a                	sw	a4,56(sp)
200166c0:	da3e                	sw	a5,52(sp)
200166c2:	d842                	sw	a6,48(sp)
200166c4:	d646                	sw	a7,44(sp)
200166c6:	d472                	sw	t3,40(sp)
200166c8:	d276                	sw	t4,36(sp)
200166ca:	d07a                	sw	t5,32(sp)
200166cc:	ce7e                	sw	t6,28(sp)
200166ce:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200166d0:	dc8ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
200166d4:	872a                	mv	a4,a0
200166d6:	800017b7          	lui	a5,0x80001
200166da:	070a                	slli	a4,a4,0x2
200166dc:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
200166e0:	97ba                	add	a5,a5,a4
200166e2:	439c                	lw	a5,0(a5)
200166e4:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322

    if ( cpu ) {
200166e8:	fac42783          	lw	a5,-84(s0)
200166ec:	c78d                	beqz	a5,20016716 <metal_lc8_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200166ee:	fac42503          	lw	a0,-84(s0)
200166f2:	d4cff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
200166f6:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:325
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC8].exint_data;
200166fa:	fa842783          	lw	a5,-88(s0)
200166fe:	2d87a783          	lw	a5,728(a5)
20016702:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:326
        intc->metal_int_table[METAL_INTERRUPT_ID_LC8].handler(METAL_INTERRUPT_ID_LC8, priv);
20016706:	fa842783          	lw	a5,-88(s0)
2001670a:	2d07a783          	lw	a5,720(a5)
2001670e:	fa442583          	lw	a1,-92(s0)
20016712:	4561                	li	a0,24
20016714:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
    }
}
20016716:	0001                	nop
20016718:	40f6                	lw	ra,92(sp)
2001671a:	42e6                	lw	t0,88(sp)
2001671c:	4356                	lw	t1,84(sp)
2001671e:	43c6                	lw	t2,80(sp)
20016720:	4436                	lw	s0,76(sp)
20016722:	4526                	lw	a0,72(sp)
20016724:	4596                	lw	a1,68(sp)
20016726:	4606                	lw	a2,64(sp)
20016728:	56f2                	lw	a3,60(sp)
2001672a:	5762                	lw	a4,56(sp)
2001672c:	57d2                	lw	a5,52(sp)
2001672e:	5842                	lw	a6,48(sp)
20016730:	58b2                	lw	a7,44(sp)
20016732:	5e22                	lw	t3,40(sp)
20016734:	5e92                	lw	t4,36(sp)
20016736:	5f02                	lw	t5,32(sp)
20016738:	4ff2                	lw	t6,28(sp)
2001673a:	6125                	addi	sp,sp,96
2001673c:	30200073          	mret

20016740 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler (void) {
20016740:	711d                	addi	sp,sp,-96
20016742:	ce86                	sw	ra,92(sp)
20016744:	cc96                	sw	t0,88(sp)
20016746:	ca9a                	sw	t1,84(sp)
20016748:	c89e                	sw	t2,80(sp)
2001674a:	c6a2                	sw	s0,76(sp)
2001674c:	c4aa                	sw	a0,72(sp)
2001674e:	c2ae                	sw	a1,68(sp)
20016750:	c0b2                	sw	a2,64(sp)
20016752:	de36                	sw	a3,60(sp)
20016754:	dc3a                	sw	a4,56(sp)
20016756:	da3e                	sw	a5,52(sp)
20016758:	d842                	sw	a6,48(sp)
2001675a:	d646                	sw	a7,44(sp)
2001675c:	d472                	sw	t3,40(sp)
2001675e:	d276                	sw	t4,36(sp)
20016760:	d07a                	sw	t5,32(sp)
20016762:	ce7e                	sw	t6,28(sp)
20016764:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20016766:	d32ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
2001676a:	872a                	mv	a4,a0
2001676c:	800017b7          	lui	a5,0x80001
20016770:	070a                	slli	a4,a4,0x2
20016772:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20016776:	97ba                	add	a5,a5,a4
20016778:	439c                	lw	a5,0(a5)
2001677a:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336

    if ( cpu ) {
2001677e:	fac42783          	lw	a5,-84(s0)
20016782:	c78d                	beqz	a5,200167ac <metal_lc9_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20016784:	fac42503          	lw	a0,-84(s0)
20016788:	cb6ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
2001678c:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:339
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC9].exint_data;
20016790:	fa842783          	lw	a5,-88(s0)
20016794:	2f07a783          	lw	a5,752(a5)
20016798:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        intc->metal_int_table[METAL_INTERRUPT_ID_LC9].handler(METAL_INTERRUPT_ID_LC9, priv);
2001679c:	fa842783          	lw	a5,-88(s0)
200167a0:	2e87a783          	lw	a5,744(a5)
200167a4:	fa442583          	lw	a1,-92(s0)
200167a8:	4565                	li	a0,25
200167aa:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
    }
}
200167ac:	0001                	nop
200167ae:	40f6                	lw	ra,92(sp)
200167b0:	42e6                	lw	t0,88(sp)
200167b2:	4356                	lw	t1,84(sp)
200167b4:	43c6                	lw	t2,80(sp)
200167b6:	4436                	lw	s0,76(sp)
200167b8:	4526                	lw	a0,72(sp)
200167ba:	4596                	lw	a1,68(sp)
200167bc:	4606                	lw	a2,64(sp)
200167be:	56f2                	lw	a3,60(sp)
200167c0:	5762                	lw	a4,56(sp)
200167c2:	57d2                	lw	a5,52(sp)
200167c4:	5842                	lw	a6,48(sp)
200167c6:	58b2                	lw	a7,44(sp)
200167c8:	5e22                	lw	t3,40(sp)
200167ca:	5e92                	lw	t4,36(sp)
200167cc:	5f02                	lw	t5,32(sp)
200167ce:	4ff2                	lw	t6,28(sp)
200167d0:	6125                	addi	sp,sp,96
200167d2:	30200073          	mret

200167d6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:345

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc10_interrupt_vector_handler (void) {
200167d6:	711d                	addi	sp,sp,-96
200167d8:	ce86                	sw	ra,92(sp)
200167da:	cc96                	sw	t0,88(sp)
200167dc:	ca9a                	sw	t1,84(sp)
200167de:	c89e                	sw	t2,80(sp)
200167e0:	c6a2                	sw	s0,76(sp)
200167e2:	c4aa                	sw	a0,72(sp)
200167e4:	c2ae                	sw	a1,68(sp)
200167e6:	c0b2                	sw	a2,64(sp)
200167e8:	de36                	sw	a3,60(sp)
200167ea:	dc3a                	sw	a4,56(sp)
200167ec:	da3e                	sw	a5,52(sp)
200167ee:	d842                	sw	a6,48(sp)
200167f0:	d646                	sw	a7,44(sp)
200167f2:	d472                	sw	t3,40(sp)
200167f4:	d276                	sw	t4,36(sp)
200167f6:	d07a                	sw	t5,32(sp)
200167f8:	ce7e                	sw	t6,28(sp)
200167fa:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:348
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200167fc:	c9cff0ef          	jal	ra,20015c98 <__metal_myhart_id>
20016800:	872a                	mv	a4,a0
20016802:	800017b7          	lui	a5,0x80001
20016806:	070a                	slli	a4,a4,0x2
20016808:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
2001680c:	97ba                	add	a5,a5,a4
2001680e:	439c                	lw	a5,0(a5)
20016810:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:350

    if ( cpu ) {
20016814:	fac42783          	lw	a5,-84(s0)
20016818:	c78d                	beqz	a5,20016842 <metal_lc10_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:352
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001681a:	fac42503          	lw	a0,-84(s0)
2001681e:	c20ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
20016822:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:353
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC10].exint_data;
20016826:	fa842783          	lw	a5,-88(s0)
2001682a:	3087a783          	lw	a5,776(a5)
2001682e:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:354
        intc->metal_int_table[METAL_INTERRUPT_ID_LC10].handler(METAL_INTERRUPT_ID_LC10, priv);
20016832:	fa842783          	lw	a5,-88(s0)
20016836:	3007a783          	lw	a5,768(a5)
2001683a:	fa442583          	lw	a1,-92(s0)
2001683e:	4569                	li	a0,26
20016840:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:356
    }
}
20016842:	0001                	nop
20016844:	40f6                	lw	ra,92(sp)
20016846:	42e6                	lw	t0,88(sp)
20016848:	4356                	lw	t1,84(sp)
2001684a:	43c6                	lw	t2,80(sp)
2001684c:	4436                	lw	s0,76(sp)
2001684e:	4526                	lw	a0,72(sp)
20016850:	4596                	lw	a1,68(sp)
20016852:	4606                	lw	a2,64(sp)
20016854:	56f2                	lw	a3,60(sp)
20016856:	5762                	lw	a4,56(sp)
20016858:	57d2                	lw	a5,52(sp)
2001685a:	5842                	lw	a6,48(sp)
2001685c:	58b2                	lw	a7,44(sp)
2001685e:	5e22                	lw	t3,40(sp)
20016860:	5e92                	lw	t4,36(sp)
20016862:	5f02                	lw	t5,32(sp)
20016864:	4ff2                	lw	t6,28(sp)
20016866:	6125                	addi	sp,sp,96
20016868:	30200073          	mret

2001686c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:359

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc11_interrupt_vector_handler (void) {
2001686c:	711d                	addi	sp,sp,-96
2001686e:	ce86                	sw	ra,92(sp)
20016870:	cc96                	sw	t0,88(sp)
20016872:	ca9a                	sw	t1,84(sp)
20016874:	c89e                	sw	t2,80(sp)
20016876:	c6a2                	sw	s0,76(sp)
20016878:	c4aa                	sw	a0,72(sp)
2001687a:	c2ae                	sw	a1,68(sp)
2001687c:	c0b2                	sw	a2,64(sp)
2001687e:	de36                	sw	a3,60(sp)
20016880:	dc3a                	sw	a4,56(sp)
20016882:	da3e                	sw	a5,52(sp)
20016884:	d842                	sw	a6,48(sp)
20016886:	d646                	sw	a7,44(sp)
20016888:	d472                	sw	t3,40(sp)
2001688a:	d276                	sw	t4,36(sp)
2001688c:	d07a                	sw	t5,32(sp)
2001688e:	ce7e                	sw	t6,28(sp)
20016890:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:362
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20016892:	c06ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
20016896:	872a                	mv	a4,a0
20016898:	800017b7          	lui	a5,0x80001
2001689c:	070a                	slli	a4,a4,0x2
2001689e:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
200168a2:	97ba                	add	a5,a5,a4
200168a4:	439c                	lw	a5,0(a5)
200168a6:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:364

    if ( cpu ) {
200168aa:	fac42783          	lw	a5,-84(s0)
200168ae:	c78d                	beqz	a5,200168d8 <metal_lc11_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:366
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200168b0:	fac42503          	lw	a0,-84(s0)
200168b4:	b8aff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
200168b8:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:367
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC11].exint_data;
200168bc:	fa842783          	lw	a5,-88(s0)
200168c0:	3207a783          	lw	a5,800(a5)
200168c4:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        intc->metal_int_table[METAL_INTERRUPT_ID_LC11].handler(METAL_INTERRUPT_ID_LC11, priv);
200168c8:	fa842783          	lw	a5,-88(s0)
200168cc:	3187a783          	lw	a5,792(a5)
200168d0:	fa442583          	lw	a1,-92(s0)
200168d4:	456d                	li	a0,27
200168d6:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    }
}
200168d8:	0001                	nop
200168da:	40f6                	lw	ra,92(sp)
200168dc:	42e6                	lw	t0,88(sp)
200168de:	4356                	lw	t1,84(sp)
200168e0:	43c6                	lw	t2,80(sp)
200168e2:	4436                	lw	s0,76(sp)
200168e4:	4526                	lw	a0,72(sp)
200168e6:	4596                	lw	a1,68(sp)
200168e8:	4606                	lw	a2,64(sp)
200168ea:	56f2                	lw	a3,60(sp)
200168ec:	5762                	lw	a4,56(sp)
200168ee:	57d2                	lw	a5,52(sp)
200168f0:	5842                	lw	a6,48(sp)
200168f2:	58b2                	lw	a7,44(sp)
200168f4:	5e22                	lw	t3,40(sp)
200168f6:	5e92                	lw	t4,36(sp)
200168f8:	5f02                	lw	t5,32(sp)
200168fa:	4ff2                	lw	t6,28(sp)
200168fc:	6125                	addi	sp,sp,96
200168fe:	30200073          	mret

20016902 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc12_interrupt_vector_handler (void) {
20016902:	711d                	addi	sp,sp,-96
20016904:	ce86                	sw	ra,92(sp)
20016906:	cc96                	sw	t0,88(sp)
20016908:	ca9a                	sw	t1,84(sp)
2001690a:	c89e                	sw	t2,80(sp)
2001690c:	c6a2                	sw	s0,76(sp)
2001690e:	c4aa                	sw	a0,72(sp)
20016910:	c2ae                	sw	a1,68(sp)
20016912:	c0b2                	sw	a2,64(sp)
20016914:	de36                	sw	a3,60(sp)
20016916:	dc3a                	sw	a4,56(sp)
20016918:	da3e                	sw	a5,52(sp)
2001691a:	d842                	sw	a6,48(sp)
2001691c:	d646                	sw	a7,44(sp)
2001691e:	d472                	sw	t3,40(sp)
20016920:	d276                	sw	t4,36(sp)
20016922:	d07a                	sw	t5,32(sp)
20016924:	ce7e                	sw	t6,28(sp)
20016926:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:376
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20016928:	b70ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
2001692c:	872a                	mv	a4,a0
2001692e:	800017b7          	lui	a5,0x80001
20016932:	070a                	slli	a4,a4,0x2
20016934:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20016938:	97ba                	add	a5,a5,a4
2001693a:	439c                	lw	a5,0(a5)
2001693c:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378

    if ( cpu ) {
20016940:	fac42783          	lw	a5,-84(s0)
20016944:	c78d                	beqz	a5,2001696e <metal_lc12_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20016946:	fac42503          	lw	a0,-84(s0)
2001694a:	af4ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
2001694e:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC12].exint_data;
20016952:	fa842783          	lw	a5,-88(s0)
20016956:	3387a783          	lw	a5,824(a5)
2001695a:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:382
        intc->metal_int_table[METAL_INTERRUPT_ID_LC12].handler(METAL_INTERRUPT_ID_LC12, priv);
2001695e:	fa842783          	lw	a5,-88(s0)
20016962:	3307a783          	lw	a5,816(a5)
20016966:	fa442583          	lw	a1,-92(s0)
2001696a:	4571                	li	a0,28
2001696c:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }
}
2001696e:	0001                	nop
20016970:	40f6                	lw	ra,92(sp)
20016972:	42e6                	lw	t0,88(sp)
20016974:	4356                	lw	t1,84(sp)
20016976:	43c6                	lw	t2,80(sp)
20016978:	4436                	lw	s0,76(sp)
2001697a:	4526                	lw	a0,72(sp)
2001697c:	4596                	lw	a1,68(sp)
2001697e:	4606                	lw	a2,64(sp)
20016980:	56f2                	lw	a3,60(sp)
20016982:	5762                	lw	a4,56(sp)
20016984:	57d2                	lw	a5,52(sp)
20016986:	5842                	lw	a6,48(sp)
20016988:	58b2                	lw	a7,44(sp)
2001698a:	5e22                	lw	t3,40(sp)
2001698c:	5e92                	lw	t4,36(sp)
2001698e:	5f02                	lw	t5,32(sp)
20016990:	4ff2                	lw	t6,28(sp)
20016992:	6125                	addi	sp,sp,96
20016994:	30200073          	mret

20016998 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc13_interrupt_vector_handler (void) {
20016998:	711d                	addi	sp,sp,-96
2001699a:	ce86                	sw	ra,92(sp)
2001699c:	cc96                	sw	t0,88(sp)
2001699e:	ca9a                	sw	t1,84(sp)
200169a0:	c89e                	sw	t2,80(sp)
200169a2:	c6a2                	sw	s0,76(sp)
200169a4:	c4aa                	sw	a0,72(sp)
200169a6:	c2ae                	sw	a1,68(sp)
200169a8:	c0b2                	sw	a2,64(sp)
200169aa:	de36                	sw	a3,60(sp)
200169ac:	dc3a                	sw	a4,56(sp)
200169ae:	da3e                	sw	a5,52(sp)
200169b0:	d842                	sw	a6,48(sp)
200169b2:	d646                	sw	a7,44(sp)
200169b4:	d472                	sw	t3,40(sp)
200169b6:	d276                	sw	t4,36(sp)
200169b8:	d07a                	sw	t5,32(sp)
200169ba:	ce7e                	sw	t6,28(sp)
200169bc:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:390
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200169be:	adaff0ef          	jal	ra,20015c98 <__metal_myhart_id>
200169c2:	872a                	mv	a4,a0
200169c4:	800017b7          	lui	a5,0x80001
200169c8:	070a                	slli	a4,a4,0x2
200169ca:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
200169ce:	97ba                	add	a5,a5,a4
200169d0:	439c                	lw	a5,0(a5)
200169d2:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:392

    if ( cpu ) {
200169d6:	fac42783          	lw	a5,-84(s0)
200169da:	c78d                	beqz	a5,20016a04 <metal_lc13_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200169dc:	fac42503          	lw	a0,-84(s0)
200169e0:	a5eff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
200169e4:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:395
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC13].exint_data;
200169e8:	fa842783          	lw	a5,-88(s0)
200169ec:	3507a783          	lw	a5,848(a5)
200169f0:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
        intc->metal_int_table[METAL_INTERRUPT_ID_LC13].handler(METAL_INTERRUPT_ID_LC13, priv);
200169f4:	fa842783          	lw	a5,-88(s0)
200169f8:	3487a783          	lw	a5,840(a5)
200169fc:	fa442583          	lw	a1,-92(s0)
20016a00:	4575                	li	a0,29
20016a02:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
    }
}
20016a04:	0001                	nop
20016a06:	40f6                	lw	ra,92(sp)
20016a08:	42e6                	lw	t0,88(sp)
20016a0a:	4356                	lw	t1,84(sp)
20016a0c:	43c6                	lw	t2,80(sp)
20016a0e:	4436                	lw	s0,76(sp)
20016a10:	4526                	lw	a0,72(sp)
20016a12:	4596                	lw	a1,68(sp)
20016a14:	4606                	lw	a2,64(sp)
20016a16:	56f2                	lw	a3,60(sp)
20016a18:	5762                	lw	a4,56(sp)
20016a1a:	57d2                	lw	a5,52(sp)
20016a1c:	5842                	lw	a6,48(sp)
20016a1e:	58b2                	lw	a7,44(sp)
20016a20:	5e22                	lw	t3,40(sp)
20016a22:	5e92                	lw	t4,36(sp)
20016a24:	5f02                	lw	t5,32(sp)
20016a26:	4ff2                	lw	t6,28(sp)
20016a28:	6125                	addi	sp,sp,96
20016a2a:	30200073          	mret

20016a2e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc14_interrupt_vector_handler (void) {
20016a2e:	711d                	addi	sp,sp,-96
20016a30:	ce86                	sw	ra,92(sp)
20016a32:	cc96                	sw	t0,88(sp)
20016a34:	ca9a                	sw	t1,84(sp)
20016a36:	c89e                	sw	t2,80(sp)
20016a38:	c6a2                	sw	s0,76(sp)
20016a3a:	c4aa                	sw	a0,72(sp)
20016a3c:	c2ae                	sw	a1,68(sp)
20016a3e:	c0b2                	sw	a2,64(sp)
20016a40:	de36                	sw	a3,60(sp)
20016a42:	dc3a                	sw	a4,56(sp)
20016a44:	da3e                	sw	a5,52(sp)
20016a46:	d842                	sw	a6,48(sp)
20016a48:	d646                	sw	a7,44(sp)
20016a4a:	d472                	sw	t3,40(sp)
20016a4c:	d276                	sw	t4,36(sp)
20016a4e:	d07a                	sw	t5,32(sp)
20016a50:	ce7e                	sw	t6,28(sp)
20016a52:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:404
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20016a54:	a44ff0ef          	jal	ra,20015c98 <__metal_myhart_id>
20016a58:	872a                	mv	a4,a0
20016a5a:	800017b7          	lui	a5,0x80001
20016a5e:	070a                	slli	a4,a4,0x2
20016a60:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20016a64:	97ba                	add	a5,a5,a4
20016a66:	439c                	lw	a5,0(a5)
20016a68:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:406

    if ( cpu ) {
20016a6c:	fac42783          	lw	a5,-84(s0)
20016a70:	c78d                	beqz	a5,20016a9a <metal_lc14_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20016a72:	fac42503          	lw	a0,-84(s0)
20016a76:	9c8ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
20016a7a:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:409
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC14].exint_data;
20016a7e:	fa842783          	lw	a5,-88(s0)
20016a82:	3687a783          	lw	a5,872(a5)
20016a86:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
        intc->metal_int_table[METAL_INTERRUPT_ID_LC14].handler(METAL_INTERRUPT_ID_LC14, priv);
20016a8a:	fa842783          	lw	a5,-88(s0)
20016a8e:	3607a783          	lw	a5,864(a5)
20016a92:	fa442583          	lw	a1,-92(s0)
20016a96:	4579                	li	a0,30
20016a98:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
    }
}
20016a9a:	0001                	nop
20016a9c:	40f6                	lw	ra,92(sp)
20016a9e:	42e6                	lw	t0,88(sp)
20016aa0:	4356                	lw	t1,84(sp)
20016aa2:	43c6                	lw	t2,80(sp)
20016aa4:	4436                	lw	s0,76(sp)
20016aa6:	4526                	lw	a0,72(sp)
20016aa8:	4596                	lw	a1,68(sp)
20016aaa:	4606                	lw	a2,64(sp)
20016aac:	56f2                	lw	a3,60(sp)
20016aae:	5762                	lw	a4,56(sp)
20016ab0:	57d2                	lw	a5,52(sp)
20016ab2:	5842                	lw	a6,48(sp)
20016ab4:	58b2                	lw	a7,44(sp)
20016ab6:	5e22                	lw	t3,40(sp)
20016ab8:	5e92                	lw	t4,36(sp)
20016aba:	5f02                	lw	t5,32(sp)
20016abc:	4ff2                	lw	t6,28(sp)
20016abe:	6125                	addi	sp,sp,96
20016ac0:	30200073          	mret

20016ac4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:415

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc15_interrupt_vector_handler (void) {
20016ac4:	711d                	addi	sp,sp,-96
20016ac6:	ce86                	sw	ra,92(sp)
20016ac8:	cc96                	sw	t0,88(sp)
20016aca:	ca9a                	sw	t1,84(sp)
20016acc:	c89e                	sw	t2,80(sp)
20016ace:	c6a2                	sw	s0,76(sp)
20016ad0:	c4aa                	sw	a0,72(sp)
20016ad2:	c2ae                	sw	a1,68(sp)
20016ad4:	c0b2                	sw	a2,64(sp)
20016ad6:	de36                	sw	a3,60(sp)
20016ad8:	dc3a                	sw	a4,56(sp)
20016ada:	da3e                	sw	a5,52(sp)
20016adc:	d842                	sw	a6,48(sp)
20016ade:	d646                	sw	a7,44(sp)
20016ae0:	d472                	sw	t3,40(sp)
20016ae2:	d276                	sw	t4,36(sp)
20016ae4:	d07a                	sw	t5,32(sp)
20016ae6:	ce7e                	sw	t6,28(sp)
20016ae8:	1080                	addi	s0,sp,96
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:418
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20016aea:	9aeff0ef          	jal	ra,20015c98 <__metal_myhart_id>
20016aee:	872a                	mv	a4,a0
20016af0:	800017b7          	lui	a5,0x80001
20016af4:	070a                	slli	a4,a4,0x2
20016af6:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20016afa:	97ba                	add	a5,a5,a4
20016afc:	439c                	lw	a5,0(a5)
20016afe:	faf42623          	sw	a5,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:420

    if ( cpu ) {
20016b02:	fac42783          	lw	a5,-84(s0)
20016b06:	c78d                	beqz	a5,20016b30 <metal_lc15_interrupt_vector_handler+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:422
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20016b08:	fac42503          	lw	a0,-84(s0)
20016b0c:	932ff0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
20016b10:	faa42423          	sw	a0,-88(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:423
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC15].exint_data;
20016b14:	fa842783          	lw	a5,-88(s0)
20016b18:	3807a783          	lw	a5,896(a5)
20016b1c:	faf42223          	sw	a5,-92(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:424
        intc->metal_int_table[METAL_INTERRUPT_ID_LC15].handler(METAL_INTERRUPT_ID_LC15, priv);
20016b20:	fa842783          	lw	a5,-88(s0)
20016b24:	3787a783          	lw	a5,888(a5)
20016b28:	fa442583          	lw	a1,-92(s0)
20016b2c:	457d                	li	a0,31
20016b2e:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:426
    }
}
20016b30:	0001                	nop
20016b32:	40f6                	lw	ra,92(sp)
20016b34:	42e6                	lw	t0,88(sp)
20016b36:	4356                	lw	t1,84(sp)
20016b38:	43c6                	lw	t2,80(sp)
20016b3a:	4436                	lw	s0,76(sp)
20016b3c:	4526                	lw	a0,72(sp)
20016b3e:	4596                	lw	a1,68(sp)
20016b40:	4606                	lw	a2,64(sp)
20016b42:	56f2                	lw	a3,60(sp)
20016b44:	5762                	lw	a4,56(sp)
20016b46:	57d2                	lw	a5,52(sp)
20016b48:	5842                	lw	a6,48(sp)
20016b4a:	58b2                	lw	a7,44(sp)
20016b4c:	5e22                	lw	t3,40(sp)
20016b4e:	5e92                	lw	t4,36(sp)
20016b50:	5f02                	lw	t5,32(sp)
20016b52:	4ff2                	lw	t6,28(sp)
20016b54:	6125                	addi	sp,sp,96
20016b56:	30200073          	mret

20016b5a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429

metal_vector_mode __metal_controller_interrupt_vector_mode (void)
{
20016b5a:	1101                	addi	sp,sp,-32
20016b5c:	ce22                	sw	s0,28(sp)
20016b5e:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
    uintptr_t val;

    asm volatile ("csrr %0, mtvec" : "=r"(val));
20016b60:	305027f3          	csrr	a5,mtvec
20016b64:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:433
    val &= METAL_MTVEC_MASK;
20016b68:	fec42783          	lw	a5,-20(s0)
20016b6c:	03f7f793          	andi	a5,a5,63
20016b70:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:435

    switch (val) {
20016b74:	fec42703          	lw	a4,-20(s0)
20016b78:	4789                	li	a5,2
20016b7a:	00f70d63          	beq	a4,a5,20016b94 <__metal_controller_interrupt_vector_mode+0x3a>
20016b7e:	fec42703          	lw	a4,-20(s0)
20016b82:	478d                	li	a5,3
20016b84:	00f70a63          	beq	a4,a5,20016b98 <__metal_controller_interrupt_vector_mode+0x3e>
20016b88:	fec42703          	lw	a4,-20(s0)
20016b8c:	4785                	li	a5,1
20016b8e:	00f70763          	beq	a4,a5,20016b9c <__metal_controller_interrupt_vector_mode+0x42>
20016b92:	a039                	j	20016ba0 <__metal_controller_interrupt_vector_mode+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:437
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20016b94:	478d                	li	a5,3
20016b96:	a031                	j	20016ba2 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20016b98:	4791                	li	a5,4
20016b9a:	a021                	j	20016ba2 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:441
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20016b9c:	4785                	li	a5,1
20016b9e:	a011                	j	20016ba2 <__metal_controller_interrupt_vector_mode+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    }
    return METAL_DIRECT_MODE;
20016ba0:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:444
}
20016ba2:	853e                	mv	a0,a5
20016ba4:	4472                	lw	s0,28(sp)
20016ba6:	6105                	addi	sp,sp,32
20016ba8:	8082                	ret

20016baa <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447

void __metal_controller_interrupt_vector (metal_vector_mode mode, void *vec_table)
{  
20016baa:	7179                	addi	sp,sp,-48
20016bac:	d622                	sw	s0,44(sp)
20016bae:	1800                	addi	s0,sp,48
20016bb0:	fca42e23          	sw	a0,-36(s0)
20016bb4:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
    uintptr_t trap_entry, val;

    __asm__ volatile ("csrr %0, mtvec" : "=r"(val));
20016bb8:	305027f3          	csrr	a5,mtvec
20016bbc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:451
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20016bc0:	fec42783          	lw	a5,-20(s0)
20016bc4:	fc07f793          	andi	a5,a5,-64
20016bc8:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:452
    trap_entry = (uintptr_t)vec_table;
20016bcc:	fd842783          	lw	a5,-40(s0)
20016bd0:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

    switch (mode) {
20016bd4:	fdc42703          	lw	a4,-36(s0)
20016bd8:	4791                	li	a5,4
20016bda:	06e7e063          	bltu	a5,a4,20016c3a <__metal_controller_interrupt_vector+0x90>
20016bde:	fdc42783          	lw	a5,-36(s0)
20016be2:	00279713          	slli	a4,a5,0x2
20016be6:	2001a7b7          	lui	a5,0x2001a
20016bea:	cf078793          	addi	a5,a5,-784 # 20019cf0 <__metal_driver_vtable_riscv_clint0+0x4c>
20016bee:	97ba                	add	a5,a5,a4
20016bf0:	439c                	lw	a5,0(a5)
20016bf2:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20016bf4:	fe842783          	lw	a5,-24(s0)
20016bf8:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:458
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC));
20016bfc:	fec42783          	lw	a5,-20(s0)
20016c00:	0027e793          	ori	a5,a5,2
20016c04:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        break;
20016c08:	a80d                	j	20016c3a <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20016c0a:	fe842783          	lw	a5,-24(s0)
20016c0e:	30779073          	csrw	mtvt,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC_VECTORED));
20016c12:	fec42783          	lw	a5,-20(s0)
20016c16:	0037e793          	ori	a5,a5,3
20016c1a:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:463
        break;
20016c1e:	a831                	j	20016c3a <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
    case METAL_VECTOR_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry | METAL_MTVEC_VECTORED));
20016c20:	fe842783          	lw	a5,-24(s0)
20016c24:	0017e793          	ori	a5,a5,1
20016c28:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466
        break;
20016c2c:	a039                	j	20016c3a <__metal_controller_interrupt_vector+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:468
    case METAL_DIRECT_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20016c2e:	fe842783          	lw	a5,-24(s0)
20016c32:	9bf1                	andi	a5,a5,-4
20016c34:	30579073          	csrw	mtvec,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:469
        break;
20016c38:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:471
    }
}
20016c3a:	0001                	nop
20016c3c:	5432                	lw	s0,44(sp)
20016c3e:	6145                	addi	sp,sp,48
20016c40:	8082                	ret

20016c42 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:474

int __metal_valid_interrupt_id (int id)
{
20016c42:	1101                	addi	sp,sp,-32
20016c44:	ce22                	sw	s0,28(sp)
20016c46:	1000                	addi	s0,sp,32
20016c48:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
    switch (id) {
20016c4c:	fec42783          	lw	a5,-20(s0)
20016c50:	17f5                	addi	a5,a5,-3
20016c52:	4771                	li	a4,28
20016c54:	00f76d63          	bltu	a4,a5,20016c6e <__metal_valid_interrupt_id+0x2c>
20016c58:	00279713          	slli	a4,a5,0x2
20016c5c:	2001a7b7          	lui	a5,0x2001a
20016c60:	d0478793          	addi	a5,a5,-764 # 20019d04 <__metal_driver_vtable_riscv_clint0+0x60>
20016c64:	97ba                	add	a5,a5,a4
20016c66:	439c                	lw	a5,0(a5)
20016c68:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        return 1;
20016c6a:	4785                	li	a5,1
20016c6c:	a019                	j	20016c72 <__metal_valid_interrupt_id+0x30>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:497
    default:
        break;
20016c6e:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:500
    }

    return 0;
20016c70:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
}
20016c72:	853e                	mv	a0,a5
20016c74:	4472                	lw	s0,28(sp)
20016c76:	6105                	addi	sp,sp,32
20016c78:	8082                	ret

20016c7a <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506

 
int __metal_local_interrupt_enable (struct metal_interrupt *controller,
				  metal_interrupt_id_e id, int enable)
{
20016c7a:	7179                	addi	sp,sp,-48
20016c7c:	d606                	sw	ra,44(sp)
20016c7e:	d422                	sw	s0,40(sp)
20016c80:	1800                	addi	s0,sp,48
20016c82:	fca42e23          	sw	a0,-36(s0)
20016c86:	fcb42c23          	sw	a1,-40(s0)
20016c8a:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
    int rc = 0;
20016c8e:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:509
  
    if ( !controller) {
20016c92:	fdc42783          	lw	a5,-36(s0)
20016c96:	e399                	bnez	a5,20016c9c <__metal_local_interrupt_enable+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        return -1;
20016c98:	57fd                	li	a5,-1
20016c9a:	a849                	j	20016d2c <__metal_local_interrupt_enable+0xb2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
    }

    switch (id) {
20016c9c:	fd842703          	lw	a4,-40(s0)
20016ca0:	47fd                	li	a5,31
20016ca2:	08e7e063          	bltu	a5,a4,20016d22 <__metal_local_interrupt_enable+0xa8>
20016ca6:	fd842783          	lw	a5,-40(s0)
20016caa:	00279713          	slli	a4,a5,0x2
20016cae:	2001a7b7          	lui	a5,0x2001a
20016cb2:	d7878793          	addi	a5,a5,-648 # 20019d78 <__metal_driver_vtable_riscv_clint0+0xd4>
20016cb6:	97ba                	add	a5,a5,a4
20016cb8:	439c                	lw	a5,0(a5)
20016cba:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:515
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20016cbc:	fd442783          	lw	a5,-44(s0)
20016cc0:	c781                	beqz	a5,20016cc8 <__metal_local_interrupt_enable+0x4e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
            __metal_interrupt_global_enable();
20016cc2:	ff1fe0ef          	jal	ra,20015cb2 <__metal_interrupt_global_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20016cc6:	a08d                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            __metal_interrupt_global_disable();
20016cc8:	802ff0ef          	jal	ra,20015cca <__metal_interrupt_global_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        break;
20016ccc:	a8b1                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20016cce:	fd442783          	lw	a5,-44(s0)
20016cd2:	c781                	beqz	a5,20016cda <__metal_local_interrupt_enable+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:523
            __metal_interrupt_software_enable();
20016cd4:	80eff0ef          	jal	ra,20015ce2 <__metal_interrupt_software_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20016cd8:	a881                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:525
            __metal_interrupt_software_disable();
20016cda:	820ff0ef          	jal	ra,20015cfa <__metal_interrupt_software_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527
        break;
20016cde:	a0a9                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:529
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20016ce0:	fd442783          	lw	a5,-44(s0)
20016ce4:	c781                	beqz	a5,20016cec <__metal_local_interrupt_enable+0x72>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:530
	    __metal_interrupt_timer_enable();
20016ce6:	82cff0ef          	jal	ra,20015d12 <__metal_interrupt_timer_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	} else {
	    __metal_interrupt_timer_disable();
	}
	break;
20016cea:	a83d                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:532
	    __metal_interrupt_timer_disable();
20016cec:	840ff0ef          	jal	ra,20015d2c <__metal_interrupt_timer_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:534
	break;
20016cf0:	a825                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:536
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20016cf2:	fd442783          	lw	a5,-44(s0)
20016cf6:	c781                	beqz	a5,20016cfe <__metal_local_interrupt_enable+0x84>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:537
            __metal_interrupt_external_enable();
20016cf8:	84eff0ef          	jal	ra,20015d46 <__metal_interrupt_external_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20016cfc:	a035                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:539
            __metal_interrupt_external_disable();
20016cfe:	864ff0ef          	jal	ra,20015d62 <__metal_interrupt_external_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:541
        break;
20016d02:	a01d                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20016d04:	fd442783          	lw	a5,-44(s0)
20016d08:	c799                	beqz	a5,20016d16 <__metal_local_interrupt_enable+0x9c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
            __metal_interrupt_local_enable(id);
20016d0a:	fd842783          	lw	a5,-40(s0)
20016d0e:	853e                	mv	a0,a5
20016d10:	86eff0ef          	jal	ra,20015d7e <__metal_interrupt_local_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20016d14:	a811                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:561
            __metal_interrupt_local_disable(id);
20016d16:	fd842783          	lw	a5,-40(s0)
20016d1a:	853e                	mv	a0,a5
20016d1c:	88eff0ef          	jal	ra,20015daa <__metal_interrupt_local_disable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:563
        break;
20016d20:	a021                	j	20016d28 <__metal_local_interrupt_enable+0xae>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:565
    default:
        rc = -1;
20016d22:	57fd                	li	a5,-1
20016d24:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:567
    }
    return rc;
20016d28:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:568
}
20016d2c:	853e                	mv	a0,a5
20016d2e:	50b2                	lw	ra,44(sp)
20016d30:	5422                	lw	s0,40(sp)
20016d32:	6145                	addi	sp,sp,48
20016d34:	8082                	ret

20016d36 <__metal_exception_register>:
__metal_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:572

int __metal_exception_register (struct metal_interrupt *controller,
                              int ecode, metal_exception_handler_t isr)
{
20016d36:	7179                	addi	sp,sp,-48
20016d38:	d622                	sw	s0,44(sp)
20016d3a:	1800                	addi	s0,sp,48
20016d3c:	fca42e23          	sw	a0,-36(s0)
20016d40:	fcb42c23          	sw	a1,-40(s0)
20016d44:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:573
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20016d48:	fdc42783          	lw	a5,-36(s0)
20016d4c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20016d50:	fd842703          	lw	a4,-40(s0)
20016d54:	47ad                	li	a5,11
20016d56:	02e7c263          	blt	a5,a4,20016d7a <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575 (discriminator 1)
20016d5a:	fd442783          	lw	a5,-44(s0)
20016d5e:	cf91                	beqz	a5,20016d7a <__metal_exception_register+0x44>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:576
        intc->metal_exception_table[ecode] = isr;
20016d60:	fec42703          	lw	a4,-20(s0)
20016d64:	fd842783          	lw	a5,-40(s0)
20016d68:	0e078793          	addi	a5,a5,224
20016d6c:	078a                	slli	a5,a5,0x2
20016d6e:	97ba                	add	a5,a5,a4
20016d70:	fd442703          	lw	a4,-44(s0)
20016d74:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:577
        return 0;
20016d76:	4781                	li	a5,0
20016d78:	a011                	j	20016d7c <__metal_exception_register+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:579
    }
    return -1;
20016d7a:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:580
}
20016d7c:	853e                	mv	a0,a5
20016d7e:	5432                	lw	s0,44(sp)
20016d80:	6145                	addi	sp,sp,48
20016d82:	8082                	ret

20016d84 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:583

void __metal_driver_riscv_cpu_controller_interrupt_init (struct metal_interrupt *controller)
{
20016d84:	7139                	addi	sp,sp,-64
20016d86:	de06                	sw	ra,60(sp)
20016d88:	dc22                	sw	s0,56(sp)
20016d8a:	0080                	addi	s0,sp,64
20016d8c:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:584
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20016d90:	fcc42783          	lw	a5,-52(s0)
20016d94:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:587
    uintptr_t val;

    if ( !intc->init_done ) {
20016d98:	fe442783          	lw	a5,-28(s0)
20016d9c:	43dc                	lw	a5,4(a5)
20016d9e:	10079d63          	bnez	a5,20016eb8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x134>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:589
        /* Disable and clear all interrupt sources */
        __asm__ volatile ("csrc mie, %0" :: "r"(-1));
20016da2:	57fd                	li	a5,-1
20016da4:	3047b073          	csrc	mie,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:590
        __asm__ volatile ("csrc mip, %0" :: "r"(-1));
20016da8:	57fd                	li	a5,-1
20016daa:	3447b073          	csrc	mip,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:594

        /* Read the misa CSR to determine if the delegation registers exist */
        uintptr_t misa;
        __asm__ volatile ("csrr %0, misa" : "=r" (misa));
20016dae:	301027f3          	csrr	a5,misa
20016db2:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

        /* The delegation CSRs exist if user mode interrupts (N extension) or
         * supervisor mode (S extension) are supported */
        if((misa & METAL_ISA_N_EXTENSIONS) || (misa & METAL_ISA_S_EXTENSIONS)) {
20016db6:	fe042703          	lw	a4,-32(s0)
20016dba:	6789                	lui	a5,0x2
20016dbc:	8ff9                	and	a5,a5,a4
20016dbe:	e799                	bnez	a5,20016dcc <__metal_driver_riscv_cpu_controller_interrupt_init+0x48>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598 (discriminator 1)
20016dc0:	fe042703          	lw	a4,-32(s0)
20016dc4:	000407b7          	lui	a5,0x40
20016dc8:	8ff9                	and	a5,a5,a4
20016dca:	c799                	beqz	a5,20016dd8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:600
            /* Disable interrupt and exception delegation */
            __asm__ volatile ("csrc mideleg, %0" :: "r"(-1));
20016dcc:	57fd                	li	a5,-1
20016dce:	3037b073          	csrc	mideleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            __asm__ volatile ("csrc medeleg, %0" :: "r"(-1));
20016dd2:	57fd                	li	a5,-1
20016dd4:	3027b073          	csrc	medeleg,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:605
        }

        /* The satp CSR exists if supervisor mode (S extension) is supported */
        if(misa & METAL_ISA_S_EXTENSIONS) {
20016dd8:	fe042703          	lw	a4,-32(s0)
20016ddc:	000407b7          	lui	a5,0x40
20016de0:	8ff9                	and	a5,a5,a4
20016de2:	c781                	beqz	a5,20016dea <__metal_driver_riscv_cpu_controller_interrupt_init+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:607
            /* Clear the entire CSR to make sure that satp.MODE = 0 */
            __asm__ volatile ("csrc satp, %0" :: "r"(-1));
20016de4:	57fd                	li	a5,-1
20016de6:	1807b073          	csrc	satp,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611
        }

        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20016dea:	fe042623          	sw	zero,-20(s0)
20016dee:	a0b9                	j	20016e3c <__metal_driver_riscv_cpu_controller_interrupt_init+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20016df0:	fe442683          	lw	a3,-28(s0)
20016df4:	fec42703          	lw	a4,-20(s0)
20016df8:	87ba                	mv	a5,a4
20016dfa:	0786                	slli	a5,a5,0x1
20016dfc:	97ba                	add	a5,a5,a4
20016dfe:	078e                	slli	a5,a5,0x3
20016e00:	97b6                	add	a5,a5,a3
20016e02:	0807a823          	sw	zero,144(a5) # 40090 <__heap_size+0x3f890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:613 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20016e06:	fe442683          	lw	a3,-28(s0)
20016e0a:	fec42703          	lw	a4,-20(s0)
20016e0e:	87ba                	mv	a5,a4
20016e10:	0786                	slli	a5,a5,0x1
20016e12:	97ba                	add	a5,a5,a4
20016e14:	078e                	slli	a5,a5,0x3
20016e16:	97b6                	add	a5,a5,a3
20016e18:	0807aa23          	sw	zero,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:614 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20016e1c:	fe442683          	lw	a3,-28(s0)
20016e20:	fec42703          	lw	a4,-20(s0)
20016e24:	87ba                	mv	a5,a4
20016e26:	0786                	slli	a5,a5,0x1
20016e28:	97ba                	add	a5,a5,a4
20016e2a:	078e                	slli	a5,a5,0x3
20016e2c:	97b6                	add	a5,a5,a3
20016e2e:	0807ac23          	sw	zero,152(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20016e32:	fec42783          	lw	a5,-20(s0)
20016e36:	0785                	addi	a5,a5,1
20016e38:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 1)
20016e3c:	fec42703          	lw	a4,-20(s0)
20016e40:	47fd                	li	a5,31
20016e42:	fae7d7e3          	bge	a5,a4,20016df0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
	}
	for (int i = 0; i < METAL_MAX_ME; i++) {
20016e46:	fe042423          	sw	zero,-24(s0)
20016e4a:	a01d                	j	20016e70 <__metal_driver_riscv_cpu_controller_interrupt_init+0xec>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:617 (discriminator 3)
	    intc->metal_exception_table[i] = __metal_default_exception_handler;
20016e4c:	fe442703          	lw	a4,-28(s0)
20016e50:	fe842783          	lw	a5,-24(s0)
20016e54:	0e078793          	addi	a5,a5,224
20016e58:	078a                	slli	a5,a5,0x2
20016e5a:	97ba                	add	a5,a5,a4
20016e5c:	20016737          	lui	a4,0x20016
20016e60:	dd670713          	addi	a4,a4,-554 # 20015dd6 <__metal_default_exception_handler>
20016e64:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 3)
	for (int i = 0; i < METAL_MAX_ME; i++) {
20016e66:	fe842783          	lw	a5,-24(s0)
20016e6a:	0785                	addi	a5,a5,1
20016e6c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 1)
20016e70:	fe842703          	lw	a4,-24(s0)
20016e74:	47ad                	li	a5,11
20016e76:	fce7dbe3          	bge	a5,a4,20016e4c <__metal_driver_riscv_cpu_controller_interrupt_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:619
	}
        __metal_controller_interrupt_vector(METAL_DIRECT_MODE, (void *)(uintptr_t)&__metal_exception_handler);
20016e7a:	200167b7          	lui	a5,0x20016
20016e7e:	08078593          	addi	a1,a5,128 # 20016080 <__metal_exception_handler>
20016e82:	4501                	li	a0,0
20016e84:	331d                	jal	20016baa <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620
	__asm__ volatile ("csrr %0, misa" : "=r"(val));
20016e86:	301027f3          	csrr	a5,misa
20016e8a:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
	if (val & (METAL_ISA_D_EXTENSIONS | METAL_ISA_F_EXTENSIONS | METAL_ISA_Q_EXTENSIONS)) {
20016e8e:	fdc42703          	lw	a4,-36(s0)
20016e92:	67c1                	lui	a5,0x10
20016e94:	02878793          	addi	a5,a5,40 # 10028 <__heap_size+0xf828>
20016e98:	8ff9                	and	a5,a5,a4
20016e9a:	cb99                	beqz	a5,20016eb0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x12c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:623
	    /* Floating point architecture, so turn on FP register saving*/
	    __asm__ volatile ("csrr %0, mstatus" : "=r"(val));
20016e9c:	300027f3          	csrr	a5,mstatus
20016ea0:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:624
	    __asm__ volatile ("csrw mstatus, %0" :: "r"(val | METAL_MSTATUS_FS_INIT));
20016ea4:	fdc42703          	lw	a4,-36(s0)
20016ea8:	6789                	lui	a5,0x2
20016eaa:	8fd9                	or	a5,a5,a4
20016eac:	30079073          	csrw	mstatus,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:626
	}
	intc->init_done = 1;
20016eb0:	fe442783          	lw	a5,-28(s0)
20016eb4:	4705                	li	a4,1
20016eb6:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628
    }
}
20016eb8:	0001                	nop
20016eba:	50f2                	lw	ra,60(sp)
20016ebc:	5462                	lw	s0,56(sp)
20016ebe:	6121                	addi	sp,sp,64
20016ec0:	8082                	ret

20016ec2 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:633

int __metal_driver_riscv_cpu_controller_interrupt_register(struct metal_interrupt *controller,
							 int id, metal_interrupt_handler_t isr,
							 void *priv)
{
20016ec2:	7179                	addi	sp,sp,-48
20016ec4:	d606                	sw	ra,44(sp)
20016ec6:	d422                	sw	s0,40(sp)
20016ec8:	1800                	addi	s0,sp,48
20016eca:	fca42e23          	sw	a0,-36(s0)
20016ece:	fcb42c23          	sw	a1,-40(s0)
20016ed2:	fcc42a23          	sw	a2,-44(s0)
20016ed6:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634
    int rc = 0;
20016eda:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:635
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20016ede:	fdc42783          	lw	a5,-36(s0)
20016ee2:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:637
 
    if ( !__metal_valid_interrupt_id(id) ) {
20016ee6:	fd842503          	lw	a0,-40(s0)
20016eea:	3ba1                	jal	20016c42 <__metal_valid_interrupt_id>
20016eec:	87aa                	mv	a5,a0
20016eee:	e399                	bnez	a5,20016ef4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:638
        return -11;
20016ef0:	57d5                	li	a5,-11
20016ef2:	aa11                	j	20017006 <__metal_driver_riscv_cpu_controller_interrupt_register+0x144>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:641
    }

    if (isr) {
20016ef4:	fd442783          	lw	a5,-44(s0)
20016ef8:	cf85                	beqz	a5,20016f30 <__metal_driver_riscv_cpu_controller_interrupt_register+0x6e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642
        intc->metal_int_table[id].handler = isr;
20016efa:	fe842683          	lw	a3,-24(s0)
20016efe:	fd842703          	lw	a4,-40(s0)
20016f02:	87ba                	mv	a5,a4
20016f04:	0786                	slli	a5,a5,0x1
20016f06:	97ba                	add	a5,a5,a4
20016f08:	078e                	slli	a5,a5,0x3
20016f0a:	97b6                	add	a5,a5,a3
20016f0c:	fd442703          	lw	a4,-44(s0)
20016f10:	08e7a823          	sw	a4,144(a5) # 2090 <__heap_size+0x1890>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:643
        intc->metal_int_table[id].exint_data = priv;
20016f14:	fe842683          	lw	a3,-24(s0)
20016f18:	fd842703          	lw	a4,-40(s0)
20016f1c:	87ba                	mv	a5,a4
20016f1e:	0786                	slli	a5,a5,0x1
20016f20:	97ba                	add	a5,a5,a4
20016f22:	078e                	slli	a5,a5,0x3
20016f24:	97b6                	add	a5,a5,a3
20016f26:	fd042703          	lw	a4,-48(s0)
20016f2a:	08e7ac23          	sw	a4,152(a5)
20016f2e:	a8d1                	j	20017002 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
    } else {
	switch (id) {
20016f30:	fd842783          	lw	a5,-40(s0)
20016f34:	17f5                	addi	a5,a5,-3
20016f36:	4771                	li	a4,28
20016f38:	0cf76263          	bltu	a4,a5,20016ffc <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20016f3c:	00279713          	slli	a4,a5,0x2
20016f40:	2001a7b7          	lui	a5,0x2001a
20016f44:	df878793          	addi	a5,a5,-520 # 20019df8 <__metal_driver_vtable_riscv_clint0+0x154>
20016f48:	97ba                	add	a5,a5,a4
20016f4a:	439c                	lw	a5,0(a5)
20016f4c:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:647
	case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20016f4e:	fe842683          	lw	a3,-24(s0)
20016f52:	fd842703          	lw	a4,-40(s0)
20016f56:	87ba                	mv	a5,a4
20016f58:	0786                	slli	a5,a5,0x1
20016f5a:	97ba                	add	a5,a5,a4
20016f5c:	078e                	slli	a5,a5,0x3
20016f5e:	97b6                	add	a5,a5,a3
20016f60:	20016737          	lui	a4,0x20016
20016f64:	ec670713          	addi	a4,a4,-314 # 20015ec6 <__metal_default_sw_handler>
20016f68:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
            intc->metal_int_table[id].sub_int = priv;
20016f6c:	fe842683          	lw	a3,-24(s0)
20016f70:	fd842703          	lw	a4,-40(s0)
20016f74:	87ba                	mv	a5,a4
20016f76:	0786                	slli	a5,a5,0x1
20016f78:	97ba                	add	a5,a5,a4
20016f7a:	078e                	slli	a5,a5,0x3
20016f7c:	97b6                	add	a5,a5,a3
20016f7e:	fd042703          	lw	a4,-48(s0)
20016f82:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
	  break;
20016f86:	a8b5                	j	20017002 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:651
	case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20016f88:	fe842683          	lw	a3,-24(s0)
20016f8c:	fd842703          	lw	a4,-40(s0)
20016f90:	87ba                	mv	a5,a4
20016f92:	0786                	slli	a5,a5,0x1
20016f94:	97ba                	add	a5,a5,a4
20016f96:	078e                	slli	a5,a5,0x3
20016f98:	97b6                	add	a5,a5,a3
20016f9a:	20016737          	lui	a4,0x20016
20016f9e:	fc070713          	addi	a4,a4,-64 # 20015fc0 <__metal_default_timer_handler>
20016fa2:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652
            intc->metal_int_table[id].sub_int = priv;
20016fa6:	fe842683          	lw	a3,-24(s0)
20016faa:	fd842703          	lw	a4,-40(s0)
20016fae:	87ba                	mv	a5,a4
20016fb0:	0786                	slli	a5,a5,0x1
20016fb2:	97ba                	add	a5,a5,a4
20016fb4:	078e                	slli	a5,a5,0x3
20016fb6:	97b6                	add	a5,a5,a3
20016fb8:	fd042703          	lw	a4,-48(s0)
20016fbc:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
	  break;
20016fc0:	a089                	j	20017002 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
	case METAL_INTERRUPT_ID_LC11:
	case METAL_INTERRUPT_ID_LC12:
	case METAL_INTERRUPT_ID_LC13:
	case METAL_INTERRUPT_ID_LC14:
	case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler = __metal_default_interrupt_handler;
20016fc2:	fe842683          	lw	a3,-24(s0)
20016fc6:	fd842703          	lw	a4,-40(s0)
20016fca:	87ba                	mv	a5,a4
20016fcc:	0786                	slli	a5,a5,0x1
20016fce:	97ba                	add	a5,a5,a4
20016fd0:	078e                	slli	a5,a5,0x3
20016fd2:	97b6                	add	a5,a5,a3
20016fd4:	20016737          	lui	a4,0x20016
20016fd8:	dee70713          	addi	a4,a4,-530 # 20015dee <__metal_default_interrupt_handler>
20016fdc:	08e7a823          	sw	a4,144(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:672
            intc->metal_int_table[id].sub_int = priv;
20016fe0:	fe842683          	lw	a3,-24(s0)
20016fe4:	fd842703          	lw	a4,-40(s0)
20016fe8:	87ba                	mv	a5,a4
20016fea:	0786                	slli	a5,a5,0x1
20016fec:	97ba                	add	a5,a5,a4
20016fee:	078e                	slli	a5,a5,0x3
20016ff0:	97b6                	add	a5,a5,a3
20016ff2:	fd042703          	lw	a4,-48(s0)
20016ff6:	08e7aa23          	sw	a4,148(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:673
	  break;
20016ffa:	a021                	j	20017002 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
	default:
	  rc = -12;
20016ffc:	57d1                	li	a5,-12
20016ffe:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
	}
    }
    return rc;
20017002:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
}
20017006:	853e                	mv	a0,a5
20017008:	50b2                	lw	ra,44(sp)
2001700a:	5422                	lw	s0,40(sp)
2001700c:	6145                	addi	sp,sp,48
2001700e:	8082                	ret

20017010 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:683

int __metal_driver_riscv_cpu_controller_interrupt_enable (struct metal_interrupt *controller,
                                                        int id)
{
20017010:	1101                	addi	sp,sp,-32
20017012:	ce06                	sw	ra,28(sp)
20017014:	cc22                	sw	s0,24(sp)
20017016:	1000                	addi	s0,sp,32
20017018:	fea42623          	sw	a0,-20(s0)
2001701c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20017020:	fe842783          	lw	a5,-24(s0)
20017024:	4605                	li	a2,1
20017026:	85be                	mv	a1,a5
20017028:	fec42503          	lw	a0,-20(s0)
2001702c:	c4fff0ef          	jal	ra,20016c7a <__metal_local_interrupt_enable>
20017030:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
20017032:	853e                	mv	a0,a5
20017034:	40f2                	lw	ra,28(sp)
20017036:	4462                	lw	s0,24(sp)
20017038:	6105                	addi	sp,sp,32
2001703a:	8082                	ret

2001703c <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:689

int __metal_driver_riscv_cpu_controller_interrupt_disable (struct metal_interrupt *controller,
                                                         int id)
{   
2001703c:	1101                	addi	sp,sp,-32
2001703e:	ce06                	sw	ra,28(sp)
20017040:	cc22                	sw	s0,24(sp)
20017042:	1000                	addi	s0,sp,32
20017044:	fea42623          	sw	a0,-20(s0)
20017048:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
2001704c:	fe842783          	lw	a5,-24(s0)
20017050:	4601                	li	a2,0
20017052:	85be                	mv	a1,a5
20017054:	fec42503          	lw	a0,-20(s0)
20017058:	c23ff0ef          	jal	ra,20016c7a <__metal_local_interrupt_enable>
2001705c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:691
}
2001705e:	853e                	mv	a0,a5
20017060:	40f2                	lw	ra,28(sp)
20017062:	4462                	lw	s0,24(sp)
20017064:	6105                	addi	sp,sp,32
20017066:	8082                	ret

20017068 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:722
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode (struct metal_interrupt *controller)
{   
20017068:	1101                	addi	sp,sp,-32
2001706a:	ce06                	sw	ra,28(sp)
2001706c:	cc22                	sw	s0,24(sp)
2001706e:	1000                	addi	s0,sp,32
20017070:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723
    return __metal_controller_interrupt_vector_mode();
20017074:	ae7ff0ef          	jal	ra,20016b5a <__metal_controller_interrupt_vector_mode>
20017078:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
}
2001707a:	853e                	mv	a0,a5
2001707c:	40f2                	lw	ra,28(sp)
2001707e:	4462                	lw	s0,24(sp)
20017080:	6105                	addi	sp,sp,32
20017082:	8082                	ret

20017084 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728

int __metal_driver_riscv_cpu_controller_set_vector_mode (struct metal_interrupt *controller,
                                                         metal_vector_mode mode)
{   
20017084:	7179                	addi	sp,sp,-48
20017086:	d606                	sw	ra,44(sp)
20017088:	d422                	sw	s0,40(sp)
2001708a:	1800                	addi	s0,sp,48
2001708c:	fca42e23          	sw	a0,-36(s0)
20017090:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:729
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20017094:	fdc42783          	lw	a5,-36(s0)
20017098:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731

    if (mode == METAL_DIRECT_MODE) {
2001709c:	fd842783          	lw	a5,-40(s0)
200170a0:	eb99                	bnez	a5,200170b6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        __metal_controller_interrupt_vector(mode, (void *)(uintptr_t)&__metal_exception_handler);
200170a2:	200167b7          	lui	a5,0x20016
200170a6:	08078593          	addi	a1,a5,128 # 20016080 <__metal_exception_handler>
200170aa:	fd842503          	lw	a0,-40(s0)
200170ae:	afdff0ef          	jal	ra,20016baa <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            return 0;
200170b2:	4781                	li	a5,0
200170b4:	a00d                	j	200170d6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:735
    }
    if (mode == METAL_VECTOR_MODE) {
200170b6:	fd842703          	lw	a4,-40(s0)
200170ba:	4785                	li	a5,1
200170bc:	00f71c63          	bne	a4,a5,200170d4 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x50>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:736
        __metal_controller_interrupt_vector(mode, (void *)__metal_vector_table);
200170c0:	200197b7          	lui	a5,0x20019
200170c4:	60078593          	addi	a1,a5,1536 # 20019600 <__metal_vector_table>
200170c8:	fd842503          	lw	a0,-40(s0)
200170cc:	adfff0ef          	jal	ra,20016baa <__metal_controller_interrupt_vector>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
        return 0;
200170d0:	4781                	li	a5,0
200170d2:	a011                	j	200170d6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:739
    }
    return -1;
200170d4:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740
}
200170d6:	853e                	mv	a0,a5
200170d8:	50b2                	lw	ra,44(sp)
200170da:	5422                	lw	s0,40(sp)
200170dc:	6145                	addi	sp,sp,48
200170de:	8082                	ret

200170e0 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:744

int __metal_driver_riscv_cpu_controller_command_request (struct metal_interrupt *controller,
						       int cmd, void *data)
{
200170e0:	1101                	addi	sp,sp,-32
200170e2:	ce22                	sw	s0,28(sp)
200170e4:	1000                	addi	s0,sp,32
200170e6:	fea42623          	sw	a0,-20(s0)
200170ea:	feb42423          	sw	a1,-24(s0)
200170ee:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:746
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic */
    return 0;
200170f2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747
}
200170f4:	853e                	mv	a0,a5
200170f6:	4472                	lw	s0,28(sp)
200170f8:	6105                	addi	sp,sp,32
200170fa:	8082                	ret

200170fc <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:752

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu)
{
200170fc:	7139                	addi	sp,sp,-64
200170fe:	de22                	sw	s0,60(sp)
20017100:	0080                	addi	s0,sp,64
20017102:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:753
    unsigned long long val = 0;
20017106:	4301                	li	t1,0
20017108:	4381                	li	t2,0
2001710a:	fe642423          	sw	t1,-24(s0)
2001710e:	fe742623          	sw	t2,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi));
20017112:	b8002573          	csrr	a0,mcycleh
20017116:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:759
    __asm__ volatile ("csrr %0, mcycle" : "=r"(lo));
2001711a:	b0002573          	csrr	a0,mcycle
2001711e:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:760
    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi1));
20017122:	b8002573          	csrr	a0,mcycleh
20017126:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:761
    if (hi == hi1) {
2001712a:	fe442883          	lw	a7,-28(s0)
2001712e:	fdc42503          	lw	a0,-36(s0)
20017132:	02a89563          	bne	a7,a0,2001715c <__metal_driver_cpu_mcycle_get+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
        val = ((unsigned long long)hi << 32) | lo;
20017136:	fe442503          	lw	a0,-28(s0)
2001713a:	85aa                	mv	a1,a0
2001713c:	4601                	li	a2,0
2001713e:	00059813          	slli	a6,a1,0x0
20017142:	4781                	li	a5,0
20017144:	fe042603          	lw	a2,-32(s0)
20017148:	86b2                	mv	a3,a2
2001714a:	4701                	li	a4,0
2001714c:	00d7e633          	or	a2,a5,a3
20017150:	fec42423          	sw	a2,-24(s0)
20017154:	00e867b3          	or	a5,a6,a4
20017158:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:768
    }
#else
    __asm__ volatile ("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
2001715c:	fe842783          	lw	a5,-24(s0)
20017160:	fec42803          	lw	a6,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:769
}
20017164:	853e                	mv	a0,a5
20017166:	85c2                	mv	a1,a6
20017168:	5472                	lw	s0,60(sp)
2001716a:	6121                	addi	sp,sp,64
2001716c:	8082                	ret

2001716e <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu)
{
2001716e:	7179                	addi	sp,sp,-48
20017170:	d606                	sw	ra,44(sp)
20017172:	d422                	sw	s0,40(sp)
20017174:	d24a                	sw	s2,36(sp)
20017176:	d04e                	sw	s3,32(sp)
20017178:	1800                	addi	s0,sp,48
2001717a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:774
  int timebase;
    if (!cpu) {
2001717e:	fdc42783          	lw	a5,-36(s0)
20017182:	e781                	bnez	a5,2001718a <__metal_driver_cpu_timebase_get+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775
        return 0;
20017184:	4901                	li	s2,0
20017186:	4981                	li	s3,0
20017188:	a821                	j	200171a0 <__metal_driver_cpu_timebase_get+0x32>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:778
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
2001718a:	fdc42503          	lw	a0,-36(s0)
2001718e:	a87fe0ef          	jal	ra,20015c14 <__metal_driver_cpu_timebase>
20017192:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:779
    return timebase;
20017196:	fec42783          	lw	a5,-20(s0)
2001719a:	893e                	mv	s2,a5
2001719c:	87fd                	srai	a5,a5,0x1f
2001719e:	89be                	mv	s3,a5
200171a0:	87ca                	mv	a5,s2
200171a2:	884e                	mv	a6,s3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:780
}
200171a4:	853e                	mv	a0,a5
200171a6:	85c2                	mv	a1,a6
200171a8:	50b2                	lw	ra,44(sp)
200171aa:	5422                	lw	s0,40(sp)
200171ac:	5912                	lw	s2,36(sp)
200171ae:	5982                	lw	s3,32(sp)
200171b0:	6145                	addi	sp,sp,48
200171b2:	8082                	ret

200171b4 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:783

unsigned long long  __metal_driver_cpu_mtime_get (struct metal_cpu *cpu)
{
200171b4:	7179                	addi	sp,sp,-48
200171b6:	d606                	sw	ra,44(sp)
200171b8:	d422                	sw	s0,40(sp)
200171ba:	1800                	addi	s0,sp,48
200171bc:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:784
    unsigned long long time = 0;
200171c0:	4781                	li	a5,0
200171c2:	4801                	li	a6,0
200171c4:	fef42023          	sw	a5,-32(s0)
200171c8:	ff042223          	sw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:787
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
200171cc:	fdc42503          	lw	a0,-36(s0)
200171d0:	a6ffe0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
200171d4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:789

    if (intc) {
200171d8:	fec42783          	lw	a5,-20(s0)
200171dc:	c78d                	beqz	a5,20017206 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:790
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
200171de:	fec42783          	lw	a5,-20(s0)
200171e2:	13c7a783          	lw	a5,316(a5)
200171e6:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:791
        if (tmr_intc) {
200171ea:	fe842783          	lw	a5,-24(s0)
200171ee:	cf81                	beqz	a5,20017206 <__metal_driver_cpu_mtime_get+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:792
            tmr_intc->vtable->command_request(tmr_intc,
200171f0:	fe842783          	lw	a5,-24(s0)
200171f4:	439c                	lw	a5,0(a5)
200171f6:	43f8                	lw	a4,68(a5)
200171f8:	fe040793          	addi	a5,s0,-32
200171fc:	863e                	mv	a2,a5
200171fe:	4585                	li	a1,1
20017200:	fe842503          	lw	a0,-24(s0)
20017204:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:796
                                              METAL_TIMER_MTIME_GET, &time);
        }
    }
    return time;
20017206:	fe042783          	lw	a5,-32(s0)
2001720a:	fe442803          	lw	a6,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:797
}
2001720e:	853e                	mv	a0,a5
20017210:	85c2                	mv	a1,a6
20017212:	50b2                	lw	ra,44(sp)
20017214:	5422                	lw	s0,40(sp)
20017216:	6145                	addi	sp,sp,48
20017218:	8082                	ret

2001721a <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:800

int __metal_driver_cpu_mtimecmp_set (struct metal_cpu *cpu, unsigned long long time)
{
2001721a:	7179                	addi	sp,sp,-48
2001721c:	d606                	sw	ra,44(sp)
2001721e:	d422                	sw	s0,40(sp)
20017220:	d226                	sw	s1,36(sp)
20017222:	1800                	addi	s0,sp,48
20017224:	fca42e23          	sw	a0,-36(s0)
20017228:	fcb42823          	sw	a1,-48(s0)
2001722c:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    int rc = -1;
20017230:	57fd                	li	a5,-1
20017232:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20017236:	fdc42503          	lw	a0,-36(s0)
2001723a:	a05fe0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
2001723e:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:806

    if (intc) {
20017242:	fe842783          	lw	a5,-24(s0)
20017246:	cf8d                	beqz	a5,20017280 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20017248:	fe842783          	lw	a5,-24(s0)
2001724c:	13c7a783          	lw	a5,316(a5)
20017250:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
        if (tmr_intc) {
20017254:	fe442783          	lw	a5,-28(s0)
20017258:	c785                	beqz	a5,20017280 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:809
            rc = tmr_intc->vtable->mtimecmp_set(tmr_intc,
2001725a:	fe442783          	lw	a5,-28(s0)
2001725e:	439c                	lw	a5,0(a5)
20017260:	47a4                	lw	s1,72(a5)
20017262:	fdc42503          	lw	a0,-36(s0)
20017266:	98bfe0ef          	jal	ra,20015bf0 <__metal_driver_cpu_hartid>
2001726a:	87aa                	mv	a5,a0
2001726c:	fd042603          	lw	a2,-48(s0)
20017270:	fd442683          	lw	a3,-44(s0)
20017274:	85be                	mv	a1,a5
20017276:	fe442503          	lw	a0,-28(s0)
2001727a:	9482                	jalr	s1
2001727c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:814
                                                __metal_driver_cpu_hartid(cpu),
                                                time);
        }
    }
    return rc;
20017280:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:815
}
20017284:	853e                	mv	a0,a5
20017286:	50b2                	lw	ra,44(sp)
20017288:	5422                	lw	s0,40(sp)
2001728a:	5492                	lw	s1,36(sp)
2001728c:	6145                	addi	sp,sp,48
2001728e:	8082                	ret

20017290 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:819

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu)
{
20017290:	1101                	addi	sp,sp,-32
20017292:	ce22                	sw	s0,28(sp)
20017294:	1000                	addi	s0,sp,32
20017296:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2001729a:	800017b7          	lui	a5,0x80001
2001729e:	ad478793          	addi	a5,a5,-1324 # 80000ad4 <metal_segment_heap_target_end+0xfffff2a8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
200172a2:	853e                	mv	a0,a5
200172a4:	4472                	lw	s0,28(sp)
200172a6:	6105                	addi	sp,sp,32
200172a8:	8082                	ret

200172aa <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:833

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu)
{
200172aa:	1101                	addi	sp,sp,-32
200172ac:	ce22                	sw	s0,28(sp)
200172ae:	1000                	addi	s0,sp,32
200172b0:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834
    return METAL_INTERRUPT_ID_TMR;
200172b4:	479d                	li	a5,7
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
}
200172b6:	853e                	mv	a0,a5
200172b8:	4472                	lw	s0,28(sp)
200172ba:	6105                	addi	sp,sp,32
200172bc:	8082                	ret

200172be <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:839

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu)
{
200172be:	1101                	addi	sp,sp,-32
200172c0:	ce22                	sw	s0,28(sp)
200172c2:	1000                	addi	s0,sp,32
200172c4:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:841
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
200172c8:	800017b7          	lui	a5,0x80001
200172cc:	ad478793          	addi	a5,a5,-1324 # 80000ad4 <metal_segment_heap_target_end+0xfffff2a8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:850
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
200172d0:	853e                	mv	a0,a5
200172d2:	4472                	lw	s0,28(sp)
200172d4:	6105                	addi	sp,sp,32
200172d6:	8082                	ret

200172d8 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:853

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu)
{
200172d8:	1101                	addi	sp,sp,-32
200172da:	ce22                	sw	s0,28(sp)
200172dc:	1000                	addi	s0,sp,32
200172de:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:854
    return METAL_INTERRUPT_ID_SW;
200172e2:	478d                	li	a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:855
}
200172e4:	853e                	mv	a0,a5
200172e6:	4472                	lw	s0,28(sp)
200172e8:	6105                	addi	sp,sp,32
200172ea:	8082                	ret

200172ec <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:858

int __metal_driver_cpu_set_sw_ipi (struct metal_cpu *cpu, int hartid)
{
200172ec:	7179                	addi	sp,sp,-48
200172ee:	d606                	sw	ra,44(sp)
200172f0:	d422                	sw	s0,40(sp)
200172f2:	1800                	addi	s0,sp,48
200172f4:	fca42e23          	sw	a0,-36(s0)
200172f8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:859
    int rc = -1;
200172fc:	57fd                	li	a5,-1
200172fe:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:862
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc = 
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20017302:	fdc42503          	lw	a0,-36(s0)
20017306:	939fe0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
2001730a:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:864

    if (intc) {
2001730e:	fe842783          	lw	a5,-24(s0)
20017312:	c79d                	beqz	a5,20017340 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:865
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20017314:	fe842783          	lw	a5,-24(s0)
20017318:	0dc7a783          	lw	a5,220(a5)
2001731c:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:866
        if (sw_intc) {
20017320:	fe442783          	lw	a5,-28(s0)
20017324:	cf91                	beqz	a5,20017340 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:867
            rc = sw_intc->vtable->command_request(sw_intc,
20017326:	fe442783          	lw	a5,-28(s0)
2001732a:	439c                	lw	a5,0(a5)
2001732c:	43f8                	lw	a4,68(a5)
2001732e:	fd840793          	addi	a5,s0,-40
20017332:	863e                	mv	a2,a5
20017334:	458d                	li	a1,3
20017336:	fe442503          	lw	a0,-28(s0)
2001733a:	9702                	jalr	a4
2001733c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:871
                                                  METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20017340:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:872
}
20017344:	853e                	mv	a0,a5
20017346:	50b2                	lw	ra,44(sp)
20017348:	5422                	lw	s0,40(sp)
2001734a:	6145                	addi	sp,sp,48
2001734c:	8082                	ret

2001734e <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:875

int __metal_driver_cpu_clear_sw_ipi (struct metal_cpu *cpu, int hartid)
{
2001734e:	7179                	addi	sp,sp,-48
20017350:	d606                	sw	ra,44(sp)
20017352:	d422                	sw	s0,40(sp)
20017354:	1800                	addi	s0,sp,48
20017356:	fca42e23          	sw	a0,-36(s0)
2001735a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:876
    int rc = -1;
2001735e:	57fd                	li	a5,-1
20017360:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:879
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20017364:	fdc42503          	lw	a0,-36(s0)
20017368:	8d7fe0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
2001736c:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:881

    if (intc) {
20017370:	fe842783          	lw	a5,-24(s0)
20017374:	c79d                	beqz	a5,200173a2 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:882
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20017376:	fe842783          	lw	a5,-24(s0)
2001737a:	0dc7a783          	lw	a5,220(a5)
2001737e:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:883
        if (sw_intc) {
20017382:	fe442783          	lw	a5,-28(s0)
20017386:	cf91                	beqz	a5,200173a2 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:884
            rc = sw_intc->vtable->command_request(sw_intc,
20017388:	fe442783          	lw	a5,-28(s0)
2001738c:	439c                	lw	a5,0(a5)
2001738e:	43f8                	lw	a4,68(a5)
20017390:	fd840793          	addi	a5,s0,-40
20017394:	863e                	mv	a2,a5
20017396:	4589                	li	a1,2
20017398:	fe442503          	lw	a0,-28(s0)
2001739c:	9702                	jalr	a4
2001739e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:888
                                                  METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
200173a2:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:889
}
200173a6:	853e                	mv	a0,a5
200173a8:	50b2                	lw	ra,44(sp)
200173aa:	5422                	lw	s0,40(sp)
200173ac:	6145                	addi	sp,sp,48
200173ae:	8082                	ret

200173b0 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:892

int __metal_driver_cpu_get_msip (struct metal_cpu *cpu, int hartid)
{
200173b0:	7179                	addi	sp,sp,-48
200173b2:	d606                	sw	ra,44(sp)
200173b4:	d422                	sw	s0,40(sp)
200173b6:	1800                	addi	s0,sp,48
200173b8:	fca42e23          	sw	a0,-36(s0)
200173bc:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:893
    int rc = 0;
200173c0:	fe042623          	sw	zero,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:896
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
200173c4:	fdc42503          	lw	a0,-36(s0)
200173c8:	877fe0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
200173cc:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:898

    if (intc) {
200173d0:	fe842783          	lw	a5,-24(s0)
200173d4:	c79d                	beqz	a5,20017402 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:899
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200173d6:	fe842783          	lw	a5,-24(s0)
200173da:	0dc7a783          	lw	a5,220(a5)
200173de:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:900
        if (sw_intc) {
200173e2:	fe442783          	lw	a5,-28(s0)
200173e6:	cf91                	beqz	a5,20017402 <__metal_driver_cpu_get_msip+0x52>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:901
            rc = sw_intc->vtable->command_request(sw_intc,
200173e8:	fe442783          	lw	a5,-28(s0)
200173ec:	439c                	lw	a5,0(a5)
200173ee:	43f8                	lw	a4,68(a5)
200173f0:	fd840793          	addi	a5,s0,-40
200173f4:	863e                	mv	a2,a5
200173f6:	4591                	li	a1,4
200173f8:	fe442503          	lw	a0,-28(s0)
200173fc:	9702                	jalr	a4
200173fe:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:905
                                                  METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20017402:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:906
}
20017406:	853e                	mv	a0,a5
20017408:	50b2                	lw	ra,44(sp)
2001740a:	5422                	lw	s0,40(sp)
2001740c:	6145                	addi	sp,sp,48
2001740e:	8082                	ret

20017410 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:910

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu)
{
20017410:	1101                	addi	sp,sp,-32
20017412:	ce06                	sw	ra,28(sp)
20017414:	cc22                	sw	s0,24(sp)
20017416:	1000                	addi	s0,sp,32
20017418:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:911
    return __metal_driver_cpu_interrupt_controller(cpu);
2001741c:	fec42503          	lw	a0,-20(s0)
20017420:	81ffe0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
20017424:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:912
}
20017426:	853e                	mv	a0,a5
20017428:	40f2                	lw	ra,28(sp)
2001742a:	4462                	lw	s0,24(sp)
2001742c:	6105                	addi	sp,sp,32
2001742e:	8082                	ret

20017430 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:936
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
				        metal_exception_handler_t isr)
{
20017430:	7179                	addi	sp,sp,-48
20017432:	d606                	sw	ra,44(sp)
20017434:	d422                	sw	s0,40(sp)
20017436:	1800                	addi	s0,sp,48
20017438:	fca42e23          	sw	a0,-36(s0)
2001743c:	fcb42c23          	sw	a1,-40(s0)
20017440:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:938
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20017444:	fdc42503          	lw	a0,-36(s0)
20017448:	ff6fe0ef          	jal	ra,20015c3e <__metal_driver_cpu_interrupt_controller>
2001744c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:940

    if (intc) {
20017450:	fec42783          	lw	a5,-20(s0)
20017454:	cb99                	beqz	a5,2001746a <__metal_driver_cpu_exception_register+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:941
        return __metal_exception_register((struct metal_interrupt *)intc, ecode, isr);
20017456:	fd442603          	lw	a2,-44(s0)
2001745a:	fd842583          	lw	a1,-40(s0)
2001745e:	fec42503          	lw	a0,-20(s0)
20017462:	8d5ff0ef          	jal	ra,20016d36 <__metal_exception_register>
20017466:	87aa                	mv	a5,a0
20017468:	a011                	j	2001746c <__metal_driver_cpu_exception_register+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:943
    }
    return -1;
2001746a:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:944
}
2001746c:	853e                	mv	a0,a5
2001746e:	50b2                	lw	ra,44(sp)
20017470:	5422                	lw	s0,40(sp)
20017472:	6145                	addi	sp,sp,48
20017474:	8082                	ret

20017476 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:947

int  __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu, uintptr_t epc)
{
20017476:	1101                	addi	sp,sp,-32
20017478:	ce22                	sw	s0,28(sp)
2001747a:	1000                	addi	s0,sp,32
2001747c:	fea42623          	sw	a0,-20(s0)
20017480:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:953
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short*)epc & METAL_INSN_LENGTH_MASK)
20017484:	fe842783          	lw	a5,-24(s0)
20017488:	0007d783          	lhu	a5,0(a5)
2001748c:	0037f713          	andi	a4,a5,3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954
            == METAL_INSN_NOT_COMPRESSED) ? 4 : 2;
20017490:	478d                	li	a5,3
20017492:	00f71463          	bne	a4,a5,2001749a <__metal_driver_cpu_get_instruction_length+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 1)
20017496:	4791                	li	a5,4
20017498:	a011                	j	2001749c <__metal_driver_cpu_get_instruction_length+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 2)
2001749a:	4789                	li	a5,2
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:955 (discriminator 5)
}
2001749c:	853e                	mv	a0,a5
2001749e:	4472                	lw	s0,28(sp)
200174a0:	6105                	addi	sp,sp,32
200174a2:	8082                	ret

200174a4 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:958

uintptr_t  __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu)
{
200174a4:	7179                	addi	sp,sp,-48
200174a6:	d622                	sw	s0,44(sp)
200174a8:	1800                	addi	s0,sp,48
200174aa:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:960
    uintptr_t mepc;
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
200174ae:	341027f3          	csrr	a5,mepc
200174b2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:961
    return mepc;
200174b6:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:962
}
200174ba:	853e                	mv	a0,a5
200174bc:	5432                	lw	s0,44(sp)
200174be:	6145                	addi	sp,sp,48
200174c0:	8082                	ret

200174c2 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:965

int  __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc)
{
200174c2:	1101                	addi	sp,sp,-32
200174c4:	ce22                	sw	s0,28(sp)
200174c6:	1000                	addi	s0,sp,32
200174c8:	fea42623          	sw	a0,-20(s0)
200174cc:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:966
    __asm__ volatile ("csrw mepc, %0" :: "r"(mepc));
200174d0:	fe842783          	lw	a5,-24(s0)
200174d4:	34179073          	csrw	mepc,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:967
    return 0;
200174d8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:968
}
200174da:	853e                	mv	a0,a5
200174dc:	4472                	lw	s0,28(sp)
200174de:	6105                	addi	sp,sp,32
200174e0:	8082                	ret

200174e2 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:305



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
200174e2:	1101                	addi	sp,sp,-32
200174e4:	ce22                	sw	s0,28(sp)
200174e6:	1000                	addi	s0,sp,32
200174e8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:306
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200174ec:	fec42703          	lw	a4,-20(s0)
200174f0:	800007b7          	lui	a5,0x80000
200174f4:	48878793          	addi	a5,a5,1160 # 80000488 <metal_segment_heap_target_end+0xffffec5c>
200174f8:	00f71563          	bne	a4,a5,20017502 <__metal_driver_sifive_plic0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:307
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
200174fc:	0c0007b7          	lui	a5,0xc000
20017500:	a011                	j	20017504 <__metal_driver_sifive_plic0_control_base+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:310
	}
	else {
		return 0;
20017502:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:312
	}
}
20017504:	853e                	mv	a0,a5
20017506:	4472                	lw	s0,28(sp)
20017508:	6105                	addi	sp,sp,32
2001750a:	8082                	ret

2001750c <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:325
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2001750c:	1101                	addi	sp,sp,-32
2001750e:	ce22                	sw	s0,28(sp)
20017510:	1000                	addi	s0,sp,32
20017512:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:326
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20017516:	fec42703          	lw	a4,-20(s0)
2001751a:	800007b7          	lui	a5,0x80000
2001751e:	48878793          	addi	a5,a5,1160 # 80000488 <metal_segment_heap_target_end+0xffffec5c>
20017522:	00f71563          	bne	a4,a5,2001752c <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:327
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20017526:	03500793          	li	a5,53
2001752a:	a011                	j	2001752e <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:330
	}
	else {
		return 0;
2001752c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:332
	}
}
2001752e:	853e                	mv	a0,a5
20017530:	4472                	lw	s0,28(sp)
20017532:	6105                	addi	sp,sp,32
20017534:	8082                	ret

20017536 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:335

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20017536:	1101                	addi	sp,sp,-32
20017538:	ce22                	sw	s0,28(sp)
2001753a:	1000                	addi	s0,sp,32
2001753c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:336
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20017540:	fec42703          	lw	a4,-20(s0)
20017544:	800007b7          	lui	a5,0x80000
20017548:	48878793          	addi	a5,a5,1160 # 80000488 <metal_segment_heap_target_end+0xffffec5c>
2001754c:	00f71463          	bne	a4,a5,20017554 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:337
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20017550:	479d                	li	a5,7
20017552:	a011                	j	20017556 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:340
	}
	else {
		return 0;
20017554:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:342
	}
}
20017556:	853e                	mv	a0,a5
20017558:	4472                	lw	s0,28(sp)
2001755a:	6105                	addi	sp,sp,32
2001755c:	8082                	ret

2001755e <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:345

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2001755e:	1101                	addi	sp,sp,-32
20017560:	ce22                	sw	s0,28(sp)
20017562:	1000                	addi	s0,sp,32
20017564:	fea42623          	sw	a0,-20(s0)
20017568:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:346
	if (idx == 0) {
2001756c:	fe842783          	lw	a5,-24(s0)
20017570:	e791                	bnez	a5,2001757c <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:347
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20017572:	800007b7          	lui	a5,0x80000
20017576:	0d078793          	addi	a5,a5,208 # 800000d0 <metal_segment_heap_target_end+0xffffe8a4>
2001757a:	a011                	j	2001757e <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:350
	}
	else {
		return NULL;
2001757c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:352
	}
}
2001757e:	853e                	mv	a0,a5
20017580:	4472                	lw	s0,28(sp)
20017582:	6105                	addi	sp,sp,32
20017584:	8082                	ret

20017586 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:355

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20017586:	1101                	addi	sp,sp,-32
20017588:	ce22                	sw	s0,28(sp)
2001758a:	1000                	addi	s0,sp,32
2001758c:	fea42623          	sw	a0,-20(s0)
20017590:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:356
	if (idx == 0) {
20017594:	fe842783          	lw	a5,-24(s0)
20017598:	e399                	bnez	a5,2001759e <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:357
		return 11;
2001759a:	47ad                	li	a5,11
2001759c:	a011                	j	200175a0 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:360
	}
	else {
		return 0;
2001759e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:362
	}
}
200175a0:	853e                	mv	a0,a5
200175a2:	4472                	lw	s0,28(sp)
200175a4:	6105                	addi	sp,sp,32
200175a6:	8082                	ret

200175a8 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:14
#include <metal/shutdown.h>
#include <metal/drivers/riscv_plic0.h>
#include <metal/machine.h>

unsigned int __metal_plic0_claim_interrupt (struct __metal_driver_riscv_plic0 *plic)
{
200175a8:	7179                	addi	sp,sp,-48
200175aa:	d606                	sw	ra,44(sp)
200175ac:	d422                	sw	s0,40(sp)
200175ae:	1800                	addi	s0,sp,48
200175b0:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:15
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
200175b4:	fdc42503          	lw	a0,-36(s0)
200175b8:	372d                	jal	200174e2 <__metal_driver_sifive_plic0_control_base>
200175ba:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:16
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200175be:	fec42703          	lw	a4,-20(s0)
200175c2:	002007b7          	lui	a5,0x200
200175c6:	0791                	addi	a5,a5,4
200175c8:	97ba                	add	a5,a5,a4
200175ca:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
					      METAL_RISCV_PLIC0_CLAIM));
}
200175cc:	853e                	mv	a0,a5
200175ce:	50b2                	lw	ra,44(sp)
200175d0:	5422                	lw	s0,40(sp)
200175d2:	6145                	addi	sp,sp,48
200175d4:	8082                	ret

200175d6 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:22

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
				    unsigned int id)
{
200175d6:	7179                	addi	sp,sp,-48
200175d8:	d606                	sw	ra,44(sp)
200175da:	d422                	sw	s0,40(sp)
200175dc:	1800                	addi	s0,sp,48
200175de:	fca42e23          	sw	a0,-36(s0)
200175e2:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:23
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
200175e6:	fdc42503          	lw	a0,-36(s0)
200175ea:	3de5                	jal	200174e2 <__metal_driver_sifive_plic0_control_base>
200175ec:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:24
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200175f0:	fec42703          	lw	a4,-20(s0)
200175f4:	002007b7          	lui	a5,0x200
200175f8:	0791                	addi	a5,a5,4
200175fa:	97ba                	add	a5,a5,a4
200175fc:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
				       METAL_RISCV_PLIC0_CLAIM)) = id;
200175fe:	fd842783          	lw	a5,-40(s0)
20017602:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:26
}
20017604:	0001                	nop
20017606:	50b2                	lw	ra,44(sp)
20017608:	5422                	lw	s0,40(sp)
2001760a:	6145                	addi	sp,sp,48
2001760c:	8082                	ret

2001760e <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29

int __metal_plic0_set_threshold(struct metal_interrupt *controller, unsigned int threshold)
{
2001760e:	7179                	addi	sp,sp,-48
20017610:	d606                	sw	ra,44(sp)
20017612:	d422                	sw	s0,40(sp)
20017614:	1800                	addi	s0,sp,48
20017616:	fca42e23          	sw	a0,-36(s0)
2001761a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:30
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
2001761e:	fdc42503          	lw	a0,-36(s0)
20017622:	35c1                	jal	200174e2 <__metal_driver_sifive_plic0_control_base>
20017624:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20017628:	fec42703          	lw	a4,-20(s0)
2001762c:	002007b7          	lui	a5,0x200
20017630:	97ba                	add	a5,a5,a4
20017632:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:32
				       METAL_RISCV_PLIC0_THRESHOLD)) = threshold;
20017634:	fd842783          	lw	a5,-40(s0)
20017638:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:33
    return 0;
2001763a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
}
2001763c:	853e                	mv	a0,a5
2001763e:	50b2                	lw	ra,44(sp)
20017640:	5422                	lw	s0,40(sp)
20017642:	6145                	addi	sp,sp,48
20017644:	8082                	ret

20017646 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:37

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller)
{
20017646:	7179                	addi	sp,sp,-48
20017648:	d606                	sw	ra,44(sp)
2001764a:	d422                	sw	s0,40(sp)
2001764c:	1800                	addi	s0,sp,48
2001764e:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
20017652:	fdc42503          	lw	a0,-36(s0)
20017656:	3571                	jal	200174e2 <__metal_driver_sifive_plic0_control_base>
20017658:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001765c:	fec42703          	lw	a4,-20(s0)
20017660:	002007b7          	lui	a5,0x200
20017664:	97ba                	add	a5,a5,a4
20017666:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:42
				       METAL_RISCV_PLIC0_THRESHOLD));
}
20017668:	853e                	mv	a0,a5
2001766a:	50b2                	lw	ra,44(sp)
2001766c:	5422                	lw	s0,40(sp)
2001766e:	6145                	addi	sp,sp,48
20017670:	8082                	ret

20017672 <__metal_plic0_set_priority>:
__metal_plic0_set_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45

int __metal_plic0_set_priority(struct metal_interrupt *controller, int id, unsigned int priority)
{
20017672:	7179                	addi	sp,sp,-48
20017674:	d606                	sw	ra,44(sp)
20017676:	d422                	sw	s0,40(sp)
20017678:	1800                	addi	s0,sp,48
2001767a:	fca42e23          	sw	a0,-36(s0)
2001767e:	fcb42c23          	sw	a1,-40(s0)
20017682:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)controller);
20017686:	fdc42503          	lw	a0,-36(s0)
2001768a:	3da1                	jal	200174e2 <__metal_driver_sifive_plic0_control_base>
2001768c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:47
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority((struct metal_interrupt *)controller);
20017690:	fdc42503          	lw	a0,-36(s0)
20017694:	354d                	jal	20017536 <__metal_driver_sifive_plic0_max_priority>
20017696:	87aa                	mv	a5,a0
20017698:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48
    if ( (max_priority) && (priority < max_priority) ) {
2001769c:	fe842783          	lw	a5,-24(s0)
200176a0:	c785                	beqz	a5,200176c8 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:48 (discriminator 1)
200176a2:	fd442703          	lw	a4,-44(s0)
200176a6:	fe842783          	lw	a5,-24(s0)
200176aa:	00f77f63          	bgeu	a4,a5,200176c8 <__metal_plic0_set_priority+0x56>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49
        __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200176ae:	fd842783          	lw	a5,-40(s0)
200176b2:	078a                	slli	a5,a5,0x2
200176b4:	873e                	mv	a4,a5
200176b6:	fec42783          	lw	a5,-20(s0)
200176ba:	97ba                	add	a5,a5,a4
200176bc:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) = priority;
200176be:	fd442783          	lw	a5,-44(s0)
200176c2:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
        return 0;
200176c4:	4781                	li	a5,0
200176c6:	a011                	j	200176ca <__metal_plic0_set_priority+0x58>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:54
    }
    return -1;
200176c8:	57fd                	li	a5,-1
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:55
}
200176ca:	853e                	mv	a0,a5
200176cc:	50b2                	lw	ra,44(sp)
200176ce:	5422                	lw	s0,40(sp)
200176d0:	6145                	addi	sp,sp,48
200176d2:	8082                	ret

200176d4 <__metal_plic0_get_priority>:
__metal_plic0_get_priority():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:58

unsigned int __metal_plic0_get_priority(struct metal_interrupt *controller, int id)
{
200176d4:	7179                	addi	sp,sp,-48
200176d6:	d606                	sw	ra,44(sp)
200176d8:	d422                	sw	s0,40(sp)
200176da:	1800                	addi	s0,sp,48
200176dc:	fca42e23          	sw	a0,-36(s0)
200176e0:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
200176e4:	fdc42503          	lw	a0,-36(s0)
200176e8:	3bed                	jal	200174e2 <__metal_driver_sifive_plic0_control_base>
200176ea:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:61

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200176ee:	fd842783          	lw	a5,-40(s0)
200176f2:	078a                	slli	a5,a5,0x2
200176f4:	873e                	mv	a4,a5
200176f6:	fec42783          	lw	a5,-20(s0)
200176fa:	97ba                	add	a5,a5,a4
200176fc:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
200176fe:	853e                	mv	a0,a5
20017700:	50b2                	lw	ra,44(sp)
20017702:	5422                	lw	s0,40(sp)
20017704:	6145                	addi	sp,sp,48
20017706:	8082                	ret

20017708 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67

void __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic, int id, int enable)
{
20017708:	7179                	addi	sp,sp,-48
2001770a:	d606                	sw	ra,44(sp)
2001770c:	d422                	sw	s0,40(sp)
2001770e:	1800                	addi	s0,sp,48
20017710:	fca42e23          	sw	a0,-36(s0)
20017714:	fcb42c23          	sw	a1,-40(s0)
20017718:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
2001771c:	fdc42503          	lw	a0,-36(s0)
20017720:	33c9                	jal	200174e2 <__metal_driver_sifive_plic0_control_base>
20017722:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71

    current = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20017726:	fd842783          	lw	a5,-40(s0)
2001772a:	8795                	srai	a5,a5,0x5
2001772c:	078a                	slli	a5,a5,0x2
2001772e:	873e                	mv	a4,a5
20017730:	fec42783          	lw	a5,-20(s0)
20017734:	973e                	add	a4,a4,a5
20017736:	6789                	lui	a5,0x2
20017738:	97ba                	add	a5,a5,a4
2001773a:	439c                	lw	a5,0(a5)
2001773c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
						(id >> METAL_PLIC_SOURCE_SHIFT) * 4));
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
					METAL_RISCV_PLIC0_ENABLE_BASE +
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20017740:	fd442783          	lw	a5,-44(s0)
20017744:	cf81                	beqz	a5,2001775c <__metal_plic0_enable+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:77 (discriminator 1)
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20017746:	fd842783          	lw	a5,-40(s0)
2001774a:	8bfd                	andi	a5,a5,31
2001774c:	4705                	li	a4,1
2001774e:	00f717b3          	sll	a5,a4,a5
20017752:	873e                	mv	a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 1)
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20017754:	fe842783          	lw	a5,-24(s0)
20017758:	8fd9                	or	a5,a5,a4
2001775a:	a829                	j	20017774 <__metal_plic0_enable+0x6c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 2)
2001775c:	fd842783          	lw	a5,-40(s0)
20017760:	8bfd                	andi	a5,a5,31
20017762:	4705                	li	a4,1
20017764:	00f717b3          	sll	a5,a4,a5
20017768:	fff7c793          	not	a5,a5
2001776c:	873e                	mv	a4,a5
2001776e:	fe842783          	lw	a5,-24(s0)
20017772:	8ff9                	and	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:74
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20017774:	fd842703          	lw	a4,-40(s0)
20017778:	8715                	srai	a4,a4,0x5
2001777a:	070a                	slli	a4,a4,0x2
2001777c:	86ba                	mv	a3,a4
2001777e:	fec42703          	lw	a4,-20(s0)
20017782:	96ba                	add	a3,a3,a4
20017784:	6709                	lui	a4,0x2
20017786:	9736                	add	a4,a4,a3
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20017788:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:79
}
2001778a:	0001                	nop
2001778c:	50b2                	lw	ra,44(sp)
2001778e:	5422                	lw	s0,40(sp)
20017790:	6145                	addi	sp,sp,48
20017792:	8082                	ret

20017794 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:81

void __metal_plic0_default_handler (int id, void *priv) {
20017794:	1101                	addi	sp,sp,-32
20017796:	ce06                	sw	ra,28(sp)
20017798:	cc22                	sw	s0,24(sp)
2001779a:	1000                	addi	s0,sp,32
2001779c:	fea42623          	sw	a0,-20(s0)
200177a0:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:82
    metal_shutdown(300);
200177a4:	12c00513          	li	a0,300
200177a8:	5e5010ef          	jal	ra,2001958c <metal_shutdown>

200177ac <__metal_plic0_handler>:
__metal_plic0_handler():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86
}

void __metal_plic0_handler (int id, void *priv)
{
200177ac:	7179                	addi	sp,sp,-48
200177ae:	d606                	sw	ra,44(sp)
200177b0:	d422                	sw	s0,40(sp)
200177b2:	1800                	addi	s0,sp,48
200177b4:	fca42e23          	sw	a0,-36(s0)
200177b8:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:87
    struct __metal_driver_riscv_plic0 *plic = priv;
200177bc:	fd842783          	lw	a5,-40(s0)
200177c0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int idx = __metal_plic0_claim_interrupt(plic);
200177c4:	fec42503          	lw	a0,-20(s0)
200177c8:	33c5                	jal	200175a8 <__metal_plic0_claim_interrupt>
200177ca:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:89
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts((struct metal_interrupt *)plic);
200177ce:	fec42503          	lw	a0,-20(s0)
200177d2:	3b2d                	jal	2001750c <__metal_driver_sifive_plic0_num_interrupts>
200177d4:	87aa                	mv	a5,a0
200177d6:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91

    if ( (idx < num_interrupts) && (plic->metal_exint_table[idx]) ) {
200177da:	fe842703          	lw	a4,-24(s0)
200177de:	fe442783          	lw	a5,-28(s0)
200177e2:	04f77263          	bgeu	a4,a5,20017826 <__metal_plic0_handler+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91 (discriminator 1)
200177e6:	fec42703          	lw	a4,-20(s0)
200177ea:	fe842783          	lw	a5,-24(s0)
200177ee:	078a                	slli	a5,a5,0x2
200177f0:	97ba                	add	a5,a5,a4
200177f2:	479c                	lw	a5,8(a5)
200177f4:	cb8d                	beqz	a5,20017826 <__metal_plic0_handler+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:92
	plic->metal_exint_table[idx](idx,
200177f6:	fec42703          	lw	a4,-20(s0)
200177fa:	fe842783          	lw	a5,-24(s0)
200177fe:	078a                	slli	a5,a5,0x2
20017800:	97ba                	add	a5,a5,a4
20017802:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20017806:	fe842603          	lw	a2,-24(s0)
2001780a:	fec42683          	lw	a3,-20(s0)
2001780e:	fe842703          	lw	a4,-24(s0)
20017812:	87ba                	mv	a5,a4
20017814:	0786                	slli	a5,a5,0x1
20017816:	97ba                	add	a5,a5,a4
20017818:	078e                	slli	a5,a5,0x3
2001781a:	97b6                	add	a5,a5,a3
2001781c:	0f07a783          	lw	a5,240(a5)
20017820:	85be                	mv	a1,a5
20017822:	8532                	mv	a0,a2
20017824:	9802                	jalr	a6
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:96
				  plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, idx);
20017826:	fe842583          	lw	a1,-24(s0)
2001782a:	fec42503          	lw	a0,-20(s0)
2001782e:	3365                	jal	200175d6 <__metal_plic0_complete_interrupt>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:97
}
20017830:	0001                	nop
20017832:	50b2                	lw	ra,44(sp)
20017834:	5422                	lw	s0,40(sp)
20017836:	6145                	addi	sp,sp,48
20017838:	8082                	ret

2001783a <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100

void __metal_driver_riscv_plic0_init (struct metal_interrupt *controller)
{
2001783a:	7139                	addi	sp,sp,-64
2001783c:	de06                	sw	ra,60(sp)
2001783e:	dc22                	sw	s0,56(sp)
20017840:	0080                	addi	s0,sp,64
20017842:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:101
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20017846:	fcc42783          	lw	a5,-52(s0)
2001784a:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103

    if ( !plic->init_done ) {
2001784e:	fe442783          	lw	a5,-28(s0)
20017852:	43dc                	lw	a5,4(a5)
20017854:	12079063          	bnez	a5,20017974 <__metal_driver_riscv_plic0_init+0x13a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107
        int num_interrupts, line;
        struct metal_interrupt *intc;

	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20017858:	fe042623          	sw	zero,-20(s0)
2001785c:	a221                	j	20017964 <__metal_driver_riscv_plic0_init+0x12a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
	    num_interrupts = __metal_driver_sifive_plic0_num_interrupts(controller);
2001785e:	fcc42503          	lw	a0,-52(s0)
20017862:	cabff0ef          	jal	ra,2001750c <__metal_driver_sifive_plic0_num_interrupts>
20017866:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:109
	    intc = __metal_driver_sifive_plic0_interrupt_parents(controller, parent);
2001786a:	fec42583          	lw	a1,-20(s0)
2001786e:	fcc42503          	lw	a0,-52(s0)
20017872:	cedff0ef          	jal	ra,2001755e <__metal_driver_sifive_plic0_interrupt_parents>
20017876:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
	    line = __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
2001787a:	fec42583          	lw	a1,-20(s0)
2001787e:	fcc42503          	lw	a0,-52(s0)
20017882:	d05ff0ef          	jal	ra,20017586 <__metal_driver_sifive_plic0_interrupt_lines>
20017886:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:113

	    /* Initialize ist parent controller, aka cpu_intc. */
	    intc->vtable->interrupt_init(intc);
2001788a:	fdc42783          	lw	a5,-36(s0)
2001788e:	439c                	lw	a5,0(a5)
20017890:	439c                	lw	a5,0(a5)
20017892:	fdc42503          	lw	a0,-36(s0)
20017896:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115

	    for (int i = 0; i < num_interrupts; i++) {
20017898:	fe042423          	sw	zero,-24(s0)
2001789c:	a085                	j	200178fc <__metal_driver_riscv_plic0_init+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116 (discriminator 3)
		__metal_plic0_enable(plic, i, METAL_DISABLE);
2001789e:	4601                	li	a2,0
200178a0:	fe842583          	lw	a1,-24(s0)
200178a4:	fe442503          	lw	a0,-28(s0)
200178a8:	3585                	jal	20017708 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:117 (discriminator 3)
		__metal_plic0_set_priority(controller, i, 0);
200178aa:	4601                	li	a2,0
200178ac:	fe842583          	lw	a1,-24(s0)
200178b0:	fcc42503          	lw	a0,-52(s0)
200178b4:	3b7d                	jal	20017672 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:118 (discriminator 3)
		plic->metal_exint_table[i] = NULL;
200178b6:	fe442703          	lw	a4,-28(s0)
200178ba:	fe842783          	lw	a5,-24(s0)
200178be:	078a                	slli	a5,a5,0x2
200178c0:	97ba                	add	a5,a5,a4
200178c2:	0007a423          	sw	zero,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:119 (discriminator 3)
		plic->metal_exdata_table[i].sub_int = NULL;
200178c6:	fe442683          	lw	a3,-28(s0)
200178ca:	fe842703          	lw	a4,-24(s0)
200178ce:	87ba                	mv	a5,a4
200178d0:	0786                	slli	a5,a5,0x1
200178d2:	97ba                	add	a5,a5,a4
200178d4:	078e                	slli	a5,a5,0x3
200178d6:	97b6                	add	a5,a5,a3
200178d8:	0e07a623          	sw	zero,236(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120 (discriminator 3)
		plic->metal_exdata_table[i].exint_data = NULL;
200178dc:	fe442683          	lw	a3,-28(s0)
200178e0:	fe842703          	lw	a4,-24(s0)
200178e4:	87ba                	mv	a5,a4
200178e6:	0786                	slli	a5,a5,0x1
200178e8:	97ba                	add	a5,a5,a4
200178ea:	078e                	slli	a5,a5,0x3
200178ec:	97b6                	add	a5,a5,a3
200178ee:	0e07a823          	sw	zero,240(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 3)
	    for (int i = 0; i < num_interrupts; i++) {
200178f2:	fe842783          	lw	a5,-24(s0)
200178f6:	0785                	addi	a5,a5,1
200178f8:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
200178fc:	fe842703          	lw	a4,-24(s0)
20017900:	fe042783          	lw	a5,-32(s0)
20017904:	f8f74de3          	blt	a4,a5,2001789e <__metal_driver_riscv_plic0_init+0x64>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123 (discriminator 2)
	    }

	    __metal_plic0_set_threshold(controller, 0);
20017908:	4581                	li	a1,0
2001790a:	fcc42503          	lw	a0,-52(s0)
2001790e:	d01ff0ef          	jal	ra,2001760e <__metal_plic0_set_threshold>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126 (discriminator 2)

	    /* Register plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_register(intc, line, NULL, plic);
20017912:	fdc42783          	lw	a5,-36(s0)
20017916:	439c                	lw	a5,0(a5)
20017918:	4fdc                	lw	a5,28(a5)
2001791a:	fe442683          	lw	a3,-28(s0)
2001791e:	4601                	li	a2,0
20017920:	fd842583          	lw	a1,-40(s0)
20017924:	fdc42503          	lw	a0,-36(s0)
20017928:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:128 (discriminator 2)
	    /* Register plic handler for dispatching its device interrupts */
	    intc->vtable->interrupt_register(intc, line, __metal_plic0_handler, plic);
2001792a:	fdc42783          	lw	a5,-36(s0)
2001792e:	439c                	lw	a5,0(a5)
20017930:	4fd8                	lw	a4,28(a5)
20017932:	fe442683          	lw	a3,-28(s0)
20017936:	200177b7          	lui	a5,0x20017
2001793a:	7ac78613          	addi	a2,a5,1964 # 200177ac <__metal_plic0_handler>
2001793e:	fd842583          	lw	a1,-40(s0)
20017942:	fdc42503          	lw	a0,-36(s0)
20017946:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
	    /* Enable plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_enable(intc, line);
20017948:	fdc42783          	lw	a5,-36(s0)
2001794c:	439c                	lw	a5,0(a5)
2001794e:	53dc                	lw	a5,36(a5)
20017950:	fd842583          	lw	a1,-40(s0)
20017954:	fdc42503          	lw	a0,-36(s0)
20017958:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 2)
	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2001795a:	fec42783          	lw	a5,-20(s0)
2001795e:	0785                	addi	a5,a5,1
20017960:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 1)
20017964:	fec42783          	lw	a5,-20(s0)
20017968:	eef05be3          	blez	a5,2001785e <__metal_driver_riscv_plic0_init+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
	}
        plic->init_done = 1;
2001796c:	fe442783          	lw	a5,-28(s0)
20017970:	4705                	li	a4,1
20017972:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:134
    }
}
20017974:	0001                	nop
20017976:	50f2                	lw	ra,60(sp)
20017978:	5462                	lw	s0,56(sp)
2001797a:	6121                	addi	sp,sp,64
2001797c:	8082                	ret

2001797e <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

int __metal_driver_riscv_plic0_register (struct metal_interrupt *controller,
			               int id, metal_interrupt_handler_t isr,
			               void *priv)
{
2001797e:	7179                	addi	sp,sp,-48
20017980:	d606                	sw	ra,44(sp)
20017982:	d422                	sw	s0,40(sp)
20017984:	1800                	addi	s0,sp,48
20017986:	fca42e23          	sw	a0,-36(s0)
2001798a:	fcb42c23          	sw	a1,-40(s0)
2001798e:	fcc42a23          	sw	a2,-44(s0)
20017992:	fcd42823          	sw	a3,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:140
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20017996:	fdc42783          	lw	a5,-36(s0)
2001799a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2001799e:	fdc42503          	lw	a0,-36(s0)
200179a2:	b6bff0ef          	jal	ra,2001750c <__metal_driver_sifive_plic0_num_interrupts>
200179a6:	872a                	mv	a4,a0
200179a8:	fd842783          	lw	a5,-40(s0)
200179ac:	00e7c463          	blt	a5,a4,200179b4 <__metal_driver_riscv_plic0_register+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
        return -1;
200179b0:	57fd                	li	a5,-1
200179b2:	a051                	j	20017a36 <__metal_driver_riscv_plic0_register+0xb8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
    }
 
    if (isr) {
200179b4:	fd442783          	lw	a5,-44(s0)
200179b8:	cf9d                	beqz	a5,200179f6 <__metal_driver_riscv_plic0_register+0x78>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
        __metal_plic0_set_priority(controller, id, 2);
200179ba:	4609                	li	a2,2
200179bc:	fd842583          	lw	a1,-40(s0)
200179c0:	fdc42503          	lw	a0,-36(s0)
200179c4:	cafff0ef          	jal	ra,20017672 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:148
	plic->metal_exint_table[id] = isr;
200179c8:	fec42703          	lw	a4,-20(s0)
200179cc:	fd842783          	lw	a5,-40(s0)
200179d0:	078a                	slli	a5,a5,0x2
200179d2:	97ba                	add	a5,a5,a4
200179d4:	fd442703          	lw	a4,-44(s0)
200179d8:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:149
	plic->metal_exdata_table[id].exint_data = priv;
200179da:	fec42683          	lw	a3,-20(s0)
200179de:	fd842703          	lw	a4,-40(s0)
200179e2:	87ba                	mv	a5,a4
200179e4:	0786                	slli	a5,a5,0x1
200179e6:	97ba                	add	a5,a5,a4
200179e8:	078e                	slli	a5,a5,0x3
200179ea:	97b6                	add	a5,a5,a3
200179ec:	fd042703          	lw	a4,-48(s0)
200179f0:	0ee7a823          	sw	a4,240(a5)
200179f4:	a081                	j	20017a34 <__metal_driver_riscv_plic0_register+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151
    } else {
        __metal_plic0_set_priority(controller, id, 1);
200179f6:	4605                	li	a2,1
200179f8:	fd842583          	lw	a1,-40(s0)
200179fc:	fdc42503          	lw	a0,-36(s0)
20017a00:	c73ff0ef          	jal	ra,20017672 <__metal_plic0_set_priority>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:152
	plic->metal_exint_table[id] = __metal_plic0_default_handler;
20017a04:	fec42703          	lw	a4,-20(s0)
20017a08:	fd842783          	lw	a5,-40(s0)
20017a0c:	078a                	slli	a5,a5,0x2
20017a0e:	97ba                	add	a5,a5,a4
20017a10:	20017737          	lui	a4,0x20017
20017a14:	79470713          	addi	a4,a4,1940 # 20017794 <__metal_plic0_default_handler>
20017a18:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:153
	plic->metal_exdata_table[id].sub_int = priv;
20017a1a:	fec42683          	lw	a3,-20(s0)
20017a1e:	fd842703          	lw	a4,-40(s0)
20017a22:	87ba                	mv	a5,a4
20017a24:	0786                	slli	a5,a5,0x1
20017a26:	97ba                	add	a5,a5,a4
20017a28:	078e                	slli	a5,a5,0x3
20017a2a:	97b6                	add	a5,a5,a3
20017a2c:	fd042703          	lw	a4,-48(s0)
20017a30:	0ee7a623          	sw	a4,236(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156
    }

    return 0;
20017a34:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:157
}
20017a36:	853e                	mv	a0,a5
20017a38:	50b2                	lw	ra,44(sp)
20017a3a:	5422                	lw	s0,40(sp)
20017a3c:	6145                	addi	sp,sp,48
20017a3e:	8082                	ret

20017a40 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:160

int __metal_driver_riscv_plic0_enable (struct metal_interrupt *controller, int id)
{
20017a40:	7179                	addi	sp,sp,-48
20017a42:	d606                	sw	ra,44(sp)
20017a44:	d422                	sw	s0,40(sp)
20017a46:	1800                	addi	s0,sp,48
20017a48:	fca42e23          	sw	a0,-36(s0)
20017a4c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20017a50:	fdc42783          	lw	a5,-36(s0)
20017a54:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20017a58:	fdc42503          	lw	a0,-36(s0)
20017a5c:	ab1ff0ef          	jal	ra,2001750c <__metal_driver_sifive_plic0_num_interrupts>
20017a60:	872a                	mv	a4,a0
20017a62:	fd842783          	lw	a5,-40(s0)
20017a66:	00e7c463          	blt	a5,a4,20017a6e <__metal_driver_riscv_plic0_enable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:164
        return -1;
20017a6a:	57fd                	li	a5,-1
20017a6c:	a809                	j	20017a7e <__metal_driver_riscv_plic0_enable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167
    }

    __metal_plic0_enable(plic, id, METAL_ENABLE);
20017a6e:	4605                	li	a2,1
20017a70:	fd842583          	lw	a1,-40(s0)
20017a74:	fec42503          	lw	a0,-20(s0)
20017a78:	c91ff0ef          	jal	ra,20017708 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    return 0;
20017a7c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:169
}
20017a7e:	853e                	mv	a0,a5
20017a80:	50b2                	lw	ra,44(sp)
20017a82:	5422                	lw	s0,40(sp)
20017a84:	6145                	addi	sp,sp,48
20017a86:	8082                	ret

20017a88 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:172

int __metal_driver_riscv_plic0_disable (struct metal_interrupt *controller, int id)
{
20017a88:	7179                	addi	sp,sp,-48
20017a8a:	d606                	sw	ra,44(sp)
20017a8c:	d422                	sw	s0,40(sp)
20017a8e:	1800                	addi	s0,sp,48
20017a90:	fca42e23          	sw	a0,-36(s0)
20017a94:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:173
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20017a98:	fdc42783          	lw	a5,-36(s0)
20017a9c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20017aa0:	fdc42503          	lw	a0,-36(s0)
20017aa4:	a69ff0ef          	jal	ra,2001750c <__metal_driver_sifive_plic0_num_interrupts>
20017aa8:	872a                	mv	a4,a0
20017aaa:	fd842783          	lw	a5,-40(s0)
20017aae:	00e7c463          	blt	a5,a4,20017ab6 <__metal_driver_riscv_plic0_disable+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        return -1;
20017ab2:	57fd                	li	a5,-1
20017ab4:	a809                	j	20017ac6 <__metal_driver_riscv_plic0_disable+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:178
    }
    __metal_plic0_enable(plic, id, METAL_DISABLE);
20017ab6:	4601                	li	a2,0
20017ab8:	fd842583          	lw	a1,-40(s0)
20017abc:	fec42503          	lw	a0,-20(s0)
20017ac0:	c49ff0ef          	jal	ra,20017708 <__metal_plic0_enable>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    return 0;
20017ac4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
}
20017ac6:	853e                	mv	a0,a5
20017ac8:	50b2                	lw	ra,44(sp)
20017aca:	5422                	lw	s0,40(sp)
20017acc:	6145                	addi	sp,sp,48
20017ace:	8082                	ret

20017ad0 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:911



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20017ad0:	1101                	addi	sp,sp,-32
20017ad2:	ce22                	sw	s0,28(sp)
20017ad4:	1000                	addi	s0,sp,32
20017ad6:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:912
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20017ada:	800007b7          	lui	a5,0x80000
20017ade:	0ac78793          	addi	a5,a5,172 # 800000ac <metal_segment_heap_target_end+0xffffe880>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:913
}
20017ae2:	853e                	mv	a0,a5
20017ae4:	4472                	lw	s0,28(sp)
20017ae6:	6105                	addi	sp,sp,32
20017ae8:	8082                	ret

20017aea <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:916

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20017aea:	1101                	addi	sp,sp,-32
20017aec:	ce22                	sw	s0,28(sp)
20017aee:	1000                	addi	s0,sp,32
20017af0:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:917
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20017af4:	81c18793          	addi	a5,gp,-2020 # 80000ae4 <__metal_dt_prci_10008000>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:918
}
20017af8:	853e                	mv	a0,a5
20017afa:	4472                	lw	s0,28(sp)
20017afc:	6105                	addi	sp,sp,32
20017afe:	8082                	ret

20017b00 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:926
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20017b00:	1101                	addi	sp,sp,-32
20017b02:	ce22                	sw	s0,28(sp)
20017b04:	1000                	addi	s0,sp,32
20017b06:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:927
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20017b0a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:928
}
20017b0c:	853e                	mv	a0,a5
20017b0e:	4472                	lw	s0,28(sp)
20017b10:	6105                	addi	sp,sp,32
20017b12:	8082                	ret

20017b14 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1043
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20017b14:	1141                	addi	sp,sp,-16
20017b16:	c622                	sw	s0,12(sp)
20017b18:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1044
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20017b1a:	83018793          	addi	a5,gp,-2000 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1045
}
20017b1e:	853e                	mv	a0,a5
20017b20:	4432                	lw	s0,12(sp)
20017b22:	0141                	addi	sp,sp,16
20017b24:	8082                	ret

20017b26 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM    0x001F0000UL
#define CONFIG_ENABLE  0x40000000UL
#define CONFIG_READY   0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(const struct metal_clock *clock)
{
20017b26:	7139                	addi	sp,sp,-64
20017b28:	de06                	sw	ra,60(sp)
20017b2a:	dc22                	sw	s0,56(sp)
20017b2c:	0080                	addi	s0,sp,64
20017b2e:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:18
    struct metal_clock *ref = __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20017b32:	fcc42503          	lw	a0,-52(s0)
20017b36:	3f69                	jal	20017ad0 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20017b38:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    long config_offset = __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20017b3c:	fcc42503          	lw	a0,-52(s0)
20017b40:	37c1                	jal	20017b00 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20017b42:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20017b46:	fcc42503          	lw	a0,-52(s0)
20017b4a:	3745                	jal	20017aea <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20017b4c:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20017b50:	37d1                	jal	20017b14 <__metal_driver_sifive_fe310_g000_prci_vtable>
20017b52:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20017b56:	fe042783          	lw	a5,-32(s0)
20017b5a:	439c                	lw	a5,0(a5)
20017b5c:	fe842583          	lw	a1,-24(s0)
20017b60:	fe442503          	lw	a0,-28(s0)
20017b64:	9782                	jalr	a5
20017b66:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20017b6a:	fdc42703          	lw	a4,-36(s0)
20017b6e:	400007b7          	lui	a5,0x40000
20017b72:	8ff9                	and	a5,a5,a4
20017b74:	e399                	bnez	a5,20017b7a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:27
        return -1;
20017b76:	57fd                	li	a5,-1
20017b78:	a025                	j	20017ba0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20017b7a:	fdc42783          	lw	a5,-36(s0)
20017b7e:	0007c463          	bltz	a5,20017b86 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20017b82:	57fd                	li	a5,-1
20017b84:	a831                	j	20017ba0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20017b86:	fec42503          	lw	a0,-20(s0)
20017b8a:	0bf010ef          	jal	ra,20019448 <metal_clock_get_rate_hz>
20017b8e:	87aa                	mv	a5,a0
20017b90:	873e                	mv	a4,a5
20017b92:	fdc42783          	lw	a5,-36(s0)
20017b96:	03f7f793          	andi	a5,a5,63
20017b9a:	0785                	addi	a5,a5,1
20017b9c:	02f757b3          	divu	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
}
20017ba0:	853e                	mv	a0,a5
20017ba2:	50f2                	lw	ra,60(sp)
20017ba4:	5462                	lw	s0,56(sp)
20017ba6:	6121                	addi	sp,sp,64
20017ba8:	8082                	ret

20017baa <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:34

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(struct metal_clock *clock, long rate)
{
20017baa:	1101                	addi	sp,sp,-32
20017bac:	ce06                	sw	ra,28(sp)
20017bae:	cc22                	sw	s0,24(sp)
20017bb0:	1000                	addi	s0,sp,32
20017bb2:	fea42623          	sw	a0,-20(s0)
20017bb6:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:35
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20017bba:	fec42503          	lw	a0,-20(s0)
20017bbe:	37a5                	jal	20017b26 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20017bc0:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36
}
20017bc2:	853e                	mv	a0,a5
20017bc4:	40f2                	lw	ra,28(sp)
20017bc6:	4462                	lw	s0,24(sp)
20017bc8:	6105                	addi	sp,sp,32
20017bca:	8082                	ret

20017bcc <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:934
{
20017bcc:	1101                	addi	sp,sp,-32
20017bce:	ce22                	sw	s0,28(sp)
20017bd0:	1000                	addi	s0,sp,32
20017bd2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:935
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20017bd6:	800007b7          	lui	a5,0x80000
20017bda:	0a078793          	addi	a5,a5,160 # 800000a0 <metal_segment_heap_target_end+0xffffe874>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:936
}
20017bde:	853e                	mv	a0,a5
20017be0:	4472                	lw	s0,28(sp)
20017be2:	6105                	addi	sp,sp,32
20017be4:	8082                	ret

20017be6 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:939
{
20017be6:	1101                	addi	sp,sp,-32
20017be8:	ce22                	sw	s0,28(sp)
20017bea:	1000                	addi	s0,sp,32
20017bec:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:940
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20017bf0:	81c18793          	addi	a5,gp,-2020 # 80000ae4 <__metal_dt_prci_10008000>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:941
}
20017bf4:	853e                	mv	a0,a5
20017bf6:	4472                	lw	s0,28(sp)
20017bf8:	6105                	addi	sp,sp,32
20017bfa:	8082                	ret

20017bfc <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:944
{
20017bfc:	1101                	addi	sp,sp,-32
20017bfe:	ce22                	sw	s0,28(sp)
20017c00:	1000                	addi	s0,sp,32
20017c02:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:945
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20017c06:	4791                	li	a5,4
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:946
}
20017c08:	853e                	mv	a0,a5
20017c0a:	4472                	lw	s0,28(sp)
20017c0c:	6105                	addi	sp,sp,32
20017c0e:	8082                	ret

20017c10 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1043
{
20017c10:	1141                	addi	sp,sp,-16
20017c12:	c622                	sw	s0,12(sp)
20017c14:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1044
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20017c16:	83018793          	addi	a5,gp,-2000 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1045
}
20017c1a:	853e                	mv	a0,a5
20017c1c:	4432                	lw	s0,12(sp)
20017c1e:	0141                	addi	sp,sp,16
20017c20:	8082                	ret

20017c22 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE  0x40000000UL
#define CONFIG_READY   0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(const struct metal_clock *clock)
{
20017c22:	7139                	addi	sp,sp,-64
20017c24:	de06                	sw	ra,60(sp)
20017c26:	dc22                	sw	s0,56(sp)
20017c28:	0080                	addi	s0,sp,64
20017c2a:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:16
    struct metal_clock *ref = __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20017c2e:	fcc42503          	lw	a0,-52(s0)
20017c32:	3f69                	jal	20017bcc <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20017c34:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    long config_offset = __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20017c38:	fcc42503          	lw	a0,-52(s0)
20017c3c:	37c1                	jal	20017bfc <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20017c3e:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20017c42:	fcc42503          	lw	a0,-52(s0)
20017c46:	3745                	jal	20017be6 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20017c48:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20017c4c:	37d1                	jal	20017c10 <__metal_driver_sifive_fe310_g000_prci_vtable>
20017c4e:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:22
    long cfg = vtable->get_reg(config_base, config_offset);
20017c52:	fe042783          	lw	a5,-32(s0)
20017c56:	439c                	lw	a5,0(a5)
20017c58:	fe842583          	lw	a1,-24(s0)
20017c5c:	fe442503          	lw	a0,-28(s0)
20017c60:	9782                	jalr	a5
20017c62:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24

    if ((cfg & CONFIG_ENABLE) == 0)
20017c66:	fdc42703          	lw	a4,-36(s0)
20017c6a:	400007b7          	lui	a5,0x40000
20017c6e:	8ff9                	and	a5,a5,a4
20017c70:	e399                	bnez	a5,20017c76 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:25
        return -1;
20017c72:	57fd                	li	a5,-1
20017c74:	a821                	j	20017c8c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26
    if ((cfg & CONFIG_READY) == 0)
20017c76:	fdc42783          	lw	a5,-36(s0)
20017c7a:	0007c463          	bltz	a5,20017c82 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20017c7e:	57fd                	li	a5,-1
20017c80:	a031                	j	20017c8c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    return metal_clock_get_rate_hz(ref);
20017c82:	fec42503          	lw	a0,-20(s0)
20017c86:	7c2010ef          	jal	ra,20019448 <metal_clock_get_rate_hz>
20017c8a:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
}
20017c8c:	853e                	mv	a0,a5
20017c8e:	50f2                	lw	ra,60(sp)
20017c90:	5462                	lw	s0,56(sp)
20017c92:	6121                	addi	sp,sp,64
20017c94:	8082                	ret

20017c96 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:32

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(struct metal_clock *clock, long rate)
{
20017c96:	1101                	addi	sp,sp,-32
20017c98:	ce06                	sw	ra,28(sp)
20017c9a:	cc22                	sw	s0,24(sp)
20017c9c:	1000                	addi	s0,sp,32
20017c9e:	fea42623          	sw	a0,-20(s0)
20017ca2:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:33
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20017ca6:	fec42503          	lw	a0,-20(s0)
20017caa:	3fa5                	jal	20017c22 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20017cac:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34
}
20017cae:	853e                	mv	a0,a5
20017cb0:	40f2                	lw	ra,28(sp)
20017cb2:	4462                	lw	s0,24(sp)
20017cb4:	6105                	addi	sp,sp,32
20017cb6:	8082                	ret

20017cb8 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:995
{
20017cb8:	1101                	addi	sp,sp,-32
20017cba:	ce22                	sw	s0,28(sp)
20017cbc:	1000                	addi	s0,sp,32
20017cbe:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:996
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20017cc2:	800017b7          	lui	a5,0x80001
20017cc6:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <metal_segment_heap_target_end+0xfffff274>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:997
}
20017cca:	853e                	mv	a0,a5
20017ccc:	4472                	lw	s0,28(sp)
20017cce:	6105                	addi	sp,sp,32
20017cd0:	8082                	ret

20017cd2 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1000
{
20017cd2:	1101                	addi	sp,sp,-32
20017cd4:	ce22                	sw	s0,28(sp)
20017cd6:	1000                	addi	s0,sp,32
20017cd8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1001
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20017cdc:	800017b7          	lui	a5,0x80001
20017ce0:	aac78793          	addi	a5,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xfffff280>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1002
}
20017ce4:	853e                	mv	a0,a5
20017ce6:	4472                	lw	s0,28(sp)
20017ce8:	6105                	addi	sp,sp,32
20017cea:	8082                	ret

20017cec <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1005
{
20017cec:	1101                	addi	sp,sp,-32
20017cee:	ce22                	sw	s0,28(sp)
20017cf0:	1000                	addi	s0,sp,32
20017cf2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1006
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20017cf6:	81c18793          	addi	a5,gp,-2020 # 80000ae4 <__metal_dt_prci_10008000>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1007
}
20017cfa:	853e                	mv	a0,a5
20017cfc:	4472                	lw	s0,28(sp)
20017cfe:	6105                	addi	sp,sp,32
20017d00:	8082                	ret

20017d02 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1010
{
20017d02:	1101                	addi	sp,sp,-32
20017d04:	ce22                	sw	s0,28(sp)
20017d06:	1000                	addi	s0,sp,32
20017d08:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1011
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20017d0c:	47b1                	li	a5,12
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1012
}
20017d0e:	853e                	mv	a0,a5
20017d10:	4472                	lw	s0,28(sp)
20017d12:	6105                	addi	sp,sp,32
20017d14:	8082                	ret

20017d16 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1015
{
20017d16:	1141                	addi	sp,sp,-16
20017d18:	c622                	sw	s0,12(sp)
20017d1a:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1016
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20017d1c:	81c18793          	addi	a5,gp,-2020 # 80000ae4 <__metal_dt_prci_10008000>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1017
}
20017d20:	853e                	mv	a0,a5
20017d22:	4432                	lw	s0,12(sp)
20017d24:	0141                	addi	sp,sp,16
20017d26:	8082                	ret

20017d28 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1020
{
20017d28:	1141                	addi	sp,sp,-16
20017d2a:	c622                	sw	s0,12(sp)
20017d2c:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1021
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20017d2e:	47a1                	li	a5,8
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1022
}
20017d30:	853e                	mv	a0,a5
20017d32:	4432                	lw	s0,12(sp)
20017d34:	0141                	addi	sp,sp,16
20017d36:	8082                	ret

20017d38 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1025
{
20017d38:	1141                	addi	sp,sp,-16
20017d3a:	c622                	sw	s0,12(sp)
20017d3c:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1026
		return 16000000;
20017d3e:	00f427b7          	lui	a5,0xf42
20017d42:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1027
}
20017d46:	853e                	mv	a0,a5
20017d48:	4432                	lw	s0,12(sp)
20017d4a:	0141                	addi	sp,sp,16
20017d4c:	8082                	ret

20017d4e <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1033
{
20017d4e:	1141                	addi	sp,sp,-16
20017d50:	c622                	sw	s0,12(sp)
20017d52:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1034
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20017d54:	100087b7          	lui	a5,0x10008
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1035
}
20017d58:	853e                	mv	a0,a5
20017d5a:	4432                	lw	s0,12(sp)
20017d5c:	0141                	addi	sp,sp,16
20017d5e:	8082                	ret

20017d60 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1043
{
20017d60:	1141                	addi	sp,sp,-16
20017d62:	c622                	sw	s0,12(sp)
20017d64:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1044
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20017d66:	83018793          	addi	a5,gp,-2000 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1045
}
20017d6a:	853e                	mv	a0,a5
20017d6c:	4432                	lw	s0,12(sp)
20017d6e:	0141                	addi	sp,sp,16
20017d70:	8082                	ret

20017d72 <get_pll_config_freq>:
get_pll_config_freq():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:137
 *  - config the PLL configuration
 * Returns:
 *  - PLL_CONFIG_NOT_VALID if the configuration is not valid for the input frequency
 *  - the output frequency, in hertz */
static long get_pll_config_freq(unsigned long pll_input_rate, const struct pll_config_t *config)
{
20017d72:	1101                	addi	sp,sp,-32
20017d74:	ce22                	sw	s0,28(sp)
20017d76:	1000                	addi	s0,sp,32
20017d78:	fea42623          	sw	a0,-20(s0)
20017d7c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:138
    if(pll_input_rate < config->min_input_rate || pll_input_rate > config->max_input_rate)
20017d80:	fe842783          	lw	a5,-24(s0)
20017d84:	479c                	lw	a5,8(a5)
20017d86:	fec42703          	lw	a4,-20(s0)
20017d8a:	00f76963          	bltu	a4,a5,20017d9c <get_pll_config_freq+0x2a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:138 (discriminator 1)
20017d8e:	fe842783          	lw	a5,-24(s0)
20017d92:	47dc                	lw	a5,12(a5)
20017d94:	fec42703          	lw	a4,-20(s0)
20017d98:	00e7f463          	bgeu	a5,a4,20017da0 <get_pll_config_freq+0x2e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:139
        return PLL_CONFIG_NOT_VALID;
20017d9c:	57fd                	li	a5,-1
20017d9e:	a829                	j	20017db8 <get_pll_config_freq+0x46>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141

    return pll_input_rate * config->multiplier / config->divisor;
20017da0:	fe842783          	lw	a5,-24(s0)
20017da4:	4398                	lw	a4,0(a5)
20017da6:	fec42783          	lw	a5,-20(s0)
20017daa:	02f70733          	mul	a4,a4,a5
20017dae:	fe842783          	lw	a5,-24(s0)
20017db2:	43dc                	lw	a5,4(a5)
20017db4:	02f757b3          	divu	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
}
20017db8:	853e                	mv	a0,a5
20017dba:	4472                	lw	s0,28(sp)
20017dbc:	6105                	addi	sp,sp,32
20017dbe:	8082                	ret

20017dc0 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

static void metal_sifive_fe310_g000_pll_init(void) __attribute__((constructor));
static void metal_sifive_fe310_g000_pll_init(void) {
20017dc0:	1101                	addi	sp,sp,-32
20017dc2:	ce06                	sw	ra,28(sp)
20017dc4:	cc22                	sw	s0,24(sp)
20017dc6:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:148
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20017dc8:	3f85                	jal	20017d38 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20017dca:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:150
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if(init_rate != 0)
20017dce:	fec42783          	lw	a5,-20(s0)
20017dd2:	c791                	beqz	a5,20017dde <metal_sifive_fe310_g000_pll_init+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
        __metal_driver_sifive_fe310_g000_pll_init(__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
20017dd4:	800017b7          	lui	a5,0x80001
20017dd8:	ab878513          	addi	a0,a5,-1352 # 80000ab8 <metal_segment_heap_target_end+0xfffff28c>
20017ddc:	2031                	jal	20017de8 <__metal_driver_sifive_fe310_g000_pll_init>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
}
20017dde:	0001                	nop
20017de0:	40f2                	lw	ra,28(sp)
20017de2:	4462                	lw	s0,24(sp)
20017de4:	6105                	addi	sp,sp,32
20017de6:	8082                	ret

20017de8 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:156

#endif /* __METAL_DT_SIFIVE_FE310_G000__PLL_HANDLE */

void __metal_driver_sifive_fe310_g000_pll_init(struct __metal_driver_sifive_fe310_g000_pll *pll) {
20017de8:	7139                	addi	sp,sp,-64
20017dea:	de06                	sw	ra,60(sp)
20017dec:	dc22                	sw	s0,56(sp)
20017dee:	0080                	addi	s0,sp,64
20017df0:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20017df4:	fcc42783          	lw	a5,-52(s0)
20017df8:	853e                	mv	a0,a5
20017dfa:	3de1                	jal	20017cd2 <__metal_driver_sifive_fe310_g000_pll_pllref>
20017dfc:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:158
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20017e00:	3f25                	jal	20017d38 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20017e02:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:159
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20017e06:	370d                	jal	20017d28 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20017e08:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:160
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20017e0c:	3789                	jal	20017d4e <__metal_driver_sifive_fe310_g000_prci_base>
20017e0e:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162

    __metal_io_u32 *pllcfg = (__metal_io_u32 *) (base + config_offset);
20017e12:	fe042703          	lw	a4,-32(s0)
20017e16:	fe442783          	lw	a5,-28(s0)
20017e1a:	97ba                	add	a5,a5,a4
20017e1c:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165

    /* If the PLL clock has had a _pre_rate_change_callback configured, call it */
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20017e20:	fcc42783          	lw	a5,-52(s0)
20017e24:	43dc                	lw	a5,4(a5)
20017e26:	853e                	mv	a0,a5
20017e28:	58c010ef          	jal	ra,200193b4 <_metal_clock_call_all_callbacks>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:168

    /* If we're running off of the PLL, switch off before we start configuring it*/
    if((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) == 0)
20017e2c:	fdc42783          	lw	a5,-36(s0)
20017e30:	4398                	lw	a4,0(a5)
20017e32:	67c1                	lui	a5,0x10
20017e34:	8ff9                	and	a5,a5,a4
20017e36:	eb91                	bnez	a5,20017e4a <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20017e38:	fdc42783          	lw	a5,-36(s0)
20017e3c:	4398                	lw	a4,0(a5)
20017e3e:	77c1                	lui	a5,0xffff0
20017e40:	17fd                	addi	a5,a5,-1
20017e42:	8f7d                	and	a4,a4,a5
20017e44:	fdc42783          	lw	a5,-36(s0)
20017e48:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:172

    /* Make sure we're running off of the external oscillator for stability */
    if(pllref != NULL)
20017e4a:	fec42783          	lw	a5,-20(s0)
20017e4e:	cb91                	beqz	a5,20017e62 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20017e50:	fdc42783          	lw	a5,-36(s0)
20017e54:	4398                	lw	a4,0(a5)
20017e56:	000207b7          	lui	a5,0x20
20017e5a:	8f5d                	or	a4,a4,a5
20017e5c:	fdc42783          	lw	a5,-36(s0)
20017e60:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178

    /* Configure the PLL to run at the requested init frequency.
     * Using the vtable instead of the user API because we want to control
     * when the callbacks occur. */
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20017e62:	fcc42783          	lw	a5,-52(s0)
20017e66:	439c                	lw	a5,0(a5)
20017e68:	43d8                	lw	a4,4(a5)
20017e6a:	fcc42783          	lw	a5,-52(s0)
20017e6e:	fe842583          	lw	a1,-24(s0)
20017e72:	853e                	mv	a0,a5
20017e74:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181

    /* If the PLL clock has had a rate_change_callback configured, call it */
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20017e76:	fcc42783          	lw	a5,-52(s0)
20017e7a:	479c                	lw	a5,8(a5)
20017e7c:	853e                	mv	a0,a5
20017e7e:	536010ef          	jal	ra,200193b4 <_metal_clock_call_all_callbacks>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
}
20017e82:	0001                	nop
20017e84:	50f2                	lw	ra,60(sp)
20017e86:	5462                	lw	s0,56(sp)
20017e88:	6121                	addi	sp,sp,64
20017e8a:	8082                	ret

20017e8c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:185

long __metal_driver_sifive_fe310_g000_pll_get_rate_hz(const struct metal_clock *clock)
{
20017e8c:	711d                	addi	sp,sp,-96
20017e8e:	ce86                	sw	ra,92(sp)
20017e90:	cca2                	sw	s0,88(sp)
20017e92:	1080                	addi	s0,sp,96
20017e94:	faa42623          	sw	a0,-84(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:186
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20017e98:	fac42503          	lw	a0,-84(s0)
20017e9c:	3d1d                	jal	20017cd2 <__metal_driver_sifive_fe310_g000_pll_pllref>
20017e9e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    struct metal_clock *pllsel0 = __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20017ea2:	fac42503          	lw	a0,-84(s0)
20017ea6:	3d09                	jal	20017cb8 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20017ea8:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:188
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20017eac:	fac42503          	lw	a0,-84(s0)
20017eb0:	3da5                	jal	20017d28 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20017eb2:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20017eb6:	fac42503          	lw	a0,-84(s0)
20017eba:	3db1                	jal	20017d16 <__metal_driver_sifive_fe310_g000_pll_config_base>
20017ebc:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
    long divider_offset = __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20017ec0:	fac42503          	lw	a0,-84(s0)
20017ec4:	3d3d                	jal	20017d02 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20017ec6:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:193
    struct __metal_driver_sifive_fe310_g000_prci *divider_base =
      __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20017eca:	fac42503          	lw	a0,-84(s0)
20017ece:	3d39                	jal	20017cec <__metal_driver_sifive_fe310_g000_pll_divider_base>
20017ed0:	fca42c23          	sw	a0,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:195
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20017ed4:	3571                	jal	20017d60 <__metal_driver_sifive_fe310_g000_prci_vtable>
20017ed6:	fca42a23          	sw	a0,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:197

    long cfg = vtable->get_reg(config_base, config_offset);
20017eda:	fd442783          	lw	a5,-44(s0)
20017ede:	439c                	lw	a5,0(a5)
20017ee0:	fe442583          	lw	a1,-28(s0)
20017ee4:	fe042503          	lw	a0,-32(s0)
20017ee8:	9782                	jalr	a5
20017eea:	fca42823          	sw	a0,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
    long div = vtable->get_reg(divider_base, divider_offset);
20017eee:	fd442783          	lw	a5,-44(s0)
20017ef2:	439c                	lw	a5,0(a5)
20017ef4:	fdc42583          	lw	a1,-36(s0)
20017ef8:	fd842503          	lw	a0,-40(s0)
20017efc:	9782                	jalr	a5
20017efe:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202

    /* At the end of the PLL there's one big mux: it either selects the HFROSC
     * (bypassing the PLL entirely) or uses the PLL. */
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20017f02:	fd042703          	lw	a4,-48(s0)
20017f06:	67c1                	lui	a5,0x10
20017f08:	8f7d                	and	a4,a4,a5
20017f0a:	67c1                	lui	a5,0x10
20017f0c:	00f77863          	bgeu	a4,a5,20017f1c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:203
        return metal_clock_get_rate_hz(pllsel0);
20017f10:	fe842503          	lw	a0,-24(s0)
20017f14:	534010ef          	jal	ra,20019448 <metal_clock_get_rate_hz>
20017f18:	87aa                	mv	a5,a0
20017f1a:	a8e1                	j	20017ff2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207

    /* There's a clock mux before the PLL that selects between the HFROSC adn
     * the HFXOSC as the PLL's input clock. */
    long ref_hz = metal_clock_get_rate_hz(__METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20017f1c:	fd042703          	lw	a4,-48(s0)
20017f20:	000207b7          	lui	a5,0x20
20017f24:	8f7d                	and	a4,a4,a5
20017f26:	000207b7          	lui	a5,0x20
20017f2a:	00f76563          	bltu	a4,a5,20017f34 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207 (discriminator 1)
20017f2e:	fec42783          	lw	a5,-20(s0)
20017f32:	a019                	j	20017f38 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207 (discriminator 2)
20017f34:	fe842783          	lw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207 (discriminator 4)
20017f38:	853e                	mv	a0,a5
20017f3a:	50e010ef          	jal	ra,20019448 <metal_clock_get_rate_hz>
20017f3e:	fca42423          	sw	a0,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211 (discriminator 4)

    /* It's possible to bypass the PLL, which is an internal bpyass.  This
     * still obays the PLL's input clock mu. */
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20017f42:	fd042703          	lw	a4,-48(s0)
20017f46:	000407b7          	lui	a5,0x40
20017f4a:	8f7d                	and	a4,a4,a5
20017f4c:	000407b7          	lui	a5,0x40
20017f50:	00f76563          	bltu	a4,a5,20017f5a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:212
        return ref_hz;
20017f54:	fc842783          	lw	a5,-56(s0)
20017f58:	a869                	j	20017ff2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215

    /* Logically the PLL is a three stage div-mul-div. */
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20017f5a:	fd042783          	lw	a5,-48(s0)
20017f5e:	8b9d                	andi	a5,a5,7
20017f60:	0785                	addi	a5,a5,1
20017f62:	fcf42223          	sw	a5,-60(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20017f66:	fd042783          	lw	a5,-48(s0)
20017f6a:	3f07f793          	andi	a5,a5,1008
20017f6e:	8391                	srli	a5,a5,0x4
20017f70:	0785                	addi	a5,a5,1
20017f72:	0786                	slli	a5,a5,0x1
20017f74:	fcf42023          	sw	a5,-64(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:217
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20017f78:	fd042703          	lw	a4,-48(s0)
20017f7c:	6785                	lui	a5,0x1
20017f7e:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20017f82:	8f7d                	and	a4,a4,a5
20017f84:	3ff00793          	li	a5,1023
20017f88:	00e7e463          	bltu	a5,a4,20017f90 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:218
        return -1;
20017f8c:	57fd                	li	a5,-1
20017f8e:	a095                	j	20017ff2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:219
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20017f90:	fd042703          	lw	a4,-48(s0)
20017f94:	6785                	lui	a5,0x1
20017f96:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20017f9a:	8ff9                	and	a5,a5,a4
20017f9c:	83a9                	srli	a5,a5,0xa
20017f9e:	4705                	li	a4,1
20017fa0:	00f717b3          	sll	a5,a4,a5
20017fa4:	faf42e23          	sw	a5,-68(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:224

    /* In addition to the dividers inherent in the PLL, there's an additional
     * clock divider that lives after the PLL and lets us pick a more
     * interesting range of frequencies. */
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20017fa8:	fc842703          	lw	a4,-56(s0)
20017fac:	fc442783          	lw	a5,-60(s0)
20017fb0:	02f74733          	div	a4,a4,a5
20017fb4:	fc042783          	lw	a5,-64(s0)
20017fb8:	02f70733          	mul	a4,a4,a5
20017fbc:	fbc42783          	lw	a5,-68(s0)
20017fc0:	02f747b3          	div	a5,a4,a5
20017fc4:	faf42c23          	sw	a5,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225
    if (__METAL_GET_FIELD(div, DIV_1))
20017fc8:	fcc42783          	lw	a5,-52(s0)
20017fcc:	1007f713          	andi	a4,a5,256
20017fd0:	0ff00793          	li	a5,255
20017fd4:	00e7f563          	bgeu	a5,a4,20017fde <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return pllout;
20017fd8:	fb842783          	lw	a5,-72(s0)
20017fdc:	a819                	j	20017ff2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:228

    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20017fde:	fb842703          	lw	a4,-72(s0)
20017fe2:	fcc42783          	lw	a5,-52(s0)
20017fe6:	03f7f793          	andi	a5,a5,63
20017fea:	0785                	addi	a5,a5,1
20017fec:	0786                	slli	a5,a5,0x1
20017fee:	02f757b3          	divu	a5,a4,a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
}
20017ff2:	853e                	mv	a0,a5
20017ff4:	40f6                	lw	ra,92(sp)
20017ff6:	4466                	lw	s0,88(sp)
20017ff8:	6125                	addi	sp,sp,96
20017ffa:	8082                	ret

20017ffc <find_closest_config>:
find_closest_config():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
 *  - rate desired PLL output frequency
 * Returns:
 *  -1 if no valid configuration is available
 *  the index into pll_configs of a valid configuration */
static int find_closest_config(long ref_hz, long rate)
{
20017ffc:	7139                	addi	sp,sp,-64
20017ffe:	de06                	sw	ra,60(sp)
20018000:	dc22                	sw	s0,56(sp)
20018002:	0080                	addi	s0,sp,64
20018004:	fca42623          	sw	a0,-52(s0)
20018008:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:241
    int closest_index = -1;
2001800c:	57fd                	li	a5,-1
2001800e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    long closest_diff = LONG_MAX;
20018012:	800007b7          	lui	a5,0x80000
20018016:	fff7c793          	not	a5,a5
2001801a:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:246

    /* We're probably trying for a fast output frequency, so start from
     * the high end of the configs. */
    for(int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0; i--)
2001801e:	04300793          	li	a5,67
20018022:	fef42223          	sw	a5,-28(s0)
20018026:	a0b5                	j	20018092 <find_closest_config+0x96>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:248
    {
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20018028:	fcc42683          	lw	a3,-52(s0)
2001802c:	fe442783          	lw	a5,-28(s0)
20018030:	00579713          	slli	a4,a5,0x5
20018034:	2001a7b7          	lui	a5,0x2001a
20018038:	f4478793          	addi	a5,a5,-188 # 20019f44 <pll_configs>
2001803c:	97ba                	add	a5,a5,a4
2001803e:	85be                	mv	a1,a5
20018040:	8536                	mv	a0,a3
20018042:	d31ff0ef          	jal	ra,20017d72 <get_pll_config_freq>
20018046:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:249
        if(config_freq != PLL_CONFIG_NOT_VALID)
2001804a:	fe042703          	lw	a4,-32(s0)
2001804e:	57fd                	li	a5,-1
20018050:	02f70c63          	beq	a4,a5,20018088 <find_closest_config+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:251
        {
            long freq_diff = abs(config_freq - rate);
20018054:	fe042703          	lw	a4,-32(s0)
20018058:	fc842783          	lw	a5,-56(s0)
2001805c:	8f1d                	sub	a4,a4,a5
2001805e:	41f75793          	srai	a5,a4,0x1f
20018062:	8f3d                	xor	a4,a4,a5
20018064:	40f707b3          	sub	a5,a4,a5
20018068:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:252
            if(freq_diff < closest_diff)
2001806c:	fdc42703          	lw	a4,-36(s0)
20018070:	fe842783          	lw	a5,-24(s0)
20018074:	00f75a63          	bge	a4,a5,20018088 <find_closest_config+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
            {
                closest_index = i;
20018078:	fe442783          	lw	a5,-28(s0)
2001807c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
                closest_diff = freq_diff;
20018080:	fdc42783          	lw	a5,-36(s0)
20018084:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:246 (discriminator 2)
    for(int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0; i--)
20018088:	fe442783          	lw	a5,-28(s0)
2001808c:	17fd                	addi	a5,a5,-1
2001808e:	fef42223          	sw	a5,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:246 (discriminator 1)
20018092:	fe442783          	lw	a5,-28(s0)
20018096:	f807d9e3          	bgez	a5,20018028 <find_closest_config+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
            }
        }
    }

    return closest_index;
2001809a:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
}
2001809e:	853e                	mv	a0,a5
200180a0:	50f2                	lw	ra,60(sp)
200180a2:	5462                	lw	s0,56(sp)
200180a4:	6121                	addi	sp,sp,64
200180a6:	8082                	ret

200180a8 <configure_pll>:
configure_pll():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265

/* Configure the PLL and wait for it to lock */
static void configure_pll(__metal_io_u32 *pllcfg, __metal_io_u32 *plloutdiv, const struct pll_config_t *config)
{
200180a8:	1101                	addi	sp,sp,-32
200180aa:	ce22                	sw	s0,28(sp)
200180ac:	1000                	addi	s0,sp,32
200180ae:	fea42623          	sw	a0,-20(s0)
200180b2:	feb42423          	sw	a1,-24(s0)
200180b6:	fec42223          	sw	a2,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
200180ba:	fec42783          	lw	a5,-20(s0)
200180be:	439c                	lw	a5,0(a5)
200180c0:	ff87f713          	andi	a4,a5,-8
200180c4:	fec42783          	lw	a5,-20(s0)
200180c8:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
200180ca:	fec42783          	lw	a5,-20(s0)
200180ce:	4398                	lw	a4,0(a5)
200180d0:	fe442783          	lw	a5,-28(s0)
200180d4:	4b9c                	lw	a5,16(a5)
200180d6:	8b9d                	andi	a5,a5,7
200180d8:	8f5d                	or	a4,a4,a5
200180da:	fec42783          	lw	a5,-20(s0)
200180de:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:269

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
200180e0:	fec42783          	lw	a5,-20(s0)
200180e4:	439c                	lw	a5,0(a5)
200180e6:	c0f7f713          	andi	a4,a5,-1009
200180ea:	fec42783          	lw	a5,-20(s0)
200180ee:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:270
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
200180f0:	fec42783          	lw	a5,-20(s0)
200180f4:	4398                	lw	a4,0(a5)
200180f6:	fe442783          	lw	a5,-28(s0)
200180fa:	4bdc                	lw	a5,20(a5)
200180fc:	0792                	slli	a5,a5,0x4
200180fe:	3f07f793          	andi	a5,a5,1008
20018102:	8f5d                	or	a4,a4,a5
20018104:	fec42783          	lw	a5,-20(s0)
20018108:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2001810a:	fec42783          	lw	a5,-20(s0)
2001810e:	4398                	lw	a4,0(a5)
20018110:	77fd                	lui	a5,0xfffff
20018112:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdbd3>
20018116:	8f7d                	and	a4,a4,a5
20018118:	fec42783          	lw	a5,-20(s0)
2001811c:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
2001811e:	fec42783          	lw	a5,-20(s0)
20018122:	4398                	lw	a4,0(a5)
20018124:	fe442783          	lw	a5,-28(s0)
20018128:	4f9c                	lw	a5,24(a5)
2001812a:	00a79693          	slli	a3,a5,0xa
2001812e:	6785                	lui	a5,0x1
20018130:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20018134:	8ff5                	and	a5,a5,a3
20018136:	8f5d                	or	a4,a4,a5
20018138:	fec42783          	lw	a5,-20(s0)
2001813c:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:275

    if(config->d < 0)
2001813e:	fe442783          	lw	a5,-28(s0)
20018142:	4fdc                	lw	a5,28(a5)
20018144:	0207db63          	bgez	a5,2001817a <configure_pll+0xd2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:278
    {
        /* disable final divider */
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20018148:	fe842783          	lw	a5,-24(s0)
2001814c:	439c                	lw	a5,0(a5)
2001814e:	1007e713          	ori	a4,a5,256
20018152:	fe842783          	lw	a5,-24(s0)
20018156:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:280

        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20018158:	fe842783          	lw	a5,-24(s0)
2001815c:	439c                	lw	a5,0(a5)
2001815e:	fc07f713          	andi	a4,a5,-64
20018162:	fe842783          	lw	a5,-24(s0)
20018166:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:281
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20018168:	fe842783          	lw	a5,-24(s0)
2001816c:	439c                	lw	a5,0(a5)
2001816e:	0017e713          	ori	a4,a5,1
20018172:	fe842783          	lw	a5,-24(s0)
20018176:	c398                	sw	a4,0(a5)
20018178:	a82d                	j	200181b2 <configure_pll+0x10a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:285
    }
    else
    {
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
2001817a:	fe842783          	lw	a5,-24(s0)
2001817e:	439c                	lw	a5,0(a5)
20018180:	eff7f713          	andi	a4,a5,-257
20018184:	fe842783          	lw	a5,-24(s0)
20018188:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:287

        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2001818a:	fe842783          	lw	a5,-24(s0)
2001818e:	439c                	lw	a5,0(a5)
20018190:	fc07f713          	andi	a4,a5,-64
20018194:	fe842783          	lw	a5,-24(s0)
20018198:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:288
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
2001819a:	fe842783          	lw	a5,-24(s0)
2001819e:	4398                	lw	a4,0(a5)
200181a0:	fe442783          	lw	a5,-28(s0)
200181a4:	4fdc                	lw	a5,28(a5)
200181a6:	03f7f793          	andi	a5,a5,63
200181aa:	8f5d                	or	a4,a4,a5
200181ac:	fe842783          	lw	a5,-24(s0)
200181b0:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    }

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
200181b2:	fec42783          	lw	a5,-20(s0)
200181b6:	4398                	lw	a4,0(a5)
200181b8:	fffc07b7          	lui	a5,0xfffc0
200181bc:	17fd                	addi	a5,a5,-1
200181be:	8f7d                	and	a4,a4,a5
200181c0:	fec42783          	lw	a5,-20(s0)
200181c4:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294

    /* Wait for PLL to lock */
    while((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0) ;
200181c6:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294 (discriminator 1)
200181c8:	fec42783          	lw	a5,-20(s0)
200181cc:	439c                	lw	a5,0(a5)
200181ce:	fe07dde3          	bgez	a5,200181c8 <configure_pll+0x120>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
}
200181d2:	0001                	nop
200181d4:	4472                	lw	s0,28(sp)
200181d6:	6105                	addi	sp,sp,32
200181d8:	8082                	ret

200181da <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298

long __metal_driver_sifive_fe310_g000_pll_set_rate_hz(struct metal_clock *clock, long rate)
{
200181da:	715d                	addi	sp,sp,-80
200181dc:	c686                	sw	ra,76(sp)
200181de:	c4a2                	sw	s0,72(sp)
200181e0:	0880                	addi	s0,sp,80
200181e2:	faa42e23          	sw	a0,-68(s0)
200181e6:	fab42c23          	sw	a1,-72(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:299
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200181ea:	fbc42503          	lw	a0,-68(s0)
200181ee:	ae5ff0ef          	jal	ra,20017cd2 <__metal_driver_sifive_fe310_g000_pll_pllref>
200181f2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    struct metal_clock *pllsel0 = __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200181f6:	fbc42503          	lw	a0,-68(s0)
200181fa:	abfff0ef          	jal	ra,20017cb8 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200181fe:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:301
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20018202:	fbc42503          	lw	a0,-68(s0)
20018206:	b23ff0ef          	jal	ra,20017d28 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2001820a:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
    long divider_offset = __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
2001820e:	fbc42503          	lw	a0,-68(s0)
20018212:	af1ff0ef          	jal	ra,20017d02 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20018216:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:303
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2001821a:	b35ff0ef          	jal	ra,20017d4e <__metal_driver_sifive_fe310_g000_prci_base>
2001821e:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305

    __metal_io_u32 *pllcfg = (__metal_io_u32 *) (base + config_offset);
20018222:	fdc42703          	lw	a4,-36(s0)
20018226:	fe442783          	lw	a5,-28(s0)
2001822a:	97ba                	add	a5,a5,a4
2001822c:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:306
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *) (base + divider_offset);
20018230:	fdc42703          	lw	a4,-36(s0)
20018234:	fe042783          	lw	a5,-32(s0)
20018238:	97ba                	add	a5,a5,a4
2001823a:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309

    /* We can't modify the PLL if coreclk is driven by it, so switch it off */
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
2001823e:	fd842783          	lw	a5,-40(s0)
20018242:	4398                	lw	a4,0(a5)
20018244:	67c1                	lui	a5,0x10
20018246:	8ff9                	and	a5,a5,a4
20018248:	cb91                	beqz	a5,2001825c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2001824a:	fd842783          	lw	a5,-40(s0)
2001824e:	4398                	lw	a4,0(a5)
20018250:	77c1                	lui	a5,0xffff0
20018252:	17fd                	addi	a5,a5,-1
20018254:	8f7d                	and	a4,a4,a5
20018256:	fd842783          	lw	a5,-40(s0)
2001825a:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314

    /* There's a clock mux before the PLL that selects between the HFROSC and
     * the HFXOSC as the PLL's input clock. */
    long ref_hz = metal_clock_get_rate_hz(__METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
2001825c:	fd842783          	lw	a5,-40(s0)
20018260:	4398                	lw	a4,0(a5)
20018262:	000207b7          	lui	a5,0x20
20018266:	8ff9                	and	a5,a5,a4
20018268:	c781                	beqz	a5,20018270 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314 (discriminator 1)
2001826a:	fec42783          	lw	a5,-20(s0)
2001826e:	a019                	j	20018274 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314 (discriminator 2)
20018270:	fe842783          	lw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314 (discriminator 4)
20018274:	853e                	mv	a0,a5
20018276:	1d2010ef          	jal	ra,20019448 <metal_clock_get_rate_hz>
2001827a:	fca42823          	sw	a0,-48(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:317 (discriminator 4)

    /* if the desired rate is within 75%-125% of the input clock, bypass the PLL */
    if((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate)
2001827e:	fd042703          	lw	a4,-48(s0)
20018282:	87ba                	mv	a5,a4
20018284:	0786                	slli	a5,a5,0x1
20018286:	97ba                	add	a5,a5,a4
20018288:	41f7d713          	srai	a4,a5,0x1f
2001828c:	8b0d                	andi	a4,a4,3
2001828e:	97ba                	add	a5,a5,a4
20018290:	8789                	srai	a5,a5,0x2
20018292:	873e                	mv	a4,a5
20018294:	fb842783          	lw	a5,-72(s0)
20018298:	02e7cb63          	blt	a5,a4,200182ce <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:317 (discriminator 1)
2001829c:	fd042703          	lw	a4,-48(s0)
200182a0:	87ba                	mv	a5,a4
200182a2:	078a                	slli	a5,a5,0x2
200182a4:	97ba                	add	a5,a5,a4
200182a6:	41f7d713          	srai	a4,a5,0x1f
200182aa:	8b0d                	andi	a4,a4,3
200182ac:	97ba                	add	a5,a5,a4
200182ae:	8789                	srai	a5,a5,0x2
200182b0:	873e                	mv	a4,a5
200182b2:	fb842783          	lw	a5,-72(s0)
200182b6:	00f74c63          	blt	a4,a5,200182ce <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:319
    {
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200182ba:	fd842783          	lw	a5,-40(s0)
200182be:	4398                	lw	a4,0(a5)
200182c0:	000407b7          	lui	a5,0x40
200182c4:	8f5d                	or	a4,a4,a5
200182c6:	fd842783          	lw	a5,-40(s0)
200182ca:	c398                	sw	a4,0(a5)
200182cc:	a881                	j	2001831c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:323
    }
    else
    {
        int config_index = find_closest_config(ref_hz, rate);
200182ce:	fb842583          	lw	a1,-72(s0)
200182d2:	fd042503          	lw	a0,-48(s0)
200182d6:	d27ff0ef          	jal	ra,20017ffc <find_closest_config>
200182da:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:324
        if(config_index != -1)
200182de:	fcc42703          	lw	a4,-52(s0)
200182e2:	57fd                	li	a5,-1
200182e4:	02f70363          	beq	a4,a5,2001830a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:326
        {
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
200182e8:	fcc42783          	lw	a5,-52(s0)
200182ec:	00579713          	slli	a4,a5,0x5
200182f0:	2001a7b7          	lui	a5,0x2001a
200182f4:	f4478793          	addi	a5,a5,-188 # 20019f44 <pll_configs>
200182f8:	97ba                	add	a5,a5,a4
200182fa:	863e                	mv	a2,a5
200182fc:	fd442583          	lw	a1,-44(s0)
20018300:	fd842503          	lw	a0,-40(s0)
20018304:	da5ff0ef          	jal	ra,200180a8 <configure_pll>
20018308:	a811                	j	2001831c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:331
        }
        else
        {
            /* unable to find a valid configuration */
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
2001830a:	fd842783          	lw	a5,-40(s0)
2001830e:	4398                	lw	a4,0(a5)
20018310:	000407b7          	lui	a5,0x40
20018314:	8f5d                	or	a4,a4,a5
20018316:	fd842783          	lw	a5,-40(s0)
2001831a:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:336
        }
    }

    /* Enable the PLL */
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
2001831c:	fd842783          	lw	a5,-40(s0)
20018320:	4398                	lw	a4,0(a5)
20018322:	67c1                	lui	a5,0x10
20018324:	8f5d                	or	a4,a4,a5
20018326:	fd842783          	lw	a5,-40(s0)
2001832a:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:338

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
2001832c:	fbc42503          	lw	a0,-68(s0)
20018330:	b5dff0ef          	jal	ra,20017e8c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20018334:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:339
}
20018336:	853e                	mv	a0,a5
20018338:	40b6                	lw	ra,76(sp)
2001833a:	4426                	lw	s0,72(sp)
2001833c:	6161                	addi	sp,sp,80
2001833e:	8082                	ret

20018340 <use_hfxosc>:
use_hfxosc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:344

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
static void use_hfxosc(void) __attribute__((constructor));
static void use_hfxosc(void)
{
20018340:	1101                	addi	sp,sp,-32
20018342:	ce06                	sw	ra,28(sp)
20018344:	cc22                	sw	s0,24(sp)
20018346:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20018348:	9f1ff0ef          	jal	ra,20017d38 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001834c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:346
    metal_clock_set_rate_hz(
20018350:	fec42583          	lw	a1,-20(s0)
20018354:	800017b7          	lui	a5,0x80001
20018358:	ab878513          	addi	a0,a5,-1352 # 80000ab8 <metal_segment_heap_target_end+0xfffff28c>
2001835c:	112010ef          	jal	ra,2001946e <metal_clock_set_rate_hz>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        &__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock, init_rate
    );
}
20018360:	0001                	nop
20018362:	40f2                	lw	ra,28(sp)
20018364:	4462                	lw	s0,24(sp)
20018366:	6105                	addi	sp,sp,32
20018368:	8082                	ret

2001836a <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1033
{
2001836a:	1141                	addi	sp,sp,-16
2001836c:	c622                	sw	s0,12(sp)
2001836e:	0800                	addi	s0,sp,16
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1034
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20018370:	100087b7          	lui	a5,0x10008
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1035
}
20018374:	853e                	mv	a0,a5
20018376:	4432                	lw	s0,12(sp)
20018378:	0141                	addi	sp,sp,16
2001837a:	8082                	ret

2001837c <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:11
#ifdef METAL_SIFIVE_FE310_G000_PRCI

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
2001837c:	7179                	addi	sp,sp,-48
2001837e:	d606                	sw	ra,44(sp)
20018380:	d422                	sw	s0,40(sp)
20018382:	1800                	addi	s0,sp,48
20018384:	fca42e23          	sw	a0,-36(s0)
20018388:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2001838c:	3ff9                	jal	2001836a <__metal_driver_sifive_fe310_g000_prci_base>
2001838e:	87aa                	mv	a5,a0
20018390:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20018394:	fd842703          	lw	a4,-40(s0)
20018398:	fec42783          	lw	a5,-20(s0)
2001839c:	97ba                	add	a5,a5,a4
2001839e:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
}
200183a0:	853e                	mv	a0,a5
200183a2:	50b2                	lw	ra,44(sp)
200183a4:	5422                	lw	s0,40(sp)
200183a6:	6145                	addi	sp,sp,48
200183a8:	8082                	ret

200183aa <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:16

long __metal_driver_sifive_fe310_g000_prci_set_reg(const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset, long value) {
200183aa:	7179                	addi	sp,sp,-48
200183ac:	d606                	sw	ra,44(sp)
200183ae:	d422                	sw	s0,40(sp)
200183b0:	1800                	addi	s0,sp,48
200183b2:	fca42e23          	sw	a0,-36(s0)
200183b6:	fcb42c23          	sw	a1,-40(s0)
200183ba:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:17
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
200183be:	3775                	jal	2001836a <__metal_driver_sifive_fe310_g000_prci_base>
200183c0:	87aa                	mv	a5,a0
200183c2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:18
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
200183c6:	fd842703          	lw	a4,-40(s0)
200183ca:	fec42783          	lw	a5,-20(s0)
200183ce:	97ba                	add	a5,a5,a4
200183d0:	873e                	mv	a4,a5
200183d2:	fd442783          	lw	a5,-44(s0)
200183d6:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19
}
200183d8:	853e                	mv	a0,a5
200183da:	50b2                	lw	ra,44(sp)
200183dc:	5422                	lw	s0,40(sp)
200183de:	6145                	addi	sp,sp,48
200183e0:	8082                	ret

200183e2 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:380
{
200183e2:	1101                	addi	sp,sp,-32
200183e4:	ce22                	sw	s0,28(sp)
200183e6:	1000                	addi	s0,sp,32
200183e8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:381
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200183ec:	fec42703          	lw	a4,-20(s0)
200183f0:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200183f4:	00f71563          	bne	a4,a5,200183fe <__metal_driver_sifive_gpio0_base+0x1c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:382
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
200183f8:	100127b7          	lui	a5,0x10012
200183fc:	a011                	j	20018400 <__metal_driver_sifive_gpio0_base+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:385
		return 0;
200183fe:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:387
}
20018400:	853e                	mv	a0,a5
20018402:	4472                	lw	s0,28(sp)
20018404:	6105                	addi	sp,sp,32
20018406:	8082                	ret

20018408 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:410
{
20018408:	1101                	addi	sp,sp,-32
2001840a:	ce22                	sw	s0,28(sp)
2001840c:	1000                	addi	s0,sp,32
2001840e:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:411
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20018412:	fec42703          	lw	a4,-20(s0)
20018416:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
2001841a:	00f71763          	bne	a4,a5,20018428 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:412
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
2001841e:	800007b7          	lui	a5,0x80000
20018422:	48878793          	addi	a5,a5,1160 # 80000488 <metal_segment_heap_target_end+0xffffec5c>
20018426:	a011                	j	2001842a <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:415
		return 0;
20018428:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:417
}
2001842a:	853e                	mv	a0,a5
2001842c:	4472                	lw	s0,28(sp)
2001842e:	6105                	addi	sp,sp,32
20018430:	8082                	ret

20018432 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:420
{
20018432:	1101                	addi	sp,sp,-32
20018434:	ce22                	sw	s0,28(sp)
20018436:	1000                	addi	s0,sp,32
20018438:	fea42623          	sw	a0,-20(s0)
2001843c:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:421
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20018440:	fec42703          	lw	a4,-20(s0)
20018444:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018448:	00f71763          	bne	a4,a5,20018456 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:421 (discriminator 1)
2001844c:	fe842783          	lw	a5,-24(s0)
20018450:	e399                	bnez	a5,20018456 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:422
		return 8;
20018452:	47a1                	li	a5,8
20018454:	ae15                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:424
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20018456:	fec42703          	lw	a4,-20(s0)
2001845a:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
2001845e:	00f71963          	bne	a4,a5,20018470 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:424 (discriminator 1)
20018462:	fe842703          	lw	a4,-24(s0)
20018466:	4785                	li	a5,1
20018468:	00f71463          	bne	a4,a5,20018470 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:425
		return 9;
2001846c:	47a5                	li	a5,9
2001846e:	ae29                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:427
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20018470:	fec42703          	lw	a4,-20(s0)
20018474:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018478:	00f71963          	bne	a4,a5,2001848a <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:427 (discriminator 1)
2001847c:	fe842703          	lw	a4,-24(s0)
20018480:	4789                	li	a5,2
20018482:	00f71463          	bne	a4,a5,2001848a <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:428
		return 10;
20018486:	47a9                	li	a5,10
20018488:	a601                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:430
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
2001848a:	fec42703          	lw	a4,-20(s0)
2001848e:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018492:	00f71963          	bne	a4,a5,200184a4 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:430 (discriminator 1)
20018496:	fe842703          	lw	a4,-24(s0)
2001849a:	478d                	li	a5,3
2001849c:	00f71463          	bne	a4,a5,200184a4 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:431
		return 11;
200184a0:	47ad                	li	a5,11
200184a2:	a4dd                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:433
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
200184a4:	fec42703          	lw	a4,-20(s0)
200184a8:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200184ac:	00f71963          	bne	a4,a5,200184be <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:433 (discriminator 1)
200184b0:	fe842703          	lw	a4,-24(s0)
200184b4:	4791                	li	a5,4
200184b6:	00f71463          	bne	a4,a5,200184be <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:434
		return 12;
200184ba:	47b1                	li	a5,12
200184bc:	a4f1                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:436
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
200184be:	fec42703          	lw	a4,-20(s0)
200184c2:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200184c6:	00f71963          	bne	a4,a5,200184d8 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:436 (discriminator 1)
200184ca:	fe842703          	lw	a4,-24(s0)
200184ce:	4795                	li	a5,5
200184d0:	00f71463          	bne	a4,a5,200184d8 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:437
		return 13;
200184d4:	47b5                	li	a5,13
200184d6:	ac4d                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:439
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
200184d8:	fec42703          	lw	a4,-20(s0)
200184dc:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200184e0:	00f71963          	bne	a4,a5,200184f2 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:439 (discriminator 1)
200184e4:	fe842703          	lw	a4,-24(s0)
200184e8:	4799                	li	a5,6
200184ea:	00f71463          	bne	a4,a5,200184f2 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:440
		return 14;
200184ee:	47b9                	li	a5,14
200184f0:	ac61                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:442
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
200184f2:	fec42703          	lw	a4,-20(s0)
200184f6:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200184fa:	00f71963          	bne	a4,a5,2001850c <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:442 (discriminator 1)
200184fe:	fe842703          	lw	a4,-24(s0)
20018502:	479d                	li	a5,7
20018504:	00f71463          	bne	a4,a5,2001850c <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:443
		return 15;
20018508:	47bd                	li	a5,15
2001850a:	acbd                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:445
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
2001850c:	fec42703          	lw	a4,-20(s0)
20018510:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018514:	00f71963          	bne	a4,a5,20018526 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:445 (discriminator 1)
20018518:	fe842703          	lw	a4,-24(s0)
2001851c:	47a1                	li	a5,8
2001851e:	00f71463          	bne	a4,a5,20018526 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:446
		return 16;
20018522:	47c1                	li	a5,16
20018524:	a495                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:448
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20018526:	fec42703          	lw	a4,-20(s0)
2001852a:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
2001852e:	00f71963          	bne	a4,a5,20018540 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:448 (discriminator 1)
20018532:	fe842703          	lw	a4,-24(s0)
20018536:	47a5                	li	a5,9
20018538:	00f71463          	bne	a4,a5,20018540 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:449
		return 17;
2001853c:	47c5                	li	a5,17
2001853e:	a4a9                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:451
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20018540:	fec42703          	lw	a4,-20(s0)
20018544:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018548:	00f71963          	bne	a4,a5,2001855a <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:451 (discriminator 1)
2001854c:	fe842703          	lw	a4,-24(s0)
20018550:	47a9                	li	a5,10
20018552:	00f71463          	bne	a4,a5,2001855a <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:452
		return 18;
20018556:	47c9                	li	a5,18
20018558:	ac05                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:454
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2001855a:	fec42703          	lw	a4,-20(s0)
2001855e:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018562:	00f71963          	bne	a4,a5,20018574 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:454 (discriminator 1)
20018566:	fe842703          	lw	a4,-24(s0)
2001856a:	47ad                	li	a5,11
2001856c:	00f71463          	bne	a4,a5,20018574 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:455
		return 19;
20018570:	47cd                	li	a5,19
20018572:	ac19                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:457
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20018574:	fec42703          	lw	a4,-20(s0)
20018578:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
2001857c:	00f71963          	bne	a4,a5,2001858e <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:457 (discriminator 1)
20018580:	fe842703          	lw	a4,-24(s0)
20018584:	47b1                	li	a5,12
20018586:	00f71463          	bne	a4,a5,2001858e <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:458
		return 20;
2001858a:	47d1                	li	a5,20
2001858c:	aaf5                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:460
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
2001858e:	fec42703          	lw	a4,-20(s0)
20018592:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018596:	00f71963          	bne	a4,a5,200185a8 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:460 (discriminator 1)
2001859a:	fe842703          	lw	a4,-24(s0)
2001859e:	47b5                	li	a5,13
200185a0:	00f71463          	bne	a4,a5,200185a8 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:461
		return 21;
200185a4:	47d5                	li	a5,21
200185a6:	a2cd                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:463
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
200185a8:	fec42703          	lw	a4,-20(s0)
200185ac:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200185b0:	00f71963          	bne	a4,a5,200185c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:463 (discriminator 1)
200185b4:	fe842703          	lw	a4,-24(s0)
200185b8:	47b9                	li	a5,14
200185ba:	00f71463          	bne	a4,a5,200185c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:464
		return 22;
200185be:	47d9                	li	a5,22
200185c0:	a2e1                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:466
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
200185c2:	fec42703          	lw	a4,-20(s0)
200185c6:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200185ca:	00f71963          	bne	a4,a5,200185dc <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:466 (discriminator 1)
200185ce:	fe842703          	lw	a4,-24(s0)
200185d2:	47bd                	li	a5,15
200185d4:	00f71463          	bne	a4,a5,200185dc <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:467
		return 23;
200185d8:	47dd                	li	a5,23
200185da:	a27d                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:469
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
200185dc:	fec42703          	lw	a4,-20(s0)
200185e0:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200185e4:	00f71963          	bne	a4,a5,200185f6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:469 (discriminator 1)
200185e8:	fe842703          	lw	a4,-24(s0)
200185ec:	47c1                	li	a5,16
200185ee:	00f71463          	bne	a4,a5,200185f6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:470
		return 24;
200185f2:	47e1                	li	a5,24
200185f4:	aa51                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:472
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
200185f6:	fec42703          	lw	a4,-20(s0)
200185fa:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200185fe:	00f71963          	bne	a4,a5,20018610 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:472 (discriminator 1)
20018602:	fe842703          	lw	a4,-24(s0)
20018606:	47c5                	li	a5,17
20018608:	00f71463          	bne	a4,a5,20018610 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:473
		return 25;
2001860c:	47e5                	li	a5,25
2001860e:	aaad                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:475
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
20018610:	fec42703          	lw	a4,-20(s0)
20018614:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018618:	00f71963          	bne	a4,a5,2001862a <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:475 (discriminator 1)
2001861c:	fe842703          	lw	a4,-24(s0)
20018620:	47c9                	li	a5,18
20018622:	00f71463          	bne	a4,a5,2001862a <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:476
		return 26;
20018626:	47e9                	li	a5,26
20018628:	a285                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:478
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
2001862a:	fec42703          	lw	a4,-20(s0)
2001862e:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018632:	00f71963          	bne	a4,a5,20018644 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:478 (discriminator 1)
20018636:	fe842703          	lw	a4,-24(s0)
2001863a:	47cd                	li	a5,19
2001863c:	00f71463          	bne	a4,a5,20018644 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:479
		return 27;
20018640:	47ed                	li	a5,27
20018642:	a299                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:481
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20018644:	fec42703          	lw	a4,-20(s0)
20018648:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
2001864c:	00f71963          	bne	a4,a5,2001865e <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:481 (discriminator 1)
20018650:	fe842703          	lw	a4,-24(s0)
20018654:	47d1                	li	a5,20
20018656:	00f71463          	bne	a4,a5,2001865e <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:482
		return 28;
2001865a:	47f1                	li	a5,28
2001865c:	a235                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:484
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
2001865e:	fec42703          	lw	a4,-20(s0)
20018662:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018666:	00f71963          	bne	a4,a5,20018678 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:484 (discriminator 1)
2001866a:	fe842703          	lw	a4,-24(s0)
2001866e:	47d5                	li	a5,21
20018670:	00f71463          	bne	a4,a5,20018678 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:485
		return 29;
20018674:	47f5                	li	a5,29
20018676:	aa09                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:487
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
20018678:	fec42703          	lw	a4,-20(s0)
2001867c:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018680:	00f71963          	bne	a4,a5,20018692 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:487 (discriminator 1)
20018684:	fe842703          	lw	a4,-24(s0)
20018688:	47d9                	li	a5,22
2001868a:	00f71463          	bne	a4,a5,20018692 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:488
		return 30;
2001868e:	47f9                	li	a5,30
20018690:	a8e5                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:490
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20018692:	fec42703          	lw	a4,-20(s0)
20018696:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
2001869a:	00f71963          	bne	a4,a5,200186ac <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:490 (discriminator 1)
2001869e:	fe842703          	lw	a4,-24(s0)
200186a2:	47dd                	li	a5,23
200186a4:	00f71463          	bne	a4,a5,200186ac <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:491
		return 31;
200186a8:	47fd                	li	a5,31
200186aa:	a8f9                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:493
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
200186ac:	fec42703          	lw	a4,-20(s0)
200186b0:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200186b4:	00f71a63          	bne	a4,a5,200186c8 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:493 (discriminator 1)
200186b8:	fe842703          	lw	a4,-24(s0)
200186bc:	47e1                	li	a5,24
200186be:	00f71563          	bne	a4,a5,200186c8 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:494
		return 32;
200186c2:	02000793          	li	a5,32
200186c6:	a0c9                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:496
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
200186c8:	fec42703          	lw	a4,-20(s0)
200186cc:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200186d0:	00f71a63          	bne	a4,a5,200186e4 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:496 (discriminator 1)
200186d4:	fe842703          	lw	a4,-24(s0)
200186d8:	47e5                	li	a5,25
200186da:	00f71563          	bne	a4,a5,200186e4 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:497
		return 33;
200186de:	02100793          	li	a5,33
200186e2:	a05d                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:499
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
200186e4:	fec42703          	lw	a4,-20(s0)
200186e8:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
200186ec:	00f71a63          	bne	a4,a5,20018700 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:499 (discriminator 1)
200186f0:	fe842703          	lw	a4,-24(s0)
200186f4:	47e9                	li	a5,26
200186f6:	00f71563          	bne	a4,a5,20018700 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:500
		return 34;
200186fa:	02200793          	li	a5,34
200186fe:	a069                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:502
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
20018700:	fec42703          	lw	a4,-20(s0)
20018704:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018708:	00f71a63          	bne	a4,a5,2001871c <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:502 (discriminator 1)
2001870c:	fe842703          	lw	a4,-24(s0)
20018710:	47ed                	li	a5,27
20018712:	00f71563          	bne	a4,a5,2001871c <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:503
		return 35;
20018716:	02300793          	li	a5,35
2001871a:	a0bd                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:505
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
2001871c:	fec42703          	lw	a4,-20(s0)
20018720:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018724:	00f71a63          	bne	a4,a5,20018738 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:505 (discriminator 1)
20018728:	fe842703          	lw	a4,-24(s0)
2001872c:	47f1                	li	a5,28
2001872e:	00f71563          	bne	a4,a5,20018738 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:506
		return 36;
20018732:	02400793          	li	a5,36
20018736:	a889                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:508
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
20018738:	fec42703          	lw	a4,-20(s0)
2001873c:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018740:	00f71963          	bne	a4,a5,20018752 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:508 (discriminator 1)
20018744:	fe842703          	lw	a4,-24(s0)
20018748:	47f5                	li	a5,29
2001874a:	00f71463          	bne	a4,a5,20018752 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:509
		return 27;
2001874e:	47ed                	li	a5,27
20018750:	a825                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:511
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20018752:	fec42703          	lw	a4,-20(s0)
20018756:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
2001875a:	00f71963          	bne	a4,a5,2001876c <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:511 (discriminator 1)
2001875e:	fe842703          	lw	a4,-24(s0)
20018762:	47f9                	li	a5,30
20018764:	00f71463          	bne	a4,a5,2001876c <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:512
		return 28;
20018768:	47f1                	li	a5,28
2001876a:	a839                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:514
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
2001876c:	fec42703          	lw	a4,-20(s0)
20018770:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018774:	00f71963          	bne	a4,a5,20018786 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:514 (discriminator 1)
20018778:	fe842703          	lw	a4,-24(s0)
2001877c:	47fd                	li	a5,31
2001877e:	00f71463          	bne	a4,a5,20018786 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:515
		return 29;
20018782:	47f5                	li	a5,29
20018784:	a011                	j	20018788 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:518
		return 0;
20018786:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:520
}
20018788:	853e                	mv	a0,a5
2001878a:	4472                	lw	s0,28(sp)
2001878c:	6105                	addi	sp,sp,32
2001878e:	8082                	ret

20018790 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio, long source)
{
20018790:	7179                	addi	sp,sp,-48
20018792:	d606                	sw	ra,44(sp)
20018794:	d422                	sw	s0,40(sp)
20018796:	1800                	addi	s0,sp,48
20018798:	fca42e23          	sw	a0,-36(s0)
2001879c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200187a0:	fdc42503          	lw	a0,-36(s0)
200187a4:	c3fff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
200187a8:	87aa                	mv	a5,a0
200187aa:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  |= source;
200187ae:	fec42783          	lw	a5,-20(s0)
200187b2:	0791                	addi	a5,a5,4
200187b4:	4398                	lw	a4,0(a5)
200187b6:	fd842783          	lw	a5,-40(s0)
200187ba:	fec42683          	lw	a3,-20(s0)
200187be:	0691                	addi	a3,a3,4
200187c0:	8fd9                	or	a5,a5,a4
200187c2:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:18

    return 0;
200187c4:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19
}
200187c6:	853e                	mv	a0,a5
200187c8:	50b2                	lw	ra,44(sp)
200187ca:	5422                	lw	s0,40(sp)
200187cc:	6145                	addi	sp,sp,48
200187ce:	8082                	ret

200187d0 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:22

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio, long source)
{
200187d0:	7179                	addi	sp,sp,-48
200187d2:	d606                	sw	ra,44(sp)
200187d4:	d422                	sw	s0,40(sp)
200187d6:	1800                	addi	s0,sp,48
200187d8:	fca42e23          	sw	a0,-36(s0)
200187dc:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200187e0:	fdc42503          	lw	a0,-36(s0)
200187e4:	bffff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
200187e8:	87aa                	mv	a5,a0
200187ea:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:25

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  &= ~source;
200187ee:	fec42783          	lw	a5,-20(s0)
200187f2:	0791                	addi	a5,a5,4
200187f4:	439c                	lw	a5,0(a5)
200187f6:	fd842703          	lw	a4,-40(s0)
200187fa:	fff74713          	not	a4,a4
200187fe:	86ba                	mv	a3,a4
20018800:	fec42703          	lw	a4,-20(s0)
20018804:	0711                	addi	a4,a4,4
20018806:	8ff5                	and	a5,a5,a3
20018808:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    return 0;
2001880a:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:28
}
2001880c:	853e                	mv	a0,a5
2001880e:	50b2                	lw	ra,44(sp)
20018810:	5422                	lw	s0,40(sp)
20018812:	6145                	addi	sp,sp,48
20018814:	8082                	ret

20018816 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:31

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio)
{
20018816:	7179                	addi	sp,sp,-48
20018818:	d606                	sw	ra,44(sp)
2001881a:	d422                	sw	s0,40(sp)
2001881c:	1800                	addi	s0,sp,48
2001881e:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20018822:	fdc42503          	lw	a0,-36(s0)
20018826:	bbdff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
2001882a:	87aa                	mv	a5,a0
2001882c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:34

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
20018830:	fec42783          	lw	a5,-20(s0)
20018834:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35
}
20018836:	853e                	mv	a0,a5
20018838:	50b2                	lw	ra,44(sp)
2001883a:	5422                	lw	s0,40(sp)
2001883c:	6145                	addi	sp,sp,48
2001883e:	8082                	ret

20018840 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:38

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio)
{
20018840:	7179                	addi	sp,sp,-48
20018842:	d606                	sw	ra,44(sp)
20018844:	d422                	sw	s0,40(sp)
20018846:	1800                	addi	s0,sp,48
20018848:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001884c:	fdc42503          	lw	a0,-36(s0)
20018850:	b93ff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
20018854:	87aa                	mv	a5,a0
20018856:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:41

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
2001885a:	fec42783          	lw	a5,-20(s0)
2001885e:	07b1                	addi	a5,a5,12
20018860:	439c                	lw	a5,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42
}
20018862:	853e                	mv	a0,a5
20018864:	50b2                	lw	ra,44(sp)
20018866:	5422                	lw	s0,40(sp)
20018868:	6145                	addi	sp,sp,48
2001886a:	8082                	ret

2001886c <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:46


int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio, long source)
{
2001886c:	7179                	addi	sp,sp,-48
2001886e:	d606                	sw	ra,44(sp)
20018870:	d422                	sw	s0,40(sp)
20018872:	1800                	addi	s0,sp,48
20018874:	fca42e23          	sw	a0,-36(s0)
20018878:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001887c:	fdc42503          	lw	a0,-36(s0)
20018880:	b63ff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
20018884:	87aa                	mv	a5,a0
20018886:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:49

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  &= ~source;
2001888a:	fec42783          	lw	a5,-20(s0)
2001888e:	07a1                	addi	a5,a5,8
20018890:	439c                	lw	a5,0(a5)
20018892:	fd842703          	lw	a4,-40(s0)
20018896:	fff74713          	not	a4,a4
2001889a:	86ba                	mv	a3,a4
2001889c:	fec42703          	lw	a4,-20(s0)
200188a0:	0721                	addi	a4,a4,8
200188a2:	8ff5                	and	a5,a5,a3
200188a4:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    return 0;
200188a6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:52
}
200188a8:	853e                	mv	a0,a5
200188aa:	50b2                	lw	ra,44(sp)
200188ac:	5422                	lw	s0,40(sp)
200188ae:	6145                	addi	sp,sp,48
200188b0:	8082                	ret

200188b2 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:55

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio, long source)
{
200188b2:	7179                	addi	sp,sp,-48
200188b4:	d606                	sw	ra,44(sp)
200188b6:	d422                	sw	s0,40(sp)
200188b8:	1800                	addi	s0,sp,48
200188ba:	fca42e23          	sw	a0,-36(s0)
200188be:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:56
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200188c2:	fdc42503          	lw	a0,-36(s0)
200188c6:	b1dff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
200188ca:	87aa                	mv	a5,a0
200188cc:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  |= source;
200188d0:	fec42783          	lw	a5,-20(s0)
200188d4:	07a1                	addi	a5,a5,8
200188d6:	4398                	lw	a4,0(a5)
200188d8:	fd842783          	lw	a5,-40(s0)
200188dc:	fec42683          	lw	a3,-20(s0)
200188e0:	06a1                	addi	a3,a3,8
200188e2:	8fd9                	or	a5,a5,a4
200188e4:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:60

    return 0;
200188e6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61
}
200188e8:	853e                	mv	a0,a5
200188ea:	50b2                	lw	ra,44(sp)
200188ec:	5422                	lw	s0,40(sp)
200188ee:	6145                	addi	sp,sp,48
200188f0:	8082                	ret

200188f2 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio, long value)
{
200188f2:	7179                	addi	sp,sp,-48
200188f4:	d606                	sw	ra,44(sp)
200188f6:	d422                	sw	s0,40(sp)
200188f8:	1800                	addi	s0,sp,48
200188fa:	fca42e23          	sw	a0,-36(s0)
200188fe:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:65
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20018902:	fdc42503          	lw	a0,-36(s0)
20018906:	addff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
2001890a:	87aa                	mv	a5,a0
2001890c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |= value;
20018910:	fec42783          	lw	a5,-20(s0)
20018914:	07b1                	addi	a5,a5,12
20018916:	4398                	lw	a4,0(a5)
20018918:	fd842783          	lw	a5,-40(s0)
2001891c:	fec42683          	lw	a3,-20(s0)
20018920:	06b1                	addi	a3,a3,12
20018922:	8fd9                	or	a5,a5,a4
20018924:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:69

    return 0;
20018926:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70
}
20018928:	853e                	mv	a0,a5
2001892a:	50b2                	lw	ra,44(sp)
2001892c:	5422                	lw	s0,40(sp)
2001892e:	6145                	addi	sp,sp,48
20018930:	8082                	ret

20018932 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio, long value)
{
20018932:	7179                	addi	sp,sp,-48
20018934:	d606                	sw	ra,44(sp)
20018936:	d422                	sw	s0,40(sp)
20018938:	1800                	addi	s0,sp,48
2001893a:	fca42e23          	sw	a0,-36(s0)
2001893e:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20018942:	fdc42503          	lw	a0,-36(s0)
20018946:	a9dff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
2001894a:	87aa                	mv	a5,a0
2001894c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:76

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &= ~value;
20018950:	fec42783          	lw	a5,-20(s0)
20018954:	07b1                	addi	a5,a5,12
20018956:	439c                	lw	a5,0(a5)
20018958:	fd842703          	lw	a4,-40(s0)
2001895c:	fff74713          	not	a4,a4
20018960:	86ba                	mv	a3,a4
20018962:	fec42703          	lw	a4,-20(s0)
20018966:	0731                	addi	a4,a4,12
20018968:	8ff5                	and	a5,a5,a3
2001896a:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78

    return 0;
2001896c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:79
}
2001896e:	853e                	mv	a0,a5
20018970:	50b2                	lw	ra,44(sp)
20018972:	5422                	lw	s0,40(sp)
20018974:	6145                	addi	sp,sp,48
20018976:	8082                	ret

20018978 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:82

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio, long value)
{
20018978:	7179                	addi	sp,sp,-48
2001897a:	d606                	sw	ra,44(sp)
2001897c:	d422                	sw	s0,40(sp)
2001897e:	1800                	addi	s0,sp,48
20018980:	fca42e23          	sw	a0,-36(s0)
20018984:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20018988:	fdc42503          	lw	a0,-36(s0)
2001898c:	a57ff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
20018990:	87aa                	mv	a5,a0
20018992:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
20018996:	fec42783          	lw	a5,-20(s0)
2001899a:	07b1                	addi	a5,a5,12
2001899c:	4398                	lw	a4,0(a5)
2001899e:	fd842783          	lw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
200189a2:	fec42683          	lw	a3,-20(s0)
200189a6:	06b1                	addi	a3,a3,12
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:86
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
200189a8:	8fb9                	xor	a5,a5,a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
200189aa:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88

    return 0;
200189ac:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:89
}
200189ae:	853e                	mv	a0,a5
200189b0:	50b2                	lw	ra,44(sp)
200189b2:	5422                	lw	s0,40(sp)
200189b4:	6145                	addi	sp,sp,48
200189b6:	8082                	ret

200189b8 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source, long dest)
{
200189b8:	7179                	addi	sp,sp,-48
200189ba:	d606                	sw	ra,44(sp)
200189bc:	d422                	sw	s0,40(sp)
200189be:	1800                	addi	s0,sp,48
200189c0:	fca42e23          	sw	a0,-36(s0)
200189c4:	fcb42c23          	sw	a1,-40(s0)
200189c8:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:93
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200189cc:	fdc42503          	lw	a0,-36(s0)
200189d0:	a13ff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
200189d4:	87aa                	mv	a5,a0
200189d6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) &= ~source;
200189da:	fec42783          	lw	a5,-20(s0)
200189de:	03c78793          	addi	a5,a5,60
200189e2:	439c                	lw	a5,0(a5)
200189e4:	fd842703          	lw	a4,-40(s0)
200189e8:	fff74713          	not	a4,a4
200189ec:	86ba                	mv	a3,a4
200189ee:	fec42703          	lw	a4,-20(s0)
200189f2:	03c70713          	addi	a4,a4,60
200189f6:	8ff5                	and	a5,a5,a3
200189f8:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  |= dest;
200189fa:	fec42783          	lw	a5,-20(s0)
200189fe:	03878793          	addi	a5,a5,56
20018a02:	4398                	lw	a4,0(a5)
20018a04:	fd442783          	lw	a5,-44(s0)
20018a08:	fec42683          	lw	a3,-20(s0)
20018a0c:	03868693          	addi	a3,a3,56
20018a10:	8fd9                	or	a5,a5,a4
20018a12:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:98

    return 0;
20018a14:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99
}
20018a16:	853e                	mv	a0,a5
20018a18:	50b2                	lw	ra,44(sp)
20018a1a:	5422                	lw	s0,40(sp)
20018a1c:	6145                	addi	sp,sp,48
20018a1e:	8082                	ret

20018a20 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:102

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio, long source)
{
20018a20:	7179                	addi	sp,sp,-48
20018a22:	d606                	sw	ra,44(sp)
20018a24:	d422                	sw	s0,40(sp)
20018a26:	1800                	addi	s0,sp,48
20018a28:	fca42e23          	sw	a0,-36(s0)
20018a2c:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20018a30:	fdc42503          	lw	a0,-36(s0)
20018a34:	9afff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
20018a38:	87aa                	mv	a5,a0
20018a3a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:105

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  &= ~source;
20018a3e:	fec42783          	lw	a5,-20(s0)
20018a42:	03878793          	addi	a5,a5,56
20018a46:	439c                	lw	a5,0(a5)
20018a48:	fd842703          	lw	a4,-40(s0)
20018a4c:	fff74713          	not	a4,a4
20018a50:	86ba                	mv	a3,a4
20018a52:	fec42703          	lw	a4,-20(s0)
20018a56:	03870713          	addi	a4,a4,56
20018a5a:	8ff5                	and	a5,a5,a3
20018a5c:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107

    return 0;
20018a5e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20018a60:	853e                	mv	a0,a5
20018a62:	50b2                	lw	ra,44(sp)
20018a64:	5422                	lw	s0,40(sp)
20018a66:	6145                	addi	sp,sp,48
20018a68:	8082                	ret

20018a6a <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio, long source, int intr_type)
{
20018a6a:	7179                	addi	sp,sp,-48
20018a6c:	d606                	sw	ra,44(sp)
20018a6e:	d422                	sw	s0,40(sp)
20018a70:	1800                	addi	s0,sp,48
20018a72:	fca42e23          	sw	a0,-36(s0)
20018a76:	fcb42c23          	sw	a1,-40(s0)
20018a7a:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20018a7e:	fdc42503          	lw	a0,-36(s0)
20018a82:	961ff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
20018a86:	87aa                	mv	a5,a0
20018a88:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    switch (intr_type)
20018a8c:	fd442703          	lw	a4,-44(s0)
20018a90:	479d                	li	a5,7
20018a92:	1ce7e963          	bltu	a5,a4,20018c64 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20018a96:	fd442783          	lw	a5,-44(s0)
20018a9a:	00279713          	slli	a4,a5,0x2
20018a9e:	2001a7b7          	lui	a5,0x2001a
20018aa2:	7d078793          	addi	a5,a5,2000 # 2001a7d0 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20018aa6:	97ba                	add	a5,a5,a4
20018aa8:	439c                	lw	a5,0(a5)
20018aaa:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117
    {
        case METAL_GPIO_INT_DISABLE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  &= ~source;
20018aac:	fec42783          	lw	a5,-20(s0)
20018ab0:	07e1                	addi	a5,a5,24
20018ab2:	439c                	lw	a5,0(a5)
20018ab4:	fd842703          	lw	a4,-40(s0)
20018ab8:	fff74713          	not	a4,a4
20018abc:	86ba                	mv	a3,a4
20018abe:	fec42703          	lw	a4,-20(s0)
20018ac2:	0761                	addi	a4,a4,24
20018ac4:	8ff5                	and	a5,a5,a3
20018ac6:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  &= ~source;
20018ac8:	fec42783          	lw	a5,-20(s0)
20018acc:	02078793          	addi	a5,a5,32
20018ad0:	439c                	lw	a5,0(a5)
20018ad2:	fd842703          	lw	a4,-40(s0)
20018ad6:	fff74713          	not	a4,a4
20018ada:	86ba                	mv	a3,a4
20018adc:	fec42703          	lw	a4,-20(s0)
20018ae0:	02070713          	addi	a4,a4,32
20018ae4:	8ff5                	and	a5,a5,a3
20018ae6:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:119
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  &= ~source;
20018ae8:	fec42783          	lw	a5,-20(s0)
20018aec:	02878793          	addi	a5,a5,40
20018af0:	439c                	lw	a5,0(a5)
20018af2:	fd842703          	lw	a4,-40(s0)
20018af6:	fff74713          	not	a4,a4
20018afa:	86ba                	mv	a3,a4
20018afc:	fec42703          	lw	a4,-20(s0)
20018b00:	02870713          	addi	a4,a4,40
20018b04:	8ff5                	and	a5,a5,a3
20018b06:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:120
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  &= ~source;
20018b08:	fec42783          	lw	a5,-20(s0)
20018b0c:	03078793          	addi	a5,a5,48
20018b10:	439c                	lw	a5,0(a5)
20018b12:	fd842703          	lw	a4,-40(s0)
20018b16:	fff74713          	not	a4,a4
20018b1a:	86ba                	mv	a3,a4
20018b1c:	fec42703          	lw	a4,-20(s0)
20018b20:	03070713          	addi	a4,a4,48
20018b24:	8ff5                	and	a5,a5,a3
20018b26:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121
            break;
20018b28:	aa35                	j	20018c64 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:123
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20018b2a:	fec42783          	lw	a5,-20(s0)
20018b2e:	07e1                	addi	a5,a5,24
20018b30:	4398                	lw	a4,0(a5)
20018b32:	fd842783          	lw	a5,-40(s0)
20018b36:	fec42683          	lw	a3,-20(s0)
20018b3a:	06e1                	addi	a3,a3,24
20018b3c:	8fd9                	or	a5,a5,a4
20018b3e:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124
            break;
20018b40:	a215                	j	20018c64 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:126
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20018b42:	fec42783          	lw	a5,-20(s0)
20018b46:	02078793          	addi	a5,a5,32
20018b4a:	4398                	lw	a4,0(a5)
20018b4c:	fd842783          	lw	a5,-40(s0)
20018b50:	fec42683          	lw	a3,-20(s0)
20018b54:	02068693          	addi	a3,a3,32
20018b58:	8fd9                	or	a5,a5,a4
20018b5a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
            break;
20018b5c:	a221                	j	20018c64 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20018b5e:	fec42783          	lw	a5,-20(s0)
20018b62:	07e1                	addi	a5,a5,24
20018b64:	4398                	lw	a4,0(a5)
20018b66:	fd842783          	lw	a5,-40(s0)
20018b6a:	fec42683          	lw	a3,-20(s0)
20018b6e:	06e1                	addi	a3,a3,24
20018b70:	8fd9                	or	a5,a5,a4
20018b72:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:130
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20018b74:	fec42783          	lw	a5,-20(s0)
20018b78:	02078793          	addi	a5,a5,32
20018b7c:	4398                	lw	a4,0(a5)
20018b7e:	fd842783          	lw	a5,-40(s0)
20018b82:	fec42683          	lw	a3,-20(s0)
20018b86:	02068693          	addi	a3,a3,32
20018b8a:	8fd9                	or	a5,a5,a4
20018b8c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
            break;
20018b8e:	a8d9                	j	20018c64 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20018b90:	fec42783          	lw	a5,-20(s0)
20018b94:	02878793          	addi	a5,a5,40
20018b98:	4398                	lw	a4,0(a5)
20018b9a:	fd842783          	lw	a5,-40(s0)
20018b9e:	fec42683          	lw	a3,-20(s0)
20018ba2:	02868693          	addi	a3,a3,40
20018ba6:	8fd9                	or	a5,a5,a4
20018ba8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
            break;
20018baa:	a86d                	j	20018c64 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:136
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20018bac:	fec42783          	lw	a5,-20(s0)
20018bb0:	03078793          	addi	a5,a5,48
20018bb4:	4398                	lw	a4,0(a5)
20018bb6:	fd842783          	lw	a5,-40(s0)
20018bba:	fec42683          	lw	a3,-20(s0)
20018bbe:	03068693          	addi	a3,a3,48
20018bc2:	8fd9                	or	a5,a5,a4
20018bc4:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
            break;
20018bc6:	a879                	j	20018c64 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:139
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20018bc8:	fec42783          	lw	a5,-20(s0)
20018bcc:	02878793          	addi	a5,a5,40
20018bd0:	4398                	lw	a4,0(a5)
20018bd2:	fd842783          	lw	a5,-40(s0)
20018bd6:	fec42683          	lw	a3,-20(s0)
20018bda:	02868693          	addi	a3,a3,40
20018bde:	8fd9                	or	a5,a5,a4
20018be0:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:140
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20018be2:	fec42783          	lw	a5,-20(s0)
20018be6:	03078793          	addi	a5,a5,48
20018bea:	4398                	lw	a4,0(a5)
20018bec:	fd842783          	lw	a5,-40(s0)
20018bf0:	fec42683          	lw	a3,-20(s0)
20018bf4:	03068693          	addi	a3,a3,48
20018bf8:	8fd9                	or	a5,a5,a4
20018bfa:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
            break;
20018bfc:	a0a5                	j	20018c64 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:143
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20018bfe:	fec42783          	lw	a5,-20(s0)
20018c02:	07e1                	addi	a5,a5,24
20018c04:	4398                	lw	a4,0(a5)
20018c06:	fd842783          	lw	a5,-40(s0)
20018c0a:	fec42683          	lw	a3,-20(s0)
20018c0e:	06e1                	addi	a3,a3,24
20018c10:	8fd9                	or	a5,a5,a4
20018c12:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:144
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
20018c14:	fec42783          	lw	a5,-20(s0)
20018c18:	02078793          	addi	a5,a5,32
20018c1c:	4398                	lw	a4,0(a5)
20018c1e:	fd842783          	lw	a5,-40(s0)
20018c22:	fec42683          	lw	a3,-20(s0)
20018c26:	02068693          	addi	a3,a3,32
20018c2a:	8fd9                	or	a5,a5,a4
20018c2c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20018c2e:	fec42783          	lw	a5,-20(s0)
20018c32:	02878793          	addi	a5,a5,40
20018c36:	4398                	lw	a4,0(a5)
20018c38:	fd842783          	lw	a5,-40(s0)
20018c3c:	fec42683          	lw	a3,-20(s0)
20018c40:	02868693          	addi	a3,a3,40
20018c44:	8fd9                	or	a5,a5,a4
20018c46:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:146
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20018c48:	fec42783          	lw	a5,-20(s0)
20018c4c:	03078793          	addi	a5,a5,48
20018c50:	4398                	lw	a4,0(a5)
20018c52:	fd842783          	lw	a5,-40(s0)
20018c56:	fec42683          	lw	a3,-20(s0)
20018c5a:	03068693          	addi	a3,a3,48
20018c5e:	8fd9                	or	a5,a5,a4
20018c60:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
            break;
20018c62:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:149
    }
    return 0;
20018c64:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:150
}
20018c66:	853e                	mv	a0,a5
20018c68:	50b2                	lw	ra,44(sp)
20018c6a:	5422                	lw	s0,40(sp)
20018c6c:	6145                	addi	sp,sp,48
20018c6e:	8082                	ret

20018c70 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:153

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source, int intr_type)
{
20018c70:	7179                	addi	sp,sp,-48
20018c72:	d606                	sw	ra,44(sp)
20018c74:	d422                	sw	s0,40(sp)
20018c76:	1800                	addi	s0,sp,48
20018c78:	fca42e23          	sw	a0,-36(s0)
20018c7c:	fcb42c23          	sw	a1,-40(s0)
20018c80:	fcc42a23          	sw	a2,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:154
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20018c84:	fdc42503          	lw	a0,-36(s0)
20018c88:	f5aff0ef          	jal	ra,200183e2 <__metal_driver_sifive_gpio0_base>
20018c8c:	87aa                	mv	a5,a0
20018c8e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156

    switch (intr_type)
20018c92:	fd442703          	lw	a4,-44(s0)
20018c96:	479d                	li	a5,7
20018c98:	14e7ea63          	bltu	a5,a4,20018dec <__metal_driver_sifive_gpio0_clear_int+0x17c>
20018c9c:	fd442783          	lw	a5,-44(s0)
20018ca0:	00279713          	slli	a4,a5,0x2
20018ca4:	2001a7b7          	lui	a5,0x2001a
20018ca8:	7f078793          	addi	a5,a5,2032 # 2001a7f0 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20018cac:	97ba                	add	a5,a5,a4
20018cae:	439c                	lw	a5,0(a5)
20018cb0:	8782                	jr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    {
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20018cb2:	fec42783          	lw	a5,-20(s0)
20018cb6:	07f1                	addi	a5,a5,28
20018cb8:	4398                	lw	a4,0(a5)
20018cba:	fd842783          	lw	a5,-40(s0)
20018cbe:	fec42683          	lw	a3,-20(s0)
20018cc2:	06f1                	addi	a3,a3,28
20018cc4:	8fd9                	or	a5,a5,a4
20018cc6:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:160
            break;
20018cc8:	a215                	j	20018dec <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20018cca:	fec42783          	lw	a5,-20(s0)
20018cce:	02478793          	addi	a5,a5,36
20018cd2:	4398                	lw	a4,0(a5)
20018cd4:	fd842783          	lw	a5,-40(s0)
20018cd8:	fec42683          	lw	a3,-20(s0)
20018cdc:	02468693          	addi	a3,a3,36
20018ce0:	8fd9                	or	a5,a5,a4
20018ce2:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:163
            break;
20018ce4:	a221                	j	20018dec <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20018ce6:	fec42783          	lw	a5,-20(s0)
20018cea:	07f1                	addi	a5,a5,28
20018cec:	4398                	lw	a4,0(a5)
20018cee:	fd842783          	lw	a5,-40(s0)
20018cf2:	fec42683          	lw	a3,-20(s0)
20018cf6:	06f1                	addi	a3,a3,28
20018cf8:	8fd9                	or	a5,a5,a4
20018cfa:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:166
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20018cfc:	fec42783          	lw	a5,-20(s0)
20018d00:	02478793          	addi	a5,a5,36
20018d04:	4398                	lw	a4,0(a5)
20018d06:	fd842783          	lw	a5,-40(s0)
20018d0a:	fec42683          	lw	a3,-20(s0)
20018d0e:	02468693          	addi	a3,a3,36
20018d12:	8fd9                	or	a5,a5,a4
20018d14:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
            break;
20018d16:	a8d9                	j	20018dec <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20018d18:	fec42783          	lw	a5,-20(s0)
20018d1c:	02c78793          	addi	a5,a5,44
20018d20:	4398                	lw	a4,0(a5)
20018d22:	fd842783          	lw	a5,-40(s0)
20018d26:	fec42683          	lw	a3,-20(s0)
20018d2a:	02c68693          	addi	a3,a3,44
20018d2e:	8fd9                	or	a5,a5,a4
20018d30:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:170
            break;
20018d32:	a86d                	j	20018dec <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20018d34:	fec42783          	lw	a5,-20(s0)
20018d38:	03478793          	addi	a5,a5,52
20018d3c:	4398                	lw	a4,0(a5)
20018d3e:	fd842783          	lw	a5,-40(s0)
20018d42:	fec42683          	lw	a3,-20(s0)
20018d46:	03468693          	addi	a3,a3,52
20018d4a:	8fd9                	or	a5,a5,a4
20018d4c:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:173
            break;
20018d4e:	a879                	j	20018dec <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20018d50:	fec42783          	lw	a5,-20(s0)
20018d54:	02c78793          	addi	a5,a5,44
20018d58:	4398                	lw	a4,0(a5)
20018d5a:	fd842783          	lw	a5,-40(s0)
20018d5e:	fec42683          	lw	a3,-20(s0)
20018d62:	02c68693          	addi	a3,a3,44
20018d66:	8fd9                	or	a5,a5,a4
20018d68:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:176
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20018d6a:	fec42783          	lw	a5,-20(s0)
20018d6e:	03478793          	addi	a5,a5,52
20018d72:	4398                	lw	a4,0(a5)
20018d74:	fd842783          	lw	a5,-40(s0)
20018d78:	fec42683          	lw	a3,-20(s0)
20018d7c:	03468693          	addi	a3,a3,52
20018d80:	8fd9                	or	a5,a5,a4
20018d82:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:177
            break;
20018d84:	a0a5                	j	20018dec <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20018d86:	fec42783          	lw	a5,-20(s0)
20018d8a:	07f1                	addi	a5,a5,28
20018d8c:	4398                	lw	a4,0(a5)
20018d8e:	fd842783          	lw	a5,-40(s0)
20018d92:	fec42683          	lw	a3,-20(s0)
20018d96:	06f1                	addi	a3,a3,28
20018d98:	8fd9                	or	a5,a5,a4
20018d9a:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:180
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20018d9c:	fec42783          	lw	a5,-20(s0)
20018da0:	02478793          	addi	a5,a5,36
20018da4:	4398                	lw	a4,0(a5)
20018da6:	fd842783          	lw	a5,-40(s0)
20018daa:	fec42683          	lw	a3,-20(s0)
20018dae:	02468693          	addi	a3,a3,36
20018db2:	8fd9                	or	a5,a5,a4
20018db4:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
20018db6:	fec42783          	lw	a5,-20(s0)
20018dba:	02c78793          	addi	a5,a5,44
20018dbe:	4398                	lw	a4,0(a5)
20018dc0:	fd842783          	lw	a5,-40(s0)
20018dc4:	fec42683          	lw	a3,-20(s0)
20018dc8:	02c68693          	addi	a3,a3,44
20018dcc:	8fd9                	or	a5,a5,a4
20018dce:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:182
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20018dd0:	fec42783          	lw	a5,-20(s0)
20018dd4:	03478793          	addi	a5,a5,52
20018dd8:	4398                	lw	a4,0(a5)
20018dda:	fd842783          	lw	a5,-40(s0)
20018dde:	fec42683          	lw	a3,-20(s0)
20018de2:	03468693          	addi	a3,a3,52
20018de6:	8fd9                	or	a5,a5,a4
20018de8:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:183
            break;
20018dea:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
    }
    return 0;
20018dec:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:186
}
20018dee:	853e                	mv	a0,a5
20018df0:	50b2                	lw	ra,44(sp)
20018df2:	5422                	lw	s0,40(sp)
20018df4:	6145                	addi	sp,sp,48
20018df6:	8082                	ret

20018df8 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:190

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio)
{
20018df8:	1101                	addi	sp,sp,-32
20018dfa:	ce06                	sw	ra,28(sp)
20018dfc:	cc22                	sw	s0,24(sp)
20018dfe:	1000                	addi	s0,sp,32
20018e00:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:191
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20018e04:	fec42503          	lw	a0,-20(s0)
20018e08:	e00ff0ef          	jal	ra,20018408 <__metal_driver_sifive_gpio0_interrupt_parent>
20018e0c:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
}
20018e0e:	853e                	mv	a0,a5
20018e10:	40f2                	lw	ra,28(sp)
20018e12:	4462                	lw	s0,24(sp)
20018e14:	6105                	addi	sp,sp,32
20018e16:	8082                	ret

20018e18 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin)
{
20018e18:	7179                	addi	sp,sp,-48
20018e1a:	d606                	sw	ra,44(sp)
20018e1c:	d422                	sw	s0,40(sp)
20018e1e:	1800                	addi	s0,sp,48
20018e20:	fca42e23          	sw	a0,-36(s0)
20018e24:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:197
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20018e28:	fd842583          	lw	a1,-40(s0)
20018e2c:	fdc42503          	lw	a0,-36(s0)
20018e30:	e02ff0ef          	jal	ra,20018432 <__metal_driver_sifive_gpio0_interrupt_lines>
20018e34:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    return irq;
20018e38:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
}
20018e3c:	853e                	mv	a0,a5
20018e3e:	50b2                	lw	ra,44(sp)
20018e40:	5422                	lw	s0,40(sp)
20018e42:	6145                	addi	sp,sp,48
20018e44:	8082                	ret

20018e46 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:738
{
20018e46:	1101                	addi	sp,sp,-32
20018e48:	ce22                	sw	s0,28(sp)
20018e4a:	1000                	addi	s0,sp,32
20018e4c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:739
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20018e50:	fec42703          	lw	a4,-20(s0)
20018e54:	800017b7          	lui	a5,0x80001
20018e58:	a6078793          	addi	a5,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff234>
20018e5c:	00f71563          	bne	a4,a5,20018e66 <__metal_driver_sifive_uart0_control_base+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:740
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20018e60:	100137b7          	lui	a5,0x10013
20018e64:	a829                	j	20018e7e <__metal_driver_sifive_uart0_control_base+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:742
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20018e66:	fec42703          	lw	a4,-20(s0)
20018e6a:	800017b7          	lui	a5,0x80001
20018e6e:	a8078793          	addi	a5,a5,-1408 # 80000a80 <metal_segment_heap_target_end+0xfffff254>
20018e72:	00f71563          	bne	a4,a5,20018e7c <__metal_driver_sifive_uart0_control_base+0x36>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:743
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20018e76:	100237b7          	lui	a5,0x10023
20018e7a:	a011                	j	20018e7e <__metal_driver_sifive_uart0_control_base+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:746
		return 0;
20018e7c:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:748
}
20018e7e:	853e                	mv	a0,a5
20018e80:	4472                	lw	s0,28(sp)
20018e82:	6105                	addi	sp,sp,32
20018e84:	8082                	ret

20018e86 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:777
{
20018e86:	1101                	addi	sp,sp,-32
20018e88:	ce22                	sw	s0,28(sp)
20018e8a:	1000                	addi	s0,sp,32
20018e8c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:778
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20018e90:	fec42703          	lw	a4,-20(s0)
20018e94:	800017b7          	lui	a5,0x80001
20018e98:	a6078793          	addi	a5,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff234>
20018e9c:	00f71763          	bne	a4,a5,20018eaa <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:779
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20018ea0:	800007b7          	lui	a5,0x80000
20018ea4:	48878793          	addi	a5,a5,1160 # 80000488 <metal_segment_heap_target_end+0xffffec5c>
20018ea8:	a821                	j	20018ec0 <__metal_driver_sifive_uart0_interrupt_parent+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:781
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20018eaa:	fec42703          	lw	a4,-20(s0)
20018eae:	800017b7          	lui	a5,0x80001
20018eb2:	a8078793          	addi	a5,a5,-1408 # 80000a80 <metal_segment_heap_target_end+0xfffff254>
20018eb6:	00f71463          	bne	a4,a5,20018ebe <__metal_driver_sifive_uart0_interrupt_parent+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:782
		return NULL;
20018eba:	4781                	li	a5,0
20018ebc:	a011                	j	20018ec0 <__metal_driver_sifive_uart0_interrupt_parent+0x3a>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:785
		return 0;
20018ebe:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:787
}
20018ec0:	853e                	mv	a0,a5
20018ec2:	4472                	lw	s0,28(sp)
20018ec4:	6105                	addi	sp,sp,32
20018ec6:	8082                	ret

20018ec8 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:790
{
20018ec8:	1101                	addi	sp,sp,-32
20018eca:	ce22                	sw	s0,28(sp)
20018ecc:	1000                	addi	s0,sp,32
20018ece:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:791
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20018ed2:	fec42703          	lw	a4,-20(s0)
20018ed6:	800017b7          	lui	a5,0x80001
20018eda:	a6078793          	addi	a5,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff234>
20018ede:	00f71463          	bne	a4,a5,20018ee6 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:792
		return 3;
20018ee2:	478d                	li	a5,3
20018ee4:	a821                	j	20018efc <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:794
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20018ee6:	fec42703          	lw	a4,-20(s0)
20018eea:	800017b7          	lui	a5,0x80001
20018eee:	a8078793          	addi	a5,a5,-1408 # 80000a80 <metal_segment_heap_target_end+0xfffff254>
20018ef2:	00f71463          	bne	a4,a5,20018efa <__metal_driver_sifive_uart0_interrupt_line+0x32>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:795
		return 4;
20018ef6:	4791                	li	a5,4
20018ef8:	a011                	j	20018efc <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:798
		return 0;
20018efa:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:800
}
20018efc:	853e                	mv	a0,a5
20018efe:	4472                	lw	s0,28(sp)
20018f00:	6105                	addi	sp,sp,32
20018f02:	8082                	ret

20018f04 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:803
{
20018f04:	1101                	addi	sp,sp,-32
20018f06:	ce22                	sw	s0,28(sp)
20018f08:	1000                	addi	s0,sp,32
20018f0a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:804
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20018f0e:	fec42703          	lw	a4,-20(s0)
20018f12:	800017b7          	lui	a5,0x80001
20018f16:	a6078793          	addi	a5,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff234>
20018f1a:	00f71763          	bne	a4,a5,20018f28 <__metal_driver_sifive_uart0_clock+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:805
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20018f1e:	800017b7          	lui	a5,0x80001
20018f22:	ab878793          	addi	a5,a5,-1352 # 80000ab8 <metal_segment_heap_target_end+0xfffff28c>
20018f26:	a839                	j	20018f44 <__metal_driver_sifive_uart0_clock+0x40>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:807
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20018f28:	fec42703          	lw	a4,-20(s0)
20018f2c:	800017b7          	lui	a5,0x80001
20018f30:	a8078793          	addi	a5,a5,-1408 # 80000a80 <metal_segment_heap_target_end+0xfffff254>
20018f34:	00f71763          	bne	a4,a5,20018f42 <__metal_driver_sifive_uart0_clock+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:808
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20018f38:	800017b7          	lui	a5,0x80001
20018f3c:	ab878793          	addi	a5,a5,-1352 # 80000ab8 <metal_segment_heap_target_end+0xfffff28c>
20018f40:	a011                	j	20018f44 <__metal_driver_sifive_uart0_clock+0x40>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:811
		return 0;
20018f42:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:813
}
20018f44:	853e                	mv	a0,a5
20018f46:	4472                	lw	s0,28(sp)
20018f48:	6105                	addi	sp,sp,32
20018f4a:	8082                	ret

20018f4c <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:816
{
20018f4c:	1101                	addi	sp,sp,-32
20018f4e:	ce22                	sw	s0,28(sp)
20018f50:	1000                	addi	s0,sp,32
20018f52:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:817
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20018f56:	fec42703          	lw	a4,-20(s0)
20018f5a:	800017b7          	lui	a5,0x80001
20018f5e:	a6078793          	addi	a5,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff234>
20018f62:	00f71563          	bne	a4,a5,20018f6c <__metal_driver_sifive_uart0_pinmux+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:818
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20018f66:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018f6a:	a829                	j	20018f84 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:820
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20018f6c:	fec42703          	lw	a4,-20(s0)
20018f70:	800017b7          	lui	a5,0x80001
20018f74:	a8078793          	addi	a5,a5,-1408 # 80000a80 <metal_segment_heap_target_end+0xfffff254>
20018f78:	00f71563          	bne	a4,a5,20018f82 <__metal_driver_sifive_uart0_pinmux+0x36>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:821
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20018f7c:	81818793          	addi	a5,gp,-2024 # 80000ae0 <__metal_dt_gpio_10012000>
20018f80:	a011                	j	20018f84 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:824
		return 0;
20018f82:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:826
}
20018f84:	853e                	mv	a0,a5
20018f86:	4472                	lw	s0,28(sp)
20018f88:	6105                	addi	sp,sp,32
20018f8a:	8082                	ret

20018f8c <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:829
{
20018f8c:	1101                	addi	sp,sp,-32
20018f8e:	ce22                	sw	s0,28(sp)
20018f90:	1000                	addi	s0,sp,32
20018f92:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:830
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20018f96:	fec42703          	lw	a4,-20(s0)
20018f9a:	800017b7          	lui	a5,0x80001
20018f9e:	a6078793          	addi	a5,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff234>
20018fa2:	00f71563          	bne	a4,a5,20018fac <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:831
		return 196608;
20018fa6:	000307b7          	lui	a5,0x30
20018faa:	a829                	j	20018fc4 <__metal_driver_sifive_uart0_pinmux_output_selector+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:833
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20018fac:	fec42703          	lw	a4,-20(s0)
20018fb0:	800017b7          	lui	a5,0x80001
20018fb4:	a8078793          	addi	a5,a5,-1408 # 80000a80 <metal_segment_heap_target_end+0xfffff254>
20018fb8:	00f71563          	bne	a4,a5,20018fc2 <__metal_driver_sifive_uart0_pinmux_output_selector+0x36>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:834
		return 8650752;
20018fbc:	008407b7          	lui	a5,0x840
20018fc0:	a011                	j	20018fc4 <__metal_driver_sifive_uart0_pinmux_output_selector+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:837
		return 0;
20018fc2:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:839
}
20018fc4:	853e                	mv	a0,a5
20018fc6:	4472                	lw	s0,28(sp)
20018fc8:	6105                	addi	sp,sp,32
20018fca:	8082                	ret

20018fcc <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:842
{
20018fcc:	1101                	addi	sp,sp,-32
20018fce:	ce22                	sw	s0,28(sp)
20018fd0:	1000                	addi	s0,sp,32
20018fd2:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:843
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20018fd6:	fec42703          	lw	a4,-20(s0)
20018fda:	800017b7          	lui	a5,0x80001
20018fde:	a6078793          	addi	a5,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff234>
20018fe2:	00f71563          	bne	a4,a5,20018fec <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:844
		return 196608;
20018fe6:	000307b7          	lui	a5,0x30
20018fea:	a829                	j	20019004 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:846
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20018fec:	fec42703          	lw	a4,-20(s0)
20018ff0:	800017b7          	lui	a5,0x80001
20018ff4:	a8078793          	addi	a5,a5,-1408 # 80000a80 <metal_segment_heap_target_end+0xfffff254>
20018ff8:	00f71563          	bne	a4,a5,20019002 <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:847
		return 8650752;
20018ffc:	008407b7          	lui	a5,0x840
20019000:	a011                	j	20019004 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:850
		return 0;
20019002:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:852
}
20019004:	853e                	mv	a0,a5
20019006:	4472                	lw	s0,28(sp)
20019008:	6105                	addi	sp,sp,32
2001900a:	8082                	ret

2001900c <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:32
#define UART_REGB(offset)  (__METAL_ACCESS_ONCE((__metal_io_u8  *)UART_REG(offset)))
#define UART_REGW(offset)  (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart)
{
2001900c:	1101                	addi	sp,sp,-32
2001900e:	ce06                	sw	ra,28(sp)
20019010:	cc22                	sw	s0,24(sp)
20019012:	1000                	addi	s0,sp,32
20019014:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:33
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20019018:	fec42503          	lw	a0,-20(s0)
2001901c:	e6bff0ef          	jal	ra,20018e86 <__metal_driver_sifive_uart0_interrupt_parent>
20019020:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:34
}
20019022:	853e                	mv	a0,a5
20019024:	40f2                	lw	ra,28(sp)
20019026:	4462                	lw	s0,24(sp)
20019028:	6105                	addi	sp,sp,32
2001902a:	8082                	ret

2001902c <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:37

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart)
{
2001902c:	1101                	addi	sp,sp,-32
2001902e:	ce06                	sw	ra,28(sp)
20019030:	cc22                	sw	s0,24(sp)
20019032:	1000                	addi	s0,sp,32
20019034:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:38
    return (__metal_driver_sifive_uart0_interrupt_line(uart) + METAL_INTERRUPT_ID_GL0);
20019038:	fec42503          	lw	a0,-20(s0)
2001903c:	e8dff0ef          	jal	ra,20018ec8 <__metal_driver_sifive_uart0_interrupt_line>
20019040:	87aa                	mv	a5,a0
20019042:	02078793          	addi	a5,a5,32 # 840020 <__heap_size+0x83f820>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:39
}
20019046:	853e                	mv	a0,a5
20019048:	40f2                	lw	ra,28(sp)
2001904a:	4462                	lw	s0,24(sp)
2001904c:	6105                	addi	sp,sp,32
2001904e:	8082                	ret

20019050 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:43


int __metal_driver_sifive_uart0_txready(struct metal_uart *uart)
{
20019050:	7179                	addi	sp,sp,-48
20019052:	d606                	sw	ra,44(sp)
20019054:	d422                	sw	s0,40(sp)
20019056:	1800                	addi	s0,sp,48
20019058:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:44
  long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001905c:	fdc42503          	lw	a0,-36(s0)
20019060:	de7ff0ef          	jal	ra,20018e46 <__metal_driver_sifive_uart0_control_base>
20019064:	87aa                	mv	a5,a0
20019066:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:46

  return !((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
2001906a:	fec42783          	lw	a5,-20(s0)
2001906e:	439c                	lw	a5,0(a5)
20019070:	fff7c793          	not	a5,a5
20019074:	83fd                	srli	a5,a5,0x1f
20019076:	0ff7f793          	andi	a5,a5,255
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:47
}
2001907a:	853e                	mv	a0,a5
2001907c:	50b2                	lw	ra,44(sp)
2001907e:	5422                	lw	s0,40(sp)
20019080:	6145                	addi	sp,sp,48
20019082:	8082                	ret

20019084 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:51


int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c)
{
20019084:	7179                	addi	sp,sp,-48
20019086:	d606                	sw	ra,44(sp)
20019088:	d422                	sw	s0,40(sp)
2001908a:	1800                	addi	s0,sp,48
2001908c:	fca42e23          	sw	a0,-36(s0)
20019090:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:52
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20019094:	fdc42503          	lw	a0,-36(s0)
20019098:	dafff0ef          	jal	ra,20018e46 <__metal_driver_sifive_uart0_control_base>
2001909c:	87aa                	mv	a5,a0
2001909e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54

    while (!__metal_driver_sifive_uart0_txready(uart)) {
200190a2:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:54 (discriminator 1)
200190a4:	fdc42503          	lw	a0,-36(s0)
200190a8:	3765                	jal	20019050 <__metal_driver_sifive_uart0_txready>
200190aa:	87aa                	mv	a5,a0
200190ac:	dfe5                	beqz	a5,200190a4 <__metal_driver_sifive_uart0_putc+0x20>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:57
		/* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
200190ae:	fec42783          	lw	a5,-20(s0)
200190b2:	fd842703          	lw	a4,-40(s0)
200190b6:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:58
    return 0;
200190b8:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:59
}
200190ba:	853e                	mv	a0,a5
200190bc:	50b2                	lw	ra,44(sp)
200190be:	5422                	lw	s0,40(sp)
200190c0:	6145                	addi	sp,sp,48
200190c2:	8082                	ret

200190c4 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:63


int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c)
{
200190c4:	7179                	addi	sp,sp,-48
200190c6:	d606                	sw	ra,44(sp)
200190c8:	d422                	sw	s0,40(sp)
200190ca:	1800                	addi	s0,sp,48
200190cc:	fca42e23          	sw	a0,-36(s0)
200190d0:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:65
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200190d4:	fdc42503          	lw	a0,-36(s0)
200190d8:	d6fff0ef          	jal	ra,20018e46 <__metal_driver_sifive_uart0_control_base>
200190dc:	87aa                	mv	a5,a0
200190de:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:67
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);;
200190e2:	fec42783          	lw	a5,-20(s0)
200190e6:	0791                	addi	a5,a5,4
200190e8:	439c                	lw	a5,0(a5)
200190ea:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:68
    if( ch & UART_RXEMPTY ){
200190ee:	fe842783          	lw	a5,-24(s0)
200190f2:	0007d763          	bgez	a5,20019100 <__metal_driver_sifive_uart0_getc+0x3c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:69
      *c = -1; /* aka: EOF in most of the world */
200190f6:	fd842783          	lw	a5,-40(s0)
200190fa:	577d                	li	a4,-1
200190fc:	c398                	sw	a4,0(a5)
200190fe:	a801                	j	2001910e <__metal_driver_sifive_uart0_getc+0x4a>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:71
    } else {
      *c = ch & 0x0ff;
20019100:	fe842783          	lw	a5,-24(s0)
20019104:	0ff7f713          	andi	a4,a5,255
20019108:	fd842783          	lw	a5,-40(s0)
2001910c:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:73
    }
    return 0;
2001910e:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:74
}
20019110:	853e                	mv	a0,a5
20019112:	50b2                	lw	ra,44(sp)
20019114:	5422                	lw	s0,40(sp)
20019116:	6145                	addi	sp,sp,48
20019118:	8082                	ret

2001911a <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:78


int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart)
{
2001911a:	7179                	addi	sp,sp,-48
2001911c:	d622                	sw	s0,44(sp)
2001911e:	1800                	addi	s0,sp,48
20019120:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:79
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20019124:	fdc42783          	lw	a5,-36(s0)
20019128:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:80
    return uart->baud_rate;
2001912c:	fec42783          	lw	a5,-20(s0)
20019130:	43dc                	lw	a5,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:81
}
20019132:	853e                	mv	a0,a5
20019134:	5432                	lw	s0,44(sp)
20019136:	6145                	addi	sp,sp,48
20019138:	8082                	ret

2001913a <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:84

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart, int baud_rate)
{
2001913a:	7179                	addi	sp,sp,-48
2001913c:	d606                	sw	ra,44(sp)
2001913e:	d422                	sw	s0,40(sp)
20019140:	1800                	addi	s0,sp,48
20019142:	fca42e23          	sw	a0,-36(s0)
20019146:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:85
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2001914a:	fdc42783          	lw	a5,-36(s0)
2001914e:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:86
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20019152:	fdc42503          	lw	a0,-36(s0)
20019156:	cf1ff0ef          	jal	ra,20018e46 <__metal_driver_sifive_uart0_control_base>
2001915a:	87aa                	mv	a5,a0
2001915c:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:87
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20019160:	fdc42503          	lw	a0,-36(s0)
20019164:	da1ff0ef          	jal	ra,20018f04 <__metal_driver_sifive_uart0_clock>
20019168:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:89

    uart->baud_rate = baud_rate;
2001916c:	fd842703          	lw	a4,-40(s0)
20019170:	fec42783          	lw	a5,-20(s0)
20019174:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:91

    if (clock != NULL) {
20019176:	fe442783          	lw	a5,-28(s0)
2001917a:	cbb1                	beqz	a5,200191ce <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:92
        long clock_rate = clock->vtable->get_rate_hz(clock);
2001917c:	fe442783          	lw	a5,-28(s0)
20019180:	439c                	lw	a5,0(a5)
20019182:	439c                	lw	a5,0(a5)
20019184:	fe442503          	lw	a0,-28(s0)
20019188:	9782                	jalr	a5
2001918a:	fea42023          	sw	a0,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:93
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
2001918e:	fe042703          	lw	a4,-32(s0)
20019192:	fd842783          	lw	a5,-40(s0)
20019196:	02f747b3          	div	a5,a4,a5
2001919a:	fff78713          	addi	a4,a5,-1
2001919e:	fe842783          	lw	a5,-24(s0)
200191a2:	07e1                	addi	a5,a5,24
200191a4:	c398                	sw	a4,0(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:94
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
200191a6:	fe842783          	lw	a5,-24(s0)
200191aa:	07a1                	addi	a5,a5,8
200191ac:	439c                	lw	a5,0(a5)
200191ae:	fe842703          	lw	a4,-24(s0)
200191b2:	0721                	addi	a4,a4,8
200191b4:	0017e793          	ori	a5,a5,1
200191b8:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:95
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
200191ba:	fe842783          	lw	a5,-24(s0)
200191be:	07b1                	addi	a5,a5,12
200191c0:	439c                	lw	a5,0(a5)
200191c2:	fe842703          	lw	a4,-24(s0)
200191c6:	0731                	addi	a4,a4,12
200191c8:	0017e793          	ori	a5,a5,1
200191cc:	c31c                	sw	a5,0(a4)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:97
    }
    return 0;
200191ce:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:98
}
200191d0:	853e                	mv	a0,a5
200191d2:	50b2                	lw	ra,44(sp)
200191d4:	5422                	lw	s0,40(sp)
200191d6:	6145                	addi	sp,sp,48
200191d8:	8082                	ret

200191da <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:101

static void pre_rate_change_callback_func(void *priv)
{
200191da:	7139                	addi	sp,sp,-64
200191dc:	de06                	sw	ra,60(sp)
200191de:	dc22                	sw	s0,56(sp)
200191e0:	0080                	addi	s0,sp,64
200191e2:	fca42623          	sw	a0,-52(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:102
    struct __metal_driver_sifive_uart0 *uart = priv;
200191e6:	fcc42783          	lw	a5,-52(s0)
200191ea:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:103
    long control_base = __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
200191ee:	fcc42503          	lw	a0,-52(s0)
200191f2:	c55ff0ef          	jal	ra,20018e46 <__metal_driver_sifive_uart0_control_base>
200191f6:	87aa                	mv	a5,a0
200191f8:	fef42423          	sw	a5,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:104
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
200191fc:	fcc42503          	lw	a0,-52(s0)
20019200:	d05ff0ef          	jal	ra,20018f04 <__metal_driver_sifive_uart0_clock>
20019204:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:109

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20019208:	fe842783          	lw	a5,-24(s0)
2001920c:	07a1                	addi	a5,a5,8
2001920e:	4398                	lw	a4,0(a5)
20019210:	fe842783          	lw	a5,-24(s0)
20019214:	07a1                	addi	a5,a5,8
20019216:	86be                	mv	a3,a5
20019218:	fff907b7          	lui	a5,0xfff90
2001921c:	17fd                	addi	a5,a5,-1
2001921e:	8ff9                	and	a5,a5,a4
20019220:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:110
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20019222:	fe842783          	lw	a5,-24(s0)
20019226:	07a1                	addi	a5,a5,8
20019228:	4398                	lw	a4,0(a5)
2001922a:	fe842783          	lw	a5,-24(s0)
2001922e:	07a1                	addi	a5,a5,8
20019230:	86be                	mv	a3,a5
20019232:	67c1                	lui	a5,0x10
20019234:	8fd9                	or	a5,a5,a4
20019236:	c29c                	sw	a5,0(a3)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112

    while((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0) ;
20019238:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:112 (discriminator 1)
2001923a:	fe842783          	lw	a5,-24(s0)
2001923e:	07d1                	addi	a5,a5,20
20019240:	439c                	lw	a5,0(a5)
20019242:	8b85                	andi	a5,a5,1
20019244:	dbfd                	beqz	a5,2001923a <pre_rate_change_callback_func+0x60>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118

    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol = (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20019246:	fe842783          	lw	a5,-24(s0)
2001924a:	07a1                	addi	a5,a5,8
2001924c:	439c                	lw	a5,0(a5)
2001924e:	8b89                	andi	a5,a5,2
20019250:	c399                	beqz	a5,20019256 <pre_rate_change_callback_func+0x7c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 1)
20019252:	47a5                	li	a5,9
20019254:	a011                	j	20019258 <pre_rate_change_callback_func+0x7e>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 2)
20019256:	47a9                	li	a5,10
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 4)
20019258:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:119 (discriminator 4)
    long clk_freq = clock->vtable->get_rate_hz(clock);
2001925c:	fe442783          	lw	a5,-28(s0)
20019260:	439c                	lw	a5,0(a5)
20019262:	439c                	lw	a5,0(a5)
20019264:	fe442503          	lw	a0,-28(s0)
20019268:	9782                	jalr	a5
2001926a:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:120 (discriminator 4)
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2001926e:	fe042703          	lw	a4,-32(s0)
20019272:	fdc42783          	lw	a5,-36(s0)
20019276:	02f707b3          	mul	a5,a4,a5
2001927a:	873e                	mv	a4,a5
2001927c:	fec42783          	lw	a5,-20(s0)
20019280:	43dc                	lw	a5,4(a5)
20019282:	02f757b3          	divu	a5,a4,a5
20019286:	fcf42c23          	sw	a5,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 4)

    for(volatile long x = 0; x < cycles_to_wait; x++)
2001928a:	fc042a23          	sw	zero,-44(s0)
2001928e:	a039                	j	2001929c <pre_rate_change_callback_func+0xc2>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:123 (discriminator 3)
        __asm__("nop");
20019290:	0001                	nop
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 3)
    for(volatile long x = 0; x < cycles_to_wait; x++)
20019292:	fd442783          	lw	a5,-44(s0)
20019296:	0785                	addi	a5,a5,1
20019298:	fcf42a23          	sw	a5,-44(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 1)
2001929c:	fd442783          	lw	a5,-44(s0)
200192a0:	fd842703          	lw	a4,-40(s0)
200192a4:	fee7c6e3          	blt	a5,a4,20019290 <pre_rate_change_callback_func+0xb6>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:124
}
200192a8:	0001                	nop
200192aa:	50f2                	lw	ra,60(sp)
200192ac:	5462                	lw	s0,56(sp)
200192ae:	6121                	addi	sp,sp,64
200192b0:	8082                	ret

200192b2 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:127

static void post_rate_change_callback_func(void *priv)
{
200192b2:	7179                	addi	sp,sp,-48
200192b4:	d606                	sw	ra,44(sp)
200192b6:	d422                	sw	s0,40(sp)
200192b8:	1800                	addi	s0,sp,48
200192ba:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:128
    struct __metal_driver_sifive_uart0 *uart = priv;
200192be:	fdc42783          	lw	a5,-36(s0)
200192c2:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:129
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
200192c6:	fec42703          	lw	a4,-20(s0)
200192ca:	fec42783          	lw	a5,-20(s0)
200192ce:	43dc                	lw	a5,4(a5)
200192d0:	85be                	mv	a1,a5
200192d2:	853a                	mv	a0,a4
200192d4:	9c8fc0ef          	jal	ra,2001549c <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:130
}
200192d8:	0001                	nop
200192da:	50b2                	lw	ra,44(sp)
200192dc:	5422                	lw	s0,40(sp)
200192de:	6145                	addi	sp,sp,48
200192e0:	8082                	ret

200192e2 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:133

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate)
{
200192e2:	7139                	addi	sp,sp,-64
200192e4:	de06                	sw	ra,60(sp)
200192e6:	dc22                	sw	s0,56(sp)
200192e8:	0080                	addi	s0,sp,64
200192ea:	fca42623          	sw	a0,-52(s0)
200192ee:	fcb42423          	sw	a1,-56(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:134
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
200192f2:	fcc42783          	lw	a5,-52(s0)
200192f6:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:135
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200192fa:	fcc42503          	lw	a0,-52(s0)
200192fe:	c07ff0ef          	jal	ra,20018f04 <__metal_driver_sifive_uart0_clock>
20019302:	fea42423          	sw	a0,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:136
    struct __metal_driver_sifive_gpio0 *pinmux = __metal_driver_sifive_uart0_pinmux(guart);
20019306:	fcc42503          	lw	a0,-52(s0)
2001930a:	c43ff0ef          	jal	ra,20018f4c <__metal_driver_sifive_uart0_pinmux>
2001930e:	fea42223          	sw	a0,-28(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:138

    if(clock != NULL) {
20019312:	fe842783          	lw	a5,-24(s0)
20019316:	c7b9                	beqz	a5,20019364 <__metal_driver_sifive_uart0_init+0x82>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:139
        uart->pre_rate_change_callback.callback = &pre_rate_change_callback_func;
20019318:	fec42783          	lw	a5,-20(s0)
2001931c:	20019737          	lui	a4,0x20019
20019320:	1da70713          	addi	a4,a4,474 # 200191da <pre_rate_change_callback_func>
20019324:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:140
        uart->pre_rate_change_callback.priv = guart;
20019326:	fec42783          	lw	a5,-20(s0)
2001932a:	fcc42703          	lw	a4,-52(s0)
2001932e:	c7d8                	sw	a4,12(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:141
        metal_clock_register_pre_rate_change_callback(clock, &(uart->pre_rate_change_callback));
20019330:	fec42783          	lw	a5,-20(s0)
20019334:	07a1                	addi	a5,a5,8
20019336:	85be                	mv	a1,a5
20019338:	fe842503          	lw	a0,-24(s0)
2001933c:	2abd                	jal	200194ba <metal_clock_register_pre_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:143

        uart->post_rate_change_callback.callback = &post_rate_change_callback_func;
2001933e:	fec42783          	lw	a5,-20(s0)
20019342:	20019737          	lui	a4,0x20019
20019346:	2b270713          	addi	a4,a4,690 # 200192b2 <post_rate_change_callback_func>
2001934a:	cbd8                	sw	a4,20(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:144
        uart->post_rate_change_callback.priv = guart;
2001934c:	fec42783          	lw	a5,-20(s0)
20019350:	fcc42703          	lw	a4,-52(s0)
20019354:	cf98                	sw	a4,24(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:145
        metal_clock_register_post_rate_change_callback(clock, &(uart->post_rate_change_callback));
20019356:	fec42783          	lw	a5,-20(s0)
2001935a:	07d1                	addi	a5,a5,20
2001935c:	85be                	mv	a1,a5
2001935e:	fe842503          	lw	a0,-24(s0)
20019362:	2269                	jal	200194ec <metal_clock_register_post_rate_change_callback>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:148
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20019364:	fec42783          	lw	a5,-20(s0)
20019368:	fc842583          	lw	a1,-56(s0)
2001936c:	853e                	mv	a0,a5
2001936e:	92efc0ef          	jal	ra,2001549c <metal_uart_set_baud_rate>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:150

    if (pinmux != NULL) {
20019372:	fe442783          	lw	a5,-28(s0)
20019376:	cb95                	beqz	a5,200193aa <__metal_driver_sifive_uart0_init+0xc8>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:151
        long pinmux_output_selector = __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20019378:	fcc42503          	lw	a0,-52(s0)
2001937c:	c11ff0ef          	jal	ra,20018f8c <__metal_driver_sifive_uart0_pinmux_output_selector>
20019380:	87aa                	mv	a5,a0
20019382:	fef42023          	sw	a5,-32(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:152
        long pinmux_source_selector = __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20019386:	fcc42503          	lw	a0,-52(s0)
2001938a:	c43ff0ef          	jal	ra,20018fcc <__metal_driver_sifive_uart0_pinmux_source_selector>
2001938e:	87aa                	mv	a5,a0
20019390:	fcf42e23          	sw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:153
        pinmux->gpio.vtable->enable_io(
20019394:	fe442783          	lw	a5,-28(s0)
20019398:	439c                	lw	a5,0(a5)
2001939a:	53dc                	lw	a5,36(a5)
2001939c:	fdc42603          	lw	a2,-36(s0)
200193a0:	fe042583          	lw	a1,-32(s0)
200193a4:	fe442503          	lw	a0,-28(s0)
200193a8:	9782                	jalr	a5
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/sifive_uart0.c:159
            (struct metal_gpio *) pinmux,
            pinmux_output_selector,
            pinmux_source_selector
        );
    }
}
200193aa:	0001                	nop
200193ac:	50f2                	lw	ra,60(sp)
200193ae:	5462                	lw	s0,56(sp)
200193b0:	6121                	addi	sp,sp,64
200193b2:	8082                	ret

200193b4 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:48
typedef struct _metal_clock_callback_t metal_clock_callback;

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void _metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
200193b4:	7179                	addi	sp,sp,-48
200193b6:	d606                	sw	ra,44(sp)
200193b8:	d422                	sw	s0,40(sp)
200193ba:	1800                	addi	s0,sp,48
200193bc:	fca42e23          	sw	a0,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:49
    const metal_clock_callback *current = list;
200193c0:	fdc42783          	lw	a5,-36(s0)
200193c4:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:50
    while (current) {
200193c8:	a831                	j	200193e4 <_metal_clock_call_all_callbacks+0x30>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:51
        current->callback(current->priv);
200193ca:	fec42783          	lw	a5,-20(s0)
200193ce:	4398                	lw	a4,0(a5)
200193d0:	fec42783          	lw	a5,-20(s0)
200193d4:	43dc                	lw	a5,4(a5)
200193d6:	853e                	mv	a0,a5
200193d8:	9702                	jalr	a4
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:52
        current = current->_next;
200193da:	fec42783          	lw	a5,-20(s0)
200193de:	479c                	lw	a5,8(a5)
200193e0:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:50
    while (current) {
200193e4:	fec42783          	lw	a5,-20(s0)
200193e8:	f3ed                	bnez	a5,200193ca <_metal_clock_call_all_callbacks+0x16>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:54
    }
}
200193ea:	0001                	nop
200193ec:	50b2                	lw	ra,44(sp)
200193ee:	5422                	lw	s0,40(sp)
200193f0:	6145                	addi	sp,sp,48
200193f2:	8082                	ret

200193f4 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:59

/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *_metal_clock_append_to_callbacks(metal_clock_callback *list, metal_clock_callback *const cb) {
200193f4:	7179                	addi	sp,sp,-48
200193f6:	d622                	sw	s0,44(sp)
200193f8:	1800                	addi	s0,sp,48
200193fa:	fca42e23          	sw	a0,-36(s0)
200193fe:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:60
    cb->_next = NULL;
20019402:	fd842783          	lw	a5,-40(s0)
20019406:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:62

    if (!list) {
2001940a:	fdc42783          	lw	a5,-36(s0)
2001940e:	e781                	bnez	a5,20019416 <_metal_clock_append_to_callbacks+0x22>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:63
        return cb;
20019410:	fd842783          	lw	a5,-40(s0)
20019414:	a035                	j	20019440 <_metal_clock_append_to_callbacks+0x4c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:66
    }

    metal_clock_callback *current = list;
20019416:	fdc42783          	lw	a5,-36(s0)
2001941a:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68

    while ((current->_next) != NULL) {
2001941e:	a031                	j	2001942a <_metal_clock_append_to_callbacks+0x36>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:69
        current = current->_next;
20019420:	fec42783          	lw	a5,-20(s0)
20019424:	479c                	lw	a5,8(a5)
20019426:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:68
    while ((current->_next) != NULL) {
2001942a:	fec42783          	lw	a5,-20(s0)
2001942e:	479c                	lw	a5,8(a5)
20019430:	fbe5                	bnez	a5,20019420 <_metal_clock_append_to_callbacks+0x2c>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:72
    }

    current->_next = cb;
20019432:	fec42783          	lw	a5,-20(s0)
20019436:	fd842703          	lw	a4,-40(s0)
2001943a:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:74

    return list;
2001943c:	fdc42783          	lw	a5,-36(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:75
}
20019440:	853e                	mv	a0,a5
20019442:	5432                	lw	s0,44(sp)
20019444:	6145                	addi	sp,sp,48
20019446:	8082                	ret

20019448 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:105
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) { return clk->vtable->get_rate_hz(clk); }
20019448:	1101                	addi	sp,sp,-32
2001944a:	ce06                	sw	ra,28(sp)
2001944c:	cc22                	sw	s0,24(sp)
2001944e:	1000                	addi	s0,sp,32
20019450:	fea42623          	sw	a0,-20(s0)
20019454:	fec42783          	lw	a5,-20(s0)
20019458:	439c                	lw	a5,0(a5)
2001945a:	439c                	lw	a5,0(a5)
2001945c:	fec42503          	lw	a0,-20(s0)
20019460:	9782                	jalr	a5
20019462:	87aa                	mv	a5,a0
20019464:	853e                	mv	a0,a5
20019466:	40f2                	lw	ra,28(sp)
20019468:	4462                	lw	s0,24(sp)
2001946a:	6105                	addi	sp,sp,32
2001946c:	8082                	ret

2001946e <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:122
 *
 * Prior to and after the rate change of the clock, this will call the registered
 * pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz)
{
2001946e:	7179                	addi	sp,sp,-48
20019470:	d606                	sw	ra,44(sp)
20019472:	d422                	sw	s0,40(sp)
20019474:	1800                	addi	s0,sp,48
20019476:	fca42e23          	sw	a0,-36(s0)
2001947a:	fcb42c23          	sw	a1,-40(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:123
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
2001947e:	fdc42783          	lw	a5,-36(s0)
20019482:	43dc                	lw	a5,4(a5)
20019484:	853e                	mv	a0,a5
20019486:	f2fff0ef          	jal	ra,200193b4 <_metal_clock_call_all_callbacks>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:125

    long out = clk->vtable->set_rate_hz(clk, hz);
2001948a:	fdc42783          	lw	a5,-36(s0)
2001948e:	439c                	lw	a5,0(a5)
20019490:	43dc                	lw	a5,4(a5)
20019492:	fd842583          	lw	a1,-40(s0)
20019496:	fdc42503          	lw	a0,-36(s0)
2001949a:	9782                	jalr	a5
2001949c:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:127

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
200194a0:	fdc42783          	lw	a5,-36(s0)
200194a4:	479c                	lw	a5,8(a5)
200194a6:	853e                	mv	a0,a5
200194a8:	f0dff0ef          	jal	ra,200193b4 <_metal_clock_call_all_callbacks>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:129

    return out;
200194ac:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:130
}
200194b0:	853e                	mv	a0,a5
200194b2:	50b2                	lw	ra,44(sp)
200194b4:	5422                	lw	s0,40(sp)
200194b6:	6145                	addi	sp,sp,48
200194b8:	8082                	ret

200194ba <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:139
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_pre_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
200194ba:	1101                	addi	sp,sp,-32
200194bc:	ce06                	sw	ra,28(sp)
200194be:	cc22                	sw	s0,24(sp)
200194c0:	1000                	addi	s0,sp,32
200194c2:	fea42623          	sw	a0,-20(s0)
200194c6:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:140
    clk->_pre_rate_change_callback = _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
200194ca:	fec42783          	lw	a5,-20(s0)
200194ce:	43dc                	lw	a5,4(a5)
200194d0:	fe842583          	lw	a1,-24(s0)
200194d4:	853e                	mv	a0,a5
200194d6:	f1fff0ef          	jal	ra,200193f4 <_metal_clock_append_to_callbacks>
200194da:	872a                	mv	a4,a0
200194dc:	fec42783          	lw	a5,-20(s0)
200194e0:	c3d8                	sw	a4,4(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:141
}
200194e2:	0001                	nop
200194e4:	40f2                	lw	ra,28(sp)
200194e6:	4462                	lw	s0,24(sp)
200194e8:	6105                	addi	sp,sp,32
200194ea:	8082                	ret

200194ec <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:150
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_post_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
200194ec:	1101                	addi	sp,sp,-32
200194ee:	ce06                	sw	ra,28(sp)
200194f0:	cc22                	sw	s0,24(sp)
200194f2:	1000                	addi	s0,sp,32
200194f4:	fea42623          	sw	a0,-20(s0)
200194f8:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:151
    clk->_post_rate_change_callback = _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
200194fc:	fec42783          	lw	a5,-20(s0)
20019500:	479c                	lw	a5,8(a5)
20019502:	fe842583          	lw	a1,-24(s0)
20019506:	853e                	mv	a0,a5
20019508:	eedff0ef          	jal	ra,200193f4 <_metal_clock_append_to_callbacks>
2001950c:	872a                	mv	a4,a0
2001950e:	fec42783          	lw	a5,-20(s0)
20019512:	c798                	sw	a4,8(a5)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/clock.h:152
}
20019514:	0001                	nop
20019516:	40f2                	lw	ra,28(sp)
20019518:	4462                	lw	s0,24(sp)
2001951a:	6105                	addi	sp,sp,32
2001951c:	8082                	ret

2001951e <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/metal/cpu.h:208
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt* metal_cpu_interrupt_controller(struct metal_cpu *cpu)
{ return cpu->vtable->controller_interrupt(cpu); }
2001951e:	1101                	addi	sp,sp,-32
20019520:	ce06                	sw	ra,28(sp)
20019522:	cc22                	sw	s0,24(sp)
20019524:	1000                	addi	s0,sp,32
20019526:	fea42623          	sw	a0,-20(s0)
2001952a:	fec42783          	lw	a5,-20(s0)
2001952e:	439c                	lw	a5,0(a5)
20019530:	57dc                	lw	a5,44(a5)
20019532:	fec42503          	lw	a0,-20(s0)
20019536:	9782                	jalr	a5
20019538:	87aa                	mv	a5,a0
2001953a:	853e                	mv	a0,a5
2001953c:	40f2                	lw	ra,28(sp)
2001953e:	4462                	lw	s0,24(sp)
20019540:	6105                	addi	sp,sp,32
20019542:	8082                	ret

20019544 <metal_cpu_get>:
metal_cpu_get():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:8

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu* metal_cpu_get(unsigned int hartid)
{
20019544:	1101                	addi	sp,sp,-32
20019546:	ce22                	sw	s0,28(sp)
20019548:	1000                	addi	s0,sp,32
2001954a:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:9
    if (hartid < __METAL_DT_MAX_HARTS) {
2001954e:	fec42783          	lw	a5,-20(s0)
20019552:	eb99                	bnez	a5,20019568 <metal_cpu_get+0x24>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:10
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20019554:	800017b7          	lui	a5,0x80001
20019558:	fec42703          	lw	a4,-20(s0)
2001955c:	070a                	slli	a4,a4,0x2
2001955e:	ad078793          	addi	a5,a5,-1328 # 80000ad0 <metal_segment_heap_target_end+0xfffff2a4>
20019562:	97ba                	add	a5,a5,a4
20019564:	439c                	lw	a5,0(a5)
20019566:	a011                	j	2001956a <metal_cpu_get+0x26>
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:12
    }   
    return NULL;
20019568:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:13
}
2001956a:	853e                	mv	a0,a5
2001956c:	4472                	lw	s0,28(sp)
2001956e:	6105                	addi	sp,sp,32
20019570:	8082                	ret

20019572 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:16

int metal_cpu_get_current_hartid()
{
20019572:	1101                	addi	sp,sp,-32
20019574:	ce22                	sw	s0,28(sp)
20019576:	1000                	addi	s0,sp,32
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:19
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r" (mhartid));
20019578:	f14027f3          	csrr	a5,mhartid
2001957c:	fef42623          	sw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:20
    return mhartid;
20019580:	fec42783          	lw	a5,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/cpu.c:22
#endif
}
20019584:	853e                	mv	a0,a5
20019586:	4472                	lw	s0,28(sp)
20019588:	6105                	addi	sp,sp,32
2001958a:	8082                	ret

2001958c <metal_shutdown>:
metal_shutdown():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message("There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code)
{
2001958c:	1101                	addi	sp,sp,-32
2001958e:	ce22                	sw	s0,28(sp)
20019590:	1000                	addi	s0,sp,32
20019592:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
      __asm__ volatile ("nop");
20019596:	0001                	nop
20019598:	bffd                	j	20019596 <metal_shutdown+0xa>
	...

20019600 <__metal_vector_table>:
IRQ_0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20019600:	807fc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019604 <IRQ_1>:
IRQ_1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20019604:	803fc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019608 <IRQ_2>:
IRQ_2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20019608:	ffefc06f          	j	20015e06 <metal_interrupt_vector_handler>

2001960c <IRQ_3>:
IRQ_3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2001960c:	829fc06f          	j	20015e34 <metal_software_interrupt_vector_handler>

20019610 <IRQ_4>:
IRQ_4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20019610:	ff6fc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019614 <IRQ_5>:
IRQ_5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20019614:	ff2fc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019618 <IRQ_6>:
IRQ_6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20019618:	feefc06f          	j	20015e06 <metal_interrupt_vector_handler>

2001961c <IRQ_7>:
IRQ_7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2001961c:	913fc06f          	j	20015f2e <metal_timer_interrupt_vector_handler>

20019620 <IRQ_8>:
IRQ_8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20019620:	fe6fc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019624 <IRQ_9>:
IRQ_9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20019624:	fe2fc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019628 <IRQ_10>:
IRQ_10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20019628:	fdefc06f          	j	20015e06 <metal_interrupt_vector_handler>

2001962c <IRQ_11>:
IRQ_11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2001962c:	fdafc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019630 <IRQ_12>:
IRQ_12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20019630:	fd6fc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019634 <IRQ_13>:
IRQ_13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20019634:	fd2fc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019638 <IRQ_14>:
IRQ_14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20019638:	fcefc06f          	j	20015e06 <metal_interrupt_vector_handler>

2001963c <IRQ_15>:
IRQ_15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2001963c:	fcafc06f          	j	20015e06 <metal_interrupt_vector_handler>

20019640 <IRQ_LC0>:
IRQ_LC0():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20019640:	bbbfc06f          	j	200161fa <metal_lc0_interrupt_vector_handler>

20019644 <IRQ_LC1>:
IRQ_LC1():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20019644:	c4dfc06f          	j	20016290 <metal_lc1_interrupt_vector_handler>

20019648 <IRQ_LC2>:
IRQ_LC2():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20019648:	cdffc06f          	j	20016326 <metal_lc2_interrupt_vector_handler>

2001964c <IRQ_LC3>:
IRQ_LC3():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2001964c:	d71fc06f          	j	200163bc <metal_lc3_interrupt_vector_handler>

20019650 <IRQ_LC4>:
IRQ_LC4():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20019650:	e03fc06f          	j	20016452 <metal_lc4_interrupt_vector_handler>

20019654 <IRQ_LC5>:
IRQ_LC5():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20019654:	e95fc06f          	j	200164e8 <metal_lc5_interrupt_vector_handler>

20019658 <IRQ_LC6>:
IRQ_LC6():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20019658:	f27fc06f          	j	2001657e <metal_lc6_interrupt_vector_handler>

2001965c <IRQ_LC7>:
IRQ_LC7():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2001965c:	fb9fc06f          	j	20016614 <metal_lc7_interrupt_vector_handler>

20019660 <IRQ_LC8>:
IRQ_LC8():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20019660:	84afd06f          	j	200166aa <metal_lc8_interrupt_vector_handler>

20019664 <IRQ_LC9>:
IRQ_LC9():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20019664:	8dcfd06f          	j	20016740 <metal_lc9_interrupt_vector_handler>

20019668 <IRQ_LC10>:
IRQ_LC10():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20019668:	96efd06f          	j	200167d6 <metal_lc10_interrupt_vector_handler>

2001966c <IRQ_LC11>:
IRQ_LC11():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2001966c:	a00fd06f          	j	2001686c <metal_lc11_interrupt_vector_handler>

20019670 <IRQ_LC12>:
IRQ_LC12():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20019670:	a92fd06f          	j	20016902 <metal_lc12_interrupt_vector_handler>

20019674 <IRQ_LC13>:
IRQ_LC13():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20019674:	b24fd06f          	j	20016998 <metal_lc13_interrupt_vector_handler>

20019678 <IRQ_LC14>:
IRQ_LC14():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20019678:	bb6fd06f          	j	20016a2e <metal_lc14_interrupt_vector_handler>

2001967c <IRQ_LC15>:
IRQ_LC15():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2001967c:	c48fd06f          	j	20016ac4 <metal_lc15_interrupt_vector_handler>

20019680 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:178
{
20019680:	1101                	addi	sp,sp,-32
20019682:	ce22                	sw	s0,28(sp)
20019684:	1000                	addi	s0,sp,32
20019686:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:179
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2001968a:	fec42703          	lw	a4,-20(s0)
2001968e:	800007b7          	lui	a5,0x80000
20019692:	0a078793          	addi	a5,a5,160 # 800000a0 <metal_segment_heap_target_end+0xffffe874>
20019696:	00f71763          	bne	a4,a5,200196a4 <__metal_driver_fixed_clock_rate+0x24>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:180
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2001969a:	00f427b7          	lui	a5,0xf42
2001969e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
200196a2:	a099                	j	200196e8 <__metal_driver_fixed_clock_rate+0x68>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:182
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
200196a4:	fec42703          	lw	a4,-20(s0)
200196a8:	800007b7          	lui	a5,0x80000
200196ac:	0ac78793          	addi	a5,a5,172 # 800000ac <metal_segment_heap_target_end+0xffffe880>
200196b0:	00f71763          	bne	a4,a5,200196be <__metal_driver_fixed_clock_rate+0x3e>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:183
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
200196b4:	044aa7b7          	lui	a5,0x44aa
200196b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
200196bc:	a035                	j	200196e8 <__metal_driver_fixed_clock_rate+0x68>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:185
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
200196be:	fec42703          	lw	a4,-20(s0)
200196c2:	800007b7          	lui	a5,0x80000
200196c6:	0b878793          	addi	a5,a5,184 # 800000b8 <metal_segment_heap_target_end+0xffffe88c>
200196ca:	00f71463          	bne	a4,a5,200196d2 <__metal_driver_fixed_clock_rate+0x52>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:186
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
200196ce:	67a1                	lui	a5,0x8
200196d0:	a821                	j	200196e8 <__metal_driver_fixed_clock_rate+0x68>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:188
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
200196d2:	fec42703          	lw	a4,-20(s0)
200196d6:	800007b7          	lui	a5,0x80000
200196da:	0c478793          	addi	a5,a5,196 # 800000c4 <metal_segment_heap_target_end+0xffffe898>
200196de:	00f71463          	bne	a4,a5,200196e6 <__metal_driver_fixed_clock_rate+0x66>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:189
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
200196e2:	67a1                	lui	a5,0x8
200196e4:	a011                	j	200196e8 <__metal_driver_fixed_clock_rate+0x68>
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:192
		return 0;
200196e6:	4781                	li	a5,0
/home/albertojor/GitHub/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:194
}
200196e8:	853e                	mv	a0,a5
200196ea:	4472                	lw	s0,28(sp)
200196ec:	6105                	addi	sp,sp,32
200196ee:	8082                	ret

200196f0 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
#include <metal/drivers/fixed-clock.h>
#include <stddef.h>
#include <metal/machine.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk)
{
200196f0:	1101                	addi	sp,sp,-32
200196f2:	ce06                	sw	ra,28(sp)
200196f4:	cc22                	sw	s0,24(sp)
200196f6:	1000                	addi	s0,sp,32
200196f8:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
    return __metal_driver_fixed_clock_rate(gclk);
200196fc:	fec42503          	lw	a0,-20(s0)
20019700:	3741                	jal	20019680 <__metal_driver_fixed_clock_rate>
20019702:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:15
}
20019704:	853e                	mv	a0,a5
20019706:	40f2                	lw	ra,28(sp)
20019708:	4462                	lw	s0,24(sp)
2001970a:	6105                	addi	sp,sp,32
2001970c:	8082                	ret

2001970e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk, long target_hz)
{
2001970e:	1101                	addi	sp,sp,-32
20019710:	ce06                	sw	ra,28(sp)
20019712:	cc22                	sw	s0,24(sp)
20019714:	1000                	addi	s0,sp,32
20019716:	fea42623          	sw	a0,-20(s0)
2001971a:	feb42423          	sw	a1,-24(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2001971e:	fec42503          	lw	a0,-20(s0)
20019722:	37f9                	jal	200196f0 <__metal_driver_fixed_clock_get_rate_hz>
20019724:	87aa                	mv	a5,a0
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:20
}
20019726:	853e                	mv	a0,a5
20019728:	40f2                	lw	ra,28(sp)
2001972a:	4462                	lw	s0,24(sp)
2001972c:	6105                	addi	sp,sp,32
2001972e:	8082                	ret

20019730 <_exit>:
_exit():
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:5
#include <metal/shutdown.h>

void
_exit(int exit_status)
{
20019730:	1101                	addi	sp,sp,-32
20019732:	ce06                	sw	ra,28(sp)
20019734:	cc22                	sw	s0,24(sp)
20019736:	1000                	addi	s0,sp,32
20019738:	fea42623          	sw	a0,-20(s0)
/home/albertojor/GitHub/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:6
  metal_shutdown(exit_status);
2001973c:	fec42503          	lw	a0,-20(s0)
20019740:	e4dff0ef          	jal	ra,2001958c <metal_shutdown>
